using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using DevExpress.Web;
using System.Runtime.Serialization;

public partial class Reunioes_ItensPauta_ResumoReuniao : System.Web.UI.Page
{
    dados cDados;

    protected int codigoReuniao;
    protected int alturaPrincipal;

    protected void Page_Init(object sender, EventArgs e)
    {
        codigoReuniao = int.Parse(Request.QueryString["cr"]);
        alturaPrincipal = int.Parse(Request.QueryString["al"]);

        cDados = CdadosUtil.GetCdados(null);
        cDados.aplicaEstiloVisual(this);
        DefineStringConexao();
    }

    private void DefineStringConexao()
    {
        string connectionString = cDados.classeDados.getStringConexao();
        sdsParticipantesEvento.ConnectionString = connectionString;
        sdsItensEvento.ConnectionString = connectionString;
        sdsReuniao.ConnectionString = connectionString;
    }

    protected void Page_Load(object sender, EventArgs e)
    {
        DefineAlturaGrids();
    }

    private void DefineAlturaGrids()
    {
        int alturasGrids = alturaPrincipal - 340;
        gvItensEvento.Settings.VerticalScrollableHeight = alturasGrids;
        gvParticipantesEvento.Settings.VerticalScrollableHeight = alturasGrids;
    }

    protected void callback_Callback(object source, DevExpress.Web.CallbackEventArgs e)
    {
    }

    protected void gvParticipantesEvento_CustomCallback(object sender, DevExpress.Web.ASPxGridViewCustomCallbackEventArgs e)
    {
        string[] parametros = e.Parameters.Split(';');
        if (parametros.Length == 0)
            return;

        string acao = parametros[0];
        switch (acao)
        {
            case "presenca_participante":
                string codigoParticipante = parametros[1];
                string participantePresente = parametros[2];
                string tipoParticipante = gvParticipantesEvento.GetRowValuesByKeyValue(
                    codigoParticipante, "TipoParticipante").ToString();
                string comandoSql;
                if (tipoParticipante.ToUpper() == "U")
                {
                    comandoSql = string.Format(@"
UPDATE [ParticipanteEvento]
   SET [IndicaParticipantePresente] = '{2}'
 WHERE [CodigoParticipante] = {1}
   AND [CodigoEvento] = {0}"
                    , codigoReuniao
                    , codigoParticipante
                    , participantePresente);
                }
                else
                {
                    comandoSql = string.Format(@"
UPDATE [ConvidadoExternoEvento]
   SET [IndicaConvidadoPresente] = '{1}'
 WHERE [CodigoConvidadoEvento] = {0}"
                    , codigoParticipante
                    , participantePresente);
                }
                int regAfetados = 0;
                cDados.execSQL(comandoSql, ref regAfetados);
                break;
        }
    }

    protected void gvParticipantesEvento_CommandButtonInitialize(object sender, DevExpress.Web.ASPxGridViewCommandButtonEventArgs e)
    {
        if (!gvParticipantesEvento.IsCallback && e.ButtonType == ColumnCommandButtonType.SelectCheckbox)
        {
            string indicaParticipantePresente = gvParticipantesEvento.GetRowValues(
                e.VisibleIndex, "IndicaParticipantePresente").ToString();
            if (indicaParticipantePresente.ToUpper() == "S")
                gvParticipantesEvento.Selection.SelectRow(e.VisibleIndex);
            else
                gvParticipantesEvento.Selection.UnselectRow(e.VisibleIndex);
        }
    }
}