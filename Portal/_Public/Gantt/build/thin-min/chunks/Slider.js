/*!
 *
 * Bryntum Gantt 5.5.0
 *
 * Copyright(c) 2023 Bryntum AB
 * https://bryntum.com/contact
 * https://bryntum.com/license
 *
 */
import{Widget as m,Rectangle as g,Tooltip as v,ObjectHelper as d}from"./Editor.js";const c={ArrowUp:1,ArrowDown:1,ArrowLeft:1,ArrowRight:1};class o extends m{static get $name(){return"Slider"}static get type(){return"slider"}static get configurable(){return{text:null,showValue:!0,showTooltip:!1,min:0,max:100,step:1,value:50,unit:null,thumbSize:20,tooltip:{$config:["lazy","nullify"],value:{type:"tooltip",align:"b-t",anchor:!1,axisLock:!0}},localizableProperties:["text"],triggerChangeOnInput:null,defaultBindProperty:"value"}}compose(){const{id:t,min:e,max:i,showValue:n,step:r,text:l,value:a,unit:u="",disabled:s}=this,h=`${t}-input`,p=!!(l||n);return{class:{"b-has-label":p,"b-text":p,"b-disabled":s},children:{input:{tag:"input",type:"range",id:h,reference:"input",disabled:s,min:e,max:i,step:r,value:a,listeners:{input:"onInternalInput",change:"onInternalChange",mouseover:"onInternalMouseOver",mouseout:"onInternalMouseOut"}},label:{tag:"label",for:h,html:n?l?`${l} (${a}${u})`:a+u:l}}}}get focusElement(){return this.input}get percentProgress(){return(this.value-this.min)/(this.max-this.min)*100}onInternalKeyDown(t){!this.readOnly&&c[t.key]&&t.stopImmediatePropagation()}onInternalChange(){this.updateUI(),this.triggerChange(!0),this.trigger("action",{value:this.value})}onInternalInput(){const t=this;if(t.readOnly){t.input.value=t.value;return}t.value=parseInt(t.input.value,10),t.trigger("input",{value:t.value}),t.triggerChangeOnInput&&t.triggerChange(t)}onInternalMouseOver(){var t;const e=this,i=e.rtl?100-e.percentProgress:e.percentProgress;(t=e.tooltip)===null||t===void 0||t.showBy({target:g.from(e.input).inflate(e.thumbSize/2,-e.thumbSize/2),align:`b-t${Math.round(i)}`})}onInternalMouseOut(){var t;(t=this.tooltip)===null||t===void 0||t.hide()}triggerChange(t){this.triggerFieldChange({value:this.value,valid:!0,userAction:t})}updateMax(t){const e=this;e.input&&e._value>t&&(e.value=t,e.trigger("input",{value:e.value}))}updateMin(t){const e=this;e.input&&e._value<t&&(e.value=t,e.trigger("input",{value:e.value}))}changeTooltip(t,e){var i;return t&&(t.owner=this),this.showTooltip?v.reconfigure(e,t,{owner:this,defaults:{forElement:this.input,html:String(this.value)+((i=this.unit)!=null?i:"")}}):null}changeValue(t){const e=this,{min:i,step:n}=e;return t=Math.min(Math.max(t,i),e.max),t>i?i+d.roundTo(t-i,n):d.roundTo(t,n)}updateValue(t){var r;const e=this,{input:i,_tooltip:n}=e;n&&(n.html=e.value+((r=e.unit)!=null?r:"")),i&&i.value!==String(t)&&(i.value=t,e.triggerChange(!1)),e.updateUI()}updateUI(){var t,e;const i=this;!((t=i._tooltip)===null||t===void 0)&&t.isVisible&&((e=i._tooltip)===null||e===void 0||e.alignTo({target:g.from(i.input).inflate(i.thumbSize/2,-i.thumbSize/2),align:`b-t${Math.round(i.percentProgress)}`}))}}o.initClass(),o._$name="Slider";export{o as Slider};
//# sourceMappingURL=Slider.js.map
