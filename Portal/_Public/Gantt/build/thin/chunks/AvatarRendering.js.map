{"version":3,"file":"AvatarRendering.js","sources":["../../../../Core/lib/Core/data/stm/action/ActionBase.js","../../../../Core/lib/Core/data/stm/state/StateBase.js","../../../../Core/lib/Core/data/stm/Props.js","../../../../Core/lib/Core/data/stm/state/Registry.js","../../../../Core/lib/Core/data/stm/Helpers.js","../../../../Core/lib/Core/data/stm/state/DisabledState.js","../../../../Core/lib/Core/data/stm/Transaction.js","../../../../Core/lib/Core/data/stm/state/ReadyState.js","../../../../Core/lib/Core/data/stm/state/RecordingState.js","../../../../Core/lib/Core/data/stm/state/RestoringState.js","../../../../Core/lib/Core/data/stm/state/AutoReadyState.js","../../../../Core/lib/Core/data/stm/state/AutoRecordingState.js","../../../../Core/lib/Core/data/stm/action/UpdateAction.js","../../../../Core/lib/Core/data/stm/action/InsertChildAction.js","../../../../Core/lib/Core/data/stm/action/RemoveChildAction.js","../../../../Core/lib/Core/data/stm/action/AddAction.js","../../../../Core/lib/Core/data/stm/action/InsertAction.js","../../../../Core/lib/Core/data/stm/action/RemoveAction.js","../../../../Core/lib/Core/data/stm/action/RemoveAllAction.js","../../../../Core/lib/Core/data/stm/StateTrackingManager.js","../../../../Core/lib/Core/mixin/Finalizable.js","../../../../Core/lib/Core/util/drag/DragContext.js","../../../../Core/lib/Core/util/drag/DragProxy.js","../../../../Core/lib/Core/mixin/Draggable.js","../../../../Core/lib/Core/mixin/Droppable.js","../../../../Core/lib/Core/widget/ColorField.js","../../../../Core/lib/Core/widget/SlideToggle.js","../../../../Core/lib/Core/widget/util/AvatarRendering.js"],"sourcesContent":["/**\n * @module Core/data/stm/action/ActionBase\n */\nimport Base from '../../../Base.js';\n\nconst throwAbstractMethodCall = () => {\n    throw new Error('Abstract method call!');\n};\n\n/**\n * Base class for STM actions.\n *\n * @abstract\n */\nexport default class ActionBase extends Base {\n\n    /**\n     * Gets the type of the action (stringified class name).\n     * @readonly\n     * @property {String}\n     */\n    get type() {\n        return this.constructor.name;\n    }\n\n    /**\n     * Undoes an action\n     */\n    undo() {\n        throwAbstractMethodCall();\n    }\n\n    /**\n     * Redoes an action\n     */\n    redo() {\n        throwAbstractMethodCall();\n    }\n}\n","/**\n * @module Core/data/stm/state/StateBase\n */\nimport Base from '../../../Base.js';\n\nexport const throwAbstractMethodCall = () => {\n    throw new Error('Abstract method call!');\n};\n\nexport const throwInvalidMethodCall = () => {\n    throw new Error('Method cannot be called at this state!');\n};\n\n/**\n * Abstract class for STM states\n *\n * Every on* method should return a state for the STM which it should switch to\n * or throw an exception that this call at this state is illegal.\n *\n * Interface of this class mirrors interface of {@link Core.data.stm.StateTrackingManager}.\n *\n * @abstract\n */\nexport default class StateBase extends Base {\n\n    canUndo(stm) {\n        throwAbstractMethodCall();\n    }\n\n    canRedo(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onUndo(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onRedo(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onStartTransaction(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onStopTransaction(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onStopTransactionDelayed(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onRejectTransaction(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onEnable(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onDisable(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onAutoRecordOn(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onAutoRecordOff(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onResetQueue(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onModelUpdate(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onStoreModelAdd(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onStoreModelInsert(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onStoreModelRemove(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onStoreModelRemoveAll(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onModelInsertChild(stm) {\n        throwAbstractMethodCall();\n    }\n\n    onModelRemoveChild(stm) {\n        throwAbstractMethodCall();\n    }\n}\n","/**\n * @module Core/data/stm/Props.js\n * @internal\n */\n\nexport const STATE_PROP             = Symbol('STATE_PROP');\nexport const STORES_PROP            = Symbol('STORES_PROP');\nexport const QUEUE_PROP             = Symbol('QUEUE_PROP');\nexport const POS_PROP               = Symbol('POS_PROP');\nexport const TRANSACTION_PROP       = Symbol('TRANSACTION_PROP');\nexport const TRANSACTION_TIMER_PROP = Symbol('TRANSACTION_TIMER_PROP');\nexport const AUTO_RECORD_PROP       = Symbol('AUTO_RECORD_PROP');\nexport const IS_APPLYING_STASH      = Symbol('IS_APPLYING_STASH');\nexport const PROPS                  = Object.freeze([\n    STATE_PROP,\n    STORES_PROP,\n    QUEUE_PROP,\n    POS_PROP,\n    TRANSACTION_PROP,\n    TRANSACTION_TIMER_PROP,\n    AUTO_RECORD_PROP,\n    IS_APPLYING_STASH\n]);\n","import StateBase from './StateBase.js';\n\n/**\n * @module Core/data/stm/state/Registry\n *\n * Provides map of registered STM states.\n *\n * Needed to remove states circular dependency.\n *\n * @internal\n */\nconst registry = new Map();\n\n/**\n * Registers STM state class with the given name.\n *\n * @private\n *\n * @param {String} name\n * @param {Core.data.stm.state.StateBase} state\n */\nexport const registerStmState = (name, state) => {\n    //<debug>\n    console.assert(\n        state instanceof StateBase,\n        `Can't register STM state ${name}, invalid state class provided!`\n    );\n    //</debug>\n\n    registry.set(name, state);\n};\n\n/**\n * Resolves STM state class with the given name.\n *\n * @private\n *\n * @param {String} name\n * @returns {Core.data.stm.state.StateBase} state\n */\nexport const resolveStmState = (state) => {\n    if (typeof state === 'string') {\n        state = registry.get(state);\n    }\n\n    //<debug>\n    console.assert(\n        state instanceof StateBase,\n        `Can't resolve STM state ${state}, state class hasn't been registered!`\n    );\n    //</debug>\n\n    return state;\n};\n\n// UMD/module compatible export\n// NOTE: the most compatible way of exporting is:\n//       import registry from './Registry.js';\n//       { registerStmState, resolveStmState } = registry;\n//          or\n//       registry.registerStmState(...);\nexport default {\n    registerStmState,\n    resolveStmState\n};\n","import { QUEUE_PROP, POS_PROP } from './Props.js';\n\nexport const resetQueue = (stm, options) => {\n    const { undo, redo } = options;\n\n    let newProps;\n\n    if (undo && !redo) {\n        newProps = {\n            [QUEUE_PROP] : stm[QUEUE_PROP].slice(stm.position),\n            [POS_PROP]   : 0\n        };\n    }\n    else if (redo && !undo) {\n        newProps = {\n            [QUEUE_PROP] : stm[QUEUE_PROP].slice(0, stm.position)\n        };\n    }\n    else {\n        newProps = {\n            [QUEUE_PROP] : [],\n            [POS_PROP]   : 0\n        };\n    };\n\n    return [\n        newProps,\n        () => {\n            stm.notifyStoresAboutQueueReset(options);\n        }\n    ];\n};\n","/**\n * @module Core/data/stm/state/DisabledState\n */\nimport StateBase, { throwInvalidMethodCall } from './StateBase.js';\nimport { AUTO_RECORD_PROP } from '../Props.js';\nimport Registry from './Registry.js';\nimport { resetQueue } from '../Helpers.js';\n\n/**\n * STM disabled state class.\n *\n * @internal\n */\nexport class DisabledStateClass extends StateBase {\n\n    canUndo() {\n        return false;\n    }\n\n    canRedo() {\n        return false;\n    }\n\n    onUndo() {\n        throwInvalidMethodCall();\n    }\n\n    onRedo() {\n        throwInvalidMethodCall();\n    }\n\n    onEnable(stm) {\n        return stm.autoRecord ? 'autoreadystate' : 'readystate';\n    }\n\n    onDisable() {\n        throwInvalidMethodCall();\n    }\n\n    onAutoRecordOn() {\n        return {\n            [AUTO_RECORD_PROP] : true\n        };\n    }\n\n    onAutoRecordOff() {\n        return {\n            [AUTO_RECORD_PROP] : false\n        };\n    }\n\n    onStartTransaction() {\n        throwInvalidMethodCall();\n    }\n\n    onStopTransaction()  {\n        throwInvalidMethodCall();\n    }\n\n    onStopTransactionDelayed() {\n        throwInvalidMethodCall();\n    }\n\n    onRejectTransaction() {\n        throwInvalidMethodCall();\n    }\n\n    onResetQueue(stm, options) {\n        return resetQueue(stm, options);\n    }\n\n    onModelUpdate()      {}\n    onModelInsertChild() {}\n    onModelRemoveChild() {}\n    onStoreModelAdd()    {}\n    onStoreModelInsert() {}\n    onStoreModelRemove() {}\n    onStoreRemoveAll()   {}\n}\n\n/**\n * STM disabled state.\n *\n * @internal\n */\nconst DisabledState = new DisabledStateClass();\nexport default DisabledState;\n\nRegistry.registerStmState('disabledstate', DisabledState);\n","/**\n * @module Core/data/stm/Transaction\n */\nimport Base from '../../Base.js';\n\nconst ACTION_QUEUE_PROP = Symbol('ACTION_QUEUE_PROP');\n\n/**\n * STM transaction class, holds list of actions constituting a transaction.\n *\n * A transaction can be undone and redone. Upon undo all the actions being held\n * are undone in reverse order. Upon redo all the actions being held are redone\n * in forward order.\n */\nexport default class Transaction extends Base {\n\n    get defaultConfig() {\n        return {\n            /**\n             * Transaction title\n             *\n             * @config {String}\n             */\n            title : null\n        };\n    }\n\n    construct(...args) {\n        this[ACTION_QUEUE_PROP] = [];\n\n        super.construct(...args);\n    }\n\n    /**\n     * Gets transaction's actions queue\n     *\n     * @property {Core.data.stm.action.ActionBase[]}\n     */\n    get queue() {\n        return this[ACTION_QUEUE_PROP].slice(0);\n    }\n\n    /**\n     * Gets transaction's actions queue length\n     *\n     * @property {Number}\n     */\n    get length() {\n        return this[ACTION_QUEUE_PROP].length;\n    }\n\n    /**\n     * Adds an action to the transaction.\n     *\n     * @param {Core.data.stm.action.ActionBase|Object} action\n     */\n    addAction(action) {\n        //<debug>\n        console.assert(\n            action && typeof action.undo == 'function' && typeof action.redo == 'function',\n            \"Can't add action to a STM transaction, action must have `undo` and `redo` methods, inheriting from `ActionBase` might help!\"\n        );\n        //</debug>\n\n        this[ACTION_QUEUE_PROP].push(action);\n    }\n\n    /**\n     * Undoes actions held\n     */\n    undo() {\n        const queue = this[ACTION_QUEUE_PROP];\n\n        for (let i = queue.length - 1; i >= 0; --i) {\n            queue[i].undo();\n        }\n    }\n\n    /**\n     * Redoes actions held\n     */\n    redo() {\n        const queue = this[ACTION_QUEUE_PROP];\n\n        for (let i = 0, len = queue.length; i < len; ++i) {\n            queue[i].redo();\n        }\n    }\n}\n","import StateBase, { throwInvalidMethodCall } from './StateBase.js';\nimport Transaction from '../Transaction.js';\nimport { STATE_PROP, QUEUE_PROP, POS_PROP, TRANSACTION_PROP, AUTO_RECORD_PROP } from '../Props.js';\nimport Registry from './Registry.js';\nimport { resetQueue } from '../Helpers.js';\n\n/**\n * @module Core/data/stm/state/ReadyState\n */\n\n/**\n * STM ready state class.\n *\n * @internal\n */\nexport class ReadyStateClass extends StateBase {\n\n    canUndo(stm) {\n        //      v\n        // |*|*|\n        return 0 < stm.position && stm.position <= stm.length;\n    }\n\n    canRedo(stm) {\n        //  v\n        // |*|*|\n        return 0 <= stm.position && stm.position < stm.length;\n    }\n\n    onUndo(stm, steps) {\n        let curPos = stm.position;\n\n        const\n            queue  = stm[QUEUE_PROP],\n            newPos = Math.max(0, curPos - steps),\n            next = () => {\n                stm.notifyStoresAboutStateRestoringStart();\n\n                const undoneTransactions = [];\n                while (curPos !== newPos) {\n                    const transaction = queue[--curPos];\n                    transaction.undo();\n                    undoneTransactions.push(transaction);\n                }\n\n                return [stm.autoRecord ? 'autoreadystate' : 'readystate', () => {\n                    stm.notifyStoresAboutStateRestoringStop({ cause : 'undo', transactions : undoneTransactions });\n                }];\n            };\n\n        return [{\n            [STATE_PROP] : 'restoringstate',\n            [POS_PROP]   : newPos\n        }, next];\n    }\n\n    onRedo(stm, steps) {\n        let curPos = stm.position;\n\n        const\n            queue  = stm[QUEUE_PROP],\n            newPos = Math.min(queue.length, curPos + steps);\n\n        const next = () => {\n            stm.notifyStoresAboutStateRestoringStart();\n\n            const redoneTransactions = [];\n            do {\n                const transaction = queue[curPos++];\n                transaction.redo();\n                redoneTransactions.push(transaction);\n            }\n            while (curPos !== newPos);\n\n            return [stm.autoRecord ? 'autoreadystate' : 'readystate', () => {\n                stm.notifyStoresAboutStateRestoringStop({ cause : 'redo', transactions : redoneTransactions });\n            }];\n        };\n\n        return [{\n            [STATE_PROP] : 'restoringstate',\n            [POS_PROP]   : newPos\n        }, next];\n    }\n\n    onEnable() {\n        throwInvalidMethodCall();\n    }\n\n    onDisable() {\n        return 'disabledstate';\n    }\n\n    onAutoRecordOn() {\n        return {\n            [STATE_PROP]       : 'autoreadystate',\n            [AUTO_RECORD_PROP] : true\n        };\n    }\n\n    onAutoRecordOff() {\n        throwInvalidMethodCall();\n    }\n\n    onStartTransaction(stm, title) {\n        const transaction = new Transaction({ title });\n\n        return [{\n            [STATE_PROP]       : 'recordingstate',\n            [TRANSACTION_PROP] : transaction\n        }, () => {\n            stm.notifyStoresAboutStateRecordingStart(transaction);\n        }];\n    }\n\n    onStopTransaction() {\n        throwInvalidMethodCall();\n    }\n\n    onStopTransactionDelayed() {\n        throwInvalidMethodCall();\n    }\n\n    onRejectTransaction() {\n        throwInvalidMethodCall();\n    }\n\n    onResetQueue(stm, options) {\n        return resetQueue(stm, options);\n    }\n\n    onModelUpdate()      {}\n    onModelInsertChild() {}\n    onModelRemoveChild() {}\n    onStoreModelAdd()    {}\n    onStoreModelInsert() {}\n    onStoreModelRemove() {}\n    onStoreRemoveAll()   {}\n}\n\n/**\n * STM ready state.\n *\n * @internal\n */\nconst ReadyState = new ReadyStateClass();\nexport default ReadyState;\n\nRegistry.registerStmState('readystate', ReadyState);\n","/**\n * @module Core/data/stm/state/RecordingState\n */\nimport StateBase, { throwInvalidMethodCall } from './StateBase.js';\nimport { STATE_PROP, TRANSACTION_PROP, QUEUE_PROP, POS_PROP, AUTO_RECORD_PROP } from '../Props.js';\nimport Registry from './Registry.js';\nimport { resetQueue } from '../Helpers.js';\n\n/**\n * STM recording state class.\n *\n * @internal\n */\nexport class RecordingStateClass extends StateBase {\n\n    canUndo() {\n        return false;\n    }\n\n    canRedo() {\n        return false;\n    }\n\n    onEnable() {}\n\n    onDisable(stm) {\n        const transaction = stm[TRANSACTION_PROP];\n\n        stm.notifyStoresAboutStateRecordingStop(transaction, { disabled : true });\n\n        return {\n            [STATE_PROP]       : 'disabledstate',\n            [TRANSACTION_PROP] : null\n        };\n    }\n\n    onAutoRecordOn(stm) {\n        return [{\n            [STATE_PROP]       : 'autorecordingstate',\n            [AUTO_RECORD_PROP] : true\n        }, () => {\n            stm.stopTransactionDelayed();\n        }];\n    }\n\n    onAutoRecordOff() {\n        throwInvalidMethodCall();\n    }\n\n    onStartTransaction() {\n        throwInvalidMethodCall();\n    }\n\n    onStopTransaction(stm, title) {\n        const\n            transaction = stm[TRANSACTION_PROP],\n            queue       = stm[QUEUE_PROP];\n\n        let position = stm[POS_PROP];\n\n        if (transaction.length) {\n\n            if (!transaction.title && !title && stm.getTransactionTitle) {\n                transaction.title = stm.getTransactionTitle(transaction);\n            }\n            else if (title) {\n                transaction.title = title;\n            }\n\n            queue[position] = transaction;\n            queue.length    = ++position;\n        }\n\n        return [{\n            [STATE_PROP]       : 'readystate',\n            [POS_PROP]         : position,\n            [TRANSACTION_PROP] : null\n        }, () => {\n            stm.notifyStoresAboutStateRecordingStop(transaction, { stop : true });\n        }];\n    }\n\n    onRejectTransaction(stm) {\n        const transaction = stm[TRANSACTION_PROP];\n\n        return [{\n            [STATE_PROP]       : 'restoringstate',\n            [TRANSACTION_PROP] : null\n        }, () => {\n\n            if (transaction.length) {\n                transaction.undo();\n            }\n\n            return [\n                'readystate',\n                () => {\n                    stm.notifyStoresAboutStateRecordingStop(transaction, { rejected : true });\n                }\n            ];\n        }];\n    }\n\n    onStopTransactionDelayed() {\n        throwInvalidMethodCall();\n    }\n\n    onResetQueue(stm, options) {\n        return resetQueue(stm, options);\n    }\n\n    onModelUpdate(stm, model, newData, oldData, isInitialUserAction) {\n        const transaction = stm[TRANSACTION_PROP];\n        transaction.addAction(stm.makeModelUpdateAction(model, newData, oldData, isInitialUserAction));\n    }\n\n    onModelInsertChild(stm, parentModel, index, childModel, previousParent, previousIndex) {\n        const transaction = stm[TRANSACTION_PROP];\n        transaction.addAction(stm.makeModelInsertChildAction(parentModel, index, childModel, previousParent, previousIndex));\n    }\n\n    onModelRemoveChild(stm, parentModel, childModels, context) {\n        const transaction = stm[TRANSACTION_PROP];\n        transaction.addAction(stm.makeModelRemoveChildAction(parentModel, childModels, context));\n    }\n\n    onStoreModelAdd(stm, store, models, silent)    {\n        const transaction = stm[TRANSACTION_PROP];\n        transaction.addAction(stm.makeStoreModelAddAction(store, models, silent));\n    }\n\n    onStoreModelInsert(stm, store, index, models, context, silent) {\n        const transaction = stm[TRANSACTION_PROP];\n        transaction.addAction(stm.makeStoreModelInsertAction(store, index, models, context, silent));\n    }\n\n    onStoreModelRemove(stm, store, models, context, silent) {\n        const transaction = stm[TRANSACTION_PROP];\n        transaction.addAction(stm.makeStoreModelRemoveAction(store, models, context, silent));\n    }\n\n    onStoreRemoveAll(stm, store, allRecords, silent)   {\n        const transaction = stm[TRANSACTION_PROP];\n        transaction.addAction(stm.makeStoreRemoveAllAction(store, allRecords, silent));\n    }\n}\n\n/**\n * STM recording state.\n *\n * @internal\n */\nconst RecordingState = new RecordingStateClass();\nexport default RecordingState;\n\nRegistry.registerStmState('recordingstate', RecordingState);\n","/**\n * @module Core/data/stm/state/RestoringState\n */\nimport StateBase, { throwInvalidMethodCall } from './StateBase.js';\nimport { AUTO_RECORD_PROP } from '../Props.js';\nimport Registry from './Registry.js';\n\n/**\n * STM restoring state class.\n *\n * @internal\n */\nexport class RestoringStateClass extends StateBase {\n    static get $name() {\n        return 'RestoringStateClass';\n    }\n\n    canUndo() {\n        return false;\n    }\n\n    canRedo() {\n        return false;\n    }\n\n    onUndo() {\n        throwInvalidMethodCall();\n    }\n\n    onRedo() {\n        throwInvalidMethodCall();\n    }\n\n    onEnable() {\n        throwInvalidMethodCall();\n    }\n\n    onDisable() {\n        throwInvalidMethodCall();\n    }\n\n    onAutoRecordOn() {\n        return {\n            [AUTO_RECORD_PROP] : true\n        };\n    }\n\n    onAutoRecordOff() {\n        return {\n            [AUTO_RECORD_PROP] : false\n        };\n    }\n\n    onStartTransaction() {\n        throwInvalidMethodCall();\n    }\n\n    onStopTransaction()  {\n        throwInvalidMethodCall();\n    }\n\n    onStopTransactionDelayed() {\n        throwInvalidMethodCall();\n    }\n\n    onRejectTransaction() {\n        throwInvalidMethodCall();\n    }\n\n    onQueueReset() {\n        throwInvalidMethodCall();\n    }\n\n    onModelUpdate()      {}\n    onModelInsertChild() {}\n    onModelRemoveChild() {}\n    onStoreModelAdd()    {}\n    onStoreModelInsert() {}\n    onStoreModelRemove() {}\n    onStoreRemoveAll()   {}\n}\n\n/**\n * STM restoring state.\n *\n * @internal\n */\nconst RestoringState = new RestoringStateClass();\nexport default RestoringState;\n\nRegistry.registerStmState('restoringstate', RestoringState);\n","import { throwInvalidMethodCall } from './StateBase.js';\nimport Transaction from '../Transaction.js';\nimport { ReadyStateClass } from './ReadyState.js';\nimport { STATE_PROP, TRANSACTION_PROP, AUTO_RECORD_PROP } from '../Props.js';\nimport Registry from './Registry.js';\n\n/**\n * @module Core/data/stm/state/AutoReadyState\n */\n\n/**\n * STM transaction autostart ready state class.\n *\n * @internal\n */\nexport class AutoReadyStateClass extends ReadyStateClass {\n\n    onAutoRecordOn() {\n        throwInvalidMethodCall();\n    }\n\n    onAutoRecordOff() {\n        return {\n            [STATE_PROP]       : 'readystate',\n            [AUTO_RECORD_PROP] : false\n        };\n    }\n\n    onStartTransaction(stm, title) {\n        const transaction = new Transaction({ title });\n\n        return [{\n            [STATE_PROP]       : 'autorecordingstate',\n            [TRANSACTION_PROP] : transaction\n        }, () => {\n            stm.notifyStoresAboutStateRecordingStart(transaction);\n            stm.stopTransactionDelayed();\n        }];\n    }\n\n    onModelUpdate(stm, model, newData, oldData) {\n        stm.startTransaction();\n        stm.onModelUpdate(model, newData, oldData);\n    }\n\n    onModelInsertChild(stm, parentModel, index, childModels, context) {\n        stm.startTransaction();\n        stm.onModelInsertChild(parentModel, index, childModels, context);\n    }\n\n    onModelRemoveChild(stm, parentModel, childModels, context) {\n        stm.startTransaction();\n        stm.onModelRemoveChild(parentModel, childModels, context);\n    }\n\n    onStoreModelAdd(stm, store, models, silent) {\n        stm.startTransaction();\n        stm.onStoreModelAdd(store, models, silent);\n    }\n\n    onStoreModelInsert(stm, store, index, models, context, silent) {\n        stm.startTransaction();\n        stm.onStoreModelInsert(store, index, models, context, silent);\n    }\n\n    onStoreModelRemove(stm, store, models, context, silent) {\n        stm.startTransaction();\n        stm.onStoreModelRemove(store, models, context, silent);\n    }\n\n    onStoreRemoveAll(stm, store, allRecords, silent) {\n        stm.startTransaction();\n        stm.onStoreRemoveAll(store, allRecords, silent);\n    }\n}\n\n/**\n * STM transaction autostart ready state.\n *\n * @internal\n */\nconst AutoReadyState = new AutoReadyStateClass();\nexport default AutoReadyState;\n\nRegistry.registerStmState('autoreadystate', AutoReadyState);\n","/**\n * @module Core/data/stm/state/AutoRecordingState\n */\nimport Delayable from '../../../mixin/Delayable.js';\nimport { throwInvalidMethodCall } from './StateBase.js';\nimport { RecordingStateClass } from './RecordingState.js';\nimport { STATE_PROP, TRANSACTION_PROP, TRANSACTION_TIMER_PROP, QUEUE_PROP, POS_PROP, AUTO_RECORD_PROP } from '../Props.js';\nimport Registry from './Registry.js';\nimport { resetQueue } from '../Helpers.js';\n\n/**\n * STM recording state class.\n *\n * @internal\n */\nexport class AutoRecordingStateClass extends RecordingStateClass.mixin(Delayable) {\n\n    onDisable(stm) {\n        const\n            transaction = stm[TRANSACTION_PROP],\n            timer       = stm[TRANSACTION_TIMER_PROP];\n\n        if (timer) {\n            this.clearTimeout(timer);\n        }\n\n        stm.notifyStoresAboutStateRecordingStop(transaction, { disabled : true });\n\n        return {\n            [STATE_PROP]             : 'disabledstate',\n            [TRANSACTION_PROP]       : null,\n            [TRANSACTION_TIMER_PROP] : null\n        };\n    }\n\n    onAutoRecordOn(stm) {\n        throwInvalidMethodCall();\n    }\n\n    onAutoRecordOff(stm) {\n        const timer       = stm[TRANSACTION_TIMER_PROP];\n\n        if (timer) {\n            this.clearTimeout(timer);\n        }\n\n        return {\n            [STATE_PROP]             : 'recordingstate',\n            [AUTO_RECORD_PROP]       : false,\n            [TRANSACTION_TIMER_PROP] : null\n        };\n    }\n\n    onStopTransaction(stm, title) {\n        const\n            transaction = stm[TRANSACTION_PROP],\n            timer       = stm[TRANSACTION_TIMER_PROP],\n            queue       = stm[QUEUE_PROP];\n\n        let position = stm[POS_PROP];\n\n        if (timer) {\n            this.clearTimeout(timer);\n        }\n\n        if (transaction.length) {\n\n            if (!transaction.title && !title && stm.getTransactionTitle) {\n                transaction.title = stm.getTransactionTitle(transaction);\n            }\n            else if (title) {\n                transaction.title = title;\n            }\n\n            queue[position] = transaction;\n            queue.length    = ++position;\n        }\n\n        return [{\n            [STATE_PROP]             : 'autoreadystate',\n            [POS_PROP]               : position,\n            [TRANSACTION_PROP]       : null,\n            [TRANSACTION_TIMER_PROP] : null\n        }, () => {\n            stm.notifyStoresAboutStateRecordingStop(transaction, { stop : true });\n        }];\n    }\n\n    onStopTransactionDelayed(stm) {\n        let timer = stm[TRANSACTION_TIMER_PROP];\n\n        if (timer) {\n            this.clearTimeout(timer);\n        }\n\n        timer = this.setTimeout(\n            () => {\n                stm.stopTransaction();\n            },\n            stm.autoRecordTransactionStopTimeout\n        );\n\n        return {\n            [STATE_PROP]             : AutoRecordingState,\n            [TRANSACTION_TIMER_PROP] : timer\n        };\n    }\n\n    onResetQueue(stm, options) {\n        return resetQueue(stm, options);\n    }\n\n    onRejectTransaction(stm) {\n        const\n            transaction = stm[TRANSACTION_PROP],\n            timer = stm[TRANSACTION_TIMER_PROP];\n\n        if (timer) {\n            this.clearTimeout(timer);\n        }\n\n        return [{\n            [STATE_PROP]             : 'restoringstate',\n            [TRANSACTION_PROP]       : null,\n            [TRANSACTION_TIMER_PROP] : null\n        }, () => {\n\n            if (transaction.length) {\n                transaction.undo();\n            }\n\n            return [\n                'autoreadystate',\n                () => {\n                    stm.notifyStoresAboutStateRecordingStop(transaction, { rejected : true });\n                }\n            ];\n        }];\n    }\n\n    onModelUpdate(stm, ...rest) {\n        super.onModelUpdate(stm, ...rest);\n        stm.stopTransactionDelayed();\n    }\n\n    onModelInsertChild(stm, ...rest) {\n        super.onModelInsertChild(stm, ...rest);\n        stm.stopTransactionDelayed();\n    }\n\n    onModelRemoveChild(stm, ...rest) {\n        super.onModelRemoveChild(stm, ...rest);\n        stm.stopTransactionDelayed();\n    }\n\n    onStoreModelAdd(stm, ...rest)    {\n        super.onStoreModelAdd(stm, ...rest);\n        stm.stopTransactionDelayed();\n    }\n\n    onStoreModelInsert(stm, ...rest) {\n        super.onStoreModelInsert(stm, ...rest);\n        stm.stopTransactionDelayed();\n    }\n\n    onStoreModelRemove(stm, ...rest) {\n        super.onStoreModelRemove(stm, ...rest);\n        stm.stopTransactionDelayed();\n    }\n\n    onStoreRemoveAll(stm, ...rest)   {\n        super.onStoreRemoveAll(stm, ...rest);\n        stm.stopTransactionDelayed();\n    }\n}\n\n/**\n * STM recording state.\n *\n * @internal\n */\nconst AutoRecordingState = new AutoRecordingStateClass();\nexport default AutoRecordingState;\n\nRegistry.registerStmState('autorecordingstate', AutoRecordingState);\n","/**\n * @module Core/data/stm/action/UpdateAction\n */\nimport ActionBase from './ActionBase.js';\n\nconst\n    MODEL_PROP    = Symbol('MODEL_PROP'),\n    NEW_DATA_PROP = Symbol('NEW_DATA_PROP'),\n    OLD_DATA_PROP = Symbol('OLD_DATA_PROP');\n\n/**\n * Action to record the fact that a model has been updated.\n * @extends Core/data/stm/action/ActionBase\n */\nexport default class UpdateAction extends ActionBase {\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Reference to a model which has been updated.\n             *\n             * @config {Core.data.Model}\n             * @default\n             */\n            model : undefined,\n\n            /**\n             * Map of updated properties with new values.\n             *\n             * @config {Object}\n             * @default\n             */\n            newData : undefined,\n\n            /**\n             * Map of updated properties with old values.\n             *\n             * @config {Object}\n             * @default\n             */\n            oldData : undefined,\n\n            isInitialUserAction : false\n        };\n    }\n\n    get type() {\n        return 'UpdateAction';\n    }\n\n    //<debug>\n    afterConfig() {\n        super.afterConfig();\n\n        console.assert(\n            this.model.isModel && typeof this.newData == 'object' && typeof this.oldData == 'object',\n            \"Can't create action, bad configuration!\"\n        );\n    }\n    //</debug>\n\n    get model() {\n        return this[MODEL_PROP];\n    }\n\n    set model(value) {\n        //<debug>\n        console.assert(\n            !this[MODEL_PROP] && value.isModel,\n            \"Can't set model, model should be instanceof `Model` class and can be set only once!\"\n        );\n        //</debug>\n        this[MODEL_PROP] = value;\n    }\n\n    get newData() {\n        return this[NEW_DATA_PROP];\n    }\n\n    set newData(value) {\n        //<debug>\n        console.assert(\n            !this[NEW_DATA_PROP] && value && typeof value == 'object',\n            \"Can't set new data, new data should be an object and can be set only once!\"\n        );\n        //</debug>\n        this[NEW_DATA_PROP] = { ...value };\n    }\n\n    get oldData() {\n        return this[OLD_DATA_PROP];\n    }\n\n    set oldData(value) {\n        //<debug>\n        console.assert(\n            !this[OLD_DATA_PROP] && value && typeof value == 'object',\n            \"Can't set old data, old data should be an object and can be set only once!\"\n        );\n        //</debug>\n        this[OLD_DATA_PROP] = { ...value };\n    }\n\n    undo() {\n        const { model, oldData } = this;\n\n        // engine needs the setters to be activated, since there's some additional logic (for example, invalidate\n        // dispatcher)\n        if (model.$) {\n            Object.assign(model, oldData);\n        }\n\n        // it seems STM has to use `model.set()` because of `model.inSet` overrides or smth\n        // w/o this call, just with `Object.assign()` above, the view is not refreshed\n        // Since invoking accessor will just forward change to the engine, we need to pass `skipAccessors = true`\n        // to this call to make this change on data level.\n        // Covered by TaskEdit.t `autoSync` subtest\n\n        // but it seems, bypassing the setters puts the change in the `data` property and does not\n        // modify the engine-like caches, that Core uses\n        // this may lead to change being lost, overwritten by some other change, which does\n        model.set(oldData, null, null, null, Boolean(model.$));\n    }\n\n    redo() {\n        const { model, newData } = this;\n\n        // see comments above\n        if (model.$) {\n            Object.assign(model, newData);\n        }\n\n        model.set(newData, null, null, null, Boolean(model.$));\n    }\n}\n","/**\n * @module Core/data/stm/action/InsertChildAction\n */\nimport ActionBase from './ActionBase.js';\n\nconst\n    PARENT_MODEL_PROP = Symbol('PARENT_MODEL_PROP'),\n    CHILD_MODELS_PROP = Symbol('CHILD_MODELS_PROP'),\n    INSERT_INDEX_PROP = Symbol('INSERT_INDEX_PROP'),\n    CONTEXT_PROP      = Symbol('CONTEXT_PROP');\n\n/**\n * Action to record the fact of adding a children models into a parent model.\n * @extends Core/data/stm/action/ActionBase\n */\nexport default class InsertChildAction extends ActionBase {\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Reference to a parent model a child model has been added to.\n             *\n             * @config {Core.data.Model}\n             * @default\n             */\n            parentModel : undefined,\n\n            /**\n             * Children models inserted.\n             *\n             * @config {Core.data.Model[]}\n             * @default\n             */\n            childModels : undefined,\n\n            /**\n             * Index a children models are inserted at\n             *\n             * @config {Number}\n             * @default\n             */\n            insertIndex : undefined,\n\n            /**\n             * Map having children models as keys and values containing previous parent\n             * of each model and index at the previous parent.\n             *\n             * @config {Object}\n             * @default\n             */\n            context : undefined\n        };\n    }\n\n    get type() {\n        return 'InsertChildAction';\n    }\n\n    //<debug>\n    afterConfig() {\n        super.afterConfig();\n\n        console.assert(\n            this.parentModel.isModel &&\n            Array.isArray(this.childModels) &&\n            this.childModels.every(m => m.isModel) &&\n            this.insertIndex !== undefined &&\n            this.context instanceof Map,\n            \"Can't create action, bad configuration!\"\n        );\n    }\n    //</debug>\n\n    get parentModel() {\n        return this[PARENT_MODEL_PROP];\n    }\n\n    set parentModel(model) {\n        //<debug>\n        console.assert(\n            !this[PARENT_MODEL_PROP] && model,\n            \"Can't set parent model, model is required and can be set only once!\"\n        );\n        //</debug>\n\n        this[PARENT_MODEL_PROP] = model;\n    }\n\n    get childModels() {\n        return this[CHILD_MODELS_PROP];\n    }\n\n    set childModels(models) {\n        //<debug>\n        console.assert(\n            !this[CHILD_MODELS_PROP] &&\n            Array.isArray(models) &&\n            models.every(m => m.isModel),\n            \"Can't set child models, models are required, it should be array of Model class and can be set only once!\"\n        );\n        //</debug>\n\n        this[CHILD_MODELS_PROP] = models.slice(0);\n    }\n\n    get insertIndex() {\n        return this[INSERT_INDEX_PROP];\n    }\n\n    set insertIndex(index) {\n        //<debug>\n        console.assert(\n            this[INSERT_INDEX_PROP] === undefined && index !== undefined,\n            \"Can't set insert index, the value is required and can be set only once!\"\n        );\n        //</debug>\n\n        this[INSERT_INDEX_PROP] = index;\n    }\n\n    get context() {\n        return this[CONTEXT_PROP];\n    }\n\n    set context(ctx) {\n        //<debug>\n        console.assert(\n            !this[CONTEXT_PROP] &&\n            ctx instanceof Map &&\n            Array.from(ctx.entries()).every(([k, v]) => {\n                return k.isModel && typeof v == 'object' && v && Object.prototype.hasOwnProperty.call(v, 'parent') && Object.prototype.hasOwnProperty.call(v, 'index');\n            }),\n            \"Can't set context, the value is required it should be Map keyed by inserted models with object values containing `parent` and `index` properties, and it can be set only once!\"\n        );\n        //</debug>\n\n        this[CONTEXT_PROP] = ctx;\n    }\n\n    undo() {\n        const\n            { parentModel, context, childModels } = this,\n            byFromParent = new Map(),\n            newlyAdded = new Set();\n\n        for (const childModel of childModels) {\n            const ctx = context.get(childModel);\n\n            if (!ctx) {\n                newlyAdded.add(childModel);\n            }\n            else {\n                let undoTaskData = byFromParent.get(ctx.parent);\n\n                if (!undoTaskData) {\n                    undoTaskData = { moveRight : [], moveLeft : [], moveFromAnotherParent : [] };\n                    byFromParent.set(ctx.parent, undoTaskData);\n                }\n\n                if (ctx.parent === parentModel) {\n                    if (ctx.index > childModel.parentIndex) {\n                        undoTaskData.moveRight.push({ parent : ctx.parent, model : childModel, index : ctx.index + 1 });\n                    }\n                    else {\n                        undoTaskData.moveLeft.push({ parent : ctx.parent, model : childModel, index : ctx.index });\n                    }\n                }\n                else {\n                    undoTaskData.moveFromAnotherParent.push({ parent : ctx.parent, model : childModel, index : ctx.index });\n                }\n            }\n        }\n\n        for (const undoTaskData of byFromParent.values()) {\n            const { moveRight, moveLeft } = undoTaskData;\n\n            moveLeft.sort((a, b) => a.index - b.index);\n            moveRight.sort((a, b) => b.index - a.index);\n        }\n\n        newlyAdded.forEach(model => model.parent.removeChild(model));\n\n        for (const undoTaskData of byFromParent.values()) {\n            const { moveRight, moveLeft, moveFromAnotherParent } = undoTaskData;\n\n            moveLeft.forEach(task => {\n                task.parent.insertChild(task.model, task.index);\n            });\n            moveRight.forEach(task => {\n                task.parent.insertChild(task.model, task.index);\n            });\n            moveFromAnotherParent.forEach(task => {\n                task.parent.insertChild(task.model, task.index);\n            });\n        }\n    }\n\n    redo() {\n        const\n            { parentModel, insertIndex, childModels } = this,\n            insertBefore = parentModel.children[insertIndex];\n\n        parentModel.insertChild(childModels, insertBefore, false, {\n            orderedBeforeNode : insertBefore?.previousSibling?.nextOrderedSibling\n        });\n    }\n}\n","/**\n * @module Core/data/stm/action/RemoveChildAction\n */\nimport ActionBase from './ActionBase.js';\n\nconst\n    PARENT_MODEL_PROP = Symbol('PARENT_MODEL_PROP'),\n    CHILD_MODELS_PROP = Symbol('CHILD_MODELS_PROP'),\n    CONTEXT_PROP      = Symbol('CONTEXT_PROP');\n\n/**\n * Action to record store remove child operation.\n * @extends Core/data/stm/action/ActionBase\n */\nexport default class RemoveChildAction extends ActionBase {\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Reference to a parent model a child model has been removed to.\n             *\n             * @config {Core.data.Model}\n             * @default\n             */\n            parentModel : undefined,\n\n            /**\n             * Children models removed.\n             *\n             * @config {Core.data.Model[]}\n             * @default\n             */\n            childModels : undefined,\n\n            /**\n             * Map having children models as keys and values containing previous parent\n             * index at the parent.\n             *\n             * @config {Object}\n             * @default\n             */\n            context : undefined\n        };\n    }\n\n    get type() {\n        return 'RemoveChildAction';\n    }\n\n    //<debug>\n    afterConfig() {\n        super.afterConfig();\n\n        console.assert(\n            this.parentModel.isModel &&\n            Array.isArray(this.childModels) &&\n            this.childModels.every(m => m.isModel) &&\n            this.context instanceof Map,\n            \"Can't create action, bad configuration!\"\n        );\n    }\n    //</debug>\n\n    get parentModel() {\n        return this[PARENT_MODEL_PROP];\n    }\n\n    set parentModel(model) {\n        //<debug>\n        console.assert(\n            !this[PARENT_MODEL_PROP] && model,\n            \"Can't set parent model, model is required and can be set only once!\"\n        );\n        //</debug>\n\n        this[PARENT_MODEL_PROP] = model;\n    }\n\n    get childModels() {\n        return this[CHILD_MODELS_PROP];\n    }\n\n    set childModels(models) {\n        //<debug>\n        console.assert(\n            !this[CHILD_MODELS_PROP] &&\n            Array.isArray(models) &&\n            models.every(m => m.isModel),\n            \"Can't set child models, models are required, it should be array of Model class and can be set only once!\"\n        );\n        //</debug>\n\n        this[CHILD_MODELS_PROP] = models.slice(0);\n    }\n\n    get context() {\n        return this[CONTEXT_PROP];\n    }\n\n    set context(ctx) {\n        //<debug>\n        console.assert(\n            !this[CONTEXT_PROP] &&\n            ctx instanceof Map &&\n            Array.from(ctx.entries()).every(([k, v]) => {\n                return k.isModel && typeof v === 'object' && typeof v.parentIndex === 'number' && typeof v.orderedParentIndex === 'number';\n            }),\n            \"Can't set context, the value is required it should be Map keyed by inserted models with `index` values, and it can be set only once!\"\n        );\n        //</debug>\n\n        this[CONTEXT_PROP] = ctx;\n    }\n\n    undo() {\n        const { parentModel, context, childModels } = this;\n\n        // Let's sort models by parent index such that models with lesser index\n        // were inserted back first, thus making valid parent index of models following.\n\n        childModels.sort((lhs, rhs) => {\n            const\n                lhsIndex = context.get(lhs),\n                rhsIndex = context.get(rhs);\n\n            return (lhsIndex - rhsIndex);\n        });\n\n        // Now let's re-insert records back to where they were\n        childModels.forEach(m => {\n            const ctx = context.get(m);\n\n            parentModel.insertChild(m, ctx.parentIndex, undefined, { orderedParentIndex : ctx.orderedParentIndex });\n        });\n    }\n\n    redo() {\n        this.parentModel.removeChild(this.childModels);\n    }\n}\n","import ActionBase from './ActionBase.js';\nimport Store from '../../Store.js';\n\n/**\n * @module Core/data/stm/action/AddAction\n */\nconst\n    STORE_PROP      = Symbol('STORE_PROP'),\n    MODEL_LIST_PROP = Symbol('MODEL_LIST_PROP');\n\n/**\n * Action to record the fact of models adding to a store.\n * @extends Core/data/stm/action/ActionBase\n */\nexport default class AddAction extends ActionBase {\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Reference to a store models have been added into.\n             *\n             * @config {Core.data.Store}\n             * @default\n             */\n            store : undefined,\n\n            /**\n             * List of models added into the store.\n             *\n             * @config {Core.data.Model[]}\n             * @default\n             */\n            modelList : undefined,\n\n            /**\n             * Flag showing if undo/redo should be done silently i.e. with events suppressed\n             *\n             * @config {Boolean}\n             * @default\n             */\n            silent : false\n        };\n    }\n\n    get type() {\n        return 'AddAction';\n    }\n\n    //<debug>\n    afterConfig() {\n        super.afterConfig();\n\n        console.assert(\n            this.store instanceof Store &&\n            Array.isArray(this.modelList) &&\n            this.modelList.length &&\n            this.modelList.every(m => m.isModel),\n            \"Can't create action, bad configuration!\"\n        );\n    }\n    //</debug>\n\n    get store() {\n        return this[STORE_PROP];\n    }\n\n    set store(store) {\n        //<debug>\n        console.assert(\n            !this[STORE_PROP] && store && store instanceof Store,\n            \"Can't set store, store is required and can be set only once!\"\n        );\n        //</debug>\n\n        this[STORE_PROP] = store;\n    }\n\n    get modelList() {\n        return this[MODEL_LIST_PROP];\n    }\n\n    set modelList(list) {\n        //<debug>\n        console.assert(\n            !this[MODEL_LIST_PROP] &&\n            Array.isArray(list) &&\n            list.length,\n            list.every(m => m.isModel),\n            \"Can't set model list, model list is required it should be array of Models and it can be set only once!\"\n        );\n        //</debug>\n\n        this[MODEL_LIST_PROP] = list.slice(0);\n    }\n\n    undo() {\n        this.store.remove(this.modelList, this.silent);\n    }\n\n    redo() {\n        this.store.add(this.modelList, this.silent);\n    }\n}\n","import ActionBase from './ActionBase.js';\nimport Store from '../../Store.js';\n\n/**\n * @module Core/data/stm/action/InsertAction\n */\n\nconst\n    STORE_PROP        = Symbol('STORE_PROP'),\n    MODEL_LIST_PROP   = Symbol('MODEL_LIST_PROP'),\n    INSERT_INDEX_PROP = Symbol('INSERT_INDEX_PROP'),\n    CONTEXT_PROP      = Symbol('CONTEXT_PROP');\n\n/**\n * Action to record the fact of models inserting into a store.\n * @extends Core/data/stm/action/ActionBase\n */\nexport default class InsertAction extends ActionBase {\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Reference to a store models have been inserted into.\n             *\n             * @config {Core.data.Store}\n             * @default\n             */\n            store : undefined,\n\n            /**\n             * List of models inserted into the store.\n             *\n             * @config {Core.data.Model[]}\n             * @default\n             */\n            modelList : undefined,\n\n            /**\n             * Index the models have been inserted at.\n             *\n             * @config {Number}\n             * @default\n             */\n            insertIndex : undefined,\n\n            /**\n             * Models move context (if models has been moved), if any.\n             * Map this {@link Core/data/Model} instances as keys and their\n             * previous index as values\n             *\n             * @config {Map}\n             * @default\n             */\n            context : undefined,\n\n            /**\n             * Flag showing if undo/redo should be done silently i.e. with events suppressed\n             *\n             * @config {Boolean}\n             * @default\n             */\n            silent : false\n        };\n    }\n\n    get type() {\n        return 'InsertAction';\n    }\n\n    //<debug>\n    afterConfig() {\n        super.afterConfig();\n\n        console.assert(\n            this.store instanceof Store &&\n            Array.isArray(this.modelList) &&\n            this.modelList.length &&\n            this.modelList.every(m => m.isModel) &&\n            this.insertIndex !== undefined &&\n            this.context instanceof Map,\n            \"Can't create action, bad configuration!\"\n        );\n    }\n    //</debug>\n\n    get store() {\n        return this[STORE_PROP];\n    }\n\n    set store(store) {\n        //<debug>\n        console.assert(\n            !this[STORE_PROP] && store && store instanceof Store,\n            \"Can't set store, store is required and can be set only once!\"\n        );\n        //</debug>\n\n        this[STORE_PROP] = store;\n    }\n\n    get modelList() {\n        return this[MODEL_LIST_PROP];\n    }\n\n    set modelList(list) {\n        //<debug>\n        console.assert(\n            !this[MODEL_LIST_PROP] &&\n            Array.isArray(list) &&\n            list.length &&\n            list.every(m => m.isModel),\n            \"Can't set model list, model list is required, it should be array of Models and it can be set only once!\"\n        );\n        //</debug>\n\n        this[MODEL_LIST_PROP] = list.slice(0);\n    }\n\n    get insertIndex() {\n        return this[INSERT_INDEX_PROP];\n    }\n\n    set insertIndex(index) {\n        //<debug>\n        console.assert(\n            this[INSERT_INDEX_PROP] === undefined && index !== undefined,\n            \"Can't set insert index, the value is required and can be set only once!\"\n        );\n        //</debug>\n\n        this[INSERT_INDEX_PROP] = index;\n    }\n\n    get context() {\n        return this[CONTEXT_PROP];\n    }\n\n    set context(context) {\n        //<debug>\n        console.assert(\n            !this[CONTEXT_PROP] &&\n            context instanceof Map &&\n            Array.from(context.entries()).every(([k, v]) => k.isModel && v !== undefined),\n            \"Can't set move context, context is required, it should be Map with keys set to Model instances and numeric values, and it can be set only once!\"\n        );\n        //</debug>\n\n        this[CONTEXT_PROP] = context;\n    }\n\n    undo() {\n        const { store, modelList, context, silent } = this;\n\n        // Let's sort models by index such that models with lesser index\n        // were inserted back first, thus making valid index of models following.\n\n        modelList.sort((lhs, rhs) => {\n            const\n                lhsIndex = context.get(lhs),\n                rhsIndex = context.get(rhs);\n\n            return lhsIndex !== undefined && rhsIndex !== undefined ? lhsIndex - rhsIndex : 0;\n        });\n\n        modelList.forEach(m => {\n            const index = context.get(m);\n\n            // Flag the inserted record that we undo to skip adding it to \"store.removed\"\n            m._undoingInsertion = true;\n\n            if (index !== undefined) {\n                // Insert at previous index\n                store.insert(index, m, silent);\n            }\n            else {\n                // Just remove\n                store.remove(m, silent);\n            }\n\n            m._undoingInsertion = false;\n        });\n    }\n\n    redo() {\n        const me = this;\n        me.store.insert(me.insertIndex, me.modelList, me.silent);\n    }\n}\n","/**\n * @module Core/data/stm/action/RemoveAction\n */\nimport ActionBase from './ActionBase.js';\nimport Store from '../../Store.js';\n\nconst\n    STORE_PROP      = Symbol('STORE_PROP'),\n    MODEL_LIST_PROP = Symbol('MODEL_LIST_PROP'),\n    CONTEXT_PROP    = Symbol('CONTEXT_PROP');\n\n/**\n * Action to record the fact of models removed from a store.\n * @extends Core/data/stm/action/ActionBase\n */\nexport default class RemoveAction extends ActionBase {\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Reference to a store models have been removed from.\n             *\n             * @config {Core.data.Store}\n             * @default\n             */\n            store : undefined,\n\n            /**\n             * List of models removed from the store.\n             *\n             * @config {Core.data.Model[]}\n             * @default\n             */\n            modelList : undefined,\n\n            /**\n             * Models removing context.\n             *\n             * @config {Object}\n             * @default\n             */\n            context : undefined,\n\n            /**\n             * Flag showing if undo/redo should be done silently i.e. with events suppressed\n             *\n             * @config {Boolean}\n             * @default\n             */\n            silent : false\n        };\n    }\n\n    get type() {\n        return 'RemoveAction';\n    }\n\n    //<debug>\n    afterConfig() {\n        super.afterConfig();\n\n        console.assert(\n            this.store instanceof Store &&\n            Array.isArray(this.modelList) &&\n            this.modelList.length &&\n            this.modelList.every(m => m.isModel) &&\n            \"Can't create action, bad configuration!\"\n        );\n    }\n    //</debug>\n\n    get store() {\n        return this[STORE_PROP];\n    }\n\n    set store(store) {\n        //<debug>\n        console.assert(\n            !this[STORE_PROP] && store && store instanceof Store,\n            \"Can't set store, store is required and can be set only once!\"\n        );\n        //</debug>\n\n        this[STORE_PROP] = store;\n    }\n\n    get modelList() {\n        return this[MODEL_LIST_PROP];\n    }\n\n    set modelList(list) {\n        //<debug>\n        console.assert(\n            !this[MODEL_LIST_PROP] &&\n            Array.isArray(list) &&\n            list.length &&\n            list.every(m => m.isModel),\n            \"Can't set model list, model list is required, it should be array of Models and it can be set only once!\"\n        );\n        //</debug>\n\n        this[MODEL_LIST_PROP] = list.slice(0);\n    }\n\n    get context() {\n        return this[CONTEXT_PROP];\n    }\n\n    set context(context) {\n        //<debug>\n        console.assert(\n            !this[CONTEXT_PROP] &&\n            context instanceof Map &&\n            Array.from(context.entries()).every(([k, v]) => k.isModel && typeof v === 'number'),\n            \"Can't set removal context, removal context is required, it should be Map with Model instances as keys and numeric values, and it can be set only once!\"\n        );\n        //</debug>\n\n        this[CONTEXT_PROP] = context;\n    }\n\n    undo() {\n        const { store, context, modelList, silent } = this;\n\n        // Let's sort models by index such that models with lesser index\n        // were inserted back first, thus making valid index of models following.\n        modelList.sort((lhs, rhs) => {\n            const\n                lhsIndex = context.get(lhs),\n                rhsIndex = context.get(rhs);\n\n            // Here, in contrast to InsertAction, index is always present\n            return lhsIndex - rhsIndex;\n        });\n\n        modelList.forEach(m => {\n            const index = context.get(m);\n\n            // Insert at previous index\n            store.insert(index, m, silent);\n        });\n    }\n\n    redo() {\n        this.store.remove(this.modelList, this.silent);\n    }\n}\n","/**\n * @module Core/data/stm/action/RemoveAllAction\n */\nimport ActionBase from './ActionBase.js';\nimport Store from '../../Store.js';\n\nconst\n    STORE_PROP       = Symbol('STORE_PROP'),\n    ALL_RECORDS_PROP = Symbol('ALL_RECORDS_PROP');\n\n/**\n * Action to record store remove all operation.\n * @extends Core/data/stm/action/ActionBase\n */\nexport default class RemoveAllAction extends ActionBase {\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Reference to a store cleared.\n             *\n             * @config {Core.data.Store}\n             * @default\n             */\n            store : undefined,\n\n            /**\n             * All store records removed\n             *\n             * @config {Core.data.Model[]}\n             * @default\n             */\n            allRecords : undefined,\n\n            /**\n             * Flag showing if undo/redo should be done silently i.e. with events suppressed\n             *\n             * @config {Boolean}\n             * @default\n             */\n            silent : false\n        };\n    }\n\n    get type() {\n        return 'RemoveAllAction';\n    }\n\n    //<debug>\n    afterConfig() {\n        super.afterConfig();\n\n        console.assert(\n            this.store instanceof Store,\n            Array.isArray(this.allRecords) &&\n            this.allRecords.length &&\n            this.allRecords.every(m => m.isModel),\n            \"Can't create action, bad configuration!\"\n        );\n    }\n    //</debug>\n\n    get store() {\n        return this[STORE_PROP];\n    }\n\n    set store(store) {\n        //<debug>\n        console.assert(\n            !this[STORE_PROP] && store && store instanceof Store,\n            \"Can't set store, store is required and can be set only once!\"\n        );\n        //</debug>\n\n        this[STORE_PROP] = store;\n    }\n\n    get allRecords() {\n        return this[ALL_RECORDS_PROP];\n    }\n\n    set allRecords(records) {\n        //<debug>\n        console.assert(\n            !this[ALL_RECORDS_PROP] &&\n            Array.isArray(records) &&\n            records.length,\n            records.every(m => m.isModel),\n            \"Can't all records list, all records list is required it should be array of Models and it can be set only once!\"\n        );\n        //</debug>\n\n        this[ALL_RECORDS_PROP] = records.slice(0);\n    }\n\n    undo() {\n        const { store, allRecords, silent } = this;\n        store.add(allRecords, silent);\n    }\n\n    redo() {\n        this.store.removeAll(this.silent);\n    }\n}\n","/**\n * @module Core/data/stm/StateTrackingManager\n */\nimport Base from '../../Base.js';\nimport IdHelper from '../../helper/IdHelper.js';\nimport Events from '../../mixin/Events.js';\nimport StateBase from './state/StateBase.js';\nimport DisabledState from './state/DisabledState.js';\nimport ReadyState from './state/ReadyState.js';\nimport RecordingState from './state/RecordingState.js';\nimport RestoringState from './state/RestoringState.js';\nimport AutoReadyState from './state/AutoReadyState.js';\nimport AutoRecordingState from './state/AutoRecordingState.js';\nimport Registry from './state/Registry.js';\nimport UpdateAction from './action/UpdateAction.js';\nimport InsertChildAction from './action/InsertChildAction.js';\nimport RemoveChildAction from './action/RemoveChildAction.js';\nimport AddAction from './action/AddAction.js';\nimport InsertAction from './action/InsertAction.js';\nimport RemoveAction from './action/RemoveAction.js';\nimport RemoveAllAction from './action/RemoveAllAction.js';\nimport { STATE_PROP, STORES_PROP, QUEUE_PROP, POS_PROP, TRANSACTION_PROP, TRANSACTION_TIMER_PROP, AUTO_RECORD_PROP, IS_APPLYING_STASH } from './Props.js';\n\nexport const makeModelUpdateAction = (model, newData, oldData, isInitialUserAction) => {\n    return new UpdateAction({\n        model,\n        newData,\n        oldData,\n        isInitialUserAction\n    });\n};\n\nexport const makeModelInsertChildAction = (parentModel, insertIndex, childModels, context) => {\n    return new InsertChildAction({\n        parentModel,\n        childModels,\n        insertIndex,\n        context\n    });\n};\n\nexport const makeModelRemoveChildAction = (parentModel, childModels, context) => {\n    return new RemoveChildAction({\n        parentModel,\n        childModels,\n        context\n    });\n};\n\nexport const makeStoreModelAddAction = (store, modelList, silent) => {\n    return new AddAction({\n        store,\n        modelList,\n        silent\n    });\n};\n\nexport const makeStoreModelInsertAction = (store, insertIndex, modelList, context, silent) => {\n    return new InsertAction({\n        store,\n        insertIndex,\n        modelList,\n        context,\n        silent\n    });\n};\n\nexport const makeStoreModelRemoveAction = (store, modelList, context, silent) => {\n    return new RemoveAction({\n        store,\n        modelList,\n        context,\n        silent\n    });\n};\n\nexport const makeStoreRemoveAllAction = (store, allRecords, silent) => {\n    return new RemoveAllAction({\n        store,\n        allRecords,\n        silent\n    });\n};\n\nconst stateTransition = (stm, event, ...args) => {\n    const\n        oldState = stm.state,\n        newState = event.call(stm[STATE_PROP], stm, ...args);\n\n    if (typeof newState === 'string') {\n        stm[STATE_PROP] = Registry.resolveStmState(newState);\n    }\n    else if (newState instanceof StateBase) {\n        stm[STATE_PROP] = newState;\n    }\n    else if (Array.isArray(newState)) {\n        const [state, next] = newState;\n\n        if (typeof state === 'string') {\n            stm[STATE_PROP] = Registry.resolveStmState(state);\n        }\n        else if (state instanceof StateBase) {\n            stm[STATE_PROP] = state;\n        }\n        else if (state && typeof state === 'object') {\n            stm = Object.assign(stm, state);\n            stm[STATE_PROP] = Registry.resolveStmState(stm[STATE_PROP]);\n        }\n\n        if (typeof next === 'function') {\n            stateTransition(stm, next, ...args);\n        }\n    }\n    else if (newState && typeof newState === 'object') {\n        stm = Object.assign(stm, newState);\n        stm[STATE_PROP] = Registry.resolveStmState(stm[STATE_PROP]);\n    }\n\n    if (oldState !== ReadyState && oldState !== AutoReadyState && (newState !== ReadyState && newState !== AutoReadyState)) {\n        stm.trigger('ready');\n    }\n};\n\n/**\n * Tracks the state of every store registered via {@link #function-addStore}. It is {@link #config-disabled} by default\n * so remember to call {@link #function-enable} when your stores are registered and initial dataset is loaded.\n * Use {@link #function-undo} / {@link #function-redo} method calls to restore state to a particular\n * point in time\n *\n * ```javascript\n * stm = new StateTrackingManager({\n *     autoRecord : true,\n *     listeners  : {\n *        'recordingstop' : () => {\n *            // your custom code to update undo/redo GUI controls\n *            updateUndoRedoControls();\n *        },\n *        'restoringstop' : ({ stm }) => {\n *            // your custom code to update undo/redo GUI controls\n *            updateUndoRedoControls();\n *        },\n *        'disabled' : () => {\n *            // in Gantt, Scheduler and other scheduling products,\n *            // also need to update the undo/redo controls on `disabled`\n *            // event, due to implementation details\n *            updateUndoRedoControls();\n *        }\n *    },\n *    getTransactionTitle : (transaction) => {\n *        // your custom code to analyze the transaction and return custom transaction title\n *        const lastAction = transaction.queue[transaction.queue.length - 1];\n *\n *        if (lastAction instanceof AddAction) {\n *            let title = 'Add new record';\n *        }\n *\n *        return title;\n *    }\n * });\n *\n * stm.addStore(userStore);\n * stm.addStore(companyStore);\n * stm.addStore(otherStore);\n *\n * stm.enable();\n * ```\n *\n * **Note:** STM currently does not support undoing server side added and saved records.\n * Therefore it's recommended to {@link #function-resetQueue reset the queue}\n * each time a tracked store(s) loads from or saves its changes to the server.\n * If Crud Manager is used it can be done like this:\n *\n * ```javascript\n * crudManager.on({\n *     requestDone() {\n *         stm.resetQueue();\n *     }\n * });\n * ```\n *\n * and in case individual stores are used:\n *\n * ```javascript\n * ajaxStore.on({\n *     afterRequest({ exception }) {\n *         if (!exception) {\n *             stm.resetQueue();\n *         }\n *     }\n * });\n * ```\n *\n * @mixes Core/mixin/Events\n * @extends Core/Base\n */\nexport default class StateTrackingManager extends Events(Base) {\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Default manager disabled state\n             *\n             * @config {Boolean}\n             * @default\n             */\n            disabled : true,\n\n            /**\n             * Whether to start transaction recording automatically in case the Manager is enabled.\n             *\n             * In the auto recording mode, the manager waits for the first change in any store being managed and starts a transaction, i.e.\n             * records any changes in its monitored stores. The transaction lasts for {@link #config-autoRecordTransactionStopTimeout} and\n             * afterwards creates one undo/redo step, including all changes in the stores during that period of time.\n             *\n             * In non auto recording mode you have to call {@link #function-startTransaction} / {@link #function-stopTransaction} to start and end\n             * a transaction.\n             *\n             * @config {Boolean}\n             * @default\n             */\n            autoRecord : false,\n\n            /**\n             * The transaction duration (in ms) for the auto recording mode {@link #config-autoRecord}\n             *\n             * @config {Number}\n             * @default\n             */\n            autoRecordTransactionStopTimeout : 100,\n\n            /**\n             * Store model update action factory\n             *\n             * @config {Function}\n             * @default\n             * @private\n             */\n            makeModelUpdateAction,\n\n            /**\n             * Store insert child model action factory.\n             *\n             * @config {Function}\n             * @default\n             * @private\n             */\n            makeModelInsertChildAction,\n\n            /**\n             * Store remove child model action factory.\n             *\n             * @config {Function}\n             * @default\n             * @private\n             */\n            makeModelRemoveChildAction,\n\n            /**\n             * Store add model action factory.\n             *\n             * @config {Function}\n             * @default\n             * @private\n             */\n            makeStoreModelAddAction,\n\n            /**\n             * Store insert model action factory.\n             *\n             * @config {Function}\n             * @default\n             * @private\n             */\n            makeStoreModelInsertAction,\n\n            /**\n             * Store remove model action factory.\n             *\n             * @config {Function}\n             * @default\n             * @private\n             */\n            makeStoreModelRemoveAction,\n\n            /**\n             * Store remove all models action factory.\n             *\n             * @config {Function}\n             * @default\n             * @private\n             */\n            makeStoreRemoveAllAction,\n\n            /**\n             * Function to create a transaction title if none is provided.\n             *\n             * The function receives a transaction and should return a title.\n             *\n             * @config {Function}\n             * @default\n             */\n            getTransactionTitle : null\n        };\n    }\n\n    construct(...args) {\n        Object.assign(this, {\n            [STATE_PROP]             : ReadyState,\n            [STORES_PROP]            : [],\n            [QUEUE_PROP]             : [],\n            [POS_PROP]               : 0,\n            [TRANSACTION_PROP]       : null,\n            [TRANSACTION_TIMER_PROP] : null,\n            [AUTO_RECORD_PROP]       : false,\n            [IS_APPLYING_STASH]      : false,\n            stashedTransactions      : {}\n        });\n\n        super.construct(...args);\n    }\n\n    // <remove-on-release>\n    // TODO: This destroys the current state, which makes successive tests fail. Not sure what should be done\n    // doDestroy() {\n    //     super.doDestroy();\n    //     this.destroyProperties(STATE_PROP);\n    // }\n    // </remove-on-release>\n\n    /**\n     * Gets current state of the manager\n     *\n     * @property {Core.data.stm.state.StateBase}\n     */\n    get state() {\n        return this[STATE_PROP];\n    }\n\n    /**\n     * Gets current undo/redo queue position\n     *\n     * @property {Number}\n     */\n    get position() {\n        return this[POS_PROP];\n    }\n\n    /**\n     * Gets current undo/redo queue length\n     *\n     * @property {Number}\n     */\n    get length() {\n        return this[QUEUE_PROP].length;\n    }\n\n    /**\n     * Gets all the stores registered in STM\n     *\n     * @property {Core.data.Store[]}\n     */\n    get stores() {\n        return Array.from(this[STORES_PROP]);\n    }\n\n    /**\n     * Checks if a store has been added to the manager\n     *\n     * @param  {Core.data.Store} store\n     * @returns {Boolean}\n     */\n    hasStore(store) {\n        return this[STORES_PROP].includes(store);\n    }\n\n    /**\n     * Adds a store to the manager\n     *\n     * @param {Core.data.Store} store\n     */\n    addStore(store) {\n        //<debug>\n        console.assert(\n            !this.hasStore(store),\n            'Can\\'t add store to the STM manager, store is already added into the STM manager!'\n        );\n        //</debug>\n\n        if (!this.hasStore(store)) {\n\n            this[STORES_PROP].push(store);\n\n            store.stm = this;\n\n            store.forEach(model => model.stm = this);\n        }\n    }\n\n    /**\n     * Removes a store from the manager\n     *\n     * @param {Core.data.Store} store\n     */\n    removeStore(store) {\n        //<debug>\n        console.assert(\n            this.hasStore(store),\n            'Can\\'t remove store from the STM manager, store isn\\'t registered in the STM manager!'\n        );\n        //</debug>\n\n        if (this.hasStore(store)) {\n            this[STORES_PROP] = this[STORES_PROP].filter(s => s !== store);\n\n            store.stm = null;\n\n            store.forEach(model => model.stm = null);\n        }\n    }\n\n    /**\n     * Calls `fn` for each store registered in STM.\n     *\n     * @param {Function} fn (store, id) => ...\n     */\n    forEachStore(fn) {\n        this[STORES_PROP].forEach(s => fn(s, s.id));\n    }\n\n    //#region Disabled state\n\n    /**\n     * Get/set manager disabled state\n     *\n     * @property {Boolean}\n     */\n    get disabled() {\n        return this.state === DisabledState;\n    }\n\n    set disabled(val) {\n        const me = this;\n\n        if (me.disabled !== val) {\n            if (val) {\n                stateTransition(me, me.state.onDisable, me);\n            }\n            else {\n                stateTransition(me, me.state.onEnable, me);\n            }\n\n            me.trigger('stmDisabled', { disabled : val });\n\n            /**\n             * Fired when the disabled state of the STM changes\n             *\n             * @event disabled\n             * @param {Core.data.stm.StateTrackingManager} source\n             * @param {Boolean} disabled The current disabled state of the STM\n             */\n            me.trigger('disabled', { disabled : val });\n        }\n    }\n\n    get enabled() {\n        return !this.disabled;\n    }\n\n    /**\n     * Enables manager\n     */\n    enable() {\n        this.disabled = false;\n    }\n\n    /**\n     * Disables manager\n     */\n    disable() {\n        this.disabled = true;\n    }\n\n    //#endregion\n\n    /**\n     * Checks manager ready state\n     * @readonly\n     * @property {Boolean}\n     */\n    get isReady() {\n        return this.state === ReadyState || this.state === AutoReadyState;\n    }\n\n    waitForReadiness() {\n        return this.await('ready', false);\n    }\n\n    /**\n     * Checks manager recording state\n     * @readonly\n     * @property {Boolean}\n     */\n    get isRecording() {\n        return this.state === RecordingState || this.state === AutoRecordingState;\n    }\n\n    /**\n     * Checks if STM is restoring a stash\n     * @readonly\n     * @property {Boolean}\n     * @internal\n     */\n    get isApplyingStash() {\n        return this[IS_APPLYING_STASH];\n    }\n\n    /**\n     * Gets/sets manager auto record option\n     *\n     * @property {Boolean}\n     */\n    get autoRecord() {\n        return this[AUTO_RECORD_PROP];\n    }\n\n    set autoRecord(value) {\n        const me = this;\n\n        if (me.autoRecord != value) {\n            if (value) {\n                stateTransition(me, me.state.onAutoRecordOn, me);\n            }\n            else {\n                stateTransition(me, me.state.onAutoRecordOff, me);\n            }\n        }\n    }\n\n    /**\n     * Starts undo/redo recording transaction.\n     *\n     * @param {String} [title]\n     */\n    startTransaction(title = null) {\n        stateTransition(this, this.state.onStartTransaction, title);\n    }\n\n    /**\n     * Stops undo/redo recording transaction\n     *\n     * @param {String} [title]\n     */\n    stopTransaction(title = null) {\n        stateTransition(this, this.state.onStopTransaction, title);\n    }\n\n    /**\n     * Stops undo/redo recording transaction after {@link #config-autoRecordTransactionStopTimeout} delay.\n     *\n     * @private\n     */\n    stopTransactionDelayed() {\n        stateTransition(this, this.state.onStopTransactionDelayed);\n    }\n\n    /**\n     * Rejects currently recorded transaction.\n     */\n    rejectTransaction() {\n        stateTransition(this, this.state.onRejectTransaction);\n    }\n\n    /**\n     * Gets currently recording STM transaction.\n     * @readonly\n     * @property {Core.data.stm.Transaction}\n     */\n    get transaction() {\n        return this[TRANSACTION_PROP];\n    }\n\n    /**\n     * Gets titles of all recorded undo/redo transactions\n     * @readonly\n     * @property {String[]}\n     */\n    get queue() {\n        return this[QUEUE_PROP].map((t) => t.title);\n    }\n\n    get rawQueue() {\n        return this[QUEUE_PROP];\n    }\n\n    /**\n     * Gets manager restoring state.\n     * @readonly\n     * @property {Boolean}\n     */\n    get isRestoring() {\n        return this.state === RestoringState || this.isApplyingStash;\n    }\n\n    /**\n     * Checks if the manager can undo.\n     *\n     * @property {Boolean}\n     */\n    get canUndo() {\n        return this.state.canUndo(this);\n    }\n\n    /**\n     * Checks if the manager can redo.\n     *\n     * @property {Boolean}\n     */\n    get canRedo() {\n        return this.state.canRedo(this);\n    }\n\n    /**\n     * Undoes current undo/redo transaction.\n     * @param {Number} [steps=1]\n     * @returns {Promise} A promise which is resolved when undo action has been performed\n     */\n    async undo(steps = 1) {\n        if (!this.isReady) {\n            await this.waitForReadiness();\n        }\n        stateTransition(this, this.state.onUndo, steps);\n    }\n\n    /**\n     * Undoes all transactions.\n     * @returns {Promise} A promise which is resolved when undo actions has been performed\n     */\n    async undoAll() {\n        if (!this.isReady) {\n            await this.waitForReadiness();\n        }\n        this.undo(this.length);\n    }\n\n    /**\n     * Redoes current undo/redo transaction.\n     *\n     * @param {Number} [steps=1]\n     * @returns {Promise} A promise which is resolved when redo action has been performed\n     */\n    async redo(steps = 1) {\n        if (!this.isReady) {\n            await this.waitForReadiness();\n        }\n        stateTransition(this, this.state.onRedo, steps);\n    }\n\n    /**\n     * Redoes all transactions.\n     * @returns {Promise} A promise which is resolved when redo actions has been performed\n     */\n    async redoAll() {\n        if (!this.isReady) {\n            await this.waitForReadiness();\n        }\n        this.redo(this.length);\n    }\n\n    /**\n     * Resets undo/redo queue.\n     */\n    resetQueue(/* private */options = { undo : true, redo : true }) {\n        stateTransition(this, this.state.onResetQueue, options);\n    }\n\n    /**\n     * Resets undo queue.\n     */\n    resetUndoQueue() {\n        this.resetQueue({ undo : true });\n    }\n\n    /**\n     * Resets redo queue.\n     */\n    resetRedoQueue() {\n        this.resetQueue({ redo : true });\n    }\n\n    notifyStoresAboutStateRecordingStart(transaction) {\n        this.forEachStore((store) => store.onStmRecordingStart?.(this, transaction));\n\n        /**\n         * Fired upon state recording operation starts.\n         *\n         * @event recordingStart\n         * @param {Core.data.stm.StateTrackingManager} stm\n         * @param {Core.data.stm.Transaction} transaction\n         */\n        this.trigger('recordingStart', { stm : this, transaction });\n    }\n\n    notifyStoresAboutStateRecordingStop(transaction, reason) {\n        this.forEachStore((store) => store.onStmRecordingStop?.(this, transaction, reason));\n\n        /**\n         * Fired upon state recording operation stops.\n         *\n         * @event recordingStop\n         * @param {Core.data.stm.StateTrackingManager} stm\n         * @param {Core.data.stm.Transaction} transaction\n         * @param {Object} reason Transaction stop reason\n         * @param {Boolean} reason.stop Transaction recording has been stopped in a normal way.\n         * @param {Boolean} reason.disabled Transaction recording has been stopped due to STM has been disabled.\n         * @param {Boolean} reason.rejected Transaction recording has been stopped due to transaction has been rejected.\n         */\n        this.trigger('recordingStop', { stm : this, transaction, reason });\n    }\n\n    notifyStoresAboutStateRestoringStart() {\n        this.forEachStore((store) => store.onStmRestoringStart?.(this));\n\n        /**\n         * Fired upon state restoration operation starts.\n         *\n         * @event restoringStart\n         * @param {Core.data.stm.StateTrackingManager} stm\n         */\n        this.trigger('restoringStart', { stm : this });\n    }\n\n    /**\n     * @param {'undo'|'redo'} cause The cause of the restore, if applicable\n     * @internal\n     */\n    notifyStoresAboutStateRestoringStop({ cause, transactions }) {\n        this.forEachStore((store) => store.onStmRestoringStop?.(this));\n\n        /**\n         * Fired upon state restoration operation stops.\n         *\n         * @event restoringStop\n         * @param {Core.data.stm.StateTrackingManager} stm\n         */\n        this.trigger('restoringStop', { stm : this, cause, transactions });\n    }\n\n    notifyStoresAboutQueueReset(options) {\n        this.forEachStore((store) => store.onStmQueueReset?.(this, options));\n\n        /**\n         * Fired upon state undo/redo queue reset.\n         *\n         * @event queueReset\n         * @param {Core.data.stm.StateTrackingManager} stm\n         */\n        this.trigger('queueReset', { stm : this, options });\n    }\n\n    /**\n     * Method to call from model STM mixin upon model update\n     *\n     * @param {Core.data.Model} model\n     * @param {Object} newData\n     * @param {Object} oldData\n     *\n     * @private\n     */\n    onModelUpdate(model, newData, oldData, isInitialUserAction) {\n        stateTransition(this, this.state.onModelUpdate, model, newData, oldData, isInitialUserAction);\n    }\n\n    /**\n     * Method to call from model STM mixin upon tree model child insertion\n     *\n     * @param {Core.data.Model} parentModel Parent model\n     * @param {Number} index Insertion index\n     * @param {Core.data.Model[]} childModels Array of models inserted\n     * @param {Map} context Map with inserted models as keys and objects with previous parent,\n     *                      and index at previous parent.\n     *\n     * @private\n     */\n    onModelInsertChild(parentModel, index, childModels, context) {\n        stateTransition(this, this.state.onModelInsertChild, parentModel, index, childModels, context);\n    }\n\n    /**\n     * Method to call from model STM mixin upon tree model child removal\n     *\n     * @param {Core.data.Model} parentModel\n     * @param {Core.data.Model[]} childModels\n     * @param {Map} context\n     *\n     * @private\n     */\n    onModelRemoveChild(parentModel, childModels, context) {\n        stateTransition(this, this.state.onModelRemoveChild, parentModel, childModels, context);\n    }\n\n    /**\n     * Method to call from store STM mixin upon store models adding\n     *\n     * @param {Core.data.Store} store\n     * @param {Core.data.Model[]} models\n     * @param {Boolean} silent\n     *\n     * @private\n     */\n    onStoreModelAdd(store, models, silent) {\n        stateTransition(this, this.state.onStoreModelAdd, store, models, silent);\n    }\n\n    /**\n     * Method to call from store STM mixin upon store models insertion\n     *\n     * @param {Core.data.Store} store\n     * @param {Number} index\n     * @param {Core.data.Model[]} models\n     * @param {Map} context\n     * @param {Boolean} silent\n     *\n     * @private\n     */\n    onStoreModelInsert(store, index, models, context, silent) {\n        stateTransition(this, this.state.onStoreModelInsert, store, index, models, context, silent);\n    }\n\n    /**\n     * Method to call from store STM mixin upon store models removal\n     *\n     * @param {Core.data.Store} store\n     * @param {Core.data.Model[]} models\n     * @param {Object} context\n     * @param {Boolean} silent\n     *\n     * @private\n     */\n    onStoreModelRemove(store, models, context, silent) {\n        stateTransition(this, this.state.onStoreModelRemove, store, models, context, silent);\n    }\n\n    /**\n     * Method to call from store STM mixin upon store clear\n     *\n     * @param {Core.data.Store} store\n     * @param {Core.data.Model[]} allRecords\n     * @param {Boolean} silent\n     *\n     * @private\n     */\n    onStoreRemoveAll(store, allRecords, silent) {\n        stateTransition(this, this.state.onStoreRemoveAll, store, allRecords, silent);\n    }\n\n    // UI key event handling\n    onUndoKeyPress(event) {\n        const me = this;\n\n        if (me.enabled) {\n            if (event.shiftKey) {\n                if (me.canRedo) {\n                    event.preventDefault();\n                    me.redo();\n                }\n            }\n            else if (me.canUndo) {\n                event.preventDefault();\n                me.undo();\n            }\n        }\n    }\n\n    stash() {\n        const me = this;\n\n        if (this.transaction) {\n            const id = IdHelper.generateId('_stashedTransactionGeneratedId_');\n\n            me.stashedTransactions[id] = me.transaction;\n\n            me.rejectTransaction();\n\n            return id;\n        }\n    }\n\n    applyStash(id) {\n        const\n            me          = this,\n            transaction = me.stashedTransactions[id];\n\n        me[IS_APPLYING_STASH] = true;\n\n        if (transaction) {\n            me.startTransaction(transaction.title);\n\n            transaction.redo();\n\n            delete me.stashedTransactions[id];\n        }\n\n        me[IS_APPLYING_STASH] = false;\n    }\n}\n","import Base from '../Base.js';\n\n/**\n * @module Core/mixin/Finalizable\n */\n\n/**\n * This mixin provides an asynchronous completion mechanism. This allows a process to coordinate its async actions\n * (such as Ajax requests or user interaction) with cleanup.\n *\n * Consider a context tracking helper class, for example:\n *\n * ```javascript\n *  class Context extends Base.mixin(Finalizable) {\n *      // ...\n *\n *      async finish() {\n *          this.owner.trigger('finish', {\n *              context : this\n *          });\n *\n *          // Wait for any scheduled finalizer to run...\n *          await this.finalize();\n *      }\n *\n *      doFinalize() {\n *          this.destroy();\n *      }\n *  }\n * ```\n *\n * When the `finish` event is processed, the receiver can register a promise for whatever processing it would like to\n * perform:\n *\n * ```javascript\n *  class Foo {\n *      onFinish({ context }) {\n *          context.finalizer = this.askUser(context);\n *      }\n *\n *      async askUser(context) {\n *          //\n *      }\n *  }\n * ```\n *\n * @mixin\n * @internal\n */\nexport default Target => class Finalizable extends (Target || Base) {\n    static get $name() {\n        return 'Finalizable';\n    }\n\n    construct(...args) {\n        super.construct(...args);\n\n        /**\n         * This property can be set any time prior to calling {@link #function-finalize} (i.e., when the\n         * {@link #property-isFinalizing} property goes to `true`). When set, this instance will `await` this\n         * promise before completing the finalization process by calling {@link #function-doFinalize}.\n         * @member {Promise} finalizer\n         */\n        this.finalizer = null;\n\n        /**\n         * This property holds the `Promise` that will resolve when {@link #function-finalize} has completed. It is\n         * set when {@link #function-finalize} is called and cleared on return.\n         * @member {Boolean} finalizing\n         * @readonly\n         * @private\n         */\n        this.finalizing = null;\n\n        /**\n         * This property is `true` once the instance completes the {@link #function-finalize} method.\n         * @member {Boolean} isFinalized\n         * @readonly\n         */\n        this.isFinalized = false;\n\n        /**\n         * This property is set to `true` when {@link #function-finalize} is called.\n         * @member {Boolean} isFinalizing\n         * @readonly\n         */\n        this.isFinalizing = false;\n    }\n\n    /**\n     * This template method is called at the end of {@link #function-finalize}. By default it calls `destroy()`, but\n     * can be replaced by the derived class. This can be useful if it is not the `Finalizable` instance that awaits\n     * the {@link #function-finalize} method.\n     */\n    doFinalize() {\n        this.destroy();\n    }\n\n    /**\n     * This method is called (typically by this instance or its owner) to cleanup this instance while possibly first\n     * waiting for the {@link #property-finalizer} promise to settle. Once settled, the {@link #function-doFinalize}\n     * method is called.\n     * @async\n     */\n    finalize() {\n        const me = this;\n\n        let ret = me.finalizing;\n\n        if (!ret && !me.isFinalized) {\n            me.isFinalizing = true;  // note: we never clear this flag (use isFinalized to know if we're done)\n            // If we are called during finalization, we want to return the same promise, so we cache it away.\n            me.finalizing = ret = me._awaitFinalizer();\n        }\n\n        return ret;\n    }\n\n    async _awaitFinalizer() {\n        const me = this;\n\n        try {\n            await me.finalizer;\n        }\n        finally {\n            // be sure we clean up even if an exception is thrown by the finalizer...\n\n            me.finalizing = null;\n            me.isFinalized = true;\n\n            me.doFinalize();\n        }\n    }\n};\n","import Base from '../../Base.js';\nimport DomHelper from '../../helper/DomHelper.js';\nimport EventHelper from '../../helper/EventHelper.js';\nimport Delayable from '../../mixin/Delayable.js';\nimport Finalizable from '../../mixin/Finalizable.js';\nimport Identifiable from '../../mixin/Identifiable.js';\nimport DomDataStore from '../../data/DomDataStore.js';\nimport Objects from '../../helper/util/Objects.js';\n\n/**\n * @module Core/util/drag/DragContext\n */\n\nconst\n    ABORTED  = Symbol('dragAbort'), // Drag has been aborted\n    INIT     = Symbol('dragInit'),  // Button is down but insufficient movement to start the drag\n    DRAGGING = Symbol('dragDrag'),  // Button is down and movement has started a drag\n    DROPPED  = Symbol('dragDrop'),  // Button has been released and drop has occurred\n    lockDirections = {\n        x : 'horizontal',\n        y : 'vertical'\n    };\n\n/**\n * This class is created during drag operations of {@link Core/mixin/Draggable}. It holds the state of an ongoing drag\n * operation.\n * @extends Core/Base\n * @internal\n */\nexport default class DragContext extends Base.mixin(Finalizable, Delayable, Identifiable) {\n\n    static $name = 'DragContext';\n\n    static get configurable() {\n        return {\n            /**\n             * The element that will have the {@link Core.mixin.Draggable#property-draggingItemCls}. This element is\n             * determined by the {@link Core.mixin.Draggable#config-dragItemSelector}.\n             * @config {HTMLElement}\n             */\n            itemElement : null,\n\n            /**\n             * The `ScrollManager` instance to use for scrolling while dragging.\n             * @config {Core.util.ScrollManager}\n             * @private\n             */\n            scrollManager : null,\n\n            /**\n             * Config for `startMonitoring` call.\n             * @config {Object}\n             * @private\n             */\n            monitoringConfig : null,\n\n            /**\n             * The source of the drag operation.\n             * @config {Core.mixin.Draggable}\n             * @default\n             * @readonly\n             */\n            source : null,\n\n            /**\n             * The current target of the drag.\n             * @member {Core.mixin.Droppable}\n             * @readonly\n             */\n            target : null,\n\n            /**\n             * The current target element of the drag.\n             * @member {HTMLElement}\n             * @private\n             */\n            targetElement : null,\n\n            /**\n             * The minimum distance from the touchstart/mousedown/pointerdown that must be moved to actually start a\n             * drag operation.\n             * @config {Number}\n             * @default\n             * @readonly\n             */\n            threshold : 5,\n\n            /**\n             * The minimum amount of time a touch must be maintained before it will initiate a drag. Movement prior to\n             * this time will cancel the drag in order to allow touch scrolling.\n             * @config {Number}\n             * @default\n             */\n            touchStartDelay : 300\n        };\n    }\n\n    static get identifiable() {\n        return {};\n    }\n\n    /**\n     * The current DOM event being processed.\n     * @member {Event} event\n     * @readonly\n     */\n\n    construct(...args) {\n        super.construct(...args);\n\n        const\n            me = this,\n            { event } = me;\n\n        Object.assign(me, {\n            /**\n             * This property holds the `altKey` state of the most recent event.\n             * @member {Boolean}\n             */\n            altKey : null,\n\n            /**\n             * An array of functions to call when cleaning up the context instance.\n             * @member {Function[]}\n             * @private\n             */\n            cleaners : [],\n\n            /**\n             * This property holds the `ctrlKey` state of the most recent event.\n             * @member {Boolean}\n             */\n            ctrlKey : null,\n\n            /**\n             * Container for data associated with the drag. Data items are added by the {@link Core.mixin.Draggable}\n             * when the drag starts.\n             * @member {Map}\n             * @private\n             */\n            data : new Map(),\n\n            /**\n             * The element from which the drag operation started.\n             * @member {HTMLElement}\n             * @readonly\n             */\n            element : event.target,\n\n            /**\n             * The event that completed the drag (a `mouseup`, `pointerup` or `touchend`).\n             * @member {Event}\n             * @readonly\n             */\n            endEvent : null,\n\n            /**\n             * The most recent `mousemove`, `pointermove` or `touchmove` event.\n             * @member {Event}\n             * @private\n             */\n            lastMoveEvent : null,\n\n            /**\n             * This property holds the `metaKey` state of the most recent event.\n             * @member {Boolean}\n             */\n            metaKey : null,\n\n            /**\n             * The previous {@link #property-target} of the drag.\n             * @member {Core.mixin.Droppable}\n             * @readonly\n             */\n            previousTarget : null,\n\n            /**\n             * The scroll actions reported by the {@link #config-scrollManager}.\n             * @member {Object}\n             * @private\n             */\n            scrollerAction : null,\n\n            /**\n             * This property holds the `shiftKey` state of the most recent event.\n             * @member {Boolean}\n             */\n            shiftKey : null,\n\n            /**\n             * This property holds the current state of the drag process.\n             *\n             * This will be one of the following values:\n             *\n             *  - `DragContext.STATE.INIT` - The button is down but there is insufficient movement to start the drag.\n             *  - `DragContext.STATE.DRAGGING` - The button is down and movement has started the drag.\n             *  - `DragContext.STATE.DROPPED` - The button has been released and drop has occurred.\n             *  - `DragContext.STATE.ABORTED` - The drag has been aborted (this happens if the user presses the `ESC`\n             *    key or if the {@link #function-abort} method is called).\n             *\n             * @member {Symbol}\n             * @readonly\n             * @internal\n             */\n            state : INIT,\n\n            /**\n             * The event that started the drag operation.\n             * @member {Event}\n             * @readonly\n             */\n            startEvent : event,\n\n            /**\n             * The timer that fires when a touch pointermove is allowed to start the drag. A touch pointermove event\n             * prior to this will `abort()` the drag to allow touch scrolling.\n             * @member {Number}\n             * @private\n             */\n            touchStartTimer : null,\n\n            /**\n             * Stores the value from writes to the {@link #property-valid} property.\n             * @member {Boolean}\n             * @private\n             */\n            _valid : true\n        });\n\n        if (('touches' in event) && me.touchStartDelay) {\n            me.touchStartTimer = me.setTimeout(() => me.touchStartTimer = null, me.touchStartDelay, 'touchStartDelay');\n        }\n\n        EventHelper.on({\n            element : globalThis,\n            blur    : 'onWindowBlur',\n            thisObj : me\n        });\n    }\n\n    doDestroy() {\n        const\n            me = this,\n            { source, target } = me;\n\n        me.cleanup();\n\n        if (target?.dropping === me) {\n            target.dropping = null;\n        }\n\n        if (source?.dragging === me) {\n            source.dragging = null;\n        }\n\n        super.doDestroy();\n    }\n\n    onWindowBlur() {\n        if (this.started) {\n            this.abort();\n        }\n    }\n\n    /**\n     * This property is `true` if the {@link #function-abort} method was called and `false` otherwise. This\n     * is typically because the user pressed the ESC key, however, a drag can be aborted for other reasons.\n     * @property {Boolean}\n     * @readonly\n     */\n    get aborted() {\n        return this.state === ABORTED;\n    }\n\n    /**\n     * Returns `true` if the drag has completed either by mouse/pointerup or the {@link #function-abort} method.\n     * @property {Boolean}\n     * @readonly\n     */\n    get completed() {\n        return this.isDestroying || this.aborted || this.endEvent !== null;\n    }\n\n    /**\n     * This property is `true` if the drag {@link #config-threshold} has not yet been reached.\n     * @property {Boolean}\n     * @readonly\n     */\n    get pending() {\n        return this.state === INIT;\n    }\n\n    /**\n     * This property is `true` if the drag {@link #config-threshold} has been reached and the drag operation is active.\n     * @property {Boolean}\n     * @readonly\n     */\n    get started() {\n        return this.state !== INIT && !this.aborted;\n    }\n\n    /**\n     * This property is `true` when the drag is in a valid drop state. This can be set to `false` to indicate the drop\n     * is invalid. Setting to `true` does not ensure that the property will be `true` when next read due to other factors\n     * that are required to make the drop valid. For example, setting `valid = true` will still return `false` if called\n     * before the drag {@link #config-threshold} has not been reached or if the {@link #function-abort} method has been\n     * called.\n     * @property {Boolean}\n     */\n    get valid() {\n        return this.started && this.targetElement != null && this._valid;\n    }\n\n    set valid(v) {\n        this._valid = v;\n    }\n\n    //region Data Access\n\n    /**\n     * Retrieves a data item from the drag source. This method can only be called after the drag has completed.\n     * @param {String|String[]} name The name of the data item.\n     * @returns {*}\n     */\n    async get(name) {\n        if (this.aborted) {\n            throw new Error('Data is not available on aborted drag');\n        }\n        if (!this.completed) {\n            throw new Error('Data is not available until drag completion');\n        }\n\n        if (Array.isArray(name)) {\n            return Promise.all(name.map(s => this.get(s)));\n        }\n\n        let value = this.data.get(name);\n\n        if (typeof value === 'function') {\n            value = await value();\n\n            this.data.set(name, value);\n        }\n\n        return value;\n    }\n\n    /**\n     * Returns `true` if the named data item is present.\n     * @param {String} name The name of the data item.\n     * @returns {Boolean}\n     */\n    has(name) {\n        return this.data.has(name);\n    }\n\n    /**\n     * Retrieves a data item from the drag source if it is available. This will return `true` for an item that was\n     * {@link #function-set} using a renderer function.\n     * @param {String|String[]} name The name of the data item.\n     * @returns {*}\n     */\n    peek(name) {\n        if (this.aborted) {\n            throw new Error('Data is not available on aborted drag');\n        }\n\n        if (Array.isArray(name)) {\n            return name.map(s => this.peek(s));\n        }\n\n        let value = this.data.get(name);\n\n        if (typeof value === 'function') {\n            value = true;\n        }\n\n        return value;\n    }\n\n    /**\n     * Sets a data item for the drag. If a function is passed, it is called to render the data only if that data is\n     * actually requested via the {@link #function-get} method. A data renderer function can be `async`.\n     * @param {String} name The name of the data item.\n     * @param {*} value The value of the data item.\n     */\n    set(name, value) {\n        this.data.set(name, value);\n    }\n\n    //endregion\n    //region Configs\n\n    changeTarget(target, was) {\n        if (target !== was) {\n            const me = this;\n\n            me._target = target;\n            me.previousTarget = was;\n\n            if (was) {\n                was.dropping = null;\n            }\n\n            if (target) {\n                target.dropping = me;  // calls dragEnter/Leave on the target\n\n                if (target.dropping !== me) {  // if (target did not accept us)\n                    target = null;\n\n                    me.valid = false;\n                }\n            }\n\n            me._target = was;\n        }\n\n        return target;\n    }\n\n    updateTarget(target, was) {\n        const me = this;\n\n        if (was) {\n            me.source.dragLeaveTarget(me, was);\n        }\n\n        if (target) {\n            me.valid = true;\n\n            // Always give the target an initial dragMove since feedback/indicators will need to update on move and\n            // the lack of a move on entry will just make that a special case.\n            target.dragMove(me);\n\n            me.source.dragEnterTarget(me);\n        }\n    }\n\n    updateTargetElement(targetElement) {\n        let droppable,\n            droppables,\n            droppableSelector,\n            i,\n            t;\n\n        // We interrogate all encapsulating DOM elements to see if we are in a Droppable's element.\n        // If we find an element which has Droppables registered for it, we attempt to set each as\n        // our target, and go with the first one that accepts us.\n        // changeTarget sets target.dropping to this Context, and the target's dragEnter implementation\n        // may reject it by returning false.\n        for (t = targetElement; t; t = t.parentElement) {\n            droppables = DomDataStore.get(t, 'droppables');\n\n            if (droppables) {\n                for (i = 0; i < droppables.length; ++i) {\n                    droppable = droppables[i];\n\n                    // If the event target is *inside* the Droppable's root, we can ask the Droppable\n                    // to accept this DragContext.\n                    // Otherwise we can get a hit on borders.\n                    if (droppable.dropRootElement.contains(targetElement)) {\n                        droppableSelector = droppable.droppableSelector;\n\n                        // If the target element is not inside the Droppable's selector, give up.\n                        if (!droppableSelector || targetElement.closest(`#${DomHelper.getId(droppable.dropRootElement)} ${droppableSelector}`)) {\n                            this.target = droppable;\n\n                            // The found Droppable accepted this DragContext, so we're done -\n                            // we are using this Droppable.\n                            if (this.target === droppable) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    //endregion\n    //region Operations\n\n    /**\n     * Aborts the drag. After calling this method, {@link #property-aborted} will be `true`, {@link #property-valid}\n     * will be `false` and {@link #property-completed} will be `true`.\n     */\n    abort() {\n        const\n            me = this,\n            { element, source } = me;\n\n        // Force a synchronous layout so that transitions from this point will work.\n        element?.getBoundingClientRect();\n\n        if (me.state !== DROPPED) {\n            me.state = ABORTED;\n            me.cleanup();\n        }\n\n        source?.endDrag(me);\n    }\n\n    begin() {\n        const\n            me = this,\n            { source } = me,\n            ret = source.beforeDrag(me);\n\n        if (ret !== false) {\n            source.dragging = me;\n        }\n\n        return ret;\n    }\n\n    cleanup() {\n        let cleaner;\n\n        while ((cleaner = this.cleaners.pop())) {\n            cleaner();\n        }\n    }\n\n    end(event) {\n        const\n            me = this,\n            { lastMoveEvent : lastEvent, target } = me,\n            { dragSwallowClickTime } = me.source;\n\n        me.event = me.endEvent = event;\n        me.syncFlags();\n\n        if (me.started) {\n            if (lastEvent?.clientX !== event.clientX || lastEvent?.clientY !== event.clientY ||\n                lastEvent?.target !== event.target) {\n                // Make sure the drop event is preceded by a move to the final position...\n                me.track();\n            }\n\n            if (dragSwallowClickTime) {\n                // Prevent the impending document click from the mouseup event from propagating\n                // into a click on our element.\n                EventHelper.on({\n                    element : document,\n                    capture : true,\n                    expires : dragSwallowClickTime, // In case a click did not ensue, remove the listener\n                    once    : true,\n                    click(event) {\n                        event.stopPropagation();\n                    }\n                });\n            }\n\n            me.state = DROPPED;\n\n            if (target !== me.source) {\n                // If we are the target and not also the source, we need to call dragDrop() now. If we are\n                // the source, dragDrop() will be called by Draggable.\n                target?.dragDrop(me);\n            }\n        }\n    }\n\n    fakeKey(event, down) {\n        const\n            me = this,\n            { lastMoveEvent } = me;\n\n        if (lastMoveEvent && me.element) {\n            let changed;\n\n            // Indicate that this is a 'fake' mousemove event as a result of the keydown\n            lastMoveEvent.isKey = true;\n\n            if (event.key === 'Alt') {\n                if (me.altKey !== down) {\n                    me.altKey = down;\n                    changed = true;\n                }\n            }\n            else if (event.key === 'Control') {\n                if (me.ctrlKey !== down) {\n                    me.ctrlKey = down;\n                    changed = true;\n                }\n            }\n\n            if (changed) {\n                me.event = lastMoveEvent;\n\n                me.track();\n            }\n        }\n    }\n\n    keyDown(event) {\n        if (!this.completed) {\n            if (event.key === 'Escape') {\n                this.abort();\n            }\n            else if (this.isDragToggleKey(event.key)) {\n                this.fakeKey(event, true);\n            }\n        }\n    }\n\n    keyUp(event) {\n        if (!this.completed && this.isDragToggleKey(event.key)) {\n            this.fakeKey(event, false);\n        }\n    }\n\n    getDistance(event) {\n        return EventHelper.getDistanceBetween(this.startEvent, event);\n    }\n\n    isDragToggleKey(key) {\n        return key === 'Control' || key === 'Alt';\n    }\n\n    move(event) {\n        const\n            me = this,\n            { target } = event,\n            distance = me.getDistance(event),\n            significant = distance >= me.threshold;\n\n        me.syncFlags();\n\n        if (me.touchStartTimer) {\n            if (significant) {\n                me.abort();\n            }\n            return;\n        }\n\n        if (target && target.nodeType === Node.ELEMENT_NODE) {\n            if (significant && !me.started) {\n                me.event = event;\n\n                // triggers beforeDragStart, dragStart. returning false from beforeDragStart aborts drag\n                if (me.start() === false) {\n                    me.abort();\n                    return;\n                }\n            }\n\n            // With resize observer polyfill scroll event might fire after drop is completed but before listener is\n            // removed\n            if (me.started && !me.completed) {\n                me.lastMoveEvent = me.event = event;\n\n                // to prevent view drag (scroll) on ipad\n                if (event.type === 'touchmove') {\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                }\n\n                me.track();\n            }\n        }\n    }\n\n    start() {\n        const\n            me = this,\n            { scrollManager, monitoringConfig, source } = me,\n            { draggingBodyCls : activeCls, dragLock } = source,\n            element = /* source.dragWithin || */ source.dragRootElement;\n\n        me.state = DRAGGING;\n\n        // Now that the drag drop is confirmed to be starting, activate the configured scrollManager if present\n        if (scrollManager) {\n            const detacher = scrollManager.startMonitoring(Objects.merge({\n                scrollables : [{\n                    element\n                }],\n                direction : lockDirections[dragLock] || dragLock || 'both',\n                callback(scrollerAction) {\n                    const { lastMoveEvent } = me;\n\n                    if (lastMoveEvent && me.element) {\n                        // Indicate that this is a 'fake' mousemove event as a result of the scrolling\n                        lastMoveEvent.isScroll = true;\n\n                        me.event = lastMoveEvent;\n                        me.scrollerAction = scrollerAction;\n\n                        me.track();\n\n                        me.scrollerAction = null;\n                    }\n                }\n            }, monitoringConfig));\n\n            me.cleaners.push(detacher);\n        }\n\n        // Global informational class for when DragHelper is dragging\n        const rootEl = source.dragRootElement.closest('.b-outer') || document.body;\n        rootEl.classList.add(activeCls);\n\n        me.cleaners.push(() => rootEl.classList.remove(activeCls));\n\n        if (source.startDrag(me) === false) {\n            me.cleanup();\n\n            return false;\n        }\n    }\n\n    syncFlags() {\n        const\n            me = this,\n            { event } = me;\n\n        me.altKey = event.altKey;\n\n        // Our EventHelper events are \"unfixed\" after processing, so the meta->ctrl\n        // modifier mapping will not persist. We must do the mapping here.\n        me.ctrlKey = event.ctrlKey || event.metaKey;\n        me.metaKey = event.metaKey;\n        me.shiftKey = event.shiftKey;\n    }\n\n    track() {\n        const\n            me = this,\n            { event, source, target } = me;\n\n        let targetElement = event.target,\n            touch;\n\n        // NOTE: we cannot syncFlags here since we are called to pass along keydown events as movement updates\n\n        // \"pointer-events:none\" touchmove has no effect for the touchmove event target, meaning we cannot know\n        // what's under the cursor as easily in touch devices\n        if (event.type === 'touchmove') {\n            touch = event.changedTouches[0];\n\n            // From MDN:\n            //  * clientX/Y - the coordinates of the touch point relative to the left/top edge of the browser viewport,\n            //    not including any scroll offset.\n            //  * The elementFromPoint() method returns the topmost Element at the specified coordinates (relative to\n            //    the viewport).\n            targetElement = DomHelper.elementFromPoint(touch.clientX, touch.clientY);\n        }\n\n        me.targetElement = targetElement;  // when we change elements, update me.target\n\n        if (target === me.target) {\n            // if we have a target and that did not change due to setting targetElement, we need to inform the target\n            // of the drag move\n            target?.dragMove(me);\n        }\n\n        source.trackDrag(me);\n    }\n\n    //endregion\n}\n\nDragContext.prototype.STATE = DragContext.STATE = Object.freeze({\n    ABORTED,\n    INIT,\n    DRAGGING,\n    DROPPED\n});\n","import Base from '../../Base.js';\nimport Factoryable from '../../mixin/Factoryable.js';\n\n/**\n * @module Core/util/drag/DragProxy\n */\n\n/**\n * Drag proxies are helper classes that represent the object being dragged in some visual way. This is an abstract\n * base with which particular drag proxy classes (such as, {@link Core.util.drag.DragTipProxy} are registered.\n *\n * Derived classes the various template methods of this class to manage their particular form of visual feedback.\n * @extends Core/Base\n * @internal\n */\nexport default class DragProxy extends Base.mixin(Factoryable) {\n    static get type() {\n        return 'default';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * The currently active `DragContext`. This context will be active prior to be passed to the proxy. This\n             * config is set by {@link #function-dragStart} and cleared by {@link #function-dragEnd}.\n             * @config {Core.util.drag.DragContext}\n             */\n            dragging : null\n        };\n    }\n\n    static get factoryable() {\n        return {\n            defaultType : DragProxy\n        };\n    }\n\n    /**\n     * The `Draggable` instance that owns this drag proxy.\n     * @member {Core.mixin.Draggable} owner\n     * @readonly\n     */\n\n    //region Configs\n\n    updateDragging(drag, was) {\n        if (was) {\n            this.close(was);\n        }\n\n        if (drag) {\n            this.open(drag);\n        }\n    }\n\n    //endregion\n\n    //region Operations\n\n    /**\n     * This template method is called when {@link #config-dragging} is reset to `null`.\n     * @param {Core.util.drag.DragContext} drag The drag instance.\n     */\n    close(drag) {\n        // template\n    }\n\n    /**\n     * This template method is called when {@link #config-dragging} is set to a non-`null` value.\n     * @param {Core.util.drag.DragContext} drag The drag instance.\n     */\n    open(drag) {\n        // template\n    }\n\n    //endregion\n\n    //region Drag Processing\n\n    /**\n     * This template method is called by the `Draggable` instance when the drag officially starts.\n\n     * This sets the {@link #config-dragging} config to `drag`, which triggers the call to {@link #function-open}.\n     * @param {Core.util.drag.DragContext} drag The drag instance.\n     */\n    dragStart(drag) {\n        this.dragging = drag;\n    }\n\n    /**\n     * This template method is called by the `Draggable` instance as drag movement occurs.\n     * @param {Core.util.drag.DragContext} drag The drag instance.\n     */\n    dragMove(drag) {\n        // template\n    }\n\n    /**\n     * This template method is called by the `Draggable` instance when the drag completes.\n     *\n     * This sets the {@link #config-dragging} config to `null`, which triggers the call to {@link #function-close}.\n     * @param {Core.util.drag.DragContext} drag The drag instance.\n     */\n    dragEnd(drag) {\n        this.dragging = null;\n    }\n\n    //endregion\n}\n\nDragProxy.initClass();\n","import Base from '../Base.js';\nimport EventHelper from '../helper/EventHelper.js';\nimport ObjectHelper from '../helper/ObjectHelper.js';\n\nimport DragContext from '../util/drag/DragContext.js';\nimport DragProxy from '../util/drag/DragProxy.js';\n\n/**\n * @module Core/mixin/Draggable\n */\n\n/**\n * Mix this into another class to enable drag/drop support.\n *\n * To use a draggable, it must be associated with an element that contains draggable content:\n *\n * ```javascript\n *  let draggable = new MyDraggable({\n *      dragRootElement : someElement\n *  });\n * ```\n *\n * Once the `dragRootElement` is assigned, any element inside that root is a candidate for dragging. To limit the\n * allowed element, set the {@link #config-dragSelector} config.\n *\n * ```javascript\n *  let draggable = new MyDraggable({\n *      dragRootElement : someElement,\n *      dragSelector    : '.drag-this'\n *  });\n * ```\n *\n * @mixin\n * @internal\n */\nexport default Target => class Draggable extends (Target || Base) {\n    static get $name() {\n        return 'Draggable';\n    }\n\n    //region Configs\n\n    static get configurable() {\n        return {\n            /**\n             * The current `DragContext`. This is created immediately on pointerdown but does not become active until\n             * some movement occurs. This {@link #config-dragThreshold threshold} is configurable.\n             * @member {Core.util.drag.DragContext}\n             * @readonly\n             */\n            dragging : {\n                $config : 'nullify',\n                value   : null\n            },\n\n            /**\n             * A CSS selector to use to ascend from the {@link #config-dragRootElement} to find the element that will\n             * gain the {@link #property-draggingCls} and {@link #property-draggingStartedCls} CSS classes.\n             * @config {String}\n             */\n            draggingClsSelector : null,\n\n            /**\n             * The listeners to add to the `document` during a drag.\n             * @config {Object}\n             * @private\n             */\n            dragDocumentListeners : {\n                element : document,\n                keydown : 'onDragKeyDown',\n                keyup   : 'onDragKeyUp',\n\n                // On mobile, a long-press will (sometimes) trigger a context menu, so we suppress it:\n                contextmenu : 'onDragContextMenu',\n\n                // We don't use pointermove/up because they get snared in the \"touch-action\" vs \"pan-x/y\" trap and we\n                // cannot prevent panning (aka scrolling) in response to move events if we go that way:\n                mousemove : 'onDragPointerMove',\n                mouseup   : 'onDragPointerUp',\n\n                // Touch desktops don't fire touchend event when touch has ended, instead pointerup is fired. iOS does\n                // fire touchend:\n                pointerup : 'onDragPointerUp',\n                touchend  : 'onDragPointerUp',\n                touchmove : {\n                    handler : 'onDragPointerMove',\n                    passive : false // We need to be able to preventDefault on the touchmove\n                }\n            },\n\n            /**\n             * A CSS selector to use to ascend from the drag element to find the element that will gain the\n             * {@link #property-draggingItemCls} CSS class. If not supplied, the drag element will gain this CSS\n             * class.\n             * @config {String}\n             */\n            dragItemSelector : null,\n\n            /**\n             * A CSS class to add to items identified by the {@link #config-dragItemSelector} when the mouse\n             * enters.\n             * @config {String}\n             */\n            dragItemOverCls : null,\n\n            /**\n             * A function to call when the pointer enters a {@link #config-dragItemSelector}.\n             * @config {Function} onDragItemMouseEnter\n             */\n\n            /**\n             * A function to call when the pointer moves inside a {@link #config-dragItemSelector}.\n             * @config {Function} onDragItemMouseMove\n             */\n\n            /**\n             * A function to call when the pointer leaves a {@link #config-dragItemSelector}.\n             * @config {Function} onDragItemMouseLeave\n             */\n\n            /**\n             * Configure as `'x'` to lock dragging to the `X` axis (the drag will only move horizontally) or `'y'`\n             * to lock dragging to the `Y` axis (the drag will only move vertically).\n             * @config {'x'|'y'|null}\n             */\n            dragLock : null,\n\n            /**\n             * The minimum distance a drag must move to be considered a drop and not\n             * {@link Core.util.drag.DragContext#property-aborted}.\n             * @config {Number}\n             * @default\n             */\n            dragMinDistance : 1,\n\n            /**\n             * The {@link Core.util.drag.DragProxy drag proxy} is a helper object that can be used to display feedback\n             * during a drag.\n             * @config {DragProxyConfig|Core.util.drag.DragProxy}\n             */\n            dragProxy : {\n                $config : ['lazy', 'nullify'],\n\n                value : null\n            },\n\n            /**\n             * The outer element where dragging will operate (attach events to it and use as root limit when looking\n             * for ancestors).\n             * @config {HTMLElement}\n             */\n            dragRootElement : {\n                $config : 'nullify',\n\n                value : null\n            },\n\n            /**\n             * Set to `true` to allow a drag to drop on to the same element from which the drag started.\n             * @config {Boolean}\n             * @default\n             */\n            dragSameTargetDrop : false,\n\n            /**\n             * A CSS selector used to determine which element(s) can be dragged.\n             * @config {String}\n             * @default\n             */\n            dragSelector : null,\n\n            /**\n             * A CSS selector used to identify child element(s) that should not trigger drag.\n             * @config {String}\n             */\n            ignoreSelector : null,\n\n            /**\n             * The number of milliseconds after a pointerup to ignore click events on the document. This\n             * is used to avoid the \"up\" event itself generating a `click` on the target.\n             * @config {Number}\n             * @default\n             */\n            dragSwallowClickTime : 50,\n\n            /**\n             * The amount of pixels to move pointer/mouse before it counts as a drag operation.\n             * @config {Number}\n             * @default\n             */\n            dragThreshold : 5,\n\n            /**\n             * The number of milliseconds that must elapse after a `touchstart` event before it is considered a drag. If\n             * movement occurs before this time, the drag is aborted. This is to allow touch swipes and scroll gestures.\n             * @config {Number}\n             * @default\n             */\n            dragTouchStartDelay : 300,\n\n            /**\n             * The CSS selector to use to identify the closest valid target from the event target.\n             * @config {String}\n             */\n            dropTargetSelector : null,\n\n            /**\n             * The {@link #config-dragSelector} item the mouse is currently over.\n             * @member {HTMLElement} overItem\n             * @readonly\n             */\n            overItem : null,\n\n            testConfig : {\n                dragSwallowClickTime : 50\n            }\n        };\n    }\n\n    static get properties() {\n        return {\n            /**\n             * The CSS class to add to the {@link #config-dragRootElement} (or {@link #config-draggingClsSelector} from\n             * there) as soon as the pointerdown event occurs.\n             * @member {String}\n             * @readonly\n             */\n            draggingCls : 'b-draggable-active',\n\n            /**\n             * The CSS class to add to the `body` element as soon as the {@link #config-dragThreshold} is reached and\n             * an actual drag is in progress.\n             * @member {String}\n             * @readonly\n             */\n            draggingBodyCls : 'b-draghelper-active',  // match DragHelper since we need the same treatment\n\n            /**\n             * The CSS class to add to the element being dragged as soon as the pointerdown event occurs.\n             * @member {String}\n             * @readonly\n             */\n            draggingItemCls : 'b-dragging-item',\n\n            /**\n             * The CSS class to add to the {@link #config-dragRootElement} (or {@link #config-draggingClsSelector} from\n             * there) as soon as the {@link #config-dragThreshold} is reached and an actual drag is in progress.\n             * @member {String}\n             * @readonly\n             */\n            draggingStartedCls : 'b-draggable-started',\n\n            /**\n             * The CSS class that is added to the {@link #config-dragRootElement}, i.e., `'b-draggable'`.\n             * @property {String}\n             * @readonly\n             */\n            draggableCls : 'b-draggable'\n        };\n    }\n\n    //endregion\n\n    //region Drag Processing\n    // These template methods are implemented by derived classes as desired. There is only one overlap with Droppable's\n    // template methods (dragDrop) so that a class can easily mixin both Draggable and Droppable and always distinguish\n    // whether it is acting as the source, the target, or both.\n\n    /**\n     * This template method is called when the mousedown of a potential drag operation occurs. This happens before the\n     * gesture is known to be a drag, meaning the {@link #config-dragThreshold} has not been reached. This method\n     * should initialize the {@link Core.util.drag.DragContext} using the {@link Core.util.drag.DragContext#function-set}\n     * method. Alternatively, this method may return `false` to prevent the drag operation.\n     *\n     * *Important:* Because no drag has occurred at the time this method is called, only minimal processing should be\n     * done (such as initializing the {@link Core.util.drag.DragContext}). Anything more should be done in the\n     * {@link #function-dragStart} method or in response to the {@link #event-dragStart} event which happen only if\n     * the user drags the mouse before releasing the mouse button.\n     * @param {Core.util.drag.DragContext} drag\n     */\n    beforeDrag(drag) {\n        const\n            { dragRootElement, dragSelector, ignoreSelector } = this,\n            target = dragSelector && drag.element.closest(dragSelector);\n\n        return !dragSelector || Boolean(target &&\n            target === dragRootElement ||\n            (dragRootElement.contains(target) && (!ignoreSelector || !drag.element.matches(ignoreSelector)))\n        );\n    }\n\n    /**\n     * This template method is called when the drag operation starts. This occurs when the {@link #config-dragThreshold}\n     * has been reached.\n     * Your implementation may return `false` to prevent the startup of the drag operation.\n     * @param {Core.util.drag.DragContext} drag\n     */\n    dragStart(drag) {\n        // template\n    }\n\n    /**\n     * This template method is called as the drag moves. This occurs on each mouse/pointer/touchmove event.\n     * @param {Core.util.drag.DragContext} drag\n     */\n    dragOver(drag) {\n        // template\n    }\n\n    /**\n     * This template method is called when the drag enters a {@link Core.mixin.Droppable target}.\n     * @param {Core.util.drag.DragContext} drag\n     */\n    dragEnterTarget(drag) {\n        // template\n    }\n\n    /**\n     * This template method is called when the drag leaves a {@link Core.mixin.Droppable target}.\n     * @param {Core.util.drag.DragContext} drag\n     * @param {Core.mixin.Droppable} oldTarget The previous value of `drag.target`.\n     */\n    dragLeaveTarget(drag, oldTarget) {\n        // template\n    }\n\n    /**\n     * This template method is called when the drag operation completes. This occurs on the pointerup event.\n     *\n     * This method is not called if the drag is {@link Core.util.drag.DragContext#property-aborted}.\n     * @param {Core.util.drag.DragContext} drag\n     */\n    dragDrop(drag) {\n        // template\n    }\n\n    /**\n     * This template method is called when the drag operation completes. This occurs on the pointerup event or perhaps\n     * a keypress event.\n     *\n     * This method is always called, even if the drag is {@link Core.util.drag.DragContext#property-aborted}.\n     * @param {Core.util.drag.DragContext} drag\n     */\n    dragEnd(drag) {\n        // template\n    }\n\n    //endregion\n\n    //region Drag Management\n    // These methods are called by the DragContext and generally manage element updates (adding/removing classes) or\n    // event firing. In most cases these methods then call a corresponding Drag Processing template method intended\n    // for derived classes to implement.\n\n    get activeDrag() {\n        const { dragging : drag } = this;\n\n        return (drag?.started && !drag.completed) ? drag : null;\n    }\n\n    /**\n     * Return the `Events` instance from which drag events are fired.\n     * @internal\n     * @property {Core.mixin.Events}\n     */\n    get dragEventer() {\n        return this.trigger ? this : null;  // simple Events feature detector\n    }\n\n    get draggingClassElement() {\n        const { draggingClsSelector, dragRootElement } = this;\n\n        return draggingClsSelector ? dragRootElement?.closest(draggingClsSelector) : dragRootElement;\n    }\n\n    beginDrag(drag) {\n        const { draggingCls, draggingClassElement } = this;\n\n        if (draggingCls && draggingClassElement) {\n            draggingClassElement.classList.add(draggingCls);\n            drag.cleaners.push(() => draggingClassElement.classList.remove(draggingCls));\n        }\n    }\n\n    async endDrag(drag) {\n        const\n            me = this,\n            { dragEventer, dragProxy } = me;\n\n        if (drag.valid) {\n            // The implementation may be async. If so, any Promise must always be\n            // propagated back to a point which may have to await it\n            await me.dragDrop(drag);\n        }\n\n        if (me.isDestroyed) {\n            return;\n        }\n\n        if (drag.pending) {\n            drag.destroy();\n        }\n        else {\n            me.dragEnd(drag);\n            dragProxy?.dragEnd(drag);\n\n            /**\n             * This event is fired when a drag gesture is completed due to the user aborting it (with the `ESC` key) or\n             * if the {@link Core.util.drag.DragContext#function-abort} method was called.\n             * @event dragCancel\n             * @param {Core.mixin.Draggable} source The draggable instance that fired the event.\n             * @param {Core.util.drag.DragContext} drag The drag context.\n             * @param {Event} event The browser event.\n             */\n            /**\n             * This event is fired when a drag gesture is completed successfully.\n             *\n             * This event is **not** fired if the drag was aborted by the user pressing the `ESC` key or if the\n             * {@link Core.util.drag.DragContext#function-abort} method was called.\n             * @event drop\n             * @param {Core.mixin.Draggable} source The draggable instance that fired the event.\n             * @param {Core.util.drag.DragContext} drag The drag context.\n             * @param {Event} event The browser event.\n             */\n            dragEventer?.trigger(drag.valid ? 'drop' : 'dragCancel', { drag, event : drag.event });\n\n            // The drag context could have registered finalizers added by the above methods or event. If so, we need to\n            // wait for finalization of the drag before we clear our \"dragging\" config.\n            me.finalizeDrag(drag);\n        }\n    }\n\n    async finalizeDrag(drag) {\n        await drag.finalize?.();\n\n        // The doFinalize() method of DragContext is called by the above await... which nulls our \"dragging\" config\n    }\n\n    moveDrag(drag) {\n        if (this.dragOver(drag) !== false) {\n            const { dragEventer, dragProxy } = this;\n\n            dragProxy?.dragMove(drag);\n\n            /**\n             * This event is fired as a drag gesture progresses due to cursor movement.\n             * @event drag\n             * @param {Core.mixin.Draggable} source The draggable instance that fired the event.\n             * @param {Core.util.drag.DragContext} drag The drag context.\n             * @param {Event} event The browser event.\n             */\n            dragEventer?.trigger('drag', { drag, event : drag.event });\n        }\n    }\n\n    setupDragContext(event) {\n        const\n            me = this,\n            { dragItemSelector, id } = me,\n            { target } = event;\n\n        return {\n            event,\n            id              : id ? `${id}-drag-${me._nextDragId = (me._nextDragId || 0) + 1}` : null,\n            itemElement     : dragItemSelector ? target.closest(dragItemSelector) : target,\n            touchStartDelay : me.dragTouchStartDelay,\n            source          : me,\n            threshold       : me.dragThreshold\n        };\n    }\n\n    startDrag(drag) {\n        const\n            { draggingStartedCls, draggingClassElement, draggingItemCls, dragEventer, dragProxy } = this,\n            { itemElement } = drag;\n\n        /**\n         * This event is fired prior to starting a drag gesture. This does not occur immediately after the user\n         * performs the pointer/mousedown/touchstart but only after the {@link #config-dragThreshold} amount of\n         * movement has taken place.\n         *\n         * The drag is canceled if a listener returns `false`.\n         * @event beforeDragStart\n         * @param {Core.mixin.Draggable} source The draggable instance that fired the event.\n         * @param {Core.util.drag.DragContext} drag The drag context.\n         * @param {Event} event The browser event.\n         * @preventable\n         */\n        if (dragEventer?.trigger('beforeDragStart', { drag, event : drag.event }) === false) {\n            return false;\n        }\n\n        if (draggingStartedCls && draggingClassElement) {\n            draggingClassElement.classList.add(draggingStartedCls);\n            drag.cleaners.push(() => draggingClassElement.classList.remove(draggingStartedCls));\n        }\n\n        if (draggingItemCls && itemElement) {\n            itemElement.classList.add(draggingItemCls);\n            drag.cleaners.push(() => itemElement.classList.remove(draggingItemCls));\n        }\n\n        dragProxy?.dragStart(drag);\n\n        const result = this.dragStart(drag);\n\n        if (result !== false) {\n            /**\n             * This event is fired when a drag gesture has started. This does not occur immediately after the user\n             * performs the pointer/mousedown/touchstart but only after the {@link #config-dragThreshold} amount of\n             * movement has taken place.\n             * @event dragStart\n             * @param {Core.mixin.Draggable} source The draggable instance that fired the event.\n             * @param {Core.util.drag.DragContext} drag The drag context.\n             * @param {Event} event The browser event.\n             */\n            dragEventer?.trigger('dragStart', { drag, event : drag.event });\n        }\n\n        return result;\n    }\n\n    trackDrag(drag) {\n        const { dropTargetSelector } = this;\n\n        drag.valid = !(dropTargetSelector && !drag.targetElement?.closest(dropTargetSelector));\n\n        this.moveDrag(drag);\n    }\n\n    //endregion\n\n    //region Configs\n\n    configureListeners(drag) {\n        const\n            me = this,\n            listeners = ObjectHelper.assign({\n                thisObj : me\n            }, me.dragDocumentListeners);\n\n        // Only listen for the events related to how the drag was initiated:\n        if ('touches' in drag.startEvent) {\n            delete listeners.mousemove;\n            delete listeners.mouseup;\n        }\n        else {\n            delete listeners.contextmenu;\n            delete listeners.touchmove;\n            delete listeners.touchend;\n            delete listeners.pointerup;\n        }\n\n        return listeners;\n    }\n\n    //endregion\n\n    //region Configs\n\n    updateDragging(drag, old) {\n        const me = this;\n\n        if (drag) {\n            const listeners = me.configureListeners(drag);\n\n            drag.cleaners.push(EventHelper.on(listeners));\n\n            me.beginDrag(drag);\n        }\n        else if (old) {\n            old.destroy();\n        }\n    }\n\n    changeDragProxy(config, existing) {\n        return DragProxy.reconfigure(existing, config, {\n            owner : this,\n\n            defaults : {\n                owner : this\n            }\n        });\n    }\n\n    updateDragRootElement(rootEl, was) {\n        const\n            me = this,\n            {\n                draggableCls,\n                dragItemSelector,\n                onDragItemMouseMove\n            }  = me;\n\n        was?.classList.remove(draggableCls);\n        me._dragRootDetacher?.();\n\n        if (rootEl) {\n            const listeners = {\n                thisObj    : me,\n                element    : rootEl,\n                mousedown  : 'onDragMouseDown',\n                // We have touchstart listener in place since Siesta/Chrome can send these events even on non-touch\n                // devices:\n                touchstart : 'onDragTouchStart',\n\n                // On iOS, because we use pointerup to represent the drop gesture,\n                // the initiating pointerdown event is captured, and its target is\n                // the original start target. We must always release pointer capture.\n                // https://github.com/bryntum/support/issues/4111\n                pointerdown : e => e.pointerId && e.target.releasePointerCapture?.(e.pointerId)\n            };\n\n            if (onDragItemMouseMove) {\n                listeners.mousemove = {\n                    delegate : dragItemSelector,\n                    handler  : 'onDragItemMouseMove'\n                };\n            }\n\n            if (me.dragItemOverCls || onDragItemMouseMove || me.onDragItemMouseEnter || me.onDragItemMouseLeave) {\n                Object.assign(listeners, {\n                    mouseover : {\n                        delegate : dragItemSelector,\n                        handler  : 'onDragItemMouseOver'\n                    },\n                    mouseout : {\n                        delegate : dragItemSelector,\n                        handler  : 'onDragItemMouseOut'\n                    }\n                });\n            }\n\n            rootEl.classList.add(draggableCls);\n            me._dragRootDetacher = EventHelper.on(listeners);\n        }\n    }\n\n    //endregion\n\n    //region Events\n\n    onDragItemMouseOver(event) {\n        this.overItem = event;\n    }\n\n    onDragItemMouseOut(event) {\n        if (!this.dragging) {\n            this.overItem = event;\n        }\n    }\n\n    changeOverItem(event) {\n        this.enterLeaveEvent = event;\n\n        if (event.type === 'mouseout') {\n            // Must return null, not undefined to unset the overItem property\n            return event.relatedTarget?.closest(this.dragItemSelector) || null;\n        }\n        else {\n            return event.target.closest(this.dragItemSelector);\n        }\n    }\n\n    updateOverItem(overItem, oldOverItem) {\n        const\n            me                  = this,\n            { dragItemOverCls } = me;\n\n        if (oldOverItem) {\n            dragItemOverCls && oldOverItem.classList.remove(dragItemOverCls);\n            me.onDragItemMouseLeave?.(me.enterLeaveEvent, oldOverItem);\n        }\n\n        if (overItem) {\n            dragItemOverCls && overItem.classList.add(dragItemOverCls);\n            me.onDragItemMouseEnter?.(me.enterLeaveEvent, overItem);\n        }\n    }\n\n    onDragContextMenu(event) {\n        event.preventDefault();\n    }\n\n    onDragKeyDown(event) {\n        this.dragging.keyDown(event);\n    }\n\n    onDragKeyUp(event) {\n        this.dragging.keyUp(event);\n    }\n\n    /**\n     * Grab draggable element on mouse down.\n     * @param {Event} event\n     * @private\n     */\n    onDragMouseDown(event) {\n        // only dragging with left mouse button\n        if (event.button === 0) {\n            this.onDragPointerDown(event);\n        }\n    }\n\n    /**\n     * Grab draggable element on pointerdown.\n     * @param {Event} event\n     * @private\n     */\n    onDragPointerDown(event) {\n        let { dragging : drag } = this;\n\n        // If a drag is ongoing already, finalize it and don't proceed with new drag (happens if user does pointerup\n        // outside browser window). Also handles the edge case of trying to start a new drag while previous is awaiting\n        // finalization, in which case it just bails out.\n        if (!drag) {\n            drag = this.setupDragContext(event);\n\n            // The DragContext consults our beforeDrag handler, and if that succeeds, the Context injects itself into\n            // this instance as our draggable (\"this.dragging\").\n            // NOTE: This is not yet an actual drag. At this stage, the context is used to detect movement prior to\n            // mouseup (aka \"a drag\"). Should the requisite amount of movement occur, the drag will be started.\n            if (drag) {\n                drag = new DragContext(drag);\n\n                if (drag.begin() === false) {\n                    drag.destroy();\n                }\n            }\n        }\n        else if (!drag.isFinalizing) {\n            drag.abort();\n        }\n    }\n\n    // Set by the DragContext in its begin method, and auto-nullified at destruction.\n    changeDragging(value, was) {\n        was?.destroy();\n        return value;\n    }\n\n    onDragPointerMove(event) {\n        const { dragging : drag } = this;\n\n        if (drag && !drag.completed) {\n            drag?.move(event);\n        }\n    }\n\n    onDragPointerUp(event) {\n        const { dragging : drag } = this;\n\n        if (drag && !drag.completed) {\n            drag.end(event);\n\n            this.endDrag(drag);\n        }\n    }\n\n    /**\n     * @param {Event} event\n     * @private\n     */\n    onDragTouchStart(event) {\n        // only allowing one finger for now...\n        if (event.touches.length === 1) {\n            this.onDragPointerDown(event);\n        }\n    }\n\n    //endregion\n};\n","import Base from '../Base.js';\nimport DomDataStore from '../data/DomDataStore.js';\n\n/**\n * @module Core/mixin/Droppable\n */\n\n/**\n * Mix this into another class to enable drop support and receive drops from {@link Core.mixin.Draggable draggables}.\n *\n * There are 4 basic methods that a droppable implements. These methods are called as drag operations occur:\n *\n * ```javascript\n *  class MyDroppable extends Base.mixin(Droppable) {\n *      dragEnter(drag) {\n *          // a drag has entered the drop zone... create some type of drop indicator perhaps\n *      }\n *\n *      dragMove(drag) {\n *          // a drag has changed position... update drop indicators\n *      }\n *\n *      dragDrop(drag) {\n *          // drop has occurred... process data from the drag context\n *      }\n *\n *      dragLeave(drag) {\n *          // the drag has left the drop zone... cleanup indicators\n *      }\n *  }\n * ```\n *\n * Instances of `Droppable` are associated with an element to receive drag operations:\n *\n * ```javascript\n *  let target = new MyDroppable({\n *      dropRootElement : someElement\n *  });\n * ```\n *\n * @mixin\n * @internal\n */\nexport default Target => class Droppable extends (Target || Base) {\n    static get $name() {\n        return 'Droppable';\n    }\n\n    //region Configs\n\n    static get configurable() {\n        return {\n            /**\n             * A selector, which, if specified, narrows the dropability to child elements of the\n             * {@link #config-dropRootElement} which match this selector.\n             * @config {String}\n             */\n            droppableSelector : null,\n\n            /**\n             * The current `DragContext`. This is set when a drag enters this target. Changing this config causes the\n             * {@link #function-dragEnter} and {@link #function-dragLeave} methods to be called. If `dragEnter` returns\n             * `false` for a drag, this value will be set to `null`.\n             * @member {Core.util.drag.DragContext}\n             * @readonly\n             */\n            dropping : null,\n\n            /**\n             * Set this config to the element where drops should be received. When set, the `b-droppable` CSS class is\n             * added to the element and the `Droppable` instance is associated with that element so that it can be\n             * found by {@link Core.mixin.Draggable draggables}.\n             * @config {HTMLElement}\n             */\n            dropRootElement : {\n                $config : 'nullify',\n\n                value : null\n            }\n        };\n    }\n\n    /**\n     * Return the `Events` instance from which drop events are fired.\n     * @internal\n     * @property {Core.mixin.Events}\n     */\n    get dropEventer() {\n        return this.trigger ? this : null;  // simple Events feature detector\n    }\n\n    /**\n     * Returns the CSS class that is added to the {@link #config-dropRootElement}, i.e., `'b-droppable'`.\n     * @property {String}\n     * @readonly\n     */\n    get droppableCls() {\n        return 'b-droppable';\n    }\n\n    //endregion\n    //region Drop Management\n\n    /**\n     * This method is called when a drag enters this droppable's `dropRootElement`. In many cases, this method is used\n     * to create some sort of drop indicator to provide user feedback.\n     *\n     * If this method does not return `false`, the {@link #property-dropping} config will retain the given `drag` context\n     * which was set prior to this method being called.\n     *\n     * If this method returns `false`, the drop will not be accepted. Neither {@link #function-dragDrop} nor\n     * {@link #function-dragLeave} will be called for this drop. If the drag leaves this target and re-enters, this\n     * method will be called again. While `dropping` will already be updated before this method is called, it will be\n     * reset to `null` in this case.\n     *\n     * The base class implementation of this method fires the {@link #event-dragEnter} event.\n     * @param {Core.util.drag.DragContext} drag\n     * @returns {Boolean}\n     */\n    dragEnter(drag) {\n        /**\n         * This event is fired when a drag enters this droppable's `dropRootElement`. It is fired by the droppable's\n         * {@link #function-dragEnter} method.\n         * @event dragEnter\n         * @param {Core.mixin.Draggable} source The draggable instance that fired the event.\n         * @param {Core.util.drag.DragContext} drag The drag context.\n         * @param {Event} event The browser event.\n         */\n        return this.dropEventer?.trigger('dragEnter', { drag, event : drag.event });\n    }\n\n    /**\n     * This method is called when the drag that was previously announced via {@link #function-dragEnter} moves to a new\n     * position. This is typically where drop indicators are updated to reflect the new position.\n     *\n     * The base class implementation of this method fires the {@link #event-dragMove} event.\n     * @param {Core.util.drag.DragContext} drag\n     */\n    dragMove(drag) {\n        /**\n         * This event is fired when the drag that was previously announced via {@link #event-dragEnter} moves to a new\n         * position. It is fired by the droppable's {@link #function-dragMove} method.\n         * @event dragMove\n         * @param {Core.mixin.Draggable} source The draggable instance that fired the event.\n         * @param {Core.util.drag.DragContext} drag The drag context.\n         * @param {Event} event The browser event.\n         */\n        return this.dropEventer?.trigger('dragMove', { drag, event : drag.event });\n    }\n\n    /**\n     * This method is called when the drag that was previously announced via {@link #function-dragEnter} has ended with\n     * a drop. In addition to any cleanup (since {@link #function-dragLeave} will not be called), this method handles\n     * any updates associated with the data from the drag context and the position of the drop.\n     *\n     * The base class implementation of this method fires the {@link #event-drop} event.\n     * @param {Core.util.drag.DragContext} drag\n     */\n    dragDrop(drag) {\n        /**\n         * This event is fired when the drag that was previously announced via {@link #event-dragEnter} has ended with\n         * a drop. It is fired by the droppable's {@link #function-dragDrop} method.\n         *\n         * This event is **not** fired when a drag gesture is aborted by the user pressing the `ESC` key or if the\n         * {@link Core.util.drag.DragContext#function-abort} method is called.\n         * @event drop\n         * @param {Core.mixin.Draggable} source The draggable instance that fired the event.\n         * @param {Core.util.drag.DragContext} drag The drag context.\n         * @param {Event} event The browser event.\n         */\n        return this.dropEventer?.trigger('drop', { drag, event : drag.event });\n    }\n\n    /**\n     * This method is called when the drag that was previously announced via {@link #function-dragEnter} leaves this\n     * droppable's `dropRootElement`, or the drag is {@link Core.util.drag.DragContext#property-aborted} by the user\n     * pressing the `ESC` key, or the {@link Core.util.drag.DragContext#function-abort} method is called.\n     *\n     * This is the time to cleanup anything created by `dragEnter`.\n     *\n     * The base class implementation of this method fires the {@link #event-dragLeave} event.\n     * @param {Core.util.drag.DragContext} drag\n     */\n    dragLeave(drag) {\n        /**\n         * This event is fired when the drag that was previously announced via {@link #event-dragEnter} leaves this\n         * droppable's `dropRootElement`. It is fired by the droppable's {@link #function-dragLeave} method.\n         * @event dragLeave\n         * @param {Core.mixin.Draggable} source The draggable instance that fired the event.\n         * @param {Core.util.drag.DragContext} drag The drag context.\n         * @param {Event} event The browser event.\n         */\n        return this.dropEventer?.trigger('dragLeave', { drag, event : drag.event });\n    }\n\n    //endregion\n    //region Configs\n\n    changeDropping(dropping, was) {\n        if (dropping !== was) {\n            const me = this;\n\n            if (was) {\n                if (was.aborted || !was.completed) {\n                    me.dragLeave(was);\n                }\n            }\n\n            if (dropping) {\n                me._dropping = dropping;  // update config value early in case dragEnter et al refer to it\n\n                if (me.dragEnter(dropping) === false) {\n                    dropping = null;\n                }\n\n                me._dropping = was;  // restore the value so that updateDropping is called as it should be\n            }\n        }\n\n        return dropping;\n    }\n\n    updateDropRootElement(rootEl, was) {\n        const\n            me = this,\n            { droppableCls } = me;\n\n        let droppables, i, removeCls;\n\n        if (was) {\n            droppables = DomDataStore.get(was, 'droppables');\n            removeCls = true;\n\n            if (Array.isArray(droppables) && (i = droppables.indexOf(me)) > -1) {\n                if (droppables.length < 2) {\n                    DomDataStore.remove(was, 'droppables');\n                }\n                else {\n                    droppables.splice(i, 1);\n                    droppables.forEach(d => {\n                        if (droppableCls === d.droppableCls) {\n                            removeCls = false;  // our droppableCls may need to stay\n                        }\n                    });\n                }\n            }\n\n            removeCls && was.classList.remove(droppableCls);\n        }\n\n        if (rootEl) {\n            droppables = DomDataStore.get(rootEl, 'droppables');\n\n            if (droppables) {\n                droppables.push(me);\n            }\n            else {\n                DomDataStore.set(rootEl, 'droppables', [me]);\n            }\n\n            rootEl.classList.add(droppableCls);\n        }\n    }\n\n    //endregion\n};\n","import Combo from './Combo.js';\nimport './ColorPicker.js';\n\n/**\n * @module Core/widget/ColorField\n */\n\n/**\n * Field that displays a CSS color and lets the user select from a pre-defined\n * {@link #config-colors range of CSS colors}.\n *\n * {@inlineexample Core/widget/ColorField.js}\n *\n * This field can be used as an {@link Grid.column.Column#config-editor} for the {@link Grid.column.Column}.\n *\n * This widget may be operated using the keyboard. `ArrowDown` opens the color picker, which itself is keyboard\n * navigable.\n *\n * ```javascript\n * let colorField = new ColorField({\n *   field: 'color'\n * });\n * ```\n *\n * @extends Core/widget/PickerField\n * @classType colorfield\n * @inputfield\n */\nexport default class ColorField extends Combo {\n    static $name = 'ColorField';\n\n    static type = 'colorfield';\n\n    static configurable = {\n\n        /*\n         * @hideconfigs text,color,editable,picker\n         */\n\n        displayField : 'text',\n        valueField   : 'color',\n        editable     : false,\n        picker       : {\n            type  : 'colorpicker',\n            align : {\n                align     : 't100-b100',\n                matchSize : false\n            }\n        },\n        showBoxForNoColor : true,\n\n        /**\n         * Array of CSS color strings to be able to chose from. This will override the\n         * {@link Core.widget.ColorPicker#config-colors pickers default colors}.\n         *\n         * Provide an array of string CSS colors:\n         * ```javascript\n         * new ColorField({\n         *     colors : ['#00FFFF', '#F0FFFF', '#89CFF0', '#0000FF', '#7393B3']\n         * });\n         * ```\n         *\n         * @prp {String[]}\n         */\n        colors : null,\n\n        /**\n         * Adds an option in the picker to set no background color\n         * @prp {Boolean}\n         */\n        addNoColorItem : true\n    };\n\n    configure(config) {\n        const pickerCfg = config.picker ?? {};\n\n        if (config.colors) {\n            pickerCfg.colors = config.colors;\n        }\n\n        if ('addNoColorItem' in config) {\n            pickerCfg.addNoColorItem = config.addNoColorItem;\n        }\n\n        config.picker = pickerCfg;\n\n        super.configure(config);\n    }\n\n    updatePicker(picker) {\n        if (picker) {\n            this.items = picker.store.records;\n        }\n    }\n\n    updateColors(colors) {\n        if (!this.isConfiguring) {\n            this.picker.colors = colors;\n        }\n    }\n\n    updateAddNoColorItem(addNoColorItem) {\n        if (!this.isConfiguring) {\n            this.picker.addNoColorItem = addNoColorItem;\n        }\n    }\n\n    set value(value) {\n        if (!this.store) {\n            this.items = [];\n            this.store = this.picker.store;\n        }\n\n        if (!value) {\n            value = this.store.findRecord('color', null);\n        }\n\n        super.value = value;\n    }\n\n    showPicker() {\n        // Not happy about this. Previously selected value doesn't trigger refresh\n        this.picker.refresh();\n        super.showPicker(...arguments);\n    }\n\n    get value() {\n        return super.value;\n    }\n\n    syncInputFieldValue(...args) {\n        const\n            me        = this,\n            { value } = me;\n\n        let className = me.picker?.getColorClassName(value);\n\n        if (!className) {\n            me.colorBox.style.color = value;\n        }\n\n        className = 'b-colorbox ' + className;\n\n        me.colorBox.className = className;\n\n        if (!me.showBoxForNoColor) {\n            me.element.classList.toggle('b-colorless', !value);\n        }\n\n        super.syncInputFieldValue(...args);\n    }\n\n    get innerElements() {\n        return [\n            {\n                reference : 'colorBox',\n                className : 'b-colorbox'\n            },\n            ...super.innerElements\n        ];\n    }\n}\n\n// Register this widget type with its Factory\nColorField.initClass();\n","import Checkbox from './Checkbox.js';\n\n/**\n * @module Core/widget/SlideToggle\n */\n\n/**\n * SlideToggle field is a variation of {@link Core.widget.Checkbox} with a sliding toggle instead of box with check mark.\n * It wraps <code>&lt;input type=\"checkbox\"&gt;</code>.\n * Color can be specified and you can optionally configure {@link #config-text} to display in a label to the right of\n * the toggle in addition to a standard field {@link #config-label}.\n *\n * {@inlineexample Core/widget/SlideToggle.js vertical}\n *\n * This field can be used as an {@link Grid.column.Column#config-editor} for the {@link Grid.column.Column}.\n *\n * @extends Core/widget/Checkbox\n * @classType slidetoggle\n * @inputfield\n */\nexport default class SlideToggle extends Checkbox {\n    static get $name() {\n        return 'SlideToggle';\n    }\n\n    static get type() {\n        return 'slidetoggle';\n    }\n\n    static get properties() {\n        return {\n            toggledCls : 'b-slidetoggle-checked'\n        };\n    }\n\n    construct(config) {\n        if (config?.checked) {\n            config.cls = (config.cls || '') + ' ' + this.constructor.properties.toggledCls;\n        }\n\n        super.construct(config);\n    }\n\n    get innerElements() {\n        const innerEls = super.innerElements;\n\n        innerEls.splice(1, 0, this.toggleElement);\n\n        if (this.text) {\n            innerEls[innerEls.length - 1].class = 'b-slidetoggle-label';\n        }\n        else {\n            // Remove label, not used\n            innerEls.pop();\n        }\n        return innerEls;\n    }\n\n    get toggleElement() {\n        return {\n            class     : 'b-slidetoggle-toggle',\n            reference : 'slideToggle',\n            children  : [\n                {\n                    class     : 'b-slidetoggle-thumb',\n                    reference : 'slideThumb'\n                }\n            ]\n        };\n    }\n\n    internalOnChange() {\n        super.internalOnChange();\n\n        this.element.classList[this.value ? 'add' : 'remove'](this.toggledCls);\n    }\n}\n\nSlideToggle.initClass();\n","import Base from '../../Base.js';\nimport DomHelper from '../../helper/DomHelper.js';\nimport EventHelper from '../../helper/EventHelper.js';\nimport Tooltip from '../../widget/Tooltip.js';\nimport StringHelper from '../../helper/StringHelper.js';\n\n/**\n * @module Core/widget/util/AvatarRendering\n */\n\n/**\n * An object that describes properties of an avatar.\n *\n * @typedef {Object} AvatarConfig\n * @property {String} initials Resource initials\n * @property {String} color Background color for initials\n * @property {String} iconCls Icon cls\n * @property {String} imageUrl Image url\n * @property {String} defaultImageUrl Default image url, fallback if image fails to load or there is none\n * specified. Leave out to show initials instead.\n * @property {Object} [dataset] Dataset to apply to the resulting element\n * @property {String} [alt] Image description\n */\n\n/**\n * A utility class providing rendering of avatars / resource initials.\n *\n * {@inlineexample Core/widget/AvatarRendering.js}\n * @extends Core/Base\n */\nexport default class AvatarRendering extends Base {\n    static get $name() {\n        return 'AvatarRendering';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Element used to listen for load errors. Normally the owning widgets own element.\n             * @config {HTMLElement}\n             */\n            element : null,\n\n            /**\n             * Prefix prepended to a supplied color to create a CSS class applied when showing initials.\n             * @config {String}\n             * @default\n             */\n            colorPrefix : 'b-sch-',\n\n            /**\n             * A tooltip config object to enable using a custom tooltip for the avatars. Listen for `beforeShow` and set\n             * your html there.\n             * @config {TooltipConfig}\n             */\n            tooltip : null,\n\n            size : null\n        };\n    }\n\n    doDestroy() {\n        this.tooltip?.destroy();\n\n        super.doDestroy();\n    }\n\n    updateElement(element) {\n        // Error listener\n        EventHelper.on({\n            element,\n            delegate : '.b-resource-image',\n            error    : 'onImageErrorEvent',\n            thisObj  : this,\n            capture  : true\n        });\n    }\n\n    changeTooltip(config) {\n        return Tooltip.new({\n            forElement  : this.element,\n            forSelector : '.b-resource-avatar',\n            cls         : 'b-resource-avatar-tooltip'\n        }, config);\n    }\n\n    static get failedUrls() {\n        if (!this._failedUrls) {\n            this._failedUrls = new Set();\n        }\n        return this._failedUrls;\n    }\n\n    /**\n     * Returns a DOM config object containing a resource avatar, icon or resource initials. Display priority in that\n     * order.\n     * @param {AvatarConfig|AvatarConfig[]} options A single avatar config object or an array of the same.\n     * @returns {DomConfig}\n     */\n    getResourceAvatar(options) {\n        if (Array.isArray(options)) {\n            return options.map(item => this.getResourceAvatar(item));\n        }\n\n        const\n            { initials, color, iconCls, imageUrl, defaultImageUrl, dataset = {}, resourceRecord, alt = StringHelper.encodeHtml(resourceRecord?.name) } = options,\n            config = this.getImageConfig(initials, color, imageUrl, defaultImageUrl, dataset, alt) ||\n                this.getIconConfig(iconCls, dataset) ||\n                this.getResourceInitialsConfig(initials, color, dataset),\n            { size } = this;\n\n        Object.assign(config.style, {\n            ...(size ? { height : size, width : size } : undefined)\n        });\n\n        return config;\n    }\n\n    getImageConfig(initials, color, imageUrl, defaultImageUrl, dataset, alt) {\n        // Fall back to defaultImageUrl if imageUrl is known to fail\n        imageUrl = AvatarRendering.failedUrls.has(imageUrl) ? defaultImageUrl : (imageUrl  || defaultImageUrl);\n\n        if (imageUrl) {\n            return {\n                tag       : 'img',\n                draggable : 'false',\n                loading   : 'lazy',\n                class     : {\n                    'b-resource-avatar' : 1,\n                    'b-resource-image'  : 1\n                },\n                style       : {},\n                alt,\n                elementData : {\n                    defaultImageUrl,\n                    imageUrl,\n                    initials,\n                    color,\n                    dataset\n                },\n                src : imageUrl,\n                dataset\n            };\n        }\n    }\n\n    getIconConfig(iconCls, dataset) {\n        if (iconCls) {\n            return iconCls && {\n                tag   : 'i',\n                style : {},\n                class : {\n                    'b-resource-avatar' : 1,\n                    'b-resource-icon'   : 1,\n                    [iconCls]           : 1\n                },\n                dataset\n            };\n        }\n    }\n\n    getResourceInitialsConfig(initials, color, dataset) {\n        const\n            // eventColor = #FF5555, apply as background-color\n            namedColor = DomHelper.isNamedColor(color) && color,\n            // eventColor = red, add b-sch-red cls\n            hexColor   = !namedColor && color,\n            { size }   = this;\n\n        return {\n            tag   : 'div',\n            class : {\n                'b-resource-avatar'                  : 1,\n                'b-resource-initials'                : 1,\n                [`${this.colorPrefix}${namedColor}`] : namedColor\n            },\n            style : {\n                backgroundColor : hexColor || null,\n                ...(size ? { height : size, width : size } : undefined)\n            },\n            children : [initials],\n            dataset\n        };\n    }\n\n    onImageErrorEvent({ target }) {\n        if (!target.matches('.b-resource-avatar')) {\n            return;\n        }\n\n        const { defaultImageUrl, initials, color, imageUrl, dataset } = target.elementData;\n\n        if (defaultImageUrl && !target.src.endsWith(defaultImageUrl.replace(/^[./]*/gm, ''))) {\n            target.src = defaultImageUrl;\n        }\n        else {\n            const initialsEl = DomHelper.createElement(this.getResourceInitialsConfig(initials, color, dataset));\n            initialsEl.elementData = target.elementData;\n            target.parentElement.replaceChild(initialsEl, target);\n        }\n\n        // Remember failed urls, to avoid trying to load them again next time\n        AvatarRendering.failedUrls.add(imageUrl);\n    }\n}\n"],"names":["throwAbstractMethodCall","Error","ActionBase","Base","type","constructor","name","undo","redo","_$name","throwInvalidMethodCall","StateBase","canUndo","stm","canRedo","onUndo","onRedo","onStartTransaction","onStopTransaction","onStopTransactionDelayed","onRejectTransaction","onEnable","onDisable","onAutoRecordOn","onAutoRecordOff","onResetQueue","onModelUpdate","onStoreModelAdd","onStoreModelInsert","onStoreModelRemove","onStoreModelRemoveAll","onModelInsertChild","onModelRemoveChild","STATE_PROP","Symbol","STORES_PROP","QUEUE_PROP","POS_PROP","TRANSACTION_PROP","TRANSACTION_TIMER_PROP","AUTO_RECORD_PROP","IS_APPLYING_STASH","Object","freeze","registry","Map","registerStmState","state","set","resolveStmState","get","resetQueue","options","newProps","slice","position","notifyStoresAboutQueueReset","DisabledStateClass","autoRecord","onStoreRemoveAll","DisabledState","Registry","ACTION_QUEUE_PROP","Transaction","defaultConfig","title","construct","args","queue","length","addAction","action","push","i","len","ReadyStateClass","steps","curPos","newPos","Math","max","next","notifyStoresAboutStateRestoringStart","undoneTransactions","transaction","notifyStoresAboutStateRestoringStop","cause","transactions","min","redoneTransactions","notifyStoresAboutStateRecordingStart","ReadyState","RecordingStateClass","notifyStoresAboutStateRecordingStop","disabled","stopTransactionDelayed","getTransactionTitle","stop","rejected","model","newData","oldData","isInitialUserAction","makeModelUpdateAction","parentModel","index","childModel","previousParent","previousIndex","makeModelInsertChildAction","childModels","context","makeModelRemoveChildAction","store","models","silent","makeStoreModelAddAction","makeStoreModelInsertAction","makeStoreModelRemoveAction","allRecords","makeStoreRemoveAllAction","RecordingState","RestoringStateClass","$name","onQueueReset","RestoringState","AutoReadyStateClass","startTransaction","AutoReadyState","AutoRecordingStateClass","mixin","Delayable","timer","clearTimeout","setTimeout","stopTransaction","autoRecordTransactionStopTimeout","AutoRecordingState","rest","MODEL_PROP","NEW_DATA_PROP","OLD_DATA_PROP","UpdateAction","undefined","value","$","assign","Boolean","PARENT_MODEL_PROP","CHILD_MODELS_PROP","INSERT_INDEX_PROP","CONTEXT_PROP","InsertChildAction","insertIndex","ctx","byFromParent","newlyAdded","Set","add","undoTaskData","parent","moveRight","moveLeft","moveFromAnotherParent","parentIndex","values","sort","a","b","forEach","removeChild","task","insertChild","_insertBefore$previou","insertBefore","children","orderedBeforeNode","previousSibling","nextOrderedSibling","RemoveChildAction","lhs","rhs","lhsIndex","rhsIndex","m","orderedParentIndex","STORE_PROP","MODEL_LIST_PROP","AddAction","modelList","list","remove","InsertAction","_undoingInsertion","insert","me","RemoveAction","ALL_RECORDS_PROP","RemoveAllAction","records","removeAll","stateTransition","event","oldState","newState","call","Array","isArray","trigger","StateTrackingManager","Events","stashedTransactions","stores","from","hasStore","includes","addStore","removeStore","filter","s","forEachStore","fn","id","val","enabled","enable","disable","isReady","waitForReadiness","await","isRecording","isApplyingStash","rejectTransaction","map","t","rawQueue","isRestoring","undoAll","redoAll","resetUndoQueue","resetRedoQueue","_store$onStmRecording","onStmRecordingStart","reason","_store$onStmRecording2","onStmRecordingStop","_store$onStmRestoring","onStmRestoringStart","_store$onStmRestoring2","onStmRestoringStop","_store$onStmQueueRese","onStmQueueReset","onUndoKeyPress","shiftKey","preventDefault","stash","IdHelper","generateId","applyStash","Target","Finalizable","finalizer","finalizing","isFinalized","isFinalizing","doFinalize","destroy","finalize","ret","_awaitFinalizer","ABORTED","INIT","DRAGGING","DROPPED","lockDirections","x","y","DragContext","Identifiable","configurable","itemElement","scrollManager","monitoringConfig","source","target","targetElement","threshold","touchStartDelay","identifiable","altKey","cleaners","ctrlKey","data","element","endEvent","lastMoveEvent","metaKey","previousTarget","scrollerAction","startEvent","touchStartTimer","_valid","EventHelper","on","globalThis","blur","thisObj","doDestroy","cleanup","dropping","dragging","onWindowBlur","started","abort","aborted","completed","isDestroying","pending","valid","v","Promise","all","has","peek","changeTarget","was","_target","updateTarget","dragLeaveTarget","dragMove","dragEnterTarget","updateTargetElement","droppable","droppables","droppableSelector","parentElement","DomDataStore","dropRootElement","contains","closest","DomHelper","getId","getBoundingClientRect","endDrag","begin","beforeDrag","cleaner","pop","end","lastEvent","dragSwallowClickTime","syncFlags","clientX","clientY","track","document","capture","expires","once","click","stopPropagation","dragDrop","fakeKey","down","changed","isKey","key","keyDown","isDragToggleKey","keyUp","getDistance","getDistanceBetween","move","distance","significant","nodeType","Node","ELEMENT_NODE","start","stopImmediatePropagation","draggingBodyCls","activeCls","dragLock","dragRootElement","detacher","startMonitoring","Objects","merge","scrollables","direction","callback","isScroll","rootEl","body","classList","startDrag","touch","changedTouches","elementFromPoint","trackDrag","prototype","STATE","DragProxy","Factoryable","factoryable","defaultType","updateDragging","drag","close","open","dragStart","dragEnd","initClass","Draggable","$config","draggingClsSelector","dragDocumentListeners","keydown","keyup","contextmenu","mousemove","mouseup","pointerup","touchend","touchmove","handler","passive","dragItemSelector","dragItemOverCls","dragMinDistance","dragProxy","dragSameTargetDrop","dragSelector","ignoreSelector","dragThreshold","dragTouchStartDelay","dropTargetSelector","overItem","testConfig","properties","draggingCls","draggingItemCls","draggingStartedCls","draggableCls","matches","dragOver","oldTarget","activeDrag","dragEventer","draggingClassElement","beginDrag","isDestroyed","finalizeDrag","_drag$finalize","moveDrag","setupDragContext","_nextDragId","result","_drag$targetElement","configureListeners","listeners","ObjectHelper","old","changeDragProxy","config","existing","reconfigure","owner","defaults","updateDragRootElement","_me$_dragRootDetacher","onDragItemMouseMove","_dragRootDetacher","mousedown","touchstart","pointerdown","e","_e$target$releasePoin","_e$target","pointerId","releasePointerCapture","delegate","onDragItemMouseEnter","onDragItemMouseLeave","mouseover","mouseout","onDragItemMouseOver","onDragItemMouseOut","changeOverItem","enterLeaveEvent","_event$relatedTarget","relatedTarget","updateOverItem","oldOverItem","_me$onDragItemMouseLe","_me$onDragItemMouseEn","onDragContextMenu","onDragKeyDown","onDragKeyUp","onDragMouseDown","button","onDragPointerDown","changeDragging","onDragPointerMove","onDragPointerUp","onDragTouchStart","touches","Droppable","dropEventer","droppableCls","dragEnter","_this$dropEventer","_this$dropEventer2","_this$dropEventer3","dragLeave","_this$dropEventer4","changeDropping","_dropping","updateDropRootElement","removeCls","indexOf","splice","d","ColorField","Combo","displayField","valueField","editable","picker","align","matchSize","showBoxForNoColor","colors","addNoColorItem","configure","pickerCfg","updatePicker","items","updateColors","isConfiguring","updateAddNoColorItem","findRecord","showPicker","refresh","arguments","syncInputFieldValue","_me$picker","className","getColorClassName","colorBox","style","color","toggle","innerElements","reference","SlideToggle","Checkbox","toggledCls","checked","cls","innerEls","toggleElement","text","class","internalOnChange","AvatarRendering","colorPrefix","tooltip","size","_this$tooltip","updateElement","error","changeTooltip","Tooltip","new","forElement","forSelector","failedUrls","_failedUrls","getResourceAvatar","item","initials","iconCls","imageUrl","defaultImageUrl","dataset","resourceRecord","alt","StringHelper","encodeHtml","getImageConfig","getIconConfig","getResourceInitialsConfig","height","width","tag","draggable","loading","elementData","src","namedColor","isNamedColor","hexColor","backgroundColor","onImageErrorEvent","endsWith","replace","initialsEl","createElement","replaceChild"],"mappings":";;AAAA;AACA;AACA;AAEA,MAAMA,yBAAuB,GAAGA,MAAM;AAClC,EAAA,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC,CAAA;AAC5C,CAAC,CAAA;AACD;AACA;AACA;AACA;AACA;AACe,MAAMC,UAAU,SAASC,IAAI,CAAC;AACzC;AACJ;AACA;AACA;AACA;EACI,IAAIC,IAAIA,GAAG;AACP,IAAA,OAAO,IAAI,CAACC,WAAW,CAACC,IAAI,CAAA;AAChC,GAAA;AACA;AACJ;AACA;AACIC,EAAAA,IAAIA,GAAG;AACHP,IAAAA,yBAAuB,EAAE,CAAA;AAC7B,GAAA;AACA;AACJ;AACA;AACIQ,EAAAA,IAAIA,GAAG;AACHR,IAAAA,yBAAuB,EAAE,CAAA;AAC7B,GAAA;AACJ,CAAA;AACAE,UAAU,CAACO,MAAM,GAAG,YAAY;;AClChC;AACA;AACA;AAEO,MAAMT,uBAAuB,GAAGA,MAAM;AACzC,EAAA,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC,CAAA;AAC5C,CAAC,CAAA;AACM,MAAMS,sBAAsB,GAAGA,MAAM;AACxC,EAAA,MAAM,IAAIT,KAAK,CAAC,wCAAwC,CAAC,CAAA;AAC7D,CAAC,CAAA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMU,SAAS,SAASR,IAAI,CAAC;EACxCS,OAAOA,CAACC,GAAG,EAAE;AACTb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACAc,OAAOA,CAACD,GAAG,EAAE;AACTb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACAe,MAAMA,CAACF,GAAG,EAAE;AACRb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACAgB,MAAMA,CAACH,GAAG,EAAE;AACRb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACAiB,kBAAkBA,CAACJ,GAAG,EAAE;AACpBb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACAkB,iBAAiBA,CAACL,GAAG,EAAE;AACnBb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACAmB,wBAAwBA,CAACN,GAAG,EAAE;AAC1Bb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACAoB,mBAAmBA,CAACP,GAAG,EAAE;AACrBb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACAqB,QAAQA,CAACR,GAAG,EAAE;AACVb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACAsB,SAASA,CAACT,GAAG,EAAE;AACXb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACAuB,cAAcA,CAACV,GAAG,EAAE;AAChBb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACAwB,eAAeA,CAACX,GAAG,EAAE;AACjBb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACAyB,YAAYA,CAACZ,GAAG,EAAE;AACdb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACA0B,aAAaA,CAACb,GAAG,EAAE;AACfb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACA2B,eAAeA,CAACd,GAAG,EAAE;AACjBb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACA4B,kBAAkBA,CAACf,GAAG,EAAE;AACpBb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACA6B,kBAAkBA,CAAChB,GAAG,EAAE;AACpBb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACA8B,qBAAqBA,CAACjB,GAAG,EAAE;AACvBb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACA+B,kBAAkBA,CAAClB,GAAG,EAAE;AACpBb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;EACAgC,kBAAkBA,CAACnB,GAAG,EAAE;AACpBb,IAAAA,uBAAuB,EAAE,CAAA;AAC7B,GAAA;AACJ,CAAA;AACAW,SAAS,CAACF,MAAM,GAAG,WAAW;;AClF9B;AACA;AACA;AACA;AACO,MAAMwB,UAAU,GAAeC,MAAM,CAAC,YAAY,CAAC,CAAA;AACnD,MAAMC,WAAW,GAAcD,MAAM,CAAC,aAAa,CAAC,CAAA;AACpD,MAAME,UAAU,GAAeF,MAAM,CAAC,YAAY,CAAC,CAAA;AACnD,MAAMG,QAAQ,GAAiBH,MAAM,CAAC,UAAU,CAAC,CAAA;AACjD,MAAMI,gBAAgB,GAASJ,MAAM,CAAC,kBAAkB,CAAC,CAAA;AACzD,MAAMK,sBAAsB,GAAGL,MAAM,CAAC,wBAAwB,CAAC,CAAA;AAC/D,MAAMM,gBAAgB,GAASN,MAAM,CAAC,kBAAkB,CAAC,CAAA;AACzD,MAAMO,iBAAiB,GAAQP,MAAM,CAAC,mBAAmB,CAAC,CAAA;AAC3BQ,MAAM,CAACC,MAAM,CAAC,CAChDV,UAAU,EACVE,WAAW,EACXC,UAAU,EACVC,QAAQ,EACRC,gBAAgB,EAChBC,sBAAsB,EACtBC,gBAAgB,EAChBC,iBAAiB,CACpB;;ACpBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,QAAQ,GAAG,IAAIC,GAAG,EAAE,CAAA;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,gBAAgB,GAAGA,CAACxC,IAAI,EAAEyC,KAAK,KAAK;AAC7CH,EAAAA,QAAQ,CAACI,GAAG,CAAC1C,IAAI,EAAEyC,KAAK,CAAC,CAAA;AAC7B,CAAC,CAAA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAME,eAAe,GAAIF,KAAK,IAAK;AACtC,EAAA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;AAC3BA,IAAAA,KAAK,GAAGH,QAAQ,CAACM,GAAG,CAACH,KAAK,CAAC,CAAA;AAC/B,GAAA;AACA,EAAA,OAAOA,KAAK,CAAA;AAChB,CAAC,CAAA;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;EACXD,gBAAgB;AAChBG,EAAAA,eAAAA;AACJ,CAAC;;AC5CM,MAAME,UAAU,GAAGA,CAACtC,GAAG,EAAEuC,OAAO,KAAK;EACxC,MAAM;IAAE7C,IAAI;AAAEC,IAAAA,IAAAA;AAAK,GAAC,GAAG4C,OAAO,CAAA;AAC9B,EAAA,IAAIC,QAAQ,CAAA;AACZ,EAAA,IAAI9C,IAAI,IAAI,CAACC,IAAI,EAAE;AACf6C,IAAAA,QAAQ,GAAG;AACP,MAAA,CAACjB,UAAU,GAAIvB,GAAG,CAACuB,UAAU,CAAC,CAACkB,KAAK,CAACzC,GAAG,CAAC0C,QAAQ,CAAC;AAClD,MAAA,CAAClB,QAAQ,GAAM,CAAA;KAClB,CAAA;AACL,GAAC,MACI,IAAI7B,IAAI,IAAI,CAACD,IAAI,EAAE;AACpB8C,IAAAA,QAAQ,GAAG;AACP,MAAA,CAACjB,UAAU,GAAIvB,GAAG,CAACuB,UAAU,CAAC,CAACkB,KAAK,CAAC,CAAC,EAAEzC,GAAG,CAAC0C,QAAQ,CAAA;KACvD,CAAA;AACL,GAAC,MACI;AACDF,IAAAA,QAAQ,GAAG;MACP,CAACjB,UAAU,GAAI,EAAE;AACjB,MAAA,CAACC,QAAQ,GAAM,CAAA;KAClB,CAAA;AACL,GAAA;EACA,OAAO,CACHgB,QAAQ,EACR,MAAM;AACFxC,IAAAA,GAAG,CAAC2C,2BAA2B,CAACJ,OAAO,CAAC,CAAA;AAC5C,GAAC,CACJ,CAAA;AACL,CAAC;;AC3BD;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACO,MAAMK,kBAAkB,SAAS9C,SAAS,CAAC;AAC9CC,EAAAA,OAAOA,GAAG;AACN,IAAA,OAAO,KAAK,CAAA;AAChB,GAAA;AACAE,EAAAA,OAAOA,GAAG;AACN,IAAA,OAAO,KAAK,CAAA;AAChB,GAAA;AACAC,EAAAA,MAAMA,GAAG;AACLL,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAM,EAAAA,MAAMA,GAAG;AACLN,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;EACAW,QAAQA,CAACR,GAAG,EAAE;AACV,IAAA,OAAOA,GAAG,CAAC6C,UAAU,GAAG,gBAAgB,GAAG,YAAY,CAAA;AAC3D,GAAA;AACApC,EAAAA,SAASA,GAAG;AACRZ,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAa,EAAAA,cAAcA,GAAG;IACb,OAAO;AACH,MAAA,CAACiB,gBAAgB,GAAI,IAAA;KACxB,CAAA;AACL,GAAA;AACAhB,EAAAA,eAAeA,GAAG;IACd,OAAO;AACH,MAAA,CAACgB,gBAAgB,GAAI,KAAA;KACxB,CAAA;AACL,GAAA;AACAvB,EAAAA,kBAAkBA,GAAG;AACjBP,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAQ,EAAAA,iBAAiBA,GAAI;AACjBR,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAS,EAAAA,wBAAwBA,GAAG;AACvBT,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAU,EAAAA,mBAAmBA,GAAG;AAClBV,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAe,EAAAA,YAAYA,CAACZ,GAAG,EAAEuC,OAAO,EAAE;AACvB,IAAA,OAAOD,UAAU,CAACtC,GAAG,EAAEuC,OAAO,CAAC,CAAA;AACnC,GAAA;EACA1B,aAAaA,GAAQ,EAAC;EACtBK,kBAAkBA,GAAG,EAAC;EACtBC,kBAAkBA,GAAG,EAAC;EACtBL,eAAeA,GAAM,EAAC;EACtBC,kBAAkBA,GAAG,EAAC;EACtBC,kBAAkBA,GAAG,EAAC;EACtB8B,gBAAgBA,GAAK,EAAC;AAC1B,CAAA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAG,IAAIH,kBAAkB,EAAE,CAAA;AAE9CI,QAAQ,CAACf,gBAAgB,CAAC,eAAe,EAAEc,aAAa,CAAC;;ACvEzD;AACA;AACA;AAEA,MAAME,iBAAiB,GAAG5B,MAAM,CAAC,mBAAmB,CAAC,CAAA;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM6B,WAAW,SAAS5D,IAAI,CAAC;EAC1C,IAAI6D,aAAaA,GAAG;IAChB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACYC,MAAAA,KAAK,EAAG,IAAA;KACX,CAAA;AACL,GAAA;EACAC,SAASA,CAAC,GAAGC,IAAI,EAAE;AACf,IAAA,IAAI,CAACL,iBAAiB,CAAC,GAAG,EAAE,CAAA;AAC5B,IAAA,KAAK,CAACI,SAAS,CAAC,GAAGC,IAAI,CAAC,CAAA;AAC5B,GAAA;AACA;AACJ;AACA;AACA;AACA;EACI,IAAIC,KAAKA,GAAG;IACR,OAAO,IAAI,CAACN,iBAAiB,CAAC,CAACR,KAAK,CAAC,CAAC,CAAC,CAAA;AAC3C,GAAA;AACA;AACJ;AACA;AACA;AACA;EACI,IAAIe,MAAMA,GAAG;AACT,IAAA,OAAO,IAAI,CAACP,iBAAiB,CAAC,CAACO,MAAM,CAAA;AACzC,GAAA;AACA;AACJ;AACA;AACA;AACA;EACIC,SAASA,CAACC,MAAM,EAAE;AACd,IAAA,IAAI,CAACT,iBAAiB,CAAC,CAACU,IAAI,CAACD,MAAM,CAAC,CAAA;AACxC,GAAA;AACA;AACJ;AACA;AACIhE,EAAAA,IAAIA,GAAG;AACH,IAAA,MAAM6D,KAAK,GAAG,IAAI,CAACN,iBAAiB,CAAC,CAAA;AACrC,IAAA,KAAK,IAAIW,CAAC,GAAGL,KAAK,CAACC,MAAM,GAAG,CAAC,EAAEI,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;AACxCL,MAAAA,KAAK,CAACK,CAAC,CAAC,CAAClE,IAAI,EAAE,CAAA;AACnB,KAAA;AACJ,GAAA;AACA;AACJ;AACA;AACIC,EAAAA,IAAIA,GAAG;AACH,IAAA,MAAM4D,KAAK,GAAG,IAAI,CAACN,iBAAiB,CAAC,CAAA;AACrC,IAAA,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGN,KAAK,CAACC,MAAM,EAAEI,CAAC,GAAGC,GAAG,EAAE,EAAED,CAAC,EAAE;AAC9CL,MAAAA,KAAK,CAACK,CAAC,CAAC,CAACjE,IAAI,EAAE,CAAA;AACnB,KAAA;AACJ,GAAA;AACJ,CAAA;AACAuD,WAAW,CAACtD,MAAM,GAAG,aAAa;;ACjElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMkE,eAAe,SAAShE,SAAS,CAAC;EAC3CC,OAAOA,CAACC,GAAG,EAAE;AACT;AACA;AACA,IAAA,OAAO,CAAC,GAAGA,GAAG,CAAC0C,QAAQ,IAAI1C,GAAG,CAAC0C,QAAQ,IAAI1C,GAAG,CAACwD,MAAM,CAAA;AACzD,GAAA;EACAvD,OAAOA,CAACD,GAAG,EAAE;AACT;AACA;AACA,IAAA,OAAO,CAAC,IAAIA,GAAG,CAAC0C,QAAQ,IAAI1C,GAAG,CAAC0C,QAAQ,GAAG1C,GAAG,CAACwD,MAAM,CAAA;AACzD,GAAA;AACAtD,EAAAA,MAAMA,CAACF,GAAG,EAAE+D,KAAK,EAAE;AACf,IAAA,IAAIC,MAAM,GAAGhE,GAAG,CAAC0C,QAAQ,CAAA;AACzB,IAAA,MACIa,KAAK,GAAIvD,GAAG,CAACuB,UAAU,CAAC;MACxB0C,MAAM,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEH,MAAM,GAAGD,KAAK,CAAC;MACpCK,IAAI,GAAGA,MAAM;QACTpE,GAAG,CAACqE,oCAAoC,EAAE,CAAA;QAC1C,MAAMC,kBAAkB,GAAG,EAAE,CAAA;QAC7B,OAAON,MAAM,KAAKC,MAAM,EAAE;AACtB,UAAA,MAAMM,WAAW,GAAGhB,KAAK,CAAC,EAAES,MAAM,CAAC,CAAA;UACnCO,WAAW,CAAC7E,IAAI,EAAE,CAAA;AAClB4E,UAAAA,kBAAkB,CAACX,IAAI,CAACY,WAAW,CAAC,CAAA;AACxC,SAAA;QACA,OAAO,CAACvE,GAAG,CAAC6C,UAAU,GAAG,gBAAgB,GAAG,YAAY,EAAE,MAAM;UAC5D7C,GAAG,CAACwE,mCAAmC,CAAC;AAAEC,YAAAA,KAAK,EAAG,MAAM;AAAEC,YAAAA,YAAY,EAAGJ,kBAAAA;AAAmB,WAAC,CAAC,CAAA;AAClG,SAAC,CAAC,CAAA;OACL,CAAA;AACL,IAAA,OAAO,CAAC;MACJ,CAAClD,UAAU,GAAI,gBAAgB;AAC/B,MAAA,CAACI,QAAQ,GAAMyC,MAAAA;KAClB,EAAEG,IAAI,CAAC,CAAA;AACZ,GAAA;AACAjE,EAAAA,MAAMA,CAACH,GAAG,EAAE+D,KAAK,EAAE;AACf,IAAA,IAAIC,MAAM,GAAGhE,GAAG,CAAC0C,QAAQ,CAAA;AACzB,IAAA,MACIa,KAAK,GAAIvD,GAAG,CAACuB,UAAU,CAAC;AACxB0C,MAAAA,MAAM,GAAGC,IAAI,CAACS,GAAG,CAACpB,KAAK,CAACC,MAAM,EAAEQ,MAAM,GAAGD,KAAK,CAAC,CAAA;IACnD,MAAMK,IAAI,GAAGA,MAAM;MACfpE,GAAG,CAACqE,oCAAoC,EAAE,CAAA;MAC1C,MAAMO,kBAAkB,GAAG,EAAE,CAAA;MAC7B,GAAG;AACC,QAAA,MAAML,WAAW,GAAGhB,KAAK,CAACS,MAAM,EAAE,CAAC,CAAA;QACnCO,WAAW,CAAC5E,IAAI,EAAE,CAAA;AAClBiF,QAAAA,kBAAkB,CAACjB,IAAI,CAACY,WAAW,CAAC,CAAA;OACvC,QACMP,MAAM,KAAKC,MAAM,EAAA;MACxB,OAAO,CAACjE,GAAG,CAAC6C,UAAU,GAAG,gBAAgB,GAAG,YAAY,EAAE,MAAM;QAC5D7C,GAAG,CAACwE,mCAAmC,CAAC;AAAEC,UAAAA,KAAK,EAAG,MAAM;AAAEC,UAAAA,YAAY,EAAGE,kBAAAA;AAAmB,SAAC,CAAC,CAAA;AAClG,OAAC,CAAC,CAAA;KACL,CAAA;AACD,IAAA,OAAO,CAAC;MACJ,CAACxD,UAAU,GAAI,gBAAgB;AAC/B,MAAA,CAACI,QAAQ,GAAMyC,MAAAA;KAClB,EAAEG,IAAI,CAAC,CAAA;AACZ,GAAA;AACA5D,EAAAA,QAAQA,GAAG;AACPX,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAY,EAAAA,SAASA,GAAG;AACR,IAAA,OAAO,eAAe,CAAA;AAC1B,GAAA;AACAC,EAAAA,cAAcA,GAAG;IACb,OAAO;MACH,CAACU,UAAU,GAAU,gBAAgB;AACrC,MAAA,CAACO,gBAAgB,GAAI,IAAA;KACxB,CAAA;AACL,GAAA;AACAhB,EAAAA,eAAeA,GAAG;AACdd,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAO,EAAAA,kBAAkBA,CAACJ,GAAG,EAAEoD,KAAK,EAAE;AAC3B,IAAA,MAAMmB,WAAW,GAAG,IAAIrB,WAAW,CAAC;AAAEE,MAAAA,KAAAA;AAAM,KAAC,CAAC,CAAA;AAC9C,IAAA,OAAO,CAAC;MACJ,CAAChC,UAAU,GAAU,gBAAgB;AACrC,MAAA,CAACK,gBAAgB,GAAI8C,WAAAA;AACzB,KAAC,EAAE,MAAM;AACLvE,MAAAA,GAAG,CAAC6E,oCAAoC,CAACN,WAAW,CAAC,CAAA;AACzD,KAAC,CAAC,CAAA;AACN,GAAA;AACAlE,EAAAA,iBAAiBA,GAAG;AAChBR,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAS,EAAAA,wBAAwBA,GAAG;AACvBT,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAU,EAAAA,mBAAmBA,GAAG;AAClBV,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAe,EAAAA,YAAYA,CAACZ,GAAG,EAAEuC,OAAO,EAAE;AACvB,IAAA,OAAOD,UAAU,CAACtC,GAAG,EAAEuC,OAAO,CAAC,CAAA;AACnC,GAAA;EACA1B,aAAaA,GAAQ,EAAC;EACtBK,kBAAkBA,GAAG,EAAC;EACtBC,kBAAkBA,GAAG,EAAC;EACtBL,eAAeA,GAAM,EAAC;EACtBC,kBAAkBA,GAAG,EAAC;EACtBC,kBAAkBA,GAAG,EAAC;EACtB8B,gBAAgBA,GAAK,EAAC;AAC1B,CAAA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMgC,UAAU,GAAG,IAAIhB,eAAe,EAAE,CAAA;AAExCd,QAAQ,CAACf,gBAAgB,CAAC,YAAY,EAAE6C,UAAU,CAAC;;ACxHnD;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACO,MAAMC,mBAAmB,SAASjF,SAAS,CAAC;AAC/CC,EAAAA,OAAOA,GAAG;AACN,IAAA,OAAO,KAAK,CAAA;AAChB,GAAA;AACAE,EAAAA,OAAOA,GAAG;AACN,IAAA,OAAO,KAAK,CAAA;AAChB,GAAA;EACAO,QAAQA,GAAG,EAAC;EACZC,SAASA,CAACT,GAAG,EAAE;AACX,IAAA,MAAMuE,WAAW,GAAGvE,GAAG,CAACyB,gBAAgB,CAAC,CAAA;AACzCzB,IAAAA,GAAG,CAACgF,mCAAmC,CAACT,WAAW,EAAE;AAAEU,MAAAA,QAAQ,EAAG,IAAA;AAAK,KAAC,CAAC,CAAA;IACzE,OAAO;MACH,CAAC7D,UAAU,GAAU,eAAe;AACpC,MAAA,CAACK,gBAAgB,GAAI,IAAA;KACxB,CAAA;AACL,GAAA;EACAf,cAAcA,CAACV,GAAG,EAAE;AAChB,IAAA,OAAO,CAAC;MACJ,CAACoB,UAAU,GAAU,oBAAoB;AACzC,MAAA,CAACO,gBAAgB,GAAI,IAAA;AACzB,KAAC,EAAE,MAAM;MACL3B,GAAG,CAACkF,sBAAsB,EAAE,CAAA;AAChC,KAAC,CAAC,CAAA;AACN,GAAA;AACAvE,EAAAA,eAAeA,GAAG;AACdd,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAO,EAAAA,kBAAkBA,GAAG;AACjBP,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAQ,EAAAA,iBAAiBA,CAACL,GAAG,EAAEoD,KAAK,EAAE;AAC1B,IAAA,MACImB,WAAW,GAAGvE,GAAG,CAACyB,gBAAgB,CAAC;AACnC8B,MAAAA,KAAK,GAASvD,GAAG,CAACuB,UAAU,CAAC,CAAA;AACjC,IAAA,IAAImB,QAAQ,GAAG1C,GAAG,CAACwB,QAAQ,CAAC,CAAA;IAC5B,IAAI+C,WAAW,CAACf,MAAM,EAAE;MACpB,IAAI,CAACe,WAAW,CAACnB,KAAK,IAAI,CAACA,KAAK,IAAIpD,GAAG,CAACmF,mBAAmB,EAAE;QACzDZ,WAAW,CAACnB,KAAK,GAAGpD,GAAG,CAACmF,mBAAmB,CAACZ,WAAW,CAAC,CAAA;OAC3D,MACI,IAAInB,KAAK,EAAE;QACZmB,WAAW,CAACnB,KAAK,GAAGA,KAAK,CAAA;AAC7B,OAAA;AACAG,MAAAA,KAAK,CAACb,QAAQ,CAAC,GAAG6B,WAAW,CAAA;AAC7BhB,MAAAA,KAAK,CAACC,MAAM,GAAM,EAAEd,QAAQ,CAAA;AAChC,KAAA;AACA,IAAA,OAAO,CAAC;MACJ,CAACtB,UAAU,GAAU,YAAY;MACjC,CAACI,QAAQ,GAAYkB,QAAQ;AAC7B,MAAA,CAACjB,gBAAgB,GAAI,IAAA;AACzB,KAAC,EAAE,MAAM;AACLzB,MAAAA,GAAG,CAACgF,mCAAmC,CAACT,WAAW,EAAE;AAAEa,QAAAA,IAAI,EAAG,IAAA;AAAK,OAAC,CAAC,CAAA;AACzE,KAAC,CAAC,CAAA;AACN,GAAA;EACA7E,mBAAmBA,CAACP,GAAG,EAAE;AACrB,IAAA,MAAMuE,WAAW,GAAGvE,GAAG,CAACyB,gBAAgB,CAAC,CAAA;AACzC,IAAA,OAAO,CAAC;MACJ,CAACL,UAAU,GAAU,gBAAgB;AACrC,MAAA,CAACK,gBAAgB,GAAI,IAAA;AACzB,KAAC,EAAE,MAAM;MACL,IAAI8C,WAAW,CAACf,MAAM,EAAE;QACpBe,WAAW,CAAC7E,IAAI,EAAE,CAAA;AACtB,OAAA;MACA,OAAO,CACH,YAAY,EACZ,MAAM;AACFM,QAAAA,GAAG,CAACgF,mCAAmC,CAACT,WAAW,EAAE;AAAEc,UAAAA,QAAQ,EAAG,IAAA;AAAK,SAAC,CAAC,CAAA;AAC7E,OAAC,CACJ,CAAA;AACL,KAAC,CAAC,CAAA;AACN,GAAA;AACA/E,EAAAA,wBAAwBA,GAAG;AACvBT,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAe,EAAAA,YAAYA,CAACZ,GAAG,EAAEuC,OAAO,EAAE;AACvB,IAAA,OAAOD,UAAU,CAACtC,GAAG,EAAEuC,OAAO,CAAC,CAAA;AACnC,GAAA;EACA1B,aAAaA,CAACb,GAAG,EAAEsF,KAAK,EAAEC,OAAO,EAAEC,OAAO,EAAEC,mBAAmB,EAAE;AAC7D,IAAA,MAAMlB,WAAW,GAAGvE,GAAG,CAACyB,gBAAgB,CAAC,CAAA;AACzC8C,IAAAA,WAAW,CAACd,SAAS,CAACzD,GAAG,CAAC0F,qBAAqB,CAACJ,KAAK,EAAEC,OAAO,EAAEC,OAAO,EAAEC,mBAAmB,CAAC,CAAC,CAAA;AAClG,GAAA;AACAvE,EAAAA,kBAAkBA,CAAClB,GAAG,EAAE2F,WAAW,EAAEC,KAAK,EAAEC,UAAU,EAAEC,cAAc,EAAEC,aAAa,EAAE;AACnF,IAAA,MAAMxB,WAAW,GAAGvE,GAAG,CAACyB,gBAAgB,CAAC,CAAA;AACzC8C,IAAAA,WAAW,CAACd,SAAS,CAACzD,GAAG,CAACgG,0BAA0B,CAACL,WAAW,EAAEC,KAAK,EAAEC,UAAU,EAAEC,cAAc,EAAEC,aAAa,CAAC,CAAC,CAAA;AACxH,GAAA;EACA5E,kBAAkBA,CAACnB,GAAG,EAAE2F,WAAW,EAAEM,WAAW,EAAEC,OAAO,EAAE;AACvD,IAAA,MAAM3B,WAAW,GAAGvE,GAAG,CAACyB,gBAAgB,CAAC,CAAA;AACzC8C,IAAAA,WAAW,CAACd,SAAS,CAACzD,GAAG,CAACmG,0BAA0B,CAACR,WAAW,EAAEM,WAAW,EAAEC,OAAO,CAAC,CAAC,CAAA;AAC5F,GAAA;EACApF,eAAeA,CAACd,GAAG,EAAEoG,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAK;AAC3C,IAAA,MAAM/B,WAAW,GAAGvE,GAAG,CAACyB,gBAAgB,CAAC,CAAA;AACzC8C,IAAAA,WAAW,CAACd,SAAS,CAACzD,GAAG,CAACuG,uBAAuB,CAACH,KAAK,EAAEC,MAAM,EAAEC,MAAM,CAAC,CAAC,CAAA;AAC7E,GAAA;AACAvF,EAAAA,kBAAkBA,CAACf,GAAG,EAAEoG,KAAK,EAAER,KAAK,EAAES,MAAM,EAAEH,OAAO,EAAEI,MAAM,EAAE;AAC3D,IAAA,MAAM/B,WAAW,GAAGvE,GAAG,CAACyB,gBAAgB,CAAC,CAAA;AACzC8C,IAAAA,WAAW,CAACd,SAAS,CAACzD,GAAG,CAACwG,0BAA0B,CAACJ,KAAK,EAAER,KAAK,EAAES,MAAM,EAAEH,OAAO,EAAEI,MAAM,CAAC,CAAC,CAAA;AAChG,GAAA;EACAtF,kBAAkBA,CAAChB,GAAG,EAAEoG,KAAK,EAAEC,MAAM,EAAEH,OAAO,EAAEI,MAAM,EAAE;AACpD,IAAA,MAAM/B,WAAW,GAAGvE,GAAG,CAACyB,gBAAgB,CAAC,CAAA;AACzC8C,IAAAA,WAAW,CAACd,SAAS,CAACzD,GAAG,CAACyG,0BAA0B,CAACL,KAAK,EAAEC,MAAM,EAAEH,OAAO,EAAEI,MAAM,CAAC,CAAC,CAAA;AACzF,GAAA;EACAxD,gBAAgBA,CAAC9C,GAAG,EAAEoG,KAAK,EAAEM,UAAU,EAAEJ,MAAM,EAAI;AAC/C,IAAA,MAAM/B,WAAW,GAAGvE,GAAG,CAACyB,gBAAgB,CAAC,CAAA;AACzC8C,IAAAA,WAAW,CAACd,SAAS,CAACzD,GAAG,CAAC2G,wBAAwB,CAACP,KAAK,EAAEM,UAAU,EAAEJ,MAAM,CAAC,CAAC,CAAA;AAClF,GAAA;AACJ,CAAA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMM,cAAc,GAAG,IAAI7B,mBAAmB,EAAE,CAAA;AAEhD/B,QAAQ,CAACf,gBAAgB,CAAC,gBAAgB,EAAE2E,cAAc,CAAC;;AC5H3D;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACO,MAAMC,mBAAmB,SAAS/G,SAAS,CAAC;EAC/C,WAAWgH,KAAKA,GAAG;AACf,IAAA,OAAO,qBAAqB,CAAA;AAChC,GAAA;AACA/G,EAAAA,OAAOA,GAAG;AACN,IAAA,OAAO,KAAK,CAAA;AAChB,GAAA;AACAE,EAAAA,OAAOA,GAAG;AACN,IAAA,OAAO,KAAK,CAAA;AAChB,GAAA;AACAC,EAAAA,MAAMA,GAAG;AACLL,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAM,EAAAA,MAAMA,GAAG;AACLN,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAW,EAAAA,QAAQA,GAAG;AACPX,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAY,EAAAA,SAASA,GAAG;AACRZ,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAa,EAAAA,cAAcA,GAAG;IACb,OAAO;AACH,MAAA,CAACiB,gBAAgB,GAAI,IAAA;KACxB,CAAA;AACL,GAAA;AACAhB,EAAAA,eAAeA,GAAG;IACd,OAAO;AACH,MAAA,CAACgB,gBAAgB,GAAI,KAAA;KACxB,CAAA;AACL,GAAA;AACAvB,EAAAA,kBAAkBA,GAAG;AACjBP,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAQ,EAAAA,iBAAiBA,GAAI;AACjBR,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAS,EAAAA,wBAAwBA,GAAG;AACvBT,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAU,EAAAA,mBAAmBA,GAAG;AAClBV,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAkH,EAAAA,YAAYA,GAAG;AACXlH,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;EACAgB,aAAaA,GAAQ,EAAC;EACtBK,kBAAkBA,GAAG,EAAC;EACtBC,kBAAkBA,GAAG,EAAC;EACtBL,eAAeA,GAAM,EAAC;EACtBC,kBAAkBA,GAAG,EAAC;EACtBC,kBAAkBA,GAAG,EAAC;EACtB8B,gBAAgBA,GAAK,EAAC;AAC1B,CAAA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMkE,cAAc,GAAG,IAAIH,mBAAmB,EAAE,CAAA;AAEhD7D,QAAQ,CAACf,gBAAgB,CAAC,gBAAgB,EAAE+E,cAAc,CAAC;;ACpE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,mBAAmB,SAASnD,eAAe,CAAC;AACrDpD,EAAAA,cAAcA,GAAG;AACbb,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;AACAc,EAAAA,eAAeA,GAAG;IACd,OAAO;MACH,CAACS,UAAU,GAAU,YAAY;AACjC,MAAA,CAACO,gBAAgB,GAAI,KAAA;KACxB,CAAA;AACL,GAAA;AACAvB,EAAAA,kBAAkBA,CAACJ,GAAG,EAAEoD,KAAK,EAAE;AAC3B,IAAA,MAAMmB,WAAW,GAAG,IAAIrB,WAAW,CAAC;AAAEE,MAAAA,KAAAA;AAAM,KAAC,CAAC,CAAA;AAC9C,IAAA,OAAO,CAAC;MACJ,CAAChC,UAAU,GAAU,oBAAoB;AACzC,MAAA,CAACK,gBAAgB,GAAI8C,WAAAA;AACzB,KAAC,EAAE,MAAM;AACLvE,MAAAA,GAAG,CAAC6E,oCAAoC,CAACN,WAAW,CAAC,CAAA;MACrDvE,GAAG,CAACkF,sBAAsB,EAAE,CAAA;AAChC,KAAC,CAAC,CAAA;AACN,GAAA;EACArE,aAAaA,CAACb,GAAG,EAAEsF,KAAK,EAAEC,OAAO,EAAEC,OAAO,EAAE;IACxCxF,GAAG,CAACkH,gBAAgB,EAAE,CAAA;IACtBlH,GAAG,CAACa,aAAa,CAACyE,KAAK,EAAEC,OAAO,EAAEC,OAAO,CAAC,CAAA;AAC9C,GAAA;EACAtE,kBAAkBA,CAAClB,GAAG,EAAE2F,WAAW,EAAEC,KAAK,EAAEK,WAAW,EAAEC,OAAO,EAAE;IAC9DlG,GAAG,CAACkH,gBAAgB,EAAE,CAAA;IACtBlH,GAAG,CAACkB,kBAAkB,CAACyE,WAAW,EAAEC,KAAK,EAAEK,WAAW,EAAEC,OAAO,CAAC,CAAA;AACpE,GAAA;EACA/E,kBAAkBA,CAACnB,GAAG,EAAE2F,WAAW,EAAEM,WAAW,EAAEC,OAAO,EAAE;IACvDlG,GAAG,CAACkH,gBAAgB,EAAE,CAAA;IACtBlH,GAAG,CAACmB,kBAAkB,CAACwE,WAAW,EAAEM,WAAW,EAAEC,OAAO,CAAC,CAAA;AAC7D,GAAA;EACApF,eAAeA,CAACd,GAAG,EAAEoG,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAE;IACxCtG,GAAG,CAACkH,gBAAgB,EAAE,CAAA;IACtBlH,GAAG,CAACc,eAAe,CAACsF,KAAK,EAAEC,MAAM,EAAEC,MAAM,CAAC,CAAA;AAC9C,GAAA;AACAvF,EAAAA,kBAAkBA,CAACf,GAAG,EAAEoG,KAAK,EAAER,KAAK,EAAES,MAAM,EAAEH,OAAO,EAAEI,MAAM,EAAE;IAC3DtG,GAAG,CAACkH,gBAAgB,EAAE,CAAA;AACtBlH,IAAAA,GAAG,CAACe,kBAAkB,CAACqF,KAAK,EAAER,KAAK,EAAES,MAAM,EAAEH,OAAO,EAAEI,MAAM,CAAC,CAAA;AACjE,GAAA;EACAtF,kBAAkBA,CAAChB,GAAG,EAAEoG,KAAK,EAAEC,MAAM,EAAEH,OAAO,EAAEI,MAAM,EAAE;IACpDtG,GAAG,CAACkH,gBAAgB,EAAE,CAAA;IACtBlH,GAAG,CAACgB,kBAAkB,CAACoF,KAAK,EAAEC,MAAM,EAAEH,OAAO,EAAEI,MAAM,CAAC,CAAA;AAC1D,GAAA;EACAxD,gBAAgBA,CAAC9C,GAAG,EAAEoG,KAAK,EAAEM,UAAU,EAAEJ,MAAM,EAAE;IAC7CtG,GAAG,CAACkH,gBAAgB,EAAE,CAAA;IACtBlH,GAAG,CAAC8C,gBAAgB,CAACsD,KAAK,EAAEM,UAAU,EAAEJ,MAAM,CAAC,CAAA;AACnD,GAAA;AACJ,CAAA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMa,cAAc,GAAG,IAAIF,mBAAmB,EAAE,CAAA;AAEhDjE,QAAQ,CAACf,gBAAgB,CAAC,gBAAgB,EAAEkF,cAAc,CAAC;;ACrE3D;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACO,MAAMC,uBAAuB,SAASrC,mBAAmB,CAACsC,KAAK,CAACC,SAAS,CAAC,CAAC;EAC9E7G,SAASA,CAACT,GAAG,EAAE;AACX,IAAA,MACIuE,WAAW,GAAGvE,GAAG,CAACyB,gBAAgB,CAAC;AACnC8F,MAAAA,KAAK,GAASvH,GAAG,CAAC0B,sBAAsB,CAAC,CAAA;AAC7C,IAAA,IAAI6F,KAAK,EAAE;AACP,MAAA,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC,CAAA;AAC5B,KAAA;AACAvH,IAAAA,GAAG,CAACgF,mCAAmC,CAACT,WAAW,EAAE;AAAEU,MAAAA,QAAQ,EAAG,IAAA;AAAK,KAAC,CAAC,CAAA;IACzE,OAAO;MACH,CAAC7D,UAAU,GAAgB,eAAe;MAC1C,CAACK,gBAAgB,GAAU,IAAI;AAC/B,MAAA,CAACC,sBAAsB,GAAI,IAAA;KAC9B,CAAA;AACL,GAAA;EACAhB,cAAcA,CAACV,GAAG,EAAE;AAChBH,IAAAA,sBAAsB,EAAE,CAAA;AAC5B,GAAA;EACAc,eAAeA,CAACX,GAAG,EAAE;AACjB,IAAA,MAAMuH,KAAK,GAASvH,GAAG,CAAC0B,sBAAsB,CAAC,CAAA;AAC/C,IAAA,IAAI6F,KAAK,EAAE;AACP,MAAA,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC,CAAA;AAC5B,KAAA;IACA,OAAO;MACH,CAACnG,UAAU,GAAgB,gBAAgB;MAC3C,CAACO,gBAAgB,GAAU,KAAK;AAChC,MAAA,CAACD,sBAAsB,GAAI,IAAA;KAC9B,CAAA;AACL,GAAA;AACArB,EAAAA,iBAAiBA,CAACL,GAAG,EAAEoD,KAAK,EAAE;AAC1B,IAAA,MACImB,WAAW,GAAGvE,GAAG,CAACyB,gBAAgB,CAAC;AACnC8F,MAAAA,KAAK,GAASvH,GAAG,CAAC0B,sBAAsB,CAAC;AACzC6B,MAAAA,KAAK,GAASvD,GAAG,CAACuB,UAAU,CAAC,CAAA;AACjC,IAAA,IAAImB,QAAQ,GAAG1C,GAAG,CAACwB,QAAQ,CAAC,CAAA;AAC5B,IAAA,IAAI+F,KAAK,EAAE;AACP,MAAA,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC,CAAA;AAC5B,KAAA;IACA,IAAIhD,WAAW,CAACf,MAAM,EAAE;MACpB,IAAI,CAACe,WAAW,CAACnB,KAAK,IAAI,CAACA,KAAK,IAAIpD,GAAG,CAACmF,mBAAmB,EAAE;QACzDZ,WAAW,CAACnB,KAAK,GAAGpD,GAAG,CAACmF,mBAAmB,CAACZ,WAAW,CAAC,CAAA;OAC3D,MACI,IAAInB,KAAK,EAAE;QACZmB,WAAW,CAACnB,KAAK,GAAGA,KAAK,CAAA;AAC7B,OAAA;AACAG,MAAAA,KAAK,CAACb,QAAQ,CAAC,GAAG6B,WAAW,CAAA;AAC7BhB,MAAAA,KAAK,CAACC,MAAM,GAAM,EAAEd,QAAQ,CAAA;AAChC,KAAA;AACA,IAAA,OAAO,CAAC;MACJ,CAACtB,UAAU,GAAgB,gBAAgB;MAC3C,CAACI,QAAQ,GAAkBkB,QAAQ;MACnC,CAACjB,gBAAgB,GAAU,IAAI;AAC/B,MAAA,CAACC,sBAAsB,GAAI,IAAA;AAC/B,KAAC,EAAE,MAAM;AACL1B,MAAAA,GAAG,CAACgF,mCAAmC,CAACT,WAAW,EAAE;AAAEa,QAAAA,IAAI,EAAG,IAAA;AAAK,OAAC,CAAC,CAAA;AACzE,KAAC,CAAC,CAAA;AACN,GAAA;EACA9E,wBAAwBA,CAACN,GAAG,EAAE;AAC1B,IAAA,IAAIuH,KAAK,GAAGvH,GAAG,CAAC0B,sBAAsB,CAAC,CAAA;AACvC,IAAA,IAAI6F,KAAK,EAAE;AACP,MAAA,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC,CAAA;AAC5B,KAAA;AACAA,IAAAA,KAAK,GAAG,IAAI,CAACE,UAAU,CACnB,MAAM;MACFzH,GAAG,CAAC0H,eAAe,EAAE,CAAA;AACzB,KAAC,EACD1H,GAAG,CAAC2H,gCACR,CAAC,CAAA;IACD,OAAO;MACH,CAACvG,UAAU,GAAgBwG,kBAAkB;AAC7C,MAAA,CAAClG,sBAAsB,GAAI6F,KAAAA;KAC9B,CAAA;AACL,GAAA;AACA3G,EAAAA,YAAYA,CAACZ,GAAG,EAAEuC,OAAO,EAAE;AACvB,IAAA,OAAOD,UAAU,CAACtC,GAAG,EAAEuC,OAAO,CAAC,CAAA;AACnC,GAAA;EACAhC,mBAAmBA,CAACP,GAAG,EAAE;AACrB,IAAA,MACIuE,WAAW,GAAGvE,GAAG,CAACyB,gBAAgB,CAAC;AACnC8F,MAAAA,KAAK,GAAGvH,GAAG,CAAC0B,sBAAsB,CAAC,CAAA;AACvC,IAAA,IAAI6F,KAAK,EAAE;AACP,MAAA,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC,CAAA;AAC5B,KAAA;AACA,IAAA,OAAO,CAAC;MACJ,CAACnG,UAAU,GAAgB,gBAAgB;MAC3C,CAACK,gBAAgB,GAAU,IAAI;AAC/B,MAAA,CAACC,sBAAsB,GAAI,IAAA;AAC/B,KAAC,EAAE,MAAM;MACL,IAAI6C,WAAW,CAACf,MAAM,EAAE;QACpBe,WAAW,CAAC7E,IAAI,EAAE,CAAA;AACtB,OAAA;MACA,OAAO,CACH,gBAAgB,EAChB,MAAM;AACFM,QAAAA,GAAG,CAACgF,mCAAmC,CAACT,WAAW,EAAE;AAAEc,UAAAA,QAAQ,EAAG,IAAA;AAAK,SAAC,CAAC,CAAA;AAC7E,OAAC,CACJ,CAAA;AACL,KAAC,CAAC,CAAA;AACN,GAAA;AACAxE,EAAAA,aAAaA,CAACb,GAAG,EAAE,GAAG6H,IAAI,EAAE;AACxB,IAAA,KAAK,CAAChH,aAAa,CAACb,GAAG,EAAE,GAAG6H,IAAI,CAAC,CAAA;IACjC7H,GAAG,CAACkF,sBAAsB,EAAE,CAAA;AAChC,GAAA;AACAhE,EAAAA,kBAAkBA,CAAClB,GAAG,EAAE,GAAG6H,IAAI,EAAE;AAC7B,IAAA,KAAK,CAAC3G,kBAAkB,CAAClB,GAAG,EAAE,GAAG6H,IAAI,CAAC,CAAA;IACtC7H,GAAG,CAACkF,sBAAsB,EAAE,CAAA;AAChC,GAAA;AACA/D,EAAAA,kBAAkBA,CAACnB,GAAG,EAAE,GAAG6H,IAAI,EAAE;AAC7B,IAAA,KAAK,CAAC1G,kBAAkB,CAACnB,GAAG,EAAE,GAAG6H,IAAI,CAAC,CAAA;IACtC7H,GAAG,CAACkF,sBAAsB,EAAE,CAAA;AAChC,GAAA;AACApE,EAAAA,eAAeA,CAACd,GAAG,EAAE,GAAG6H,IAAI,EAAK;AAC7B,IAAA,KAAK,CAAC/G,eAAe,CAACd,GAAG,EAAE,GAAG6H,IAAI,CAAC,CAAA;IACnC7H,GAAG,CAACkF,sBAAsB,EAAE,CAAA;AAChC,GAAA;AACAnE,EAAAA,kBAAkBA,CAACf,GAAG,EAAE,GAAG6H,IAAI,EAAE;AAC7B,IAAA,KAAK,CAAC9G,kBAAkB,CAACf,GAAG,EAAE,GAAG6H,IAAI,CAAC,CAAA;IACtC7H,GAAG,CAACkF,sBAAsB,EAAE,CAAA;AAChC,GAAA;AACAlE,EAAAA,kBAAkBA,CAAChB,GAAG,EAAE,GAAG6H,IAAI,EAAE;AAC7B,IAAA,KAAK,CAAC7G,kBAAkB,CAAChB,GAAG,EAAE,GAAG6H,IAAI,CAAC,CAAA;IACtC7H,GAAG,CAACkF,sBAAsB,EAAE,CAAA;AAChC,GAAA;AACApC,EAAAA,gBAAgBA,CAAC9C,GAAG,EAAE,GAAG6H,IAAI,EAAI;AAC7B,IAAA,KAAK,CAAC/E,gBAAgB,CAAC9C,GAAG,EAAE,GAAG6H,IAAI,CAAC,CAAA;IACpC7H,GAAG,CAACkF,sBAAsB,EAAE,CAAA;AAChC,GAAA;AACJ,CAAA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM0C,kBAAkB,GAAG,IAAIR,uBAAuB,EAAE,CAAA;AAExDpE,QAAQ,CAACf,gBAAgB,CAAC,oBAAoB,EAAE2F,kBAAkB,CAAC;;ACrJnE;AACA;AACA;AAEA,MACIE,UAAU,GAAMzG,MAAM,CAAC,YAAY,CAAC;AACpC0G,EAAAA,aAAa,GAAG1G,MAAM,CAAC,eAAe,CAAC;AACvC2G,EAAAA,aAAa,GAAG3G,MAAM,CAAC,eAAe,CAAC,CAAA;AAC3C;AACA;AACA;AACA;AACe,MAAM4G,YAAY,SAAS5I,UAAU,CAAC;EACjD,WAAW8D,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACYmC,MAAAA,KAAK,EAAG4C,SAAS;AACjB;AACZ;AACA;AACA;AACA;AACA;AACY3C,MAAAA,OAAO,EAAG2C,SAAS;AACnB;AACZ;AACA;AACA;AACA;AACA;AACY1C,MAAAA,OAAO,EAAG0C,SAAS;AACnBzC,MAAAA,mBAAmB,EAAG,KAAA;KACzB,CAAA;AACL,GAAA;EACA,IAAIlG,IAAIA,GAAG;AACP,IAAA,OAAO,cAAc,CAAA;AACzB,GAAA;EACA,IAAI+F,KAAKA,GAAG;IACR,OAAO,IAAI,CAACwC,UAAU,CAAC,CAAA;AAC3B,GAAA;EACA,IAAIxC,KAAKA,CAAC6C,KAAK,EAAE;AACb,IAAA,IAAI,CAACL,UAAU,CAAC,GAAGK,KAAK,CAAA;AAC5B,GAAA;EACA,IAAI5C,OAAOA,GAAG;IACV,OAAO,IAAI,CAACwC,aAAa,CAAC,CAAA;AAC9B,GAAA;EACA,IAAIxC,OAAOA,CAAC4C,KAAK,EAAE;IACf,IAAI,CAACJ,aAAa,CAAC,GAAG;MAAE,GAAGI,KAAAA;KAAO,CAAA;AACtC,GAAA;EACA,IAAI3C,OAAOA,GAAG;IACV,OAAO,IAAI,CAACwC,aAAa,CAAC,CAAA;AAC9B,GAAA;EACA,IAAIxC,OAAOA,CAAC2C,KAAK,EAAE;IACf,IAAI,CAACH,aAAa,CAAC,GAAG;MAAE,GAAGG,KAAAA;KAAO,CAAA;AACtC,GAAA;AACAzI,EAAAA,IAAIA,GAAG;IACH,MAAM;MAAE4F,KAAK;AAAEE,MAAAA,OAAAA;AAAQ,KAAC,GAAG,IAAI,CAAA;AAC/B;AACA;IACA,IAAIF,KAAK,CAAC8C,CAAC,EAAE;AACTvG,MAAAA,MAAM,CAACwG,MAAM,CAAC/C,KAAK,EAAEE,OAAO,CAAC,CAAA;AACjC,KAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAF,IAAAA,KAAK,CAACnD,GAAG,CAACqD,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE8C,OAAO,CAAChD,KAAK,CAAC8C,CAAC,CAAC,CAAC,CAAA;AAC1D,GAAA;AACAzI,EAAAA,IAAIA,GAAG;IACH,MAAM;MAAE2F,KAAK;AAAEC,MAAAA,OAAAA;AAAQ,KAAC,GAAG,IAAI,CAAA;AAC/B;IACA,IAAID,KAAK,CAAC8C,CAAC,EAAE;AACTvG,MAAAA,MAAM,CAACwG,MAAM,CAAC/C,KAAK,EAAEC,OAAO,CAAC,CAAA;AACjC,KAAA;AACAD,IAAAA,KAAK,CAACnD,GAAG,CAACoD,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE+C,OAAO,CAAChD,KAAK,CAAC8C,CAAC,CAAC,CAAC,CAAA;AAC1D,GAAA;AACJ,CAAA;AACAH,YAAY,CAACrI,MAAM,GAAG,cAAc;;ACtFpC;AACA;AACA;AAEA,MACI2I,mBAAiB,GAAGlH,MAAM,CAAC,mBAAmB,CAAC;AAC/CmH,EAAAA,mBAAiB,GAAGnH,MAAM,CAAC,mBAAmB,CAAC;AAC/CoH,EAAAA,mBAAiB,GAAGpH,MAAM,CAAC,mBAAmB,CAAC;AAC/CqH,EAAAA,cAAY,GAAQrH,MAAM,CAAC,cAAc,CAAC,CAAA;AAC9C;AACA;AACA;AACA;AACe,MAAMsH,iBAAiB,SAAStJ,UAAU,CAAC;EACtD,WAAW8D,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACYwC,MAAAA,WAAW,EAAGuC,SAAS;AACvB;AACZ;AACA;AACA;AACA;AACA;AACYjC,MAAAA,WAAW,EAAGiC,SAAS;AACvB;AACZ;AACA;AACA;AACA;AACA;AACYU,MAAAA,WAAW,EAAGV,SAAS;AACvB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYhC,MAAAA,OAAO,EAAGgC,SAAAA;KACb,CAAA;AACL,GAAA;EACA,IAAI3I,IAAIA,GAAG;AACP,IAAA,OAAO,mBAAmB,CAAA;AAC9B,GAAA;EACA,IAAIoG,WAAWA,GAAG;IACd,OAAO,IAAI,CAAC4C,mBAAiB,CAAC,CAAA;AAClC,GAAA;EACA,IAAI5C,WAAWA,CAACL,KAAK,EAAE;AACnB,IAAA,IAAI,CAACiD,mBAAiB,CAAC,GAAGjD,KAAK,CAAA;AACnC,GAAA;EACA,IAAIW,WAAWA,GAAG;IACd,OAAO,IAAI,CAACuC,mBAAiB,CAAC,CAAA;AAClC,GAAA;EACA,IAAIvC,WAAWA,CAACI,MAAM,EAAE;IACpB,IAAI,CAACmC,mBAAiB,CAAC,GAAGnC,MAAM,CAAC5D,KAAK,CAAC,CAAC,CAAC,CAAA;AAC7C,GAAA;EACA,IAAImG,WAAWA,GAAG;IACd,OAAO,IAAI,CAACH,mBAAiB,CAAC,CAAA;AAClC,GAAA;EACA,IAAIG,WAAWA,CAAChD,KAAK,EAAE;AACnB,IAAA,IAAI,CAAC6C,mBAAiB,CAAC,GAAG7C,KAAK,CAAA;AACnC,GAAA;EACA,IAAIM,OAAOA,GAAG;IACV,OAAO,IAAI,CAACwC,cAAY,CAAC,CAAA;AAC7B,GAAA;EACA,IAAIxC,OAAOA,CAAC2C,GAAG,EAAE;AACb,IAAA,IAAI,CAACH,cAAY,CAAC,GAAGG,GAAG,CAAA;AAC5B,GAAA;AACAnJ,EAAAA,IAAIA,GAAG;IACH,MACI;QAAEiG,WAAW;QAAEO,OAAO;AAAED,QAAAA,WAAAA;AAAY,OAAC,GAAG,IAAI;AAC5C6C,MAAAA,YAAY,GAAG,IAAI9G,GAAG,EAAE;AACxB+G,MAAAA,UAAU,GAAG,IAAIC,GAAG,EAAE,CAAA;AAC1B,IAAA,KAAK,MAAMnD,UAAU,IAAII,WAAW,EAAE;AAClC,MAAA,MAAM4C,GAAG,GAAG3C,OAAO,CAAC7D,GAAG,CAACwD,UAAU,CAAC,CAAA;MACnC,IAAI,CAACgD,GAAG,EAAE;AACNE,QAAAA,UAAU,CAACE,GAAG,CAACpD,UAAU,CAAC,CAAA;AAC9B,OAAC,MACI;QACD,IAAIqD,YAAY,GAAGJ,YAAY,CAACzG,GAAG,CAACwG,GAAG,CAACM,MAAM,CAAC,CAAA;QAC/C,IAAI,CAACD,YAAY,EAAE;AACfA,UAAAA,YAAY,GAAG;AAAEE,YAAAA,SAAS,EAAG,EAAE;AAAEC,YAAAA,QAAQ,EAAG,EAAE;AAAEC,YAAAA,qBAAqB,EAAG,EAAA;WAAI,CAAA;UAC5ER,YAAY,CAAC3G,GAAG,CAAC0G,GAAG,CAACM,MAAM,EAAED,YAAY,CAAC,CAAA;AAC9C,SAAA;AACA,QAAA,IAAIL,GAAG,CAACM,MAAM,KAAKxD,WAAW,EAAE;AAC5B,UAAA,IAAIkD,GAAG,CAACjD,KAAK,GAAGC,UAAU,CAAC0D,WAAW,EAAE;AACpCL,YAAAA,YAAY,CAACE,SAAS,CAACzF,IAAI,CAAC;cAAEwF,MAAM,EAAGN,GAAG,CAACM,MAAM;AAAE7D,cAAAA,KAAK,EAAGO,UAAU;AAAED,cAAAA,KAAK,EAAGiD,GAAG,CAACjD,KAAK,GAAG,CAAA;AAAE,aAAC,CAAC,CAAA;AACnG,WAAC,MACI;AACDsD,YAAAA,YAAY,CAACG,QAAQ,CAAC1F,IAAI,CAAC;cAAEwF,MAAM,EAAGN,GAAG,CAACM,MAAM;AAAE7D,cAAAA,KAAK,EAAGO,UAAU;cAAED,KAAK,EAAGiD,GAAG,CAACjD,KAAAA;AAAM,aAAC,CAAC,CAAA;AAC9F,WAAA;AACJ,SAAC,MACI;AACDsD,UAAAA,YAAY,CAACI,qBAAqB,CAAC3F,IAAI,CAAC;YAAEwF,MAAM,EAAGN,GAAG,CAACM,MAAM;AAAE7D,YAAAA,KAAK,EAAGO,UAAU;YAAED,KAAK,EAAGiD,GAAG,CAACjD,KAAAA;AAAM,WAAC,CAAC,CAAA;AAC3G,SAAA;AACJ,OAAA;AACJ,KAAA;IACA,KAAK,MAAMsD,YAAY,IAAIJ,YAAY,CAACU,MAAM,EAAE,EAAE;MAC9C,MAAM;QAAEJ,SAAS;AAAEC,QAAAA,QAAAA;AAAS,OAAC,GAAGH,YAAY,CAAA;AAC5CG,MAAAA,QAAQ,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC9D,KAAK,GAAG+D,CAAC,CAAC/D,KAAK,CAAC,CAAA;AAC1CwD,MAAAA,SAAS,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC/D,KAAK,GAAG8D,CAAC,CAAC9D,KAAK,CAAC,CAAA;AAC/C,KAAA;AACAmD,IAAAA,UAAU,CAACa,OAAO,CAACtE,KAAK,IAAIA,KAAK,CAAC6D,MAAM,CAACU,WAAW,CAACvE,KAAK,CAAC,CAAC,CAAA;IAC5D,KAAK,MAAM4D,YAAY,IAAIJ,YAAY,CAACU,MAAM,EAAE,EAAE;MAC9C,MAAM;QAAEJ,SAAS;QAAEC,QAAQ;AAAEC,QAAAA,qBAAAA;AAAsB,OAAC,GAAGJ,YAAY,CAAA;AACnEG,MAAAA,QAAQ,CAACO,OAAO,CAACE,IAAI,IAAI;AACrBA,QAAAA,IAAI,CAACX,MAAM,CAACY,WAAW,CAACD,IAAI,CAACxE,KAAK,EAAEwE,IAAI,CAAClE,KAAK,CAAC,CAAA;AACnD,OAAC,CAAC,CAAA;AACFwD,MAAAA,SAAS,CAACQ,OAAO,CAACE,IAAI,IAAI;AACtBA,QAAAA,IAAI,CAACX,MAAM,CAACY,WAAW,CAACD,IAAI,CAACxE,KAAK,EAAEwE,IAAI,CAAClE,KAAK,CAAC,CAAA;AACnD,OAAC,CAAC,CAAA;AACF0D,MAAAA,qBAAqB,CAACM,OAAO,CAACE,IAAI,IAAI;AAClCA,QAAAA,IAAI,CAACX,MAAM,CAACY,WAAW,CAACD,IAAI,CAACxE,KAAK,EAAEwE,IAAI,CAAClE,KAAK,CAAC,CAAA;AACnD,OAAC,CAAC,CAAA;AACN,KAAA;AACJ,GAAA;AACAjG,EAAAA,IAAIA,GAAG;AAAA,IAAA,IAAAqK,qBAAA,CAAA;IACH,MACI;QAAErE,WAAW;QAAEiD,WAAW;AAAE3C,QAAAA,WAAAA;AAAY,OAAC,GAAG,IAAI;AAChDgE,MAAAA,YAAY,GAAGtE,WAAW,CAACuE,QAAQ,CAACtB,WAAW,CAAC,CAAA;IACpDjD,WAAW,CAACoE,WAAW,CAAC9D,WAAW,EAAEgE,YAAY,EAAE,KAAK,EAAE;AACtDE,MAAAA,iBAAiB,EAAGF,YAAY,KAAZA,IAAAA,IAAAA,YAAY,wBAAAD,qBAAA,GAAZC,YAAY,CAAEG,eAAe,MAAA,IAAA,IAAAJ,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA7BA,qBAAA,CAA+BK,kBAAAA;AACvD,KAAC,CAAC,CAAA;AACN,GAAA;AACJ,CAAA;AACA1B,iBAAiB,CAAC/I,MAAM,GAAG,mBAAmB;;ACnI9C;AACA;AACA;AAEA,MACI2I,iBAAiB,GAAGlH,MAAM,CAAC,mBAAmB,CAAC;AAC/CmH,EAAAA,iBAAiB,GAAGnH,MAAM,CAAC,mBAAmB,CAAC;AAC/CqH,EAAAA,cAAY,GAAQrH,MAAM,CAAC,cAAc,CAAC,CAAA;AAC9C;AACA;AACA;AACA;AACe,MAAMiJ,iBAAiB,SAASjL,UAAU,CAAC;EACtD,WAAW8D,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACYwC,MAAAA,WAAW,EAAGuC,SAAS;AACvB;AACZ;AACA;AACA;AACA;AACA;AACYjC,MAAAA,WAAW,EAAGiC,SAAS;AACvB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYhC,MAAAA,OAAO,EAAGgC,SAAAA;KACb,CAAA;AACL,GAAA;EACA,IAAI3I,IAAIA,GAAG;AACP,IAAA,OAAO,mBAAmB,CAAA;AAC9B,GAAA;EACA,IAAIoG,WAAWA,GAAG;IACd,OAAO,IAAI,CAAC4C,iBAAiB,CAAC,CAAA;AAClC,GAAA;EACA,IAAI5C,WAAWA,CAACL,KAAK,EAAE;AACnB,IAAA,IAAI,CAACiD,iBAAiB,CAAC,GAAGjD,KAAK,CAAA;AACnC,GAAA;EACA,IAAIW,WAAWA,GAAG;IACd,OAAO,IAAI,CAACuC,iBAAiB,CAAC,CAAA;AAClC,GAAA;EACA,IAAIvC,WAAWA,CAACI,MAAM,EAAE;IACpB,IAAI,CAACmC,iBAAiB,CAAC,GAAGnC,MAAM,CAAC5D,KAAK,CAAC,CAAC,CAAC,CAAA;AAC7C,GAAA;EACA,IAAIyD,OAAOA,GAAG;IACV,OAAO,IAAI,CAACwC,cAAY,CAAC,CAAA;AAC7B,GAAA;EACA,IAAIxC,OAAOA,CAAC2C,GAAG,EAAE;AACb,IAAA,IAAI,CAACH,cAAY,CAAC,GAAGG,GAAG,CAAA;AAC5B,GAAA;AACAnJ,EAAAA,IAAIA,GAAG;IACH,MAAM;MAAEiG,WAAW;MAAEO,OAAO;AAAED,MAAAA,WAAAA;AAAY,KAAC,GAAG,IAAI,CAAA;AAClD;AACA;AACAA,IAAAA,WAAW,CAACwD,IAAI,CAAC,CAACc,GAAG,EAAEC,GAAG,KAAK;AAC3B,MAAA,MACIC,QAAQ,GAAGvE,OAAO,CAAC7D,GAAG,CAACkI,GAAG,CAAC;AAC3BG,QAAAA,QAAQ,GAAGxE,OAAO,CAAC7D,GAAG,CAACmI,GAAG,CAAC,CAAA;MAC/B,OAAQC,QAAQ,GAAGC,QAAQ,CAAA;AAC/B,KAAC,CAAC,CAAA;AACF;AACAzE,IAAAA,WAAW,CAAC2D,OAAO,CAACe,CAAC,IAAI;AACrB,MAAA,MAAM9B,GAAG,GAAG3C,OAAO,CAAC7D,GAAG,CAACsI,CAAC,CAAC,CAAA;MAC1BhF,WAAW,CAACoE,WAAW,CAACY,CAAC,EAAE9B,GAAG,CAACU,WAAW,EAAErB,SAAS,EAAE;QAAE0C,kBAAkB,EAAG/B,GAAG,CAAC+B,kBAAAA;AAAmB,OAAC,CAAC,CAAA;AAC3G,KAAC,CAAC,CAAA;AACN,GAAA;AACAjL,EAAAA,IAAIA,GAAG;IACH,IAAI,CAACgG,WAAW,CAACkE,WAAW,CAAC,IAAI,CAAC5D,WAAW,CAAC,CAAA;AAClD,GAAA;AACJ,CAAA;AACAqE,iBAAiB,CAAC1K,MAAM,GAAG,mBAAmB;;AC9E9C;AACA;AACA;AACA,MACIiL,YAAU,GAAQxJ,MAAM,CAAC,YAAY,CAAC;AACtCyJ,EAAAA,iBAAe,GAAGzJ,MAAM,CAAC,iBAAiB,CAAC,CAAA;AAC/C;AACA;AACA;AACA;AACe,MAAM0J,SAAS,SAAS1L,UAAU,CAAC;EAC9C,WAAW8D,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACYiD,MAAAA,KAAK,EAAG8B,SAAS;AACjB;AACZ;AACA;AACA;AACA;AACA;AACY8C,MAAAA,SAAS,EAAG9C,SAAS;AACrB;AACZ;AACA;AACA;AACA;AACA;AACY5B,MAAAA,MAAM,EAAG,KAAA;KACZ,CAAA;AACL,GAAA;EACA,IAAI/G,IAAIA,GAAG;AACP,IAAA,OAAO,WAAW,CAAA;AACtB,GAAA;EACA,IAAI6G,KAAKA,GAAG;IACR,OAAO,IAAI,CAACyE,YAAU,CAAC,CAAA;AAC3B,GAAA;EACA,IAAIzE,KAAKA,CAACA,KAAK,EAAE;AACb,IAAA,IAAI,CAACyE,YAAU,CAAC,GAAGzE,KAAK,CAAA;AAC5B,GAAA;EACA,IAAI4E,SAASA,GAAG;IACZ,OAAO,IAAI,CAACF,iBAAe,CAAC,CAAA;AAChC,GAAA;EACA,IAAIE,SAASA,CAACC,IAAI,EAAE;IAChB,IAAI,CAACH,iBAAe,CAAC,GAAGG,IAAI,CAACxI,KAAK,CAAC,CAAC,CAAC,CAAA;AACzC,GAAA;AACA/C,EAAAA,IAAIA,GAAG;AACH,IAAA,IAAI,CAAC0G,KAAK,CAAC8E,MAAM,CAAC,IAAI,CAACF,SAAS,EAAE,IAAI,CAAC1E,MAAM,CAAC,CAAA;AAClD,GAAA;AACA3G,EAAAA,IAAIA,GAAG;AACH,IAAA,IAAI,CAACyG,KAAK,CAAC6C,GAAG,CAAC,IAAI,CAAC+B,SAAS,EAAE,IAAI,CAAC1E,MAAM,CAAC,CAAA;AAC/C,GAAA;AACJ,CAAA;AACAyE,SAAS,CAACnL,MAAM,GAAG,WAAW;;AC1D9B;AACA;AACA;AACA,MACIiL,YAAU,GAAUxJ,MAAM,CAAC,YAAY,CAAC;AACxCyJ,EAAAA,iBAAe,GAAKzJ,MAAM,CAAC,iBAAiB,CAAC;AAC7CoH,EAAAA,iBAAiB,GAAGpH,MAAM,CAAC,mBAAmB,CAAC;AAC/CqH,EAAAA,cAAY,GAAQrH,MAAM,CAAC,cAAc,CAAC,CAAA;AAC9C;AACA;AACA;AACA;AACe,MAAM8J,YAAY,SAAS9L,UAAU,CAAC;EACjD,WAAW8D,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACYiD,MAAAA,KAAK,EAAG8B,SAAS;AACjB;AACZ;AACA;AACA;AACA;AACA;AACY8C,MAAAA,SAAS,EAAG9C,SAAS;AACrB;AACZ;AACA;AACA;AACA;AACA;AACYU,MAAAA,WAAW,EAAGV,SAAS;AACvB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYhC,MAAAA,OAAO,EAAGgC,SAAS;AACnB;AACZ;AACA;AACA;AACA;AACA;AACY5B,MAAAA,MAAM,EAAG,KAAA;KACZ,CAAA;AACL,GAAA;EACA,IAAI/G,IAAIA,GAAG;AACP,IAAA,OAAO,cAAc,CAAA;AACzB,GAAA;EACA,IAAI6G,KAAKA,GAAG;IACR,OAAO,IAAI,CAACyE,YAAU,CAAC,CAAA;AAC3B,GAAA;EACA,IAAIzE,KAAKA,CAACA,KAAK,EAAE;AACb,IAAA,IAAI,CAACyE,YAAU,CAAC,GAAGzE,KAAK,CAAA;AAC5B,GAAA;EACA,IAAI4E,SAASA,GAAG;IACZ,OAAO,IAAI,CAACF,iBAAe,CAAC,CAAA;AAChC,GAAA;EACA,IAAIE,SAASA,CAACC,IAAI,EAAE;IAChB,IAAI,CAACH,iBAAe,CAAC,GAAGG,IAAI,CAACxI,KAAK,CAAC,CAAC,CAAC,CAAA;AACzC,GAAA;EACA,IAAImG,WAAWA,GAAG;IACd,OAAO,IAAI,CAACH,iBAAiB,CAAC,CAAA;AAClC,GAAA;EACA,IAAIG,WAAWA,CAAChD,KAAK,EAAE;AACnB,IAAA,IAAI,CAAC6C,iBAAiB,CAAC,GAAG7C,KAAK,CAAA;AACnC,GAAA;EACA,IAAIM,OAAOA,GAAG;IACV,OAAO,IAAI,CAACwC,cAAY,CAAC,CAAA;AAC7B,GAAA;EACA,IAAIxC,OAAOA,CAACA,OAAO,EAAE;AACjB,IAAA,IAAI,CAACwC,cAAY,CAAC,GAAGxC,OAAO,CAAA;AAChC,GAAA;AACAxG,EAAAA,IAAIA,GAAG;IACH,MAAM;MAAE0G,KAAK;MAAE4E,SAAS;MAAE9E,OAAO;AAAEI,MAAAA,MAAAA;AAAO,KAAC,GAAG,IAAI,CAAA;AAClD;AACA;AACA0E,IAAAA,SAAS,CAACvB,IAAI,CAAC,CAACc,GAAG,EAAEC,GAAG,KAAK;AACzB,MAAA,MACIC,QAAQ,GAAGvE,OAAO,CAAC7D,GAAG,CAACkI,GAAG,CAAC;AAC3BG,QAAAA,QAAQ,GAAGxE,OAAO,CAAC7D,GAAG,CAACmI,GAAG,CAAC,CAAA;AAC/B,MAAA,OAAOC,QAAQ,KAAKvC,SAAS,IAAIwC,QAAQ,KAAKxC,SAAS,GAAGuC,QAAQ,GAAGC,QAAQ,GAAG,CAAC,CAAA;AACrF,KAAC,CAAC,CAAA;AACFM,IAAAA,SAAS,CAACpB,OAAO,CAACe,CAAC,IAAI;AACnB,MAAA,MAAM/E,KAAK,GAAGM,OAAO,CAAC7D,GAAG,CAACsI,CAAC,CAAC,CAAA;AAC5B;MACAA,CAAC,CAACS,iBAAiB,GAAG,IAAI,CAAA;MAC1B,IAAIxF,KAAK,KAAKsC,SAAS,EAAE;AACrB;QACA9B,KAAK,CAACiF,MAAM,CAACzF,KAAK,EAAE+E,CAAC,EAAErE,MAAM,CAAC,CAAA;AAClC,OAAC,MACI;AACD;AACAF,QAAAA,KAAK,CAAC8E,MAAM,CAACP,CAAC,EAAErE,MAAM,CAAC,CAAA;AAC3B,OAAA;MACAqE,CAAC,CAACS,iBAAiB,GAAG,KAAK,CAAA;AAC/B,KAAC,CAAC,CAAA;AACN,GAAA;AACAzL,EAAAA,IAAIA,GAAG;IACH,MAAM2L,EAAE,GAAG,IAAI,CAAA;AACfA,IAAAA,EAAE,CAAClF,KAAK,CAACiF,MAAM,CAACC,EAAE,CAAC1C,WAAW,EAAE0C,EAAE,CAACN,SAAS,EAAEM,EAAE,CAAChF,MAAM,CAAC,CAAA;AAC5D,GAAA;AACJ,CAAA;AACA6E,YAAY,CAACvL,MAAM,GAAG,cAAc;;ACjHpC;AACA;AACA;AAGA,MACIiL,YAAU,GAAQxJ,MAAM,CAAC,YAAY,CAAC;AACtCyJ,EAAAA,eAAe,GAAGzJ,MAAM,CAAC,iBAAiB,CAAC;AAC3CqH,EAAAA,YAAY,GAAMrH,MAAM,CAAC,cAAc,CAAC,CAAA;AAC5C;AACA;AACA;AACA;AACe,MAAMkK,YAAY,SAASlM,UAAU,CAAC;EACjD,WAAW8D,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACYiD,MAAAA,KAAK,EAAG8B,SAAS;AACjB;AACZ;AACA;AACA;AACA;AACA;AACY8C,MAAAA,SAAS,EAAG9C,SAAS;AACrB;AACZ;AACA;AACA;AACA;AACA;AACYhC,MAAAA,OAAO,EAAGgC,SAAS;AACnB;AACZ;AACA;AACA;AACA;AACA;AACY5B,MAAAA,MAAM,EAAG,KAAA;KACZ,CAAA;AACL,GAAA;EACA,IAAI/G,IAAIA,GAAG;AACP,IAAA,OAAO,cAAc,CAAA;AACzB,GAAA;EACA,IAAI6G,KAAKA,GAAG;IACR,OAAO,IAAI,CAACyE,YAAU,CAAC,CAAA;AAC3B,GAAA;EACA,IAAIzE,KAAKA,CAACA,KAAK,EAAE;AACb,IAAA,IAAI,CAACyE,YAAU,CAAC,GAAGzE,KAAK,CAAA;AAC5B,GAAA;EACA,IAAI4E,SAASA,GAAG;IACZ,OAAO,IAAI,CAACF,eAAe,CAAC,CAAA;AAChC,GAAA;EACA,IAAIE,SAASA,CAACC,IAAI,EAAE;IAChB,IAAI,CAACH,eAAe,CAAC,GAAGG,IAAI,CAACxI,KAAK,CAAC,CAAC,CAAC,CAAA;AACzC,GAAA;EACA,IAAIyD,OAAOA,GAAG;IACV,OAAO,IAAI,CAACwC,YAAY,CAAC,CAAA;AAC7B,GAAA;EACA,IAAIxC,OAAOA,CAACA,OAAO,EAAE;AACjB,IAAA,IAAI,CAACwC,YAAY,CAAC,GAAGxC,OAAO,CAAA;AAChC,GAAA;AACAxG,EAAAA,IAAIA,GAAG;IACH,MAAM;MAAE0G,KAAK;MAAEF,OAAO;MAAE8E,SAAS;AAAE1E,MAAAA,MAAAA;AAAO,KAAC,GAAG,IAAI,CAAA;AAClD;AACA;AACA0E,IAAAA,SAAS,CAACvB,IAAI,CAAC,CAACc,GAAG,EAAEC,GAAG,KAAK;AACzB,MAAA,MACIC,QAAQ,GAAGvE,OAAO,CAAC7D,GAAG,CAACkI,GAAG,CAAC;AAC3BG,QAAAA,QAAQ,GAAGxE,OAAO,CAAC7D,GAAG,CAACmI,GAAG,CAAC,CAAA;AAC/B;MACA,OAAOC,QAAQ,GAAGC,QAAQ,CAAA;AAC9B,KAAC,CAAC,CAAA;AACFM,IAAAA,SAAS,CAACpB,OAAO,CAACe,CAAC,IAAI;AACnB,MAAA,MAAM/E,KAAK,GAAGM,OAAO,CAAC7D,GAAG,CAACsI,CAAC,CAAC,CAAA;AAC5B;MACAvE,KAAK,CAACiF,MAAM,CAACzF,KAAK,EAAE+E,CAAC,EAAErE,MAAM,CAAC,CAAA;AAClC,KAAC,CAAC,CAAA;AACN,GAAA;AACA3G,EAAAA,IAAIA,GAAG;AACH,IAAA,IAAI,CAACyG,KAAK,CAAC8E,MAAM,CAAC,IAAI,CAACF,SAAS,EAAE,IAAI,CAAC1E,MAAM,CAAC,CAAA;AAClD,GAAA;AACJ,CAAA;AACAiF,YAAY,CAAC3L,MAAM,GAAG,cAAc;;ACxFpC;AACA;AACA;AAGA,MACIiL,UAAU,GAASxJ,MAAM,CAAC,YAAY,CAAC;AACvCmK,EAAAA,gBAAgB,GAAGnK,MAAM,CAAC,kBAAkB,CAAC,CAAA;AACjD;AACA;AACA;AACA;AACe,MAAMoK,eAAe,SAASpM,UAAU,CAAC;EACpD,WAAW8D,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACYiD,MAAAA,KAAK,EAAG8B,SAAS;AACjB;AACZ;AACA;AACA;AACA;AACA;AACYxB,MAAAA,UAAU,EAAGwB,SAAS;AACtB;AACZ;AACA;AACA;AACA;AACA;AACY5B,MAAAA,MAAM,EAAG,KAAA;KACZ,CAAA;AACL,GAAA;EACA,IAAI/G,IAAIA,GAAG;AACP,IAAA,OAAO,iBAAiB,CAAA;AAC5B,GAAA;EACA,IAAI6G,KAAKA,GAAG;IACR,OAAO,IAAI,CAACyE,UAAU,CAAC,CAAA;AAC3B,GAAA;EACA,IAAIzE,KAAKA,CAACA,KAAK,EAAE;AACb,IAAA,IAAI,CAACyE,UAAU,CAAC,GAAGzE,KAAK,CAAA;AAC5B,GAAA;EACA,IAAIM,UAAUA,GAAG;IACb,OAAO,IAAI,CAAC8E,gBAAgB,CAAC,CAAA;AACjC,GAAA;EACA,IAAI9E,UAAUA,CAACgF,OAAO,EAAE;IACpB,IAAI,CAACF,gBAAgB,CAAC,GAAGE,OAAO,CAACjJ,KAAK,CAAC,CAAC,CAAC,CAAA;AAC7C,GAAA;AACA/C,EAAAA,IAAIA,GAAG;IACH,MAAM;MAAE0G,KAAK;MAAEM,UAAU;AAAEJ,MAAAA,MAAAA;AAAO,KAAC,GAAG,IAAI,CAAA;AAC1CF,IAAAA,KAAK,CAAC6C,GAAG,CAACvC,UAAU,EAAEJ,MAAM,CAAC,CAAA;AACjC,GAAA;AACA3G,EAAAA,IAAIA,GAAG;IACH,IAAI,CAACyG,KAAK,CAACuF,SAAS,CAAC,IAAI,CAACrF,MAAM,CAAC,CAAA;AACrC,GAAA;AACJ,CAAA;AACAmF,eAAe,CAAC7L,MAAM,GAAG,iBAAiB;;AC7D1C;AACA;AACA;AAoBO,MAAM8F,qBAAqB,GAAGA,CAACJ,KAAK,EAAEC,OAAO,EAAEC,OAAO,EAAEC,mBAAmB,KAAK;EACnF,OAAO,IAAIwC,YAAY,CAAC;IACpB3C,KAAK;IACLC,OAAO;IACPC,OAAO;AACPC,IAAAA,mBAAAA;AACJ,GAAC,CAAC,CAAA;AACN,CAAC,CAAA;AACM,MAAMO,0BAA0B,GAAGA,CAACL,WAAW,EAAEiD,WAAW,EAAE3C,WAAW,EAAEC,OAAO,KAAK;EAC1F,OAAO,IAAIyC,iBAAiB,CAAC;IACzBhD,WAAW;IACXM,WAAW;IACX2C,WAAW;AACX1C,IAAAA,OAAAA;AACJ,GAAC,CAAC,CAAA;AACN,CAAC,CAAA;AACM,MAAMC,0BAA0B,GAAGA,CAACR,WAAW,EAAEM,WAAW,EAAEC,OAAO,KAAK;EAC7E,OAAO,IAAIoE,iBAAiB,CAAC;IACzB3E,WAAW;IACXM,WAAW;AACXC,IAAAA,OAAAA;AACJ,GAAC,CAAC,CAAA;AACN,CAAC,CAAA;AACM,MAAMK,uBAAuB,GAAGA,CAACH,KAAK,EAAE4E,SAAS,EAAE1E,MAAM,KAAK;EACjE,OAAO,IAAIyE,SAAS,CAAC;IACjB3E,KAAK;IACL4E,SAAS;AACT1E,IAAAA,MAAAA;AACJ,GAAC,CAAC,CAAA;AACN,CAAC,CAAA;AACM,MAAME,0BAA0B,GAAGA,CAACJ,KAAK,EAAEwC,WAAW,EAAEoC,SAAS,EAAE9E,OAAO,EAAEI,MAAM,KAAK;EAC1F,OAAO,IAAI6E,YAAY,CAAC;IACpB/E,KAAK;IACLwC,WAAW;IACXoC,SAAS;IACT9E,OAAO;AACPI,IAAAA,MAAAA;AACJ,GAAC,CAAC,CAAA;AACN,CAAC,CAAA;AACM,MAAMG,0BAA0B,GAAGA,CAACL,KAAK,EAAE4E,SAAS,EAAE9E,OAAO,EAAEI,MAAM,KAAK;EAC7E,OAAO,IAAIiF,YAAY,CAAC;IACpBnF,KAAK;IACL4E,SAAS;IACT9E,OAAO;AACPI,IAAAA,MAAAA;AACJ,GAAC,CAAC,CAAA;AACN,CAAC,CAAA;AACM,MAAMK,wBAAwB,GAAGA,CAACP,KAAK,EAAEM,UAAU,EAAEJ,MAAM,KAAK;EACnE,OAAO,IAAImF,eAAe,CAAC;IACvBrF,KAAK;IACLM,UAAU;AACVJ,IAAAA,MAAAA;AACJ,GAAC,CAAC,CAAA;AACN,CAAC,CAAA;AACD,MAAMsF,eAAe,GAAGA,CAAC5L,GAAG,EAAE6L,KAAK,EAAE,GAAGvI,IAAI,KAAK;AAC7C,EAAA,MACIwI,QAAQ,GAAG9L,GAAG,CAACkC,KAAK;AACpB6J,IAAAA,QAAQ,GAAGF,KAAK,CAACG,IAAI,CAAChM,GAAG,CAACoB,UAAU,CAAC,EAAEpB,GAAG,EAAE,GAAGsD,IAAI,CAAC,CAAA;AACxD,EAAA,IAAI,OAAOyI,QAAQ,KAAK,QAAQ,EAAE;IAC9B/L,GAAG,CAACoB,UAAU,CAAC,GAAG4B,QAAQ,CAACZ,eAAe,CAAC2J,QAAQ,CAAC,CAAA;AACxD,GAAC,MACI,IAAIA,QAAQ,YAAYjM,SAAS,EAAE;AACpCE,IAAAA,GAAG,CAACoB,UAAU,CAAC,GAAG2K,QAAQ,CAAA;GAC7B,MACI,IAAIE,KAAK,CAACC,OAAO,CAACH,QAAQ,CAAC,EAAE;AAC9B,IAAA,MAAM,CAAC7J,KAAK,EAAEkC,IAAI,CAAC,GAAG2H,QAAQ,CAAA;AAC9B,IAAA,IAAI,OAAO7J,KAAK,KAAK,QAAQ,EAAE;MAC3BlC,GAAG,CAACoB,UAAU,CAAC,GAAG4B,QAAQ,CAACZ,eAAe,CAACF,KAAK,CAAC,CAAA;AACrD,KAAC,MACI,IAAIA,KAAK,YAAYpC,SAAS,EAAE;AACjCE,MAAAA,GAAG,CAACoB,UAAU,CAAC,GAAGc,KAAK,CAAA;KAC1B,MACI,IAAIA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MACzClC,GAAG,GAAG6B,MAAM,CAACwG,MAAM,CAACrI,GAAG,EAAEkC,KAAK,CAAC,CAAA;AAC/BlC,MAAAA,GAAG,CAACoB,UAAU,CAAC,GAAG4B,QAAQ,CAACZ,eAAe,CAACpC,GAAG,CAACoB,UAAU,CAAC,CAAC,CAAA;AAC/D,KAAA;AACA,IAAA,IAAI,OAAOgD,IAAI,KAAK,UAAU,EAAE;AAC5BwH,MAAAA,eAAe,CAAC5L,GAAG,EAAEoE,IAAI,EAAE,GAAGd,IAAI,CAAC,CAAA;AACvC,KAAA;GACH,MACI,IAAIyI,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAC/C/L,GAAG,GAAG6B,MAAM,CAACwG,MAAM,CAACrI,GAAG,EAAE+L,QAAQ,CAAC,CAAA;AAClC/L,IAAAA,GAAG,CAACoB,UAAU,CAAC,GAAG4B,QAAQ,CAACZ,eAAe,CAACpC,GAAG,CAACoB,UAAU,CAAC,CAAC,CAAA;AAC/D,GAAA;AACA,EAAA,IAAI0K,QAAQ,KAAKhH,UAAU,IAAIgH,QAAQ,KAAK3E,cAAc,IAAK4E,QAAQ,KAAKjH,UAAU,IAAIiH,QAAQ,KAAK5E,cAAe,EAAE;AACpHnH,IAAAA,GAAG,CAACmM,OAAO,CAAC,OAAO,CAAC,CAAA;AACxB,GAAA;AACJ,CAAC,CAAA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,oBAAoB,SAASC,MAAM,CAAC/M,IAAI,CAAC,CAAC;EAC3D,WAAW6D,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACY8B,MAAAA,QAAQ,EAAG,IAAI;AACf;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYpC,MAAAA,UAAU,EAAG,KAAK;AAClB;AACZ;AACA;AACA;AACA;AACA;AACY8E,MAAAA,gCAAgC,EAAG,GAAG;AACtC;AACZ;AACA;AACA;AACA;AACA;AACA;MACYjC,qBAAqB;AACrB;AACZ;AACA;AACA;AACA;AACA;AACA;MACYM,0BAA0B;AAC1B;AACZ;AACA;AACA;AACA;AACA;AACA;MACYG,0BAA0B;AAC1B;AACZ;AACA;AACA;AACA;AACA;AACA;MACYI,uBAAuB;AACvB;AACZ;AACA;AACA;AACA;AACA;AACA;MACYC,0BAA0B;AAC1B;AACZ;AACA;AACA;AACA;AACA;AACA;MACYC,0BAA0B;AAC1B;AACZ;AACA;AACA;AACA;AACA;AACA;MACYE,wBAAwB;AACxB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYxB,MAAAA,mBAAmB,EAAG,IAAA;KACzB,CAAA;AACL,GAAA;EACA9B,SAASA,CAAC,GAAGC,IAAI,EAAE;AACfzB,IAAAA,MAAM,CAACwG,MAAM,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"}