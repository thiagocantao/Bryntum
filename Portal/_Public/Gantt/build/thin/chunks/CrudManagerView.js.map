{"version":3,"file":"CrudManagerView.js","sources":["../../../../Engine/lib/Engine/vendor/later/later.js","../../../../chronograph/src/collection/Iterator.js","../../../../chronograph/src/class/Mixin.js","../../../../Engine/lib/Engine/scheduling/Types.js","../../../../Engine/lib/Engine/util/Constants.js","../../../../Engine/lib/Engine/util/Types.js","../../../../Engine/lib/Engine/calendar/CalendarCache.js","../../../../Engine/lib/Engine/util/StripDuplicates.js","../../../../Engine/lib/Engine/calendar/CalendarCacheInterval.js","../../../../Engine/lib/Engine/util/BinarySearch.js","../../../../Engine/lib/Engine/calendar/SortedMap.js","../../../../Engine/lib/Engine/calendar/IntervalCache.js","../../../../Engine/lib/Engine/calendar/CalendarCacheSingle.js","../../../../Engine/lib/Engine/quark/AbstractPartOfProjectGenericMixin.js","../../../../Engine/lib/Engine/quark/store/mixin/AbstractPartOfProjectStoreMixin.js","../../../../Engine/lib/Engine/quark/model/mixin/AbstractPartOfProjectModelMixin.js","../../../../Engine/lib/Engine/calendar/CalendarIntervalMixin.js","../../../../Engine/lib/Engine/calendar/CalendarIntervalStore.js","../../../../Engine/lib/Engine/calendar/UnspecifiedTimeIntervalModel.js","../../../../Engine/lib/Engine/quark/CorePartOfProjectGenericMixin.js","../../../../Engine/lib/Engine/quark/model/AbstractCalendarMixin.js","../../../../Engine/lib/Engine/quark/model/AbstractHasAssignmentsMixin.js","../../../../Engine/lib/Engine/quark/model/mixin/CorePartOfProjectModelMixin.js","../../../../Engine/lib/Engine/util/Functions.js","../../../../Engine/lib/Engine/quark/store/AbstractAssignmentStoreMixin.js","../../../../Engine/lib/Engine/quark/store/AbstractCalendarManagerStoreMixin.js","../../../../Engine/lib/Engine/quark/store/AbstractDependencyStoreMixin.js","../../../../Engine/lib/Engine/quark/store/AbstractEventStoreMixin.js","../../../../Engine/lib/Engine/quark/store/AbstractResourceStoreMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/CoreEventMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/CoreResourceMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/CoreAssignmentMixin.js","../../../../Engine/lib/Engine/quark/store/mixin/CorePartOfProjectStoreMixin.js","../../../../Engine/lib/Engine/quark/store/CoreAssignmentStoreMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/CoreCalendarMixin.js","../../../../Engine/lib/Engine/quark/store/CoreCalendarManagerStoreMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/CoreDependencyMixin.js","../../../../Engine/lib/Engine/quark/store/CoreDependencyStoreMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/CoreHasAssignmentsMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/CoreHasDependenciesMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/SchedulerCoreEvent.js","../../../../Engine/lib/Engine/quark/store/CoreEventStoreMixin.js","../../../../Engine/lib/Engine/quark/store/CoreResourceStoreMixin.js","../../../../Engine/lib/Engine/quark/model/AbstractProjectMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/SchedulerCoreProjectMixin.js","../../../../Scheduler/lib/Scheduler/model/mixin/TimeZonedDatesMixin.js","../../../../Scheduler/lib/Scheduler/model/TimeSpan.js","../../../../Scheduler/lib/Scheduler/data/mixin/ResourceStoreMixin.js","../../../../Scheduler/lib/Scheduler/data/mixin/PartOfProject.js","../../../../Scheduler/lib/Scheduler/model/mixin/ResourceModelMixin.js","../../../../Scheduler/lib/Scheduler/model/ResourceModel.js","../../../../Scheduler/lib/Scheduler/data/ResourceStore.js","../../../../Scheduler/lib/Scheduler/data/mixin/EventStoreMixin.js","../../../../Scheduler/lib/Scheduler/data/mixin/GetEventsMixin.js","../../../../Scheduler/lib/Scheduler/data/util/EventDayIndex.js","../../../../Scheduler/lib/Scheduler/data/mixin/DayIndexMixin.js","../../../../Scheduler/lib/Scheduler/data/mixin/RecurringTimeSpansMixin.js","../../../../Scheduler/lib/Scheduler/data/mixin/RecurringEventsMixin.js","../../../../Scheduler/lib/Scheduler/data/util/recurrence/RecurrenceDayRuleEncoder.js","../../../../Scheduler/lib/Scheduler/data/util/recurrence/AbstractRecurrenceIterator.js","../../../../Scheduler/lib/Scheduler/data/util/recurrence/DailyRecurrenceIterator.js","../../../../Scheduler/lib/Scheduler/data/util/recurrence/WeeklyRecurrenceIterator.js","../../../../Scheduler/lib/Scheduler/data/util/recurrence/MonthlyRecurrenceIterator.js","../../../../Scheduler/lib/Scheduler/data/util/recurrence/YearlyRecurrenceIterator.js","../../../../Scheduler/lib/Scheduler/model/RecurrenceModel.js","../../../../Scheduler/lib/Scheduler/model/mixin/RecurringTimeSpan.js","../../../../Scheduler/lib/Scheduler/model/mixin/EventModelMixin.js","../../../../Scheduler/lib/Scheduler/model/EventModel.js","../../../../Scheduler/lib/Scheduler/data/EventStore.js","../../../../Scheduler/lib/Scheduler/model/mixin/AssignmentModelMixin.js","../../../../Scheduler/lib/Scheduler/model/AssignmentModel.js","../../../../Scheduler/lib/Scheduler/data/mixin/AssignmentStoreMixin.js","../../../../Scheduler/lib/Scheduler/data/AssignmentStore.js","../../../../Scheduler/lib/Scheduler/model/DependencyBaseModel.js","../../../../Scheduler/lib/Scheduler/model/DependencyModel.js","../../../../Scheduler/lib/Scheduler/data/mixin/DependencyStoreMixin.js","../../../../Scheduler/lib/Scheduler/data/DependencyStore.js","../../../../Scheduler/lib/Scheduler/crud/mixin/AbstractCrudManagerValidation.js","../../../../Scheduler/lib/Scheduler/crud/AbstractCrudManagerMixin.js","../../../../Scheduler/lib/Scheduler/crud/transport/AjaxTransport.js","../../../../Scheduler/lib/Scheduler/crud/encoder/JsonEncoder.js","../../../../Scheduler/lib/Scheduler/data/mixin/ProjectCrudManager.js","../../../../Scheduler/lib/Scheduler/model/mixin/ProjectModelCommon.js","../../../../Scheduler/lib/Scheduler/model/ResourceTimeRangeModel.js","../../../../Scheduler/lib/Scheduler/data/ResourceTimeRangeStore.js","../../../../Scheduler/lib/Scheduler/model/mixin/ProjectModelTimeZoneMixin.js","../../../../Scheduler/lib/Scheduler/model/mixin/ProjectModelMixin.js","../../../../Scheduler/lib/Scheduler/model/mixin/ProjectCurrentConfig.js","../../../../Scheduler/lib/Scheduler/data/util/ModelPersistencyManager.js","../../../../Scheduler/lib/Scheduler/model/ProjectModel.js","../../../../Scheduler/lib/Scheduler/crud/mixin/CrudManagerView.js"],"sourcesContent":["// @ts-nocheck\n\nconst diffSecond = (date, diff) => {\n    return new Date(\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate(),\n        date.getHours(),\n        date.getMinutes(),\n        date.getSeconds() + diff,\n        date.getMilliseconds()\n    );\n};\n\n/**\n * The code just copy/pasted from pre-built later.js file and made exported\n *\n * @private\n */\nexport const later = (function () {\n    \"use strict\";\n    var later = {\n        version: \"1.2.0\"\n    };\n    if (!Array.prototype.indexOf) {\n        Array.prototype.indexOf = function (searchElement) {\n            \"use strict\";\n            if (this == null) {\n                throw new TypeError();\n            }\n            var t = Object(this);\n            var len = t.length >>> 0;\n            if (len === 0) {\n                return -1;\n            }\n            var n = 0;\n            if (arguments.length > 1) {\n                n = Number(arguments[1]);\n                if (n != n) {\n                    n = 0;\n                }\n                else if (n != 0 && n != Infinity && n != -Infinity) {\n                    n = (n > 0 || -1) * Math.floor(Math.abs(n));\n                }\n            }\n            if (n >= len) {\n                return -1;\n            }\n            var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n            for (; k < len; k++) {\n                if (k in t && t[k] === searchElement) {\n                    return k;\n                }\n            }\n            return -1;\n        };\n    }\n    if (!String.prototype.trim) {\n        String.prototype.trim = function () {\n            return this.replace(/^\\s+|\\s+$/g, \"\");\n        };\n    }\n    later.array = {};\n    later.array.sort = function (arr, zeroIsLast) {\n        arr.sort(function (a, b) {\n            return +a - +b;\n        });\n        if (zeroIsLast && arr[0] === 0) {\n            arr.push(arr.shift());\n        }\n    };\n    later.array.next = function (val, values, extent) {\n        var cur, zeroIsLargest = extent[0] !== 0, nextIdx = 0;\n        for (var i = values.length - 1; i > -1; --i) {\n            cur = values[i];\n            if (cur === val) {\n                return cur;\n            }\n            if (cur > val || cur === 0 && zeroIsLargest && extent[1] > val) {\n                nextIdx = i;\n                continue;\n            }\n            break;\n        }\n        return values[nextIdx];\n    };\n    later.array.nextInvalid = function (val, values, extent) {\n        var min = extent[0], max = extent[1], len = values.length, zeroVal = values[len - 1] === 0 && min !== 0 ? max : 0, next = val, i = values.indexOf(val), start = next;\n        while (next === (values[i] || zeroVal)) {\n            next++;\n            if (next > max) {\n                next = min;\n            }\n            i++;\n            if (i === len) {\n                i = 0;\n            }\n            if (next === start) {\n                return undefined;\n            }\n        }\n        return next;\n    };\n    later.array.prev = function (val, values, extent) {\n        var cur, len = values.length, zeroIsLargest = extent[0] !== 0, prevIdx = len - 1;\n        for (var i = 0; i < len; i++) {\n            cur = values[i];\n            if (cur === val) {\n                return cur;\n            }\n            if (cur < val || cur === 0 && zeroIsLargest && extent[1] < val) {\n                prevIdx = i;\n                continue;\n            }\n            break;\n        }\n        return values[prevIdx];\n    };\n    later.array.prevInvalid = function (val, values, extent) {\n        var min = extent[0], max = extent[1], len = values.length, zeroVal = values[len - 1] === 0 && min !== 0 ? max : 0, next = val, i = values.indexOf(val), start = next;\n        while (next === (values[i] || zeroVal)) {\n            next--;\n            if (next < min) {\n                next = max;\n            }\n            i--;\n            if (i === -1) {\n                i = len - 1;\n            }\n            if (next === start) {\n                return undefined;\n            }\n        }\n        return next;\n    };\n    later.day = later.D = {\n        name: \"day\",\n        range: 86400,\n        val: function (d) {\n            return d.D || (d.D = later.date.getDate.call(d));\n        },\n        isValid: function (d, val) {\n            return later.D.val(d) === (val || later.D.extent(d)[1]);\n        },\n        extent: function (d) {\n            if (d.DExtent)\n                return d.DExtent;\n            var month = later.M.val(d), max = later.DAYS_IN_MONTH[month - 1];\n            if (month === 2 && later.dy.extent(d)[1] === 366) {\n                max = max + 1;\n            }\n            return d.DExtent = [1, max];\n        },\n        start: function (d) {\n            return d.DStart || (d.DStart = later.date.next(later.Y.val(d), later.M.val(d), later.D.val(d)));\n        },\n        end: function (d) {\n            return d.DEnd || (d.DEnd = later.date.prev(later.Y.val(d), later.M.val(d), later.D.val(d)));\n        },\n        next: function (d, val) {\n            val = val > later.D.extent(d)[1] ? 1 : val;\n            var month = later.date.nextRollover(d, val, later.D, later.M), DMax = later.D.extent(month)[1];\n            val = val > DMax ? 1 : val || DMax;\n            return later.date.next(later.Y.val(month), later.M.val(month), val);\n        },\n        prev: function (d, val) {\n            var month = later.date.prevRollover(d, val, later.D, later.M), DMax = later.D.extent(month)[1];\n            return later.date.prev(later.Y.val(month), later.M.val(month), val > DMax ? DMax : val || DMax);\n        }\n    };\n    later.dayOfWeekCount = later.dc = {\n        name: \"day of week count\",\n        range: 604800,\n        val: function (d) {\n            return d.dc || (d.dc = Math.floor((later.D.val(d) - 1) / 7) + 1);\n        },\n        isValid: function (d, val) {\n            return later.dc.val(d) === val || val === 0 && later.D.val(d) > later.D.extent(d)[1] - 7;\n        },\n        extent: function (d) {\n            return d.dcExtent || (d.dcExtent = [1, Math.ceil(later.D.extent(d)[1] / 7)]);\n        },\n        start: function (d) {\n            return d.dcStart || (d.dcStart = later.date.next(later.Y.val(d), later.M.val(d), Math.max(1, (later.dc.val(d) - 1) * 7 + 1 || 1)));\n        },\n        end: function (d) {\n            return d.dcEnd || (d.dcEnd = later.date.prev(later.Y.val(d), later.M.val(d), Math.min(later.dc.val(d) * 7, later.D.extent(d)[1])));\n        },\n        next: function (d, val) {\n            val = val > later.dc.extent(d)[1] ? 1 : val;\n            var month = later.date.nextRollover(d, val, later.dc, later.M), dcMax = later.dc.extent(month)[1];\n            val = val > dcMax ? 1 : val;\n            var next = later.date.next(later.Y.val(month), later.M.val(month), val === 0 ? later.D.extent(month)[1] - 6 : 1 + 7 * (val - 1));\n            if (next.getTime() <= d.getTime()) {\n                month = later.M.next(d, later.M.val(d) + 1);\n                return later.date.next(later.Y.val(month), later.M.val(month), val === 0 ? later.D.extent(month)[1] - 6 : 1 + 7 * (val - 1));\n            }\n            return next;\n        },\n        prev: function (d, val) {\n            var month = later.date.prevRollover(d, val, later.dc, later.M), dcMax = later.dc.extent(month)[1];\n            val = val > dcMax ? dcMax : val || dcMax;\n            return later.dc.end(later.date.prev(later.Y.val(month), later.M.val(month), 1 + 7 * (val - 1)));\n        }\n    };\n    later.dayOfWeek = later.dw = later.d = {\n        name: \"day of week\",\n        range: 86400,\n        val: function (d) {\n            return d.dw || (d.dw = later.date.getDay.call(d) + 1);\n        },\n        isValid: function (d, val) {\n            return later.dw.val(d) === (val || 7);\n        },\n        extent: function () {\n            return [1, 7];\n        },\n        start: function (d) {\n            return later.D.start(d);\n        },\n        end: function (d) {\n            return later.D.end(d);\n        },\n        next: function (d, val) {\n            val = val > 7 ? 1 : val || 7;\n            return later.date.next(later.Y.val(d), later.M.val(d), later.D.val(d) + (val - later.dw.val(d)) + (val <= later.dw.val(d) ? 7 : 0));\n        },\n        prev: function (d, val) {\n            val = val > 7 ? 7 : val || 7;\n            return later.date.prev(later.Y.val(d), later.M.val(d), later.D.val(d) + (val - later.dw.val(d)) + (val >= later.dw.val(d) ? -7 : 0));\n        }\n    };\n    later.dayOfYear = later.dy = {\n        name: \"day of year\",\n        range: 86400,\n        val: function (d) {\n            return d.dy || (d.dy = Math.ceil(1 + (later.D.start(d).getTime() - later.Y.start(d).getTime()) / later.DAY));\n        },\n        isValid: function (d, val) {\n            return later.dy.val(d) === (val || later.dy.extent(d)[1]);\n        },\n        extent: function (d) {\n            var year = later.Y.val(d);\n            return d.dyExtent || (d.dyExtent = [1, year % 4 ? 365 : 366]);\n        },\n        start: function (d) {\n            return later.D.start(d);\n        },\n        end: function (d) {\n            return later.D.end(d);\n        },\n        next: function (d, val) {\n            val = val > later.dy.extent(d)[1] ? 1 : val;\n            var year = later.date.nextRollover(d, val, later.dy, later.Y), dyMax = later.dy.extent(year)[1];\n            val = val > dyMax ? 1 : val || dyMax;\n            return later.date.next(later.Y.val(year), later.M.val(year), val);\n        },\n        prev: function (d, val) {\n            var year = later.date.prevRollover(d, val, later.dy, later.Y), dyMax = later.dy.extent(year)[1];\n            val = val > dyMax ? dyMax : val || dyMax;\n            return later.date.prev(later.Y.val(year), later.M.val(year), val);\n        }\n    };\n    later.hour = later.h = {\n        name: \"hour\",\n        range: 3600,\n        val: function (d) {\n            return d.h || (d.h = later.date.getHour.call(d));\n        },\n        isValid: function (d, val) {\n            return later.h.val(d) === val;\n        },\n        extent: function () {\n            return [0, 23];\n        },\n        start: function (d) {\n            return d.hStart || (d.hStart = later.date.next(later.Y.val(d), later.M.val(d), later.D.val(d), later.h.val(d)));\n        },\n        end: function (d) {\n            return d.hEnd || (d.hEnd = later.date.prev(later.Y.val(d), later.M.val(d), later.D.val(d), later.h.val(d)));\n        },\n        next: function (d, val) {\n            val = val > 23 ? 0 : val;\n            var next = later.date.next(later.Y.val(d), later.M.val(d), later.D.val(d) + (val <= later.h.val(d) ? 1 : 0), val);\n            if (!later.date.isUTC && next.getTime() <= d.getTime()) {\n                next = later.date.next(later.Y.val(next), later.M.val(next), later.D.val(next), val + 1);\n            }\n            return next;\n        },\n        prev: function (d, val) {\n            val = val > 23 ? 23 : val;\n            return later.date.prev(later.Y.val(d), later.M.val(d), later.D.val(d) + (val >= later.h.val(d) ? -1 : 0), val);\n        }\n    };\n    later.minute = later.m = {\n        name: \"minute\",\n        range: 60,\n        val: function (d) {\n            return d.m || (d.m = later.date.getMin.call(d));\n        },\n        isValid: function (d, val) {\n            return later.m.val(d) === val;\n        },\n        extent: function (d) {\n            return [0, 59];\n        },\n        start: function (d) {\n            return d.mStart || (d.mStart = later.date.next(later.Y.val(d), later.M.val(d), later.D.val(d), later.h.val(d), later.m.val(d)));\n        },\n        end: function (d) {\n            return d.mEnd || (d.mEnd = later.date.prev(later.Y.val(d), later.M.val(d), later.D.val(d), later.h.val(d), later.m.val(d)));\n        },\n        next: function (d, val) {\n            var m = later.m.val(d), s = later.s.val(d), inc = val > 59 ? 60 - m : val <= m ? 60 - m + val : val - m, next = new Date(d.getTime() + inc * later.MIN - s * later.SEC);\n            if (!later.date.isUTC && next.getTime() <= d.getTime()) {\n                next = new Date(d.getTime() + (inc + 120) * later.MIN - s * later.SEC);\n            }\n            return next;\n        },\n        prev: function (d, val) {\n            val = val > 59 ? 59 : val;\n            return later.date.prev(later.Y.val(d), later.M.val(d), later.D.val(d), later.h.val(d) + (val >= later.m.val(d) ? -1 : 0), val);\n        }\n    };\n    later.month = later.M = {\n        name: \"month\",\n        range: 2629740,\n        val: function (d) {\n            return d.M || (d.M = later.date.getMonth.call(d) + 1);\n        },\n        isValid: function (d, val) {\n            return later.M.val(d) === (val || 12);\n        },\n        extent: function () {\n            return [1, 12];\n        },\n        start: function (d) {\n            return d.MStart || (d.MStart = later.date.next(later.Y.val(d), later.M.val(d)));\n        },\n        end: function (d) {\n            return d.MEnd || (d.MEnd = later.date.prev(later.Y.val(d), later.M.val(d)));\n        },\n        next: function (d, val) {\n            val = val > 12 ? 1 : val || 12;\n            return later.date.next(later.Y.val(d) + (val > later.M.val(d) ? 0 : 1), val);\n        },\n        prev: function (d, val) {\n            val = val > 12 ? 12 : val || 12;\n            return later.date.prev(later.Y.val(d) - (val >= later.M.val(d) ? 1 : 0), val);\n        }\n    };\n    later.second = later.s = {\n        name: \"second\",\n        range: 1,\n        val: function (d) {\n            return d.s || (d.s = later.date.getSec.call(d));\n        },\n        isValid: function (d, val) {\n            return later.s.val(d) === val;\n        },\n        extent: function () {\n            return [0, 59];\n        },\n        start: function (d) {\n            return d;\n        },\n        end: function (d) {\n            return d;\n        },\n        next: function (d, val) {\n            var s = later.s.val(d), inc = val > 59 ? 60 - s : val <= s ? 60 - s + val : val - s, next = new Date(d.getTime() + inc * later.SEC);\n            if (!later.date.isUTC && next.getTime() <= d.getTime()) {\n                next = new Date(d.getTime() + (inc + 7200) * later.SEC);\n            }\n            return next;\n        },\n        prev: function (d, val, cache) {\n            val = val > 59 ? 59 : val;\n            return later.date.prev(later.Y.val(d), later.M.val(d), later.D.val(d), later.h.val(d), later.m.val(d) + (val >= later.s.val(d) ? -1 : 0), val);\n        }\n    };\n    later.time = later.t = {\n        name: \"time\",\n        range: 1,\n        val: function (d) {\n            return d.t || (d.t = later.h.val(d) * 3600 + later.m.val(d) * 60 + later.s.val(d));\n        },\n        isValid: function (d, val) {\n            return later.t.val(d) === val;\n        },\n        extent: function () {\n            return [0, 86399];\n        },\n        start: function (d) {\n            return d;\n        },\n        end: function (d) {\n            return d;\n        },\n        next: function (d, val) {\n            val = val > 86399 ? 0 : val;\n            var next = later.date.next(later.Y.val(d), later.M.val(d), later.D.val(d) + (val <= later.t.val(d) ? 1 : 0), 0, 0, val);\n            if (!later.date.isUTC && next.getTime() < d.getTime()) {\n                next = later.date.next(later.Y.val(next), later.M.val(next), later.D.val(next), later.h.val(next), later.m.val(next), val + 7200);\n            }\n            return next;\n        },\n        prev: function (d, val) {\n            val = val > 86399 ? 86399 : val;\n            return later.date.next(later.Y.val(d), later.M.val(d), later.D.val(d) + (val >= later.t.val(d) ? -1 : 0), 0, 0, val);\n        }\n    };\n    later.weekOfMonth = later.wm = {\n        name: \"week of month\",\n        range: 604800,\n        val: function (d) {\n            return d.wm || (d.wm = (later.D.val(d) + (later.dw.val(later.M.start(d)) - 1) + (7 - later.dw.val(d))) / 7);\n        },\n        isValid: function (d, val) {\n            return later.wm.val(d) === (val || later.wm.extent(d)[1]);\n        },\n        extent: function (d) {\n            return d.wmExtent || (d.wmExtent = [1, (later.D.extent(d)[1] + (later.dw.val(later.M.start(d)) - 1) + (7 - later.dw.val(later.M.end(d)))) / 7]);\n        },\n        start: function (d) {\n            return d.wmStart || (d.wmStart = later.date.next(later.Y.val(d), later.M.val(d), Math.max(later.D.val(d) - later.dw.val(d) + 1, 1)));\n        },\n        end: function (d) {\n            return d.wmEnd || (d.wmEnd = later.date.prev(later.Y.val(d), later.M.val(d), Math.min(later.D.val(d) + (7 - later.dw.val(d)), later.D.extent(d)[1])));\n        },\n        next: function (d, val) {\n            val = val > later.wm.extent(d)[1] ? 1 : val;\n            var month = later.date.nextRollover(d, val, later.wm, later.M), wmMax = later.wm.extent(month)[1];\n            val = val > wmMax ? 1 : val || wmMax;\n            return later.date.next(later.Y.val(month), later.M.val(month), Math.max(1, (val - 1) * 7 - (later.dw.val(month) - 2)));\n        },\n        prev: function (d, val) {\n            var month = later.date.prevRollover(d, val, later.wm, later.M), wmMax = later.wm.extent(month)[1];\n            val = val > wmMax ? wmMax : val || wmMax;\n            return later.wm.end(later.date.next(later.Y.val(month), later.M.val(month), Math.max(1, (val - 1) * 7 - (later.dw.val(month) - 2))));\n        }\n    };\n    later.weekOfYear = later.wy = {\n        name: \"week of year (ISO)\",\n        range: 604800,\n        val: function (d) {\n            if (d.wy)\n                return d.wy;\n            var wThur = later.dw.next(later.wy.start(d), 5), YThur = later.dw.next(later.Y.prev(wThur, later.Y.val(wThur) - 1), 5);\n            return d.wy = 1 + Math.ceil((wThur.getTime() - YThur.getTime()) / later.WEEK);\n        },\n        isValid: function (d, val) {\n            return later.wy.val(d) === (val || later.wy.extent(d)[1]);\n        },\n        extent: function (d) {\n            if (d.wyExtent)\n                return d.wyExtent;\n            var year = later.dw.next(later.wy.start(d), 5), dwFirst = later.dw.val(later.Y.start(year)), dwLast = later.dw.val(later.Y.end(year));\n            return d.wyExtent = [1, dwFirst === 5 || dwLast === 5 ? 53 : 52];\n        },\n        start: function (d) {\n            return d.wyStart || (d.wyStart = later.date.next(later.Y.val(d), later.M.val(d), later.D.val(d) - (later.dw.val(d) > 1 ? later.dw.val(d) - 2 : 6)));\n        },\n        end: function (d) {\n            return d.wyEnd || (d.wyEnd = later.date.prev(later.Y.val(d), later.M.val(d), later.D.val(d) + (later.dw.val(d) > 1 ? 8 - later.dw.val(d) : 0)));\n        },\n        next: function (d, val) {\n            val = val > later.wy.extent(d)[1] ? 1 : val;\n            var wyThur = later.dw.next(later.wy.start(d), 5), year = later.date.nextRollover(wyThur, val, later.wy, later.Y);\n            if (later.wy.val(year) !== 1) {\n                year = later.dw.next(year, 2);\n            }\n            var wyMax = later.wy.extent(year)[1], wyStart = later.wy.start(year);\n            val = val > wyMax ? 1 : val || wyMax;\n            return later.date.next(later.Y.val(wyStart), later.M.val(wyStart), later.D.val(wyStart) + 7 * (val - 1));\n        },\n        prev: function (d, val) {\n            var wyThur = later.dw.next(later.wy.start(d), 5), year = later.date.prevRollover(wyThur, val, later.wy, later.Y);\n            if (later.wy.val(year) !== 1) {\n                year = later.dw.next(year, 2);\n            }\n            var wyMax = later.wy.extent(year)[1], wyEnd = later.wy.end(year);\n            val = val > wyMax ? wyMax : val || wyMax;\n            return later.wy.end(later.date.next(later.Y.val(wyEnd), later.M.val(wyEnd), later.D.val(wyEnd) + 7 * (val - 1)));\n        }\n    };\n    later.year = later.Y = {\n        name: \"year\",\n        range: 31556900,\n        val: function (d) {\n            return d.Y || (d.Y = later.date.getYear.call(d));\n        },\n        isValid: function (d, val) {\n            return later.Y.val(d) === val;\n        },\n        extent: function () {\n            return [1970, 2099];\n        },\n        start: function (d) {\n            return d.YStart || (d.YStart = later.date.next(later.Y.val(d)));\n        },\n        end: function (d) {\n            return d.YEnd || (d.YEnd = later.date.prev(later.Y.val(d)));\n        },\n        next: function (d, val) {\n            return val > later.Y.val(d) && val <= later.Y.extent()[1] ? later.date.next(val) : later.NEVER;\n        },\n        prev: function (d, val) {\n            return val < later.Y.val(d) && val >= later.Y.extent()[0] ? later.date.prev(val) : later.NEVER;\n        }\n    };\n    later.fullDate = later.fd = {\n        name: \"full date\",\n        range: 1,\n        val: function (d) {\n            return d.fd || (d.fd = d.getTime());\n        },\n        isValid: function (d, val) {\n            return later.fd.val(d) === val;\n        },\n        extent: function () {\n            return [0, 3250368e7];\n        },\n        start: function (d) {\n            return d;\n        },\n        end: function (d) {\n            return d;\n        },\n        next: function (d, val) {\n            return later.fd.val(d) < val ? new Date(val) : later.NEVER;\n        },\n        prev: function (d, val) {\n            return later.fd.val(d) > val ? new Date(val) : later.NEVER;\n        }\n    };\n    later.modifier = {};\n    later.modifier.after = later.modifier.a = function (constraint, values) {\n        var value = values[0];\n        return {\n            name: \"after \" + constraint.name,\n            range: (constraint.extent(new Date())[1] - value) * constraint.range,\n            val: constraint.val,\n            isValid: function (d, val) {\n                return this.val(d) >= value;\n            },\n            extent: constraint.extent,\n            start: constraint.start,\n            end: constraint.end,\n            next: function (startDate, val) {\n                if (val != value)\n                    val = constraint.extent(startDate)[0];\n                return constraint.next(startDate, val);\n            },\n            prev: function (startDate, val) {\n                val = val === value ? constraint.extent(startDate)[1] : value - 1;\n                return constraint.prev(startDate, val);\n            }\n        };\n    };\n    later.modifier.before = later.modifier.b = function (constraint, values) {\n        var value = values[values.length - 1];\n        return {\n            name: \"before \" + constraint.name,\n            range: constraint.range * (value - 1),\n            val: constraint.val,\n            isValid: function (d, val) {\n                return this.val(d) < value;\n            },\n            extent: constraint.extent,\n            start: constraint.start,\n            end: constraint.end,\n            next: function (startDate, val) {\n                val = val === value ? constraint.extent(startDate)[0] : value;\n                return constraint.next(startDate, val);\n            },\n            prev: function (startDate, val) {\n                val = val === value ? value - 1 : constraint.extent(startDate)[1];\n                return constraint.prev(startDate, val);\n            }\n        };\n    };\n    later.compile = function (schedDef) {\n        var constraints = [], constraintsLen = 0, tickConstraint;\n        for (var key in schedDef) {\n            var nameParts = key.split(\"_\"), name = nameParts[0], mod = nameParts[1], vals = schedDef[key], constraint = mod ? later.modifier[mod](later[name], vals) : later[name];\n            constraints.push({\n                constraint: constraint,\n                vals: vals\n            });\n            constraintsLen++;\n        }\n        constraints.sort(function (a, b) {\n            var ra = a.constraint.range, rb = b.constraint.range;\n            return rb < ra ? -1 : rb > ra ? 1 : 0;\n        });\n        tickConstraint = constraints[constraintsLen - 1].constraint;\n        function compareFn(dir) {\n            return dir === \"next\" ? function (a, b) {\n                return a.getTime() > b.getTime();\n            } : function (a, b) {\n                return b.getTime() > a.getTime();\n            };\n        }\n        return {\n            start: function (dir, startDate) {\n                var next = startDate, nextVal = later.array[dir], maxAttempts = 1e3, done;\n                while (maxAttempts-- && !done && next) {\n                    done = true;\n                    for (var i = 0; i < constraintsLen; i++) {\n                        var constraint = constraints[i].constraint, curVal = constraint.val(next), extent = constraint.extent(next), newVal = nextVal(curVal, constraints[i].vals, extent);\n                        if (!constraint.isValid(next, newVal)) {\n                            next = constraint[dir](next, newVal);\n                            done = false;\n                            break;\n                        }\n                    }\n                }\n                if (next !== later.NEVER) {\n                    next = dir === \"next\" ? tickConstraint.start(next) : tickConstraint.end(next);\n                }\n                return next;\n            },\n            end: function (dir, startDate) {\n                var result, nextVal = later.array[dir + \"Invalid\"], compare = compareFn(dir);\n                for (var i = constraintsLen - 1; i >= 0; i--) {\n                    var constraint = constraints[i].constraint, curVal = constraint.val(startDate), extent = constraint.extent(startDate), newVal = nextVal(curVal, constraints[i].vals, extent), next;\n                    if (newVal !== undefined) {\n                        next = constraint[dir](startDate, newVal);\n                        if (next && (!result || compare(result, next))) {\n                            result = next;\n                        }\n                    }\n                }\n                return result;\n            },\n            tick: function (dir, date) {\n                return new Date(dir === \"next\" ? tickConstraint.end(date).getTime() + later.SEC : tickConstraint.start(date).getTime() - later.SEC);\n            },\n            // PATCH\n            tickSafe: function (dir, date) {\n                return dir === \"next\"\n                    ? diffSecond(tickConstraint.end(date), 1)\n                    : diffSecond(tickConstraint.start(date), -1)\n                ;\n            },\n            // EOF PATCH\n            tickStart: function (date) {\n                return tickConstraint.start(date);\n            }\n        };\n    };\n    later.schedule = function (sched) {\n        if (!sched)\n            throw new Error(\"Missing schedule definition.\");\n        if (!sched.schedules)\n            throw new Error(\"Definition must include at least one schedule.\");\n        var schedules = [], schedulesLen = sched.schedules.length, exceptions = [], exceptionsLen = sched.exceptions ? sched.exceptions.length : 0;\n        for (var i = 0; i < schedulesLen; i++) {\n            schedules.push(later.compile(sched.schedules[i]));\n        }\n        for (var j = 0; j < exceptionsLen; j++) {\n            exceptions.push(later.compile(sched.exceptions[j]));\n        }\n        function getInstances(dir, count, startDate, endDate, isRange) {\n            var compare = compareFn(dir), loopCount = count, maxAttempts = 1e6, schedStarts = [], exceptStarts = [], next, end, results = [], isForward = dir === \"next\", lastResult, rStart = isForward ? 0 : 1, rEnd = isForward ? 1 : 0;\n            startDate = startDate ? new Date(startDate) : new Date();\n            if (!startDate || !startDate.getTime())\n                throw new Error(\"Invalid start date.\");\n            setNextStarts(dir, schedules, schedStarts, startDate);\n            setRangeStarts(dir, exceptions, exceptStarts, startDate);\n            while (maxAttempts-- && loopCount && (next = findNext(schedStarts, compare))) {\n                if (endDate && compare(next, endDate)) {\n                    break;\n                }\n                if (exceptionsLen) {\n                    updateRangeStarts(dir, exceptions, exceptStarts, next);\n                    if (end = calcRangeOverlap(dir, exceptStarts, next)) {\n                        updateNextStarts(dir, schedules, schedStarts, end);\n                        continue;\n                    }\n                }\n                if (isRange) {\n                    var maxEndDate = calcMaxEndDate(exceptStarts, compare);\n                    end = calcEnd(dir, schedules, schedStarts, next, maxEndDate);\n                    var r = isForward ? [new Date(Math.max(startDate, next)), end ? new Date(endDate ? Math.min(end, endDate) : end) : undefined] : [end ? new Date(endDate ? Math.max(endDate, end.getTime() + later.SEC) : end.getTime() + later.SEC) : undefined, new Date(Math.min(startDate, next.getTime() + later.SEC))];\n                    if (lastResult && r[rStart].getTime() === lastResult[rEnd].getTime()) {\n                        lastResult[rEnd] = r[rEnd];\n                        loopCount++;\n                    }\n                    else {\n                        lastResult = r;\n                        results.push(lastResult);\n                    }\n                    if (!end)\n                        break;\n                    updateNextStarts(dir, schedules, schedStarts, end);\n                }\n                else {\n                    results.push(isForward ? new Date(Math.max(startDate, next)) : getStart(schedules, schedStarts, next, endDate));\n                    tickStarts(dir, schedules, schedStarts, next);\n                }\n                loopCount--;\n            }\n            for (var i = 0, len = results.length; i < len; i++) {\n                var result = results[i];\n                results[i] = Object.prototype.toString.call(result) === \"[object Array]\" ? [cleanDate(result[0]), cleanDate(result[1])] : cleanDate(result);\n            }\n            return results.length === 0 ? later.NEVER : count === 1 ? results[0] : results;\n        }\n        function cleanDate(d) {\n            if (d instanceof Date && !isNaN(d.valueOf())) {\n                return new Date(d);\n            }\n            return undefined;\n        }\n        function setNextStarts(dir, schedArr, startsArr, startDate) {\n            for (var i = 0, len = schedArr.length; i < len; i++) {\n                startsArr[i] = schedArr[i].start(dir, startDate);\n            }\n        }\n        function updateNextStarts(dir, schedArr, startsArr, startDate) {\n            var compare = compareFn(dir);\n            for (var i = 0, len = schedArr.length; i < len; i++) {\n                if (startsArr[i] && !compare(startsArr[i], startDate)) {\n                    startsArr[i] = schedArr[i].start(dir, startDate);\n                }\n            }\n        }\n        function setRangeStarts(dir, schedArr, rangesArr, startDate) {\n            var compare = compareFn(dir);\n            for (var i = 0, len = schedArr.length; i < len; i++) {\n                var nextStart = schedArr[i].start(dir, startDate);\n                if (!nextStart) {\n                    rangesArr[i] = later.NEVER;\n                }\n                else {\n                    rangesArr[i] = [nextStart, schedArr[i].end(dir, nextStart)];\n                }\n            }\n        }\n        function updateRangeStarts(dir, schedArr, rangesArr, startDate) {\n            var compare = compareFn(dir);\n            for (var i = 0, len = schedArr.length; i < len; i++) {\n                if (rangesArr[i] && !compare(rangesArr[i][0], startDate)) {\n                    var nextStart = schedArr[i].start(dir, startDate);\n                    if (!nextStart) {\n                        rangesArr[i] = later.NEVER;\n                    }\n                    else {\n                        rangesArr[i] = [nextStart, schedArr[i].end(dir, nextStart)];\n                    }\n                }\n            }\n        }\n        function tickStarts(dir, schedArr, startsArr, startDate) {\n            for (var i = 0, len = schedArr.length; i < len; i++) {\n                if (startsArr[i] && startsArr[i].getTime() === startDate.getTime()) {\n                    // PATCH\n                    const newStart = schedArr[i].start(dir, schedArr[i].tick(dir, startDate));\n\n                    // if the calculated `newStart` is the same as previous, this is probably\n                    // an endless loop caused by the DST shift (the browser won't halt because later.js\n                    // has a limit of 100000 iterations, but the calculated schedules will be all wrong)\n                    if (newStart !== later.NEVER && newStart.getTime() === startsArr[i].getTime()) {\n                        // in such case we use our own \"safe\" implementation of the \"tick\" method\n                        // which performs symbolic date manipulation\n                        // (instead of advancing on milliseconds since epoch timeaxis)\n                        // the former seems to be slower, that's why we only switch to it\n                        // in the case of infinite loop\n                        startsArr[i] = schedArr[i].start(dir, schedArr[i].tickSafe(dir, startDate));\n                    } else {\n                        startsArr[i] = newStart\n                    }\n                    // EOF PATCH\n                }\n            }\n        }\n        function getStart(schedArr, startsArr, startDate, minEndDate) {\n            var result;\n            for (var i = 0, len = startsArr.length; i < len; i++) {\n                if (startsArr[i] && startsArr[i].getTime() === startDate.getTime()) {\n                    var start = schedArr[i].tickStart(startDate);\n                    if (minEndDate && start < minEndDate) {\n                        return minEndDate;\n                    }\n                    if (!result || start > result) {\n                        result = start;\n                    }\n                }\n            }\n            return result;\n        }\n        function calcRangeOverlap(dir, rangesArr, startDate) {\n            var compare = compareFn(dir), result;\n            for (var i = 0, len = rangesArr.length; i < len; i++) {\n                var range = rangesArr[i];\n                if (range && !compare(range[0], startDate) && (!range[1] || compare(range[1], startDate))) {\n                    if (!result || compare(range[1], result)) {\n                        result = range[1];\n                    }\n                }\n            }\n            return result;\n        }\n        function calcMaxEndDate(exceptsArr, compare) {\n            var result;\n            for (var i = 0, len = exceptsArr.length; i < len; i++) {\n                if (exceptsArr[i] && (!result || compare(result, exceptsArr[i][0]))) {\n                    result = exceptsArr[i][0];\n                }\n            }\n            return result;\n        }\n        function calcEnd(dir, schedArr, startsArr, startDate, maxEndDate) {\n            var compare = compareFn(dir), result;\n            for (var i = 0, len = schedArr.length; i < len; i++) {\n                var start = startsArr[i];\n                if (start && start.getTime() === startDate.getTime()) {\n                    var end = schedArr[i].end(dir, start);\n                    if (maxEndDate && (!end || compare(end, maxEndDate))) {\n                        return maxEndDate;\n                    }\n                    if (!result || compare(end, result)) {\n                        result = end;\n                    }\n                }\n            }\n            return result;\n        }\n        function compareFn(dir) {\n            return dir === \"next\" ? function (a, b) {\n                return !b || a.getTime() > b.getTime();\n            } : function (a, b) {\n                return !a || b.getTime() > a.getTime();\n            };\n        }\n        function findNext(arr, compare) {\n            var next = arr[0];\n            for (var i = 1, len = arr.length; i < len; i++) {\n                if (arr[i] && compare(next, arr[i])) {\n                    next = arr[i];\n                }\n            }\n            return next;\n        }\n        return {\n            isValid: function (d) {\n                return getInstances(\"next\", 1, d, d) !== later.NEVER;\n            },\n            next: function (count, startDate, endDate) {\n                return getInstances(\"next\", count || 1, startDate, endDate);\n            },\n            prev: function (count, startDate, endDate) {\n                return getInstances(\"prev\", count || 1, startDate, endDate);\n            },\n            nextRange: function (count, startDate, endDate) {\n                return getInstances(\"next\", count || 1, startDate, endDate, true);\n            },\n            prevRange: function (count, startDate, endDate) {\n                return getInstances(\"prev\", count || 1, startDate, endDate, true);\n            }\n        };\n    };\n    later.setTimeout = function (fn, sched) {\n        var s = later.schedule(sched), t;\n        if (fn) {\n            scheduleTimeout();\n        }\n        function scheduleTimeout() {\n            var now = Date.now(), next = s.next(2, now);\n            if (!next[0]) {\n                t = undefined;\n                return;\n            }\n            var diff = next[0].getTime() - now;\n            if (diff < 1e3) {\n                diff = next[1] ? next[1].getTime() - now : 1e3;\n            }\n            if (diff < 2147483647) {\n                t = setTimeout(fn, diff);\n            }\n            else {\n                t = setTimeout(scheduleTimeout, 2147483647);\n            }\n        }\n        return {\n            isDone: function () {\n                return !t;\n            },\n            clear: function () {\n                clearTimeout(t);\n            }\n        };\n    };\n    later.setInterval = function (fn, sched) {\n        if (!fn) {\n            return;\n        }\n        var t = later.setTimeout(scheduleTimeout, sched), done = t.isDone();\n        function scheduleTimeout() {\n            if (!done) {\n                fn();\n                t = later.setTimeout(scheduleTimeout, sched);\n            }\n        }\n        return {\n            isDone: function () {\n                return t.isDone();\n            },\n            clear: function () {\n                done = true;\n                t.clear();\n            }\n        };\n    };\n    later.date = {};\n    later.date.timezone = function (useLocalTime) {\n        later.date.build = useLocalTime ? function (Y, M, D, h, m, s) {\n            return new Date(Y, M, D, h, m, s);\n        } : function (Y, M, D, h, m, s) {\n            return new Date(Date.UTC(Y, M, D, h, m, s));\n        };\n        var get = useLocalTime ? \"get\" : \"getUTC\", d = Date.prototype;\n        later.date.getYear = d[get + \"FullYear\"];\n        later.date.getMonth = d[get + \"Month\"];\n        later.date.getDate = d[get + \"Date\"];\n        later.date.getDay = d[get + \"Day\"];\n        later.date.getHour = d[get + \"Hours\"];\n        later.date.getMin = d[get + \"Minutes\"];\n        later.date.getSec = d[get + \"Seconds\"];\n        later.date.isUTC = !useLocalTime;\n    };\n    later.date.UTC = function () {\n        later.date.timezone(false);\n    };\n    later.date.localTime = function () {\n        later.date.timezone(true);\n    };\n    later.date.UTC();\n    later.SEC = 1e3;\n    later.MIN = later.SEC * 60;\n    later.HOUR = later.MIN * 60;\n    later.DAY = later.HOUR * 24;\n    later.WEEK = later.DAY * 7;\n    later.DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    later.NEVER = 0;\n    later.date.next = function (Y, M, D, h, m, s) {\n        return later.date.build(Y, M !== undefined ? M - 1 : 0, D !== undefined ? D : 1, h || 0, m || 0, s || 0);\n    };\n    later.date.nextRollover = function (d, val, constraint, period) {\n        var cur = constraint.val(d), max = constraint.extent(d)[1];\n        return (val || max) <= cur || val > max ? new Date(period.end(d).getTime() + later.SEC) : period.start(d);\n    };\n    later.date.prev = function (Y, M, D, h, m, s) {\n        var len = arguments.length;\n        M = len < 2 ? 11 : M - 1;\n        D = len < 3 ? later.D.extent(later.date.next(Y, M + 1))[1] : D;\n        h = len < 4 ? 23 : h;\n        m = len < 5 ? 59 : m;\n        s = len < 6 ? 59 : s;\n        return later.date.build(Y, M, D, h, m, s);\n    };\n    later.date.prevRollover = function (d, val, constraint, period) {\n        var cur = constraint.val(d);\n        return val >= cur || !val ? period.start(period.prev(d, period.val(d) - 1)) : period.start(d);\n    };\n    later.parse = {};\n    later.parse.cron = function (expr, hasSeconds) {\n        var NAMES = {\n            JAN: 1,\n            FEB: 2,\n            MAR: 3,\n            APR: 4,\n            MAY: 5,\n            JUN: 6,\n            JUL: 7,\n            AUG: 8,\n            SEP: 9,\n            OCT: 10,\n            NOV: 11,\n            DEC: 12,\n            SUN: 1,\n            MON: 2,\n            TUE: 3,\n            WED: 4,\n            THU: 5,\n            FRI: 6,\n            SAT: 7\n        };\n        var REPLACEMENTS = {\n            \"* * * * * *\": \"0/1 * * * * *\",\n            \"@YEARLY\": \"0 0 1 1 *\",\n            \"@ANNUALLY\": \"0 0 1 1 *\",\n            \"@MONTHLY\": \"0 0 1 * *\",\n            \"@WEEKLY\": \"0 0 * * 0\",\n            \"@DAILY\": \"0 0 * * *\",\n            \"@HOURLY\": \"0 * * * *\"\n        };\n        var FIELDS = {\n            s: [0, 0, 59],\n            m: [1, 0, 59],\n            h: [2, 0, 23],\n            D: [3, 1, 31],\n            M: [4, 1, 12],\n            Y: [6, 1970, 2099],\n            d: [5, 1, 7, 1]\n        };\n        function getValue(value, offset, max) {\n            return isNaN(value) ? NAMES[value] || null : Math.min(+value + (offset || 0), max || 9999);\n        }\n        function cloneSchedule(sched) {\n            var clone = {}, field;\n            for (field in sched) {\n                if (field !== \"dc\" && field !== \"d\") {\n                    clone[field] = sched[field].slice(0);\n                }\n            }\n            return clone;\n        }\n        function add(sched, name, min, max, inc) {\n            var i = min;\n            if (!sched[name]) {\n                sched[name] = [];\n            }\n            while (i <= max) {\n                if (sched[name].indexOf(i) < 0) {\n                    sched[name].push(i);\n                }\n                i += inc || 1;\n            }\n            sched[name].sort(function (a, b) {\n                return a - b;\n            });\n        }\n        function addHash(schedules, curSched, value, hash) {\n            if (curSched.d && !curSched.dc || curSched.dc && curSched.dc.indexOf(hash) < 0) {\n                schedules.push(cloneSchedule(curSched));\n                curSched = schedules[schedules.length - 1];\n            }\n            add(curSched, \"d\", value, value);\n            add(curSched, \"dc\", hash, hash);\n        }\n        function addWeekday(s, curSched, value) {\n            var except1 = {}, except2 = {};\n            if (value === 1) {\n                add(curSched, \"D\", 1, 3);\n                add(curSched, \"d\", NAMES.MON, NAMES.FRI);\n                add(except1, \"D\", 2, 2);\n                add(except1, \"d\", NAMES.TUE, NAMES.FRI);\n                add(except2, \"D\", 3, 3);\n                add(except2, \"d\", NAMES.TUE, NAMES.FRI);\n            }\n            else {\n                add(curSched, \"D\", value - 1, value + 1);\n                add(curSched, \"d\", NAMES.MON, NAMES.FRI);\n                add(except1, \"D\", value - 1, value - 1);\n                add(except1, \"d\", NAMES.MON, NAMES.THU);\n                add(except2, \"D\", value + 1, value + 1);\n                add(except2, \"d\", NAMES.TUE, NAMES.FRI);\n            }\n            s.exceptions.push(except1);\n            s.exceptions.push(except2);\n        }\n        function addRange(item, curSched, name, min, max, offset) {\n            var incSplit = item.split(\"/\"), inc = +incSplit[1], range = incSplit[0];\n            if (range !== \"*\" && range !== \"0\") {\n                var rangeSplit = range.split(\"-\");\n                min = getValue(rangeSplit[0], offset, max);\n                max = getValue(rangeSplit[1], offset, max) || max;\n            }\n            add(curSched, name, min, max, inc);\n        }\n        function parse(item, s, name, min, max, offset) {\n            var value, split, schedules = s.schedules, curSched = schedules[schedules.length - 1];\n            if (item === \"L\") {\n                item = min - 1;\n            }\n            if ((value = getValue(item, offset, max)) !== null) {\n                add(curSched, name, value, value);\n            }\n            else if ((value = getValue(item.replace(\"W\", \"\"), offset, max)) !== null) {\n                addWeekday(s, curSched, value);\n            }\n            else if ((value = getValue(item.replace(\"L\", \"\"), offset, max)) !== null) {\n                addHash(schedules, curSched, value, min - 1);\n            }\n            else if ((split = item.split(\"#\")).length === 2) {\n                value = getValue(split[0], offset, max);\n                addHash(schedules, curSched, value, getValue(split[1]));\n            }\n            else {\n                addRange(item, curSched, name, min, max, offset);\n            }\n        }\n        function isHash(item) {\n            return item.indexOf(\"#\") > -1 || item.indexOf(\"L\") > 0;\n        }\n        function itemSorter(a, b) {\n            return isHash(a) && !isHash(b) ? 1 : a - b;\n        }\n        function parseExpr(expr) {\n            var schedule = {\n                schedules: [{}],\n                exceptions: []\n            }, components = expr.replace(/(\\s)+/g, \" \").split(\" \"), field, f, component, items;\n            for (field in FIELDS) {\n                f = FIELDS[field];\n                component = components[f[0]];\n                if (component && component !== \"*\" && component !== \"?\") {\n                    items = component.split(\",\").sort(itemSorter);\n                    var i, length = items.length;\n                    for (i = 0; i < length; i++) {\n                        parse(items[i], schedule, field, f[1], f[2], f[3]);\n                    }\n                }\n            }\n            return schedule;\n        }\n        function prepareExpr(expr) {\n            var prepared = expr.toUpperCase();\n            return REPLACEMENTS[prepared] || prepared;\n        }\n        var e = prepareExpr(expr);\n        return parseExpr(hasSeconds ? e : \"0 \" + e);\n    };\n    later.parse.recur = function () {\n        var schedules = [], exceptions = [], cur, curArr = schedules, curName, values, every, modifier, applyMin, applyMax, i, last;\n        function add(name, min, max) {\n            name = modifier ? name + \"_\" + modifier : name;\n            if (!cur) {\n                curArr.push({});\n                cur = curArr[0];\n            }\n            if (!cur[name]) {\n                cur[name] = [];\n            }\n            curName = cur[name];\n            if (every) {\n                values = [];\n                for (i = min; i <= max; i += every) {\n                    values.push(i);\n                }\n                last = {\n                    n: name,\n                    x: every,\n                    c: curName.length,\n                    m: max\n                };\n            }\n            values = applyMin ? [min] : applyMax ? [max] : values;\n            var length = values.length;\n            for (i = 0; i < length; i += 1) {\n                var val = values[i];\n                if (curName.indexOf(val) < 0) {\n                    curName.push(val);\n                }\n            }\n            values = every = modifier = applyMin = applyMax = 0;\n        }\n        return {\n            schedules: schedules,\n            exceptions: exceptions,\n            on: function () {\n                values = arguments[0] instanceof Array ? arguments[0] : arguments;\n                return this;\n            },\n            every: function (x) {\n                every = x || 1;\n                return this;\n            },\n            after: function (x) {\n                modifier = \"a\";\n                values = [x];\n                return this;\n            },\n            before: function (x) {\n                modifier = \"b\";\n                values = [x];\n                return this;\n            },\n            first: function () {\n                applyMin = 1;\n                return this;\n            },\n            last: function () {\n                applyMax = 1;\n                return this;\n            },\n            time: function () {\n                for (var i = 0, len = values.length; i < len; i++) {\n                    var split = values[i].split(\":\");\n                    if (split.length < 3)\n                        split.push(0);\n                    values[i] = +split[0] * 3600 + +split[1] * 60 + +split[2];\n                }\n                add(\"t\");\n                return this;\n            },\n            second: function () {\n                add(\"s\", 0, 59);\n                return this;\n            },\n            minute: function () {\n                add(\"m\", 0, 59);\n                return this;\n            },\n            hour: function () {\n                add(\"h\", 0, 23);\n                return this;\n            },\n            dayOfMonth: function () {\n                add(\"D\", 1, applyMax ? 0 : 31);\n                return this;\n            },\n            dayOfWeek: function () {\n                add(\"d\", 1, 7);\n                return this;\n            },\n            onWeekend: function () {\n                values = [1, 7];\n                return this.dayOfWeek();\n            },\n            onWeekday: function () {\n                values = [2, 3, 4, 5, 6];\n                return this.dayOfWeek();\n            },\n            dayOfWeekCount: function () {\n                add(\"dc\", 1, applyMax ? 0 : 5);\n                return this;\n            },\n            dayOfYear: function () {\n                add(\"dy\", 1, applyMax ? 0 : 366);\n                return this;\n            },\n            weekOfMonth: function () {\n                add(\"wm\", 1, applyMax ? 0 : 5);\n                return this;\n            },\n            weekOfYear: function () {\n                add(\"wy\", 1, applyMax ? 0 : 53);\n                return this;\n            },\n            month: function () {\n                add(\"M\", 1, 12);\n                return this;\n            },\n            year: function () {\n                add(\"Y\", 1970, 2450);\n                return this;\n            },\n            fullDate: function () {\n                for (var i = 0, len = values.length; i < len; i++) {\n                    values[i] = values[i].getTime();\n                }\n                add(\"fd\");\n                return this;\n            },\n            customModifier: function (id, vals) {\n                var custom = later.modifier[id];\n                if (!custom)\n                    throw new Error(\"Custom modifier \" + id + \" not recognized!\");\n                modifier = id;\n                values = arguments[1] instanceof Array ? arguments[1] : [arguments[1]];\n                return this;\n            },\n            customPeriod: function (id) {\n                var custom = later[id];\n                if (!custom)\n                    throw new Error(\"Custom time period \" + id + \" not recognized!\");\n                add(id, custom.extent(new Date())[0], custom.extent(new Date())[1]);\n                return this;\n            },\n            startingOn: function (start) {\n                return this.between(start, last.m);\n            },\n            between: function (start, end) {\n                cur[last.n] = cur[last.n].splice(0, last.c);\n                every = last.x;\n                add(last.n, start, end);\n                return this;\n            },\n            and: function () {\n                cur = curArr[curArr.push({}) - 1];\n                return this;\n            },\n            except: function () {\n                curArr = exceptions;\n                cur = null;\n                return this;\n            }\n        };\n    };\n    later.parse.text = function (str) {\n        var recur = later.parse.recur, pos = 0, input = \"\", error;\n        var TOKENTYPES = {\n            eof: /^$/,\n            fullDate: /^(\\d\\d\\d\\d-\\d\\d-\\d\\dt\\d\\d:\\d\\d:\\d\\d)\\b/,\n            rank: /^((\\d\\d\\d\\d)|([2-5]?1(st)?|[2-5]?2(nd)?|[2-5]?3(rd)?|(0|[1-5]?[4-9]|[1-5]0|1[1-3])(th)?))\\b/,\n            time: /^((([0]?[1-9]|1[0-2]):[0-5]\\d(\\s)?(am|pm))|(([0]?\\d|1\\d|2[0-3]):[0-5]\\d))\\b/,\n            dayName: /^((sun|mon|tue(s)?|wed(nes)?|thu(r(s)?)?|fri|sat(ur)?)(day)?)\\b/,\n            monthName: /^(jan(uary)?|feb(ruary)?|ma((r(ch)?)?|y)|apr(il)?|ju(ly|ne)|aug(ust)?|oct(ober)?|(sept|nov|dec)(ember)?)\\b/,\n            yearIndex: /^(\\d\\d\\d\\d)\\b/,\n            every: /^every\\b/,\n            after: /^after\\b/,\n            before: /^before\\b/,\n            second: /^(s|sec(ond)?(s)?)\\b/,\n            minute: /^(m|min(ute)?(s)?)\\b/,\n            hour: /^(h|hour(s)?)\\b/,\n            day: /^(day(s)?( of the month)?)\\b/,\n            dayInstance: /^day instance\\b/,\n            dayOfWeek: /^day(s)? of the week\\b/,\n            dayOfYear: /^day(s)? of the year\\b/,\n            weekOfYear: /^week(s)?( of the year)?\\b/,\n            weekOfMonth: /^week(s)? of the month\\b/,\n            weekday: /^weekday\\b/,\n            weekend: /^weekend\\b/,\n            month: /^month(s)?\\b/,\n            year: /^year(s)?\\b/,\n            between: /^between (the)?\\b/,\n            start: /^(start(ing)? (at|on( the)?)?)\\b/,\n            at: /^(at|@)\\b/,\n            and: /^(,|and\\b)/,\n            except: /^(except\\b)/,\n            also: /(also)\\b/,\n            first: /^(first)\\b/,\n            last: /^last\\b/,\n            \"in\": /^in\\b/,\n            of: /^of\\b/,\n            onthe: /^on the\\b/,\n            on: /^on\\b/,\n            through: /(-|^(to|through)\\b)/\n        };\n        var NAMES = {\n            jan: 1,\n            feb: 2,\n            mar: 3,\n            apr: 4,\n            may: 5,\n            jun: 6,\n            jul: 7,\n            aug: 8,\n            sep: 9,\n            oct: 10,\n            nov: 11,\n            dec: 12,\n            sun: 1,\n            mon: 2,\n            tue: 3,\n            wed: 4,\n            thu: 5,\n            fri: 6,\n            sat: 7,\n            \"1st\": 1,\n            fir: 1,\n            \"2nd\": 2,\n            sec: 2,\n            \"3rd\": 3,\n            thi: 3,\n            \"4th\": 4,\n            \"for\": 4\n        };\n        function t(start, end, text, type) {\n            return {\n                startPos: start,\n                endPos: end,\n                text: text,\n                type: type\n            };\n        }\n        function peek(expected) {\n            var scanTokens = expected instanceof Array ? expected : [expected], whiteSpace = /\\s+/, token, curInput, m, scanToken, start, len;\n            scanTokens.push(whiteSpace);\n            start = pos;\n            while (!token || token.type === whiteSpace) {\n                len = -1;\n                curInput = input.substring(start);\n                token = t(start, start, input.split(whiteSpace)[0]);\n                var i, length = scanTokens.length;\n                for (i = 0; i < length; i++) {\n                    scanToken = scanTokens[i];\n                    m = scanToken.exec(curInput);\n                    if (m && m.index === 0 && m[0].length > len) {\n                        len = m[0].length;\n                        token = t(start, start + len, curInput.substring(0, len), scanToken);\n                    }\n                }\n                if (token.type === whiteSpace) {\n                    start = token.endPos;\n                }\n            }\n            return token;\n        }\n        function scan(expectedToken) {\n            var token = peek(expectedToken);\n            pos = token.endPos;\n            return token;\n        }\n        function parseThroughExpr(tokenType) {\n            var start = +parseTokenValue(tokenType), end = checkAndParse(TOKENTYPES.through) ? +parseTokenValue(tokenType) : start, nums = [];\n            for (var i = start; i <= end; i++) {\n                nums.push(i);\n            }\n            return nums;\n        }\n        function parseRanges(tokenType) {\n            var nums = parseThroughExpr(tokenType);\n            while (checkAndParse(TOKENTYPES.and)) {\n                nums = nums.concat(parseThroughExpr(tokenType));\n            }\n            return nums;\n        }\n        function parseEvery(r) {\n            var num, period, start, end;\n            if (checkAndParse(TOKENTYPES.weekend)) {\n                r.on(NAMES.sun, NAMES.sat).dayOfWeek();\n            }\n            else if (checkAndParse(TOKENTYPES.weekday)) {\n                r.on(NAMES.mon, NAMES.tue, NAMES.wed, NAMES.thu, NAMES.fri).dayOfWeek();\n            }\n            else {\n                num = parseTokenValue(TOKENTYPES.rank);\n                r.every(num);\n                period = parseTimePeriod(r);\n                if (checkAndParse(TOKENTYPES.start)) {\n                    num = parseTokenValue(TOKENTYPES.rank);\n                    r.startingOn(num);\n                    parseToken(period.type);\n                }\n                else if (checkAndParse(TOKENTYPES.between)) {\n                    start = parseTokenValue(TOKENTYPES.rank);\n                    if (checkAndParse(TOKENTYPES.and)) {\n                        end = parseTokenValue(TOKENTYPES.rank);\n                        r.between(start, end);\n                    }\n                }\n            }\n        }\n        function parseOnThe(r) {\n            if (checkAndParse(TOKENTYPES.first)) {\n                r.first();\n            }\n            else if (checkAndParse(TOKENTYPES.last)) {\n                r.last();\n            }\n            else {\n                r.on(parseRanges(TOKENTYPES.rank));\n            }\n            parseTimePeriod(r);\n        }\n        function parseScheduleExpr(str) {\n            pos = 0;\n            input = str;\n            error = -1;\n            var r = recur();\n            while (pos < input.length && error < 0) {\n                var token = parseToken([TOKENTYPES.every, TOKENTYPES.after, TOKENTYPES.before, TOKENTYPES.onthe, TOKENTYPES.on, TOKENTYPES.of, TOKENTYPES[\"in\"], TOKENTYPES.at, TOKENTYPES.and, TOKENTYPES.except, TOKENTYPES.also]);\n                switch (token.type) {\n                    case TOKENTYPES.every:\n                        parseEvery(r);\n                        break;\n                    case TOKENTYPES.after:\n                        if (peek(TOKENTYPES.time).type !== undefined) {\n                            r.after(parseTokenValue(TOKENTYPES.time));\n                            r.time();\n                        }\n                        else if (peek(TOKENTYPES.fullDate).type !== undefined) {\n                            r.after(parseTokenValue(TOKENTYPES.fullDate));\n                            r.fullDate();\n                        }\n                        else {\n                            r.after(parseTokenValue(TOKENTYPES.rank));\n                            parseTimePeriod(r);\n                        }\n                        break;\n                    case TOKENTYPES.before:\n                        if (peek(TOKENTYPES.time).type !== undefined) {\n                            r.before(parseTokenValue(TOKENTYPES.time));\n                            r.time();\n                        }\n                        else if (peek(TOKENTYPES.fullDate).type !== undefined) {\n                            r.before(parseTokenValue(TOKENTYPES.fullDate));\n                            r.fullDate();\n                        }\n                        else {\n                            r.before(parseTokenValue(TOKENTYPES.rank));\n                            parseTimePeriod(r);\n                        }\n                        break;\n                    case TOKENTYPES.onthe:\n                        parseOnThe(r);\n                        break;\n                    case TOKENTYPES.on:\n                        r.on(parseRanges(TOKENTYPES.dayName)).dayOfWeek();\n                        break;\n                    case TOKENTYPES.of:\n                        r.on(parseRanges(TOKENTYPES.monthName)).month();\n                        break;\n                    case TOKENTYPES[\"in\"]:\n                        r.on(parseRanges(TOKENTYPES.yearIndex)).year();\n                        break;\n                    case TOKENTYPES.at:\n                        r.on(parseTokenValue(TOKENTYPES.time)).time();\n                        while (checkAndParse(TOKENTYPES.and)) {\n                            r.on(parseTokenValue(TOKENTYPES.time)).time();\n                        }\n                        break;\n                    case TOKENTYPES.and:\n                        break;\n                    case TOKENTYPES.also:\n                        r.and();\n                        break;\n                    case TOKENTYPES.except:\n                        r.except();\n                        break;\n                    default:\n                        error = pos;\n                }\n            }\n            return {\n                schedules: r.schedules,\n                exceptions: r.exceptions,\n                error: error\n            };\n        }\n        function parseTimePeriod(r) {\n            var timePeriod = parseToken([TOKENTYPES.second, TOKENTYPES.minute, TOKENTYPES.hour, TOKENTYPES.dayOfYear, TOKENTYPES.dayOfWeek, TOKENTYPES.dayInstance, TOKENTYPES.day, TOKENTYPES.month, TOKENTYPES.year, TOKENTYPES.weekOfMonth, TOKENTYPES.weekOfYear]);\n            switch (timePeriod.type) {\n                case TOKENTYPES.second:\n                    r.second();\n                    break;\n                case TOKENTYPES.minute:\n                    r.minute();\n                    break;\n                case TOKENTYPES.hour:\n                    r.hour();\n                    break;\n                case TOKENTYPES.dayOfYear:\n                    r.dayOfYear();\n                    break;\n                case TOKENTYPES.dayOfWeek:\n                    r.dayOfWeek();\n                    break;\n                case TOKENTYPES.dayInstance:\n                    r.dayOfWeekCount();\n                    break;\n                case TOKENTYPES.day:\n                    r.dayOfMonth();\n                    break;\n                case TOKENTYPES.weekOfMonth:\n                    r.weekOfMonth();\n                    break;\n                case TOKENTYPES.weekOfYear:\n                    r.weekOfYear();\n                    break;\n                case TOKENTYPES.month:\n                    r.month();\n                    break;\n                case TOKENTYPES.year:\n                    r.year();\n                    break;\n                default:\n                    error = pos;\n            }\n            return timePeriod;\n        }\n        function checkAndParse(tokenType) {\n            var found = peek(tokenType).type === tokenType;\n            if (found) {\n                scan(tokenType);\n            }\n            return found;\n        }\n        function parseToken(tokenType) {\n            var t = scan(tokenType);\n            if (t.type) {\n                t.text = convertString(t.text, tokenType);\n            }\n            else {\n                error = pos;\n            }\n            return t;\n        }\n        function parseTokenValue(tokenType) {\n            return parseToken(tokenType).text;\n        }\n        function convertString(str, tokenType) {\n            var output = str;\n            switch (tokenType) {\n                case TOKENTYPES.time:\n                    var parts = str.split(/(:|am|pm)/), hour = parts[3] === \"pm\" && parts[0] < 12 ? parseInt(parts[0], 10) + 12 : parts[0], min = parts[2].trim();\n                    output = (hour.length === 1 ? \"0\" : \"\") + hour + \":\" + min;\n                    break;\n                case TOKENTYPES.rank:\n                    output = parseInt(/^\\d+/.exec(str)[0], 10);\n                    break;\n                case TOKENTYPES.monthName:\n                case TOKENTYPES.dayName:\n                    output = NAMES[str.substring(0, 3)];\n                    break;\n                case TOKENTYPES.fullDate:\n                    output = new Date(str.toUpperCase());\n                    break;\n                }\n            return output;\n        }\n        return parseScheduleExpr(str.toLowerCase());\n    };\n    return later;\n})();\n// Set the local time mode for \"later\" library\nlater.date.localTime();\nexport default later;\n","//---------------------------------------------------------------------------------------------------------------------\n/**\n * Given a single `Iterable`, returns an array of 2 iterables, mirroring the original one (which should not be used anymore).\n *\n * For example:\n *\n *     const gen = function* () { yield 1; yield 2; yield 3 }\n *\n *     const [ iterable1, iterable2 ] = split(gen())\n *     const [ iter1, iter2 ] = [\n *         iterable1[ Symbol.iterator ](),\n *         iterable2[ Symbol.iterator ]()\n *     ]\n *\n *     iter1.next() // 1\n *     iter2.next() // 1\n *     iter2.next() // 2\n *     iter2.next() // 3\n *     iter1.next() // 2\n *     iter1.next() // 3\n *     iter1.next() // done\n *     iter2.next() // done\n *\n * @param iterable\n */\nexport function split(iterable) {\n    const gen1Pending = [];\n    const gen2Pending = [];\n    let iterator;\n    const gen1 = function* () {\n        if (!iterator)\n            iterator = iterable[Symbol.iterator]();\n        while (true) {\n            if (gen1Pending.length) {\n                yield* gen1Pending;\n                gen1Pending.length = 0;\n            }\n            if (!iterator)\n                break;\n            const { value, done } = iterator.next();\n            if (done) {\n                iterator = null;\n                iterable = null;\n                break;\n            }\n            gen2Pending.push(value);\n            yield value;\n        }\n    };\n    const gen2 = function* () {\n        if (!iterator)\n            iterator = iterable[Symbol.iterator]();\n        while (true) {\n            if (gen2Pending.length) {\n                yield* gen2Pending;\n                gen2Pending.length = 0;\n            }\n            if (!iterator)\n                break;\n            const { value, done } = iterator.next();\n            if (done) {\n                iterator = null;\n                iterable = null;\n                break;\n            }\n            gen1Pending.push(value);\n            yield value;\n        }\n    };\n    return [gen1(), gen2()];\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* inBatchesBySize(iterator, batchSize) {\n    if (batchSize < 0)\n        throw new Error(\"Batch size needs to a natural number\");\n    batchSize = batchSize | 0;\n    const runningBatch = [];\n    for (const el of iterator) {\n        if (runningBatch.length === batchSize) {\n            yield runningBatch;\n            runningBatch.length = 0;\n        }\n        runningBatch.push(el);\n    }\n    if (runningBatch.length > 0)\n        yield runningBatch;\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* filter(iterator, func) {\n    let i = 0;\n    for (const el of iterator) {\n        if (func(el, i++))\n            yield el;\n    }\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* drop(iterator, howMany) {\n    let i = 0;\n    for (const el of iterator) {\n        if (++i > howMany)\n            yield el;\n    }\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function every(iterator, func) {\n    let i = 0;\n    for (const el of iterator) {\n        if (!func(el, i++))\n            return false;\n    }\n    return true;\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function some(iterator, func) {\n    let i = 0;\n    for (const el of iterator) {\n        if (func(el, i++))\n            return true;\n    }\n    return false;\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* map(iterator, func) {\n    let i = 0;\n    for (const el of iterator)\n        yield func(el, i++);\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function reduce(iterator, func, initialAcc) {\n    let i = 0;\n    let acc = initialAcc;\n    for (const el of iterator) {\n        acc = func(acc, el, i++);\n    }\n    return acc;\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* uniqueOnly(iterator) {\n    const seen = new Set();\n    for (const el of iterator) {\n        if (!seen.has(el)) {\n            seen.add(el);\n            yield el;\n        }\n    }\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* uniqueOnlyBy(iterator, func) {\n    const seen = new Set();\n    for (const el of iterator) {\n        const uniqueBy = func(el);\n        if (!seen.has(uniqueBy)) {\n            seen.add(uniqueBy);\n            yield el;\n        }\n    }\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* reverse(iterator) {\n    const all = Array.from(iterator);\n    for (let i = all.length - 1; i >= 0; i--)\n        yield all[i];\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* takeWhile(iterator, func) {\n    let i = 0;\n    for (const el of iterator) {\n        if (func(el, i++))\n            yield el;\n        else\n            return;\n    }\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* takeUntilIncluding(iterator, func) {\n    let i = 0;\n    for (const el of iterator) {\n        yield el;\n        if (func(el, i++))\n            return;\n    }\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* takeUntilExcluding(iterator, func) {\n    let i = 0;\n    for (const el of iterator) {\n        if (func(el, i++))\n            return;\n        yield el;\n    }\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* concat(...iterators) {\n    for (let i = 0; i < iterators.length; i++)\n        yield* iterators[i];\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* concatIterable(iteratorsProducer) {\n    for (const iterator of iteratorsProducer)\n        yield* iterator;\n}\n//---------------------------------------------------------------------------------------------------------------------\n// just a chained syntax sugar class\n// note, that we either use a combination of `this.derive()` + this.iterable (which will clear the `this.iterable`)\n// or, use just `this` as iterable, which will also clear the iterator\n//\nexport class ChainedIteratorClass {\n    constructor(iterable) {\n        this.iterable = undefined;\n        if (!iterable)\n            throw new Error(\"Require an iterable instance for chaining\");\n        this.iterable = iterable;\n    }\n    derive(iterable) {\n        this.iterable = undefined;\n        return new ChainedIteratorClass(iterable);\n    }\n    copy() {\n        const [iter1, iter2] = split(this.iterable);\n        this.iterable = iter2;\n        return new ChainedIteratorClass(iter1);\n    }\n    split() {\n        const [iter1, iter2] = split(this.iterable);\n        return [new ChainedIteratorClass(iter1), this.derive(iter2)];\n    }\n    inBatchesBySize(batchSize) {\n        return this.derive(inBatchesBySize(this.iterable, batchSize));\n    }\n    filter(func) {\n        return this.derive(filter(this.iterable, func));\n    }\n    drop(howMany) {\n        return this.derive(drop(this.iterable, howMany));\n    }\n    map(func) {\n        return this.derive(map(this.iterable, func));\n    }\n    reduce(func, initialAcc) {\n        return reduce(this, func, initialAcc);\n    }\n    concat() {\n        //@ts-ignore\n        return this.derive(concatIterable(this.iterable));\n    }\n    uniqueOnly() {\n        return this.derive(uniqueOnly(this.iterable));\n    }\n    uniqueOnlyBy(func) {\n        return this.derive(uniqueOnlyBy(this.iterable, func));\n    }\n    every(func) {\n        return every(this, func);\n    }\n    some(func) {\n        return some(this, func);\n    }\n    takeWhile(func) {\n        return this.derive(takeWhile(this.iterable, func));\n    }\n    *[Symbol.iterator]() {\n        let iterable = this.iterable;\n        if (!iterable)\n            throw new Error(\"Chained iterator already exhausted or used to derive the new one\");\n        // practice shows, that cleaning up the iterable after yourself helps garbage collector a lot\n        this.iterable = undefined;\n        yield* iterable;\n        // yes, we really want to avoid memory leaks\n        iterable = undefined;\n    }\n    toArray() {\n        return Array.from(this);\n    }\n    sort(order) {\n        return Array.from(this).sort(order);\n    }\n    toSet() {\n        return new Set(this);\n    }\n    toMap() {\n        //@ts-ignore\n        return new Map(this);\n    }\n    // toMap<K, V> () : T extends [ K, V ] ? Map<K, V> : never  {\n    //     return new Map<K, V>(this.iterable as (T extends [ K, V ] ? Iterable<T> : never)) as (T extends [ K, V ] ? Map<K, V> : never)\n    // }\n    flush() {\n        for (const element of this) { }\n    }\n    memoize() {\n        return new MemoizedIteratorClass(this);\n    }\n}\nexport const ChainedIterator = (iterator) => new ChainedIteratorClass(iterator);\nexport const CI = ChainedIterator;\n//---------------------------------------------------------------------------------------------------------------------\nexport class MemoizedIteratorClass extends ChainedIteratorClass {\n    constructor() {\n        super(...arguments);\n        this.elements = [];\n        this.$iterator = undefined;\n    }\n    set iterable(iterable) {\n        this.$iterable = iterable;\n    }\n    get iterable() {\n        return this;\n    }\n    derive(iterable) {\n        return new ChainedIteratorClass(iterable);\n    }\n    *[Symbol.iterator]() {\n        const elements = this.elements;\n        if (this.$iterable) {\n            if (!this.$iterator)\n                this.$iterator = this.$iterable[Symbol.iterator]();\n            let iterator = this.$iterator;\n            let alreadyConsumed = elements.length;\n            // yield the 1st batch \"efficiently\"\n            if (alreadyConsumed > 0)\n                yield* elements;\n            while (true) {\n                if (elements.length > alreadyConsumed) {\n                    // wonder if `yield* elements.slice(alreadyConsumed)` is more performant or not\n                    for (let i = alreadyConsumed; i < elements.length; i++)\n                        yield elements[i];\n                    alreadyConsumed = elements.length;\n                }\n                if (!iterator)\n                    break;\n                const { value, done } = iterator.next();\n                if (done) {\n                    iterator = this.$iterator = null;\n                    this.$iterable = null;\n                }\n                else {\n                    elements.push(value);\n                    alreadyConsumed++;\n                    yield value;\n                }\n            }\n        }\n        else {\n            yield* elements;\n        }\n    }\n}\nexport const MemoizedIterator = (iterator) => new MemoizedIteratorClass(iterator);\nexport const MI = MemoizedIterator;\n","import { CI, MI } from \"../collection/Iterator.js\";\n//---------------------------------------------------------------------------------------------------------------------\nconst MixinInstanceOfProperty = Symbol('MixinIdentity');\nconst MixinStateProperty = Symbol('MixinStateProperty');\n//---------------------------------------------------------------------------------------------------------------------\nclass MixinWalkDepthState {\n    constructor() {\n        this.baseEl = undefined;\n        this.sourceEl = undefined;\n        this.$elementsByTopoLevel = undefined;\n        this.$topoLevels = undefined;\n        this.linearizedByTopoLevelsSource = MI(this.linearizedByTopoLevels());\n    }\n    static new(props) {\n        const me = new this();\n        props && Object.assign(me, props);\n        return me;\n    }\n    get topoLevels() {\n        if (this.$topoLevels !== undefined)\n            return this.$topoLevels;\n        return this.$topoLevels = this.buildTopoLevels();\n    }\n    buildTopoLevels() {\n        return Array.from(this.elementsByTopoLevel.keys()).sort((level1, level2) => level1 - level2);\n    }\n    get elementsByTopoLevel() {\n        if (this.$elementsByTopoLevel !== undefined)\n            return this.$elementsByTopoLevel;\n        return this.$elementsByTopoLevel = this.buildElementsByTopoLevel();\n    }\n    getOrCreateLevel(map, topoLevel) {\n        let elementsAtLevel = map.get(topoLevel);\n        if (!elementsAtLevel) {\n            elementsAtLevel = [];\n            map.set(topoLevel, elementsAtLevel);\n        }\n        return elementsAtLevel;\n    }\n    buildElementsByTopoLevel() {\n        let maxTopoLevel = 0;\n        const baseElements = this.baseEl ? CI(this.baseEl.walkDepthState.elementsByTopoLevel.values()).concat().toSet() : new Set();\n        const map = CI(this.sourceEl.requirements)\n            .map(mixin => mixin.walkDepthState.elementsByTopoLevel)\n            .concat()\n            .reduce((elementsByTopoLevel, [topoLevel, mixins]) => {\n            if (topoLevel > maxTopoLevel)\n                maxTopoLevel = topoLevel;\n            this.getOrCreateLevel(elementsByTopoLevel, topoLevel).push(mixins);\n            return elementsByTopoLevel;\n        }, new Map());\n        this.getOrCreateLevel(map, maxTopoLevel + 1).push([this.sourceEl]);\n        return CI(map).map(([level, elements]) => {\n            return [level, CI(elements).concat().uniqueOnly().filter(mixin => !baseElements.has(mixin)).sort((mixin1, mixin2) => mixin1.id - mixin2.id)];\n        }).toMap();\n    }\n    *linearizedByTopoLevels() {\n        yield* CI(this.topoLevels).map(level => this.elementsByTopoLevel.get(level)).concat();\n    }\n}\n// Note: 65535 mixins only, because of the hashing function implementation (String.fromCharCode)\nlet MIXIN_ID = 1;\n//---------------------------------------------------------------------------------------------------------------------\n/**\n * @hidden\n */\nexport const identity = a => class extends a {\n};\n// export type IdentityMixin<Base extends object>         = < T extends AnyConstructor<Base>>(base : T) => T\n//\n// export const IdentityMixin             = <Base extends object>() : IdentityMixin<Base> => identity\n//---------------------------------------------------------------------------------------------------------------------\n/**\n * @hidden\n */\nexport class ZeroBaseClass {\n}\n//---------------------------------------------------------------------------------------------------------------------\nclass MixinState {\n    constructor() {\n        this.id = MIXIN_ID++;\n        this.requirements = [];\n        this.baseClass = ZeroBaseClass;\n        this.identitySymbol = undefined;\n        this.mixinLambda = identity;\n        this.walkDepthState = undefined;\n        // private $hash               : MixinHash             = ''\n        this.$minimalClass = undefined;\n        this.name = '';\n    }\n    static new(props) {\n        const me = new this();\n        props && Object.assign(me, props);\n        me.walkDepthState = MixinWalkDepthState.new({ sourceEl: me, baseEl: getMixinState(me.baseClass) });\n        //------------------\n        const mixinLambda = me.mixinLambda;\n        const symbol = me.identitySymbol = Symbol(mixinLambda.name);\n        const mixinLambdaWrapper = Object.assign(function (base) {\n            const extendedClass = mixinLambda(base);\n            extendedClass.prototype[symbol] = true;\n            return extendedClass;\n        }, {\n            [MixinInstanceOfProperty]: symbol,\n            [MixinStateProperty]: me\n        });\n        Object.defineProperty(mixinLambdaWrapper, Symbol.hasInstance, { value: isInstanceOfStatic });\n        me.mixinLambda = mixinLambdaWrapper;\n        return me;\n    }\n    get minimalClass() {\n        if (this.$minimalClass !== undefined)\n            return this.$minimalClass;\n        return this.$minimalClass = this.buildMinimalClass();\n    }\n    // get hash () : MixinHash {\n    //     if (this.$hash !== '') return this.$hash\n    //\n    //     return this.$hash = this.buildHash()\n    // }\n    // buildHash () : MixinHash {\n    //     return String.fromCharCode(...this.walkDepthState.linearizedByTopoLevelsSource.map(mixin => mixin.id))\n    // }\n    getBaseClassMixinId(baseClass) {\n        const constructor = this.constructor;\n        const mixinId = constructor.baseClassesIds.get(baseClass);\n        if (mixinId !== undefined)\n            return mixinId;\n        const newId = MIXIN_ID++;\n        constructor.baseClassesIds.set(baseClass, newId);\n        return newId;\n    }\n    buildMinimalClass() {\n        const self = this.constructor;\n        let baseCls = this.baseClass;\n        const minimalClassConstructor = this.walkDepthState.linearizedByTopoLevelsSource.reduce((acc, mixin) => {\n            const { cls, hash } = acc;\n            const nextHash = hash + String.fromCharCode(mixin.id);\n            let wrapperCls = self.minimalClassesByLinearHash.get(nextHash);\n            if (!wrapperCls) {\n                wrapperCls = mixin.mixinLambda(cls);\n                mixin.name = wrapperCls.name;\n                self.minimalClassesByLinearHash.set(nextHash, wrapperCls);\n            }\n            acc.cls = wrapperCls;\n            acc.hash = nextHash;\n            return acc;\n        }, { cls: baseCls, hash: String.fromCharCode(this.getBaseClassMixinId(baseCls)) }).cls;\n        const minimalClass = Object.assign(minimalClassConstructor, {\n            [MixinInstanceOfProperty]: this.identitySymbol,\n            [MixinStateProperty]: this,\n            mix: this.mixinLambda,\n            derive: (base) => Mixin([minimalClass, base], base => class extends base {\n            }),\n            $: this,\n            toString: this.toString.bind(this)\n        });\n        Object.defineProperty(minimalClass, Symbol.hasInstance, { value: isInstanceOfStatic });\n        return minimalClass;\n    }\n    toString() {\n        return this.walkDepthState.linearizedByTopoLevelsSource.reduce((acc, mixin) => `${mixin.name}(${acc})`, this.baseClass.name);\n    }\n}\nMixinState.minimalClassesByLinearHash = new Map();\nMixinState.baseClassesIds = new Map();\n//endregion type helpers\n//---------------------------------------------------------------------------------------------------------------------\nconst isMixinClass = (func) => {\n    return Object.getPrototypeOf(func.prototype).constructor.hasOwnProperty(MixinStateProperty);\n};\nconst getMixinState = (func) => {\n    return Object.getPrototypeOf(func.prototype).constructor[MixinStateProperty];\n};\n//---------------------------------------------------------------------------------------------------------------------\nconst mixin = (required, mixinLambda) => {\n    let baseClass;\n    if (required.length > 0) {\n        const lastRequirement = required[required.length - 1];\n        // absence of `[ MixinStateProperty ]` indicates its a regular class and not a mixin class\n        // avoid assigning ZeroBaseClass - it will be applied as default at the end\n        if (!isMixinClass(lastRequirement) && lastRequirement !== ZeroBaseClass)\n            baseClass = lastRequirement;\n    }\n    const requirements = [];\n    required.forEach((requirement, index) => {\n        const mixinState = requirement[MixinStateProperty];\n        if (mixinState !== undefined) {\n            const currentBaseClass = mixinState.baseClass;\n            // ignore ZeroBaseClass - since those are compatible with any other base class\n            if (currentBaseClass !== ZeroBaseClass) {\n                if (baseClass) {\n                    // already found a base class from requirements earlier\n                    if (baseClass !== currentBaseClass) {\n                        const currentIsSub = currentBaseClass.prototype.isPrototypeOf(baseClass.prototype);\n                        const currentIsSuper = baseClass.prototype.isPrototypeOf(currentBaseClass.prototype);\n                        if (!currentIsSub && !currentIsSuper)\n                            throw new Error(\"Base class mismatch\");\n                        baseClass = currentIsSuper ? currentBaseClass : baseClass;\n                    }\n                }\n                else\n                    // first base class from requirements\n                    baseClass = currentBaseClass;\n            }\n            requirements.push(mixinState);\n        }\n        else {\n            if (index !== required.length - 1)\n                throw new Error(\"Base class should be provided as the last element of the requirements array\");\n        }\n    });\n    //------------------\n    const mixinState = MixinState.new({\n        requirements,\n        mixinLambda: mixinLambda,\n        baseClass: baseClass || ZeroBaseClass\n    });\n    return mixinState.minimalClass;\n};\n//---------------------------------------------------------------------------------------------------------------------\n// this function works both with default mixin class and mixin application function\n// it supplied internally as [Symbol.hasInstance] for the default mixin class and mixin application function\nconst isInstanceOfStatic = function (instance) {\n    return Boolean(instance && instance[this[MixinInstanceOfProperty]]);\n};\n//---------------------------------------------------------------------------------------------------------------------\n/**\n * This is the `instanceof` analog for the classes created with [[Mixin]] helper. It also provides [typeguard](https://www.typescriptlang.org/docs/handbook/advanced-types.html#user-defined-type-guards).\n *\n * There's no strict need to use it, as the native `instanceof` is also supported for the mixins created with the [[Mixin]] helper and also provides\n * typeguarding.\n *\n * @param instance Any value, normally an instance of the mixin class\n * @param func The constructor function of the class, created with [[Mixin]]\n */\nexport const isInstanceOf = (instance, func) => {\n    return Boolean(instance && instance[func[MixinInstanceOfProperty]]);\n};\n//---------------------------------------------------------------------------------------\n/**\n * This function allows you to create mixin classes. Mixin classes solves the well-known problem with \"classical\" single-class inheritance,\n * in which class hierarchy must form a tree. When using mixins, class hierarchy becomes an arbitrary acyclic graph.\n *\n * Another view on mixins is that, if \"classical\" class is a point (a vertice of the graph), mixin class is an arrow between the points\n * (an edge in the graph, or rather, a description of the edge).\n *\n * Some background information about the mixin pattern can be found [here](https://mariusschulz.com/blog/typescript-2-2-mixin-classes)\n * and [here](https://www.bryntum.com/blog/the-mixin-pattern-in-typescript-all-you-need-to-know/).\n *\n * The pattern, being described here, is the evolution of the previous work, and main advantage is that it solves the compilation error\n * for circular references.\n *\n * Mixin definition. Requirements\n * ------------------------------\n *\n * The pattern looks like:\n *\n *     class Mixin1 extends Mixin(\n *         [],\n *         (base : AnyConstructor) =>\n *\n *         class Mixin1 extends base {\n *             prop1        : string\n *             method1 () : string {\n *                 return this.prop1\n *             }\n *             static static1 : number\n *         }\n *     ){}\n *\n * The core of the definition above is the mixin lambda - a function which receives a base class as its argument and returns a class,\n * extending the base class with additional properties.\n *\n * The example above creates a mixin `Mixin1` which has no requirements. Requirements are the other mixins,\n * which needs to be included in the base class of this mixin.\n *\n * There's also a special type of the requirement,\n * called \"base class requirement\". It is optional and can only appear as the last argument of the requirements\n * array. It does not have to be a mixin, created with the `Mixin` function, but can be any JS class. This requirement\n * specifies, that the base class of this mixin should be a subclass of the given class (or that class itself).\n *\n * The requirements of the mixin needs to be listed 3 times:\n * - as an array of constructor functions, in the 1st argument of the `Mixin` function\n * - as an instance type intersection, in the 1st type argument for the [[AnyConstructor]] type\n * - as an static type intersection, in the 2nd type argument for the [[AnyConstructor]] type\n *\n * For example, `Mixin2` requires `Mixin1`:\n *\n *     class Mixin2 extends Mixin(\n *         [ Mixin1 ],\n *         (base : AnyConstructor<Mixin1, typeof Mixin1>) =>\n *\n *         class Mixin2 extends base {\n *         }\n *     ){}\n *\n * And `Mixin3` requires both `Mixin1` and `Mixin2` (even that its redundant, since `Mixin2` already requires `Mixin1`,\n * but suppose we don't know the implementation details of the `Mixin2`):\n *\n *     class Mixin3 extends Mixin(\n *         [ Mixin1, Mixin2 ],\n *         (base : AnyConstructor<Mixin1 & Mixin2, typeof Mixin1 & typeof Mixin2>) =>\n *\n *         class Mixin3 extends base {\n *         }\n *     ){}\n *\n * Now, `Mixin4` requires `Mixin3`, plus, it requires the base class to be `SomeBaseClass`:\n *\n *     class SomeBaseClass {}\n *\n *     class Mixin4 extends Mixin(\n *         [ Mixin3, SomeBaseClass ],\n *         (base : AnyConstructor<\n *             Mixin3 & SomeBaseClass, typeof Mixin3 & typeof SomeBaseClass\n *         >) =>\n *\n *         class Mixin4 extends base {\n *         }\n *     ){}\n *\n * As already briefly mentioned, the requirements are \"scanned\" deep and included only once. Also all minimal classes are cached -\n * for example the creation of the Mixin3 will reuse the minimal class of the Mixin2 instead of creating a new intermediate class.\n * This means that all edges of the mixin dependencies graph are created only once (up to the base class).\n *\n * Requirements can not form cycles - that will generate both compilation error and run-time stack overflow.\n *\n * The typing for the `Mixin` function will provide a compilation error, if the requirements don't match, e.g. some requirement is\n * listed in the array, but missed in the types. This protects you from trivial mistakes. However, the typing is done up to 10 requirements only.\n * If you need more than 10 requirements for the mixin, use the [[MixinAny]] function, which is an exact analog of `Mixin`, but without\n * this type-level protection for requirements mismatch.\n *\n * It is possible to simplify the type of the `base` argument a bit, by using the [[ClassUnion]] helper. However, it seems in certain edge cases\n * it may lead to compilation errors. If your scenarios are not so complex you should give it a try. Using the [[ClassUnion]] helper, the\n * `Mixin3` can be defined as:\n *\n *     class Mixin3 extends Mixin(\n *         [ Mixin1, Mixin2 ],\n *         (base : ClassUnion<typeof Mixin1, typeof Mixin2>) =>\n *\n *         class Mixin3 extends base {\n *         }\n *     ){}\n *\n * Note, that due to this [issue](https://github.com/Microsoft/TypeScript/issues/7342), if you use decorators in your mixin class,\n * the declaration needs to be slightly more verbose (can not use compact notation for the arrow functions):\n *\n *     class Mixin2 extends Mixin(\n *         [ Mixin1 ],\n *         (base : AnyConstructor<Mixin1, typeof Mixin1>) => {\n *             class Mixin2 extends base {\n *                 @decorator\n *                 prop2 : string\n *             }\n *             return Mixin2\n *         }\n *     ){}\n *\n * As you noticed, the repeating listing of the requirements is somewhat verbose. Suggestions how the pattern can be improved\n * are [very welcomed](mailto:nickolay8@gmail.com).\n *\n * Mixin instantiation. Mixin constructor. `instanceof`\n * --------------------------------\n *\n * You can instantiate any mixin class just by using its constructor:\n *\n *     const instance1 = new Mixin1()\n *     const instance2 = new Mixin2()\n *\n * As explained in details [here](https://mariusschulz.com/blog/typescript-2-2-mixin-classes), mixin constructor should accept variable number of arguments\n * with the `any` type. This is simply because the mixin is supposed to be applicable to any other base class, which may have its own type\n * of the constructor arguments.\n *\n *     class Mixin2 extends Mixin(\n *         [ Mixin1 ],\n *         (base : AnyConstructor<Mixin1, typeof Mixin1>) => {\n *             class Mixin2 extends base {\n *                 prop2 : string\n *\n *                 constructor (...args: any[]) {\n *                     super(...args)\n *                     this.prop2 = ''\n *                 }\n *             }\n *             return Mixin2\n *         }\n *     ){}\n *\n * In other words, its not possible to provide any type-safety for mixin instantiation using regular class constructor.\n *\n * However, if we change the way we create class instances a little, we can get the type-safety back. For that,\n * we need to use a \"uniform\" class constructor - a constructor which has the same form for all classes. The [[Base]] class\n * provides such constructor as its static [[Base.new|new]] method. The usage of `Base` class is not required - you can use\n * any other base class.\n *\n * The `instanceof` operator works as expected for instances of the mixin classes. It also takes into account all the requirements.\n * For example:\n *\n *     const instance2 = new Mixin2()\n *\n *     const isMixin2 = instance2 instanceof Mixin2 // true\n *     const isMixin1 = instance2 instanceof Mixin1 // true, since Mixin2 requires Mixin1\n *\n * See also [[isInstanceOf]].\n *\n * \"Manual\" class derivation\n * --------------------------------\n *\n * You have defined a mixin using the `Mixin` function. Now you want to apply it to some base class to get the \"specific\" class to be able\n * to instantiate it. As described above - you don't have to, you can instantiate it directly.\n *\n * Sometimes however, you still want to derive the class \"manually\". For that, you can use static methods `mix` and `derive`, available\n * on all mixins.\n *\n * The `mix` method provides a direct access to the mixin lambda. It does not take requirements into account - that's the implementor's responsibility.\n * The `derive` method is something like \"accumulated\" mixin lambda - mixin lambda with all requirements.\n *\n * Both `mix` and `derive` provide the reasonably typed outcome.\n *\n *     class Mixin1 extends Mixin(\n *         [],\n *         (base : AnyConstructor) =>\n *\n *         class Mixin1 extends base {\n *             prop1        : string\n *         }\n *     ){}\n *\n *     class Mixin2 extends Mixin(\n *         [ Mixin1 ],\n *         (base : AnyConstructor<Mixin1, typeof Mixin1>) =>\n *\n *         class Mixin2 extends base {\n *             prop2        : string\n *         }\n *     ){}\n *\n *     const ManualMixin1 = Mixin1.mix(Object)\n *     const ManualMixin2 = Mixin2.mix(Mixin1.mix(Object))\n *\n *     const AnotherManualMixin1 = Mixin1.derive(Object)\n *     const AnotherManualMixin2 = Mixin2.derive(Object)\n *\n * Generics\n * --------\n *\n * Using generics with mixins is tricky because TypeScript does not have higher-kinded types and type inference for generics. Still some form\n * of generic arguments is possible, using the interface merging trick.\n *\n * Here's the pattern:\n *\n * ```ts\n * class Duplicator<Element> extends Mixin(\n *     [],\n *     (base : AnyConstructor) =>\n *\n *     class Duplicator extends base {\n *         Element                 : any\n *\n *         duplicate (value : this[ 'Element' ]) : this[ 'Element' ][] {\n *             return [ value, value ]\n *         }\n *     }\n * ){}\n *\n * interface Duplicator<Element> {\n *     Element : Element\n * }\n *\n * const dup = new Duplicator<boolean>()\n *\n * dup.duplicate('foo') // TS2345: Argument of type '\"foo\"' is not assignable to parameter of type 'boolean'.\n * ```\n *\n * In the example above, we've defined a generic argument `Element` for the outer mixin class, but in fact, that argument is not used anywhere in the\n * nested class definition in the mixin lambda. Instead, in the nested class, we define a property `Element`, which plays the role of the\n * generic argument.\n *\n * Mixin class methods then can refer to the generic type as `this[ 'Element' ]`.\n *\n * The generic arguments of the outer and nested classes are tied together in the additional interface declaration, which, by TypeScript rules\n * is merged together with the class definition. In this declaration, we specify that property `Element` has type of the `Element` generic argument.\n *\n * Limitations\n * ---------\n *\n * The most important limitation we found (which affect the old pattern as well) is the compilation error, which will be issued for\n * the private/protected methods, when compiling with declarations emitting (*.d.ts files generation).\n *\n * This is a [well-known problem](https://github.com/microsoft/TypeScript/issues/35822) in the TypeScript world – the *.d.ts files do not represent\n * the internal data structures of the TypeScript compiler well. Instead they use some simplified syntax, optimized for human editing.\n * This is why the compiler may generate false positives in the incremental compilation mode – it uses *.d.ts files internally.\n *\n * This can be a show-stopper for the people that use declaration files (usually for publishing). Keep in mind though, that you can always\n * publish actual TypeScript sources along with the generated JavaScript files, instead of publishing JavaScript + declarations files.\n *\n */\nexport const Mixin = mixin;\n/**\n * This is an exact analog of the [[Mixin]] function, but without type-level protection for requirements mismatch.\n * It supports unlimited number of requirements.\n */\nexport const MixinAny = mixin;\n","/**\n * The enumeration for the time units\n */\nexport var TimeUnit;\n(function (TimeUnit) {\n    TimeUnit[\"Millisecond\"] = \"millisecond\";\n    TimeUnit[\"Second\"] = \"second\";\n    TimeUnit[\"Minute\"] = \"minute\";\n    TimeUnit[\"Hour\"] = \"hour\";\n    TimeUnit[\"Day\"] = \"day\";\n    TimeUnit[\"Week\"] = \"week\";\n    TimeUnit[\"Month\"] = \"month\";\n    TimeUnit[\"Quarter\"] = \"quarter\";\n    TimeUnit[\"Year\"] = \"year\";\n})(TimeUnit || (TimeUnit = {}));\n/**\n * The enumeration for the supported constraint types\n */\nexport var ConstraintType;\n(function (ConstraintType) {\n    /**\n     * \"Must start on\" constraint.\n     * Restricts an event to start on a [[HasDateConstraintMixin.constraintDate|specified date]].\n     * The constraint cannot be used for a summary event.\n     */\n    ConstraintType[\"MustStartOn\"] = \"muststarton\";\n    /**\n     * \"Must finish on\" constraint.\n     * Restricts an event to finish on a [[HasDateConstraintMixin.constraintDate|specified date]].\n     * The constraint cannot be used for a summary event.\n     */\n    ConstraintType[\"MustFinishOn\"] = \"mustfinishon\";\n    /**\n     * \"Start no earlier than\" constraint.\n     * Restricting an event to start on or after a [[HasDateConstraintMixin.constraintDate|specified date]].\n     */\n    ConstraintType[\"StartNoEarlierThan\"] = \"startnoearlierthan\";\n    /**\n     * \"Start no later than\" constraint.\n     * Restricting an event to start on or before a [[HasDateConstraintMixin.constraintDate|specified date]].\n     *\n     * The constraint cannot be used for a summary task.\n     */\n    ConstraintType[\"StartNoLaterThan\"] = \"startnolaterthan\";\n    /**\n     * \"Finish no earlier than\" constraint.\n     * Restricting an event to finish on or after a [[HasDateConstraintMixin.constraintDate|specified date]].\n     *\n     * The constraint cannot be used for a summary task.\n     */\n    ConstraintType[\"FinishNoEarlierThan\"] = \"finishnoearlierthan\";\n    /**\n     * \"Finish no later than\" constraint.\n     * Restricting an event to finish on or before a [[HasDateConstraintMixin.constraintDate|specified date]].\n     */\n    ConstraintType[\"FinishNoLaterThan\"] = \"finishnolaterthan\";\n    /**\n     * \"As soon as possible\" constraint.\n     * Note this is not a date constraint per se, but a flag, that indicates that a task \"gravitates\" (is \"stickying\")\n     * to the project's start date.\n     */\n    ConstraintType[\"AsSoonAsPossible\"] = \"assoonaspossible\";\n    /**\n     * \"As late as possible\" constraint.\n     * Note this is not a date constraint per se, but a flag, that indicates that a task \"gravitates\" (is \"stickying\")\n     * to the project's end date.\n     */\n    ConstraintType[\"AsLateAsPossible\"] = \"aslateaspossible\";\n})(ConstraintType || (ConstraintType = {}));\n/**\n * The enumeration for the supported scheduling modes\n */\nexport var SchedulingMode;\n(function (SchedulingMode) {\n    SchedulingMode[\"Normal\"] = \"Normal\";\n    SchedulingMode[\"FixedDuration\"] = \"FixedDuration\";\n    SchedulingMode[\"FixedEffort\"] = \"FixedEffort\";\n    SchedulingMode[\"FixedUnits\"] = \"FixedUnits\";\n})(SchedulingMode || (SchedulingMode = {}));\n/**\n * The enumeration for the dependency validation result\n */\nexport var DependencyValidationResult;\n(function (DependencyValidationResult) {\n    /**\n     * Dependency has no errors\n     */\n    DependencyValidationResult[DependencyValidationResult[\"NoError\"] = 0] = \"NoError\";\n    /**\n     * Indicates that the validated dependency builds a cycle\n     */\n    DependencyValidationResult[DependencyValidationResult[\"CyclicDependency\"] = 1] = \"CyclicDependency\";\n    /**\n     * Indicates that a dependency with the same predecessor and successor as validated one's already exists\n     */\n    DependencyValidationResult[DependencyValidationResult[\"DuplicatingDependency\"] = 2] = \"DuplicatingDependency\";\n})(DependencyValidationResult || (DependencyValidationResult = {}));\n/**\n * The enumeration for the supported dependency types\n */\nexport var DependencyType;\n(function (DependencyType) {\n    /**\n     * Start-to-Start (_SS_)\n     *\n     * With this dependency type, the succeeding event is delayed to start not earlier than the preceding event starts.\n     */\n    DependencyType[DependencyType[\"StartToStart\"] = 0] = \"StartToStart\";\n    /**\n     * Start-to-Finish (_SF_)\n     *\n     * The finish of the succeeding event is constrained by the start of the preceding event.\n     * So the successor cannot finish before the predecessor starts.\n     */\n    DependencyType[DependencyType[\"StartToEnd\"] = 1] = \"StartToEnd\";\n    /**\n     * Finish-to-Start (_FS_)\n     *\n     * This type of dependency, restricts the dependent event to not start earlier than the preceding event finishes.\n     */\n    DependencyType[DependencyType[\"EndToStart\"] = 2] = \"EndToStart\";\n    /**\n     * Finish-to-Finish (_FF_)\n     *\n     * The succeeding event cannot finish before the completion of the preceding event.\n     */\n    DependencyType[DependencyType[\"EndToEnd\"] = 3] = \"EndToEnd\";\n})(DependencyType || (DependencyType = {}));\n/**\n * The enumeration for the supported sources of the calendar for the dependency.\n */\nexport var DependenciesCalendar;\n(function (DependenciesCalendar) {\n    DependenciesCalendar[\"Project\"] = \"Project\";\n    DependenciesCalendar[\"FromEvent\"] = \"FromEvent\";\n    DependenciesCalendar[\"ToEvent\"] = \"ToEvent\";\n})(DependenciesCalendar || (DependenciesCalendar = {}));\n/**\n * Engine provides with different project types, the enumeration describes the types currently available\n */\nexport var ProjectType;\n(function (ProjectType) {\n    ProjectType[ProjectType[\"SchedulerBasic\"] = 1] = \"SchedulerBasic\";\n    ProjectType[ProjectType[\"SchedulerPro\"] = 2] = \"SchedulerPro\";\n    ProjectType[ProjectType[\"Gantt\"] = 3] = \"Gantt\";\n})(ProjectType || (ProjectType = {}));\n/**\n * The enumeration for the scheduling direction\n */\nexport var Direction;\n(function (Direction) {\n    /**\n     * Forward (or As Soon As Possible (ASAP)) scheduling.\n     */\n    Direction[\"Forward\"] = \"Forward\";\n    /**\n     * Backward (or As Late As Possible (ALAP)) scheduling.\n     */\n    Direction[\"Backward\"] = \"Backward\";\n    Direction[\"None\"] = \"None\";\n})(Direction || (Direction = {}));\nexport const isEqualEffectiveDirection = (a, b) => {\n    if (a && !b || !a && b)\n        return false;\n    if (!a && !b)\n        return true;\n    return (a.direction === b.direction)\n        && (a.kind === 'own' && b.kind === 'own'\n            || (a.kind === 'enforced' && b.kind === 'enforced' && a.enforcedBy === b.enforcedBy)\n            || (a.kind === 'inherited' && b.kind === 'inherited' && a.inheritedFrom === b.inheritedFrom));\n};\nexport var ConstraintIntervalSide;\n(function (ConstraintIntervalSide) {\n    ConstraintIntervalSide[\"Start\"] = \"Start\";\n    ConstraintIntervalSide[\"End\"] = \"End\";\n})(ConstraintIntervalSide || (ConstraintIntervalSide = {}));\n","// http://ecma-international.org/ecma-262/5.1/#sec-15.9.1.1\n/**\n * Minimal date representable with native Date class\n */\nexport const MIN_DATE = new Date(-8640000000000000);\n/**\n * Maximal date representable with native Date class\n */\nexport const MAX_DATE = new Date(8640000000000000);\nexport const isDateFinite = (date) => {\n    if (!date)\n        return false;\n    const time = date.getTime();\n    return time !== MIN_DATE.getTime() && time !== MAX_DATE.getTime();\n};\n","/**\n * The date intervals in the scheduling engine are always inclusive on one end and opened on another.\n * The \"opened\" end is not considered to be a part of the interval.\n *\n * Depending from the scheduling direction (forward/backward) this property may need to be inverted.\n *\n * This enum specifies what edge of the interval is inclusive.\n */\nexport var EdgeInclusion;\n(function (EdgeInclusion) {\n    EdgeInclusion[EdgeInclusion[\"Left\"] = 0] = \"Left\";\n    EdgeInclusion[EdgeInclusion[\"Right\"] = 1] = \"Right\";\n})(EdgeInclusion || (EdgeInclusion = {}));\n","import DateHelper from \"../../Core/helper/DateHelper.js\";\nimport { TimeUnit } from \"../scheduling/Types.js\";\nimport { MAX_DATE, MIN_DATE } from \"../util/Constants.js\";\nimport { EdgeInclusion } from \"../util/Types.js\";\n/**\n * The enum type for result of [[forEachAvailabilityInterval]].\n */\nexport var CalendarIteratorResult;\n(function (CalendarIteratorResult) {\n    /**\n     * Indicates the iteration has completed by iterating the whole given timespan or has reached the MAX_DATE or MIN_DATE.\n     */\n    CalendarIteratorResult[CalendarIteratorResult[\"FullRangeIterated\"] = 0] = \"FullRangeIterated\";\n    /**\n     * Indicates the iteration has been stopped by returning `false` from the iterator.\n     */\n    CalendarIteratorResult[CalendarIteratorResult[\"StoppedByIterator\"] = 1] = \"StoppedByIterator\";\n    /**\n     * Indicates the iteration has exceeded the `maxRange` option\n     */\n    CalendarIteratorResult[CalendarIteratorResult[\"MaxCacheExtendCyclesReached\"] = 2] = \"MaxCacheExtendCyclesReached\";\n    /**\n     * Indicates the iteration has exceeded the `maxRange` option\n     */\n    CalendarIteratorResult[CalendarIteratorResult[\"MaxRangeReached\"] = 3] = \"MaxRangeReached\";\n})(CalendarIteratorResult || (CalendarIteratorResult = {}));\n/**\n * Calendar cache.\n */\nexport class CalendarCache {\n    constructor(config) {\n        this.cacheFilledStartDate = MAX_DATE;\n        this.cacheFilledEndDate = MIN_DATE;\n        this.intervalsCachingChunkDuration = 30;\n        this.intervalsCachingChunkUnit = TimeUnit.Day;\n        this.maxCacheExtendCycles = 1000;\n        // max range for the iteration - 5 years\n        this.maxRange = 5 * 365 * 24 * 60 * 60 * 1000;\n        config && Object.assign(this, config);\n    }\n    includeWrappingRangeFrom(cache, startDate, endDate) {\n        cache.ensureCacheFilledForInterval(startDate, endDate);\n        this.intervalCache.includeWrappingRange(cache.intervalCache, startDate, endDate);\n    }\n    // after this method, we guarantee, that for every point between `startDate` and `endDate` (_inclusive_)\n    // we'll have a final representation of the cache, that is, we'll be able to get an interval to which this point belongs\n    // _both_ for forward and backward directions\n    ensureCacheFilledForInterval(startDate, endDate) {\n        const cacheFilledStartDateN = this.cacheFilledStartDate.getTime();\n        const cacheFilledEndDateN = this.cacheFilledEndDate.getTime();\n        if (cacheFilledStartDateN !== MAX_DATE.getTime()) {\n            const startDateN = startDate.getTime();\n            const endDateN = endDate.getTime();\n            if (cacheFilledStartDateN <= startDateN && endDateN <= cacheFilledEndDateN)\n                return;\n            // asked to cache an interval which is to the left from the cached area - extend to the right\n            if (endDateN <= cacheFilledStartDateN) {\n                endDate = new Date(cacheFilledStartDateN - 1);\n            }\n            else if (startDateN >= cacheFilledEndDateN) {\n                startDate = new Date(cacheFilledEndDateN);\n            }\n            else if (cacheFilledStartDateN <= startDateN && startDateN <= cacheFilledEndDateN) {\n                startDate = new Date(cacheFilledEndDateN + 1);\n            }\n            else if (cacheFilledStartDateN <= endDateN && endDateN <= cacheFilledEndDateN) {\n                endDate = new Date(cacheFilledStartDateN - 1);\n            }\n            else {\n                this.ensureCacheFilledForInterval(startDate, new Date(cacheFilledStartDateN - 1));\n                this.ensureCacheFilledForInterval(new Date(cacheFilledEndDateN + 1), endDate);\n                return;\n            }\n        }\n        if (cacheFilledStartDateN === MAX_DATE.getTime() || startDate.getTime() < cacheFilledEndDateN) {\n            this.cacheFilledStartDate = startDate;\n        }\n        if (cacheFilledEndDateN === MIN_DATE.getTime() || cacheFilledEndDateN < endDate.getTime()) {\n            this.cacheFilledEndDate = endDate;\n        }\n        this.fillCache(startDate, endDate);\n    }\n    fillCache(_1 /* startDate */, _2 /* endDate */) {\n        throw new Error(\"Abstract method\");\n    }\n    clear() {\n        this.cacheFilledStartDate = MAX_DATE;\n        this.cacheFilledEndDate = MIN_DATE;\n        this.intervalCache.clear();\n    }\n    /**\n     * The core iterator method of the calendar cache.\n     *\n     * @param options The options for iterator. Should contain at least one of the `startDate`/`endDate` properties\n     * which indicates what timespan to examine for availability intervals. If one of boundaries is not provided\n     * iterator function should return `false` at some point, to avoid infinite loops.\n     *\n     * Another recognized option is `isForward`, which indicates the direction in which to iterate through the timespan.\n     *\n     * Another recognized option is `maxRange`, which indicates the maximum timespan for this iterator (in milliseconds). When iterator\n     * exceeds this timespan, the iteration is stopped and [[CalendarIteratorResult.MaxRangeReached]] value is returned.\n     * Default value is 5 years.\n     *\n     * @param func The iterator function to call. It will be called for every distinct set of availability intervals, found\n     * in the given timespan. All the intervals, which are \"active\" for current interval are collected in the 3rd argument\n     * for this function. If iterator returns `false` (checked with `===`) the iteration stops.\n     *\n     * @param scope The scope (`this` value) to execute the iterator in.\n     */\n    forEachAvailabilityInterval(options, func, scope) {\n        scope = scope || this;\n        const startDate = options.startDate;\n        const endDate = options.endDate;\n        const startDateN = startDate && startDate.getTime();\n        const endDateN = endDate && endDate.getTime();\n        const maxRange = options.maxRange ?? this.maxRange;\n        // `isForward = true` by default\n        const isForward = options.isForward !== false;\n        if (isForward ? !startDate : !endDate) {\n            throw new Error(\"At least `startDate` or `endDate` is required, depending from the `isForward` option\");\n        }\n        const intervalCache = this.intervalCache;\n        let cacheCursorDate = isForward ? startDate : endDate;\n        let cursorDate = isForward ? startDate : endDate;\n        const rangeStart = cursorDate.getTime();\n        // this is generally an endless loop, but we artificially limit it to `maxCacheExtendCycles` iterations\n        // to avoid freezing in unforeseen edge cases\n        for (let cycle = 1; cycle < this.maxCacheExtendCycles; cycle++) {\n            if (isForward) {\n                this.ensureCacheFilledForInterval(cacheCursorDate, endDate || DateHelper.add(cacheCursorDate, this.intervalsCachingChunkDuration, this.intervalsCachingChunkUnit));\n            }\n            else {\n                this.ensureCacheFilledForInterval(startDate || DateHelper.add(cacheCursorDate, -this.intervalsCachingChunkDuration, this.intervalsCachingChunkUnit), cacheCursorDate);\n            }\n            let interval = intervalCache.getIntervalOf(cursorDate, isForward ? EdgeInclusion.Left : EdgeInclusion.Right);\n            while (interval) {\n                const intervalStartDate = interval.startDate;\n                const intervalEndDate = interval.endDate;\n                // out of requested range - all done\n                if ((isForward && endDateN && intervalStartDate.getTime() >= endDateN)\n                    ||\n                        (!isForward && startDateN && intervalEndDate.getTime() <= startDateN)) {\n                    return CalendarIteratorResult.FullRangeIterated;\n                }\n                if ((isForward && intervalStartDate.getTime() - rangeStart >= maxRange)\n                    ||\n                        (!isForward && rangeStart - intervalEndDate.getTime() >= maxRange)) {\n                    return CalendarIteratorResult.MaxRangeReached;\n                }\n                // we are out of cached area, need to extend the cache,\n                // using `>=, <=` here, because, as an edge case the cache can be filled exactly up to that interval\n                // and following interval will be infinity, which will trigger premature loop exit\n                // caused by the https://github.com/bryntum/support/issues/6406\n                if ((isForward && intervalStartDate.getTime() >= this.cacheFilledEndDate.getTime())\n                    ||\n                        (!isForward && intervalEndDate.getTime() <= this.cacheFilledStartDate.getTime())) {\n                    break;\n                }\n                // save the last processed point, from which we should start after cache will be extended\n                cursorDate = isForward ? intervalEndDate : intervalStartDate;\n                // adjust to start / end date limits in iterator\n                const countFrom = startDateN && intervalStartDate.getTime() < startDateN ? startDate : intervalStartDate;\n                const countTill = endDateN && intervalEndDate.getTime() > endDateN ? endDate : intervalEndDate;\n                if (func.call(scope, countFrom, countTill, interval.cacheInterval) === false) {\n                    // indicates premature exit if iterator returns `false`\n                    return CalendarIteratorResult.StoppedByIterator;\n                }\n                interval = isForward ? intervalCache.getNextInterval(interval) : intervalCache.getPrevInterval(interval);\n            }\n            if (isForward && cursorDate.getTime() === MAX_DATE.getTime() || !isForward && cursorDate.getTime() === MIN_DATE.getTime()) {\n                return CalendarIteratorResult.FullRangeIterated;\n            }\n            cacheCursorDate = isForward ? this.cacheFilledEndDate : this.cacheFilledStartDate;\n        }\n        return CalendarIteratorResult.MaxCacheExtendCyclesReached;\n    }\n}\n","export const stripDuplicates = (array) => Array.from(new Set(array));\n","import { stripDuplicates } from \"../util/StripDuplicates.js\";\n/**\n * A class, that represent a cached set of availability intervals. One can use the [[getIsWorking]] method\n * to determine if this set intervals represents working time or non-working.\n */\nexport class CalendarCacheInterval {\n    constructor(config) {\n        this.intervals = [];\n        config && Object.assign(this, config);\n        if (!this.calendar)\n            throw new Error(\"Required attribute `calendar` is missing\");\n    }\n    includeInterval(interval) {\n        if (this.intervals.indexOf(interval) == -1) {\n            const copy = this.intervals.slice();\n            copy.push(interval);\n            return new CalendarCacheInterval({ intervals: copy, calendar: this.calendar });\n        }\n        else\n            return this;\n    }\n    combineWith(interval) {\n        return new CalendarCacheInterval({ intervals: this.intervals.concat(interval.intervals), calendar: this.calendar });\n    }\n    /**\n     * Returns the working status of this intervals set. It is determined as a working status\n     * of the most prioritized interval (intervals are prioritized from child to parent)\n     */\n    getIsWorking() {\n        if (this.isWorking != null)\n            return this.isWorking;\n        const intervals = this.intervals = this.normalizeIntervals(this.intervals);\n        // return the value of the interval with the highest priority\n        return this.isWorking = intervals[0].isWorking;\n    }\n    normalizeIntervals(intervals) {\n        const filtered = stripDuplicates(intervals);\n        // sort in decreasing order\n        filtered.sort((interval1, interval2) => interval2.getPriorityField() - interval1.getPriorityField());\n        return filtered;\n    }\n}\n","// Generic binary search\nexport const binarySearch = (value, array, comparator = (a, b) => a - b) => {\n    let left = 0;\n    let right = array.length;\n    while (left < right) {\n        // | 0 to make it integer, faster according to: https://jsperf.com/or-vs-floor/2\n        const mid = (left + right) / 2 | 0;\n        const compare = comparator(value, array[mid]);\n        if (compare === 0)\n            return { found: true, index: mid };\n        else if (compare < 0)\n            right = mid;\n        else\n            left = mid + 1;\n    }\n    return { found: false, index: right };\n};\n","import { binarySearch } from \"../util/BinarySearch.js\";\nexport var IndexPosition;\n(function (IndexPosition) {\n    IndexPosition[IndexPosition[\"Exact\"] = 0] = \"Exact\";\n    IndexPosition[IndexPosition[\"Next\"] = 1] = \"Next\";\n})(IndexPosition || (IndexPosition = {}));\n// <remove-on-release>\n// TODO: store keys and values in a single array of \"entries\"? less memory movement during insert/delete in theory\n// </remove-on-release>\nexport class SortedMap {\n    constructor(comparator) {\n        this.keys = [];\n        this.values = [];\n        this.comparator = comparator || ((a, b) => a - b);\n    }\n    set(key, value) {\n        const search = binarySearch(key, this.keys, this.comparator);\n        if (search.found) {\n            this.values[search.index] = value;\n        }\n        else {\n            this.keys.splice(search.index, 0, key);\n            this.values.splice(search.index, 0, value);\n        }\n        return search.index;\n    }\n    // you need to know what you are doing when using this method\n    insertAt(index, key, value) {\n        this.keys.splice(index, 0, key);\n        this.values.splice(index, 0, value);\n    }\n    setValueAt(index, value) {\n        this.values[index] = value;\n    }\n    get(key) {\n        const search = binarySearch(key, this.keys, this.comparator);\n        return search.found ? this.values[search.index] : undefined;\n    }\n    getEntryAt(index) {\n        return index < this.keys.length ? { key: this.keys[index], value: this.values[index] } : undefined;\n    }\n    getKeyAt(index) {\n        return this.keys[index];\n    }\n    getValueAt(index) {\n        return this.values[index];\n    }\n    delete(key) {\n        const search = binarySearch(key, this.keys, this.comparator);\n        if (search.found)\n            this.deleteAt(search.index);\n    }\n    size() {\n        return this.keys.length;\n    }\n    deleteAt(index) {\n        this.keys.splice(index, 1);\n        this.values.splice(index, 1);\n    }\n    indexOfKey(key) {\n        const search = binarySearch(key, this.keys, this.comparator);\n        return {\n            found: search.found ? IndexPosition.Exact : IndexPosition.Next,\n            index: search.index\n        };\n    }\n    map(func) {\n        const keys = this.keys;\n        const values = this.values;\n        const result = [];\n        for (let i = 0; i < keys.length; i++)\n            result.push(func(values[i], keys[i], i));\n        return result;\n    }\n    getAllEntries() {\n        return this.map((value, key) => { return { value, key }; });\n    }\n    clear() {\n        this.keys.length = 0;\n        this.values.length = 0;\n    }\n}\n","import { MAX_DATE, MIN_DATE } from \"../util/Constants.js\";\nimport { EdgeInclusion } from \"../util/Types.js\";\nimport { IndexPosition, SortedMap } from \"./SortedMap.js\";\nexport class IntervalCache {\n    constructor(config) {\n        this.points = new SortedMap((a, b) => a.getTime() - b.getTime());\n        this.leftInfinityKey = MIN_DATE;\n        this.rightInfinityKey = MAX_DATE;\n        Object.assign(this, config);\n        if (this.emptyInterval === undefined || !this.combineIntervalsFn)\n            throw new Error(\"All of `emptyPoint`, `combineIntervalsFn` are required\");\n        this.points.set(this.leftInfinityKey, this.emptyInterval);\n    }\n    size() {\n        return this.points.size();\n    }\n    indexOf(date) {\n        return this.points.indexOfKey(date);\n    }\n    getDateAt(index) {\n        return this.points.getKeyAt(index);\n    }\n    getPointAt(index) {\n        return this.points.getValueAt(index);\n    }\n    getIntervalOf(date, edgeInclusion = EdgeInclusion.Left) {\n        // the `index` here is guaranteed to be > 0, because at index 0 there's a `emptyPoint`\n        let { found, index } = this.indexOf(date);\n        let startDateIndex;\n        if (edgeInclusion === EdgeInclusion.Left) {\n            startDateIndex = found === IndexPosition.Exact ? index : index - 1;\n        }\n        else {\n            startDateIndex = index - 1;\n        }\n        return this.getIntervalWithStartDateIndex(startDateIndex);\n    }\n    getPrevInterval(interval) {\n        if (interval.startDateIndex === 0)\n            return null;\n        return this.getIntervalWithStartDateIndex(interval.startDateIndex - 1);\n    }\n    getNextInterval(interval) {\n        if (interval.startDateIndex >= this.size() - 1)\n            return null;\n        return this.getIntervalWithStartDateIndex(interval.startDateIndex + 1);\n    }\n    getIntervalWithStartDateIndex(startDateIndex) {\n        return {\n            startDateIndex: startDateIndex,\n            startDate: this.getDateAt(startDateIndex),\n            endDate: startDateIndex + 1 < this.size() ? this.getDateAt(startDateIndex + 1) : this.rightInfinityKey,\n            cacheInterval: this.getPointAt(startDateIndex)\n        };\n    }\n    addInterval(startDate, endDate, extendInterval) {\n        const points = this.points;\n        // there is always \"leftInfinityKey\" empty point, so `index >= 0`\n        const { found, index } = points.indexOfKey(startDate);\n        let curIndex;\n        let lastUpdatedPoint;\n        if (found == IndexPosition.Exact) {\n            const inclusion = extendInterval(lastUpdatedPoint = points.getValueAt(index));\n            points.setValueAt(index, inclusion);\n            curIndex = index + 1;\n        }\n        else {\n            const inclusion = extendInterval(lastUpdatedPoint = points.getValueAt(index - 1));\n            points.insertAt(index, startDate, inclusion);\n            curIndex = index + 1;\n        }\n        while (curIndex < points.size()) {\n            const curDate = points.getKeyAt(curIndex);\n            if (curDate.getTime() >= endDate.getTime())\n                break;\n            const inclusion = extendInterval(lastUpdatedPoint = points.getValueAt(curIndex));\n            points.setValueAt(curIndex, inclusion);\n            curIndex++;\n        }\n        if (curIndex === points.size()) {\n            points.insertAt(points.size(), endDate, this.emptyInterval);\n        }\n        else {\n            const curDate = points.getKeyAt(curIndex);\n            if (curDate.getTime() === endDate.getTime()) {\n                // we advanced till some point, which matches `endDate` config\n                // this point will setup a new label, no need to add an explicit end date point,\n                // we are done, do nothing\n            }\n            else {\n                points.insertAt(curIndex, endDate, lastUpdatedPoint);\n            }\n        }\n    }\n    includeWrappingRange(intervalCache, startDate, endDate) {\n        let interval = intervalCache.getIntervalOf(startDate);\n        while (interval) {\n            this.addInterval(interval.startDate, interval.endDate, existingInterval => this.combineIntervalsFn(existingInterval, interval.cacheInterval));\n            if (interval.endDate.getTime() > endDate.getTime())\n                break;\n            interval = intervalCache.getNextInterval(interval);\n        }\n    }\n    getSummary() {\n        return this.points.map((label, date) => { return { label, date }; });\n    }\n    clear() {\n        this.points.clear();\n        this.points.set(this.leftInfinityKey, this.emptyInterval);\n    }\n}\n","import later from \"../vendor/later/later.js\";\nimport { CalendarCache } from \"./CalendarCache.js\";\nimport { CalendarCacheInterval } from \"./CalendarCacheInterval.js\";\nimport { IntervalCache } from \"./IntervalCache.js\";\nimport DateHelper from \"../../Core/helper/DateHelper.js\";\nimport TimeZoneHelper from \"../../Core/helper/TimeZoneHelper.js\";\nexport class CalendarCacheSingle extends CalendarCache {\n    constructor(config) {\n        super(config);\n        this.staticIntervalsCached = false;\n        if (!this.unspecifiedTimeInterval)\n            throw new Error(\"Required attribute `unspecifiedTimeInterval` is missing\");\n        this.intervalCache = new IntervalCache({\n            emptyInterval: new CalendarCacheInterval({\n                intervals: [this.unspecifiedTimeInterval],\n                calendar: this.calendar\n            }),\n            combineIntervalsFn: (interval1, interval2) => {\n                return interval1.combineWith(interval2);\n            }\n        });\n    }\n    fillCache(startDate, endDate) {\n        if (!this.staticIntervalsCached) {\n            this.cacheStaticIntervals();\n            this.staticIntervalsCached = true;\n        }\n        if (this.parentCache)\n            this.includeWrappingRangeFrom(this.parentCache, startDate, endDate);\n        const startDateN = startDate.getTime();\n        const endDateN = endDate.getTime();\n        const timeZone = this.calendar.ignoreTimeZone ? null : this.calendar.project?.timeZone;\n        if (startDateN > endDateN)\n            throw new Error(\"Invalid cache fill interval\");\n        this.forEachRecurrentInterval(interval => {\n            const startSchedule = interval.getStartDateSchedule();\n            const endSchedule = interval.getEndDateSchedule();\n            let wrappingStartDate = startSchedule.prev(1, startDate);\n            let wrappingEndDate;\n            if (endSchedule === 'EOD') {\n                const nextEndDate = startSchedule.next(1, endDate);\n                if (nextEndDate !== later.NEVER) {\n                    wrappingEndDate = DateHelper.getStartOfNextDay(nextEndDate, true);\n                }\n                else {\n                    wrappingEndDate = later.NEVER;\n                }\n            }\n            else {\n                wrappingEndDate = endSchedule.next(1, endDate);\n            }\n            // if the `startDate` is an occurrence in the interval's schedule, we need to advance one point prior\n            // this is to provide the backward-scheduling information for the `startDate` point\n            if (wrappingStartDate !== later.NEVER && wrappingStartDate.getTime() === startDateN) {\n                const wrappingStartDates = startSchedule.prev(2, startDate);\n                if (wrappingStartDates !== later.NEVER && wrappingStartDates.length === 2)\n                    wrappingStartDate = wrappingStartDates[1];\n            }\n            if (wrappingEndDate !== later.NEVER && wrappingEndDate.getTime() === endDateN) {\n                const wrappingEndDates = endSchedule.next(2, endDate);\n                if (wrappingEndDates !== later.NEVER && wrappingEndDates.length === 2)\n                    wrappingEndDate = wrappingEndDates[1];\n            }\n            const startDates = startSchedule.next(Infinity, wrappingStartDate !== later.NEVER ? wrappingStartDate : startDate, wrappingEndDate !== later.NEVER ? new Date(wrappingEndDate.getTime() - 1) : endDate);\n            // schedule is empty for the interval of interest, do nothing\n            if (startDates === later.NEVER)\n                return;\n            // at this point `startDates` is a non-empty array\n            const endDates = endSchedule === 'EOD' ? startDates.map(date => DateHelper.getStartOfNextDay(date, true)) : endSchedule.next(Infinity, new Date(startDates[0].getTime() + 1), wrappingEndDate !== later.NEVER ? wrappingEndDate : endDate);\n            if (endDates === later.NEVER)\n                return;\n            if (endDates.length > startDates.length) {\n                // safe to ignore \"extra\" end dates\n                endDates.length = startDates.length;\n            }\n            else if (endDates.length < startDates.length) {\n                // monkey patch\n                startDates.length = endDates.length;\n                // throw new Error(\"Recurrent interval inconsistency: \" + interval + \", caching startDate: \" + startDate + \", caching endDate: \" + endDate)\n            }\n            startDates.forEach((startDate, index) => {\n                let recStartDate = startDate;\n                let recEndDate = endDates[index];\n                // Adjust calendar intervals when changing time zone\n                if (timeZone != null) {\n                    recStartDate = TimeZoneHelper.toTimeZone(recStartDate, timeZone);\n                    recEndDate = TimeZoneHelper.toTimeZone(recEndDate, timeZone);\n                }\n                // if (recStartDate.getTime() > recEndDate.getTime())\n                //     throw new Error(\"Recurrent interval inconsistency: \" + interval + \", startDate: \" + startDate + \", endDate: \" + endDates[ index ])\n                this.intervalCache.addInterval(recStartDate, recEndDate, existingCacheInterval => existingCacheInterval.includeInterval(interval));\n            });\n        });\n    }\n    clear() {\n        this.staticIntervalsCached = false;\n        super.clear();\n    }\n    cacheStaticIntervals() {\n        this.forEachStaticInterval(interval => {\n            const timeZone = this.calendar.project?.timeZone;\n            let { startDate, endDate } = interval;\n            // Adjust calendar intervals when changing time zone\n            if (timeZone != null) {\n                startDate = TimeZoneHelper.toTimeZone(startDate, timeZone);\n                endDate = TimeZoneHelper.toTimeZone(endDate, timeZone);\n            }\n            this.intervalCache.addInterval(startDate, endDate, existingCacheInterval => existingCacheInterval.includeInterval(interval));\n        });\n    }\n    forEachStaticInterval(func) {\n        this.intervalStore.forEach((interval) => {\n            if (interval.isStatic())\n                func(interval);\n        });\n    }\n    forEachRecurrentInterval(func) {\n        this.intervalStore.forEach((interval) => {\n            if (interval.isRecurrent())\n                func(interval);\n        });\n    }\n}\n","import { Mixin } from \"../../ChronoGraph/class/BetterMixin.js\";\n/**\n * This a base generic mixin for every class, that belongs to a project.\n *\n * It just provides getter/setter for the `project` property, along with some convenience methods\n * to access the project's stores.\n */\nexport class AbstractPartOfProjectGenericMixin extends Mixin([], (base) => {\n    const superProto = base.prototype;\n    class AbstractPartOfProjectGenericMixin extends base {\n        async commitAsync() {\n            return this.project.commitAsync();\n        }\n        set project(project) {\n            this.$project = project;\n        }\n        get project() {\n            return this.$project;\n        }\n        calculateProject() {\n            throw new Error(\"Implement me\");\n        }\n        /**\n         * The method to set the [[AbstractProjectMixin|project]] instance, this entity belongs to.\n         */\n        setProject(project) {\n            return this.project = project;\n        }\n        /**\n         * The method to get the [[AbstractProjectMixin|project]] instance, this entity belongs to.\n         */\n        getProject() {\n            if (this.project)\n                return this.project;\n            return this.setProject(this.calculateProject());\n        }\n        /**\n         * Convenience method to get the instance of the assignment store in the [[AbstractProjectMixin|project]] instance, this entity belongs to.\n         */\n        getAssignmentStore() {\n            const project = this.getProject();\n            return project?.assignmentStore;\n        }\n        /**\n         * Convenience method to get the instance of the dependency store in the [[AbstractProjectMixin|project]] instance, this entity belongs to.\n         */\n        getDependencyStore() {\n            const project = this.getProject();\n            return project?.dependencyStore;\n        }\n        /**\n         * Convenience method to get the instance of the event store in the [[AbstractProjectMixin|project]] instance, this entity belongs to.\n         */\n        getEventStore() {\n            const project = this.getProject();\n            return project?.eventStore;\n        }\n        /**\n         * Convenience method to get the instance of the resource store in the [[AbstractProjectMixin|project]] instance, this entity belongs to.\n         */\n        getResourceStore() {\n            const project = this.getProject();\n            return project?.resourceStore;\n        }\n        /**\n         * Convenience method to get the instance of the calendar manager store in the [[AbstractProjectMixin|project]] instance, this entity belongs to.\n         */\n        getCalendarManagerStore() {\n            const project = this.getProject();\n            return project?.calendarManagerStore;\n        }\n    }\n    return AbstractPartOfProjectGenericMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { AbstractPartOfProjectGenericMixin } from \"../../AbstractPartOfProjectGenericMixin.js\";\nimport Store from \"../../../../Core/data/Store.js\";\n/**\n * This an abstract mixin for every Store, that belongs to a project.\n *\n * The store with this mixin, supposes, that it will be \"joining\" the project, a reference to which is saved\n * and made available for all models.\n */\nexport class AbstractPartOfProjectStoreMixin extends Mixin([\n    AbstractPartOfProjectGenericMixin,\n    Store\n], (base) => {\n    const superProto = base.prototype;\n    class AbstractPartOfProjectStoreMixin extends base {\n        constructor() {\n            super(...arguments);\n            this.isLoadingData = false;\n            this.disableHasLoadedDataToCommitFlag = false;\n        }\n        static get $name() {\n            return 'AbstractPartOfProjectStoreMixin';\n        }\n        //region Async event triggering\n        // NOTE: Tested in Scheduler (EventStore.t.js)\n        construct(config = {}) {\n            config.asyncEvents = {\n                add: true,\n                remove: true,\n                removeAll: true,\n                change: true,\n                refresh: true,\n                replace: true,\n                move: true,\n                update: true\n            };\n            return superProto.construct.call(this, config);\n        }\n        // Override for event triggering, to allow triggering events before and after some async operation.\n        // The \"before\" events are prefix, the \"after\" are not.\n        trigger(eventName, param) {\n            const me = this, { asyncEvents, project } = me, asyncEvent = asyncEvents?.[eventName], asyncAction = asyncEvent && (asyncEvent === true || asyncEvent[param.action]);\n            if (!asyncAction) {\n                // Trigger as usual\n                return superProto.trigger.call(me, eventName, param);\n            }\n            // Trigger prefixed before event\n            superProto.trigger.call(me, `${eventName}PreCommit`, { ...param });\n            // Event that did not invalidate engine, for example \"update\"\n            if (!project || project.isEngineReady() && !project.isWritingData) {\n                // Trigger \"original\" event\n                superProto.trigger.call(me, eventName, param);\n            }\n            else if (!me.eventsSuspended && project) {\n                // Instead of making n auto-destroying listeners (which takes enormous amount of time), we make a single\n                // one and queue all the events. When dataReady event is triggered we trigger those events\n                // https://github.com/bryntum/support/issues/3154\n                if (!project.dataReadyDetacher) {\n                    project.queuedDataReadyEvents = [];\n                    // Wait for commit without triggering one, otherwise we would affect commit scheduling\n                    project.dataReadyDetacher = project.ion({\n                        dataReady() {\n                            // Trigger \"original\" event\n                            this.queuedDataReadyEvents.forEach(([superProto, scope, eventName, param]) => {\n                                superProto.trigger.call(scope, eventName, param);\n                            });\n                            project.queuedDataReadyEvents = null;\n                            project.dataReadyDetacher();\n                            project.dataReadyDetacher = null;\n                        },\n                        once: true\n                    });\n                }\n                project.queuedDataReadyEvents.push([superProto, me, eventName, param]);\n            }\n            // No way of handling other return values in this scenario, won't work for preventable events\n            return true;\n        }\n        //endregion\n        calculateProject() {\n            // project is supposed to be provided for stores from outside\n            return this.project;\n        }\n        setStoreData(data) {\n            // Loading data sets hasLoadedDataToCommit flag.\n            // So we treat the 1st commit after data loading as the initial one\n            if (this.project && !(this.syncDataOnLoad || this.disableHasLoadedDataToCommitFlag)) {\n                this.project.hasLoadedDataToCommit = true;\n            }\n            this.isLoadingData = true;\n            superProto.setStoreData.call(this, data);\n            this.isLoadingData = false;\n            this.project?.trigger('storeRefresh', { store: this });\n        }\n        // Override to postpone auto commits to after project commit, makes sure records are unmodified after commit\n        async doAutoCommit() {\n            if (this.suspendCount <= 0 && this.project && !this.project.isEngineReady()) {\n                // <remove-on-release>\n                // TODO: Ask nick about this, I could not get mixin order correct for this to work\n                // </remove-on-release>\n                // @ts-ignore\n                await this.project.commitAsync();\n            }\n            superProto.doAutoCommit.call(this);\n        }\n        async addAsync(records, silent) {\n            const result = this.add(records, silent);\n            await this.project.commitAsync();\n            return result;\n        }\n        async insertAsync(index, records, silent) {\n            const result = this.insert(index, records, silent);\n            await this.project.commitAsync();\n            return result;\n        }\n        async loadDataAsync(data) {\n            this.data = data;\n            await this.project.commitAsync();\n        }\n        performFilter() {\n            if (this.project && (this.isLoadingData || this.rootNode?.isLoading)) {\n                // Reapply filters after calculations, in case filtering on some calculated field\n                this.project.commitAsync().then(() => this.filter());\n            }\n            return super.performFilter(...arguments);\n        }\n    }\n    return AbstractPartOfProjectStoreMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { AbstractPartOfProjectStoreMixin } from \"../../store/mixin/AbstractPartOfProjectStoreMixin.js\";\nimport { AbstractPartOfProjectGenericMixin } from \"../../AbstractPartOfProjectGenericMixin.js\";\nimport Model from \"../../../../Core/data/Model.js\";\nimport { isInstanceOf } from '../../../../ChronoGraph/class/BetterMixin.js';\n/**\n * This an abstract mixin for every Model that belongs to a project.\n *\n * The model with this mixin, supposes that it will be \"joining\" a store that is already part of a project,\n * so that such model can take a reference to the project from it.\n *\n * It provides 2 template methods [[joinProject]] and [[leaveProject]], which can be overridden in other mixins.\n */\nexport class AbstractPartOfProjectModelMixin extends Mixin([AbstractPartOfProjectGenericMixin, Model], (base) => {\n    const superProto = base.prototype;\n    class AbstractPartOfProjectModelMixin extends base {\n        joinStore(store) {\n            let joinedProject = null;\n            // Joining a store that is not part of project (for example a chained store) should not affect engine\n            if (isInstanceOf(store, AbstractPartOfProjectStoreMixin)) {\n                const project = store.getProject();\n                if (project && !this.getProject()) {\n                    this.setProject(project);\n                    joinedProject = project;\n                }\n            }\n            superProto.joinStore.call(this, store);\n            // Join directly only if not repopulating the store, in which case we will be joined later after\n            // graph has been recreated\n            if (joinedProject && !joinedProject.isRepopulatingStores)\n                this.joinProject();\n        }\n        unjoinStore(store, isReplacing = false) {\n            superProto.unjoinStore.call(this, store, isReplacing);\n            const { project } = this;\n            const isLeavingProjectStore = (isInstanceOf(store, AbstractPartOfProjectStoreMixin))\n                && !store.isFillingFromMaster && project === (store.isChained && store.project ?\n                store.masterStore.project\n                : store.project);\n            // Leave project when unjoining from store, but do not bother if the project is being destroyed or if\n            // the dataset is being replaced, or if store is chained into other project\n            if (project && !project.isDestroying && !project.isRepopulatingStores && isLeavingProjectStore) {\n                this.leaveProject(isReplacing);\n                this.setProject(null);\n            }\n            // @ts-ignore\n            if (isLeavingProjectStore)\n                this.graph = null;\n        }\n        /**\n         * Template method, which is called when model is joining the project (through joining some store that\n         * has already joined the project)\n         */\n        joinProject() { }\n        /**\n         * Template method, which is called when model is leaving the project (through leaving some store usually)\n         */\n        leaveProject(isReplacing = false) { }\n        calculateProject() {\n            const store = this.stores.find(s => (isInstanceOf(s, AbstractPartOfProjectStoreMixin)) && !!s.getProject());\n            return store?.getProject();\n        }\n        async setAsync(fieldName, value, silent) {\n            const result = this.set(fieldName, value, silent);\n            await this.project?.commitAsync();\n            return result;\n        }\n        async getAsync(fieldName) {\n            await this.project?.commitAsync();\n            return this.get(fieldName);\n        }\n        get isStmRestoring() {\n            const project = this.getProject();\n            return project?.isRestoringData || project?.stm.isRestoring || false;\n        }\n    }\n    return AbstractPartOfProjectModelMixin;\n}) {\n}\n","import { Mixin } from \"../../ChronoGraph/class/BetterMixin.js\";\nimport later from \"../vendor/later/later.js\";\nimport { AbstractPartOfProjectModelMixin } from \"../quark/model/mixin/AbstractPartOfProjectModelMixin.js\";\n/**\n * This is a calendar interval mixin.\n *\n * Can be either a static time interval (if [[startDate]]/[[endDate]] are specified) or recurrent time interval\n * ([[recurrentStartDate]]/[[recurrentEndDate]]).\n *\n * By default it defines a non-working period ([[isWorking]] field has default value `false`),\n * but can also define an explicit working time, for example to override some previous period.\n *\n * You probably don't need to create instances of this mixin directly, instead you pass its configuration object to the [[AbstractCalendarMixin.addInterval]]\n */\nexport class CalendarIntervalMixin extends Mixin([AbstractPartOfProjectModelMixin], (base) => {\n    const superProto = base.prototype;\n    class CalendarIntervalMixin extends base {\n        static get fields() {\n            return [\n                'name',\n                { name: 'startDate', type: 'date' },\n                { name: 'endDate', type: 'date' },\n                'recurrentStartDate',\n                'recurrentEndDate',\n                'cls',\n                'iconCls',\n                { name: 'isWorking', type: 'boolean', defaultValue: false },\n                { name: 'priority', type: 'number' }\n            ];\n        }\n        getCalendar() {\n            return this.stores[0].calendar;\n        }\n        resetPriority() {\n            this.priorityField = null;\n            this.getCalendar().getDepth();\n        }\n        // not just `getPriority` to avoid clash with auto-generated getter in the subclasses\n        getPriorityField() {\n            if (this.priorityField != null)\n                return this.priorityField;\n            // 0 - 10000 interval is reserved for \"unspecified time\" intervals\n            // then 10000 - 10100, 10100-10200, ... etc intervals are for the calendars at depth 0, 1, ... etc\n            let base = 10000 + this.getCalendar().getDepth() * 100;\n            let priority = this.priority;\n            if (priority == null) {\n                // recurrent intervals are considered \"base\" and have lower priority\n                // static intervals are considered special case overrides and have higher priority\n                priority = this.isRecurrent() ? 20 : 30;\n            }\n            // intervals from parent calendars will have lower priority\n            return this.priorityField = base + priority;\n        }\n        /**\n         * Whether this interval is recurrent (both [[recurrentStartDate]] and [[recurrentEndDate]] are present and parsed correctly\n         * by the `later` library)\n         */\n        isRecurrent() {\n            return Boolean(this.recurrentStartDate && this.recurrentEndDate && this.getStartDateSchedule() && this.getEndDateSchedule());\n        }\n        /**\n         * Whether this interval is static - both [[startDate]] and [[endDate]] are present.\n         */\n        isStatic() {\n            return Boolean(this.startDate && this.endDate);\n        }\n        /**\n         * Helper method to parse [[recurrentStartDate]] and [[recurrentEndDate]] field values.\n         * @param {Object|String} schedule Recurrence schedule\n         * @returns {Object} Processed schedule ready to be used by later.schedule() method.\n         * @private\n         */\n        parseDateSchedule(value) {\n            let schedule = value;\n            if (value && value !== Object(value)) {\n                schedule = later.parse.text(value);\n                if (schedule !== Object(schedule) || schedule.error >= 0) {\n                    // can be provided as JSON text\n                    try {\n                        schedule = JSON.parse(value);\n                    }\n                    catch (e) {\n                        return null;\n                    }\n                }\n            }\n            return schedule;\n        }\n        getStartDateSchedule() {\n            if (this.startDateSchedule)\n                return this.startDateSchedule;\n            const schedule = this.parseDateSchedule(this.recurrentStartDate);\n            return this.startDateSchedule = later.schedule(schedule);\n        }\n        getEndDateSchedule() {\n            if (this.endDateSchedule)\n                return this.endDateSchedule;\n            if (this.recurrentEndDate === 'EOD')\n                return 'EOD';\n            const schedule = this.parseDateSchedule(this.recurrentEndDate);\n            return this.endDateSchedule = later.schedule(schedule);\n        }\n    }\n    return CalendarIntervalMixin;\n}) {\n}\n","import { Mixin } from \"../../ChronoGraph/class/BetterMixin.js\";\nimport { CalendarIntervalMixin } from \"./CalendarIntervalMixin.js\";\nimport { AbstractPartOfProjectStoreMixin } from \"../quark/store/mixin/AbstractPartOfProjectStoreMixin.js\";\n/**\n * This a collection of [[CalendarIntervalMixin]] items. Its a dumb collection though, the \"real\" calendar\n * is a [[AbstractCalendarMixin]] model, which is part of the [[AbstractCalendarManagerStoreMixin]].\n */\nexport class CalendarIntervalStore extends Mixin([AbstractPartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class CalendarIntervalStore extends base {\n        constructor() {\n            super(...arguments);\n            this.disableHasLoadedDataToCommitFlag = true;\n        }\n        static get defaultConfig() {\n            return {\n                modelClass: CalendarIntervalMixin\n            };\n        }\n    }\n    return CalendarIntervalStore;\n}) {\n}\n","import { Mixin } from \"../../ChronoGraph/class/BetterMixin.js\";\nimport { CalendarIntervalMixin } from \"./CalendarIntervalMixin.js\";\n// <remove-on-release>\n// TODO: if we would be doing just:\n//  export class UnspecifiedTimeIntervalModel extends CalendarIntervalMixin ...\n//  then an instance of the `CalendarIntervalMixin` `c` would : `c instanceof UnspecifiedTimeIntervalModel`,\n//  because it inherit the `hasInstance` symbol\n//  need to figure out how it can be handled\n// </remove-on-release>\n// Calendar interval model denoting unspecified interval\nexport class UnspecifiedTimeIntervalModel extends Mixin([CalendarIntervalMixin], (base) => {\n    const superProto = base.prototype;\n    class UnspecifiedTimeIntervalModel extends base {\n        // <remove-on-release>\n        // TODO: why it overrides the method, is it configured with calendar instance directly?\n        // </remove-on-release>\n        getCalendar() {\n            return this.calendar;\n        }\n        // NOTE: See parent class implementation for further comments\n        getPriorityField() {\n            if (this.priorityField != null)\n                return this.priorityField;\n            return this.priorityField = this.getCalendar().getDepth();\n        }\n    }\n    return UnspecifiedTimeIntervalModel;\n}) {\n}\n","import { Mixin } from \"../../ChronoGraph/class/BetterMixin.js\";\nimport { AbstractPartOfProjectGenericMixin } from \"./AbstractPartOfProjectGenericMixin.js\";\n/**\n * This a base generic mixin for every class, that belongs to a scheduler_core project.\n *\n * It just provides getter/setter for the `project` property, along with some convenience methods\n * to access the project's stores.\n */\nexport class CorePartOfProjectGenericMixin extends Mixin([AbstractPartOfProjectGenericMixin], (base) => {\n    const superProto = base.prototype;\n    class CorePartOfProjectGenericMixin extends base {\n        //region Store getters\n        get eventStore() {\n            return this.project?.eventStore;\n        }\n        get resourceStore() {\n            return this.project?.resourceStore;\n        }\n        get assignmentStore() {\n            return this.project?.assignmentStore;\n        }\n        get dependencyStore() {\n            return this.project?.dependencyStore;\n        }\n        get calendarManagerStore() {\n            return this.project?.calendarManagerStore;\n        }\n        //endregion\n        //region Entity getters\n        /**\n         * Convenience method to get the instance of event by its id.\n         */\n        getEventById(id) {\n            return this.eventStore?.getById(id);\n        }\n        /**\n         * Convenience method to get the instance of dependency by its id.\n         */\n        getDependencyById(id) {\n            return this.dependencyStore?.getById(id);\n        }\n        /**\n         * Convenience method to get the instance of resource by its id.\n         */\n        getResourceById(id) {\n            return this.resourceStore?.getById(id);\n        }\n        /**\n         * Convenience method to get the instance of assignment by its id.\n         */\n        getAssignmentById(id) {\n            return this.assignmentStore?.getById(id);\n        }\n        /**\n         * Convenience method to get the instance of calendar by its id.\n         */\n        getCalendarById(id) {\n            return this.calendarManagerStore?.getById(id);\n        }\n    }\n    return CorePartOfProjectGenericMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/BetterMixin.js\";\nimport { CalendarIntervalStore } from \"../../calendar/CalendarIntervalStore.js\";\nimport { CalendarIteratorResult } from \"../../calendar/CalendarCache.js\";\nimport { TimeUnit } from \"../../scheduling/Types.js\";\nimport { CalendarCacheSingle } from \"../../calendar/CalendarCacheSingle.js\";\nimport { UnspecifiedTimeIntervalModel } from \"../../calendar/UnspecifiedTimeIntervalModel.js\";\nimport DateHelper from \"../../../Core/helper/DateHelper.js\";\nimport { AbstractPartOfProjectModelMixin } from \"./mixin/AbstractPartOfProjectModelMixin.js\";\n/**\n * Calendar for project scheduling, mixed by CoreCalendarMixin and BaseCalendarMixin. It is used to mark certain time\n * intervals as \"non-working\" and ignore them during scheduling.\n *\n * The calendar consists from several [[CalendarIntervalMixin|intervals]]. The intervals can be either static or recurrent.\n */\nexport class AbstractCalendarMixin extends Mixin([AbstractPartOfProjectModelMixin], (base) => {\n    const superProto = base.prototype;\n    class CalendarMixin extends base {\n        constructor() {\n            super(...arguments);\n            this.version = 1;\n        }\n        // intervalStore            : CalendarIntervalStore\n        static get fields() {\n            return [\n                { name: 'version', type: 'number' },\n                'name',\n                { name: 'unspecifiedTimeIsWorking', type: 'boolean', defaultValue: true },\n                { name: 'intervals', type: 'store', subStore: true },\n                'cls',\n                'iconCls'\n            ];\n        }\n        get intervalStoreClass() {\n            return CalendarIntervalStore;\n        }\n        get intervalStore() {\n            // @ts-ignore\n            return this.meta.intervalsStore;\n        }\n        // Not a typo, name is generated from the fields name = intervals\n        initIntervalsStore(config) {\n            config.storeClass = this.intervalStoreClass;\n            // @ts-ignore\n            config.modelClass = this.getDefaultConfiguration().calendarIntervalModelClass || this.intervalStoreClass.defaultConfig.modelClass;\n            config.calendar = this;\n        }\n        // this method is called when the new value for the `intervals` field of this model is assigned\n        // the type of the `intervals` field is \"store\" that's why this magic\n        processIntervalsStoreData(intervals) {\n            this.bumpVersion();\n        }\n        isDefault() {\n            const project = this.getProject();\n            if (project) {\n                return this === project.defaultCalendar;\n            }\n            return false;\n        }\n        // <remove-on-release>\n        // TODO: move to Model?\n        // </remove-on-release>\n        getDepth() {\n            return this.childLevel + 1;\n        }\n        /**\n         * The core iterator method of the calendar.\n         *\n         * @param options The options for iterator. Should contain at least one of the `startDate`/`endDate` properties\n         * which indicates what timespan to examine for availability intervals. If one of boundaries is not provided\n         * iterator function should return `false` at some point, to avoid infinite loops.\n         *\n         * Another recognized option is `isForward`, which indicates the direction in which to iterate through the timespan.\n         *\n         * @param func The iterator function to call. It will be called for every distinct set of availability intervals, found\n         * in the given timespan. All the intervals, which are \"active\" for current interval are collected in the 3rd argument\n         * for this function - [[CalendarCacheInterval|calendarCacheInterval]]. If iterator returns `false` (checked with `===`)\n         * the iteration stops.\n         *\n         * @param scope The scope (`this` value) to execute the iterator in.\n         */\n        forEachAvailabilityInterval(options, func, scope) {\n            const maxRange = this.getProject()?.maxCalendarRange;\n            if (maxRange) {\n                options = Object.assign({ maxRange }, options);\n            }\n            return this.calendarCache.forEachAvailabilityInterval(options, func, scope);\n        }\n        /**\n         * This method starts at the given `date` and moves forward or backward in time, depending on `isForward`.\n         * It stops moving as soon as it accumulates the `durationMs` milliseconds of working time and returns the date\n         * at which it has stopped and remaining duration - the [[AccumulateWorkingTimeResult]] object.\n         *\n         * Normally, the remaining duration will be 0, indicating the full `durationMs` has been accumulated.\n         * However, sometimes, calendar might not be able to accumulate enough working time due to various reasons,\n         * like if it does not contain enough working time - this case will be indicated with remaining duration bigger than 0.\n         *\n         * @param date\n         * @param durationMs\n         * @param isForward\n         */\n        accumulateWorkingTime(date, durationMs, isForward) {\n            // if duration is 0 - return the same date\n            if (durationMs === 0)\n                return { finalDate: new Date(date), remainingDurationInMs: 0 };\n            if (isNaN(durationMs))\n                throw new Error(\"Invalid duration\");\n            let finalDate = date;\n            const adjustDurationToDST = this.getProject()?.adjustDurationToDST ?? false;\n            this.forEachAvailabilityInterval(isForward ? { startDate: date, isForward: true } : { endDate: date, isForward: false }, (intervalStartDate, intervalEndDate, calendarCacheInterval) => {\n                let result = true;\n                if (calendarCacheInterval.getIsWorking()) {\n                    let diff = intervalEndDate.getTime() - intervalStartDate.getTime();\n                    if (durationMs <= diff) {\n                        if (adjustDurationToDST) {\n                            const dstDiff = isForward\n                                ? intervalStartDate.getTimezoneOffset() - (new Date(intervalStartDate.getTime() + durationMs)).getTimezoneOffset()\n                                : (new Date(intervalEndDate.getTime() - durationMs)).getTimezoneOffset() - intervalEndDate.getTimezoneOffset();\n                            durationMs -= dstDiff * 60 * 1000;\n                        }\n                        finalDate = isForward\n                            ? new Date(intervalStartDate.getTime() + durationMs)\n                            : new Date(intervalEndDate.getTime() - durationMs);\n                        durationMs = 0;\n                        result = false;\n                    }\n                    else {\n                        if (adjustDurationToDST) {\n                            const dstDiff = intervalStartDate.getTimezoneOffset() - intervalEndDate.getTimezoneOffset();\n                            diff += dstDiff * 60 * 1000;\n                        }\n                        finalDate = isForward ? intervalEndDate : intervalStartDate;\n                        durationMs -= diff;\n                    }\n                }\n                return result;\n            });\n            return { finalDate: new Date(finalDate), remainingDurationInMs: durationMs };\n        }\n        /**\n         * Calculate the working time duration between the 2 dates, in milliseconds.\n         *\n         * @param {Date} startDate\n         * @param {Date} endDate\n         * @param {Boolean} [allowNegative] Method ignores negative values by default, returning 0. Set to true to get\n         * negative duration.\n         */\n        calculateDurationMs(startDate, endDate, allowNegative = false) {\n            let duration = 0;\n            const multiplier = startDate.getTime() <= endDate.getTime() || !allowNegative ? 1 : -1;\n            if (multiplier < 0) {\n                [startDate, endDate] = [endDate, startDate];\n            }\n            const adjustDurationToDST = this.getProject().adjustDurationToDST;\n            this.forEachAvailabilityInterval({ startDate: startDate, endDate: endDate }, (intervalStartDate, intervalEndDate, calendarCacheInterval) => {\n                if (calendarCacheInterval.getIsWorking()) {\n                    duration += intervalEndDate.getTime() - intervalStartDate.getTime();\n                    if (adjustDurationToDST) {\n                        const dstDiff = intervalStartDate.getTimezoneOffset() - intervalEndDate.getTimezoneOffset();\n                        duration += dstDiff * 60 * 1000;\n                    }\n                }\n            });\n            return duration * multiplier;\n        }\n        /**\n         * Calculate the end date of the time interval which starts at `startDate` and has `durationMs` working time duration\n         * (in milliseconds).\n         *\n         * @param startDate\n         * @param durationMs\n         */\n        calculateEndDate(startDate, durationMs) {\n            // the method goes forward by default ..unless a negative duration provided\n            const isForward = durationMs >= 0;\n            const res = this.accumulateWorkingTime(startDate, Math.abs(durationMs), isForward);\n            return res.remainingDurationInMs === 0 ? res.finalDate : null;\n        }\n        /**\n         * Calculate the start date of the time interval which ends at `endDate` and has `durationMs` working time duration\n         * (in milliseconds).\n         *\n         * @param endDate\n         * @param durationMs\n         */\n        calculateStartDate(endDate, durationMs) {\n            // the method goes backwards by default ..unless a negative duration provided\n            const isForward = durationMs <= 0;\n            const res = this.accumulateWorkingTime(endDate, Math.abs(durationMs), isForward);\n            return res.remainingDurationInMs === 0 ? res.finalDate : null;\n        }\n        /**\n         * Returns the earliest point at which a working period of time starts, following the given date.\n         * Can be the date itself, if it comes on the working time.\n         *\n         * @param date The date after which to skip the non-working time.\n         * @param isForward Whether the \"following\" means forward in time or backward.\n         */\n        skipNonWorkingTime(date, isForward = true) {\n            let workingDate;\n            const res = this.forEachAvailabilityInterval(isForward ? { startDate: date, isForward: true } : { endDate: date, isForward: false }, (intervalStartDate, intervalEndDate, calendarCacheInterval) => {\n                if (calendarCacheInterval.getIsWorking()) {\n                    workingDate = isForward ? intervalStartDate : intervalEndDate;\n                    return false;\n                }\n            });\n            if (res === CalendarIteratorResult.MaxRangeReached || res === CalendarIteratorResult.FullRangeIterated)\n                return 'empty_calendar';\n            return workingDate ? new Date(workingDate) : new Date(date);\n        }\n        /**\n         * This method adds a single [[CalendarIntervalMixin]] to the internal collection of the calendar\n         */\n        addInterval(interval) {\n            return this.addIntervals([interval]);\n        }\n        /**\n         * This method adds an array of [[CalendarIntervalMixin]] to the internal collection of the calendar\n         */\n        addIntervals(intervals) {\n            this.bumpVersion();\n            return this.intervalStore.add(intervals);\n        }\n        /**\n         * This method removes a single [[CalendarIntervalMixin]] from the internal collection of the calendar\n         */\n        removeInterval(interval) {\n            return this.removeIntervals([interval]);\n        }\n        /**\n         * This method removes an array of [[CalendarIntervalMixin]] from the internal collection of the calendar\n         */\n        removeIntervals(intervals) {\n            this.bumpVersion();\n            return this.intervalStore.remove(intervals);\n        }\n        /**\n         * This method removes all intervals from the internal collection of the calendar\n         */\n        clearIntervals(silent) {\n            if (!silent) {\n                this.bumpVersion();\n            }\n            return this.intervalStore.removeAll(silent);\n        }\n        bumpVersion() {\n            this.clearCache();\n            this.version++;\n        }\n        get calendarCache() {\n            if (this.$calendarCache !== undefined)\n                return this.$calendarCache;\n            const unspecifiedTimeInterval = new UnspecifiedTimeIntervalModel({\n                isWorking: this.unspecifiedTimeIsWorking\n            });\n            unspecifiedTimeInterval.calendar = this;\n            return this.$calendarCache = new CalendarCacheSingle({\n                calendar: this,\n                unspecifiedTimeInterval: unspecifiedTimeInterval,\n                intervalStore: this.intervalStore,\n                parentCache: this.parent && !this.parent.isRoot ? this.parent.calendarCache : null\n            });\n        }\n        clearCache() {\n            // not strictly needed, we just help garbage collector\n            this.$calendarCache && this.$calendarCache.clear();\n            this.$calendarCache = undefined;\n        }\n        resetPriorityOfAllIntervals() {\n            this.traverse((calendar) => {\n                calendar.intervalStore.forEach((interval) => interval.resetPriority());\n            });\n        }\n        insertChild(child, before, silent) {\n            let res = superProto.insertChild.call(this, ...arguments);\n            if (!Array.isArray(res)) {\n                res = [res];\n            }\n            // invalidate cache of the child record, since now it should take parent into account\n            res.forEach((r) => {\n                r.bumpVersion();\n                r.resetPriorityOfAllIntervals();\n            });\n            return res;\n        }\n        joinProject() {\n            superProto.joinProject.call(this);\n            this.intervalStore.setProject(this.getProject());\n        }\n        leaveProject() {\n            superProto.leaveProject.call(this);\n            this.intervalStore.setProject(null);\n            this.clearCache();\n        }\n        doDestroy() {\n            this.leaveProject();\n            this.intervalStore.destroy();\n            super.doDestroy();\n        }\n        isDayHoliday(day) {\n            const startDate = DateHelper.clearTime(day), endDate = DateHelper.getNext(day, TimeUnit.Day);\n            let hasWorkingTime = false;\n            this.forEachAvailabilityInterval({ startDate, endDate, isForward: true }, (_intervalStartDate, _intervalEndDate, calendarCacheInterval) => {\n                hasWorkingTime = calendarCacheInterval.getIsWorking();\n                return !hasWorkingTime;\n            });\n            return !hasWorkingTime;\n        }\n        // <remove-on-release>\n        // TODO: tests\n        // </remove-on-release>\n        getDailyHolidaysRanges(startDate, endDate) {\n            const result = [];\n            startDate = DateHelper.clearTime(startDate);\n            while (startDate < endDate) {\n                if (this.isDayHoliday(startDate)) {\n                    result.push({\n                        startDate,\n                        endDate: DateHelper.getStartOfNextDay(startDate, true, true)\n                    });\n                }\n                startDate = DateHelper.getNext(startDate, TimeUnit.Day);\n            }\n            return result;\n        }\n        /**\n         * Returns working time ranges between the provided dates.\n         * @param startDate Start of the period to get ranges from.\n         * @param endDate End of the period to get ranges from.\n         *\n         * @param {Date} startDate\n         * @param {Date} endDate\n         */\n        getWorkingTimeRanges(startDate, endDate) {\n            const result = [];\n            this.forEachAvailabilityInterval({ startDate, endDate, isForward: true }, (intervalStartDate, intervalEndDate, calendarCacheInterval) => {\n                if (calendarCacheInterval.getIsWorking()) {\n                    const entry = calendarCacheInterval.intervals[0];\n                    result.push({\n                        name: entry.name,\n                        startDate: intervalStartDate,\n                        endDate: intervalEndDate\n                    });\n                }\n            });\n            return result;\n        }\n        /**\n         * Returns non-working time ranges between the provided dates.\n         * @param startDate Start of the period to get ranges from.\n         * @param endDate End of the period to get ranges from.\n         *\n         * @param {Date} startDate\n         * @param {Date} endDate\n         */\n        getNonWorkingTimeRanges(startDate, endDate) {\n            const result = [];\n            this.forEachAvailabilityInterval({ startDate, endDate, isForward: true }, (intervalStartDate, intervalEndDate, calendarCacheInterval) => {\n                if (!calendarCacheInterval.getIsWorking()) {\n                    const entry = calendarCacheInterval.intervals[0];\n                    result.push({\n                        name: entry.name,\n                        iconCls: entry.iconCls,\n                        cls: entry.cls,\n                        startDate: intervalStartDate,\n                        endDate: intervalEndDate\n                    });\n                }\n            });\n            return result;\n        }\n        /**\n         * Checks if there is a working time interval in the provided time range (or when just startDate is provided,\n         * checks if the date is contained inside a working time interval in this calendar)\n         * @param startDate\n         * @param [endDate]\n         * @param [fullyContained] Pass true to check if the range is fully covered by a single continuous working time block\n         */\n        isWorkingTime(startDate, endDate, fullyContained) {\n            if (fullyContained) {\n                let found;\n                const res = this.forEachAvailabilityInterval({ startDate, endDate, isForward: true }, (intervalStartDate, intervalEndDate, calendarCacheInterval) => {\n                    if (calendarCacheInterval.getIsWorking() && intervalStartDate <= startDate && intervalEndDate >= endDate) {\n                        found = true;\n                        return false;\n                    }\n                });\n                if (res === CalendarIteratorResult.MaxRangeReached || res === CalendarIteratorResult.FullRangeIterated)\n                    return false;\n                return found;\n            }\n            else {\n                // Can be Date | null | 'empty_calendar'\n                const workingTimeStart = this.skipNonWorkingTime(startDate);\n                return workingTimeStart && workingTimeStart !== 'empty_calendar' ? (endDate ? workingTimeStart < endDate : workingTimeStart.getTime() === startDate.getTime()) : false;\n            }\n        }\n    }\n    return CalendarMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/Mixin.js\";\nimport { AbstractPartOfProjectModelMixin } from './mixin/AbstractPartOfProjectModelMixin.js';\n/**\n * This is a mixin enabling events to handle assignments. It is mixed by CoreHasAssignmentsMixin and\n * BaseHasAssignmentsMixin. It provides a collection of all assignments, which reference this event.\n *\n * Doesn't affect scheduling.\n */\nexport class AbstractHasAssignmentsMixin extends Mixin([AbstractPartOfProjectModelMixin], (base) => {\n    const superProto = base.prototype;\n    class HasAssignmentsMixin extends base {\n        /**\n         * If a given resource is assigned to this task, returns a [[BaseAssignmentMixin]] instance for it.\n         * Otherwise returns `null`\n         */\n        getAssignmentFor(resource) {\n            // Bucket `assigned` might not be set up yet when using delayed calculations\n            for (const assignment of this.assigned ?? []) {\n                if (assignment.resource === resource)\n                    return assignment;\n            }\n            return null;\n        }\n        isAssignedTo(resource) {\n            return Boolean(this.getAssignmentFor(resource));\n        }\n        /**\n         * A method which assigns a resource to the current event\n         */\n        async assign(resource) {\n            //<debug>\n            // Preconditions:\n            if (this.getAssignmentFor(resource))\n                throw new Error('Resource can\\'t be assigned twice to the same task');\n            //</debug>\n            const assignmentCls = this.project.assignmentStore.modelClass;\n            this.addAssignment(new assignmentCls({\n                event: this,\n                resource: resource\n            }));\n            return this.commitAsync();\n        }\n        /**\n         * A method which unassigns a resource from the current event\n         */\n        async unassign(resource) {\n            const assignment = this.getAssignmentFor(resource);\n            //<debug>\n            if (!assignment)\n                throw new Error(`Can't unassign resource \\`${resource}\\` from task \\`${this}\\` - resource is not assigned to the task!`);\n            //</debug>\n            this.removeAssignment(assignment);\n            return this.commitAsync();\n        }\n        leaveProject() {\n            // `this.assigned` will be empty if model is added to project and then removed immediately\n            // w/o any propagations\n            // @ts-ignore\n            if (this.isInActiveTransaction && this.assigned) {\n                const eventStore = this.getEventStore();\n                // to batch the assignments removal, we don't remove the assignments right away, but instead\n                // add them for the batched removal to the `assignmentsForRemoval` property of the event store\n                this.assigned.forEach(assignment => eventStore.assignmentsForRemoval.add(assignment));\n            }\n            superProto.leaveProject.call(this, ...arguments);\n        }\n        remove() {\n            if (this.parent) {\n                // need to get the event store in advance, because after removal the project reference will be cleared (all that is what provide\n                // references to all stores\n                const eventStore = this.getEventStore();\n                superProto.remove.call(this);\n                eventStore && eventStore.afterEventRemoval();\n            }\n            else {\n                return superProto.remove.call(this);\n            }\n        }\n        // template methods, overridden in scheduling modes mixins\n        // should probably be named something like \"onEventAssignmentAdded\"\n        // should be a listener for the `add` event of the assignment store instead\n        addAssignment(assignment) {\n            this.getProject().assignmentStore.add(assignment);\n            return assignment;\n        }\n        // should be a listener for the `remove` event of the assignment store instead\n        removeAssignment(assignment) {\n            this.getProject().assignmentStore.remove(assignment);\n            return assignment;\n        }\n    }\n    return HasAssignmentsMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectGenericMixin } from \"../../CorePartOfProjectGenericMixin.js\";\nimport Model from \"../../../../Core/data/Model.js\";\nimport { AbstractPartOfProjectModelMixin } from \"./AbstractPartOfProjectModelMixin.js\";\n/**\n * This a mixin for every Model that belongs to a scheduler_core project.\n *\n * It adds functions needed to calculate invalidated fields on project commit.\n */\nexport class CorePartOfProjectModelMixin extends Mixin([\n    AbstractPartOfProjectModelMixin,\n    CorePartOfProjectGenericMixin,\n    Model\n], (base) => {\n    const superProto = base.prototype;\n    class CorePartOfProjectModelMixin extends base {\n        constructor() {\n            super(...arguments);\n            // Flag set during calculation\n            this.$isCalculating = false;\n            // Proposed changes\n            this.$changed = {};\n            // Value before proposed change, for buckets that need to update data early\n            this.$beforeChange = {};\n        }\n        get isInActiveTransaction() {\n            return true;\n        }\n        // Invalidate record upon joining project, leads to a buffered commit\n        joinProject() {\n            this.invalidate();\n        }\n        // Trigger a buffered commit when leaving the project\n        leaveProject(isReplacing = false) {\n            superProto.leaveProject.call(this, isReplacing);\n            this.project?.bufferedCommitAsync();\n        }\n        /**\n         * Invalidates this record, queueing it for calculation on project commit.\n         */\n        invalidate() {\n            this.project?.invalidate(this);\n        }\n        /**\n         * Used to retrieve the proposed (before 'dataReady') or current (after 'dataReady') value for a field.\n         * If there is no proposed change, it is functionally equal to a normal `record.get()` call.\n         */\n        getCurrentOrProposed(fieldName) {\n            if (fieldName in this.$changed && this.$changed[fieldName] !== true) {\n                return this.$changed[fieldName];\n            }\n            return this.get(fieldName) ?? null;\n        }\n        /**\n         * Determines if the specified field has a value or not, value can be either current or proposed.\n         */\n        hasCurrentOrProposed(fieldName) {\n            return ((fieldName in this.$changed) && this.$changed[fieldName] != true) || this.get(fieldName) != null;\n        }\n        /**\n         * Propose changes, to be considered during calculation. Also invalidates the record.\n         */\n        propose(changes) {\n            // @ts-ignore\n            if (this.project || this.recurringTimeSpan?.project) {\n                const keys = Object.keys(changes);\n                for (let i = 0; i < keys.length; i++) {\n                    const key = keys[i];\n                    this.$changed[key] = changes[key];\n                }\n                this.invalidate();\n            }\n            else {\n                // If no project, behave as a normal model would\n                this.set(changes);\n            }\n        }\n        /**\n         * Similar to propose, but with more options. Mostly used by buckets, since they need data to update early.\n         */\n        setChanged(field, value, invalidate = true, setData = false) {\n            const me = this;\n            me.$changed[field] = value;\n            // Buckets need to keep data up to date immediately\n            if (setData) {\n                if (!(field in me.$beforeChange)) {\n                    me.$beforeChange[field] = me.get(field);\n                }\n                me.setData(field, value);\n            }\n            invalidate && me.invalidate();\n        }\n        /**\n         * Hook called before project refresh, override and calculate required changes in subclasses\n         */\n        calculateInvalidated() { }\n        /**\n         * Called after project refresh, before dataReady. Announce updated data\n         */\n        finalizeInvalidated(silent = false) {\n            const me = this;\n            me.$isCalculating = true;\n            if (!silent) {\n                // First silently revert any data change (used by buckets), otherwise it won't be detected by `set()`\n                me.setData(me.$beforeChange);\n                // Then do a proper set\n                me.set(me.$changed);\n            }\n            else {\n                me.setData(me.$changed);\n            }\n            me.$changed = {};\n            me.$beforeChange = {};\n            me.$isCalculating = false;\n        }\n    }\n    return CorePartOfProjectModelMixin;\n}) {\n}\n","import { CI } from \"../../ChronoGraph/collection/Iterator.js\";\nexport const isNotNumber = (value) => Number(value) !== value;\nexport const CIFromSetOrArrayOrValue = (value) => {\n    if (value instanceof Set || value instanceof Array)\n        return CI(value);\n    return CI([value]);\n};\nexport const delay = (value) => new Promise(resolve => setTimeout(resolve, value));\nexport const format = (format, ...values) => {\n    return format.replace(/{(\\d+)}/g, (match, number) => typeof values[number] !== 'undefined' ? values[number] : match);\n};\n","import { Mixin } from \"../../../ChronoGraph/class/Mixin.js\";\nimport { AbstractPartOfProjectStoreMixin } from \"./mixin/AbstractPartOfProjectStoreMixin.js\";\nimport { CIFromSetOrArrayOrValue } from \"../../util/Functions.js\";\n// Shared functionality for CoreAssignmentStore & ChronoAssignmentStore\nexport class AbstractAssignmentStoreMixin extends Mixin([AbstractPartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class AbstractAssignmentStoreMixin extends base {\n        constructor() {\n            super(...arguments);\n            this.assignmentsForRemoval = new Set();\n            this.allAssignmentsForRemoval = false;\n        }\n        remove(records, silent) {\n            this.assignmentsForRemoval = CIFromSetOrArrayOrValue(records).toSet();\n            const res = superProto.remove.call(this, records, silent);\n            this.assignmentsForRemoval.clear();\n            return res;\n        }\n        removeAll(silent) {\n            this.allAssignmentsForRemoval = true;\n            const res = superProto.removeAll.call(this, silent);\n            this.allAssignmentsForRemoval = false;\n            return res;\n        }\n    }\n    return AbstractAssignmentStoreMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/Mixin.js\";\nimport { AbstractPartOfProjectStoreMixin } from \"./mixin/AbstractPartOfProjectStoreMixin.js\";\n/**\n * Shared functionality for [[CoreCalendarManagerStoreMixin]] and [[ChronoCalendarManagerStoreMixin]]\n */\nexport class AbstractCalendarManagerStoreMixin extends Mixin([AbstractPartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class AbstractCalendarManagerStoreMixin extends base {\n        // special handling to destroy calendar models as part of destroying this store\n        doDestroy() {\n            const records = [];\n            // When chained, traverse can be called on destroyed nodes.\n            if (!this.rootNode?.isDestroyed) {\n                this.traverse(record => records.push(record));\n            }\n            super.doDestroy();\n            records.forEach(record => record.destroy());\n        }\n    }\n    return AbstractCalendarManagerStoreMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/Mixin.js\";\nimport { AbstractPartOfProjectStoreMixin } from \"./mixin/AbstractPartOfProjectStoreMixin.js\";\nimport { CIFromSetOrArrayOrValue } from '../../util/Functions.js';\n// Shared functionality for CoreDependencyStore & ChronoDependencyStore\nexport class AbstractDependencyStoreMixin extends Mixin([AbstractPartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class AbstractDependencyStoreMixin extends base {\n        constructor() {\n            super(...arguments);\n            this.dependenciesForRemoval = new Set();\n            this.allDependenciesForRemoval = false;\n        }\n        remove(records, silent) {\n            this.dependenciesForRemoval = CIFromSetOrArrayOrValue(records).toSet();\n            const res = superProto.remove.call(this, records, silent);\n            this.dependenciesForRemoval.clear();\n            return res;\n        }\n        removeAll(silent) {\n            this.allDependenciesForRemoval = true;\n            const res = superProto.removeAll.call(this, silent);\n            this.allDependenciesForRemoval = false;\n            return res;\n        }\n    }\n    return AbstractDependencyStoreMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/Mixin.js\";\nimport { AbstractPartOfProjectStoreMixin } from \"./mixin/AbstractPartOfProjectStoreMixin.js\";\nconst dataAddRemoveActions = {\n    splice: 1,\n    clear: 1\n};\n// Shared functionality for CoreEventStore & ChronoEventStore\nexport class AbstractEventStoreMixin extends Mixin([AbstractPartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class AbstractEventStoreMixin extends base {\n        constructor() {\n            super(...arguments);\n            this.assignmentsForRemoval = new Set();\n            // <remove-on-release>\n            // TODO: It seems this property is no longer used\n            //  need to remove and probably do the same for `assignmentsForRemoval`\n            // </remove-on-release>\n            this.dependenciesForRemoval = new Set();\n        }\n        // we need `onDataChange` for `syncDataOnLoad` option to work\n        onDataChange(event) {\n            // remove from a filter action must be ignored.\n            const isAddRemove = dataAddRemoveActions[event.action];\n            super.onDataChange(event);\n            if (isAddRemove && event.removed?.length)\n                this.afterEventRemoval();\n        }\n        // it seems `onDataChange` is not triggered for `remove` with `silent` flag\n        remove(records, silent) {\n            const res = superProto.remove.call(this, records, silent);\n            this.afterEventRemoval();\n            return res;\n        }\n        // it seems `onDataChange` is not triggered for `TreeStore#removeAll()`\n        removeAll(silent) {\n            const res = superProto.removeAll.call(this, silent);\n            this.afterEventRemoval();\n            return res;\n        }\n        onNodeRemoveChild(parent, children, index, flags) {\n            // @ts-ignore\n            const removed = superProto.onNodeRemoveChild.call(this, ...arguments);\n            this.afterEventRemoval();\n            return removed;\n        }\n        afterEventRemoval() {\n            const { assignmentsForRemoval, dependenciesForRemoval } = this;\n            // Can be called from `set data` during construction\n            if (!assignmentsForRemoval)\n                return;\n            // ORDER IS IMPORTANT!\n            // First remove assignments\n            const assignmentStore = this.getAssignmentStore();\n            if (assignmentStore && !assignmentStore.allAssignmentsForRemoval && assignmentsForRemoval.size) {\n                const toRemove = [...assignmentsForRemoval].filter(assignment => !assignmentStore.assignmentsForRemoval.has(assignment));\n                toRemove.length > 0 && assignmentStore.remove(toRemove);\n            }\n            assignmentsForRemoval.clear();\n            // Then remove dependencies\n            const dependencyStore = this.getDependencyStore();\n            if (dependencyStore && !dependencyStore.allDependenciesForRemoval && dependenciesForRemoval.size) {\n                const toRemove = [...dependenciesForRemoval].filter(dependency => !dependencyStore.dependenciesForRemoval.has(dependency));\n                toRemove.length > 0 && dependencyStore.remove(toRemove);\n            }\n            dependenciesForRemoval.clear();\n        }\n        processRecord(eventRecord, isDataset = false) {\n            if (!this.project?.isRepopulatingStores) {\n                const existingRecord = this.getById(eventRecord.id);\n                const isReplacing = existingRecord && existingRecord !== eventRecord;\n                //@ts-ignore\n                if (isReplacing && existingRecord.assigned) {\n                    // <remove-on-release>\n                    // TODO: Type\n                    // </remove-on-release>\n                    //@ts-ignore\n                    for (const assignment of existingRecord.assigned) {\n                        assignment.event = eventRecord;\n                    }\n                }\n            }\n            return eventRecord;\n        }\n    }\n    return AbstractEventStoreMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/Mixin.js\";\nimport { AbstractPartOfProjectStoreMixin } from \"./mixin/AbstractPartOfProjectStoreMixin.js\";\nconst dataAddRemoveActions = {\n    splice: 1,\n    clear: 1\n};\n// Shared functionality for CoreResourceStore & ChronoResourceStore\nexport class AbstractResourceStoreMixin extends Mixin([AbstractPartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class AbstractResourceStoreMixin extends base {\n        constructor() {\n            super(...arguments);\n            this.assignmentsForRemoval = new Set();\n        }\n        // we need `onDataChange` for `syncDataOnLoad` option to work\n        onDataChange(event) {\n            // remove from a filter action must be ignored.\n            const isAddRemove = dataAddRemoveActions[event.action];\n            super.onDataChange(event);\n            if (isAddRemove && event.removed?.length)\n                this.afterResourceRemoval();\n        }\n        // it seems `onDataChange` is not triggered for `remove` with `silent` flag\n        remove(records, silent) {\n            const res = superProto.remove.call(this, records, silent);\n            this.afterResourceRemoval();\n            return res;\n        }\n        // it seems `onDataChange` is not triggered for `TreeStore#removeAll()`\n        removeAll(silent) {\n            const res = superProto.removeAll.call(this, silent);\n            this.afterResourceRemoval();\n            return res;\n        }\n        afterResourceRemoval() {\n            // <remove-on-release>\n            // TODO: Ask nick, have tried making it get correct type by changing AbstractProjectMixin. But no luck\n            // </remove-on-release>\n            const assignmentStore = this.getAssignmentStore();\n            if (assignmentStore && !assignmentStore.allAssignmentsForRemoval) {\n                const assignmentsForRemoval = [...this.assignmentsForRemoval].filter(assignment => !assignmentStore.assignmentsForRemoval.has(assignment));\n                assignmentsForRemoval.length > 0 && assignmentStore.remove(assignmentsForRemoval);\n            }\n            this.assignmentsForRemoval.clear();\n        }\n        processRecord(resourceRecord, isDataset = false) {\n            const existingRecord = this.getById(resourceRecord.id);\n            const isReplacing = existingRecord && existingRecord !== resourceRecord;\n            if (isReplacing) {\n                // <remove-on-release>\n                // TODO: There is no ResourceMixin at the lowest level, cannot type correctly without it\n                // </remove-on-release>\n                //@ts-ignore\n                for (const assignment of existingRecord.assigned || []) {\n                    assignment.resource = resourceRecord;\n                }\n            }\n            return resourceRecord;\n        }\n    }\n    return AbstractResourceStoreMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectModelMixin } from \"../mixin/CorePartOfProjectModelMixin.js\";\nimport DateHelper from \"../../../../Core/helper/DateHelper.js\";\n/**\n * Core event entity mixin type.\n *\n * At this level event is only aware about its dates\n * The functionality, related to the assignments etc is provided in other mixins.\n */\nexport class CoreEventMixin extends Mixin([CorePartOfProjectModelMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreEventMixin extends base {\n        constructor() {\n            super(...arguments);\n            this._startDate = null;\n            this._endDate = null;\n            this._duration = null;\n        }\n        // Proper engine defines these fields since they enter graph, thus we need them\n        static get fields() {\n            return [\n                { name: 'startDate', type: 'date' },\n                { name: 'endDate', type: 'date' },\n                { name: 'duration', type: 'number' },\n                { name: 'durationUnit', type: 'durationunit', defaultValue: 'day' }\n            ];\n        }\n        // Getters return current or proposed value\n        get startDate() { return this._startDate ?? this.get('startDate') ?? null; }\n        get endDate() { return this._endDate ?? this.get('endDate') ?? null; }\n        get duration() { return this._duration ?? this.get('duration') ?? null; }\n        // Route all setting through applyXX (setStartDate, startDate = , set('startDate'), batching)\n        set startDate(value) { this.proposeStartDate(value); }\n        set endDate(value) { this.proposeEndDate(value); }\n        set duration(value) { this.proposeDuration(value); }\n        //region Edge case normalization\n        inSet(field, value, silent, fromRelationUpdate, skipAccessors) {\n            const me = this;\n            // Catch \"normal\" set calls\n            if (me.project && !me.project.isWritingData && typeof field !== 'string' && !skipAccessors) {\n                // Flag fields as changed even if we are given a no-change value, to let calculations take decision on\n                // whether to keep duration or not\n                if ('startDate' in field && !('startDate' in me.$changed)) {\n                    me.$changed.startDate = true;\n                    me.invalidate();\n                }\n                if ('endDate' in field && !('endDate' in me.$changed)) {\n                    me.$changed.endDate = true;\n                    me.invalidate();\n                }\n            }\n            // @ts-ignore\n            return superProto.inSet.call(me, field, value, silent, fromRelationUpdate, skipAccessors);\n        }\n        //endregion\n        //region StartDate\n        getStartDate() {\n            return this.startDate;\n        }\n        proposeStartDate(startDate, keepDuration = !('endDate' in this.$changed)) {\n            if (this.inSetting || startDate?.getTime() !== this.startDate?.getTime()) {\n                this._startDate = startDate;\n                this.propose({ startDate, keepDuration });\n            }\n        }\n        async setStartDate(startDate, keepDuration = true) {\n            this.proposeStartDate(startDate, keepDuration);\n            return this.project?.commitAsync();\n        }\n        //endregion\n        //region EndDate\n        getEndDate() {\n            return this.endDate;\n        }\n        proposeEndDate(endDate, keepDuration = false) {\n            if (this.inSetting || endDate?.getTime() !== this.endDate?.getTime()) {\n                this._endDate = endDate;\n                this.propose({ endDate, keepDuration });\n            }\n        }\n        async setEndDate(endDate, keepDuration = false) {\n            this.proposeEndDate(endDate, keepDuration);\n            return this.project?.commitAsync();\n        }\n        //endregion\n        //region Duration\n        getDuration() {\n            return this.duration;\n        }\n        proposeDuration(duration, unit, keepStart = true) {\n            this._duration = duration;\n            this.propose({ duration, keepStart });\n            if (unit)\n                this.propose({ durationUnit: unit });\n        }\n        async setDuration(duration, unit, keepStart = true) {\n            this.proposeDuration(duration, unit, keepStart);\n            return this.project?.commitAsync();\n        }\n        getDurationUnit() {\n            return this.durationUnit;\n        }\n        //endregion\n        // When joining as part of inline data, store is available. If joining through load, it is passed\n        joinProject() {\n            const me = this;\n            const changed = me.$changed;\n            const startDate = me.getCurrentOrProposed('startDate');\n            const endDate = me.getCurrentOrProposed('endDate');\n            const duration = me.getCurrentOrProposed('duration');\n            // Initial values should be considered changed, to be normalized\n            if (startDate != null)\n                changed.startDate = me._startDate = startDate;\n            if (endDate != null)\n                changed.endDate = me._endDate = endDate;\n            if (duration != null)\n                changed.duration = me._duration = duration;\n            // Resolve assignments when event joins project after load\n            if (me.eventStore && !me.eventStore.isLoadingData) {\n                const unresolved = me.assignmentStore?.storage.findItem('event', null);\n                if (unresolved) {\n                    // To avoid n² iterations over raw assignments we cache them by raw eventId, which saves us\n                    // some iterations over the storage\n                    // https://github.com/bryntum/support/issues/3141\n                    const cachedAssignments = me.assignmentStore?.storage.findItem('eventId', me.id);\n                    if (cachedAssignments) {\n                        for (const assignment of cachedAssignments) {\n                            assignment.setChanged('event', me);\n                        }\n                    }\n                    else {\n                        for (const assignment of unresolved) {\n                            if (assignment.getCurrentOrProposed('event') === me.id) {\n                                assignment.setChanged('event', me);\n                            }\n                        }\n                    }\n                }\n            }\n            superProto.joinProject.call(me);\n        }\n        // Mimic how proper engine applies values\n        applyValue(useProp, key, value, skipAccessors, field) {\n            // @ts-ignore\n            if ((this.project || this.recurringTimeSpan?.project) && field) {\n                const { name } = field;\n                if (name === 'startDate' || name == 'duration' || name === 'endDate') {\n                    useProp = true;\n                    // Update cached value\n                    this['_' + name] = value;\n                }\n                if (skipAccessors) {\n                    useProp = false;\n                }\n            }\n            superProto.applyValue.call(this, useProp, key, value, skipAccessors, field);\n        }\n        // Catch changes from batches etc. In which case it is sometimes expected for data to be available directly\n        afterChange(toSet, wasSet, silent, fromRelationUpdate, skipAccessors) {\n            if (!this.$isCalculating && !skipAccessors) {\n                // In certain scenarios data is expected to be available of the bat, messy!\n                this.setData({\n                    startDate: this.getCurrentOrProposed('startDate'),\n                    endDate: this.getCurrentOrProposed('endDate'),\n                    duration: this.getCurrentOrProposed('duration'),\n                    durationUnit: this.getCurrentOrProposed('durationUnit')\n                });\n            }\n            superProto.afterChange.call(this, toSet, wasSet, silent, fromRelationUpdate, skipAccessors);\n        }\n        // Normalizes dates & duration\n        calculateInvalidated() {\n            const me = this;\n            const changed = me.$changed;\n            const changedStart = 'startDate' in changed;\n            const changedEnd = 'endDate' in changed;\n            const changedDuration = 'duration' in changed;\n            const { startDate, endDate, duration, keepDuration, keepStart } = changed;\n            let calculate = null;\n            // Only start changed\n            if (changedStart && !changedEnd && !changedDuration) {\n                // Also null end when nulling start (keeping duration)\n                if (startDate === null) {\n                    changed.endDate = null;\n                }\n                // Start after end without keeping duration -> move end to start\n                else if (me.hasCurrentOrProposed('endDate') && startDate > me.getCurrentOrProposed('endDate') && !keepDuration) {\n                    changed.endDate = startDate;\n                    changed.duration = 0;\n                }\n                // Start changed and we either have a duration that we want to keep or no end -> calculate end\n                else if (me.hasCurrentOrProposed('duration') && (keepDuration || !me.hasCurrentOrProposed('endDate'))) {\n                    calculate = 'endDate';\n                }\n                // Start change and we have an end already -> calculate duration\n                else if (me.hasCurrentOrProposed('endDate')) {\n                    calculate = 'duration';\n                }\n            }\n            // Only end changed\n            else if (!changedStart && changedEnd && !changedDuration) {\n                // Also null start when nulling end (keeping duration)\n                if (endDate === null) {\n                    changed.startDate = null;\n                }\n                // End before start without keeping duration -> move start to end\n                else if (me.hasCurrentOrProposed('startDate') && !keepDuration && endDate !== true && endDate < me.getCurrentOrProposed('startDate')) {\n                    changed.startDate = endDate;\n                    changed.duration = 0;\n                }\n                // End changed and we either have a duration that we want to keep or no start -> calculate start\n                else if (me.hasCurrentOrProposed('duration') && (keepDuration || !me.hasCurrentOrProposed('startDate'))) {\n                    calculate = 'startDate';\n                }\n                // End changed and we have a start already -> calculate duration\n                else if (me.hasCurrentOrProposed('startDate')) {\n                    calculate = 'duration';\n                }\n            }\n            // Only duration changed\n            else if (!changedStart && !changedEnd && changedDuration) {\n                // Also null end when nulling duration (keeping start)\n                if (duration === null) {\n                    changed.endDate = null;\n                }\n                // Duration changed and we either have a start that we want to keep or no end -> calculate end\n                else if (me.hasCurrentOrProposed('startDate') && (keepStart || !me.hasCurrentOrProposed('endDate'))) {\n                    if (keepStart && changed.duration < 0) {\n                        changed.duration = 0;\n                    }\n                    calculate = 'endDate';\n                }\n                // Duration changed and we have an end already -> calculate start\n                else if (me.hasCurrentOrProposed('endDate')) {\n                    calculate = 'startDate';\n                }\n            }\n            // Start and end change, affect duration\n            else if (changedStart && changedEnd && !changedDuration) {\n                // Both nulled, null duration\n                if (startDate === null && endDate === null) {\n                    changed.duration = null;\n                }\n                // Other cases -> calculate duration\n                else {\n                    calculate = 'duration';\n                }\n            }\n            // Start and duration change -> calculate end\n            else if (changedStart && !changedEnd && changedDuration) {\n                calculate = 'endDate';\n            }\n            // End and duration changed -> calculate start\n            else if (!changedStart && changedEnd && changedDuration) {\n                calculate = 'startDate';\n            }\n            // All changed -> calculate whichever is null or by default end to be sure things add up\n            else if (changedStart && changedEnd && changedDuration) {\n                if (duration == null) {\n                    calculate = 'duration';\n                }\n                else if (startDate == null) {\n                    calculate = 'startDate';\n                }\n                else {\n                    calculate = 'endDate';\n                }\n            }\n            // Normalize if needed\n            const currentOrProposedStartDate = me.getCurrentOrProposed('startDate');\n            const currentOrProposedEndDate = me.getCurrentOrProposed('endDate');\n            const currentOrProposedDuration = me.getCurrentOrProposed('duration');\n            const currentOrProposedDurationUnit = me.getCurrentOrProposed('durationUnit');\n            let hourDuration, targetDuration;\n            switch (calculate) {\n                case 'startDate':\n                    changed.startDate = DateHelper.add(currentOrProposedEndDate, -currentOrProposedDuration, currentOrProposedDurationUnit);\n                    break;\n                case 'endDate':\n                    // convert proposed duration to hours to safely add over DST\n                    hourDuration = DateHelper.as('hour', currentOrProposedDuration, currentOrProposedDurationUnit);\n                    // convert calculated duration to task duration in task duration unit\n                    targetDuration = DateHelper.as(currentOrProposedDurationUnit, hourDuration, 'h');\n                    changed.endDate = DateHelper.add(currentOrProposedStartDate, targetDuration, currentOrProposedDurationUnit);\n                    break;\n                case 'duration':\n                    // convert proposed duration to hours to safely add over DST\n                    hourDuration = DateHelper.diff(currentOrProposedStartDate, currentOrProposedEndDate, 'h');\n                    // convert calculated duration to task duration in task duration unit\n                    changed.duration = DateHelper.as(currentOrProposedDurationUnit, hourDuration, 'h');\n                    break;\n            }\n            if ('startDate' in changed && changed.startDate !== true)\n                this._startDate = changed.startDate;\n            if ('endDate' in changed && changed.endDate !== true)\n                this._endDate = changed.endDate;\n            if ('duration' in changed && changed.duration !== true)\n                this._duration = changed.duration;\n            // Clean up flags, not intended to be actually set\n            if (changed.startDate === true)\n                delete changed.startDate;\n            if (changed.endDate === true)\n                delete changed.endDate;\n            delete changed.keepDuration;\n            delete changed.keepStart;\n        }\n    }\n    return CoreEventMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectModelMixin } from \"../mixin/CorePartOfProjectModelMixin.js\";\n/**\n * Core resource model class.\n */\nexport class CoreResourceMixin extends Mixin([CorePartOfProjectModelMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreResourceMixin extends base {\n        get assigned() {\n            return this.project?.assignmentStore.getResourcesAssignments(this);\n        }\n        joinProject() {\n            // Set up assignment -> resource mapping when joining store after assignment (skip during load)\n            // (note that there is no resourceStore yet when loading inline data, thus the first part of the condition)\n            if (this.resourceStore && !this.resourceStore.isLoadingData) {\n                this.assignmentStore?.query(a => a.get('resource') === this.id).forEach(unresolved => unresolved.setChanged('resource', this));\n            }\n            superProto.joinProject.call(this);\n        }\n        leaveProject(isReplacing = false) {\n            // `this.assigned` will be empty if model is added to project and then removed immediately\n            // w/o any propagations\n            // when replacing a resource or reloading the store, the assignments should be left intact\n            if (this.assigned && !isReplacing && !this.resourceStore?.isLoadingData) {\n                const resourceStore = this.resourceStore;\n                // to batch the assignments removal, we don't remove the assignments right away, but instead\n                // add them for the batched removal to the `assignmentsForRemoval` property of the event store\n                this.assigned.forEach(assignment => resourceStore.assignmentsForRemoval.add(assignment));\n            }\n            superProto.leaveProject.call(this);\n        }\n        applyValue(useProp, key, value, skipAccessor, field) {\n            // Changing id on a resource should update resourceId on its assignments\n            // (note that field might not exist, if user supplies data for undefined fields)\n            if (field?.name === 'id') {\n                this.assigned.forEach(assignment => {\n                    assignment.set('resourceId', value);\n                });\n            }\n            superProto.applyValue.call(this, useProp, key, value, skipAccessor, field);\n        }\n    }\n    return CoreResourceMixin;\n}) {\n}\n","import { Mixin, isInstanceOf } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectModelMixin } from \"../mixin/CorePartOfProjectModelMixin.js\";\nimport { CoreEventMixin } from \"./CoreEventMixin.js\";\nimport { CoreResourceMixin } from \"./CoreResourceMixin.js\";\nfunction asId(recordOrId) {\n    return recordOrId?.isModel ? recordOrId.id : recordOrId;\n}\n/**\n * Core assignment model class. It just contains references to the [[CoreEventMixin|event]] and [[CoreResourceMixin|resource]] being assigned.\n */\nexport class CoreAssignmentMixin extends Mixin([CorePartOfProjectModelMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreAssignmentMixin extends base {\n        // Fields declared in the Model way, existing decorators all assume ChronoGraph is used\n        static get fields() {\n            return [\n                // isEqual required to properly detect changed resource / event\n                { name: 'resource', isEqual: (a, b) => a === b, persist: false },\n                { name: 'event', isEqual: (a, b) => a === b, persist: false }\n            ];\n        }\n        // Resolve early + update indices to have buckets ready before commit\n        setChanged(field, value, invalidate) {\n            const { assignmentStore, eventStore, resourceStore, project } = this;\n            let update = false;\n            if (field === 'event') {\n                const event = isInstanceOf(value, CoreEventMixin) ? value : eventStore?.$master.getById(value);\n                if (event)\n                    update = true;\n                value = event || value;\n            }\n            if (field === 'resource') {\n                const resource = isInstanceOf(value, CoreResourceMixin) ? value : resourceStore?.$master.getById(value);\n                if (resource)\n                    update = true;\n                value = resource || value;\n            }\n            // Passing true as last arg, bucket expected to work before commit\n            superProto.setChanged.call(this, field, value, invalidate, true);\n            // Update on resolve, if this is a single operation and record is part of project (might be standalone record)\n            if (assignmentStore && update && !project.isPerformingCommit && !assignmentStore.isLoadingData && !resourceStore?.isLoadingData && !assignmentStore.skipInvalidateIndices) {\n                assignmentStore.invalidateIndices();\n            }\n        }\n        // Resolve event and resource when joining project\n        joinProject() {\n            superProto.joinProject.call(this);\n            this.setChanged('event', this.get('event'));\n            this.setChanged('resource', this.get('resource'));\n        }\n        // Resolved resource & event as part of commit\n        // Normally done earlier in setChanged, but stores might not have been available yet at that point\n        calculateInvalidated() {\n            // Changed values, should be used instead of current where available\n            let { event = this.event, resource = this.resource } = this.$changed;\n            if (event !== null && !(isInstanceOf(event, CoreEventMixin))) {\n                const resolved = this.eventStore?.getById(event);\n                if (resolved)\n                    this.setChanged('event', resolved, false);\n            }\n            if (resource !== null && !(isInstanceOf(resource, CoreResourceMixin))) {\n                const resolved = this.resourceStore?.getById(resource);\n                if (resolved)\n                    this.setChanged('resource', resolved, false);\n            }\n        }\n        // resourceId and eventId required to be available for new datasets\n        finalizeInvalidated(silent) {\n            const changed = this.$changed;\n            if ('resource' in changed) {\n                changed.resourceId = asId(changed.resource);\n            }\n            if ('event' in changed) {\n                changed.eventId = asId(changed.event);\n            }\n            superProto.finalizeInvalidated.call(this, silent);\n        }\n        //region Event\n        set event(event) {\n            this.setChanged('event', event);\n            this.setChanged('eventId', asId(event));\n        }\n        get event() {\n            const event = this.get('event');\n            // Engine returns null instead of id when unresolved\n            return event?.id != null ? event : null;\n        }\n        //endregion\n        //region Resource\n        set resource(resource) {\n            this.setChanged('resource', resource);\n            this.setChanged('resourceId', asId(resource));\n        }\n        get resource() {\n            const resource = this.get('resource');\n            // Engine returns null instead of id when unresolved\n            return resource?.id != null ? resource : null;\n        }\n    }\n    return CoreAssignmentMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectGenericMixin } from \"../../CorePartOfProjectGenericMixin.js\";\nimport Store from \"../../../../Core/data/Store.js\";\nimport { AbstractPartOfProjectStoreMixin } from \"./AbstractPartOfProjectStoreMixin.js\";\n/**\n * This a mixin for every Store, that belongs to a scheduler_core project.\n */\nexport class CorePartOfProjectStoreMixin extends Mixin([\n    AbstractPartOfProjectStoreMixin,\n    CorePartOfProjectGenericMixin,\n    Store\n], (base) => {\n    const superProto = base.prototype;\n    class CorePartOfProjectStoreMixin extends base {\n        setProject(project) {\n            const result = superProto.setProject.call(this, project);\n            if (project)\n                this.joinProject(project);\n            return result;\n        }\n        joinProject(project) { }\n        onCommitAsync() { }\n    }\n    return CorePartOfProjectStoreMixin;\n}) {\n}\n","import { CoreAssignmentMixin } from \"../model/scheduler_core/CoreAssignmentMixin.js\";\nimport { Mixin } from \"../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectStoreMixin } from \"./mixin/CorePartOfProjectStoreMixin.js\";\nimport { AbstractAssignmentStoreMixin } from \"./AbstractAssignmentStoreMixin.js\";\nconst emptySet = new Set();\n/**\n * A store mixin class, that represent collection of all assignments in the [[SchedulerCoreProjectMixin|project]].\n */\nexport class CoreAssignmentStoreMixin extends Mixin([AbstractAssignmentStoreMixin, CorePartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreAssignmentStoreMixin extends base {\n        constructor() {\n            super(...arguments);\n            this.skipInvalidateIndices = false;\n        }\n        static get defaultConfig() {\n            return {\n                modelClass: CoreAssignmentMixin,\n                storage: {\n                    extraKeys: [\n                        { property: 'event', unique: false },\n                        { property: 'resource', unique: false },\n                        { property: 'eventId', unique: false }\n                    ]\n                }\n            };\n        }\n        set data(value) {\n            this.allAssignmentsForRemoval = true;\n            super.data = value;\n            this.allAssignmentsForRemoval = false;\n        }\n        getEventsAssignments(event) {\n            return this.storage.findItem('event', event, true) || emptySet;\n        }\n        getResourcesAssignments(resource) {\n            return this.storage.findItem('resource', resource.$original, true) || emptySet;\n        }\n        updateIndices() {\n            this.storage.rebuildIndices();\n        }\n        invalidateIndices() {\n            this.storage.invalidateIndices();\n        }\n        afterLoadData() {\n            this.eventStore && this.linkAssignments(this.eventStore, 'event');\n            this.resourceStore && this.linkAssignments(this.resourceStore, 'resource');\n        }\n        // Link events/resources to assignments, called when those stores are populated or joined to project\n        linkAssignments(store, modelName) {\n            // If we are passed a chained store, the ultimate source of truth is the masterStore\n            store = store.masterStore || store;\n            const unresolved = this.count && this.storage.findItem(modelName, null, true);\n            if (unresolved) {\n                for (const assignment of unresolved) {\n                    const record = store.getById(assignment.getCurrentOrProposed(modelName));\n                    if (record)\n                        assignment.setChanged(modelName, record);\n                }\n                this.invalidateIndices();\n            }\n        }\n        // Unlink events/resources from assignments, called when those stores are cleared\n        unlinkAssignments(modelName) {\n            // Invalidate links to events/resources, need to link to new records so set it back to the id (might be resource or resourceId)\n            // As assignment.resource returns null if it's an id, need to check for that in data\n            this.forEach(assignment => assignment.setChanged(modelName, assignment[modelName]?.id ?? assignment?.getData(modelName) ?? assignment[modelName + 'Id']));\n            this.invalidateIndices();\n        }\n        onCommitAsync() {\n            this.updateIndices();\n        }\n    }\n    return CoreAssignmentStoreMixin;\n}) {\n}\n","import { CorePartOfProjectModelMixin } from '../mixin/CorePartOfProjectModelMixin.js';\nimport { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { AbstractCalendarMixin } from \"../AbstractCalendarMixin.js\";\n/**\n * The calendar for project scheduling, it is used to mark certain time intervals as \"non-working\" and ignore them during scheduling.\n *\n * The calendar consists from several [[CalendarIntervalMixin|intervals]]. The intervals can be either static or recurrent.\n */\nexport class CoreCalendarMixin extends Mixin([AbstractCalendarMixin, CorePartOfProjectModelMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreCalendarMixin extends base {\n    }\n    return CoreCalendarMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectStoreMixin } from './mixin/CorePartOfProjectStoreMixin.js';\nimport { CoreCalendarMixin } from '../model/scheduler_core/CoreCalendarMixin.js';\nimport { AbstractCalendarManagerStoreMixin } from \"./AbstractCalendarManagerStoreMixin.js\";\n/**\n * A store mixin class, that represent collection of all calendars in the [[SchedulerCoreProjectMixin|project]].\n */\nexport class CoreCalendarManagerStoreMixin extends Mixin([AbstractCalendarManagerStoreMixin, CorePartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreCalendarManagerStoreMixin extends base {\n        static get defaultConfig() {\n            return {\n                tree: true,\n                modelClass: CoreCalendarMixin\n            };\n        }\n    }\n    return CoreCalendarManagerStoreMixin;\n}) {\n}\n","import { CorePartOfProjectModelMixin } from \"../mixin/CorePartOfProjectModelMixin.js\";\nimport { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { CoreEventMixin } from \"./CoreEventMixin.js\";\nimport { isInstanceOf } from '../../../../ChronoGraph/class/Mixin.js';\nexport class CoreDependencyMixin extends Mixin([CorePartOfProjectModelMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreDependencyMixin extends base {\n        static get fields() {\n            return [\n                { name: 'fromEvent', isEqual: (a, b) => a === b, persist: false },\n                { name: 'toEvent', isEqual: (a, b) => a === b, persist: false }\n            ];\n        }\n        // Resolve early + update indices to have buckets ready before commit\n        setChanged(field, value, invalidate) {\n            let update = false;\n            if (field === 'fromEvent' || field === 'toEvent') {\n                const event = isInstanceOf(value, CoreEventMixin) ? value : this.eventStore?.getById(value);\n                if (event)\n                    update = true;\n                value = event || value;\n            }\n            superProto.setChanged.call(this, field, value, invalidate, true);\n            if (update && !this.project.isPerformingCommit && !this.dependencyStore?.isLoadingData) {\n                // <remove-on-release>\n                // TODO: Improve Collection indexing to handle smaller updates\n                // </remove-on-release>\n                this.dependencyStore?.invalidateIndices();\n            }\n        }\n        // Resolve events when joining project\n        joinProject() {\n            superProto.joinProject.call(this);\n            // Initial values should be considered changed, to be normalized\n            // (needs to pass through setChanged for early normalization expected for buckets)\n            this.setChanged('fromEvent', this.get('fromEvent'));\n            this.setChanged('toEvent', this.get('toEvent'));\n        }\n        // Resolved events as part of commit\n        // Normally done earlier in setChanged, but stores might not have been available yet at that point\n        calculateInvalidated() {\n            // Changed values, should be used instead of current where available\n            let { fromEvent, toEvent } = this.$changed;\n            if (fromEvent !== null && !(isInstanceOf(fromEvent, CoreEventMixin))) {\n                const resolved = this.eventStore?.getById(fromEvent);\n                if (resolved)\n                    this.$changed.fromEvent = resolved;\n            }\n            if (toEvent !== null && !(isInstanceOf(toEvent, CoreEventMixin))) {\n                const resolved = this.eventStore?.getById(toEvent);\n                if (resolved)\n                    this.$changed.toEvent = resolved;\n            }\n        }\n        //region Events\n        // Not using \"propose\" mechanism from CoreEventMixin, because buckets are expected to be up to date right away\n        set fromEvent(fromEvent) {\n            this.setChanged('fromEvent', fromEvent);\n        }\n        get fromEvent() {\n            const fromEvent = this.get('fromEvent');\n            // Engine returns null instead of id when unresolved\n            return fromEvent?.id != null ? fromEvent : null;\n        }\n        set toEvent(toEvent) {\n            this.setChanged('toEvent', toEvent);\n        }\n        get toEvent() {\n            const toEvent = this.get('toEvent');\n            // Engine returns null instead of id when unresolved\n            return toEvent?.id != null ? toEvent : null;\n        }\n    }\n    return CoreDependencyMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectStoreMixin } from \"./mixin/CorePartOfProjectStoreMixin.js\";\nimport { CoreDependencyMixin } from \"../model/scheduler_core/CoreDependencyMixin.js\";\nimport { AbstractDependencyStoreMixin } from \"./AbstractDependencyStoreMixin.js\";\nconst emptySet = new Set();\n/**\n * A store mixin class, that represent collection of all dependencies in the [[SchedulerCoreProjectMixin|project]].\n */\nexport class CoreDependencyStoreMixin extends Mixin([AbstractDependencyStoreMixin, CorePartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreDependencyStoreMixin extends base {\n        constructor() {\n            super(...arguments);\n            this.dependenciesForRemoval = new Set();\n            this.allDependenciesForRemoval = false;\n        }\n        static get defaultConfig() {\n            return {\n                modelClass: CoreDependencyMixin,\n                storage: {\n                    extraKeys: [\n                        { property: 'fromEvent', unique: false },\n                        { property: 'toEvent', unique: false }\n                    ]\n                }\n            };\n        }\n        getIncomingDepsForEvent(event) {\n            return this.storage.findItem('toEvent', event) || emptySet;\n        }\n        getOutgoingDepsForEvent(event) {\n            return this.storage.findItem('fromEvent', event) || emptySet;\n        }\n        set data(value) {\n            this.allDependenciesForRemoval = true;\n            super.data = value;\n            this.allDependenciesForRemoval = false;\n        }\n        updateIndices() {\n            this.storage.rebuildIndices();\n        }\n        invalidateIndices() {\n            this.storage.invalidateIndices();\n        }\n        onCommitAsync() {\n            this.updateIndices();\n        }\n    }\n    return CoreDependencyStoreMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { CoreEventMixin } from \"./CoreEventMixin.js\";\nimport ObjectHelper from \"../../../../Core/helper/ObjectHelper.js\";\nimport { AbstractHasAssignmentsMixin } from '../AbstractHasAssignmentsMixin.js';\n/**\n * This is a mixin, which can be applied to the [[CoreEventMixin]]. It provides the collection of all assignments,\n * which reference this event.\n *\n * Doesn't affect scheduling.\n */\nexport class CoreHasAssignmentsMixin extends Mixin([CoreEventMixin, AbstractHasAssignmentsMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreHasAssignmentsMixin extends base {\n        get assigned() {\n            return this.project?.assignmentStore.getEventsAssignments(this) ?? this.$cachedAssignments;\n        }\n        leaveProject(isReplacing = false) {\n            // Expected to still be able to return assignments when removed from project\n            this.$cachedAssignments = this.assigned;\n            super.leaveProject(isReplacing);\n        }\n        applyValue(useProp, key, value, skipAccessor, field) {\n            // Changing id on an event should update resourceId on its assignments\n            if (key === 'id') {\n                this.assigned?.forEach(assignment => assignment.set('eventId', value));\n            }\n            superProto.applyValue.call(this, useProp, key, value, skipAccessor, field);\n        }\n        copy(newId = null, deep = null) {\n            const copy = superProto.copy.call(this, newId, deep);\n            // If deep is everything but object - use default behavior, which is to invoke accessors\n            // If deep is an object, check if it has certain field disabled\n            if ((ObjectHelper.isObject(deep) && !deep.skipFieldIdentifiers) || !ObjectHelper.isObject(deep)) {\n                // Copy current assignments, used for occurrences\n                copy.$cachedAssignments = this.assigned;\n            }\n            return copy;\n        }\n    }\n    return CoreHasAssignmentsMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { CoreEventMixin } from \"./CoreEventMixin.js\";\n/**\n * This is a mixin, which can be applied to the [[CoreEventMixin]]. It provides the collection of all dependencies,\n * which reference this event.\n *\n * Doesn't affect scheduling.\n */\nexport class CoreHasDependenciesMixin extends Mixin([CoreEventMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreHasDependenciesMixin extends base {\n        get outgoingDeps() {\n            return this.project.dependencyStore.getOutgoingDepsForEvent(this);\n        }\n        get incomingDeps() {\n            return this.project.dependencyStore.getIncomingDepsForEvent(this);\n        }\n        leaveProject() {\n            const eventStore = this.eventStore;\n            // the buckets may be empty if a model is removed from the project immediately after adding\n            // (without propagation)\n            if (this.outgoingDeps) {\n                this.outgoingDeps.forEach(dependency => eventStore.dependenciesForRemoval.add(dependency));\n            }\n            if (this.incomingDeps) {\n                this.incomingDeps.forEach(dependency => eventStore.dependenciesForRemoval.add(dependency));\n            }\n            superProto.leaveProject.call(this);\n        }\n    }\n    return CoreHasDependenciesMixin;\n}) {\n}\n","import { Mixin } from '../../../../ChronoGraph/class/BetterMixin.js';\nimport { CoreEventMixin } from './CoreEventMixin.js';\nimport { CoreHasAssignmentsMixin } from \"./CoreHasAssignmentsMixin.js\";\nimport { CoreHasDependenciesMixin } from './CoreHasDependenciesMixin.js';\n/**\n * This is an event class, [[SchedulerCoreProjectMixin]] is working with.\n * It is constructed as [[CoreEventMixin]], enhanced with [[CoreHasAssignmentsMixin]] and [[CoreHasDependenciesMixin]]\n */\nexport class SchedulerCoreEvent extends Mixin([\n    CoreEventMixin,\n    CoreHasAssignmentsMixin,\n    CoreHasDependenciesMixin\n], (base) => {\n    const superProto = base.prototype;\n    class SchedulerCoreEvent extends base {\n    }\n    return SchedulerCoreEvent;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/BetterMixin.js\";\nimport { SchedulerCoreEvent } from \"../model/scheduler_core/SchedulerCoreEvent.js\";\nimport { CorePartOfProjectStoreMixin } from \"./mixin/CorePartOfProjectStoreMixin.js\";\nimport { AbstractEventStoreMixin } from \"./AbstractEventStoreMixin.js\";\n/**\n * A store mixin class, that represent collection of all events in the [[SchedulerCoreProjectMixin|project]].\n */\nexport class CoreEventStoreMixin extends Mixin([AbstractEventStoreMixin, CorePartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreEventStoreMixin extends base {\n        static get defaultConfig() {\n            return {\n                modelClass: SchedulerCoreEvent\n            };\n        }\n        joinProject() {\n            this.assignmentStore?.linkAssignments(this, 'event');\n        }\n        afterLoadData() {\n            this.afterEventRemoval();\n            this.assignmentStore?.linkAssignments(this, 'event');\n        }\n    }\n    return CoreEventStoreMixin;\n}) {\n}\n// /**\n//  * The tree store version of [[EventStoreMixin]].\n//  */\n// export class EventTreeStoreMixin extends Mixin(\n//     [ EventStoreMixin ],\n//     (base : AnyConstructor<EventStoreMixin, typeof EventStoreMixin>) => {\n//\n//     const superProto : InstanceType<typeof base> = base.prototype\n//\n//\n//         class EventTreeStoreMixin extends base {\n//             rootNode            : SchedulerBasicProjectMixin\n//\n//             buildRootNode () : object {\n//                 return this.getProject() || {}\n//             }\n//\n//\n//             static get defaultConfig () : object {\n//                 return {\n//                     tree        : true\n//                 }\n//             }\n//         }\n//\n//         return EventTreeStoreMixin\n//     }){}\n//\n","import { Mixin } from \"../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectStoreMixin } from \"./mixin/CorePartOfProjectStoreMixin.js\";\nimport { CoreResourceMixin } from \"../model/scheduler_core/CoreResourceMixin.js\";\nimport { AbstractResourceStoreMixin } from \"./AbstractResourceStoreMixin.js\";\n/**\n * A store mixin class, that represent collection of all resources in the [[SchedulerCoreProjectMixin|project]].\n */\nexport class CoreResourceStoreMixin extends Mixin([AbstractResourceStoreMixin, CorePartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreResourceStoreMixin extends base {\n        static get defaultConfig() {\n            return {\n                modelClass: CoreResourceMixin\n            };\n        }\n        joinProject() {\n            this.assignmentStore?.linkAssignments(this, 'resource');\n        }\n        afterLoadData() {\n            this.assignmentStore?.linkAssignments(this, 'resource');\n        }\n        clear(removing) {\n            superProto.clear.call(this, removing);\n            this.assignmentStore?.unlinkAssignments('resource');\n        }\n    }\n    return CoreResourceStoreMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/BetterMixin.js\";\nimport Delayable from \"../../../Core/mixin/Delayable.js\";\nimport Events from \"../../../Core/mixin/Events.js\";\nimport Model from \"../../../Core/data/Model.js\";\nexport class EventsWrapper extends Mixin([], Events) {\n}\nexport class DelayableWrapper extends Mixin([], Delayable) {\n}\n/**\n * This is an abstract project, which just lists the available stores.\n *\n * The actual project classes are [[SchedulerCoreProjectMixin]], [[SchedulerBasicProjectMixin]],\n * [[SchedulerProProjectMixin]], [[GanttProjectMixin]].\n */\nexport class AbstractProjectMixin extends Mixin([\n    EventsWrapper,\n    DelayableWrapper,\n    Model\n], (base) => {\n    const superProto = base.prototype;\n    class AbstractProjectMixin extends base {\n        constructor() {\n            super(...arguments);\n            // <remove-on-release>\n            // TODO: this flag is set, when we are \"restoring\" the data from the rejected transaction and stm is disabled\n            //  this involves removing the records added in that transaction (and adding removed records back)\n            //  normally, stm is used for that, however, it might be disabled\n            // </remove-on-release>\n            this.isRestoringData = false;\n        }\n        get isRepopulatingStores() {\n            return false;\n        }\n        get isInitialCommit() {\n            return !this.isInitialCommitPerformed || this.hasLoadedDataToCommit;\n        }\n        construct(config = {}) {\n            // Define default values for these flags here\n            // if defined where declared then TS compiles them this way:\n            // constructor() {\n            //     super(...arguments)\n            //     this.isInitialCommitPerformed   = false\n            //     this.isLoadingInlineData        = false\n            //     this.isWritingData              = false\n            //\n            // }\n            // which messes the flags values for inline data loading (since it's async)\n            this.isInitialCommitPerformed = false;\n            this.isLoadingInlineData = false;\n            this.isWritingData = false;\n            this.hasLoadedDataToCommit = false;\n            const silenceInitialCommit = ('silenceInitialCommit' in config) ? config.silenceInitialCommit : true;\n            const adjustDurationToDST = ('adjustDurationToDST' in config) ? config.adjustDurationToDST : false;\n            // 5 years roughly === 5 * 365 * 24 * 60 * 60 * 1000\n            this.maxCalendarRange = ('maxCalendarRange' in config) ? config.maxCalendarRange : 157680000000;\n            // delete configs otherwise super.construct() call treat them as fields and makes accessors for them\n            delete config.maxCalendarRange;\n            delete config.silenceInitialCommit;\n            delete config.adjustDurationToDST;\n            superProto.construct.call(this, config);\n            this.silenceInitialCommit = silenceInitialCommit;\n            this.adjustDurationToDST = adjustDurationToDST;\n        }\n        // Template method called when a stores dataset is replaced. Implemented in SchedulerBasicProjectMixin\n        repopulateStore(store) { }\n        // Template method called when replica should be repopulated. Implemented in SchedulerBasicProjectMixin\n        repopulateReplica() { }\n        deferUntilRepopulationIfNeeded(deferId, func, args) {\n            // no deferring at this level (happens in projects using engine)\n            func(...args);\n        }\n        // Template method called when a store is attached to the project\n        attachStore(store) { }\n        // Template method called when a store is detached to the project\n        detachStore(store) { }\n        async commitAsync() {\n            throw new Error(\"Abstract method called\");\n        }\n        // Different implementations for Core and Basic engines\n        isEngineReady() {\n            throw new Error(\"Abstract method called\");\n        }\n        getStm() {\n            throw new Error(\"Abstract method called\");\n        }\n    }\n    return AbstractProjectMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { SchedulerCoreEvent } from \"./SchedulerCoreEvent.js\";\nimport Store from \"../../../../Core/data/Store.js\";\nimport Model from \"../../../../Core/data/Model.js\";\nimport Delayable from \"../../../../Core/mixin/Delayable.js\";\nimport { CoreEventStoreMixin } from \"../../store/CoreEventStoreMixin.js\";\nimport { CoreAssignmentMixin } from \"./CoreAssignmentMixin.js\";\nimport { CoreAssignmentStoreMixin } from \"../../store/CoreAssignmentStoreMixin.js\";\nimport { CoreResourceMixin } from \"./CoreResourceMixin.js\";\nimport { CoreResourceStoreMixin } from \"../../store/CoreResourceStoreMixin.js\";\nimport { CorePartOfProjectGenericMixin } from \"../../CorePartOfProjectGenericMixin.js\";\nimport { CoreDependencyStoreMixin } from \"../../store/CoreDependencyStoreMixin.js\";\nimport { CoreDependencyMixin } from \"./CoreDependencyMixin.js\";\nimport { CoreCalendarMixin } from './CoreCalendarMixin.js';\nimport { CoreCalendarManagerStoreMixin } from '../../store/CoreCalendarManagerStoreMixin.js';\nimport { delay } from \"../../../util/Functions.js\";\nimport StateTrackingManager from \"../../../../Core/data/stm/StateTrackingManager.js\";\nimport { AbstractProjectMixin } from \"../AbstractProjectMixin.js\";\nimport ObjectHelper from \"../../../../Core/helper/ObjectHelper.js\";\nexport class DelayableWrapper extends Mixin([], Delayable) {\n}\n/**\n * This is a project, implementing _basic scheduling_ as [[SchedulerBasicProjectMixin]] does.\n * Yet this class does not use _chronograph_ based engine.\n */\nexport class SchedulerCoreProjectMixin extends Mixin([\n    AbstractProjectMixin,\n    CorePartOfProjectGenericMixin,\n    DelayableWrapper,\n    Model\n], (base) => {\n    const superProto = base.prototype;\n    class SchedulerCoreProjectMixin extends base {\n        static get configurable() {\n            return {\n                stm: {},\n                eventStore: {},\n                assignmentStore: {},\n                resourceStore: {},\n                dependencyStore: {},\n                calendarManagerStore: {},\n                eventModelClass: SchedulerCoreEvent,\n                assignmentModelClass: CoreAssignmentMixin,\n                resourceModelClass: CoreResourceMixin,\n                dependencyModelClass: CoreDependencyMixin,\n                calendarModelClass: CoreCalendarMixin,\n                eventStoreClass: CoreEventStoreMixin,\n                assignmentStoreClass: CoreAssignmentStoreMixin,\n                resourceStoreClass: CoreResourceStoreMixin,\n                dependencyStoreClass: CoreDependencyStoreMixin,\n                calendarManagerStoreClass: CoreCalendarManagerStoreMixin,\n                assignmentsData: null,\n                calendarsData: null,\n                dependenciesData: null,\n                eventsData: null,\n                resourcesData: null\n            };\n        }\n        //endregion\n        //region Init\n        construct(config = {}) {\n            const me = this;\n            // Cannot be created with declaration, because of how TS is compiled to JS. Ends up after `construct()`\n            me.$invalidated = new Set();\n            // Define default values for these flags here\n            // if defined where declared then TS compiles them this way:\n            // constructor() {\n            //     super(...arguments)\n            //     this.isPerformingCommit   = false\n            //     this.silenceInitialCommit = true\n            //     this.ongoing              = Promise.resolve()\n            // }\n            // which messes the flags values for inline data loading (since it's async)\n            me.isPerformingCommit = false;\n            me.silenceInitialCommit = true;\n            me.ongoing = Promise.resolve();\n            if (config.eventStore && !config.assignmentStore) {\n                const eventStore = config.eventStore.masterStore || config.eventStore;\n                // If chained from a CrudManager, the assignment store might not be part of a project, and we might\n                // need to ingest it from the CrudManager\n                // @ts-ignore\n                const assignmentStore = eventStore.assignmentStore || eventStore.crudManager?.assignmentStore;\n                // In this case we must ingest the assignment store from the eventStore\n                if (assignmentStore?.isAssignmentStore) {\n                    config.assignmentStore = assignmentStore;\n                    me.isSharingAssignmentStore = true;\n                }\n            }\n            superProto.construct.call(me, config);\n            // not part of the CalendarManagerStore intentionally, not persisted\n            me.defaultCalendar = new me.calendarManagerStore.modelClass({\n                unspecifiedTimeIsWorking: me.unspecifiedTimeIsWorking\n            });\n            me.defaultCalendar.project = me;\n            const { calendarsData, eventsData, dependenciesData, resourcesData, assignmentsData } = me;\n            const hasInlineData = Boolean(calendarsData || eventsData || dependenciesData || resourcesData || assignmentsData);\n            if (hasInlineData) {\n                me.loadInlineData({\n                    calendarsData,\n                    eventsData,\n                    dependenciesData,\n                    resourcesData,\n                    assignmentsData\n                });\n                delete me.calendarsData;\n                delete me.eventsData;\n                delete me.dependenciesData;\n                delete me.resourcesData;\n                delete me.assignmentsData;\n            }\n            else {\n                // Trigger initial commit\n                me.bufferedCommitAsync();\n            }\n        }\n        doDestroy() {\n            const me = this;\n            me.eventStore?.destroy();\n            me.dependencyStore?.destroy();\n            me.assignmentStore?.destroy();\n            me.resourceStore?.destroy();\n            me.calendarManagerStore?.destroy();\n            me.defaultCalendar.destroy();\n            me.stm?.destroy();\n            superProto.doDestroy.call(this);\n        }\n        /**\n         * This method loads the \"raw\" data into the project. The loading is basically happening by\n         * assigning the individual data entries to the `data` property of the corresponding store.\n         *\n         * @param data\n         */\n        async loadInlineData(data) {\n            const me = this;\n            me.isLoadingInlineData = true;\n            if (data.calendarsData) {\n                me.calendarManagerStore.data = data.calendarsData;\n            }\n            if (data.resourcesData) {\n                me.resourceStore.data = data.resourcesData;\n            }\n            if (data.assignmentsData) {\n                me.assignmentStore.data = data.assignmentsData;\n            }\n            if (data.eventsData) {\n                me.eventStore.data = data.eventsData;\n            }\n            if (data.tasksData) {\n                me.eventStore.data = data.tasksData;\n            }\n            if (data.dependenciesData) {\n                me.dependencyStore.data = data.dependenciesData;\n            }\n            await me.commitLoad();\n            me.isLoadingInlineData = false;\n            return;\n        }\n        //endregion\n        //region Join\n        async commitLoad() {\n            await this.commitAsync();\n            // Might have been destroyed during the async operation above\n            if (!this.isDestroyed)\n                this.trigger('load');\n        }\n        joinStoreRecords(store) {\n            const fn = (record) => {\n                record.setProject(this);\n                record.joinProject();\n            };\n            if (store.rootNode) {\n                store.rootNode.traverse(fn);\n            }\n            else {\n                store.forEach(fn);\n            }\n        }\n        unJoinStoreRecords(store) {\n            const fn = (record) => {\n                record.leaveProject();\n                record.setProject(this);\n            };\n            if (store.rootNode) {\n                store.rootNode.traverse(node => {\n                    // do not unjoin/leave project for the root node, which is the project itself\n                    if (node !== store.rootNode)\n                        fn(node);\n                });\n            }\n            else {\n                store.forEach(fn);\n            }\n        }\n        //endregion\n        //region EventStore\n        resolveStoreAndModelClass(name, config) {\n            // storeClass from supplied config or our properties\n            const storeClass = config?.storeClass || this[`${name}StoreClass`];\n            // modelClass from supplied config\n            let modelClass = config?.modelClass;\n            if (!modelClass) {\n                // or from storeClass.modelClass if customized\n                // @ts-ignore\n                if (this.getDefaultConfiguration()[`${name}ModelClass`] !== storeClass.getDefaultConfiguration().modelClass) {\n                    modelClass = storeClass.getDefaultConfiguration().modelClass;\n                }\n                // and if none of the above, use from our properties\n                else {\n                    modelClass = this[`${name}ModelClass`];\n                }\n            }\n            return { storeClass, modelClass };\n        }\n        setEventStore(eventStore) {\n            this.eventStore = eventStore;\n        }\n        changeEventStore(eventStore, oldStore) {\n            const me = this, { stm } = me;\n            me.detachStore(oldStore);\n            if (!(eventStore instanceof Store)) {\n                const { storeClass, modelClass } = me.resolveStoreAndModelClass('event', eventStore);\n                eventStore = new storeClass(ObjectHelper.assign({\n                    modelClass,\n                    project: me,\n                    stm\n                }, eventStore));\n            }\n            else {\n                eventStore.project = me;\n                stm.addStore(eventStore);\n                me.joinStoreRecords(eventStore);\n            }\n            if (oldStore && stm.hasStore(oldStore)) {\n                stm.removeStore(oldStore);\n                me.unJoinStoreRecords(oldStore);\n                const { assignmentsForRemoval } = oldStore;\n                // remap the assignment\n                assignmentsForRemoval.forEach(assignment => {\n                    const oldEvent = assignment.event;\n                    if (oldEvent) {\n                        const newEvent = eventStore.getById(oldEvent.id);\n                        if (newEvent) {\n                            assignment.event = newEvent;\n                            // keep the assignment\n                            assignmentsForRemoval.delete(assignment);\n                        }\n                    }\n                });\n                oldStore.afterEventRemoval();\n            }\n            eventStore.setProject(me);\n            return eventStore;\n        }\n        updateEventStore(eventStore, oldStore) {\n            this.attachStore(eventStore);\n            this.trigger('eventStoreChange', { store: eventStore });\n        }\n        //endregion\n        //region AssignmentStore\n        setAssignmentStore(assignmentStore) {\n            this.assignmentStore = assignmentStore;\n        }\n        changeAssignmentStore(assignmentStore, oldStore) {\n            const me = this, { stm } = me;\n            me.detachStore(oldStore);\n            if (oldStore && stm.hasStore(oldStore)) {\n                stm.removeStore(oldStore);\n                me.unJoinStoreRecords(oldStore);\n            }\n            if (!(assignmentStore instanceof Store)) {\n                const { storeClass, modelClass } = me.resolveStoreAndModelClass('assignment', assignmentStore);\n                assignmentStore = new storeClass(ObjectHelper.assign({\n                    modelClass,\n                    project: me,\n                    stm\n                }, assignmentStore));\n            }\n            else {\n                assignmentStore.project = me;\n                stm.addStore(assignmentStore);\n                me.joinStoreRecords(assignmentStore);\n            }\n            assignmentStore.setProject(me);\n            return assignmentStore;\n        }\n        updateAssignmentStore(assignmentStore, oldStore) {\n            this.attachStore(assignmentStore);\n            this.trigger('assignmentStoreChange', { store: assignmentStore });\n        }\n        //endregion\n        //region ResourceStore\n        setResourceStore(resourceStore) {\n            this.resourceStore = resourceStore;\n        }\n        changeResourceStore(resourceStore, oldStore) {\n            const me = this, { stm } = me;\n            me.detachStore(oldStore);\n            if (!(resourceStore instanceof Store)) {\n                const { storeClass, modelClass } = me.resolveStoreAndModelClass('resource', resourceStore);\n                resourceStore = new storeClass(ObjectHelper.assign({\n                    modelClass,\n                    project: me,\n                    stm\n                }, resourceStore));\n            }\n            else {\n                resourceStore.project = me;\n                stm.addStore(resourceStore);\n                me.joinStoreRecords(resourceStore);\n            }\n            if (oldStore && stm.hasStore(oldStore)) {\n                stm.removeStore(oldStore);\n                me.unJoinStoreRecords(oldStore);\n                const { assignmentsForRemoval } = oldStore;\n                // remap the assignment\n                assignmentsForRemoval.forEach(assignment => {\n                    const oldResource = assignment.resource;\n                    if (oldResource) {\n                        const newResource = resourceStore.getById(oldResource.id);\n                        if (newResource) {\n                            assignment.resource = newResource;\n                            // keep the assignment\n                            assignmentsForRemoval.delete(assignment);\n                        }\n                    }\n                });\n                oldStore.afterResourceRemoval();\n            }\n            resourceStore.setProject(me);\n            return resourceStore;\n        }\n        updateResourceStore(resourceStore, oldStore) {\n            this.attachStore(resourceStore);\n            this.trigger('resourceStoreChange', { store: resourceStore });\n        }\n        //endregion\n        //region DependencyStore\n        setDependencyStore(dependencyStore) {\n            this.dependencyStore = dependencyStore;\n        }\n        changeDependencyStore(dependencyStore, oldStore) {\n            const me = this;\n            me.detachStore(oldStore);\n            if (!(dependencyStore instanceof Store)) {\n                const { storeClass, modelClass } = me.resolveStoreAndModelClass('dependency', dependencyStore);\n                dependencyStore = new storeClass(ObjectHelper.assign({\n                    modelClass,\n                    project: me,\n                    stm: me.stm\n                }, dependencyStore));\n            }\n            else {\n                dependencyStore.project = me;\n                me.stm.addStore(dependencyStore);\n                me.joinStoreRecords(dependencyStore);\n            }\n            return dependencyStore;\n        }\n        updateDependencyStore(dependencyStore, oldStore) {\n            this.attachStore(dependencyStore);\n            this.trigger('dependencyStoreChange', { store: dependencyStore });\n        }\n        //endregion\n        //region CalendarManagerStore\n        setCalendarManagerStore(calendarManagerStore) {\n            this.calendarManagerStore = calendarManagerStore;\n        }\n        changeCalendarManagerStore(calendarManagerStore, oldStore) {\n            const me = this;\n            me.detachStore(oldStore);\n            if (!(calendarManagerStore instanceof Store)) {\n                // @ts-ignore\n                const storeClass = calendarManagerStore?.storeClass || me.calendarManagerStoreClass;\n                // @ts-ignore\n                const modelClass = calendarManagerStore?.modelClass || storeClass.getDefaultConfiguration().modelClass || me.calendarModelClass;\n                calendarManagerStore = new storeClass(ObjectHelper.assign({\n                    modelClass,\n                    project: me,\n                    stm: me.stm\n                }, calendarManagerStore));\n            }\n            else {\n                me.stm.addStore(calendarManagerStore);\n            }\n            calendarManagerStore.setProject(me);\n            return calendarManagerStore;\n        }\n        updateCalendarManagerStore(calendarManagerStore, oldStore) {\n            this.attachStore(calendarManagerStore);\n            this.trigger('calendarManagerStoreChange', { store: calendarManagerStore });\n        }\n        //endregion\n        //region Calendar\n        get calendar() {\n            return this.$calendar || this.defaultCalendar;\n        }\n        set calendar(calendar) {\n            this.$calendar = calendar;\n        }\n        get effectiveCalendar() {\n            return this.calendar;\n        }\n        //endregion\n        //region Add records\n        async addEvent(event) {\n            this.eventStore.add(event);\n            return this.commitAsync();\n        }\n        async addAssignment(assignment) {\n            this.assignmentStore.add(assignment);\n            return this.commitAsync();\n        }\n        async addResource(resource) {\n            this.resourceStore.add(resource);\n            return this.commitAsync();\n        }\n        async addDependency(dependency) {\n            this.dependencyStore.add(dependency);\n            return this.commitAsync();\n        }\n        //endregion\n        //region Auto commit\n        // Buffer commitAsync using setTimeout. Not using `buffer` on purpose, for performance reasons and to better\n        // mimic how graph does it\n        bufferedCommitAsync() {\n            if (!this.hasPendingAutoCommit) {\n                this.setTimeout({\n                    fn: 'commitAsync',\n                    delay: 10\n                });\n            }\n        }\n        get hasPendingAutoCommit() {\n            return this.hasTimeout('commitAsync');\n        }\n        unScheduleAutoCommit() {\n            this.clearTimeout('commitAsync');\n        }\n        //endregion\n        //region Commit\n        async commitAsync() {\n            if (this.isPerformingCommit)\n                return this.ongoing;\n            return this.ongoing = this.doCommitAsync();\n        }\n        async doCommitAsync() {\n            const me = this;\n            me.isPerformingCommit = true;\n            // Cancel any outstanding commit\n            me.unScheduleAutoCommit();\n            await delay(0);\n            if (!me.isDestroyed) {\n                // Calculate all invalidated records, updates their data silently\n                for (const record of me.$invalidated) {\n                    record.calculateInvalidated();\n                }\n                const { isInitialCommit, silenceInitialCommit } = me;\n                // apply changes silently if this is initial commit and \"silenceInitialCommit\" option is enabled\n                const silenceCommit = isInitialCommit && silenceInitialCommit;\n                // Notify stores that care about commit (internal)\n                me.assignmentStore.onCommitAsync();\n                me.dependencyStore.onCommitAsync();\n                me.isInitialCommitPerformed = true;\n                me.hasLoadedDataToCommit = false;\n                me.isPerformingCommit = false;\n                const stores = [me.assignmentStore, me.dependencyStore, me.eventStore, me.resourceStore, me.calendarManagerStore];\n                stores.forEach(store => store.suspendAutoCommit?.());\n                me.isWritingData = true;\n                // \"Real\" project triggers refresh before data is written back to records\n                me.trigger('refresh', { isInitialCommit, isCalculated: true });\n                // If we are not announcing changes, take a cheaper path\n                if (silenceCommit) {\n                    for (const record of me.$invalidated) {\n                        record.finalizeInvalidated(true);\n                    }\n                }\n                else {\n                    // Two loops looks a bit weird, but needed since editing assignment might affect event etc.\n                    // And we do only want a single update in the end\n                    // 1. Start batches and perform all calculations\n                    for (const record of me.$invalidated) {\n                        record.beginBatch(true);\n                        record.finalizeInvalidated();\n                    }\n                    // 2. End batches, announcing changes (unless initial commit)\n                    for (const record of me.$invalidated) {\n                        record.endBatch(false, true);\n                    }\n                }\n                me.isWritingData = false;\n                me.$invalidated.clear();\n                // Mimic real projects events\n                me.trigger('dataReady');\n                stores.forEach(store => store.resumeAutoCommit?.());\n                // Chrono version triggers \"dataReady\" only if there were no commit rejection\n                // (in case of a rejection it triggers \"commitRejected\" event)\n                // but in both cases it triggers \"commitFinalized\" afterwards\n                me.trigger('commitFinalized');\n                return true;\n            }\n        }\n        async propagateAsync() {\n            return this.commitAsync();\n        }\n        // Called when a record invalidates itself, queues it for calculation\n        invalidate(record) {\n            this.$invalidated.add(record);\n            this.bufferedCommitAsync();\n        }\n        // this does not account for possible scheduling conflicts\n        async isValidDependency() {\n            return true;\n        }\n        //endregion\n        //region STM\n        getStm() {\n            return this.stm;\n        }\n        /**\n         * State tracking manager instance the project relies on\n         */\n        set stm(stm) {\n            stm = this.$stm = new StateTrackingManager(ObjectHelper.assign({\n                disabled: true\n            }, stm));\n            stm.ion({\n                // Propagate on undo/redo\n                restoringStop: async () => {\n                    // Disable STM meanwhile to not pick it up as a new STM transaction\n                    stm.disable();\n                    await this.commitAsync();\n                    if (!this.isDestroyed) {\n                        stm.enable();\n                        this.trigger('stateRestoringDone');\n                    }\n                }\n            });\n        }\n        get stm() {\n            return this.$stm;\n        }\n        //endregion\n        isEngineReady() {\n            return !this.hasPendingAutoCommit && !this.isPerformingCommit && this.isInitialCommitPerformed;\n        }\n    }\n    //region Config\n    SchedulerCoreProjectMixin.applyConfigs = true;\n    return SchedulerCoreProjectMixin;\n}) {\n}\n","import TimeSpan from '../TimeSpan.js';\nimport TimeZoneHelper from '../../../Core/helper/TimeZoneHelper.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Scheduler/model/mixin/TimeZonedDatesMixin\n */\n\nconst dateFieldsToConvert = {\n    startDate      : 1,\n    endDate        : 1,\n    constraintDate : 1,\n    deadlineDate   : 1\n};\n\n/**\n * This mixin class overrides default Model functionality to provide support for time zone converted dates\n * @mixin\n * @mixinbase TimeSpan\n */\nexport default Target => class TimeZonedDatesMixin extends (Target || TimeSpan) {\n\n    static $name = 'TimeZonedDatesMixin';\n\n    static fields  = [\n        /**\n         * The current timeZone this record is converted to. Used internally to keep track of time zone conversions.\n         *\n         * Can also be used to create a new record with dates in a specific non-local timezone. That is useful for\n         * example when replacing a store dataset. That would be interpreted as a new load, and all dates would be\n         * converted to the configured timezone.\n         *\n         * For more information about timezone conversion, se {@link Scheduler.model.ProjectModel#config-timeZone}.\n         *\n         * This field will not {@link Core.data.field.DataField#config-persist} by default.\n         *\n         * @field {String|Number} timeZone\n         * @category Advanced\n         */\n        {\n            name    : 'timeZone',\n            persist : false\n        }\n    ];\n\n    get timeZone() {\n        return this.getData('timeZone');\n    }\n\n    set timeZone(timeZone) {\n        this.setData('timeZone', timeZone);\n    }\n\n    setLocalDate(field, date) {\n        this.set(field, this.timeZone != null ? TimeZoneHelper.toTimeZone(date, this.timeZone) : date, true);\n        // Need to set data to fool engine that the dates havn't changed\n        this.data[field] = this[field];\n    }\n\n    getLocalDate(field) {\n        if (this.timeZone != null && this[field]) {\n            return TimeZoneHelper.fromTimeZone(this[field], this.timeZone);\n        }\n        return this[field];\n    }\n\n    applyChangeset(rawChanges) {\n        // When a sync response arrives from backend, the data will need to be converted to time zone before applied.\n        if (this.timeZone != null) {\n            for (const field in dateFieldsToConvert) {\n                if (rawChanges[field]) {\n                    this.setLocalDate(field, new Date(rawChanges[field]));\n                    delete rawChanges[field];\n                }\n            }\n        }\n        return super.applyChangeset(...arguments);\n    }\n\n    getFieldPersistentValue(field) {\n        if (this.timeZone != null) {\n            const fieldName = field?.field ?? field?.name ?? field;\n\n            // Used when saving/syncing. Returns local system dates\n            if (dateFieldsToConvert[fieldName]) {\n                return this.getLocalDate(fieldName);\n            }\n        }\n\n        return super.getFieldPersistentValue(field);\n    }\n\n    // Converts current record into a timeZone\n    convertToTimeZone(timeZone) {\n        const\n            me            = this,\n            metaModified  = { ...me.meta.modified },\n            convertFields = { ...dateFieldsToConvert };\n\n        // Do not convert start and end dates on task unless manually scheduled\n        if (me.isTask && !me.manuallyScheduled) {\n            delete convertFields.startDate;\n            delete convertFields.endDate;\n        }\n\n        // Collect values\n        for (const field in convertFields) {\n            // Only convert if field has value\n            if (me[field] != null) {\n                convertFields[field] = me[field];\n\n                // If already converted, restore to local system time zone\n                if (me.timeZone != null) {\n                    convertFields[field] = me.getLocalDate(field);\n\n                    // Restore value in meta modified as well\n                    if (metaModified[field]) {\n                        metaModified[field] = TimeZoneHelper.fromTimeZone(metaModified[field], me.timeZone);\n                    }\n                }\n            }\n            else {\n                delete convertFields[field];\n            }\n        }\n\n        // Change time zone\n        me.timeZone = timeZone;\n\n        // Set values\n        for (const field in convertFields) {\n            // Convert and set field date silently\n            me.setLocalDate(field, convertFields[field], false);\n            convertFields[field] = 1; // For clearing changes below\n\n            // Convert value in meta modified as well\n            if (me.timeZone != null && metaModified[field]) {\n                metaModified[field] = TimeZoneHelper.toTimeZone(metaModified[field], me.timeZone);\n            }\n        }\n\n        // Clear modification metadata\n        me.clearChanges(true, true, convertFields);\n\n        // If old modification metadata, restore them to record and store\n        if (!ObjectHelper.isEmpty(metaModified)) {\n            me.meta.modified = metaModified;\n            me.stores.forEach(store => store.modified.add(me));\n        }\n    }\n};\n","import Model from '../../Core/data/Model.js';\nimport TimeZonedDatesMixin from './mixin/TimeZonedDatesMixin.js';\nimport DomClassList from '../../Core/helper/util/DomClassList.js';\nimport DH from '../../Core/helper/DateHelper.js';\nimport VersionHelper from '../../Core/helper/VersionHelper.js';\nimport BrowserHelper from '../../Core/helper/BrowserHelper.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport Duration from '../../Core/data/Duration.js';\n\n/**\n * @module Scheduler/model/TimeSpan\n */\n\n/**\n * This class represent a simple date range. It is being used in various subclasses and plugins which operate on date ranges.\n *\n * It's a subclass of {@link Core.data.Model}.\n * Please refer to documentation of those classes to become familiar with the base interface of this class.\n *\n * A TimeSpan has the following fields:\n *\n * - {@link #field-startDate}    - start date of the task in the ISO 8601 format\n * - {@link #field-endDate}      - end date of the task in the ISO 8601 format (not inclusive)\n * - {@link #field-duration}     - duration, time between start date and end date\n * - {@link #field-durationUnit} - unit used to express the duration\n * - {@link #field-name}         - an optional name of the range\n * - {@link #field-cls}          - an optional CSS class to be associated with the range.\n *\n * The data source of any field can be customized in the subclass. Please refer to {@link Core.data.Model} for details. To specify\n * another date format:\n *\n * ```javascript\n * class MyTimeSpan extends TimeSpan {\n *   static get fields() {\n *      { name: 'startDate', type: 'date', dateFormat: 'DD/MM/YY' }\n *   }\n * }\n * ```\n *\n * @extends Core/data/Model\n * @mixes Scheduler/model/mixin/TimeZonedDatesMixin\n */\nexport default class TimeSpan extends Model.mixin(TimeZonedDatesMixin) {\n\n    static get $name() {\n        return 'TimeSpan';\n    }\n\n    //region Field definitions\n\n    static get fields() {\n        return [\n            /**\n             * The start date of a time span (or Event / Task).\n             *\n             * Uses {@link Core/helper/DateHelper#property-defaultFormat-static DateHelper.defaultFormat} to convert a\n             * supplied string to a Date. To specify another format, either change that setting or subclass TimeSpan and\n             * change the dateFormat for this field.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * @field {Date} startDate\n             * @accepts {String|Date}\n             * @category Scheduling\n             */\n            {\n                name : 'startDate',\n                type : 'date'\n            },\n\n            /**\n             * The end date of a time span (or Event / Task).\n             *\n             * Uses {@link Core/helper/DateHelper#property-defaultFormat-static DateHelper.defaultFormat} to convert a\n             * supplied string to a Date. To specify another format, either change that setting or subclass TimeSpan and\n             * change the dateFormat for this field.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * @field {Date} endDate\n             * @accepts {String|Date}\n             * @category Scheduling\n             */\n            {\n                name : 'endDate',\n                type : 'date'\n            },\n\n            /**\n             * The numeric part of the timespan's duration (the number of units).\n             * @field {Number} duration\n             * @category Scheduling\n             */\n            {\n                name      : 'duration',\n                type      : 'number',\n                allowNull : true,\n                internal  : true\n            },\n\n            /**\n             * The unit part of the TimeSpan duration, defaults to \"d\" (days). Valid values are:\n             *\n             * - \"millisecond\" - Milliseconds\n             * - \"second\" - Seconds\n             * - \"minute\" - Minutes\n             * - \"hour\" - Hours\n             * - \"day\" - Days\n             * - \"week\" - Weeks\n             * - \"month\" - Months\n             * - \"quarter\" - Quarters\n             * - \"year\"- Years\n             *\n             * This field is readonly after creation, to change durationUnit use #setDuration().\n             * @field {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} durationUnit\n             * @category Scheduling\n             */\n            {\n                type         : 'durationunit',\n                name         : 'durationUnit',\n                defaultValue : 'd',\n                internal     : true\n            },\n\n            /**\n             * Calculated field which encapsulates the duration's magnitude and unit. This field will not be persisted,\n             * setting it will update the {@link #field-duration} and {@link #field-durationUnit} fields.\n             *\n             * @field {DurationConfig|Core.data.Duration} fullDuration\n             * @category Scheduling\n             */\n            {\n                name    : 'fullDuration',\n                persist : false,\n                column  : {\n                    type : 'duration'\n                },\n                useProp : true\n            },\n\n            /**\n             * An encapsulation of the CSS classes to add to the rendered time span element.\n             *\n             * Always returns a {@link Core.helper.util.DomClassList}, but may still be treated as a string. For\n             * granular control of adding and removing individual classes, it is recommended to use the\n             * {@link Core.helper.util.DomClassList} API.\n             *\n             * @field {Core.helper.util.DomClassList} cls\n             * @accepts {Core.helper.util.DomClassList|String|String[]|Object}\n             *\n             * @category Styling\n             */\n            {\n                name         : 'cls',\n                defaultValue : '',\n                internal     : true\n            },\n\n            /**\n             * CSS class specifying an icon to apply to the rendered time span element.\n             * **Note**: In case event is a milestone, using `iconCls` with dependency feature might slightly decrease\n             * performance because feature will refer to the DOM to get exact size of the element.\n             * @field {String} iconCls\n             * @category Styling\n             */\n            {\n                name     : 'iconCls',\n                internal : true\n            },\n\n            /**\n             * A CSS style string (applied to `style.cssText`) or object (applied to `style`)\n             * ```\n             * record.style = 'color: red;font-weight: 800';\n             * ```\n             *\n             * @field {String} style\n             * @category Styling\n             */\n            {\n                name     : 'style',\n                type     : 'object',\n                internal : true\n            },\n\n            /**\n             * The name of the time span (or Event / Task)\n             * @field {String} name\n             * @category Common\n             */\n            {\n                name         : 'name',\n                type         : 'string',\n                defaultValue : ''\n            }\n        ];\n    }\n\n    //endregion\n\n    //region Init\n\n    construct(data, ...args) {\n        // fullDuration is a \"calculated field\", but convenient to allow supplying it in the data\n        if (data?.fullDuration) {\n            const { magnitude, unit } = data.fullDuration;\n            data.duration = magnitude;\n            data.unit = unit;\n            delete data.fullDuration;\n        }\n\n        super.construct(data, ...args);\n\n        this.normalize();\n    }\n\n    /**\n     * Returns the event store this event is part of, if any.\n     *\n     * @property {Scheduler.data.EventStore}\n     * @readonly\n     * @category Misc\n     */\n    get eventStore() {\n        const me = this;\n\n        // If we are an occurrence, return our base recurring event's store\n        if (me.isOccurrence) {\n            return me.recurringTimeSpan.eventStore;\n        }\n        if (!me._eventStore) {\n            me._eventStore = me.stores?.find(s => s.isEventStore);\n        }\n        return me._eventStore;\n    }\n\n    normalize() {\n        const\n            me                                             = this,\n            { startDate, endDate, duration, durationUnit } = me,\n            hasDuration                                    = duration != null;\n\n        // need to calculate duration (checking first since seemed most likely to happen)\n        if (startDate && endDate && !hasDuration) {\n            me.setData('duration', DH.diff(startDate, endDate, durationUnit, true));\n        }\n        // need to calculate endDate?\n        else if (startDate && !endDate && hasDuration) {\n            me.setData('endDate', DH.add(startDate, duration, durationUnit));\n        }\n        // need to calculate startDate\n        else if (!startDate && endDate && hasDuration) {\n            me.setData('startDate', DH.add(endDate, -duration, durationUnit));\n        }\n    }\n\n    //endregion\n\n    //region Getters & Setters\n\n    updateInternalCls(cls) {\n        if (this._cls) {\n            this._cls.value = cls;\n        }\n        else {\n            this._cls = new DomClassList(cls);\n        }\n    }\n\n    set internalCls(cls) {\n        this.updateInternalCls(cls);\n        this.set('cls', this._cls.value);\n    }\n\n    get internalCls() {\n        const { cls } = this;\n        // `cls` getter can be overriden so return `cls` value if it is DomClassList or assign it to `this._cls`\n        if (cls?.isDomClassList) {\n            return cls;\n        }\n        this.internalCls = cls;\n        return this._cls;\n    }\n\n    get cls() {\n        if (!this._cls) {\n            this._cls = new DomClassList(super.get('cls'));\n        }\n        return this._cls;\n    }\n\n    set cls(cls) {\n        this.internalCls = cls;\n    }\n\n    get startDate() {\n        return this.get('startDate');\n    }\n\n    set startDate(date) {\n        this.setStartDate(date);\n    }\n\n    get endDate() {\n        return this.get('endDate');\n    }\n\n    set endDate(date) {\n        this.setEndDate(date);\n    }\n\n    // <remove-on-release>\n    // TODO: This can go away if Calendar would avoid rendering prior to the engine being ready (i.e., having calculated\n    //  all endDate values)\n    // </remove-on-release>\n    get endingDate() {\n        const\n            me = this,\n            {\n                endDate,\n                startDate\n            }  = me;\n\n        if (endDate) {\n            // Special case of startDate===endDate for allDay event:\n            // if (Number(endDate) === Number(startDate) && me.allDay) {\n            //     return DH.add(startDate, 1, 'd');\n            // }\n            // Nope... the above works fine except when the day start time is shifted. In this case we want the\n            // event to appear as \"all day\" on the shifted day, but the above will push the endingDate beyond the\n            // end of the shifted day.\n\n            return endDate;\n        }\n\n        return DH.add(startDate, me.duration, me.durationUnit);\n    }\n\n    get duration() {\n        return this.get('duration');\n    }\n\n    set duration(duration) {\n        this.setDuration(duration, this.durationUnit);\n    }\n\n    get durationUnit() {\n        return this.get('durationUnit');\n    }\n\n    /**\n     * Sets duration and durationUnit in one go. Only allowed way to change durationUnit, the durationUnit field is\n     * readonly after creation\n     * @param {Number} duration Duration value\n     * @param {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} durationUnit Unit for\n     * specified duration value, see {@link #field-durationUnit} for valid values\n     * @category Scheduling\n     */\n    setDuration(duration, durationUnit = this.durationUnit) {\n        // Must be a number\n        duration = parseFloat(duration);\n\n        this.set({\n            duration,\n            durationUnit,\n            ...this.updateDatesFromDuration(duration, durationUnit)\n        });\n    }\n\n    updateDatesFromDuration(magnitude, unit, startDate = this.startDate, endDate = this.endDate) {\n        const result = {};\n\n        if (startDate) {\n            result.endDate = DH.add(startDate, magnitude, unit);\n        }\n        else if (endDate) {\n            result.startDate = DH.add(endDate, -magnitude, unit);\n        }\n\n        return result;\n    }\n\n    /**\n     * Returns duration of the event in given unit. This is a wrapper for {@link Core.helper.DateHelper#function-getDurationInUnit-static}\n     * @param {'ms'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} unit\n     * @param {Boolean} [doNotRound]\n     * @private\n     * @returns {Number}\n     */\n    getDurationInUnit(unit, doNotRound) {\n        const me = this;\n\n        if (me.startDate && me.endDate) {\n            return DH.getDurationInUnit(me.startDate, me.endDate, unit, doNotRound);\n        }\n        else {\n            return DH.as(unit, me.duration, me.durationUnit);\n        }\n    }\n\n    get fullDuration() {\n        // Used for formatting during export\n        return new Duration({\n            unit      : this.durationUnit,\n            magnitude : this.duration\n        });\n    }\n\n    set fullDuration(duration) {\n        if (typeof duration === 'string') {\n            duration = DH.parseDuration(duration, true, this.durationUnit);\n        }\n\n        this.setDuration(duration.magnitude, duration.unit);\n    }\n\n    /**\n     * Sets the range start date\n     *\n     * @param {Date} date The new start date\n     * @param {Boolean} keepDuration Pass `true` to keep the duration of the task (\"move\" the event), `false` to change the duration (\"resize\" the event).\n     * Defaults to `true`\n     * @category Scheduling\n     */\n    setStartDate(date, keepDuration = true) {\n        const\n            me    = this,\n            toSet = {\n                startDate : date\n            };\n\n        if (date) {\n            let calcEndDate;\n\n            if (keepDuration) {\n                calcEndDate = me.duration != null;\n            }\n            else {\n                if (me.endDate) {\n                    toSet.duration = DH.diff(date, me.endDate, me.durationUnit, true);\n\n                    if (toSet.duration < 0) throw new Error('Negative duration');\n                }\n                else {\n                    calcEndDate = this.duration != null;\n                }\n            }\n\n            if (calcEndDate) {\n                // Use hours to set end date in order to correctly process DST crossings\n                toSet.endDate = DH.add(date, me.getDurationInUnit('h'), 'h');\n            }\n        }\n        else {\n            toSet.duration = null;\n        }\n\n        me.set(toSet);\n    }\n\n    /**\n     * Sets the range end date\n     *\n     * @param {Date} date The new end date\n     * @param {Boolean} keepDuration Pass `true` to keep the duration of the task (\"move\" the event), `false` to change the duration (\"resize\" the event).\n     * Defaults to `false`\n     * @category Scheduling\n     */\n    setEndDate(date, keepDuration = false) {\n        const\n            me    = this,\n            toSet = {\n                endDate : date\n            };\n\n        if (date) {\n            let calcStartDate;\n\n            if (keepDuration === true) {\n                calcStartDate = me.duration != null;\n            }\n            else {\n                if (me.startDate) {\n                    toSet.duration = DH.diff(me.startDate, date, me.durationUnit, true);\n\n                    if (toSet.duration < 0) throw new Error('Negative duration');\n                }\n                else {\n                    calcStartDate = this.duration != null;\n                }\n            }\n\n            if (calcStartDate) {\n                toSet.startDate = DH.add(date, -me.duration, me.durationUnit);\n            }\n        }\n\n        me.set(toSet);\n    }\n\n    /**\n     * Sets the event start and end dates\n     *\n     * @param {Date} start The new start date\n     * @param {Date} end The new end date\n     * @param {Boolean} [silent] Pass `true` to not trigger events\n     * @category Scheduling\n     */\n    setStartEndDate(start, end, silent) {\n        this.set({\n            startDate : start,\n            endDate   : end\n        }, null, silent);\n    }\n\n    /**\n     * Returns an array of dates in this range. If the range starts/ends not at the beginning of day, the whole day will be included.\n     * @readonly\n     * @property {Date[]}\n     * @category Scheduling\n     */\n    get dates() {\n        const\n            dates     = [],\n            startDate = DH.startOf(this.startDate, 'day'),\n            endDate   = this.endDate;\n\n        for (let date = startDate; date < endDate; date = DH.add(date, 1, 'day')) {\n            dates.push(date);\n        }\n\n        return dates;\n    }\n\n    get startDateMS() {\n        return (this.batching && this.hasBatchedChange('startDate') ? this.get('startDate') : this.startDate)?.getTime();\n    }\n\n    get endDateMS() {\n        return (this.batching && this.hasBatchedChange('endDate') ? this.get('endDate') : this.endDate)?.getTime();\n    }\n\n    /**\n     * Returns the duration of this Event in milliseconds.\n     * @readonly\n     * @property {Number}\n     * @category Scheduling\n     */\n    get durationMS() {\n        const { endDateMS, startDateMS } = this;\n\n        if (endDateMS && startDateMS) {\n            return endDateMS - startDateMS;\n        }\n        else {\n            return DH.asMilliseconds(this.duration || 0, this.durationUnit);\n        }\n    }\n\n    /**\n     * Returns true if record is a milestone.\n     * @readonly\n     * @property {Boolean}\n     * @category Scheduling\n     */\n    get isMilestone() {\n        return this.duration === 0;\n    }\n\n    inSetNormalize(field) {\n        if (typeof field !== 'string') {\n            // If user is updating multiple properties in one go using an object, we help out\n            // by filling out missing schedule related data\n\n            let { startDate, endDate, duration, durationUnit = this.durationUnit } = field;\n\n            // Conversion is usually handled in inSet, but we are normalizing prior to that and have to handle it here\n            if (typeof startDate === 'string') {\n                startDate = this.getFieldDefinition('startDate').convert(startDate);\n            }\n\n            if (typeof endDate === 'string') {\n                endDate = this.getFieldDefinition('endDate').convert(endDate);\n            }\n\n            if ('duration' in field) {\n                if (startDate && !endDate) {\n                    endDate = DH.add(startDate, duration, durationUnit, true, true);\n                }\n\n                if (!startDate && endDate) {\n                    startDate = DH.add(endDate, -duration, durationUnit, true, true);\n                }\n            }\n            else if (startDate && endDate) {\n                // Calculate duration in hours and covert to target duration unit in order to avoid extra DST conversion\n                duration = DH.as(durationUnit, DH.diff(startDate, endDate, 'h', true), 'h');\n            }\n\n            // A framework (React tested) may freeze passed field object, so clone it in that case\n            const fieldOrClone = Object.isFrozen(field) ? ObjectHelper.clone(field) : field;\n            startDate && (fieldOrClone.startDate = startDate);\n            endDate && (fieldOrClone.endDate = endDate);\n            duration != null && (fieldOrClone.duration = duration);\n\n            return fieldOrClone;\n        }\n    }\n\n    fieldToKeys(field, value) {\n        const result = super.fieldToKeys(field, value);\n\n        // Replace fullDuration with duration and durationUnit in calls to `set()`\n        if (result.fullDuration) {\n            const { magnitude, unit } = result.fullDuration;\n            result.duration     = magnitude;\n            result.durationUnit = unit;\n        }\n\n        // Engine handles this for event & tasks\n        if (!this.isEventModel && !this.isTaskModel) {\n            // Recalculate start/end date if duration is set with only one of them\n            if (('duration' in result || result.durationUnit) && !(result.startDate && result.endDate)) {\n                Object.assign(\n                    result,\n                    this.updateDatesFromDuration(\n                        result.duration ?? this.duration,\n                        result.durationUnit ?? this.durationUnit,\n                        result.startDate,\n                        result.endDate\n                    )\n                );\n            }\n        }\n\n        return result;\n    }\n\n    inSet(field, value, silent, fromRelationUpdate, skipAccessors, validOnly) {\n        if (!skipAccessors) {\n            field = this.inSetNormalize(field) || field;\n        }\n\n        return super.inSet(field, value, silent, fromRelationUpdate, skipAccessors, validOnly);\n    }\n\n    // Cls requires special handling since it is converted to a DomClassList\n    applyValue(useProp, key, value, skipAccessors, field) {\n        if (key === 'cls') {\n            this.updateInternalCls(value);\n        }\n\n        super.applyValue(useProp, key, value, skipAccessors, field);\n    }\n\n    //endregion\n\n    //region Iteration\n\n    /**\n     * Iterates over the {@link #property-dates}\n     * @param {Function} func The function to call for each date\n     * @param {Object} thisObj `this` reference for the function\n     * @category Scheduling\n     */\n    forEachDate(func, thisObj) {\n        return this.dates.forEach(func.bind(thisObj));\n    }\n\n    //endregion\n\n    /**\n     * Checks if the range record has both start and end dates set and start <= end\n     *\n     * @property {Boolean}\n     * @category Scheduling\n     */\n    get isScheduled() {\n        const { startDateMS, endDateMS } = this;\n\n        return endDateMS - startDateMS >= 0;\n    }\n\n    // Simple check if end date is greater than start date\n    get isValid() {\n        const { startDate, endDate } = this;\n        return !startDate || !endDate || (endDate - startDate >= 0);\n    }\n\n    /**\n     * Shift the dates for the date range by the passed amount and unit\n     * @param {'ms'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} unit The unit to shift by, see {@link Core.helper.DateHelper}\n     * for more information on valid formats.\n     * @param {Number} amount The amount to shift\n     */\n    shift(amount, unit = this.durationUnit) {\n        // <remove-on-release>\n        // TODO: REMOVE After 6.0\n        // </remove-on-release>\n        if (typeof amount === 'string') {\n            const u = amount;\n\n            amount = unit;\n            unit = u;\n        }\n\n        return this.setStartDate(DH.add(this.startDate, amount, unit, true), true);\n    }\n\n    /**\n     * Returns the WBS code of this model (e.g '2.1.3'). Only relevant when part of a tree store, as in the Gantt chart.\n     * @property {String}\n     * @category Parent & children\n     */\n    get wbsCode() {\n        return this._wbsCode || this.indexPath.join('.');\n    }\n\n    set wbsCode(value) {\n        // wbsCode needs to be writable to interop w/TaskModel and Baselines which copy this field value\n        this._wbsCode = value;\n    }\n\n    fullCopy() {\n        //NOT PORTED\n\n        return this.copy.apply(this, arguments);\n    }\n\n    intersects(timeSpan) {\n        return this.intersectsRange(timeSpan.startDate, timeSpan.endDate);\n    }\n\n    intersectsRange(start, end) {\n        const\n            myStart = this.startDate,\n            myEnd   = this.endDate;\n\n        return myStart && myEnd && DH.intersectSpans(myStart, myEnd, start, end);\n    }\n\n    /**\n     * Splits this event into two pieces at the desired position.\n     *\n     * @param {Number|String} splitPoint The duration point at which to split this event.\n     *\n     * If less then `1`, this indicates the relative position at which it will be split.\n     * 0.5 means cut it in half.\n     *\n     * If greater than `1`, this indicates the new duration in the current duration units of this event before the split.\n     *\n     * If this is a string, it will be a duration description as described in\n     * {@link Core.helper.DateHelper#function-parseDuration-static}, for example `'15 min'`\n     *\n     * @returns {Scheduler.model.TimeSpan} The newly created split section of the timespan\n     * @category Scheduling\n     */\n    split(splitPoint = 0.5) {\n        const\n            me             = this,\n            clone          = me.copy(),\n            {\n                fullDuration,\n                eventStore,\n                assignmentStore\n            }              = me,\n            oldDuration    = new Duration(fullDuration),\n            cloneDuration  = new Duration(fullDuration);\n\n        let ownNewDuration,\n            unitsChanged;\n\n        if (typeof splitPoint === 'string') {\n            ownNewDuration = new Duration(splitPoint);\n\n            // New duration specified in same time units as current duration\n            if (ownNewDuration.unit === oldDuration.unit) {\n                cloneDuration.magnitude -= ownNewDuration.magnitude;\n            }\n            // New duration is in different units, so convert clone's duration to match\n            else {\n                cloneDuration.magnitude = DH.as(ownNewDuration.unit, oldDuration) - ownNewDuration.magnitude;\n                cloneDuration.unit = ownNewDuration.unit;\n                unitsChanged = true;\n            }\n        }\n        else {\n            ownNewDuration = new Duration(splitPoint > 1 ? splitPoint : me.duration * splitPoint, me.durationUnit);\n            cloneDuration.magnitude -= ownNewDuration.magnitude;\n        }\n\n        clone.startDate = DH.add(me.startDate, ownNewDuration.magnitude, ownNewDuration.unit);\n\n        if (unitsChanged) {\n            clone.fullDuration = cloneDuration;\n            me.fullDuration = ownNewDuration;\n        }\n        else {\n            clone.duration = cloneDuration.magnitude;\n            me.duration = ownNewDuration.magnitude;\n        }\n\n        if (eventStore) {\n            eventStore.add(clone);\n\n            if (assignmentStore && !eventStore.usesSingleAssignment) {\n                assignmentStore.add(\n                    me.assignments.map(assignment => {\n                        const clonedData = Object.assign({}, assignment.data, {\n                            eventId  : clone.id,\n                            // From engine\n                            event    : null,\n                            resource : null\n                        });\n                        delete clonedData.id;\n\n                        return clonedData;\n                    })\n                );\n            }\n        }\n\n        return clone;\n    }\n\n    toICSString(icsEventConfig = {}) {\n        if (!this.isScheduled) {\n            return '';\n        }\n\n        const\n            {\n                startDate,\n                endDate\n            }         = this,\n            // To allow testing using a fixed timestamp value\n            timestamp = icsEventConfig.DTSTAMP || DH.format(new Date(), 'uu');\n\n        delete icsEventConfig.DTSTAMP;\n\n        let startEnd = {};\n\n        if (this.allDay) {\n            startEnd = {\n                'DTSTART;VALUE=DATE' : DH.format(startDate, 'u'),\n                'DTEND;VALUE=DATE'   : DH.format(endDate, 'u')\n            };\n        }\n        else {\n            startEnd = {\n                DTSTART : DH.format(startDate, 'uu'),\n                DTEND   : DH.format(endDate, 'uu')\n            };\n        }\n\n        const\n            version       = (VersionHelper.scheduler && VersionHelper.getVersion('scheduler')) || (VersionHelper.calendar && VersionHelper.getVersion('calendar')) || '',\n            icsWrapConfig = {\n                BEGIN    : 'VCALENDAR',\n                VERSION  : '2.0',\n                CALSCALE : 'GREGORIAN',\n                PRODID   : `-//Bryntum AB//Bryntum Scheduler ${version} //EN`,\n                END      : 'VCALENDAR'\n            },\n            eventConfig   = {\n                BEGIN   : 'VEVENT',\n                UID     : this.id + '@bryntum.com',\n                CLASS   : 'PUBLIC',\n                SUMMARY : this.name,\n                DTSTAMP : timestamp,\n                ...startEnd,\n                ...(this.recurrenceRule ? { RRULE : this.recurrenceRule } : {}),\n                ...icsEventConfig,\n                END     : 'VEVENT'\n            },\n            icsItems      = Object.keys(icsWrapConfig).map(key => `${key}:${icsWrapConfig[key]}`),\n            eventItems    = Object.keys(eventConfig).map(key => `${key}:${eventConfig[key]}`);\n\n        // Inject event details before the closing VCALENDAR entry\n        icsItems.splice(icsItems.length - 1, 0, ...eventItems);\n\n        return icsItems.join('\\n');\n    }\n\n    /**\n     * Triggers a download of this time span in ICS format (for import in Outlook etc.)\n     *\n     * ```javascript\n     * timeSpan.downloadAsICS({\n     *      LOCATION : timeSpan.location\n     *  });\n     * ```\n     * @param {Object<String,String>} [icsEventConfig] A config object with properties to be added in to `BEGIN:VEVENT`\n     * section of the exported event.\n     * @category Misc\n     */\n    exportToICS(icsEventConfig) {\n        if (this.isScheduled) {\n            const blob = new Blob([this.toICSString(icsEventConfig)], { type : 'text/calendar' });\n\n            BrowserHelper.downloadBlob(blob, (this.name || 'Event') + '.ics');\n        }\n    }\n\n    /**\n     * Defines if the given event field should be manually editable in UI.\n     * You can override this method to provide your own logic.\n     *\n     * By default the method defines all the event fields as editable.\n     *\n     * @param {String} fieldName Name of the field\n     * @returns {Boolean} Returns `true` if the field is editable, `false` if it is not and `undefined` if the model has no such field.\n     */\n    isEditable(fieldName) {\n        // return undefined for unknown fields\n        return this.getFieldDefinition(fieldName) ? true : undefined;\n    }\n\n    isFieldModified(fieldName) {\n        if (fieldName === 'fullDuration') {\n            return super.isFieldModified('duration') || super.isFieldModified('durationUnit');\n        }\n        return super.isFieldModified(fieldName);\n    }\n}\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Scheduler/data/mixin/ResourceStoreMixin\n */\n\n/**\n * This is a mixin for the ResourceStore functionality. It is consumed by the {@link Scheduler.data.ResourceStore}.\n *\n * @mixin\n */\nexport default Target => class ResourceStoreMixin extends (Target || Base) {\n    static get $name() {\n        return 'ResourceStoreMixin';\n    }\n\n    get isResourceStore() {\n        return true;\n    }\n\n    /**\n     * Add resources to the store.\n     *\n     * NOTE: References (events, assignments) on the resources are determined async by a calculation engine. Thus they\n     * cannot be directly accessed after using this function.\n     *\n     * For example:\n     *\n     * ```javascript\n     * const [resource] = resourceStore.add({ id });\n     * // resource.events is not yet available\n     * ```\n     *\n     * To guarantee references are set up, wait for calculations for finish:\n     *\n     * ```javascript\n     * const [resource] = resourceStore.add({ id });\n     * await resourceStore.project.commitAsync();\n     * // resource.events is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * Alternatively use `addAsync()` instead:\n     *\n     * ```javascript\n     * const [resource] = await resourceStore.addAsync({ id });\n     * // resource.events is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * @param {Scheduler.model.ResourceModel|Scheduler.model.ResourceModel[]|ResourceModelConfig|ResourceModelConfig[]} records\n     * Array of records/data or a single record/data to add to store\n     * @param {Boolean} [silent] Specify `true` to suppress events\n     * @returns {Scheduler.model.ResourceModel[]} Added records\n     * @function add\n     * @category CRUD\n     */\n\n    /**\n     * Add resources to the store and triggers calculations directly after. Await this function to have up to date\n     * references on the added resources.\n     *\n     * ```javascript\n     * const [resource] = await resourceStore.addAsync({ id });\n     * // resource.events is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * @param {Scheduler.model.ResourceModel|Scheduler.model.ResourceModel[]|ResourceModelConfig|ResourceModelConfig[]} records\n     * Array of records/data or a single record/data to add to store\n     * @param {Boolean} [silent] Specify `true` to suppress events\n     * @returns {Scheduler.model.ResourceModel[]} Added records\n     * @function addAsync\n     * @category CRUD\n     * @async\n     */\n\n    /**\n     * Applies a new dataset to the ResourceStore. Use it to plug externally fetched data into the store.\n     *\n     * NOTE: References (events, assignments) on the resources are determined async by a calculation engine. Thus\n     * they cannot be directly accessed after assigning the new dataset.\n     *\n     * For example:\n     *\n     * ```javascript\n     * resourceStore.data = [{ id }];\n     * // resourceStore.first.events is not yet available\n     * ```\n     *\n     * To guarantee references are available, wait for calculations for finish:\n     *\n     * ```javascript\n     * resourceStore.data = [{ id }];\n     * await resourceStore.project.commitAsync();\n     * // resourceStore.first.events is available\n     * ```\n     *\n     * Alternatively use `loadDataAsync()` instead:\n     *\n     * ```javascript\n     * await resourceStore.loadDataAsync([{ id }]);\n     * // resourceStore.first.events is available\n     * ```\n     *\n     * @member {ResourceModelConfig[]} data\n     * @category Records\n     */\n\n    /**\n     * Applies a new dataset to the ResourceStore and triggers calculations directly after. Use it to plug externally\n     * fetched data into the store.\n     *\n     * ```javascript\n     * await resourceStore.loadDataAsync([{ id }]);\n     * // resourceStore.first.events is available\n     * ```\n     *\n     * @param {ResourceModelConfig[]} data Array of ResourceModel data objects\n     * @function loadDataAsync\n     * @category CRUD\n     * @async\n     */\n\n    static get defaultConfig() {\n        return {\n            /**\n             * CrudManager must load stores in the correct order. Lowest first.\n             * @private\n             */\n            loadPriority : 200,\n            /**\n             * CrudManager must sync stores in the correct order. Lowest first.\n             * @private\n             */\n            syncPriority : 100,\n            storeId      : 'resources',\n            autoTree     : true\n        };\n    }\n\n    construct(config) {\n        super.construct(config);\n\n        if (!this.modelClass.isResourceModel) {\n            throw new Error('Model for ResourceStore must subclass ResourceModel');\n        }\n    }\n\n    removeAll() {\n        const result = super.removeAll(...arguments);\n\n        // Removing all resources removes all assignments\n        result && this.assignmentStore.removeAll();\n\n        return result;\n    }\n\n    // Apply id changes also to assignments (used to be handled automatically by relations earlier, but engine does not\n    // care about ids so needed now)\n    // problems:\n    // 1. orientation/HorizontalRendering listens to assignment store changes and is trying to refresh view\n    // When we update resource id on assignment, listener will be invoked and view will try to refresh. And it will\n    // fail, because row is not updated yet. Flag is raised on resource store to make HorizontalRendering to skip\n    // refreshing view in this particular case of resource id changing\n    onRecordIdChange({ record, oldValue, value }) {\n        super.onRecordIdChange({ record, oldValue, value });\n\n        if (record.isFieldModified('id')) {\n            this.isChangingId = true;\n\n            record.updateAssignmentResourceIds();\n\n            this.isChangingId = false;\n        }\n    }\n\n    // Cache used by VerticalRendering, reset from there\n    get allResourceRecords() {\n        return this._allResourceRecords || (this._allResourceRecords = this.getAllDataRecords());\n    }\n\n    /**\n     * Returns all resources that have no events assigned during the specified time range.\n     * @param {Date} startDate Time range start date\n     * @param {Date} endDate Time range end date\n     * @returns {Scheduler.model.ResourceModel[]} Resources without events\n     */\n    getAvailableResources({ startDate, endDate }) {\n        return this.query(resource => this.eventStore.isDateRangeAvailable(startDate, endDate, null, resource));\n    }\n};\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Scheduler/data/mixin/PartOfProject\n */\n\n/**\n * This is a mixin, included in all models and stores of the Scheduler project. It provides a common API for accessing\n * all stores of the project.\n *\n * @mixin\n */\nexport default Target => class PartOfProject extends (Target || Base) {\n\n    /**\n     * Returns the project this entity belongs to.\n     *\n     * @member {Scheduler.model.ProjectModel} project\n     * @readonly\n     * @category Project\n     */\n\n    /**\n     * Returns the event store of the project this entity belongs to.\n     *\n     * @member {Scheduler.data.EventStore} eventStore\n     * @readonly\n     * @category Project\n     */\n\n    /**\n     * Returns the dependency store of the project this entity belongs to.\n     *\n     * @member {Scheduler.data.DependencyStore} dependencyStore\n     * @readonly\n     * @category Project\n     */\n\n    /**\n     * Returns the assignment store of the project this entity belongs to.\n     *\n     * @member {Scheduler.data.AssignmentStore} assignmentStore\n     * @readonly\n     * @category Project\n     */\n\n    /**\n     * Returns the resource store of the project this entity belongs to.\n     *\n     * @member {Scheduler.data.ResourceStore} resourceStore\n     * @readonly\n     * @category Project\n     */\n\n    static get $name() {\n        return 'PartOfProject';\n    }\n};\n","import VersionHelper from '../../../Core/helper/VersionHelper.js';\n\n/**\n * @module Scheduler/model/mixin/ResourceModelMixin\n */\n\n/**\n * Mixin that holds configuration shared between resources in Scheduler and Scheduler Pro.\n * @mixin\n */\nexport default Target => class ResourceModelMixin extends Target {\n    static get $name() {\n        return 'ResourceModelMixin';\n    }\n\n    // Flag checked by ResourceStore to make sure it uses a valid subclass\n    static get isResourceModel() {\n        return true;\n    }\n\n    /**\n     * Set value for the specified field(s), triggering engine calculations immediately. See\n     * {@link Core.data.Model#function-set Model#set()} for arguments.\n     *\n     * This does not matter much on the resource itself, but is of importance when manipulating its references:\n     *\n     * ```javascript\n     * assignment.set('resourceId', 2);\n     * // resource.assignments is not yet up to date\n     *\n     * await assignment.setAsync('resourceId', 2);\n     * // resource.assignments is up to date\n     * ```\n     *\n     * @param {String|Object} field The field to set value for, or an object with multiple values to set in one call\n     * @param {*} value Value to set\n     * @param {Boolean} [silent=false] Set to true to not trigger events\n     * automatically.\n     * @function setAsync\n     * @category Editing\n     * @async\n     */\n\n    //region Fields\n\n    static get fields() {\n        return [\n            /**\n             * Unique identifier\n             * @field {String|Number} id\n             * @category Common\n             */\n\n            /**\n             * Get or set resource name\n             * @field {String} name\n             * @category Common\n             */\n            { name : 'name', type : 'string', persist : true },\n\n            /**\n             * Controls the primary color used for events assigned to this resource. Can be overridden per event using\n             * EventModels {@link Scheduler.model.mixin.EventModelMixin#field-eventColor eventColor config}. Also, see\n             * Schedulers {@link Scheduler.view.mixin.TimelineEventRendering#config-eventColor eventColor config}.\n             *\n             * For available standard colors, see\n             * {@link Scheduler.model.mixin.EventModelMixin#typedef-EventColor}.\n             *\n             * @field {EventColor} eventColor\n             * @category Styling\n             */\n            'eventColor',\n\n            /**\n             * Controls the style used for events assigned to this resource. Can be overridden per event using\n             * EventModels {@link Scheduler/model/mixin/EventModelMixin#field-eventStyle eventStyle config}. See Schedulers\n             * {@link Scheduler.view.mixin.TimelineEventRendering#config-eventStyle eventStyle config} for available\n             * options.\n             * @field {String} eventStyle\n             * @category Styling\n             */\n            'eventStyle',\n\n            /**\n             * Fully qualified image URL, used by `ResourceInfoColumn` and vertical modes `ResourceHeader` to display a miniature image\n             * for the resource.\n             * @field {String} imageUrl\n             * @category Styling\n             */\n            'imageUrl',\n\n            /**\n             * Image name relative to {@link Scheduler/view/mixin/SchedulerEventRendering#config-resourceImagePath},\n             * used by `ResourceInfoColumn` and vertical modes `ResourceHeader` to display a miniature image\n             * for the resource.\n             * Set value to `false` to disable image display.\n             * @field {String|Boolean} image\n             * @category Styling\n             */\n            'image',\n\n            /**\n             * Margin from rows edge to topmost event bar for this resource, in px.\n             * @field {Number} resourceMargin\n             * @category Layout\n             */\n            { name : 'resourceMargin', type : 'number' },\n\n            /**\n             * Margin between stacked event bars for this resource, in px.\n             * @field {Number} barMargin\n             * @category Layout\n             */\n            { name : 'barMargin', type : 'number' },\n\n            /**\n             * Base height of this resource, in px. When unset, Schedulers configured rowHeight is used.\n             *\n             * This value is used in horizontal mode to determine row height. When stacking, it is used as input for\n             * calculating the actual row height:\n             *\n             * ```javascript\n             * row.height = (resource.rowHeight - resourceMargin * 2) * overlap count - barMargin * (overlap count - 1)\n             * ```\n             *\n             * When packing or overlapping, it is used as the actual row height.\n             *\n             * @field {Number} rowHeight\n             * @category Layout\n             */\n\n            /**\n             * Base width of this resource, in px. If not set, the `columnWidth` specified in\n             * the Scheduler's configured {@link Scheduler.view.Scheduler#config-resourceColumns} is used.\n             *\n             * This value is used in vertical mode to determine column width.\n             *\n             * @field {Number} columnWidth\n             * @category Layout\n             */\n\n            /**\n             * Specify this to use a resource specific event layout in horizontal mode, see\n             * {@link Scheduler.view.mixin.SchedulerEventRendering#config-eventLayout} for options.\n             *\n             * When unset (the default) Schedulers setting is used.\n             *\n             * @field {'stack'|'pack'|'mixed'|'none'} eventLayout\n             * @category Layout\n             */\n            'eventLayout'\n        ];\n    }\n\n    //endregion\n\n    //region Id change\n\n    updateAssignmentResourceIds() {\n        this.assigned.forEach(assignment => {\n            assignment.resourceId = this.id;\n        });\n    }\n\n    syncId(value) {\n        super.syncId(value);\n\n        this.updateAssignmentResourceIds();\n    }\n\n    //endregion\n\n    //region Getters\n\n    // Documented in Scheduler.model.ResourceModel, SchedulerPro.model.ResourceModel, Gantt.model.ResourceModel\n    get events() {\n        return this.assignments.reduce((events, assignment) => {\n            if (assignment.event) {\n                events.push(assignment.event);\n            }\n\n            return events;\n        }, []);\n    }\n\n    /**\n     * Returns all assignments for the resource\n     *\n     * @property {Scheduler.model.AssignmentModel[]}\n     * @category Common\n     */\n    get assignments() {\n        return this.assigned ? [...this.assigned] : [];\n    }\n\n    set assignments(assignments) {\n        // Engine does not allow assigning to `assigned`, handle it here\n        assignments.forEach(assignment => {\n            assignment.resource = this;\n        });\n    }\n\n    /**\n     * Returns an array of events, associated with this resource\n     *\n     * @deprecated 5.3.6 Use the events property instead\n     *\n     * @returns {Scheduler.model.EventModel[]}\n     */\n    getEvents() {\n        VersionHelper.deprecate('scheduler', '6.0.0', 'getEvents() is deprecated, use the events property instead');\n        return this.events;\n    }\n\n    /**\n     * Returns `true` if the resource can be persisted.\n     * In a flat store, a resource is always considered persistable. In a tree store, a resource is considered\n     * persistable if its parent node is persistable.\n     *\n     * @property {Boolean}\n     * @readonly\n     * @category Editing\n     */\n    get isPersistable() {\n        return super.isPersistable && (!this.parent || this.parent.isPersistable);\n    }\n\n    //endregion\n\n    /**\n     * Unassigns this Resource from all its Events\n     */\n    unassignAll() {\n        this.assignments && this.assignmentStore.remove(this.assignments);\n    }\n\n    /**\n     * Returns the initials (first letter of the first & last space-separated word in the name) or an empty string\n     * if this resource has no name. You can override this method in a ResourceModel subclass to provide your own implementation\n     *\n     * @property {String}\n     * @readonly\n     * @category Common\n     */\n    get initials() {\n        const\n            { name = '' } = this;\n\n        if (!name) {\n            return '';\n        }\n\n        const names         = name.split(' '),\n            firstInitial  = names[0][0],\n            lastInitial   = (names.length > 1 ? names[names.length - 1][0] : '');\n\n        return firstInitial + lastInitial;\n    }\n\n    isWorkingTime(date) {\n        const calendar = (this.effectiveCalendar || this.project?.calendar);\n\n        return !calendar || calendar.isWorkingTime?.(date);\n    }\n};\n","import GridRowModel from '../../Grid/data/GridRowModel.js';\nimport PartOfProject from '../data/mixin/PartOfProject.js';\nimport ResourceModelMixin from './mixin/ResourceModelMixin.js';\n/* <remove-on-release> */\nimport { BaseResourceMixin } from '../../Engine/quark/model/scheduler_basic/BaseResourceMixin.js';\n/* </remove-on-release> */\nimport { CoreResourceMixin } from '../../Engine/quark/model/scheduler_core/CoreResourceMixin.js';\n\nconst EngineMixin = /* <remove-on-release> */globalThis.bryntum?.useBasicEngine ? BaseResourceMixin : /* </remove-on-release> */CoreResourceMixin;\n\n/**\n * @module Scheduler/model/ResourceModel\n */\n\n/**\n * This class represent a single Resource in scheduler, usually added to a {@link Scheduler.data.ResourceStore}.\n *\n * It is a subclass of  {@link Core.data.Model}. Please refer to the documentation for that class to become familiar\n * with the base interface of the resource.\n *\n * ## Fields and references\n *\n * A resource has a few predefined fields, see Fields below. If you want to add more fields with meta data describing\n * your resources then you should subclass this class:\n *\n * ```javascript\n * class MyResource extends ResourceModel {\n *   static get fields() {\n *     return [\n *       // \"id\" and \"name\" fields are already provided by the superclass\n *       { name: 'company', type : 'string' }\n *     ];\n *   }\n * });\n * ```\n *\n * If you want to use other names in your data for the id and name fields you can configure them as seen below:\n *\n * ```javascript\n * class MyResource extends ResourceModel {\n *   static get fields() {\n *     return [\n *        { name: 'name', dataSource: 'userName' }\n *     ];\n *   },\n * });\n * ```\n *\n * After load and project normalization, these references are accessible (assuming their respective stores are loaded):\n * - `{@link #property-assignments}` - The linked assignment records\n * - `{@link #property-events}` - The linked (through assignments) event records\n *\n * ## Async resolving of references\n *\n * As described above, a resource has links to assignments and events. These references are populated async, using the\n * calculation engine of the project that the resource via its store is a part of. Because of this asyncness, references\n * cannot be used immediately after assignment modifications:\n *\n * ```javascript\n * assignment.resourceId = 2;\n * // resource.assignments is not yet up to date\n * ```\n *\n * To make sure references are updated, wait for calculations to finish:\n *\n * ```javascript\n * assignment.resourceId = 2;\n * await assignment.project.commitAsync();\n * // resource.assignments is up to date\n * ```\n *\n * As an alternative, you can also use `setAsync()` to trigger calculations directly after the change:\n *\n * ```javascript\n * await assignment.setAsync({ resourceId : 2});\n * // resource.assignments is up to date\n * ```\n *\n * @extends Grid/data/GridRowModel\n * @mixes Scheduler/model/mixin/ResourceModelMixin\n */\nexport default class ResourceModel extends ResourceModelMixin(PartOfProject(EngineMixin.derive(GridRowModel))) {\n    /**\n     * Get associated events\n     *\n     * @member {Scheduler.model.EventModel[]} events\n     * @readonly\n     * @category Common\n     */\n\n    static $name = 'ResourceModel';\n\n}\n\nResourceModel.exposeProperties();\n","import ResourceStoreMixin from './mixin/ResourceStoreMixin.js';\nimport ResourceModel from '../model/ResourceModel.js';\nimport AjaxStore from '../../Core/data/AjaxStore.js';\nimport PartOfProject from '../data/mixin/PartOfProject.js';\n/* <remove-on-release> */\nimport { ChronoResourceStoreMixin } from '../../Engine/quark/store/ChronoResourceStoreMixin.js';\n/* </remove-on-release> */\nimport { CoreResourceStoreMixin } from '../../Engine/quark/store/CoreResourceStoreMixin.js';\nimport PartOfBaseProject from './mixin/PartOfBaseProject.js';\n\nconst EngineMixin = /* <remove-on-release> */globalThis.bryntum?.useBasicEngine ? PartOfBaseProject(ChronoResourceStoreMixin.derive(AjaxStore)) : /* </remove-on-release> */PartOfProject(CoreResourceStoreMixin.derive(AjaxStore));\n\n/**\n * @module Scheduler/data/ResourceStore\n */\n\n/**\n * A store holding all the {@link Scheduler.model.ResourceModel resources} to be rendered into a\n * {@link Scheduler.view.Scheduler Scheduler}.\n *\n * This store only accepts a model class inheriting from {@link Scheduler.model.ResourceModel}.\n *\n * A ResourceStore is usually connected to a project, which binds it to other related stores (EventStore,\n * AssignmentStore and DependencyStore). The project also handles references (assignments, events) to related records\n * for the records in the store.\n *\n * Resolving the references happens async, records are not guaranteed to have up to date references until calculations\n * are finished. To be certain that references are resolved, call `await project.commitAsync()` after store actions. Or\n * use one of the `xxAsync` functions, such as `loadDataAsync()`.\n *\n * Using `commitAsync()`:\n *\n * ```javascript\n * resourceStore.data = [{ id }, ...];\n *\n * // references (assignments, events) not resolved yet\n *\n * await resourceStore.project.commitAsync();\n *\n * // now they are\n * ```\n *\n * Using `loadDataAsync()`:\n *\n * ```javascript\n * await resourceStore.loadDataAsync([{ id }, ...]);\n *\n * // references (assignments, events) are resolved\n * ```\n *\n * @mixes Scheduler/data/mixin/PartOfProject\n * @mixes Scheduler/data/mixin/ResourceStoreMixin\n * @extends Core/data/AjaxStore\n */\nexport default class ResourceStore extends ResourceStoreMixin(EngineMixin) {\n\n    static get defaultConfig() {\n        return {\n            modelClass : ResourceModel\n        };\n    }\n\n}\n","import Base from '../../../Core/Base.js';\nimport Model from '../../../Core/data/Model.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\nimport FunctionHelper from '../../../Core/helper/FunctionHelper.js';\n\n/**\n * @module Scheduler/data/mixin/EventStoreMixin\n */\n\n/**\n * This is a mixin, containing functionality related to managing events.\n *\n * It is consumed by the regular {@link Scheduler.data.EventStore} class and the Scheduler Pro's `EventStore` class.\n *\n * @mixin\n */\nexport default Target => class EventStoreMixin extends (Target || Base) {\n    static $name = 'EventStoreMixin';\n\n    /**\n     * Add events to the store.\n     *\n     * NOTE: Dates, durations and references (assignments, resources) on the events are determined async by a calculation\n     * engine. Thus they cannot be directly accessed after using this function.\n     *\n     * For example:\n     *\n     * ```javascript\n     * eventStore.add({ startDate, duration });\n     * // endDate is not yet calculated\n     * ```\n     *\n     * To guarantee data is in a calculated state, wait for calculations for finish:\n     *\n     * ```javascript\n     * eventStore.add({ startDate, duration });\n     * await eventStore.project.commitAsync();\n     * // endDate is calculated\n     * ```\n     *\n     * Alternatively use `addAsync()` instead:\n     *\n     * ```javascript\n     * await eventStore.addAsync({ startDate, duration });\n     * // endDate is calculated\n     * ```\n     *\n     * @param {Scheduler.model.EventModel|Scheduler.model.EventModel[]|EventModelConfig|EventModelConfig[]} records\n     * Array of records/data or a single record/data to add to store\n     * @param {Boolean} [silent] Specify `true` to suppress events\n     * @returns {Scheduler.model.EventModel[]} Added records\n     * @function add\n     * @category CRUD\n     */\n\n    /**\n     * Add events to the store and triggers calculations directly after. Await this function to have up to date data on\n     * the added events.\n     *\n     * ```javascript\n     * await eventStore.addAsync({ startDate, duration });\n     * // endDate is calculated\n     * ```\n     *\n     * @param {Scheduler.model.EventModel|Scheduler.model.EventModel[]|EventModelConfig|EventModelConfig[]} records\n     * Array of records/data or a single record/data to add to store\n     * @param {Boolean} [silent] Specify `true` to suppress events\n     * @returns {Scheduler.model.EventModel[]} Added records\n     * @function addAsync\n     * @category CRUD\n     * @async\n     */\n\n    /**\n     * Applies a new dataset to the EventStore. Use it to plug externally fetched data into the store.\n     *\n     * NOTE: Dates, durations and relations (assignments, resources) on the events are determined async by a calculation\n     * engine. Thus they cannot be directly accessed after assigning the new dataset.\n     *\n     * For example:\n     *\n     * ```javascript\n     * eventStore.data = [{ startDate, duration }];\n     * // eventStore.first.endDate is not yet calculated\n     * ```\n     *\n     * To guarantee data is in a calculated state, wait for calculations for finish:\n     *\n     * ```javascript\n     * eventStore.data = [{ startDate, duration }];\n     * await eventStore.project.commitAsync();\n     * // eventStore.first.endDate is calculated\n     * ```\n     *\n     * Alternatively use `loadDataAsync()` instead:\n     *\n     * ```javascript\n     * await eventStore.loadDataAsync([{ startDate, duration }]);\n     * // eventStore.first.endDate is calculated\n     * ```\n     *\n     * @member {EventModelConfig[]} data\n     * @category Records\n     */\n\n    /**\n     * Applies a new dataset to the EventStore and triggers calculations directly after. Use it to plug externally\n     * fetched data into the store.\n     *\n     * ```javascript\n     * await eventStore.loadDataAsync([{ startDate, duration }]);\n     * // eventStore.first.endDate is calculated\n     * ```\n     *\n     * @param {EventModelConfig[]} data Array of EventModel data objects\n     * @function loadDataAsync\n     * @category CRUD\n     * @async\n     */\n\n    /**\n     * Class used to represent records. Defaults to class EventModel.\n     * @member {Scheduler.model.EventModel} modelClass\n     * @typings {typeof EventModel}\n     * @category Records\n     */\n\n    static get defaultConfig() {\n        return {\n            /**\n             * CrudManager must load stores in the correct order. Lowest first.\n             * @private\n             */\n            loadPriority : 100,\n            /**\n             * CrudManager must sync stores in the correct order. Lowest first.\n             * @private\n             */\n            syncPriority : 200,\n\n            storeId : 'events',\n\n            /**\n             * Configure with `true` to also remove the event when removing the last assignment from the linked\n             * AssignmentStore. This config has not effect when using EventStore in legacy `resourceId`-mode.\n             * @config {Boolean}\n             * @default\n             * @category Common\n             */\n            removeUnassignedEvent : true,\n\n            /**\n             * Configure with `true` to force single-resource mode, an event can only be assigned to a single resource.\n             * If not provided, the mode will be inferred from\n             *\n             * 1. presence of an assignment store (i.e. multi-assignment)\n             * 2. presence of `resourceId` in the event store data (i.e. single assignment mode)\n             * @config {Boolean}\n             * @category Common\n             */\n            singleAssignment : null\n        };\n    }\n\n    //region Init & destroy\n\n    construct(config) {\n        super.construct(config);\n\n        this.autoTree = true;\n\n        if (this.singleAssignment) {\n            this.usesSingleAssignment = true;\n        }\n\n        if (!this.modelClass.isEventModel) {\n            throw new Error('The model for the EventStore must subclass EventModel');\n        }\n    }\n\n    //endregion\n\n    //region Events records, iteration etc.\n\n    set filtersFunction(filtersFunction) {\n        super.filtersFunction = filtersFunction;\n    }\n\n    get filtersFunction() {\n        // Generate the real filterFn.\n        const result = super.filtersFunction;\n\n        // We always filter *in* records which are being created by the UI.\n        if (result && result !== FunctionHelper.returnTrue) {\n            return r => r.isCreating || result(r);\n        }\n        return result;\n    }\n\n    /**\n     * Returns a `Map`, keyed by `YYYY-MM-DD` date keys containing event counts for all the days\n     * between the passed `startDate` and `endDate`. Occurrences of recurring events are included.\n     *\n     * Example:\n     *\n     * ```javascript\n     *  eventCounts = eventStore.getEventCounts({\n     *      startDate : scheduler.timeAxis.startDate,\n     *      endDate   : scheduler.timeAxis.endDate\n     *  });\n     * ```\n     *\n     * @param {Object} options An options object determining which events to return\n     * @param {Date} options.startDate The start date for the range of events to include.\n     * @param {Date} [options.endDate] The end date for the range of events to include.\n     * @category Events\n     */\n    getEventCounts(options) {\n        const\n            me     = this,\n            {\n                filtersFunction,\n                added\n            }      = me,\n            // Must use getEvents so that the loadDateRange event is triggered.\n            result = me.getEvents({\n                ...options,\n                storeFilterFn : me.isFiltered ? (me.reapplyFilterOnAdd ? filtersFunction : eventRecord => added.includes(eventRecord) ? me.indexOf(eventRecord) > -1 : filtersFunction(eventRecord)) : null,\n                dateMap       : options.dateMap || true\n            });\n\n        result.forEach((value, key) => result.set(key, value.length));\n        return result;\n    }\n\n    /**\n     * Calls the supplied iterator function once for every scheduled event, providing these arguments\n     * - event : the event record\n     * - startDate : the event start date\n     * - endDate : the event end date\n     *\n     * Returning false cancels the iteration.\n     *\n     * @param {Function} fn iterator function\n     * @param {Object} [thisObj] `this` reference for the function\n     * @category Events\n     */\n    forEachScheduledEvent(fn, thisObj = this) {\n        this.forEach(event => {\n            const { startDate, endDate } = event;\n\n            if (startDate && endDate) {\n                return fn.call(thisObj, event, startDate, endDate);\n            }\n        });\n    }\n\n    /**\n     * Returns an object defining the earliest start date and the latest end date of all the events in the store.\n     *\n     * @returns {Object} An object with 'startDate' and 'endDate' properties (or null values if data is missing).\n     * @category Events\n     */\n    getTotalTimeSpan() {\n        let earliest = new Date(9999, 0, 1),\n            latest   = new Date(0);\n\n        this.forEach(event => {\n            if (event.startDate) {\n                earliest = DateHelper.min(event.startDate, earliest);\n            }\n            if (event.endDate) {\n                latest = DateHelper.max(event.endDate, latest);\n            }\n        });\n\n        // <remove-on-release>\n        // TODO: this will fail in programs designed to work with events in the past (after Jan 1, 1970)\n        // </remove-on-release>\n        earliest = earliest < new Date(9999, 0, 1) ? earliest : null;\n        latest   = latest > new Date(0) ? latest : null;\n\n        // keep last calculated value to be able to track total timespan changes\n        return (this.lastTotalTimeSpan = {\n            startDate : earliest || null,\n            endDate   : latest || earliest || null\n        });\n    }\n\n    /**\n     * Checks if given event record is persistable. By default it always is, override EventModels `isPersistable` if you\n     * need custom logic.\n     *\n     * @param {Scheduler.model.EventModel} event\n     * @returns {Boolean}\n     * @category Events\n     */\n    isEventPersistable(event) {\n        return event.isPersistable;\n    }\n\n    //endregion\n\n    //region Resource\n\n    /**\n     * Checks if a date range is allocated or not for a given resource.\n     * @param {Date} start The start date\n     * @param {Date} end The end date\n     * @param {Scheduler.model.EventModel|null} excludeEvent An event to exclude from the check (or null)\n     * @param {Scheduler.model.ResourceModel} resource The resource\n     * @returns {Boolean} True if the timespan is available for the resource\n     * @category Resource\n     */\n    isDateRangeAvailable(start, end, excludeEvent, resource) {\n        // NOTE: Also exists in TaskStore.js\n\n        // Cannot assign anything to generated parents\n        if (resource.data.generatedParent) {\n            return false;\n        }\n\n        // This should be a collection of unique event records\n        const allEvents = new Set(this.getEventsForResource(resource));\n\n        // In private mode we can pass an AssignmentModel. In this case, we assume that multi-assignment is used.\n        // So we need to make sure that other resources are available for this time too.\n        // No matter if the event retrieved from the assignment belongs to the target resource or not.\n        // We gather all events from the resources the event is assigned to except of the one from the assignment record.\n        // Note, events from the target resource are added above.\n        if (excludeEvent?.isAssignment) {\n            const\n                currentEvent = excludeEvent.event,\n                resources    = currentEvent.resources;\n\n            resources.forEach(resource => {\n                // Ignore events for the resource which is passed as an AssignmentModel to excludeEvent\n                if (resource.id !== excludeEvent.resourceId) {\n                    this.getEventsForResource(resource).forEach(event => allEvents.add(event));\n                }\n            });\n        }\n\n        if (excludeEvent) {\n            const eventToRemove = excludeEvent.isAssignment ? excludeEvent.event : excludeEvent;\n            allEvents.delete(eventToRemove);\n        }\n\n        return !Array.from(allEvents).some(event => event.isScheduled && DateHelper.intersectSpans(start, end, event.startDate, event.endDate));\n    }\n\n    /**\n     * Filters the events associated with a resource, based on the function provided. An array will be returned for those\n     * events where the passed function returns true.\n     * @param {Scheduler.model.ResourceModel} resource\n     * @param {Function} fn The function\n     * @param {Object} [thisObj] `this` reference for the function\n     * @returns {Scheduler.model.EventModel[]} the events in the time span\n     * @private\n     * @category Resource\n     */\n    filterEventsForResource(resource, fn, thisObj = this) {\n        return resource.getEvents(this).filter(fn.bind(thisObj));\n    }\n\n    /**\n     * Returns all resources assigned to an event.\n     *\n     * @param {Scheduler.model.EventModel|String|Number} event\n     * @returns {Scheduler.model.ResourceModel[]}\n     * @category Resource\n     */\n    getResourcesForEvent(event) {\n        // If we are sent an occurrence, use its parent\n        if (event.isOccurrence) {\n            event = event.recurringTimeSpan;\n        }\n\n        return this.assignmentStore.getResourcesForEvent(event);\n    }\n\n    /**\n     * Returns all events assigned to a resource.\n     * *NOTE:* this does not include occurrences of recurring events. Use the\n     * {@link Scheduler/data/mixin/GetEventsMixin#function-getEvents} API to include occurrences of recurring events.\n     * @param {Scheduler.model.ResourceModel|String|Number} resource Resource or resource id.\n     * @returns {Scheduler.model.EventModel[]}\n     * @category Resource\n     */\n    getEventsForResource(resource) {\n        return this.assignmentStore.getEventsForResource(resource);\n    }\n\n    //endregion\n\n    //region Assignment\n\n    /**\n     * Returns all assignments for a given event.\n     *\n     * @param {Scheduler.model.EventModel|String|Number} event\n     * @returns {Scheduler.model.AssignmentModel[]}\n     * @category Assignment\n     */\n    getAssignmentsForEvent(event) {\n        return this.assignmentStore.getAssignmentsForEvent(event) || [];\n    }\n\n    /**\n     * Returns all assignments for a given resource.\n     *\n     * @param {Scheduler.model.ResourceModel|String|Number} resource\n     * @returns {Scheduler.model.AssignmentModel[]}\n     * @category Assignment\n     */\n    getAssignmentsForResource(resource) {\n        return this.assignmentStore.getAssignmentsForResource(resource) || [];\n    }\n\n    /**\n     * Creates and adds assignment record for a given event and a resource.\n     *\n     * @param {Scheduler.model.EventModel|String|Number} event\n     * @param {Scheduler.model.ResourceModel|String|Number|Scheduler.model.ResourceModel[]|String[]|Number[]} resource The resource(s) to assign to the event\n     * @param {Boolean} [removeExistingAssignments] `true` to first remove existing assignments\n     * @returns {Scheduler.model.AssignmentModel[]} An array with the created assignment(s)\n     * @category Assignment\n     */\n    assignEventToResource(event, resource, removeExistingAssignments = false) {\n        return this.assignmentStore.assignEventToResource(event, resource, undefined, removeExistingAssignments);\n    }\n\n    /**\n     * Removes assignment record for a given event and a resource.\n     *\n     * @param {Scheduler.model.EventModel|String|Number} event\n     * @param {Scheduler.model.ResourceModel|String|Number} resource\n     * @category Assignment\n     */\n    unassignEventFromResource(event, resource) {\n        this.assignmentStore.unassignEventFromResource(event, resource);\n    }\n\n    /**\n     * Reassigns an event from an old resource to a new resource\n     *\n     * @param {Scheduler.model.EventModel}    event    An event or id of the event to reassign\n     * @param {Scheduler.model.ResourceModel|Scheduler.model.ResourceModel[]} oldResource A resource or id to unassign from\n     * @param {Scheduler.model.ResourceModel|Scheduler.model.ResourceModel[]} newResource A resource or id to assign to\n     * @category Assignment\n     */\n    reassignEventFromResourceToResource(event, oldResource, newResource) {\n        const\n            me            = this,\n            newResourceId = Model.asId(newResource),\n            assignment    = me.assignmentStore.getAssignmentForEventAndResource(event, oldResource);\n\n        if (assignment) {\n            assignment.resourceId = newResourceId;\n        }\n        else {\n            me.assignmentStore.assignEventToResource(event, newResource);\n        }\n\n    }\n\n    /**\n     * Checks whether an event is assigned to a resource.\n     *\n     * @param {Scheduler.model.EventModel|String|Number} event\n     * @param {Scheduler.model.ResourceModel|String|Number} resource\n     * @returns {Boolean}\n     * @category Assignment\n     */\n    isEventAssignedToResource(event, resource) {\n        return this.assignmentStore.isEventAssignedToResource(event, resource);\n    }\n\n    /**\n     * Removes all assignments for given event\n     *\n     * @param {Scheduler.model.EventModel|String|Number} event\n     * @category Assignment\n     */\n    removeAssignmentsForEvent(event) {\n        this.assignmentStore.removeAssignmentsForEvent(event);\n    }\n\n    /**\n     * Removes all assignments for given resource\n     *\n     * @param {Scheduler.model.ResourceModel|String|Number} resource\n     * @category Assignment\n     */\n    removeAssignmentsForResource(resource) {\n        this.assignmentStore.removeAssignmentsForResource(resource);\n    }\n\n    //endregion\n\n    /**\n     * Appends a new record to the store\n     * @param {Scheduler.model.EventModel} record The record to append to the store\n     * @category CRUD\n     */\n    append(record) {\n        return this.add(record);\n    }\n\n    //region Project\n\n    get project() {\n        return super.project;\n    }\n\n    set project(project) {\n        super.project = project;\n\n        this.detachListeners('project');\n\n        if (project) {\n            // Project already has AssignmentStore instance? Attach to it.\n            if (project.assignmentStore?.isAssignmentStore) {\n                this.attachToAssignmentStore(project.assignmentStore);\n            }\n\n            // Accessing assignmentStore would trigger `assignmentStoreChange` event on the project, so we set up\n            // the listener after\n            project.ion({\n                name                  : 'project',\n                assignmentStoreChange : 'onProjectAssignmentStoreChange',\n                thisObj               : this,\n                prio                  : 200 // Before UI updates\n            });\n        }\n    }\n\n    //endregion\n\n    //region Single assignment\n\n    get usesSingleAssignment() {\n        if (this.isChained) {\n            return this.masterStore.usesSingleAssignment;\n        }\n        return this._usesSingleAssignment;\n    }\n\n    set usesSingleAssignment(value) {\n        this._usesSingleAssignment = value;\n\n        const { assignmentStore } = this;\n        // Use cheaper id generation for single assignment mode (no UUID needed)\n        if (assignmentStore?.isStore && !assignmentStore.hasGenerateIdOverride) {\n            // Normal fn on purpose, scope is AssignmentModel\n            assignmentStore.modelClass.generateId = function() {\n                if (this.singleAssignmentIdCounter == null) {\n                    this.singleAssignmentIdCounter = 0;\n                }\n                return `a-${++this.singleAssignmentIdCounter}`;\n            };\n            assignmentStore.hasGenerateIdOverride = true;\n        }\n    }\n\n    processRecords(eventRecords) {\n        const\n            { assignmentStore } = this,\n            assignmentsToAdd = [];\n\n        // Same as on `joinRecordsToStore`, when adding a number of event records CoreEventMixin#joinProject method\n        // will clear/rebuild cache in a loop. We raise this flag to skip invalidating assignment store indices for the time\n        // we are joining records to the store. When they're added and indices are read, we will invalidate them.\n        if (assignmentStore) {\n            assignmentStore.skipInvalidateIndices = true;\n        }\n\n        eventRecords = super.processRecords(eventRecords, assignmentStore && !this.stm?.isRestoring && (eventRecord => {\n            // AssignmentStore found, add an assignment to it if this is not a dataset operation\n            const resourceId = eventRecord.get('resourceId');\n\n            if (!eventRecord.reassignedFromReplace && resourceId != null) {\n                // Check if the event is already assigned to the resource, though it's not in the event store.\n                // It could happen when you remove an event, so both event and assignment records are removed,\n                // then you \"undo\" the action and the assignment is restored before the event is restored.\n                if (!assignmentStore.includesAssignment(eventRecord.id, resourceId)) {\n                    // Cannot use `event.assign(resourceId)` since event is not part of store yet\n                    // Using a bit shorter generated id to not look so ugly in DOM\n                    assignmentsToAdd.push({\n                        id      : assignmentStore.modelClass.generateId(''),\n                        resourceId,\n                        eventId : eventRecord.id\n                    });\n                }\n            }\n\n            // clear flag\n            eventRecord.reassignedFromReplace = false;\n        }) || undefined);\n\n        if (assignmentStore) {\n            assignmentStore.storage.invalidateIndices();\n            assignmentStore.skipInvalidateIndices = false;\n\n            assignmentStore.add(assignmentsToAdd);\n        }\n\n        return eventRecords;\n    }\n\n    joinRecordsToStore(records) {\n        const { assignmentStore } = this;\n\n        if (assignmentStore) {\n            // When adding a number of event records CoreEventMixin#joinProject method will clear/rebuild cache in a loop.\n            // We raise this flag to skip invalidating assignment store indices for the time we are joining records to\n            // the store. When they're added and indices are read, we will invalidate them.\n            assignmentStore.skipInvalidateIndices = true;\n\n            super.joinRecordsToStore(records);\n\n            assignmentStore.storage.invalidateIndices();\n\n            assignmentStore.skipInvalidateIndices = false;\n        }\n        else {\n            super.joinRecordsToStore(records);\n        }\n    }\n\n    processRecord(eventRecord, isDataset = false) {\n        eventRecord = super.processRecord(eventRecord, isDataset);\n\n        const\n            me              = this,\n            assignmentStore = me.assignmentStore ?? me.crudManager?.assignmentStore,\n            resourceId      = eventRecord.get('resourceId'),\n            { resourceIds } = eventRecord;\n\n        if (resourceIds?.length && eventRecord.meta.skipEnforcingSingleAssignment !== false && me.modelClass.fieldMap?.resourceIds.persist) {\n            if (assignmentStore) {\n                assignmentStore.add(resourceIds\n                    .filter(resourceId => !assignmentStore.some(a => a.eventId === eventRecord.id && a.resourceId === resourceId))\n                    .map(resourceId => ({ resource : resourceId, event : eventRecord })));\n            }\n            else {\n                me.$processResourceIds = true;\n            }\n        }\n        else if (resourceId != null && !eventRecord.meta.skipEnforcingSingleAssignment) {\n            const\n                existingRecord      = me.getById(eventRecord.id),\n                isReplacing         = existingRecord && existingRecord !== eventRecord && !isDataset;\n\n            // Replacing an existing event, repoint the resource of its assignment\n            // (already repointed to the new event by engine in EventStoreMixin)\n            if (isReplacing) {\n                // Have to look assignment up on store, removed by engine in super call above\n                const assignmentSet = assignmentStore.storage.findItem('eventId', eventRecord.id);\n                if (assignmentSet?.size) {\n                    const assignment = assignmentSet.values().next().value;\n                    assignment.resource = resourceId;\n                    eventRecord.reassignedFromReplace = true;\n                }\n            }\n            // No AssignmentStore assigned yet, need to process when that happens. Or if it is a dataset operation,\n            // processing will happen at the end of it to not add individual assignment (bad for performance)\n            else {\n                me.$processResourceIds = true;\n            }\n\n            // Flag that we have been loaded using resourceId, checked by CrudManager to exclude the internal\n            // AssignmentStore from sync\n            me.usesSingleAssignment = true;\n        }\n\n        return eventRecord;\n    }\n\n    processResourceIds() {\n        const\n            me              = this,\n            // When used in a standalone CrudManager, there is no direct link to the assignment store\n            assignmentStore = me.assignmentStore ?? me.crudManager?.assignmentStore;\n\n        if (me.$processResourceIds && assignmentStore?.isAssignmentStore && !(me.project?.isSharingAssignmentStore && me.isChained)) {\n            const assignments = [];\n\n            // resourceIds used during initialization, convert into assignments\n            me.forEach(eventRecord => {\n                const { resourceId, resourceIds, id : eventId } = eventRecord;\n                if (resourceId != null) {\n                    // Using a bit shorter generated id to not look so ugly in DOM\n                    assignments.push({\n                        id : assignmentStore.modelClass.generateId(''),\n                        resourceId,\n                        eventId\n                    });\n                }\n                else if (resourceIds?.length) {\n                    resourceIds.forEach(rId => {\n                        assignments.push({\n                            id         : assignmentStore.modelClass.generateId(''),\n                            resourceId : rId,\n                            eventId\n                        });\n                    });\n                }\n            });\n\n            // Disable as much as possible, since we are in full control of this store when using single assignment mode\n            assignmentStore.useRawData = {\n                disableDefaultValue     : true,\n                disableDuplicateIdCheck : true,\n                disableTypeConversion   : true\n            };\n            // Flag that throws in AssignmentStore if data is loaded some other way when using single assignment\n            assignmentStore.usesSingleAssignment = false;\n            // These assignments all use generated ids, and are not meant to be searialized anyway so bypass check\n            assignmentStore.verifyNoGeneratedIds = false;\n\n            assignmentStore.data = assignments;\n\n            assignmentStore.usesSingleAssignment = true;\n\n            me.$processResourceIds = false;\n        }\n    }\n\n    loadData() {\n        super.loadData(...arguments);\n\n        this.processResourceIds();\n    }\n\n    // Optionally remove unassigned events\n    onBeforeRemoveAssignment({ records }) {\n        const me = this;\n\n        if (\n            me.removeUnassignedEvent && !me.isRemoving && !me.isSettingData &&\n            !me.stm?.isRestoring && !me.usesSingleAssignment &&\n            // Do not remove unassigned events when syncing data, new assignments etc. might be synced afterwards\n            !me.assignmentStore.isSyncingDataOnLoad && !me.resourceStore.isSyncingDataOnLoad\n        ) {\n            const toRemove = new Set();\n            // Collect all events that are unassigned after the remove\n            records.forEach(assignmentRecord => {\n                const { event } = assignmentRecord;\n                // Assignment might not have an event or the event might already be removed\n                if (event && !event.isRemoved && event.assignments.every(a => records.includes(a))) {\n                    toRemove.add(event);\n                }\n            });\n\n            // And remove them\n            if (toRemove.size) {\n                me.remove([...toRemove]);\n            }\n        }\n    }\n\n    onProjectAssignmentStoreChange({ store }) {\n        this.attachToAssignmentStore(store);\n    }\n\n    attachToAssignmentStore(assignmentStore) {\n        const me = this;\n\n        me.detachListeners('assignmentStore');\n\n        if (assignmentStore) {\n            me.processResourceIds();\n\n            assignmentStore.ion({\n                name : 'assignmentStore',\n\n                // Adding an assignment in single assignment mode should set events resourceId if needed,\n                // otherwise it should set events resourceIds (if persistable)\n\n                addPreCommit({ records }) {\n                    if (!me.isSettingData && !me.isAssigning) {\n                        if (me.usesSingleAssignment) {\n                            records.forEach(assignment => {\n                                const { event } = assignment;\n                                if (event?.isEvent && event.resourceId !== assignment.resourceId) {\n                                    event.meta.isAssigning = true;\n                                    event.set('resourceId', assignment.resourceId);\n                                    event.meta.isAssigning = false;\n                                }\n                            });\n                        }\n                        else if (me.modelClass.fieldMap?.resourceIds.persist) {\n                            records.forEach(assignment => {\n                                const { event } = assignment;\n\n                                if (event?.isEvent) {\n                                    event.meta.isAssigning = true;\n                                    const resourceIds = event.resourceIds ?? [];\n                                    if (!resourceIds.includes(assignment.resourceId)) {\n                                        event.resourceIds = [...resourceIds, assignment.resourceId];\n                                    }\n\n                                    event.meta.isAssigning = false;\n                                }\n                            });\n                        }\n                    }\n                },\n\n                // Called both for remove and removeAll\n                beforeRemove : 'onBeforeRemoveAssignment',\n\n                // Removing an assignment in single assignment mode should set events resourceId to null,\n                // otherwise it should set events resourceIds to an empty array\n                removePreCommit({ records }) {\n                    if (!me.isSettingData && !me.isAssigning) {\n                        if (me.usesSingleAssignment) {\n                            records.forEach(assignment => {\n                                // With engine link to event is already broken when we get here, hence the lookup\n                                me.getById(assignment.eventId)?.set('resourceId', null);\n                            });\n                        }\n                        else if (me.modelClass.fieldMap?.resourceIds.persist) {\n                            records.forEach(({ event, resourceId }) => {\n                                const\n                                    resourceIds     = event.resourceIds.slice(),\n                                    indexToRemove   = resourceIds?.indexOf(resourceId);\n\n                                if (indexToRemove >= 0) {\n                                    resourceIds.splice(indexToRemove, 1);\n                                    event.resourceIds = resourceIds;\n                                }\n                            });\n                        }\n                    }\n                },\n\n                removeAllPreCommit() {\n                    if (!me.isSettingData && !me.isAssigning) {\n                        if (me.usesSingleAssignment) {\n                            me.allRecords.forEach(eventRecord => eventRecord.set('resourceId', null));\n                        }\n                        else if (me.modelClass.fieldMap?.resourceIds.persist) {\n                            me.allRecords.forEach(eventRecord => {\n                                eventRecord.resourceIds = [];\n                            });\n                        }\n                    }\n                },\n\n                // Keep events resourceId and resourceIds in sync with assignment on changes\n                update({ record, changes }) {\n                    if ('resourceId' in changes) {\n                        const { event } = record;\n\n                        if (me.usesSingleAssignment) {\n                            event.meta.isAssigning = true;\n                            event.set('resourceId', changes.resourceId.value);\n                            event.meta.isAssigning = false;\n                        }\n                        else if (me.modelClass.fieldMap?.resourceIds.persist) {\n                            event.meta.isAssigning = true;\n                            const\n                                resourceIds     = event.resourceIds.slice(),\n                                indexToRemove   = resourceIds?.indexOf(changes.resourceId.oldValue);\n\n                            if (indexToRemove >= 0) {\n                                resourceIds.splice(indexToRemove, 1);\n                            }\n\n                            if (!resourceIds?.includes(changes.resourceId.value)) {\n                                resourceIds.push(changes.resourceId.value);\n                                event.resourceIds = resourceIds;\n                            }\n                            event.meta.isAssigning = false;\n                        }\n                    }\n                },\n\n                // Keep events resourceIds in sync with assignment on dataset loading\n                change({ action, records }) {\n                    if (action === 'dataset' && me.modelClass.fieldMap?.resourceIds.persist) {\n                        records.forEach(({ event, resourceId }) => {\n                            const resourceIds = event.resourceIds ?? [];\n\n                            if (!resourceIds.includes(resourceId)) {\n                                resourceIds.push(resourceId);\n                                event.meta.isAssigning = true;\n                                event.setData('resourceIds', resourceIds);\n                                event.meta.isAssigning = false;\n                            }\n                        });\n                    }\n                },\n\n                thisObj : me\n            });\n        }\n    }\n\n    set data(data) {\n        this.isSettingData = true;\n\n        // When using single assignment, remove all assignments when loading a new set of events.\n        // Don't do it when filling a chained store, assignments are for the master store\n        if (this.usesSingleAssignment && !this.syncDataOnLoad && !this.isChained) {\n            this.assignmentStore.removeAll(true);\n        }\n\n        super.data = data;\n\n        this.isSettingData = false;\n    }\n\n    // Override trigger to decorate update/change events with a flag if resourceId was the only thing changed, in which\n    // case the change most likely can be ignored since the assignment will also change\n    trigger(eventName, params) {\n        const { changes } = params || {};\n\n        // https://github.com/bryntum/support/issues/6610\n        // test: SchedulerPro/tests/data/UndoRedo.t.js, \"Should refresh the view after undoing the event copy-paste\"\n        // can not ignore this event when stm is restoring, because of the edge case in that ticket\n        if (changes && 'resourceId' in changes && Object.keys(changes).length === 1 && !this.stm?.isRestoring) {\n            params.isAssign = true;\n        }\n\n        return super.trigger(...arguments);\n    }\n\n    remove(records, ...args) {\n        const result = super.remove(records, ...args);\n\n        // Make sure assignment is removed with event when using single assignment\n        if (result.length && this.usesSingleAssignment) {\n            for (const eventRecord of result) {\n                if (!eventRecord.isOccurrence) {\n                    (this.assignmentStore || this.crudManager?.assignmentStore)?.remove(eventRecord.assignments, true);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    //endregion\n};\n","import DateHelper from '../../../Core/helper/DateHelper.js';\nimport Objects from '../../../Core/helper/util/Objects.js';\n\n/**\n * @module Scheduler/data/mixin/GetEventsMixin\n */\n\nconst\n    returnTrue   = () => true,\n    notRecurring = event => !event.isRecurring;\n\n/**\n * Mixing containing functionality for retrieving a range of events, mainly used during rendering.\n *\n * Consumed by EventStore in Calendar, Scheduler & Scheduler Pro and TaskStore in Gantt.\n *\n * @mixin\n */\nexport default Target => class GetEventsMixin extends Target {\n\n    static $name = 'GetEventsMixin';\n\n    /**\n     * Returns an array of events for the date range specified by the `startDate` and `endDate` options.\n     *\n     * By default, for any date, this includes any event which *intersects* that date.\n     *\n     * To only include events that are fully contained *within* the date range, pass the `allowPartial`\n     * option as `false`.\n     *\n     * By default, any occurrences of recurring events are included in the resulting array (not applicable in Gantt). If\n     * that is not required, pass the `includeOccurrences` option as `false`. **Note that if `includeOccurrences` is\n     * `true`, the start date and end date options are mandatory. The method must know what range of occurrences needs\n     * to be generated and returned.**\n     *\n     * Example:\n     *\n     * ```javascript\n     *  visibleEvents = eventStore.getEvents({\n     *      resourceRecord : myResource,\n     *      startDate      : scheduler.timeAxis.startDate,\n     *      endDate        : scheduler.timeAxis.endDate\n     *  });\n     * ```\n     *\n     * @param {Object} options An options object determining which events to return\n     * @param {Date} [options.date] If only one date is required, pass this option instead of the\n     * `startDate` and `endDate` options.\n     * @param {Date} options.startDate The start date for the range of events to include.\n     * @param {Date} [options.endDate] The end date for the range of events to include.\n     * @param {Scheduler.model.ResourceModel} [options.resourceRecord] Pass a resource to only return events assigned to\n     *   this resource. Not supported when using the `dateMap` option (see below)\n     * @param {Function} [options.filter] A function to filter out events which are not required.\n     * @param {Boolean} [options.ignoreFilters] By default, store filters are honoured. Pass this\n     * as `true` to include filtered out events.\n     * @param {Boolean} [options.includeOccurrences=true] Occurrences of recurring events are included by default.\n     * @param {Boolean} [options.allowPartial=true] Events which start before or after the range, but *intersect* the\n     *   range are included by default.\n     * @param {Boolean} [options.startOnly] Pass `true` to only include events which *start on* each date in the range.\n     * @param {Boolean} [options.onlyAssigned] Pass `true` to only include events that are assigned to a resource\n     * @param {Boolean|Map} [options.dateMap] Populates the passed `Map`, or if passed as `true`, creates and\n     * returns a new `Map`. The keys are `YYYY-MM-DD` date strings and the entries are arrays of\n     * {@link Scheduler.model.EventModel EventModel}s.\n     * @returns {Scheduler.model.EventModel[]|Map} Events which match the passed configuration.\n     * @category Events\n     */\n    getEvents({\n        filter,\n        date,\n        startDate,                  // Events which intersect the startDate/endDate\n        endDate,                    // will be returned\n        startOnly,                  // Only events which start on each date will be returned\n        includeOccurrences,         // Interpolate occurrences into the returned event set\n        allowPartial,               // Include events which *intersect* the date range\n        onlyAssigned = false,       // Only include events that are assigned to a resource\n        dateMap = false,            // Return a Map keyed by date each value being an array of events\n        dayTime = null,\n\n        // Private option. Select which date index to look up events in depending on the date\n        // we are examining in the date iteration process. Some callers may want to use\n        // different indices depending on the stage through the date iteration.\n        // See Calendar package for usage.\n        getDateIndex\n    }) {\n        const\n            me                = this,\n            options           = arguments[0],\n            {\n                lastDateRange,\n                added,\n                filtersFunction\n            } = me,\n            passedFilter      = filter;\n\n        // Add filtering for only assigned events if requested.\n        if (onlyAssigned) {\n            options.filter = passedFilter ? e => passedFilter(e) && e.resources.length : e => e.resources.length;\n        }\n\n        // Note that we cannot use defaulting in the argument block because we pass\n        // the incoming options object down into implementations.\n        if (!('startDate' in options)) {\n            startDate = options.startDate = date;\n        }\n        if (!('includeOccurrences' in options)) {\n            includeOccurrences = options.includeOccurrences = true;\n        }\n        if (!('allowPartial' in options)) {\n            allowPartial = options.allowPartial = !startOnly;\n        }\n\n        // We can't use me.filtersFunction if reapplyFilterOnAdd is false because there may be newly\n        // added events which may not be subject to the filter. Records which are still in\n        // the added bag must be tested for presence using indexOf so as to be always in sync\n        // with the store being refiltered. Parens help readability.\n        // Don't use the store's filtering function if we were asked to ignore filters.\n        // eslint-disable-next-line no-extra-parens\n        options.storeFilterFn = me.isFiltered && !options.ignoreFilters ? (me.reapplyFilterOnAdd ? filtersFunction : (eventRecord => added.includes(eventRecord) ? me.indexOf(eventRecord) > -1 : filtersFunction(eventRecord))) : null;\n\n        // Default to a one day range if only startDate passed\n        if (!endDate) {\n            if (startDate) {\n                endDate = options.endDate = DateHelper.clearTime(startDate);\n                endDate.setDate(endDate.getDate() + 1);\n            }\n            // If no dates passed, the dateFilter will include all.\n            else {\n                // We need to know what occurrences to generate.\n                if (includeOccurrences) {\n                    throw new Error('getEvents MUST be passed startDate and endDate if recurring occurrences are requested');\n                }\n                options.dateFilter = returnTrue;\n            }\n        }\n\n        if (!options.dateFilter) {\n            // Must start in the date range\n            if (startOnly) {\n                options.dateFilter = e => {\n                    // Avoid hitting getter twice. Use batched value if present.\n                    const eventStartDate = e.hasBatchedChange('startDate') ? e.get('startDate') : e.startDate;\n\n                    return eventStartDate && !(DateHelper.clearTime(eventStartDate) - startDate);\n                };\n            }\n            // Any intersection with our date range\n            else if (allowPartial) {\n                options.dateFilter = e => {\n                    // Avoid hitting getter twice. Use batched value if present.\n                    const\n                        eventStartDate = e.hasBatchedChange('startDate') ? e.get('startDate') : e.startDate,\n                        eventEndDate   = e.hasBatchedChange('endDate') ? e.get('endDate') : e.endDate || eventStartDate,\n                        isMilestone    = !(eventStartDate - eventEndDate);\n\n                    return eventStartDate && (isMilestone ? DateHelper.betweenLesserEqual(eventStartDate, startDate, endDate) : DateHelper.intersectSpans(eventStartDate, eventEndDate, startDate, endDate));\n                };\n            }\n            // Must be wholly contained with the our range\n            else {\n                options.dateFilter = e => {\n                    // Avoid hitting getter twice. Use batched value if present.\n                    const\n                        eventStartDate = e.hasBatchedChange('startDate') ? e.get('startDate') : e.startDate,\n                        eventEndDate   = e.hasBatchedChange('endDate') ? e.get('endDate') : e.endDate || eventStartDate;\n\n                    return eventStartDate && eventStartDate >= startDate && eventEndDate <= endDate;\n                };\n            }\n        }\n\n        const newDateRange = {\n            startDate,\n            endDate\n        };\n\n        // Ensure the listeners are present\n        me.processConfiguredListeners();\n\n        /**\n         * Fired when a range of events is requested from the {@link #function-getEvents} method.\n         *\n         * <div class=\"note\">\n         * This event fires <span style=\"font-weight:bold\">every time</span> a range of events is\n         * requested from the store.\n         * </div>\n         *\n         * An application may have one of two levels of interest in events being read from a store.<br>\n         *\n         * 1.  To be notified when <span style=\"font-weight:bold\">any</span> event block is requested regardless of what the\n         * date range is.\n         * 2.  To be notified when a <span style=\"font-weight:bold\">new date range</span> is requested.\n         *\n         * This event allows both types of application to be written. The `changed` property is\n         * set if a different date range is requested.\n         *\n         * ```javascript\n         * new Scheduler({\n         *     eventStore : {\n         *         listeners : {\n         *             loadDateRange({ new : { startDate, endDate }, changed }) {\n         *                 // Load new data if user is requesting a different time window.\n         *                 if (changed) {\n         *                     fetch(...);\n         *                 }\n         *             }\n         *         }\n         *     },\n         *     ...\n         * });\n         * ```\n         *\n         * @event loadDateRange\n         * @param {Scheduler.data.EventStore} source This EventStore\n         * @param {Object} old The old date range\n         * @param {Date} old.startDate the old start date.\n         * @param {Date} old.endDate the old end date.\n         * @param {Object} new The new date range\n         * @param {Date} new.startDate the new start date.\n         * @param {Date} new.endDate the new end date.\n         * @param {Boolean} changed `true` if the date range is different from the last time a request was made.\n         */\n        me.trigger('loadDateRange', {\n            old     : lastDateRange || {},\n            new     : Objects.clone(newDateRange),\n            changed : Boolean(!lastDateRange || (lastDateRange.startDate - newDateRange.startDate || lastDateRange.endDate - newDateRange.endDate))\n        });\n        // Dates are mutable, so we must keep our own copy.\n        me.lastDateRange = Objects.clone(newDateRange);\n\n        return dateMap ? me.getEventsAsMap(options) : me.getEventsAsArray(options);\n    }\n\n    /**\n     * Internal implementation for {@link #function-getEvents} to use when not using dateMap.\n     * @private\n     */\n    getEventsAsArray({\n        filter,\n        date,\n        resourceRecord,\n        startDate = date,           // Events which intersect the startDate/endDate\n        endDate,                    // will be returned\n        startOnly,                  // Only events which start on each date will be returned\n        includeOccurrences = true,  // Interpolate occurrences into the returned event set\n        dayTime = null,\n\n        // Injected by the getEvents master method\n        dateFilter,\n\n        storeFilterFn,\n\n        // Private option. Select which date index to look up events in depending on the date\n        // we are examining in the date iteration process. Some callers may want to use\n        // different indices depending on the stage through the date iteration.\n        // See Calendar package for usage.\n        getDateIndex\n    }) {\n        const\n            me     = this,\n            events = [],\n            count  = storeFilterFn ? me.count : me.allCount;\n\n        if (count) {\n            let candidateEvents = resourceRecord ? me.getEventsForResource(resourceRecord) : null;\n\n            // If there *was* a resourceRecord, candidateEvents will already be set up using me.getEventsForResource.\n            // If no resourceRecord specified, we are gathering by date, so use the indices.\n            if (!resourceRecord) {\n                const\n                    dateIndex = me.useDayIndex(dayTime),\n                    eventSet  = new Set(),\n                    indexName = startOnly ? 'startDate' : 'date';\n\n                // Add all recurring events which started on or before our date range.\n                me.recurringEvents.forEach(e => {\n                    if (dateIndex.dayTime.startOfDay(e.startDate) <= startDate) {\n                        eventSet.add(e);\n                    }\n                });\n\n                // Iterate the date range, using the indices to find qualified events.\n                for (const date = new Date(startDate); date < endDate; date.setDate(date.getDate() + 1)) {\n                    const coincidingEvents = dateIndex.get(getDateIndex ? getDateIndex(date) : indexName, date);\n\n                    coincidingEvents?.forEach(e => eventSet.add(e));\n                }\n\n                // We gathered all events which *coincide* with each date.\n                // We also added in all recurring events which started on or before our date range.\n                // All these were made unique by the Set.\n                // Return it to array form.\n                candidateEvents = [...eventSet];\n            }\n\n            // Events found from the date indices won't be filtered.\n            // On the other side, when using getEventForResource we will get all events for\n            // the resource even if the EventStore is filtered, handle this by excluding \"invisible\" events here\n            if (storeFilterFn) {\n                candidateEvents = candidateEvents.filter(storeFilterFn);\n            }\n\n            // Go through candidates.\n            // For a recurring event, and we are including recurrences, add date-qualifying occurrences.\n            // For a non-recurring event, add it if it's date-qualified.\n            for (let i = 0, { length } = candidateEvents; i < length; i++) {\n                const e = candidateEvents[i];\n\n                // For recurring events, add date-qualifying occurrences, not the base\n                if (includeOccurrences && e.isRecurring) {\n                    events.push.apply(events, e.getOccurrencesForDateRange(startDate, endDate).filter(dateFilter));\n                }\n                // For ordinary events, add if it's date-qualified\n                else if (dateFilter(e)) {\n                    events.push(e);\n                }\n            }\n        }\n\n        return filter ? events.filter(filter) : events;\n    }\n\n    /**\n     * Internal implementation for {@link #function-getEvents} to use when using dateMap.\n     * @private\n     */\n    getEventsAsMap({\n        filter : passedFilter,\n        date,\n        resourceRecord,             // Not supported yet. Will add if ever requested.\n        startDate = date,           // Events which intersect the startDate/endDate\n        endDate,                    // will be returned\n        startOnly,                  // Only events which start on each date will be returned\n        includeOccurrences = true,  // Interpolate occurrences into the returned event set\n        dateMap,                    // Return a Map keyed by date each value being an array of events\n        dayTime = null,\n\n        storeFilterFn,\n\n        // Private option. Select which date index to look up events in depending on the date\n        // we are examining in the date iteration process. Some callers may want to use\n        // different indices depending on the stage through the date iteration.\n        // See Calendar package for usage.\n        getDateIndex\n    }) {\n        const me = this;\n\n        // Convert `true` to a Map.\n        if (dateMap?.clear) {\n            dateMap.clear();\n        }\n        else {\n            dateMap = new Map();\n        }\n\n        if (me.count) {\n            const\n                dateIndex       = me.useDayIndex(dayTime),\n                indexName       = startOnly ? 'startDate' : 'date',\n                recurringEvents = [],\n                filter          = e => (!passedFilter || passedFilter(e)) && (!storeFilterFn || storeFilterFn(e)),\n                baseEventFilter = e => notRecurring(e) && filter(e);\n\n            dayTime = dateIndex.dayTime;  // dayTime=null becomes DayTime instance for midnight\n\n            // We can't yet do this for just a resource.\n            if (resourceRecord) {\n                throw new Error('Querying for events for a resource and returning a date-keyed Map is not supported');\n            }\n            else {\n                // Add all recurring events which started before the end of our date range.\n                // There are none in Gantt projects\n                me.recurringEvents?.forEach(e => {\n                    if (dayTime.startOfDay(e.startDate) < endDate) {\n                        recurringEvents.push(e);\n                    }\n                });\n\n                // Iterate the date range, using the indices to find qualified events.\n                for (const date = new Date(startDate); date < endDate; date.setDate(date.getDate() + 1)) {\n                    let [coincidingEvents, key] = dateIndex.get(getDateIndex ? getDateIndex(date) : indexName, date, true);\n\n                    // The index entry may be there, but it could be empty.\n                    if (coincidingEvents?.size) {\n                        // Convert Set which index holds into an Array.\n                        // A recurring event doesn't go into the Map, its occurrences do.\n                        // Then filter by the passed filter and this Store's filter function\n                        // because events found from the date indices won't be filtered.\n                        coincidingEvents = [...coincidingEvents].filter(baseEventFilter);\n\n                        // Only create the entry for the day if there are events found\n                        if (coincidingEvents.length) {\n                            (dateMap.get(key) || (dateMap.set(key, []).get(key))).push(...coincidingEvents);\n                        }\n                    }\n                }\n            }\n\n            // Go through matching recurring events.\n            for (let i = 0, { length } = recurringEvents; i < length; i++) {\n                const\n                    e = recurringEvents[i],\n                    // For each recurring event, add occurrences if we are including occurrences else, add the base.\n                    // Then filter by the passed filter and this Store's filter function\n                    // because events found from the date indices won't be filtered.\n                    occurrences = (includeOccurrences ? e.getOccurrencesForDateRange(startDate, endDate) : [e]).filter(filter),\n                    lastDate    = DateHelper.add(endDate, 1, 'day');\n\n                // Add occurrences to dateMap\n                for (let bucket, i = 0, { length } = occurrences; i < length; i++) {\n                    const\n                        occurrence = occurrences[i],\n                        date = dayTime.startOfDay(occurrence.startDate),\n                        indexName = getDateIndex ? getDateIndex(date) : (startOnly ? 'startDate' : 'date'),\n                        lastIntersectingDate = (indexName === 'startDate') || !occurrence.durationMS\n                            ? DateHelper.add(date, 1, 'day')\n                            : DateHelper.min(occurrence.endDate || DateHelper.add(occurrence.startDate, occurrence.duration, occurrence.durationUnit), lastDate);\n\n                    // Loop through covered dates, adding to dateMap if required\n                    for (; date < lastIntersectingDate; date.setDate(date.getDate() + 1)) {\n                        const key = dayTime.dateKey(date);\n\n                        (bucket = dateMap.get(key)) || dateMap.set(key, bucket = []);\n\n                        bucket.push(occurrence);\n                    }\n                }\n            }\n        }\n\n        return dateMap;\n    }\n\n};\n","import DayTime from '../../../Core/util/DayTime.js';\n\n/**\n * @module Scheduler/data/util/EventDayIndex\n */\n\nconst\n    // Maps an index name that can be requested to its storage property on the EventDayIndex instance:\n    indexNameMap = {\n        date      : '_dateIndex',\n        startDate : '_startDateIndex'\n    },\n    indexProps         = Object.values(indexNameMap),\n    emptyArray         = Object.freeze([]),\n    { MILLIS_PER_DAY } = DayTime;\n\n/**\n * This utility class is used by event stores to index events by their day (a \"YYYY-MM-DD\" value, also known as a\n * \"date key\"). This key is produced by a {@link Core.util.DayTime} instance. If two `DayTime` instances have a common\n * `startShift`, they can share an index.\n *\n * @internal\n */\nexport default class EventDayIndex {\n    constructor(store, dayTime) {\n        /**\n         * The `DayTime` definition for this index. This is set to the initial DayTime instance but can be used for\n         * any other {@link #function-register registered} `DayTime` instances since they all posses the same value for\n         * `startShift`.\n         *\n         * This defaults to {@link Core.util.DayTime#property-MIDNIGHT-static}.\n         * @member {Core.util.DayTime} dayTime\n         * @readonly\n         */\n        this.dayTime = dayTime || DayTime.MIDNIGHT;\n\n        /**\n         * The owning store instance of this index.\n         * @member {Scheduler.data.EventStore} store\n         * @private\n         * @readonly\n         */\n        this.store = store;\n\n        /**\n         * The `DayTime` instances {@link #function-register registered} with this index instance. As instances are\n         * {@link #function-unregister unregistered} they are removed from this array. Once this array is empty, this\n         * index can be discarded.\n         * @member {Core.util.DayTime[]} users\n         * @private\n         */\n        this.users = [this.dayTime];\n    }\n\n    /**\n     * Adds an event record to the specified index (either \"startDate\" or \"date\") for a given `date`.\n     * @param {String} indexName The index to which the event record is to be added (either \"startDate\" or \"date\").\n     * @param {Date|Number} date A date for which the event record overlaps. The {@link Core.util.DayTime#function-dateKey}\n     * method is used to convert this date to a \"YYYY-MM-DD\" key for the index.\n     * @param {Scheduler.model.EventModel} eventRecord The event record.\n     * @private\n     */\n    add(indexName, date, eventRecord) {\n        const\n            index    = this[indexNameMap[indexName]],\n            key      = this.dayTime.dateKey(date),\n            entry    = index[key] || (index[key] = new Set());\n\n        entry.add(eventRecord);\n    }\n\n    /**\n     * Adds an event record to all indexes for all dates which the event overlaps.\n     * @param {Scheduler.model.EventModel} eventRecord The event record.\n     * @private\n     */\n    addEvent(eventRecord) {\n        let dateMS = this.dayTime.startOfDay(eventRecord.startDate)?.getTime(),\n            endDateMS;\n\n        if (dateMS) {\n            endDateMS = eventRecord.endDate?.getTime() ?? dateMS;\n            this.add('startDate', dateMS, eventRecord);\n\n            do {\n                this.add('date', dateMS, eventRecord);\n                dateMS += MILLIS_PER_DAY;\n            } while (dateMS < endDateMS);\n        }\n    }\n\n    /**\n     * Clear this index.\n     */\n    clear() {\n        indexProps.forEach(name => this[name] = Object.create(null));\n    }\n\n    /**\n     * Returns an object that has properties named by the {@link Core.util.DayTime#function-dateKey} method, or the\n     * array of event records if a `date` is specified, or the event record array and the date key in a 2-element array\n     * if `returnKey` is `true`.\n     * @param {String} indexName The name of the desired index (either 'date' or 'startDate').\n     * @param {Number|Date} date The date as a `Date` or the millisecond UTC epoch. When passed, this method will return\n     * the array of event records for this date.\n     * @param {Boolean} [returnKey] Specify `true` to return the date key along with the event record array.\n     * @returns {Object|Scheduler.model.EventModel[]}\n     */\n    get(indexName, date, returnKey) {\n        // Date indices are created on first usage and after that kept up to date on changes\n        !this.initialized && this.initialize();\n\n        let ret = this[indexNameMap[indexName]],\n            key;\n\n        if (date) {\n            key = this.dayTime.dateKey(date);\n            ret = returnKey ? [ret[key], key] : ret[key];\n        }\n\n        return ret;\n    }\n\n    /**\n     * Called when this index is first used. Once called, further store changes will be used to maintain this index.\n     * @private\n     */\n    initialize() {\n        this.initialized = true;\n\n        this.clear();\n        this.sync('splice', this.store.storage.allValues);\n    }\n\n    invalidate() {\n        this.initialized = false;\n\n        indexProps.forEach(name => this[name] = null);\n    }\n\n    /**\n     * Returns `true` if the given `dayTime` matches this index.\n     * @param {Core.util.DayTime} dayTime\n     * @returns {Boolean}\n     */\n    matches(dayTime) {\n        return this.dayTime.startShift === dayTime.startShift;\n    }\n\n    /**\n     * Removes an event record from the specified index (either \"startDate\" or \"date\") for a given `date`.\n     * @param {String} indexName The index to which the event record is to be removed (either \"startDate\" or \"date\").\n     * @param {Date|Number} date A date for which the event record overlaps. The {@link Core.util.DayTime#function-dateKey}\n     * method is used to convert this date to a \"YYYY-MM-DD\" key for the index.\n     * @param {Scheduler.model.EventModel} eventRecord The event record.\n     * @private\n     */\n    remove(indexName, date, eventRecord) {\n        const\n            index = this[indexNameMap[indexName]],\n            key   = this.dayTime.dateKey(date),\n            entry = index[key];\n\n        if (entry) {\n            entry.delete(eventRecord);\n        }\n    }\n\n    /**\n     * Removes an event record from all indexes for all dates which the event overlaps.\n     * @param {Scheduler.model.EventModel} eventRecord The event record.\n     * @param {Date} startDate The start date for the event. This may be different from the `startDate` of the given\n     * `eventRecord` when the event is rescheduled.\n     * @param {Date} endDate The end date for the event. This may be different from the `endDate` of the given\n     * `eventRecord` when the event is rescheduled.\n     * @private\n     */\n    removeEvent(eventRecord, startDate, endDate) {\n        let dateMS = this.dayTime.startOfDay(startDate)?.getTime(),\n            endDateMS;\n\n        if (dateMS) {\n            endDateMS = endDate?.getTime() ?? dateMS;\n            this.remove('startDate', dateMS, eventRecord);\n\n            do {\n                this.remove('date', dateMS, eventRecord);\n                dateMS += MILLIS_PER_DAY;\n            } while (dateMS < endDateMS);\n        }\n    }\n\n    // <remove-on-release>\n    // TODO: Improve Collection indices to handle this\n    //  Keeps date & startDate indices up to date, used by Calendar and recurrence\n    //  The indices are initialized lazily on first access, and then kept up to date on changes\n    // </remove-on-release>\n    sync(action, added, removed, replaced, wasSet) {\n        added = added || emptyArray;\n        removed = removed || emptyArray;\n\n        const\n            me            = this,\n            addedCount    = added.length,\n            removedCount  = removed.length,\n            replacedCount = replaced?.length;\n\n        let i, newEvent, outgoingEvent;\n\n        if (!me.initialized) {\n            return;\n        }\n\n        switch (action) {\n            case 'clear':\n                me.clear();\n                break;\n\n            // Add and remove\n            case 'splice':\n                // Handle replacement of records by instances with same ID\n                if (replacedCount) {\n                    added = added.slice();\n                    removed = removed.slice();\n\n                    for (i = 0; i < replacedCount; i++) {\n                        removed.push(replaced[i][0]);\n                        added.push(replaced[i][1]);\n                    }\n                }\n\n                // Remove entries from indices\n                if (removedCount) {\n                    for (i = 0; i < removedCount; i++) {\n                        outgoingEvent = removed[i];\n\n                        me.removeEvent(outgoingEvent, outgoingEvent.startDate, outgoingEvent.endDate);\n                    }\n                }\n\n                // Add entries to indices\n                if (addedCount) {\n                    for (i = 0; i < addedCount; i++) {\n                        newEvent = added[i];\n\n                        // Can only be date-indexed if it's scheduled.\n                        // Also ignore parent events (likely using a Gantt project)\n                        if (newEvent.isScheduled && !newEvent.isParent) {\n                            me.addEvent(newEvent);\n                        }\n                    }\n                }\n                break;\n\n            // invoked when the start or end changes so that the event can be re-indexed.\n            case 'reschedule':\n                outgoingEvent = added[0];\n\n                me.removeEvent(outgoingEvent, wasSet.startDate?.oldValue || outgoingEvent.startDate,\n                    wasSet.endDate?.oldValue || outgoingEvent.endDate);\n\n                // Now process as a splice with an add and no removes.\n                me.sync('splice', added);\n\n                break;\n        }\n    }\n\n    /**\n     * This method registers a `dayTime` instance with this index in the `users` array.\n     * @param {Core.util.DayTime} dayTime The instance to register.\n     */\n    register(dayTime) {\n        this.users.push(dayTime);\n    }\n\n    /**\n     * This method unregisters a `dayTime` instance, removing it from the `users` array. This method returns `true` if\n     * this was the last registered instance and this index is no longer needed.\n     * @param {Core.util.DayTime} dayTime The instance to register.\n     * @returns {Boolean}\n     */\n    unregister(dayTime) {\n        const\n            { users } = this,\n            i = users.indexOf(dayTime);\n\n        if (i > -1) {\n            users.splice(i, 1);\n        }\n\n        return !users.length;\n    }\n};\n\n// To avoid shape changes:\nconst proto = EventDayIndex.prototype;\n\nindexProps.forEach(name => proto[name] = null);\nproto.initialized = false;\n","import DayTime from '../../../Core/util/DayTime.js';\nimport EventDayIndex from '../util/EventDayIndex.js';\n\n/**\n * @module Scheduler/data/mixin/DayIndexMixin\n */\n\nconst { MIDNIGHT } = DayTime;\n\n/**\n * Mixing handling Calendars day indices.\n *\n * Consumed by EventStore in Scheduler & Scheduler Pro and TaskStore in Gantt.\n *\n * @mixin\n * @internal\n */\nexport default Target => class DayIndexMixin extends Target {\n\n    static $name = 'DayIndexMixin';\n\n    construct(config) {\n        super.construct(config);\n\n        this.dayIndices = null;\n    }\n\n    //region Keeping index in sync\n\n    // Override to syncIndices on initial load\n    afterLoadData() {\n        this.syncIndices('splice', this.storage.allValues);\n        super.afterLoadData?.();\n    }\n\n    /**\n     * Responds to mutations of the underlying storage Collection.\n     *\n     * Maintain indices for fast finding of events by date.\n     * @param {Object} event\n     * @private\n     */\n    onDataChange({ action, added, removed, replaced }) {\n        // Indices must be synced before responding to change\n        this.syncIndices(action, added, removed, replaced);\n\n        super.onDataChange(...arguments);\n    }\n\n    onDataReplaced(action, data) {\n        // Indices must be synced before responding to change\n        this.syncIndices('clear');\n        this.syncIndices('splice', this.storage.values);\n\n        super.onDataReplaced(action, data);\n    }\n\n    onModelChange(record, toSet, wasSet, silent, fromRelationUpdate) {\n        // Ensure by-date indices are up to date.\n        if (('startDate' in wasSet) || ('endDate' in wasSet)) {\n            this.syncIndices('reschedule', [record], null, null, wasSet);\n        }\n\n        super.onModelChange(...arguments);\n    }\n\n    //endregion\n\n    //region Index\n\n    /**\n     * Invalidates associated day indices.\n     * @internal\n     */\n    invalidateDayIndices() {\n        this.dayIndices?.forEach(dayIndex => dayIndex.invalidate());\n    }\n\n    /**\n     * Registers a `DayTime` instance, creating an `EventDayIndex` for each distinct `startShift`. This index is\n     * maintained until all instances with a matching `startShift` are {@link #function-unregisterDayIndex unregistered}.\n     * @param {Core.util.DayTime} dayTime The instance to register.\n     * @internal\n     * @category Indexing\n     */\n    registerDayIndex(dayTime) {\n        const\n            me = this,\n            dayIndices = me.dayIndices || (me.dayIndices = []);\n\n        let dayIndex, i;\n\n        for (i = 0; !dayIndex && i < dayIndices.length; ++i) {\n            if (dayIndices[i].matches(dayTime)) {\n                (dayIndex = dayIndices[i]).register(dayTime);\n            }\n        }\n\n        !dayIndex && dayIndices.push(dayIndex = new EventDayIndex(me, dayTime));\n\n        return dayIndex;\n    }\n\n    syncIndices(...args) {\n        this.dayIndices?.forEach(dayIndex => dayIndex.sync(...args));\n    }\n\n    /**\n     * Removes a registered `DayTime` instance. If this is the last instance registered to an `EventDayIndex`, that\n     * index is removed.\n     * @param {Core.util.DayTime} dayTime The instance to unregister.\n     * @internal\n     * @category Indexing\n     */\n    unregisterDayIndex(dayTime) {\n        const\n            me = this,\n            { dayIndices } = me;\n\n        for (let i = dayIndices?.length; i-- > 0; /* empty */) {\n            if (dayIndices[i].matches(dayTime)) {\n                if (dayIndices[i].unregister(dayTime)) {\n                    dayIndices.splice(i, 1);\n                }\n\n                break;\n            }\n        }\n    }\n\n    /**\n     * Returns the `EventDayIndex` to use for the given `DayTime` instance. This may be the primary instance or a\n     * child instance created by {@link #function-registerDayIndex}.\n     * @param {Core.util.DayTime} dayTime The `DayTime` of the desired index.\n     * @returns {Scheduler.data.util.EventDayIndex}\n     * @private\n     * @category Indexing\n     */\n    useDayIndex(dayTime) {\n        const\n            me             = this,\n            { dayIndices } = me;\n\n        dayTime = dayTime || MIDNIGHT;\n\n        for (let i = 0; dayIndices && i < dayIndices.length; ++i) {\n            if (dayIndices[i].matches(dayTime)) {\n                return dayIndices[i];\n            }\n        }\n\n        if (dayTime.startShift) {\n            throw new Error(`No day index registered for ${dayTime} on ${me.id}`);\n        }\n\n        return me.registerDayIndex(MIDNIGHT);\n    }\n\n    //endregion\n};\n","import Base from '../../../Core/Base.js';\nimport ArrayHelper from '../../../Core/helper/ArrayHelper.js';\n\n/**\n * @module Scheduler/data/mixin/RecurringTimeSpansMixin\n */\n\nconst\n    emptyArray = Object.freeze([]);\n\n/**\n * This mixin provides recurrence functionality to a store containing {@link Scheduler.model.TimeSpan TimeSpan} models.\n * Normally you don't need to interact with this mixin directly.\n * @mixin\n */\nexport default Target => class RecurringTimeSpansMixin extends (Target || Base) {\n    static get $name() {\n        return 'RecurringTimeSpansMixin';\n    }\n\n    construct(...args) {\n        const me = this;\n\n        // We store all generated occurrences keyed by `_generated_${recurringTimeSpan.id}:${occurrenceStartDate}`\n        // So that when asked to generate an occurrence for a date, an already generated one can be returned.\n        me.globalOccurrences = new Map();\n\n        // All recurring events added to the store are accessible through this Set. It's used\n        // to generate occurrences.\n        me.recurringEvents = new Set();\n\n        super.construct(...args);\n    }\n\n    // Override to refreshRecurringEventsCache on initial load\n    afterLoadData() {\n        // All cached occurrences are now potentially invalid.\n        // A store reload might imply any number of changes which invalidate any occurrence.\n        this.globalOccurrences.clear();\n\n        // Clear and rebuild the recurring events cache\n        this.refreshRecurringEventsCache('clear');\n        this.refreshRecurringEventsCache('splice', this.storage.allValues);\n        super.afterLoadData && super.afterLoadData();\n    }\n\n    /**\n     * Responds to mutations of the underlying storage Collection.\n     *\n     * Maintain indices for fast finding of events by date.\n     * @param {Object} event\n     * @private\n     */\n    onDataChange({ action, added, removed, replaced }) {\n        // Recurring events cache must be refreshed before responding to change\n        this.refreshRecurringEventsCache(action, added, removed, replaced);\n        super.onDataChange(...arguments);\n    }\n\n    refreshRecurringEventsCache(action, added = emptyArray, removed = emptyArray, replaced) {\n        const\n            me                  = this,\n            { recurringEvents } = me,\n            replacedCount       = replaced?.length;\n\n        switch (action) {\n            case 'clear':\n                recurringEvents.clear();\n                break;\n\n            // Add and remove\n            case 'splice': {\n                // Handle replacement of records by instances with same ID\n                if (replacedCount) {\n                    added = added.slice();\n                    removed = removed.slice();\n\n                    for (let i = 0; i < replacedCount; i++) {\n                        removed.push(replaced[i][0]);\n                        added.push(replaced[i][1]);\n                    }\n                }\n\n                const\n                    addedCount   = added.length,\n                    removedCount = removed.length;\n\n                // Track the recurring events we contain\n                if (removedCount && recurringEvents.size) {\n                    for (let i = 0; i < removedCount; i++) {\n                        // If it's being removed, remove it from the recurring events cache.\n                        // If it's not a recurring event, it doesn't matter, it won't be in there.\n                        recurringEvents.delete(removed[i]);\n                    }\n                }\n                // Track the recurring events we contain\n                if (addedCount) {\n                    for (let i = 0; i < addedCount; i++) {\n                        const newEvent = added[i];\n\n                        // Allow easy access to recurring events\n                        if (newEvent.isRecurring) {\n                            recurringEvents.add(newEvent);\n                        }\n                    }\n                }\n                break;\n            }\n        }\n    }\n\n    //<debug>\n    add(record, ...args) {\n        // StoreCRUD#add always converts to array anyway, so do it first here\n        // so that the occurrence check can be reliable.\n        const records = ArrayHelper.asArray(record);\n\n        // Occurrences can never be in the store.\n        // When an occurrence is edited, it becomes an exception\n        // and is promoted to be a full event and THEN added.\n        if (this.isEventStore && records.some(r => r.isOccurrence)) {\n            throw new Error('Occurrences must not be added to the event store');\n        }\n        else {\n            return super.add(records, ...args);\n        }\n    }\n    //</debug>\n\n    getById(id) {\n        let result = super.getById(id);\n\n        // If the id is not found in the Store, then it could be one of our generated occurrences\n        if (!result) {\n            result = this.globalOccurrences.get(this.modelClass.asId(id));\n        }\n\n        return result;\n    }\n\n    onModelChange(record, toSet, wasSet, silent, fromRelationUpdate) {\n        const isRecurrenceRelatedFieldChange = !silent && this.isRecurrenceRelatedFieldChange(record, wasSet);\n\n        // If this is the base of a recurring sequence, then any reactors to events from\n        // the super call must regenerate occurrences, so must be done at top.\n        // If silent is true, occurrences won't be recalculated. Do not remove occurrences from cache in such case.\n        if (isRecurrenceRelatedFieldChange) {\n            record.removeOccurrences();\n        }\n\n        super.onModelChange(...arguments);\n\n        // If this is the base of a recurring sequence, then the EventStore must\n        // trigger a refresh event so that UIs refresh themselves.\n        // This could be at the tail end of the creation of an exception\n        // or a new recurring base.\n        if (isRecurrenceRelatedFieldChange) {\n            const event = { action : 'batch', records : this.storage.values };\n\n            this.trigger('refresh', event);\n            this.trigger('change', event);\n        }\n    }\n\n    /**\n     * The method restricts which field modifications should trigger timespan occurrences building.\n     * By default, any field change of a recurring timespan causes the rebuilding.\n     * @param  {Scheduler.model.TimeSpan} timeSpan The modified timespan.\n     * @param  {Object} wasSet Object containing the change set.\n     * @returns {Boolean} `True` if the fields modification should trigger the timespan occurrences rebuilding.\n     * @internal\n     * @category Recurrence\n     */\n    isRecurrenceRelatedFieldChange(timeSpan, wasSet) {\n        return timeSpan.isRecurring || 'recurrenceRule' in wasSet;\n    }\n\n    /**\n     * Builds occurrences for the provided timespan across the provided date range.\n     * @private\n     * @category Recurrence\n     */\n    getOccurrencesForTimeSpan(timeSpan, startDate, endDate) {\n        const result = [];\n\n        if (timeSpan.isRecurring) {\n            timeSpan.recurrence.forEachOccurrence(startDate, endDate, r => result.push(r));\n        }\n\n        return result;\n    }\n\n    set data(data) {\n        // All cached occurrences are now invalid with a new dataset\n        this.globalOccurrences.clear();\n        super.data = data;\n    }\n\n    /**\n     * Returns all the recurring timespans.\n     * @returns {Scheduler.model.TimeSpan[]} Array of recurring events.\n     * @category Recurrence\n     */\n    getRecurringTimeSpans() {\n        return [...this.recurringEvents];\n    }\n};\n","import Base from '../../../Core/Base.js';\nimport RecurringTimeSpansMixin from './RecurringTimeSpansMixin.js';\n\n/**\n * @module Scheduler/data/mixin/RecurringEventsMixin\n */\n\n/**\n * This mixin class provides recurrence functionality to the {@link Scheduler.data.EventStore event store}.\n * @extends Scheduler/data/mixin/RecurringTimeSpansMixin\n * @mixin\n */\nexport default Target => class RecurringEventsMixin extends RecurringTimeSpansMixin(Target || Base) {\n\n    static get $name() {\n        return 'RecurringEventsMixin';\n    }\n\n    /**\n     * Returns all the recurring events.\n     *\n     * **An alias for ** {@link Scheduler.data.mixin.RecurringTimeSpansMixin#function-getRecurringTimeSpans} method.\n     *\n     * @returns {Scheduler.model.EventModel[]} Array of recurring events.\n     * @category Recurrence\n     */\n    getRecurringEvents() {\n        return this.getRecurringTimeSpans();\n    }\n\n    isEventPersistable(event) {\n        // occurrences are not persistable\n        return super.isEventPersistable(event) && (!event.supportsRecurring || !event.isOccurrence);\n    }\n};\n","import Base from '../../../../Core/Base.js';\n\nconst dayParseRegExp = /^([+-]?[0-9])?(SU|MO|TU|WE|TH|FR|SA)$/;\n\nconst days = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'];\n\nexport default class RecurrenceDayRuleEncoder extends Base {\n\n    static decodeDay(rawDay) {\n        let parsedDay,\n            result;\n\n        if ((parsedDay = dayParseRegExp.exec(rawDay))) {\n\n            result = [days.indexOf(parsedDay[2])];\n\n            // optional position number\n            if (parsedDay[1]) {\n                parsedDay[1] = parseInt(parsedDay[1], 10);\n                result.push(parsedDay[1]);\n            }\n        }\n\n        return result;\n    }\n\n    static encodeDay(day) {\n        let position;\n\n        // support decodeDay() result format\n        if (Array.isArray(day)) {\n            [day, position] = day;\n        }\n\n        return (position ? position.toString() : '') + days[day];\n    }\n\n    // Turns days values provided as an array of strings (like [`-1MO`, `SU`, `+3FR`])\n    // into an array of [ dayIndex, position ] elements, where:\n    //\n    // - `dayIndex` - zero-based week day index value (0 - Sunday, 1 - Monday, 2 - Tuesday, etc.)\n    // - `position` - (optional) 1-based position of the day (integer value (can be both positive and negative))\n    static decode(rawDays) {\n        const result = [];\n        let parsedDay;\n\n        if (rawDays) {\n            for (let i = 0; i < rawDays.length; i++) {\n                if ((parsedDay = this.decodeDay(rawDays[i]))) {\n                    result.push(parsedDay);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    static encode(days) {\n        const result = [];\n        let day;\n\n        if (days) {\n            for (let i = 0; i < days.length; i++) {\n                if ((day = this.encodeDay(days[i]))) {\n                    result.push(day);\n                }\n            }\n        }\n\n        return result;\n    }\n};\n","import Base from '../../../../Core/Base.js';\nimport DateHelper from '../../../../Core/helper/DateHelper.js';\n\n/**\n * @module Scheduler/data/util/recurrence/AbstractRecurrenceIterator\n * @private\n */\n\nconst\n    frequencyToUnitRe = /ly$/i,\n    frequencyToUnit = frequency => {\n        const result = frequency.replace(frequencyToUnitRe, '');\n\n        return result === 'DAI' ? 'DAY' : result;\n    },\n    fn = (date, counter, isFirst, timeSpan) => timeSpan.buildOccurrence(date, isFirst),\n    captureLastOccurrence = date => lastOccurrenceDate = date;\n\nlet lastOccurrenceDate;\n\nexport default class AbstractRecurrenceIterator extends Base {\n\n    static frequency = 'NONE';\n\n    static MAX_OCCURRENCES_COUNT = 1000000;\n\n    static processIterationConfig(config) {\n        const\n            { recurrence } = config,\n            {\n                frequency,\n                interval,\n                timeSpan,\n                endDate : until,\n                count\n            } = recurrence;\n\n        // Force the correction of the event to be in sync with its recurrence rule\n        // before performing iteration. For example, if the event's configured startDate\n        // is 1st January 2020, and the rule dictates that the event will take place\n        // monthly, every Monday, then the first event is not until Monday 6th January, 2020.\n        if (!config.syncingStartDate && !timeSpan.meta.isSyncedWithRule) {\n            // Do not generate occurrences outside of the specified range\n            const\n                intervalEndDate = DateHelper.add(timeSpan.startDate, interval, frequencyToUnit(frequency)),\n                endDate = DateHelper.min(\n                    intervalEndDate,\n                    config.endDate || intervalEndDate\n                );\n\n            this.forEachDate({\n                syncingStartDate : true,\n                startDate        : timeSpan.startDate,\n                endDate,\n                recurrence,\n                fn\n            });\n        }\n\n        // Capture the start after its been synced with its recurrence rule\n        const timeSpanStart = timeSpan.startDate;\n\n        // Extract the endDate from the config, defaulting to the recurrence UNTIL date\n        let {\n            startDate = timeSpanStart,\n            endDate   = until\n        } = config;\n\n        // No point in starting the iteration before the event starts\n        if (startDate < timeSpanStart) {\n            startDate = timeSpanStart;\n        }\n\n        // The recurrence's stop date overrides the configured endDate.\n        if (until) {\n            if (!endDate || endDate > until) {\n                endDate = until;\n            }\n        }\n        // If we are limiting using count and we are not starting from the\n        // first occurrence, then we have to calculate a stop date.\n        // This is because for date ranges in the future we cannot calculate how many\n        // preceding occurrences there may have been.\n        else if (count && startDate > timeSpanStart) {\n            // Iterate the occurrences from the start to capture the last one\n            this.forEachDate({\n                recurrence,\n                fn : captureLastOccurrence\n            });\n\n            // The date of the last occurrence in the count sequence overrides the configured endDate.\n            if (!endDate || endDate > lastOccurrenceDate) {\n                // since endDate of the provided interval is exclusive add 1 millisecond\n                endDate = new Date(lastOccurrenceDate.getTime() + 1);\n            }\n        }\n\n        // Preserve the requested start of requested visits.\n        const earliestVisibleDate = startDate;\n\n        // Unless we are only asked for events which *start* within the time range. we must make\n        // a best attempt to include any occurrences which span the start date.\n        // So if we are asking for events from the 1st of the month, and there's an event\n        // which runs every 2 months from the 15th to the 5th, we must include it. Start the\n        // iteration <interval> full frequency quanta before the requested start.\n        // This will only cause <interval> extra iterations.\n        // We cannot step back to before the event's starting date though.\n        if (!config.startOnly) {\n            startDate = new Date(DateHelper.max(DateHelper.add(startDate, -interval, frequencyToUnit(frequency)), timeSpanStart));\n        }\n\n        return Object.assign({\n            extraArgs : [],\n            // Only check start date for time spans with 0 duration\n            startOnly : !Boolean(timeSpan.durationMS)\n        }, config, {\n            startDate,\n            endDate,\n            timeSpan,\n            timeSpanStart,\n            earliestVisibleDate,\n            endDateMS             : endDate?.getTime(),\n            timeSpanStartMS       : timeSpanStart.getTime(),\n            earliestVisibleDateMS : earliestVisibleDate.getTime(),\n            durationMS            : timeSpan.durationMS,\n            spansStart            : startDate <= timeSpanStart && endDate > timeSpanStart\n        });\n    }\n\n    static getOccurrenceIndex(event) {\n        if (event.isOccurrence) {\n            return DateHelper.diff(event.recurringTimeSpan.startDate, event.startDate, frequencyToUnit(event.recurringTimeSpan.recurrence.frequency));\n        }\n    }\n\n    /**\n     * Returns Nth occurrence of a week day in the provided period of time.\n     * @param  {Date} startDate Period start date.\n     * @param  {Date} endDate   Period end date.\n     * @param  {Number} day    Week day (0 - Sunday, 1 - Monday, 2 - Tuesday, etc.)\n     * @param  {Number} index  Index to find.\n     * @returns {Date}           Returns the found date or null if there is no `index`th entry.\n     * @private\n     */\n    static getNthDayInPeriod(startDate, endDate, day, index) {\n        let result, sign, borderDate;\n\n        if (index) {\n            if (index > 0) {\n                sign = 1;\n                borderDate = startDate;\n            }\n            else {\n                sign = -1;\n                borderDate = endDate;\n            }\n\n            // delta between requested day and border day\n            const delta = day - borderDate.getDay();\n\n            // if the requested day goes after (before, depending on borderDate used (start/end))\n            // we adjust index +/-1\n            if (sign * delta < 0) {\n                index += sign;\n            }\n\n            // measure \"index\" weeks forward (or backward) ..take delta into account\n            // result = new Date(borderDate.getTime() + ((index - sign) * 7 + delta) * 24*60*60*1000);\n            // Per https://github.com/bryntum/support/issues/3413 - don't do that ^^ because DST makes days/week\n            // alternatingly shorter or longer depending on going in/out of DST:\n            result = new Date(borderDate);\n            result.setDate(borderDate.getDate() + (index - sign) * 7 + delta);\n\n            // if resulting date is outside of the provided range there is no \"index\"-th entry\n            // of the day\n            if (result < startDate || result > endDate) {\n                result = null;\n            }\n        }\n\n        return result;\n    }\n\n    static buildDate(year, month, date) {\n        const dt = new Date(year, month, date);\n\n        if (dt.getFullYear() === year && dt.getMonth() === month && dt.getDate() === date) {\n            return dt;\n        }\n    }\n\n    static isValidPosition(position) {\n        return Boolean(position);\n    }\n\n    static forEachDateAtPositions(dates, positions, fn, scope) {\n        const datesLength = dates.length,\n            processed     = {};\n\n        for (let i = 0; i < positions.length; i++) {\n\n            const index = positions[i];\n\n            if (this.isValidPosition(index)) {\n                const date = index > 0 ? dates[index - 1] : dates[datesLength + index];\n\n                if (date && !processed[date.getTime()]) {\n\n                    // remember that we've returned the date\n                    processed[date.getTime()] = true;\n\n                    // return false if it's time to stop recurring\n                    if (fn.call(scope, date) === false) {\n                        return false;\n                    }\n                }\n            }\n        }\n    }\n\n    static isInView(startOnly, occurrenceDate, earliestVisibleDate, durationMS, timeSpan) {\n        return (\n            startOnly\n                ? occurrenceDate >= earliestVisibleDate\n                : occurrenceDate.valueOf() + durationMS > earliestVisibleDate\n        ) && !timeSpan.hasException(occurrenceDate);\n    }\n\n    // Slightly faster version of ^, used by Daily & Weekly iterators\n    static isInViewMS(startOnly, occurenceDate, occurrenceDateMS, earliestVisibleDateMS, durationMS, timeSpan) {\n        return (\n            startOnly\n                ? occurrenceDateMS >= earliestVisibleDateMS\n                : occurrenceDateMS + durationMS > earliestVisibleDateMS\n        ) && !timeSpan.hasException(occurenceDate);\n    }\n}\n","/**\n * @module Scheduler/data/util/recurrence/DailyRecurrenceIterator\n */\n\nimport AbstractRecurrenceIterator from './AbstractRecurrenceIterator.js';\nimport DateHelper from '../../../../Core/helper/DateHelper.js';\n\n/**\n * A class which provides iteration to call a function for dates specified by a\n * {@link Scheduler.model.RecurrenceModel RecurrenceModel} over a specified date range.\n * @private\n */\nexport default class DailyRecurrenceIterator extends AbstractRecurrenceIterator {\n\n    static frequency = 'DAILY';\n\n    /**\n     * Iterates over the passed date range, calling the passed callback on each date on which\n     * starts a recurring event which matches the passed recurrence rule and overlaps the start and end dates\n     * and is not an {@link Scheduler.model.mixin.RecurringTimeSpan#field-exceptionDates exceptionDate}\n     * in the recurring event.\n     * @param {Object} config An object which describes how to iterate.\n     * @param {Date} config.startDate The point in time to begin iteration.\n     * @param {Date} config.endDate The point in time to end iteration.\n     * @param {Boolean} [config.startOnly] By default, all occurrences which intersect the date range\n     * will be visited. Pass `true` to only visit occurrences which *start* in the date range.\n     * @param {Scheduler.model.RecurrenceModel} config.recurrence The point in time to end iteration.\n     * @param {Function} config.fn The function to call for each date which matches the recurrence in the date range.\n     * @param {Date} config.fn.date The occurrence date.\n     * @param {Number} config.fn.counter A counter of how many dates have been visited in this iteration.\n     * @param {Boolean} config.fn.isFirst A flag which is `true` if the date is the first occurrence in the specified recurrence rule.\n     * @param {Array} [config.extraArgs] Extra arguments to pass to the callback after the `isFirst` argument.\n     */\n    static forEachDate(config) {\n        const\n            {\n                startOnly,\n                startDate,\n                endDate,\n                endDateMS,\n                timeSpan,\n                timeSpanStart,\n                earliestVisibleDateMS,\n                durationMS,\n                spansStart,\n                recurrence,\n                fn,\n                extraArgs,\n                scope = this\n            }                = this.processIterationConfig(config),\n            { interval }     = recurrence,\n            delay            = startDate - timeSpanStart,\n            // recurrence interval duration in ms (86400000 is a single day duration in ms)\n            intervalDuration = interval * 86400000,\n            delayInIntervals = Math.floor(delay / intervalDuration);\n\n        let { count }       = recurrence,\n            counter         = 0,\n            occurrenceDate  = DateHelper.add(timeSpanStart, delayInIntervals * interval, 'day'),\n            occurrenceDateMS = occurrenceDate.getTime();\n\n        if (!endDate && !count) {\n            count = this.MAX_OCCURRENCES_COUNT;\n        }\n\n        while (!endDateMS || occurrenceDateMS < endDateMS) {\n            const inView = this.isInViewMS(startOnly, occurrenceDate, occurrenceDateMS, earliestVisibleDateMS, durationMS, timeSpan);\n\n            counter++;\n\n            if (inView &&\n                ((endDateMS && occurrenceDateMS > endDateMS) || fn.apply(scope, [occurrenceDate, counter, counter === 1 && spansStart, timeSpan, ...extraArgs]) === false || (count && counter >= count))\n            ) {\n                break;\n            }\n\n            // shift to the next day\n            occurrenceDate = DateHelper.add(occurrenceDate, interval, 'day');\n            occurrenceDateMS = occurrenceDate.getTime();\n        }\n    }\n}\n","/**\n * @module Scheduler/data/util/recurrence/WeeklyRecurrenceIterator\n */\n\nimport AbstractRecurrenceIterator from './AbstractRecurrenceIterator.js';\nimport DateHelper from '../../../../Core/helper/DateHelper.js';\nimport DayRuleEncoder from './RecurrenceDayRuleEncoder.js';\n\n/**\n * A class which provides iteration to call a function for dates specified by a\n * {@link Scheduler.model.RecurrenceModel RecurrenceModel} over a specified date range.\n * @private\n */\nexport default class WeeklyRecurrenceIterator extends AbstractRecurrenceIterator {\n\n    static frequency = 'WEEKLY';\n\n    /**\n     * Iterates over the passed date range, calling the passed callback on each date on which\n     * starts an event which matches the passed recurrence rule and overlaps the start and end dates.\n     * @param {Object} config An object which describes how to iterate.\n     * @param {Date} config.startDate The point in time to begin iteration.\n     * @param {Date} config.endDate The point in time to end iteration.\n     * @param {Boolean} [config.startOnly] By default, all occurrences which intersect the date range\n     * will be visited. Pass `true` to only visit occurrences which *start* in the date range.\n     * @param {Scheduler.model.RecurrenceModel} config.recurrence The point in time to end iteration.\n     * @param {Function} config.fn The function to call for each date which matches the recurrence in the date range.\n     * @param {Date} config.fn.date The occurrence date.\n     * @param {Number} config.fn.counter A counter of how many dates have been visited in this iteration.\n     * @param {Boolean} config.fn.isFirst A flag which is `true` if the date is the first occurrence in the specified recurrence rule.\n     * @param {Array} [config.extraArgs] Extra arguments to pass to the callback after the `isFirst` argument.\n     */\n    static forEachDate(config) {\n        const\n            {\n                startOnly,\n                startDate,\n                endDateMS,\n                timeSpan,\n                timeSpanStart,\n                timeSpanStartMS,\n                earliestVisibleDateMS,\n                durationMS,\n                spansStart,\n                recurrence,\n                fn,\n                extraArgs,\n                scope = this\n            }                     = this.processIterationConfig(config),\n            {\n                interval,\n                days\n            }                     = recurrence,\n            { weekStartDay }      = DateHelper,\n            startHours            = timeSpanStart.getHours(),\n            startMinutes          = timeSpanStart.getMinutes(),\n            startSeconds          = timeSpanStart.getSeconds(),\n            startMS               = timeSpanStart.getMilliseconds();\n\n        let counter    = 0,\n            { count }  = recurrence,\n            weekDays   = DayRuleEncoder.decode(days),\n            weekStartDate, occurrenceDate;\n\n        // \"Days\" might be skipped then we use the event start day\n        if (!weekDays?.length) {\n            weekDays = [[timeSpanStart.getDay()]];\n        }\n\n        // If week start day is not zero (Sunday)\n        // we need to normalize weekDays array since its values are used\n        // to calculate real dates as: date = week_start_date + weekDay_entry\n        // which does not work when week starts on non-Sunday\n        if (weekStartDay > 0) {\n            for (let i = 0; i < weekDays.length; i++) {\n                if (weekStartDay > weekDays[i][0]) {\n                    weekDays[i][0] = 7 - weekStartDay - weekDays[i][0];\n                }\n                else {\n                    weekDays[i][0] -= weekStartDay;\n                }\n            }\n        }\n\n        // days could be provided in any order so it's important to sort them\n        weekDays.sort((a, b) => a[0] - b[0]);\n\n        // if the recurrence is limited w/ \"Count\" or not every interval should match\n        // we need to 1st count passed occurrences so we always start iteration from the event start date\n        weekStartDate = DateHelper.getNext(count || interval > 1 ? timeSpanStart : startDate, 'week', 0);\n\n        if (!endDateMS && !count) {\n            count = this.MAX_OCCURRENCES_COUNT;\n        }\n\n        while (!endDateMS || weekStartDate.getTime() < endDateMS) {\n\n            for (let i = 0; i < weekDays.length; i++) {\n                // Faster than chaining multiple DateHelper calls\n                occurrenceDate = new Date(\n                    weekStartDate.getFullYear(),\n                    weekStartDate.getMonth(),\n                    weekStartDate.getDate() + weekDays[i][0],\n                    startHours,\n                    startMinutes,\n                    startSeconds,\n                    startMS\n                );\n\n                const occurrenceDateMS = occurrenceDate.getTime();\n\n                if (occurrenceDateMS >= timeSpanStartMS) {\n                    const inView = this.isInViewMS(startOnly, occurrenceDate, occurrenceDateMS, earliestVisibleDateMS, durationMS, timeSpan);\n\n                    counter++;\n\n                    if (inView &&\n                        ((endDateMS && occurrenceDateMS >= endDateMS) ||\n                        (fn.apply(scope, [occurrenceDate, counter, counter === 1 && spansStart, timeSpan, ...extraArgs]) === false) ||\n                        (count && counter >= count))\n                    ) {\n                        return;\n                    }\n                }\n            }\n\n            // get next week start\n            weekStartDate = DateHelper.getNext(weekStartDate, 'week', interval);\n        }\n    }\n\n}\n","/**\n * @module Scheduler/data/util/recurrence/MonthlyRecurrenceIterator\n */\n\nimport AbstractRecurrenceIterator from './AbstractRecurrenceIterator.js';\nimport DateHelper from '../../../../Core/helper/DateHelper.js';\nimport DayRuleEncoder from './RecurrenceDayRuleEncoder.js';\n\n/**\n * A class which provides iteration to call a function for dates specified by a\n * {@link Scheduler.model.RecurrenceModel RecurrenceModel} over a specified date range.\n * @private\n */\nexport default class MonthlyRecurrenceIterator extends AbstractRecurrenceIterator {\n\n    static frequency = 'MONTHLY';\n\n    static getNthDayOfMonth(date, dayNum) {\n        const daysInMonth = DateHelper.daysInMonth(date);\n        let result = null;\n\n        if (dayNum && Math.abs(dayNum) <= daysInMonth) {\n            result = new Date(date.getFullYear(), date.getMonth(), dayNum < 0 ? daysInMonth + dayNum + 1 : dayNum);\n        }\n\n        return result;\n    }\n\n    static isValidPosition(position) {\n        return position && Math.abs(position) > 0 && Math.abs(position) <= 31;\n    }\n\n    /**\n     * Iterates over the passed date range, calling the passed callback on each date on which\n     * starts an event which matches the passed recurrence rule and overlaps the start and end dates.\n     * @param {Object} config An object which describes how to iterate.\n     * @param {Date} config.startDate The point in time to begin iteration.\n     * @param {Date} config.endDate The point in time to end iteration.\n     * @param {Boolean} [config.startOnly] By default, all occurrences which intersect the date range\n     * will be visited. Pass `true` to only visit occurrences which *start* in the date range.\n     * @param {Scheduler.model.RecurrenceModel} config.recurrence The point in time to end iteration.\n     * @param {Function} config.fn The function to call for each date which matches the recurrence in the date range.\n     * @param {Date} config.fn.date The occurrence date.\n     * @param {Number} config.fn.counter A counter of how many dates have been visited in this iteration.\n     * @param {Boolean} config.fn.isFirst A flag which is `true` if the date is the first occurrence in the specified recurrence rule.\n     * @param {Array} [config.extraArgs] Extra arguments to pass to the callback after the `isFirst` argument.\n     */\n    static forEachDate(config) {\n        const\n            {\n                startOnly,\n                startDate,\n                endDate,\n                timeSpan,\n                timeSpanStart,\n                earliestVisibleDate,\n                durationMS,\n                spansStart,\n                recurrence,\n                fn,\n                extraArgs,\n                scope = this\n            }              = this.processIterationConfig(config),\n            {\n                interval,\n                days,\n                count,\n                positions\n            } = recurrence,\n            weekDays       = DayRuleEncoder.decode(days),\n            hasPositions   = positions && positions.length,\n            processedDate  = {};\n\n        let\n            { monthDays }  = recurrence,\n            counter        = 0,\n            weekDayPosition,\n            monthStartDate, monthEndDate,\n            dates, occurrenceDate, i;\n\n        // if the recurrence is limited w/ \"Count\" or not every interval should match\n        // we need to 1st count passed occurrences so we always start iteration from the event start date\n        monthStartDate = DateHelper.startOf(count || interval > 1 ? timeSpanStart : startDate, 'month');\n        monthEndDate   = new Date(DateHelper.getNext(monthStartDate, 'month', 1) - 1);\n\n        // If no month days nor week days are provided let's use event start date month day\n        if (!(monthDays && monthDays.length) && !(weekDays && weekDays.length)) {\n            monthDays = [timeSpanStart.getDate()];\n        }\n\n        if (weekDays && weekDays.length) {\n            // Collect hash of positions indexed by week days\n            weekDays.forEach(day => {\n                if (day[1]) {\n                    weekDayPosition         = weekDayPosition || {};\n                    weekDayPosition[day[0]] = day[1];\n                }\n            });\n        }\n\n        while ((!endDate || endDate > monthStartDate) && (!count || counter < count)) {\n\n            dates = [];\n\n            if (weekDays && weekDays.length) {\n\n                weekDays.forEach(day => {\n                    const weekDay = day[0];\n\n                    let from    = 1,\n                        till    = 53;\n\n                    // if position provided\n                    if (day[1]) {\n                        from = till = day[1];\n                    }\n\n                    for (i = from; i <= till; i++) {\n                        if ((occurrenceDate = this.getNthDayInPeriod(monthStartDate, monthEndDate, weekDay, i))) {\n                            occurrenceDate = DateHelper.copyTimeValues(occurrenceDate, timeSpanStart);\n\n                            if (!processedDate[occurrenceDate.getTime()]) {\n                                // remember we processed the date\n                                processedDate[occurrenceDate.getTime()] = true;\n\n                                dates.push(occurrenceDate);\n                            }\n                        }\n                    }\n                });\n\n                dates.sort((a, b) => a - b);\n\n                if (!hasPositions) {\n                    for (i = 0; i < dates.length; i++) {\n                        occurrenceDate = dates[i];\n\n                        if (occurrenceDate >= timeSpanStart) {\n                            const inView = this.isInView(startOnly, occurrenceDate, earliestVisibleDate, durationMS, timeSpan);\n\n                            counter++;\n\n                            if (inView &&\n                                ((endDate && occurrenceDate >= endDate) || (fn.apply(scope, [occurrenceDate, counter, counter === 1 && spansStart, timeSpan, ...extraArgs]) === false) || (count && counter >= count))\n                            ) {\n                                return false;\n                            }\n                        }\n                    }\n                }\n\n            }\n            else {\n                const sortedMonthDates = [];\n\n                for (i = 0; i < monthDays.length; i++) {\n                    // check if the date wasn't iterated over yet\n                    if ((occurrenceDate = this.getNthDayOfMonth(monthStartDate, monthDays[i])) && !processedDate[occurrenceDate.getTime()]) {\n                        processedDate[occurrenceDate.getTime()] = true;\n                        sortedMonthDates.push(occurrenceDate);\n                    }\n                }\n\n                // it's important to sort the dates to iterate over them in the proper order\n                sortedMonthDates.sort((a, b) => a - b);\n\n                for (i = 0; i < sortedMonthDates.length; i++) {\n                    occurrenceDate = DateHelper.copyTimeValues(sortedMonthDates[i], timeSpanStart);\n\n                    if (hasPositions) {\n                        dates.push(occurrenceDate);\n                    }\n                    else if (occurrenceDate >= timeSpanStart) {\n                        const inView = this.isInView(startOnly, occurrenceDate, earliestVisibleDate, durationMS, timeSpan);\n\n                        counter++;\n\n                        if (inView &&\n                            ((endDate && occurrenceDate > endDate) || (fn.apply(scope, [occurrenceDate, counter, counter === 1 && spansStart, timeSpan, ...extraArgs]) === false) || (count && counter >= count))\n                        ) {\n                            return;\n                        }\n                    }\n                }\n            }\n\n            if (hasPositions && dates.length) {\n                this.forEachDateAtPositions(dates, positions, occurrenceDate => {\n                    if (occurrenceDate >= timeSpanStart) {\n                        const inView = startOnly ? occurrenceDate >= earliestVisibleDate : occurrenceDate.valueOf() + durationMS > earliestVisibleDate && !timeSpan.hasException(occurrenceDate);\n\n                        counter++;\n\n                        // Ignore dates outside of the [startDate, endDate] range\n                        if (inView && (!endDate || occurrenceDate <= endDate) &&\n                            // return false if it's time to stop recurring\n                            (fn.apply(scope, [occurrenceDate, counter, counter === 1 && spansStart, timeSpan, ...extraArgs]) === false || (count && counter >= count))\n                        ) {\n                            return false;\n                        }\n                    }\n                });\n            }\n\n            // get next month start\n            monthStartDate = DateHelper.getNext(monthStartDate, 'month', interval);\n            monthEndDate   = new Date(DateHelper.getNext(monthStartDate, 'month', 1) - 1);\n        }\n\n    }\n\n}\n","/**\n * @module Scheduler/data/util/recurrence/YearlyRecurrenceIterator\n */\n\nimport AbstractRecurrenceIterator from './AbstractRecurrenceIterator.js';\nimport DateHelper from '../../../../Core/helper/DateHelper.js';\nimport DayRuleEncoder from './RecurrenceDayRuleEncoder.js';\n\n/**\n * A class which provides iteration to call a function for dates specified by a\n * {@link Scheduler.model.RecurrenceModel RecurrenceModel} over a specified date range.\n * @private\n */\nexport default class YearlyRecurrenceIterator extends AbstractRecurrenceIterator {\n\n    static frequency = 'YEARLY';\n\n    /**\n     * Iterates over the passed date range, calling the passed callback on each date on which\n     * starts an event which matches the passed recurrence rule and overlaps the start and end dates.\n     * @param {Object} config An object which describes how to iterate.\n     * @param {Date} config.startDate The point in time to begin iteration.\n     * @param {Date} config.endDate The point in time to end iteration.\n     * @param {Boolean} [config.startOnly] By default, all occurrences which intersect the date range\n     * will be visited. Pass `true` to only visit occurrences which *start* in the date range.\n     * @param {Scheduler.model.RecurrenceModel} config.recurrence The point in time to end iteration.\n     * @param {Function} config.fn The function to call for each date which matches the recurrence in the date range.\n     * @param {Date} config.fn.date The occurrence date.\n     * @param {Number} config.fn.counter A counter of how many dates have been visited in this iteration.\n     * @param {Boolean} config.fn.isFirst A flag which is `true` if the date is the first occurrence in the specified recurrence rule.\n     * @param {Array} [config.extraArgs] Extra arguments to pass to the callback after the `isFirst` argument.\n     */\n    static forEachDate(config) {\n        const\n            {\n                startOnly,\n                startDate,\n                endDate,\n                timeSpan,\n                timeSpanStart,\n                earliestVisibleDate,\n                durationMS,\n                spansStart,\n                recurrence,\n                fn,\n                extraArgs,\n                scope = this\n            }              = this.processIterationConfig(config),\n            {\n                interval,\n                days,\n                count,\n                positions\n            } = recurrence,\n            weekDays       = DayRuleEncoder.decode(days),\n            hasPositions   = positions && positions.length,\n            processedDate  = {};\n\n        let\n            { months }     = recurrence,\n            counter        = 0,\n            i, occurrenceDate, dates, yearStartDate, yearEndDate, weekDayPosition;\n\n        // if the recurrence is limited w/ \"Count\" or not every interval should match\n        // we need to 1st count passed occurrences so we always start iteration from the event start date\n        yearStartDate = DateHelper.startOf(count || interval > 1 ? timeSpanStart : startDate, 'year');\n        yearEndDate   = new Date(DateHelper.getNext(yearStartDate, 'year', 1) - 1);\n\n        months && months.sort((a, b) => a - b);\n\n        // if no months provided let's use the event month\n        if (!(months && months.length) && !(weekDays && weekDays.length)) {\n            months = [timeSpanStart.getMonth() + 1];\n        }\n\n        if (weekDays && weekDays.length) {\n            // Collect hash of positions indexed by week days\n            weekDays.forEach(day => {\n                if (day[1]) {\n                    weekDayPosition         = weekDayPosition || {};\n                    weekDayPosition[day[0]] = day[1];\n                }\n            });\n        }\n\n        while ((!endDate || endDate > yearStartDate) && (!count || counter < count)) {\n\n            dates = [];\n\n            if (weekDays && weekDays.length) {\n\n                weekDays.forEach(day => {\n                    const weekDay = day[0];\n\n                    let\n                        from = 1,\n                        till = 53;\n\n                    // if position provided\n                    if (day[1]) {\n                        from = till = day[1];\n                    }\n\n                    for (i = from; i <= till; i++) {\n                        if ((occurrenceDate = this.getNthDayInPeriod(yearStartDate, yearEndDate, weekDay, i))) {\n                            occurrenceDate = DateHelper.copyTimeValues(occurrenceDate, timeSpanStart);\n\n                            if (!processedDate[occurrenceDate.getTime()]) {\n                                // remember we processed the date\n                                processedDate[occurrenceDate.getTime()] = true;\n\n                                dates.push(occurrenceDate);\n                            }\n                        }\n                    }\n                });\n\n                dates.sort((a, b) => a - b);\n\n                if (!hasPositions) {\n                    for (i = 0; i < dates.length; i++) {\n                        occurrenceDate = dates[i];\n\n                        if (occurrenceDate >= timeSpanStart) {\n                            const inView = this.isInView(startOnly, occurrenceDate, earliestVisibleDate, durationMS, timeSpan);\n\n                            counter++;\n\n                            if (inView &&\n                                ((endDate && occurrenceDate >= endDate) ||\n                                (fn.apply(scope, [occurrenceDate, counter, counter === 1 && spansStart, timeSpan, ...extraArgs]) === false) ||\n                                (count && counter >= count))\n                            ) {\n                                return;\n                            }\n                        }\n                    }\n                }\n\n            }\n            else {\n                for (i = 0; i < months.length; i++) {\n\n                    if ((occurrenceDate = this.buildDate(yearStartDate.getFullYear(), months[i] - 1, timeSpanStart.getDate()))) {\n                        occurrenceDate = DateHelper.copyTimeValues(occurrenceDate, timeSpanStart);\n\n                        // check if the date wasn't iterated over yet\n                        if (!processedDate[occurrenceDate.getTime()]) {\n                            processedDate[occurrenceDate.getTime()] = true;\n\n                            if (hasPositions) {\n                                dates.push(occurrenceDate);\n                            }\n                            else if (occurrenceDate >= timeSpanStart) {\n                                const inView = startOnly ? occurrenceDate >= earliestVisibleDate : occurrenceDate.valueOf() + durationMS > earliestVisibleDate && !timeSpan.hasException(occurrenceDate);\n\n                                counter++;\n\n                                if (inView &&\n                                    ((endDate && occurrenceDate >= endDate) ||\n                                    (fn.apply(scope, [occurrenceDate, counter, counter === 1 && spansStart, timeSpan, ...extraArgs]) === false) ||\n                                    (count && counter >= count))\n                                ) {\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (hasPositions && dates.length) {\n                this.forEachDateAtPositions(dates, positions, occurrenceDate => {\n                    if (occurrenceDate >= timeSpanStart) {\n                        const inView = startOnly ? occurrenceDate >= earliestVisibleDate : occurrenceDate.valueOf() + durationMS > earliestVisibleDate && !timeSpan.hasException(occurrenceDate);\n\n                        counter++;\n\n                        // Ignore dates outside of the [startDate, endDate] range\n                        if (inView && (!endDate || occurrenceDate < endDate)) {\n                            // return false if it's time to stop recurring\n                            if (fn.apply(scope, [occurrenceDate, counter, counter === 1 && spansStart, timeSpan, ...extraArgs]) === false || (count && counter >= count)) {\n                                return false;\n                            }\n                        }\n                    }\n                });\n            }\n\n            // get next month start\n            yearStartDate = DateHelper.getNext(yearStartDate, 'year', interval);\n            yearEndDate   = new Date(DateHelper.getNext(yearStartDate, 'year', 1) - 1);\n        }\n\n    }\n}\n","import Model from '../../Core/data/Model.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport RecurrenceDayRuleEncoder from '../data/util/recurrence/RecurrenceDayRuleEncoder.js';\nimport DailyRecurrenceIterator from '../data/util/recurrence/DailyRecurrenceIterator.js';\nimport WeeklyRecurrenceIterator from '../data/util/recurrence/WeeklyRecurrenceIterator.js';\nimport MonthlyRecurrenceIterator from '../data/util/recurrence/MonthlyRecurrenceIterator.js';\nimport YearlyRecurrenceIterator from '../data/util/recurrence/YearlyRecurrenceIterator.js';\n\n/**\n * @module Scheduler/model/RecurrenceModel\n */\n\nconst recurrenceIterators = {};\n\n[DailyRecurrenceIterator, WeeklyRecurrenceIterator, MonthlyRecurrenceIterator, YearlyRecurrenceIterator].forEach(it => {\n    recurrenceIterators[it.frequency] = it;\n});\n\nfunction convertStringOfIntegerItemsValue(value) {\n    if (value) {\n        if (typeof value == 'string') {\n            value = value.split(',').map(item => parseInt(item, 10));\n        }\n    }\n    else {\n        value = null;\n    }\n\n    return value;\n}\n\nfunction convertStringOfItemsValue(value) {\n    if (value) {\n        if (typeof value == 'string') {\n            value = value.split(',');\n        }\n    }\n    else {\n        value = null;\n    }\n\n    return value;\n}\n\nfunction isEqualAsString(value1, value2) {\n    return String(value1) === String(value2);\n}\n\nfunction convertInteger(value) {\n    if (this.defaultValue && value === undefined) {\n        return this.defaultValue;\n    }\n\n    if (this.allowNull && value == null) {\n        return null;\n    }\n\n    value = parseInt(value);\n\n    return isNaN(value) ? undefined : value;\n}\n\n/**\n * This class represents a timespan recurrence settings.\n * It is a subclass of {@link Core.data.Model} class.\n * Please refer to the documentation for that class to become familiar with the base interface of this class.\n *\n * The data source for these fields can be customized by subclassing this class.\n *\n * @extends Core/data/Model\n */\nexport default class RecurrenceModel extends Model {\n\n    static get $name() {\n        return 'RecurrenceModel';\n    }\n\n    /**\n     * Indicates that this is a `RecurrenceModel` class instance\n     * (allows to avoid using `instanceof`).\n     * @property {Boolean}\n     * @readonly\n     */\n    get isRecurrenceModel() {\n        return true;\n    }\n\n    //region Fields\n    static get fields() {\n        return [\n            /**\n             * Field defines the recurrence frequency. Supported values are: `DAILY`, `WEEKLY`, `MONTHLY`, `YEARLY`.\n             * @field {'DAILY'|'WEEKLY'|'MONTHLY'|'YEARLY'} frequency\n             */\n            { name : 'frequency', defaultValue : 'DAILY' },\n            /**\n             * Field defines how often the recurrence repeats.\n             * For example, if the recurrence is weekly its interval is 2, then the timespan repeats every two weeks.\n             * @field {Number} interval\n             */\n            { name : 'interval', defaultValue : 1, convert : convertInteger },\n            /**\n             * End date of the recurrence. Specifies when the recurrence ends.\n             * The value is optional, the recurrence can as well be stopped using {@link #field-count} field value.\n             * @field {Date} endDate\n             */\n            { name : 'endDate', type : 'date' },\n            /**\n             * Specifies the number of occurrences after which the recurrence ends.\n             * The value includes the associated timespan itself so values less than 2 make no sense.\n             * The field is optional, the recurrence as well can be stopped using {@link #field-endDate} field value.\n             * @field {Number} count\n             */\n            { name : 'count', allowNull : true, convert : convertInteger },\n            /**\n             * Specifies days of the week on which the timespan should occur.\n             * An array of string values `SU`, `MO`, `TU`, `WE`, `TH`, `FR`, `SA`\n             * corresponding to Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday days of the week.\n             * Each value can also be preceded by a positive (+n) or negative (-n) integer.\n             * If present, this indicates the nth occurrence of a specific day within the monthly or yearly recurrence.\n             *\n             * **Not applicable** for daily {@link #field-frequency}.\n             * @field {String[]} days\n             */\n            {\n                name    : 'days',\n                convert : convertStringOfItemsValue,\n                isEqual : isEqualAsString\n            },\n            /**\n             * Specifies days of the month on which the timespan should occur.\n             * An array of integer values (-31..-1 - +1..+31, negative values mean counting backwards from the month end).\n             * **Applicable only** for monthly {@link #field-frequency}.\n             * @field {Number[]} monthDays\n             */\n            {\n                name    : 'monthDays',\n                convert : convertStringOfIntegerItemsValue,\n                isEqual : isEqualAsString\n            },\n            /**\n             * Specifies months of the year on which the timespan should occur.\n             * An array of integer values (1 - 12).\n             * **Applicable only** for yearly {@link #field-frequency}.\n             * @field {Number[]} months\n             */\n            {\n                name    : 'months',\n                convert : convertStringOfIntegerItemsValue,\n                isEqual : isEqualAsString\n            },\n            /**\n             * The positions to include in the recurrence. The values operate on a set of recurrence instances **in one interval** of the recurrence rule.\n             * An array of integer values (valid values are 1 to 366 or -366 to -1, negative values mean counting backwards from the end of the built list of occurrences).\n             * **Not applicable** for daily {@link #field-frequency}.\n             * @field {Number} positions\n             */\n            {\n                name    : 'positions',\n                convert : convertStringOfIntegerItemsValue,\n                isEqual : isEqualAsString\n            }\n        ];\n    }\n\n    get dateFormat() {\n        return this._dateFormat || 'YYYYMMDDTHHmmss';\n    }\n\n    set dateFormat(format) {\n        this._dateFormat = format;\n    }\n\n    get recurrenceIterator() {\n        //<debug>\n        if (!recurrenceIterators[this.frequency]) {\n            throw new Error(`Can't find iterator for ${this.frequency} frequency`);\n        }\n        //</debug>\n\n        return recurrenceIterators[this.frequency];\n    }\n\n    /**\n     * The timespan this recurrence is associated with.\n     * @property {Scheduler.model.TimeSpan}\n     */\n    get timeSpan() {\n        return this._timeSpan;\n    }\n\n    set timeSpan(value) {\n        this._timeSpan = value;\n    }\n\n    /**\n     * The recurrence rule. A string in [RFC-5545](https://tools.ietf.org/html/rfc5545#section-3.3.10) described format\n     * (\"RRULE\" expression).\n     * @property {String}\n     */\n    get rule() {\n        const\n            me     = this,\n            result = [];\n\n        if (me.frequency) {\n            result.push(`FREQ=${me.frequency}`);\n\n            if (me.interval > 1) {\n                result.push(`INTERVAL=${me.interval}`);\n            }\n            if (me.days && me.days.length) {\n                result.push('BYDAY=' + me.days.join(','));\n            }\n            if (me.monthDays && me.monthDays.length) {\n                result.push('BYMONTHDAY=' + me.monthDays.join(','));\n            }\n            if (me.months && me.months.length) {\n                result.push('BYMONTH=' + me.months.join(','));\n            }\n            if (me.count) {\n                result.push(`COUNT=${me.count}`);\n            }\n            if (me.endDate) {\n                result.push('UNTIL=' + DateHelper.format(me.endDate, me.dateFormat));\n            }\n            if (me.positions && me.positions.length) {\n                result.push('BYSETPOS=' + me.positions.join(','));\n            }\n        }\n\n        return result.join(';');\n    }\n\n    set rule(rule) {\n        const\n            me     = this,\n            values = {\n                frequency : null,\n                interval  : null,\n                count     : null,\n                endDate   : null,\n                days      : null,\n                monthDays : null,\n                months    : null,\n                positions : null\n            };\n\n        me.beginBatch();\n\n        if (rule) {\n            const parts = rule.split(';');\n\n            for (let i = 0, len = parts.length; i < len; i++) {\n                const\n                    part = parts[i].split('='),\n                    value  = part[1];\n\n                switch (part[0]) {\n                    case 'FREQ':\n                        values.frequency = value;\n                        break;\n                    case 'INTERVAL':\n                        values.interval = value;\n                        break;\n                    case 'COUNT':\n                        values.count = value;\n                        values.until = null;\n                        break;\n                    case 'UNTIL':\n                        if (value) {\n                            values.endDate = DateHelper.parse(value, me.dateFormat);\n                        }\n                        else {\n                            values.endDate = null;\n                        }\n                        values.count = null;\n                        break;\n                    case 'BYDAY':\n                        values.days = value;\n                        break;\n                    case 'BYMONTHDAY':\n                        values.monthDays = value;\n                        break;\n                    case 'BYMONTH':\n                        values.months = value;\n                        break;\n                    case 'BYSETPOS':\n                        values.positions = value;\n                        break;\n                }\n            }\n        }\n\n        me.set(values);\n\n        if (rule) {\n            me.sanitize();\n        }\n\n        me.endBatch();\n    }\n\n    construct(data = {}) {\n        const\n            me                 = this,\n            { rule, timeSpan } = data;\n\n        me._suspendedTimeSpanNotifying = 0;\n\n        delete data.timeSpan;\n        delete data.rule;\n\n        super.construct(...arguments);\n\n        if (rule) {\n            me.suspendTimeSpanNotifying();\n            me.rule = rule;\n            me.resumeTimeSpanNotifying();\n        }\n\n        me.timeSpan = timeSpan;\n    }\n\n    /**\n     * Iterate occurrences for the owning timespan across the specified date range. This method can be called even\n     * if the timespan is not yet a member of a store, however, the occurrences returned will not be cached across\n     * subsequent calls to this method.\n     * @param {Date} startDate The start date of the iteration.\n     * @param {Date} endDate The end date of the iteration.\n     * @param {Function} fn The function to call for each occurrence.\n     * @param {Scheduler.model.TimeSpan} fn.occurrence The occurrence.\n     * @param {Boolean} fn.first A flag which is `true` for the first occurrence of this recurrence.\n     * @param {Number} fn.counter A counter of how many dates have been visited in this iteration.\n     * @param {Date} fn.date The occurrence date.\n     * @internal\n     */\n    forEachOccurrence(startDate, endDate, fn) {\n        if (this.timeSpan.startDate) {\n            this.recurrenceIterator.forEachDate({\n                recurrence : this,\n                startDate,\n                endDate,\n\n                fn(date, counter, first, timeSpan) {\n                    return fn(timeSpan.buildOccurrence(date, first), first, counter, date);\n                }\n            });\n        }\n    }\n\n    /**\n     * Cleans up fields that do not makes sense for the current {@link #field-frequency} value.\n     * @private\n     */\n    sanitize() {\n        const\n            me                = this,\n            timeSpanStartDate = me.timeSpan?.startDate,\n            values            = {};\n\n        me.isSanitizing = true;\n\n        switch (me.frequency) {\n            case 'DAILY' :\n                values.positions    = null;\n                values.days         = null;\n                values.monthDays    = null;\n                values.months       = null;\n                break;\n\n            case 'WEEKLY' : {\n                values.positions = null;\n                values.monthDays = null;\n                values.months = null;\n\n                const { days } = me;\n\n                if (timeSpanStartDate && days?.length === 1 && days[0] === RecurrenceDayRuleEncoder.encodeDay(timeSpanStartDate.getDay())) {\n                    values.days = null;\n                }\n                break;\n            }\n\n            case 'MONTHLY' : {\n                if (me.monthDays?.length) {\n                    values.positions = null;\n                    values.days = null;\n                }\n\n                values.months = null;\n\n                const { monthDays } = me;\n\n                if (timeSpanStartDate && monthDays?.length === 1 && monthDays[0] === timeSpanStartDate.getDate()) {\n                    values.monthDays = null;\n                }\n                break;\n            }\n\n            case 'YEARLY' : {\n                values.monthDays = null;\n\n                const { months } = me;\n\n                if (timeSpanStartDate && months?.length === 1 && months[0] === timeSpanStartDate.getMonth() + 1) {\n                    values.months = null;\n                }\n                break;\n            }\n        }\n\n        me.set(values);\n\n        me.isSanitizing = false;\n    }\n\n    copy(...args) {\n        const result = super.copy(...args);\n\n        result.dateFormat = this.dateFormat;\n        result.timeSpan   = this.timeSpan;\n\n        return result;\n    }\n\n    afterChange(toSet, wasSet, silent) {\n        const\n            result       = super.afterChange(toSet, wasSet, silent),\n            { timeSpan } = this;\n\n        if (!this.isSanitizing) {\n            // cleanup data to match the chosen frequency\n            this.sanitize();\n        }\n\n        if (timeSpan) {\n            timeSpan.sanitizeRecurrenceData(this);\n\n            if (!this.isTimeSpanNotifyingSuspended) {\n                timeSpan.onRecurrenceChanged();\n            }\n        }\n\n        return result;\n    }\n\n    set(field, value, ...args) {\n        const values = typeof field === 'object' ? field : { [field] : value };\n\n        // reset \"endDate\" field if \"count\" is being set\n        if (values.count) {\n            values.endDate = null;\n        }\n        // reset \"count\" field if \"endDate\" is being set\n        else if (values.endDate) {\n            values.count = null;\n        }\n\n        super.set(values, undefined, ...args);\n    }\n\n    get isTimeSpanNotifyingSuspended() {\n        return Boolean(this._suspendedTimeSpanNotifying);\n    }\n\n    suspendTimeSpanNotifying() {\n        this._suspendedTimeSpanNotifying++;\n    }\n\n    resumeTimeSpanNotifying() {\n        if (this._suspendedTimeSpanNotifying) this._suspendedTimeSpanNotifying--;\n    }\n}\n","import TimeSpan from '../TimeSpan.js';\nimport RecurrenceModel from '../RecurrenceModel.js';\nimport ArrayHelper from '../../../Core/helper/ArrayHelper.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\nimport AbstractRecurrenceIterator from '../../data/util/recurrence/AbstractRecurrenceIterator.js';\n\nfunction convertExceptionDatesValue(value) {\n    const\n        result         = {},\n        { dateFormat } = this;\n\n    if (value) {\n        value = typeof value == 'string' ? value.split(',') : ArrayHelper.asArray(value);\n\n        value.forEach(item => {\n            if (typeof item == 'string') {\n                item = DateHelper.parse(item, dateFormat);\n            }\n\n            // If we've got a valid date out of the incoming item, add an exception key\n            if (!isNaN(item)) {\n                result[DateHelper.makeKey(item)] = 1;\n            }\n        });\n    }\n\n    return result;\n}\n\nfunction serializeExceptionDatesValue(value) {\n    const\n        result         = [],\n        { dateFormat } = this;\n\n    for (const date in value) {\n        if (value[date]) {\n            result.push(DateHelper.format(DateHelper.parseKey(date), dateFormat));\n        }\n    }\n\n    return result;\n}\n\nconst emptyArray = [];\n\n/**\n * @module Scheduler/model/mixin/RecurringTimeSpan\n */\n\n/**\n * This mixin class provides recurrence related fields and methods to a {@link Scheduler.model.TimeSpan timespan model}.\n *\n * The mixin introduces two types of timespans: __recurring timespan__ and its __occurrences__.\n * __Recurring timespan__ is a timespan having {@link #field-recurrenceRule recurrence rule} specified and its __occurrences__ are \"fake\" dynamically generated timespans.\n * Their set depends on the scheduler visible timespan and changes upon the timespan change.\n *\n * There are few methods allowing to distinguish a recurring event and an occurrence: {@link #property-isRecurring}, {@link #property-isOccurrence}\n * and {@link #property-recurringTimeSpan} (returns the event this record is an occurrence of).\n *\n * The {@link #field-recurrenceRule recurrence rule} defined for the event is parsed and\n * represented with {@link Scheduler.model.RecurrenceModel RecurrenceModel} class (can be changed by setting {@link #property-recurrenceModel} property) instance.\n * See: {@link #property-recurrence} property.\n * @mixin\n * @mixinbase TimeSpan\n */\nexport default Target => class RecurringTimeSpan extends (Target || TimeSpan) {\n    static get $name() {\n        return 'RecurringTimeSpan';\n    }\n\n    /**\n     * Returns `true` if this timespan supports recurring.\n     * @property {Boolean}\n     * @category Recurrence\n     */\n    get supportsRecurring() {\n        return true;\n    }\n\n    static get fields() {\n        return [\n            /**\n             * The timespan recurrence rule. A string in [RFC-5545](https://tools.ietf.org/html/rfc5545#section-3.3.10)\n             * described format (\"RRULE\" expression).\n             * @field {String} recurrenceRule\n             * @category Scheduling\n             */\n            {\n                name     : 'recurrenceRule',\n                internal : true\n            },\n            /**\n             * A string (either a single date or multiple dates separated by comma) or an array of strings containing\n             * the timespan exception dates. The dates that must be skipped when generating occurrences for a repeating\n             * timespan. This is used to modify only individual occurrences of the timespan so the further regenerations\n             * won't create another copy of this occurrence again.\n             *\n             * ```javascript\n             * {\n             *     id: 7,\n             *     startDate: '2021-10-12T14:00:00',\n             *     endDate: '2021-10-12T15:00:00',\n             *     name: 'Lunch',\n             *     resourceId: 'hotel',\n             *     recurrenceRule: 'FREQ=DAILY;COUNT=5',\n             *     exceptionDates: ['2021-10-14']\n             * }\n             * ```\n             *\n             * Use {@link #function-addExceptionDate} method to add an individual entry to the dates array:\n             *\n             * ```javascript\n             * // Break the link between the occurrence and its base.\n             * // This also adds the occurrence date as an exception date\n             * // so that the base timespan knows that this date should be skipped when regenerating its occurrences.\n             * occurrence.recurringTimeSpan = null;\n             *\n             * // now the occurrence is an individual record that can be changed & persisted freely\n             * occurrence.setStartEndDate(new Date(2018, 6, 2), new Date(2018, 6, 3));\n             * ```\n             * **Note:** The dates in this field get automatically removed when the event changes its {@link Scheduler.model.TimeSpan#field-startDate start date}.\n             *\n             * @field {String|String[]} exceptionDates\n             * @category Scheduling\n             */\n            {\n                name      : 'exceptionDates',\n                convert   : convertExceptionDatesValue,\n                serialize : serializeExceptionDatesValue,\n                internal  : true\n            }\n        ];\n    }\n\n    /**\n     * Override of {@link Core/data/Model}'s method. If an {@link #property-isOccurrence}\n     * is passed, it is detached from its parent recurring event. If it still has a recurrence\n     * then the recurring event is changed to stop at the occurrence date. If it has no recurrence\n     * an exception is added at the occurrence date.\n     * @category Recurrence\n     */\n    remove() {\n        if (this.isOccurrence) {\n            const\n                me = this,\n                { recurringTimeSpan } = me;\n\n            me.cancelBatch();\n            recurringTimeSpan.beginBatch();\n            me.detachFromRecurringEvent();\n            recurringTimeSpan.endBatch();\n        }\n        else {\n            return super.remove(...arguments);\n        }\n    }\n\n    get eventStore() {\n        let result = this.isOccurrence ? this.recurringEvent.eventStore : super.eventStore;\n\n        // Recurrence methods are called on `eventStore`, but in case we have a regular\n        // store with recurrence mixin, we won't event store and should return own\n        // store instead\n        if (!result && this.firstStore?.isRecurringTimeSpansMixin) {\n            result = this.firstStore;\n        }\n\n        return result;\n    }\n\n    /**\n     * Name of the class representing the recurrence model, defaults to {@link Scheduler.model.RecurrenceModel}\n     * @property {String}\n     * @category Recurrence\n     */\n    get recurrenceModel() {\n        return this._recurrenceModel || RecurrenceModel;\n    }\n\n    set recurrenceModel(model) {\n        this._recurrenceModel = model;\n    }\n\n    /**\n     * Sets a recurrence for the timespan with a given frequency, interval, and end.\n     * @param {RecurrenceModelConfig|String|Scheduler.model.RecurrenceModel} recurrence A data object for an instance of\n     * {@link Scheduler.model.RecurrenceModel}. May also be the frequency string: `DAILY`, `WEEKLY`, `MONTHLY`, or\n     * `YEARLY`.\n     *\n     * ```javascript\n     * // repeat the event every other week till Jan 2 2039\n     * event.setRecurrence({\n     *     frequency : \"WEEKLY\",\n     *     interval  : 2,\n     *     endDate   : new Date(2039, 0, 2)\n     * });\n     * ```\n     *\n     * Also a {@link Scheduler.model.RecurrenceModel recurrence model} can be provided as the only argument for this\n     * method:\n     *\n     * ```javascript\n     * const recurrence = new RecurrenceModel({ frequency : 'DAILY', interval : 5 });\n     *\n     * event.setRecurrence(recurrence);\n     * ```\n     *\n     * or\n     *\n     * ```javascript\n     * event.setRecurrence(\"WEEKLY\", 2, new Date(2039, 0, 2));\n     * ```\n     * @param {Number} [interval] The interval between occurrences (instances of this recurrence). For example, a daily\n     * recurrence with an interval of 2 occurs every other day. Must be greater than 0.\n     * @param {Number|Date} [recurrenceEnd] The end of the recurrence. The value can be specified by a date or by a\n     * maximum count of occurrences (has to greater than 1, since 1 means the event itself).\n     * @category Recurrence\n     */\n    setRecurrence(recurrence, interval, recurrenceEnd) {\n        const me = this;\n\n        let recurrenceRule;\n\n        if (recurrence) {\n            if (!recurrence.isRecurrenceModel) {\n                if (typeof recurrence === 'string') {\n                    recurrence = {\n                        frequency : recurrence\n                    };\n\n                    if (interval) {\n                        recurrence.interval = interval;\n                    }\n\n                    // If the recurrence is limited\n                    if (recurrenceEnd) {\n                        if (recurrenceEnd instanceof Date) {\n                            recurrence.endDate = recurrenceEnd;\n                        }\n                        else {\n                            recurrence.count = recurrenceEnd;\n                        }\n                    }\n                }\n                recurrence = new me.recurrenceModel(recurrence);\n            }\n\n            // The RecurrenceModel has a reference to its owning recurring event.\n            // It uses this to remove the owning event's exceptions after its new endDate\n            // whenever its endDate is changed.\n            recurrence.timeSpan = me;\n\n            recurrenceRule = recurrence.rule;\n        }\n\n        me.recurrence     = recurrence;\n        me.recurrenceRule = recurrenceRule;\n    }\n\n    /**\n     * The recurrence model used for the timespan.\n     * @property {Scheduler.model.RecurrenceModel}\n     * @category Recurrence\n     */\n    get recurrence() {\n        const\n            me = this,\n            rule = me.recurrenceRule;\n\n        if (!me._recurrence && rule) {\n            me._recurrence = new me.recurrenceModel({ rule, timeSpan : me, id : `${me.id}-recurrence` });\n        }\n\n        return me._recurrence;\n    }\n\n    set recurrence(recurrence) {\n        const me = this;\n\n        me._recurrence = recurrence;\n\n        if (recurrence) {\n            // bind recurrence instance to the model\n            recurrence.timeSpan = me;\n            me.recurrenceRule   = recurrence.rule;\n        }\n        else {\n            // If this is being done to an occurrence, it's a signal that we are being\n            // mutated into an exception. Apply the change immediately, directly to the data.\n            if (me.isOccurrence) {\n                me.setData('recurrenceRule', null);\n            }\n            else {\n                me.recurrenceRule = null;\n            }\n        }\n    }\n\n    /**\n     * Indicates if the timespan is recurring.\n     * @property {Boolean}\n     * @readonly\n     * @category Recurrence\n     */\n    get isRecurring() {\n        // MUST evaluate in this order so that if it is an occurrence,\n        // the recurrence getter does not refresh the rule\n        return Boolean(!this.isOccurrence && this.recurrence);\n    }\n\n    /**\n     * Indicates if the timespan is an occurrence of another recurring timespan.\n     * @property {Boolean}\n     * @readonly\n     * @category Recurrence\n     */\n    get isOccurrence() {\n        return Boolean(this.recurringTimeSpan);\n    }\n\n    /**\n     * The \"main\" timespan this model is an occurrence of. For non-occurrences returns `null`.\n     * @property {Scheduler.model.TimeSpan}\n     * @readonly\n     * @internal\n     * @category Recurrence\n     */\n    get recurringTimeSpan() {\n        return this._recurringTimeSpan;\n    }\n\n    get isPersistable() {\n        return super.isPersistable && (!this.supportsRecurring || !this.isOccurrence);\n    }\n\n    set recurringTimeSpan(recurringTimeSpan) {\n        this._recurringTimeSpan = recurringTimeSpan;\n    }\n\n    /**\n     * Returns the occurrences of this event over the specified time range. If the first\n     * occurrence is in the time range `*this*` record is included in that position.\n     * @param {Date} startDate The start date of the range for which to include occurrences.\n     * @param {Date} [endDate] The end date of the range for which to include occurrences.\n     * Defaults to the startDate.\n     * @returns {Scheduler.model.TimeSpan[]} The array of occurrences which occur over the specified range.\n     * @category Recurrence\n     */\n    getOccurrencesForDateRange(startDate, endDate = startDate) {\n        return this.eventStore.getOccurrencesForTimeSpan(this, startDate, endDate);\n    }\n\n    /**\n     * Array of this recurring timespan's cached occurrences. __Not including the owning recurring\n     * event__.\n     *\n     * Empty if the timespan is not recurring.\n     *\n     * __Note that this is an internal accessor and is cleared whenever changes are made to the\n     * owning recurring event__.\n     * @property {Scheduler.model.TimeSpan[]}\n     * @readonly\n     * @internal\n     * @category Recurrence\n     */\n    get occurrences() {\n        if (this.isRecurring) {\n            const result = [];\n\n            // The occurrencesMap contains entries for each occurrence date.\n            this.occurrenceMap.forEach(occurrence => {\n                if (occurrence !== this) {\n                    result.push(occurrence);\n                }\n            });\n\n            return result;\n        }\n\n        return emptyArray;\n    }\n\n    /**\n     * A Map, keyed by each date an occurrence intersects, of occurrences of this event.\n     * @property {Map}\n     * @readonly\n     * @internal\n     * @category Recurrence\n     */\n    get occurrenceMap() {\n        return this._occurrencesMap || (this._occurrencesMap = new Map());\n    }\n\n    /**\n     * Removes an occurrence from this recurring timespan's cached occurrences.\n     * @param dateOrTimeSpan occurrence date or occurrence TimeSpan\n     * @internal\n     * @category Recurrence\n     */\n    removeOccurrence(dateOrTimeSpan) {\n        const date = dateOrTimeSpan.isTimeSpan ? dateOrTimeSpan.occurrenceDate : dateOrTimeSpan;\n\n        // Clear the occurrences *is* we are in an EventStore.\n        this.eventStore?.globalOccurrences.delete(this.createRecurrenceKey(date));\n        // Remove occurrence from its by-startDate cache\n        this.occurrenceMap.delete(DateHelper.makeKey(date));\n    }\n\n    /**\n     * Removes all cached occurrences on or after the passed date from this recurring timespan's cached occurrences.\n     * @internal\n     * @category Recurrence\n     */\n    removeOccurrencesFrom(date) {\n        this.occurrenceMap.forEach((occurrence, dateKey) => {\n            if (DateHelper.parseKey(dateKey) >= date) {\n                this.removeOccurrence(occurrence);\n            }\n        });\n    }\n\n    /**\n     * Removes this recurring timespan's cached occurrences.\n     * @internal\n     * @category Recurrence\n     */\n    removeOccurrences() {\n        // This recurring event must also be removed from the occurrenceMap if it's there\n        // So insert it as the first element. Can also be found from the store's global occurrence\n        // Map using [...this.eventStore.globalOccurrences.keys()].filter(e => e.startsWith(`_generated:${this.id}`))\n        [this, ...this.occurrences].forEach(occurrence => this.removeOccurrence(occurrence));\n    }\n\n    /**\n     * The method is triggered when the timespan recurrence settings get changed.\n     * It updates the {@link #field-recurrenceRule} field in this case.\n     * @internal\n     * @category Recurrence\n     */\n    onRecurrenceChanged() {\n        this.recurrenceRule = this.recurrence?.rule || null;\n    }\n\n    sanitizeRecurrenceData(recurrence = this.recurrence) {\n        // Remove all exceptionsDates that our owning timeSpan had that are\n        // now after our end date and therefore redundant.\n        if (recurrence.endDate) {\n            const\n                endDate            = DateHelper.clearTime(recurrence.endDate),\n                { exceptionDates } = this;\n\n            // Clear any now-invalid cached occurrences\n            this.removeOccurrencesFrom(endDate);\n\n            // If we had any exceptions on or after this date, remove them.\n            if (exceptionDates) {\n                for (const dateKey in exceptionDates) {\n                    const exceptionDate = DateHelper.parseKey(dateKey);\n\n                    if (exceptionDate >= endDate) {\n                        delete exceptionDates[dateKey];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * The original {@lScheduler.model.TimeSpan#field-startDate startDate} of this event before any modifications\n     * took place. Used by {@link #function-removeOccurrence} and {@link #function-detachFromRecurringEvent}\n     * @internal\n     * @readonly\n     * @category Recurrence\n     */\n    get occurrenceDate() {\n        return this.meta.modified?.startDate || this.startDate;\n    }\n\n    /**\n     * If this event is an {@link #property-isOccurrence occurrence} of a recurring event, then this\n     * property yields its zero-based occurrence index in the sequence.\n     * @property {Number}\n     * @readonly\n     * @category Recurrence\n     */\n    get occurrenceIndex() {\n        return AbstractRecurrenceIterator.getOccurrenceIndex(this);\n    }\n\n    /**\n     * Builds an occurrence of this recurring event by cloning the timespan data.\n     * The method is used internally by the __RecurringTimeSpans__ mixin.\n     * Override it if you need to customize the generated occurrences.\n     *\n     * If the date requested is the start date of the event sequence, `this`\n     * record is returned. All runs of recurring events begin with the base record.\n     * @param  {Date} occurrenceDate The occurrence start date.\n     * @param  {Boolean} isFirst `true` if this is the first occurrence.\n     * @returns {Scheduler.model.TimeSpan} The occurrence.\n     * @internal\n     * @category Recurrence\n     */\n    buildOccurrence(occurrenceDate, isFirst) {\n        const\n            me                    = this,\n            {\n                occurrenceMap,\n                recurrence,\n                meta\n            }                     = me,\n            globalOccurrences     = me.eventStore?.globalOccurrences,\n            occurrenceKey         = DateHelper.makeKey(occurrenceDate),\n            id                    = me.createRecurrenceKey(occurrenceDate, occurrenceKey),\n            onStartDate           = !(occurrenceDate - me.startDate),\n            { fieldMap }          = me.constructor;\n\n        // An occurrence has a unique ID which identifies it by its base recurring event and its time.\n        let occurrence   = globalOccurrences?.get(id),\n            { duration } = me;\n\n        // If there's no duration, or it's an all day event (which makes the event ceil and floor its\n        // start and end dates, but does *NOT* as of 27/5/2020 adjust its duration) then\n        // we calculate the duration of the occurrence.\n        if (me.endDate && (me.allDay || !duration)) {\n            duration = DateHelper.as(me.durationUnit, me.endDate.getTime() - me.startDate.getTime());\n        }\n\n        // Don't let NaN in record data\n        const occurrenceEndDate = duration !== undefined ? DateHelper.add(occurrenceDate, duration, me.durationUnit) : undefined;\n\n        if (!occurrence) {\n            // If this is the first occurrence (start times may not match), or it's right on the start\n            // then this recurring event *IS* the occurrence\n            if (isFirst || onStartDate) {\n                occurrence = me;\n\n                // We are the first occurrence.\n                // But if our start time is not as the rule requires, adjust ourself *silently*\n                if (!onStartDate) {\n                    me.setStartEndDate(occurrenceDate, occurrenceEndDate, true);\n                    // Since we've changed the event start date the recurrence \"Days\"/\"MonthDays\"/\"Months\"\n                    // might get redundant in case the event start date matches the fields values\n                    // Calling recurrence sanitize() will clean the fields in this case.\n                    recurrence.suspendTimeSpanNotifying();\n                    recurrence.sanitize();\n                    recurrence.resumeTimeSpanNotifying();\n                }\n\n                // Either way, because of adjustment above, or initial correctness, we are in sync\n                // with our recurrence rule. A RecurrenceIterator is now able to calculate a correct\n                // UNTIL date from a COUNT value. See AbstractRecurrenceIterator#processIterationConfig\n                meta.isSyncedWithRule = true;\n            }\n            // Generate an occurrence which references this as its parent\n            else {\n                occurrence = me.copy(\n                    {\n                        [fieldMap.id.dataSource]        : id,\n                        [fieldMap.startDate.dataSource] : occurrenceDate,\n                        [fieldMap.endDate.dataSource]   : occurrenceEndDate,\n                        [fieldMap.duration.dataSource]  : duration,\n                        constraintDate                  : null,\n                        constraintType                  : null\n                    },\n                    { creatingOccurrence : true }\n                );\n\n                occurrence.recurringTimeSpan = me;\n            }\n\n            globalOccurrences?.set(id, occurrence);\n\n            // A recurring timespan keeps a by-startDate index of occurrences.\n            // And itself will be among those.\n            occurrenceMap.set(occurrenceKey, occurrence);\n        }\n\n        return occurrence;\n    }\n\n    createRecurrenceKey(date = this.startDate, dateKey = null) {\n        return `_generated:${this.id}:${dateKey || DateHelper.makeKey(date)}`;\n    }\n\n    // Converts this occurrence to a new \"master\" event\n    convertToRealEvent(wasSet, silent) {\n        if (!this.isOccurrence) {\n            return;\n        }\n\n        const\n            me = this,\n            {\n                recurringTimeSpan,\n                resource,\n                occurrenceIndex,\n                recurrence\n            }               = me,\n            count           = recurrence && recurringTimeSpan.recurrence.count,\n            // resourceRecords is a temporary property of occurrence events to handle cases\n            // if only resources has been updated. (change only resources won't mark record as dirty)\n            newResource     = wasSet?.resourceRecords?.value || me.data.newResource;\n\n        recurringTimeSpan.beginBatch();\n\n        me.detachFromRecurringEvent();\n\n        me.clearChanges();\n\n        // Must silently set our own ID, not be the key generated from our parent id and occurrence date.\n        // Must not result in the id field being in the modified state.\n        me.setData('id', me.generateId(recurringTimeSpan.eventStore));\n\n        if (newResource) {\n            // clear resourceId to avoid auto-adding to assignmentStore, it is handled manually bellow\n            delete me.data.resourceId;\n        }\n\n        // The impending changes to the former parent recurring event trigger a full refresh.\n        recurringTimeSpan.eventStore.add(me, silent);\n\n        // Ensure that the original count is honoured.\n        // If we are the 8th occurrence of 10, OUR repeat count must be 3.\n        if (count) {\n            me.recurrence.count = count - occurrenceIndex;\n        }\n\n        if (newResource || resource) {\n            me.assign(newResource || resource);\n        }\n\n        // remove data after apply\n        if (newResource) {\n            delete me.data.resourceRecords;\n        }\n        if (wasSet) {\n            delete wasSet.resourceRecords;\n        }\n\n        // Any change to a recurring events triggers a store refresh event.\n        recurringTimeSpan.endBatch();\n    }\n\n    afterChange(toSet, wasSet, silent, ...args) {\n        const\n            me             = this,\n            { eventStore } = me;\n\n        // reset cached recurrence instance in case \"recurrenceRule\" is changed\n        if ('recurrenceRule' in wasSet) {\n            me._recurrence = null;\n\n            // If we are a recurring event, we must be in the recurringEvents cache.\n            // If we are *not* a recurring event, we must *not* be in there.\n            // An event not yet in a store (eg dragging to create) won't have an eventStore.\n            eventStore?.recurringEvents[wasSet.recurrenceRule.value ? 'add' : 'delete'](me);\n        }\n\n        // Any change to an occurrence adds it to an event store, at which point\n        // it ceases to be an occurrence.\n        //\n        // If it has a recurrenceRule it becomes the start of a new recurring event series,\n        // and the old owning recurring event stops on the day before.\n        //\n        // If it has no recurrenceRule, it becomes an exception to its owning recurring event.\n        if (me.isOccurrence) {\n            me.convertToRealEvent(wasSet, silent);\n        }\n        // Setting a newException date must mark the exceptionDates as modified\n        else if ('newExceptionDate' in wasSet) {\n            me.meta.modified.exceptionDates = true;\n            delete me.meta.modified.newExceptionDate;\n\n            // Remove any occurrence on that date from our by-startDate cache\n            // and from the global occurrences cache\n            me.removeOccurrence(wasSet.newExceptionDate.value);\n        }\n\n        return super.afterChange(toSet, wasSet, silent, ...args);\n    }\n\n    /**\n     * Detaches an occurrence from its owning recurring event so that it can be added to the eventStore\n     * either as an exception, or as the start of a new recurring sequence.\n     * @internal\n     * @category Recurrence\n     */\n    detachFromRecurringEvent() {\n        const\n            me                                    = this,\n            // For access further down, breaking the link involves engine if trying to get the occurrenceDate later,\n            // resulting in the wrong date\n            { recurringTimeSpan, occurrenceDate, startDate } = me;\n\n        // Break the link\n        me.recurringTimeSpan = null;\n\n        // The occurrenceDate is injected into the data when an occurrence is created.\n        // the recurringTimeSpan's afterChange will remove any cache occurrence\n        // for this date; see above\n        recurringTimeSpan.addExceptionDate(occurrenceDate);\n\n        // If we still have a recurrenceRule, we're being promoted to be a new recurring event.\n        // The recurrence setter applies the rule immediately to occurrences, so this will\n        // always be correct.\n        if (me.recurrenceRule) {\n            // The RecurrenceModel removes occurrences and exceptions after this date\n            recurringTimeSpan.recurrence.endDate = DateHelper.add(startDate, -1, 'minute');\n        }\n    }\n\n    /**\n     * The setter used by Model#inSet when {@link #function-addExceptionDate} is called.\n     * Adding an exception must trigger change processing in a recurring event, so it must\n     * be changed through a {@link Core.data.Model#function-set} call. Also, the change must be batchable\n     * with other changes.\n     * @private\n     * @readonly\n     * @category Recurrence\n     */\n    set newExceptionDate(date) {\n        if (date) {\n            const exceptionDates = this.exceptionDates || (this.exceptionDates = {});\n\n            exceptionDates[DateHelper.makeKey(date)] = 1;\n        }\n    }\n\n    /**\n     * Adds an exception date that should be skipped when generating occurrences for the timespan.\n     * The methods adds an entry to the array kept in {@link #field-exceptionDates} field.\n     * @param {Date} date Exception date.\n     * @internal\n     * @category Recurrence\n     */\n    addExceptionDate(newExceptionDate) {\n        return this.set({\n            newExceptionDate\n        });\n    }\n\n    /**\n     * Does this recurring event have an exception on the passed date.\n     * @param {Date} date The date to find an exception for.\n     * @returns {Boolean} `true` if the event has an exception starting on the passed date.\n     * @category Recurrence\n     */\n    hasException(date) {\n        return this.exceptionDates?.[DateHelper.makeKey(date)];\n    }\n};\n","import DH from '../../../Core/helper/DateHelper.js';\nimport ArrayHelper from '../../../Core/helper/ArrayHelper.js';\n\nconst\n    oneDayMS = 1000 * 60 * 60 * 24;\n\n/**\n * @module Scheduler/model/mixin/EventModelMixin\n */\n\n/**\n * Predefined named colors (actual color might vary by theme):\n * <div class=\"b-colorbox b-inline b-sch-red\"></div>red,\n * <div class=\"b-colorbox b-inline b-sch-pink\"></div>pink,\n * <div class=\"b-colorbox b-inline b-sch-purple\"></div>purple,\n * <div class=\"b-colorbox b-inline b-sch-magenta\"></div>magenta,\n * <div class=\"b-colorbox b-inline b-sch-violet\"></div>violet,\n * <div class=\"b-colorbox b-inline b-sch-indigo\"></div>indigo,\n * <div class=\"b-colorbox b-inline b-sch-blue\"></div>blue,\n * <div class=\"b-colorbox b-inline b-sch-cyan\"></div>cyan,\n * <div class=\"b-colorbox b-inline b-sch-teal\"></div>teal,\n * <div class=\"b-colorbox b-inline b-sch-green\"></div>green,\n * <div class=\"b-colorbox b-inline b-sch-gantt-green\"></div>gantt-green\n * <div class=\"b-colorbox b-inline b-sch-lime\"></div>lime,\n * <div class=\"b-colorbox b-inline b-sch-yellow\"></div>yellow,\n * <div class=\"b-colorbox b-inline b-sch-orange\"></div>orange,\n * <div class=\"b-colorbox b-inline b-sch-deep-orange\"></div>deep-orange\n * <div class=\"b-colorbox b-inline b-sch-gray\"></div>gray\n * <div class=\"b-colorbox b-inline b-sch-light-gray\"></div>light-gray\n * @typedef {'red'|'pink'|'purple'|'magenta'|'violet'|'indigo'|'blue'|'cyan'|'teal'|'green'|'gantt-green'|'lime'|'yellow'|'orange'|'deep-orange'|'gray'|'light-gray'|String|null} EventColor\n */\n// Colors also specified in a static getter in TimelineEventRendering.js\n\n/**\n * Mixin that holds configuration shared between events in Scheduler and Scheduler Pro.\n * @mixin\n */\nexport default Target => class EventModelMixin extends Target {\n    static get $name() {\n        return 'EventModelMixin';\n    }\n\n    // Flag checked by EventStore to make sure it uses a valid subclass\n    static get isEventModel() {\n        return true;\n    }\n\n    /**\n     * Set value for the specified field(s), triggering engine calculations immediately. See\n     * {@link Core.data.Model#function-set Model#set()} for arguments.\n     *\n     * ```javascript\n     * eventRecord.set('duration', 4);\n     * // eventRecord.endDate is not yet calculated\n     *\n     * await eventRecord.setAsync('duration', 4);\n     * // eventRecord.endDate is calculated\n     * ```\n     *\n     * @param {String|Object} field The field to set value for, or an object with multiple values to set in one call\n     * @param {*} value Value to set\n     * @param {Boolean} [silent=false] Set to true to not trigger events. If event is recurring, occurrences won't be updated\n     * automatically.\n     * @function setAsync\n     * @category Editing\n     * @async\n     */\n\n    //region Fields\n\n    static get fields() {\n        return [\n            // <remove-on-release>\n            // TODO: below startDate/endDate/duration fields docs copy-paste should be cleaned up after supporting @localdoc & @inheritdoc combination\n            // </remove-on-release>\n\n            /**\n             * The start date of a time span (or Event / Task).\n             *\n             * Uses {@link Core/helper/DateHelper#property-defaultFormat-static DateHelper.defaultFormat} to convert a\n             * supplied string to a Date. To specify another format, either change that setting or subclass TimeSpan and\n             * change the dateFormat for this field.\n             *\n             * UI fields representing this data field are disabled for summary tasks. See {@link #function-isEditable}\n             * for details.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * Also note that modifying the `startDate` at runtime will move the event in time, without affecting its\n             * duration (with reservation for other scheduling logic affecting the duration). If you want to change the\n             * `startDate` and `duration`, use {@link Scheduler/model/TimeSpan#function-setStartDate} instead (passing\n             * `false` as the second argument).\n             *\n             * @field {Date} startDate\n             * @accepts {String|Date}\n             * @category Scheduling\n             */\n\n            /**\n             * The end date of a time span (or Event / Task).\n             *\n             * Uses {@link Core/helper/DateHelper#property-defaultFormat-static DateHelper.defaultFormat} to convert a\n             * supplied string to a Date. To specify another format, either change that setting or subclass TimeSpan and\n             * change the dateFormat for this field.\n             *\n             * UI fields representing this data field are disabled for summary tasks. See {@link #function-isEditable} for details.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * @field {Date} endDate\n             * @accepts {String|Date}\n             * @category Scheduling\n             */\n\n            /**\n             * The numeric part of the timespan's duration (the number of units).\n             *\n             * UI fields representing this data field are disabled for summary tasks. See {@link #function-isEditable}\n             * for details.\n             *\n             * @field {Number} duration\n             * @category Scheduling\n             */\n\n            /**\n             * Calculated field which encapsulates the duration's magnitude and unit. This field will not be persisted,\n             * setting it will update the {@link #field-duration} and\n             * {@link Scheduler.model.TimeSpan#field-durationUnit} fields.\n             *\n             * UI fields representing this data field are disabled for summary tasks. See {@link #function-isEditable}\n             * for details.\n             *\n             * @field {DurationConfig|Core.data.Duration} fullDuration\n             * @category Scheduling\n             */\n\n            /**\n             * The unique identifier of a task (mandatory)\n             * @field {String|Number} id\n             * @category Common\n             */\n\n            /**\n             * Id of the resource this event is associated with (only usable for single assignments). We recommend\n             * using assignments in an AssignmentStore over this approach. Internally any Event using `resourceId`\n             * will have an assignment in AssignmentStore generated.\n             * @field {String|Number} resourceId\n             * @category Common\n             */\n            {\n                name     : 'resourceId',\n                internal : true\n            },\n\n            /**\n             * Ids of the resources this event is associated with (can be used for for multiple assignments).\n             * Any event using `resourceIds` will have assignments in AssignmentStore generated automatically.\n             * It only applies if is configured with `perist: true`.\n             * ```javascript\n             *   class CustomEventModel extends EventModel {\n             *       static get $name() {\n             *           return 'CustomEventModel';\n             *       }\n             *\n             *       static get fields() {\n             *           return [\n             *               { name : 'resourceIds', persist : true }\n             *           ];\n             *       }\n             *   };\n             *\n             *   const\n             *       resources   = [\n             *           { id : 'r1', name : 'Celia' },\n             *           { id : 'r2', name : 'Lee' },\n             *           { id : 'r3', name : 'Macy' },\n             *           { id : 'r4', name : 'Madison' }\n             *       ],\n             *       events      = [\n             *           {\n             *               id          : 1,\n             *               resourceIds : ['r1', 'r2']\n             *               ...\n             *           },\n             *           {\n             *               id          : 2,\n             *               resourceIds : ['r3', 'r4']\n             *               ...\n             *           }\n             *       ];\n             *\n             *   const scheduler = new Scheduler({\n             *       ...\n             *       eventStore : {\n             *           modelClass : CustomEventModel,\n             *           data       : events\n             *       },\n             *       ...\n             *   });\n             * ```\n             * @field {String[]|Number[]} resourceIds\n             * @category Common\n             */\n            {\n                name     : 'resourceIds',\n                type     : 'array',\n                persist  : false,\n                internal : true\n            },\n\n            /**\n             * The array of {@link Scheduler.model.ResourceModel resources} which are assigned to this event.\n             * @field {String|Number} resources\n             * @category Common\n             */\n            {\n                name   : 'resources',\n                column : {\n                    type : 'resourceassignment'\n                },\n                persist  : false,\n                // <remove-on-release>\n                // TODO: remove this when resourcecolumn is in Scheduler\n                // </remove-on-release>\n                internal : true,\n                useProp  : true\n            },\n\n            /**\n             * Specify false to prevent the event from being dragged (if EventDrag feature is used)\n             * @field {Boolean} draggable\n             * @default true\n             * @category Interaction\n             */\n            {\n                name         : 'draggable',\n                type         : 'boolean',\n                persist      : false,\n                defaultValue : true,\n                internal     : true\n            },\n\n            /**\n             * Specify `false` to prevent the event from being resized (if EventResize feature is used). You can also\n             * specify `'start'` or `'end'` to only allow resizing in one direction\n             * @field {Boolean|String} resizable\n             * @default true\n             * @category Interaction\n             */\n            {\n                name         : 'resizable',\n                persist      : false,\n                defaultValue : true,\n                internal     : true\n            }, // true, false, 'start' or 'end'\n\n            /**\n             * A field marking event as all day(s) spanning event.\n             * For example, a holiday day may be represented by a `startDate`, and the `allDay` flag.\n             * @field {Boolean} allDay\n             * @category Scheduling\n             */\n            {\n                name         : 'allDay',\n                type         : 'boolean',\n                defaultValue : false\n            },\n\n            /**\n             * Controls this events appearance, see Schedulers\n             * {@link Scheduler.view.mixin.TimelineEventRendering#config-eventStyle eventStyle config} for\n             * available options.\n             * @field {'plain'|'border'|'colored'|'hollow'|'line'|'dashed'|'minimal'|'rounded'|'calendar'|'interday'|null} eventStyle\n             * @category Styling\n             */\n            {\n                name     : 'eventStyle',\n                internal : true\n            },\n\n            /**\n             * Controls the primary color of the event. For available standard colors, see\n             * {@link #typedef-EventColor}.\n             * @field {EventColor|String|null} eventColor\n             * @category Styling\n             */\n            {\n                name     : 'eventColor',\n                internal : true\n            },\n\n            /**\n             * Width (in px) to use for this milestone when using Scheduler#milestoneLayoutMode 'data'.\n             * @field {Number} milestoneWidth\n             * @category Styling\n             */\n            {\n                name     : 'milestoneWidth',\n                internal : true\n            },\n\n            /**\n             * Set this field to `false` to opt out of {@link Scheduler.feature.StickyEvents sticky event content}\n             * (keeping event text in view while scrolling).\n             * @field {Boolean} stickyContents\n             * @category Styling\n             */\n            {\n                name     : 'stickyContents',\n                internal : true\n            }\n        ];\n    }\n\n    //endregion\n\n    //region Id change\n\n    updateAssignmentEventIds() {\n        this.assigned.forEach(assignment => {\n            assignment.eventId = this.id;\n        });\n    }\n\n    syncId(value) {\n        super.syncId(value);\n\n        this.updateAssignmentEventIds();\n    }\n\n    //endregion\n\n    //region Resources\n\n    /**\n     * Returns all resources assigned to an event.\n     *\n     * @property {Scheduler.model.ResourceModel[]}\n     * @category Assignments & Resources\n     * @readonly\n     */\n    get resources() {\n        // Only include valid resources, to not have nulls in the result\n        return this.assignments.reduce((resources, { resource }) => {\n            resource && resources.push(resource.$original);\n            return resources;\n        }, []);\n    }\n\n    set resources(resources) {\n        resources = ArrayHelper.asArray(resources);\n\n        const\n            me             = this,\n            newResourceIds = resources.map(me.constructor.asId);\n\n        if (me.usesSingleAssignment) {\n            me.set('resourceId', newResourceIds[0]);\n        }\n        else if (me.fieldMap?.resourceIds.persist) {\n            me.resourceIds = newResourceIds;\n        }\n        else {\n            const\n                existingResourceIds                     = me.assignments.map(a => a.resource.id),\n                { onlyInA : toAdd, onlyInB : toRemove } = ArrayHelper.delta(newResourceIds, existingResourceIds);\n            // Add first, remove after. Otherwise event might get removed with its last assignment\n            me.assignmentStore.add(toAdd.map(resourceId => ({ resource : resourceId, event : me })));\n            me.assignmentStore.remove(toRemove.map(resourceId => me.assignments.find(a => a.resource.id === resourceId)));\n        }\n    }\n\n    /**\n     * Iterate over all associated resources\n     * @private\n     * @category Assignments & Resources\n     */\n    forEachResource(fn, thisObj = this) {\n        for (const resource of this.resources) {\n            if (fn.call(thisObj, resource) === false) {\n                return;\n            }\n        }\n    }\n\n    /**\n     * Returns either the resource associated with this event (when called w/o `resourceId`) or resource\n     * with specified id.\n     *\n     * @param {String} [resourceId] To retrieve a specific resource\n     * @returns {Scheduler.model.ResourceModel}\n     * @category Assignments & Resources\n     */\n    getResource(resourceId) {\n        if (resourceId == null) {\n            return this.resource;\n        }\n\n        return this.resourceStore ? this.resourceStore.getById(resourceId) : null;\n    }\n\n    //endregion\n\n    //region Dates\n\n    get startDate() {\n        let dt;\n\n        if (this.isOccurrence) {\n            dt = this.get('startDate');\n        }\n        else {\n            // Micro optimization to avoid expensive super call. super will be hit in Scheduler Pro\n            dt = this._startDate ?? super.startDate;\n        }\n\n        if (this.allDay) {\n            dt = this.constructor.getAllDayStartDate(dt);\n        }\n\n        return dt;\n    }\n\n    set startDate(startDate) {\n        if (this.batching) {\n            this._startDate = startDate;\n            this.set({ startDate });\n        }\n        else {\n            super.startDate = startDate;\n        }\n    }\n\n    get endDate() {\n        let dt;\n\n        if (this.isOccurrence) {\n            dt = this.get('endDate');\n        }\n        else {\n            // Micro optimization to avoid expensive super call. super will be hit in Scheduler Pro\n            dt = this._endDate ?? super.endDate;\n        }\n\n        if (this.allDay) {\n            dt = this.constructor.getAllDayEndDate(dt);\n        }\n\n        return dt;\n    }\n\n    set endDate(endDate) {\n        if (this.batching) {\n            this._endDate = endDate;\n            this.set({ endDate });\n        }\n        else {\n            super.endDate = endDate;\n        }\n    }\n\n    // Cannot use `convert` method because it might be disabled by `useRawData : true` and we always need to calculate\n    // that value\n    get wrapStartDate() {\n        return this.startDate;\n    }\n\n    set wrapStartDate(value) {}\n\n    get wrapEndDate() {\n        return this.endDate;\n    }\n\n    set wrapEndDate(value) {}\n\n    /**\n     * Shift the dates for the date range by the passed amount and unit\n     * @param {'ms'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} unit The unit to shift by, see {@link Core.helper.DateHelper}\n     * for more information on valid formats.\n     * @param {Number} amount The amount to shift\n     * @returns {Promise} A promise which is resolved when shift calculations are done\n     * @async\n     * @method shift\n     * @category Scheduling\n     */\n\n    //endregion\n\n    //region Is\n\n    // Used internally to differentiate between Event and ResourceTimeRange\n    get isEvent() {\n        return true;\n    }\n\n    /**\n     * Returns true if event can be drag and dropped\n     * @property {Boolean}\n     * @category Editing\n     */\n    get isDraggable() {\n        return !this.readOnly && this.draggable;\n    }\n\n    /**\n     * Returns true if event can be resized, but can additionally return 'start' or 'end' indicating how this event can\n     * be resized.\n     *\n     * Milestones and parent events (that are not manuallyScheduled) cannot be resized.\n     *\n     * @property {Boolean|String}\n     * @readonly\n     * @category Editing\n     */\n    get isResizable() {\n        return !this.isMilestone && (!this.isParent || this.manuallyScheduled) && this.resizable;\n    }\n\n    /**\n     * Returns false if the event is not persistable. By default it always is, override this getter if you need\n     * custom logic.\n     *\n     * @property {Boolean}\n     * @readonly\n     * @category Editing\n     */\n    get isPersistable() {\n        // Records not yet fully created cannot be persisted\n        return super.isPersistable && !this.isCreating;\n    }\n\n    endBatch() {\n        const\n            me = this,\n            { isPersistable : wasPersistable, meta : { batchChanges } } = me;\n\n        // Remove cached values\n        // https://github.com/bryntum/support/issues/3358\n        if (batchChanges) {\n            if ('endDate' in batchChanges) {\n                delete me._endDate;\n                // When project recalculates start/end date and committing changes to record it calls endBatch. In this\n                // case wrap dates become invalid and should be reset on the record. We do it by forcing `null` value.\n                // Possible scenarios include adding dependency or moving first event in a dependency chain.\n                // Covered by pro/features/BufferTimeDependencies.t\n                // wrap date is an internal field we should be fine without mapping\n                if (me.postamble) {\n                    me.wrapEndDate = null;\n                }\n            }\n\n            if ('startDate' in batchChanges) {\n                delete me._startDate;\n\n                if (me.preamble) {\n                    me.wrapStartDate = null;\n                }\n            }\n        }\n\n        super.endBatch(...arguments);\n\n        // If this event newly persistable, its assignments are eligible for syncing.\n        if (me.isPersistable && !wasPersistable && !me.ignoreBag && me.assigned) {\n            for (const assignment of me.assigned) {\n                assignment.stores.forEach(s =>\n                    s.updateModifiedBagForRecord(assignment)\n                );\n            }\n        }\n    }\n\n    get isCreating() {\n        return super.isCreating;\n    }\n\n    set isCreating(value) {\n        super.isCreating = value;\n\n        this.assignmentStore?.suspendAutoCommit();\n        this.assignments.forEach(record => record.isCreating = value);\n        this.assignmentStore?.resumeAutoCommit();\n    }\n\n    //endregion\n\n    //region Single assignment compatibility\n\n    get usesSingleAssignment() {\n        return !this.eventStore || this.eventStore.usesSingleAssignment;\n    }\n\n    copy(...args) {\n        const copy = super.copy(...args);\n\n        // Don't copy resourceId when using multi assignment\n        if (!this.usesSingleAssignment) {\n            copy.resourceId = null;\n        }\n\n        return copy;\n    }\n\n    /**\n     * Override persistable getter to prevent sending resourceId when using multiple resource assignment mode\n     * https://github.com/bryntum/support/issues/1345\n     * @private\n     */\n    get persistableData() {\n        const data = super.persistableData;\n        if (!this.usesSingleAssignment) {\n            delete data.resourceId;\n        }\n        return data;\n    }\n\n    /**\n     * Returns the first assigned resource, or assigns a resource\n     * @member {Scheduler.model.ResourceModel} resource\n     * @category Assignments & Resources\n     */\n    get resource() {\n        const { resources } = this;\n        return resources.length ? resources[0] : null;\n    }\n\n    set resource(resourceRecord) {\n        // Use the resourceId setter for single assignment\n        this.resourceId = this.constructor.asId(resourceRecord);\n    }\n\n    get resourceId() {\n        return this.usesSingleAssignment ? this.get('resourceId') : this.resource?.id;\n    }\n\n    set resourceId(resourceId) {\n        this.applyResourceId(resourceId);\n    }\n\n    get resourceIds() {\n        if (this.fieldMap?.resourceIds.persist) {\n            return this.get('resourceIds');\n        }\n        else {\n            return this.resources?.map(r => r.id) ?? [];\n        }\n    }\n\n    set resourceIds(ids) {\n        this.set('resourceIds', ids);\n    }\n\n    // Resources + any links to any of them\n    get $linkedResources() {\n        return this.resources?.flatMap(resourceRecord => ([\n            resourceRecord,\n            ...resourceRecord.$links\n        ])) ?? [];\n    }\n\n    applyResourceId(resourceId, fromApplyValue = false) {\n        const\n            me                          = this,\n            { eventStore, assignments } = me;\n\n        // When part of an EventStore, resourceId are changed to be AssignmentModels\n        if (eventStore) {\n            // If not yet part of project, we cant resolve assignmentStore from ourselves\n            const assignmentStore = eventStore.assignmentStore || eventStore.crudManager?.assignmentStore;\n\n            if (resourceId != null) {\n                if (!me.meta.skipEnforcingSingleAssignment) {\n                    eventStore.usesSingleAssignment = true;\n                }\n\n                // Reassign if already assigned, only single assignment allowed\n                if (assignments?.length && resourceId !== assignments[0].resourceId) {\n                    //assignments[0].set('resourceId', resourceId, Boolean(me.eventStore.eventsSuspended));\n                    // Silent reassign if events are suspended on event store, won't be expecting UI update then\n                    const eventsSuspended = Boolean(eventStore.eventsSuspended);\n\n                    eventsSuspended && assignmentStore.suspendEvents();\n                    assignments[0].resource = resourceId;\n                    eventsSuspended && assignmentStore.resumeEvents();\n                }\n                // Otherwise assign\n                else {\n                    assignmentStore.assignEventToResource(me, resourceId);\n                }\n            }\n            // Setting resourceId to null removes all assignments, if resourceIds is not set\n            else if (me.usesSingleAssignment || me.resourceIds?.length) {\n                assignmentStore.remove(assignments);\n            }\n        }\n        // Not part of an EventStore, edge case. Set to data unless we are in such operation already\n        else if (!fromApplyValue) {\n            me.set({ resourceId });\n        }\n    }\n\n    applyResourceIds(resourceIds, fromApplyValue = false) {\n        const\n            me                          = this,\n            { eventStore, assignments } = me;\n\n        if (me.fieldMap['resourceIds'].persist === false) {\n            return false;\n        }\n\n        // Remove duplicated value\n        resourceIds = [...new Set(resourceIds)];\n\n        // When part of an EventStore, resourceIds are changed to be AssignmentModels\n        if (eventStore) {\n            // If not yet part of project, we cant resolve assignmentStore from ourselves\n            const assignmentStore = eventStore.assignmentStore || eventStore.crudManager?.assignmentStore;\n\n            if (resourceIds?.length) {\n                // If there are assignments, update them with new resourceIds. If resourceIds\n                // contains more elements than existing assignments, add new ones,\n                // otherwise remove excess assignments not used anymore\n                if (assignments?.length) {\n                    const eventsSuspended = Boolean(eventStore.eventsSuspended);\n                    eventsSuspended && assignmentStore.suspendEvents();\n\n                    assignments.forEach(assignment => {\n                        const resourceIdToUpdate = resourceIds.find(resourceId =>\n                            !assignments.some(a => a.resourceId === resourceId));\n                        if (resourceIdToUpdate) {\n                            assignment.resource = resourceIdToUpdate;\n                        }\n                    });\n\n                    const { onlyInA : toAdd, onlyInB: toRemove } = ArrayHelper.delta(resourceIds, assignments.map(assignment => assignment.resourceId));\n                    assignmentStore.add(toAdd.map(resourceId => ({ resource : resourceId, event : me })));\n                    assignmentStore.remove(toRemove.map(resourceId => assignments.find(a => a.resource.id === resourceId)));\n\n                    eventsSuspended && assignmentStore.resumeEvents();\n                }\n                // Otherwise assign\n                else {\n                    assignmentStore.add(resourceIds.map(resourceId => ({ resource : resourceId, event : me })));\n                }\n            }\n            else {\n                // Setting resourceIds to an empty list removes all assignments\n                assignmentStore.remove(assignments);\n            }\n        }\n        // Not part of an EventStore, edge case. Set to data unless we are in such operation already\n        else if (!fromApplyValue) {\n            me.set({ resourceIds });\n        }\n    }\n\n    // Special handling of setting resourceId and resourceIds, creates assignment\n    applyValue(useProp, mapping, value, skipAccessors, field) {\n        if (field && !this.meta.isAssigning) {\n            const { eventStore } = this;\n\n            switch (field.name) {\n                case 'resourceId':\n                    eventStore && (eventStore.isAssigning = true);\n\n                    this.applyResourceId(value, true);\n                    break;\n                case 'resourceIds':\n                    eventStore && (eventStore.isAssigning = true);\n\n                    this.applyResourceIds(value, true);\n                    break;\n            }\n\n            eventStore && (eventStore.isAssigning = false);\n        }\n\n        super.applyValue(useProp, mapping, value, skipAccessors, field);\n    }\n\n    //endregion\n\n    //region Assignment\n\n    /**\n     * Returns all assignments for the event. Event must be part of the store for this method to work.\n     * @property {Scheduler.model.AssignmentModel[]}\n     * @readonly\n     * @category Assignments & Resources\n     */\n    get assignments() {\n        return [...(this.assigned || [])];\n    }\n\n    /**\n     * Assigns this event to the specified resource.\n     *\n     * *Note:* The event must be part of an EventStore for this to work. If the EventStore uses single assignment\n     * (loaded using resourceId) existing assignments will always be removed.\n     *\n     * @param {Scheduler.model.ResourceModel|String|Number|Scheduler.model.ResourceModel[]|String[]|Number[]} resource A new resource for this event, either as a full\n     *        Resource record or an id (or an array of such).\n     * @param {Boolean} [removeExistingAssignments] `true` to first remove existing assignments\n     * @category Assignments & Resources\n     */\n    assign(resource, removeExistingAssignments = false) {\n        const { eventStore } = this;\n\n        if (eventStore && !eventStore.usesSingleAssignment) {\n            eventStore.assignEventToResource(this, resource, removeExistingAssignments);\n        }\n        else {\n            // Remember what resource to assign,  directly in single assignment mode or for later when we are joined to\n            // an EventStore\n            this.resourceId = this.constructor.asId(resource);\n\n            if (!eventStore) {\n                // Prevent flagging EventStore as using single assignment when that happens, we cannot know that here\n                this.meta.skipEnforcingSingleAssignment = true;\n            }\n        }\n    }\n\n    /**\n     * Unassigns this event from the specified resource\n     *\n     * @param {Scheduler.model.ResourceModel|String|Number} [resource] The resource to unassign from.\n     * @category Assignments & Resources\n     */\n    unassign(resource, removingResource = false) {\n        const me = this;\n\n        resource = me.constructor.asId(resource);\n\n        // If unassigned is caused by removing the resource the UI should be able to find out to not do extra redraws etc.\n        me.meta.removingResource = removingResource;\n\n        me.eventStore?.unassignEventFromResource(me, resource);\n\n        me.meta.removingResource = null;\n    }\n\n    /**\n     * Reassigns an event from an old resource to a new resource\n     *\n     * @param {Scheduler.model.ResourceModel|String|Number} oldResourceId A resource to unassign from or its id\n     * @param {Scheduler.model.ResourceModel|String|Number} newResourceId A resource to assign to or its id\n     * @category Assignments & Resources\n     */\n    reassign(oldResourceId, newResourceId) {\n        this.eventStore && this.eventStore.reassignEventFromResourceToResource(this, oldResourceId, newResourceId);\n    }\n\n    /**\n     * Returns true if this event is assigned to a certain resource.\n     *\n     * @param {Scheduler.model.ResourceModel|String|Number} resource The resource to query for\n     * @returns {Boolean}\n     * @category Assignments & Resources\n     */\n    isAssignedTo(resource) {\n        const resourceId = this.constructor.asId(resource);\n        return this.assignments.some(assignment => assignment.resourceId === resourceId);\n    }\n\n    //endregion\n\n    //region Dependencies\n\n    /**\n     * Returns all predecessor dependencies of this event\n     *\n     * @readonly\n     * @property {Scheduler.model.DependencyBaseModel[]}\n     * @category Dependencies\n     */\n    get predecessors() {\n        return [...this.incomingDeps ?? []];\n    }\n\n    /**\n     * Returns all successor dependencies of this event\n     *\n     * @readonly\n     * @property {Scheduler.model.DependencyBaseModel[]}\n     * @category Dependencies\n     *\n     */\n    get successors() {\n        return [...this.outgoingDeps ?? []];\n    }\n\n    get dependencies() {\n        // Dependency feature listens for assignment changes pre commit, thus we risk deps not being set up yet\n        return [...this.incomingDeps ?? [], ...this.outgoingDeps ?? []];\n    }\n\n    //endregion\n\n    normalize() {\n        // Normalization handled by Engine\n    }\n\n    inSetNormalize() {\n        // Normalization handled by Engine\n    }\n\n    /**\n     * The \"main\" event this model is an occurrence of.\n     * Returns `null` for non-occurrences.\n     * @property {Scheduler.model.EventModel}\n     * @alias #Scheduler.model.mixin.RecurringTimeSpan#property-recurringTimeSpan\n     * @readonly\n     * @category Scheduling\n     */\n    get recurringEvent() {\n        return this.recurringTimeSpan;\n    }\n\n    /**\n     * Flag which indicates that this event is an interday event. This means that it spans\n     * an entire day or multiple days.\n     *\n     * This is essentially used by the Calendar package to determine if an event should\n     * go into the all day zone of a DayView.\n     *\n     * @property {Boolean}\n     * @readonly\n     * @category Scheduling\n     */\n    get isInterDay() {\n        const { durationMS } = this;\n\n        // A full day (86400000 or more) marks as it as interDay,\n        // which means it belongs in the all day row of a Calendar DayView\n        if (durationMS >= oneDayMS || (!durationMS && this.allDay)) {\n            return true;\n        }\n\n        // Working out whether it crosses midnight is a little more difficult\n        const\n            {\n                endDate,\n                startDate\n            } = this,\n            eventStartMidnight = DH.clearTime(startDate);\n\n        // If either is null or NaN, we have to answer falsy\n        if (startDate && endDate) {\n            eventStartMidnight.setDate(eventStartMidnight.getDate() + 1);\n\n            // If the endDate is past midnight, it's interDay and goes in the all day row of a Calendar DayView\n            return (endDate || DH.add(startDate, durationMS)) > eventStartMidnight;\n        }\n    }\n\n    //region All day statics\n\n    static getAllDayStartDate(dt) {\n        if (dt && dt.isEvent) {\n            dt = dt.get('startDate');\n        }\n\n        if (dt) {\n            dt = DH.clearTime(dt, true);\n        }\n\n        return dt;\n    }\n\n    static getAllDayEndDate(dt) {\n        if (dt && dt.isEvent) {\n            dt = dt.get('endDate');\n        }\n\n        if (dt && (dt.getHours() > 0 || dt.getMinutes() > 0 || dt.getSeconds() > 0 || dt.getMilliseconds() > 0)) {\n            dt = DH.getNext(dt, 'd', 1);\n        }\n\n        return dt;\n    }\n\n    static getAllDayDisplayStartDate(dt) {\n        if (dt && dt.isEvent) {\n            dt = dt.get('startDate');\n        }\n\n        return DH.clearTime(dt, true);\n    }\n\n    static getAllDayDisplayEndDate(startDate, endDate) {\n        if (startDate && startDate.isEvent) {\n            endDate   = startDate.get('endDate');\n            startDate = startDate.get('startDate');\n        }\n\n        if (endDate) {\n            startDate = this.constructor.getAllDayDisplayStartDate(startDate);\n\n            // If date falls on start of the day - subtract one day to show end date correctly\n            // e.g. event starts on 2017-01-01 00:00 and ends on 2017-01-02 00:00, editor should show\n            // 2017-01-01 for both start and end\n            if (DH.clearTime(endDate, true).valueOf() === endDate.valueOf()) {\n                endDate = DH.add(endDate, DH.DAY, -1);\n            }\n            else if (startDate.valueOf() !== endDate.valueOf()) {\n                endDate = DH.clearTime(endDate, true);\n            }\n        }\n\n        return endDate;\n    }\n\n    /**\n     * Defines if the given event field should be manually editable in UI.\n     * You can override this method to provide your own logic.\n     *\n     * By default, the method defines {@link #field-endDate}, {@link #field-duration} and {@link #field-fullDuration}\n     * fields editable for leaf events only (in case the event is part of a tree store) and all other fields as\n     * editable.\n     *\n     * @param {String} fieldName Name of the field\n     * @returns {Boolean} Returns `true` if the field is editable, `false` if it is not and `undefined` if the event has\n     * no such field.\n     * @category Editing\n     */\n    isEditable(fieldName) {\n        switch (fieldName) {\n            // end/duration is allowed to edit for leafs\n            case 'endDate' :\n            case 'duration' :\n            case 'fullDuration' :\n                return this.isLeaf;\n        }\n\n        return super.isEditable(fieldName);\n    }\n\n    //endregion\n};\n","import TimeSpan from './TimeSpan.js';\nimport RecurringTimeSpan from './mixin/RecurringTimeSpan.js';\nimport EventModelMixin from './mixin/EventModelMixin.js';\nimport PartOfProject from '../data/mixin/PartOfProject.js';\n/* <remove-on-release> */\nimport { SchedulerBasicEvent } from '../../Engine/quark/model/scheduler_basic/SchedulerBasicEvent.js';\n/* </remove-on-release> */\nimport { SchedulerCoreEvent } from '../../Engine/quark/model/scheduler_core/SchedulerCoreEvent.js';\n\nconst EngineMixin = /* <remove-on-release> */globalThis.bryntum?.useBasicEngine ? SchedulerBasicEvent : /* </remove-on-release> */SchedulerCoreEvent;\n\n/**\n * @module Scheduler/model/EventModel\n */\n\n/**\n * This class represent a single event in your schedule, usually added to a {@link Scheduler.data.EventStore}.\n *\n * It is a subclass of the {@link Scheduler.model.TimeSpan}, which is in turn subclass of {@link Core.data.Model}.\n * Please refer to documentation of that class to become familiar with the base interface of the event.\n *\n * ## Async date calculations\n *\n * A record created from an {@link Scheduler/model/EventModel} is normally part of an {@link Scheduler.data.EventStore},\n * which in turn is part of a project. When dates or the duration of an event is changed, the project performs async calculations\n * to normalize the other fields.\n * For example if {@link #field-duration} is changed, it will calculate {@link #field-endDate}.\n *\n * As a result of this being an async operation, the values of other fields are not guaranteed to be up to date\n * immediately after a change. To ensure data is up to date, await the calculations to finish.\n *\n * For example, {@link #field-endDate} is not up to date after this operation:\n *\n * ```javascript\n * eventRecord.duration = 5;\n * // endDate not yet calculated\n * ```\n *\n * But if calculations are awaited it is up to date:\n *\n * ```javascript\n * eventRecord.duration = 5;\n * await eventRecord.project.commitAsync();\n * // endDate is calculated\n * ```\n *\n * As an alternative, you can also use `setAsync()` to trigger calculations directly after the change:\n *\n * ```javascript\n * await eventRecord.setAsync({ duration : 5});\n * // endDate is calculated\n * ```\n *\n * ## Subclassing the Event model class\n * The Event model has a few predefined fields as seen below. If you want to add new fields or change the options for the existing fields,\n * you can do that by subclassing this class (see example below).\n *\n * ```javascript\n * class MyEvent extends EventModel {\n *\n *     static get fields() {\n *         return [\n *            // Add new field\n *            { name: 'myField', type : 'number', defaultValue : 0 }\n *         ];\n *     },\n *\n *     myCheckMethod() {\n *         return this.myField > 0\n *     },\n *\n *     ...\n * });\n * ```\n *\n * If you in your data want to use other names for the {@link #field-startDate}, {@link #field-endDate}, {@link #field-resourceId} and name fields you can configure\n * them as seen below:\n *\n * ```javascript\n * class MyEvent extends EventModel {\n *\n *     static get fields() {\n *         return [\n *            { name: 'startDate', dataSource : 'taskStart' },\n *            { name: 'endDate', dataSource : 'taskEnd', format: 'YYYY-MM-DD' },\n *            { name: 'resourceId', dataSource : 'userId' },\n *            { name: 'name', dataSource : 'taskTitle' },\n *         ];\n *     },\n *     ...\n * });\n * ```\n *\n * Please refer to {@link Core.data.Model} for additional details.\n *\n * @extends Scheduler/model/TimeSpan\n * @mixes Scheduler/model/mixin/RecurringTimeSpan\n * @mixes Scheduler/model/mixin/EventModelMixin\n */\nexport default class EventModel extends EngineMixin.derive(TimeSpan).mixin(\n    RecurringTimeSpan,\n    PartOfProject,\n    EventModelMixin\n) {\n    static get $name() {\n        return 'EventModel';\n    }\n}\n\nEventModel.exposeProperties();\n","import AjaxStore from '../../Core/data/AjaxStore.js';\nimport EventStoreMixin from './mixin/EventStoreMixin.js';\nimport GetEventsMixin from './mixin/GetEventsMixin.js';\nimport DayIndexMixin from './mixin/DayIndexMixin.js';\nimport RecurringEventsMixin from './mixin/RecurringEventsMixin.js';\nimport EventModel from '../model/EventModel.js';\nimport PartOfProject from './mixin/PartOfProject.js';\n/* <remove-on-release> */\nimport { ChronoEventStoreMixin } from '../../Engine/quark/store/ChronoEventStoreMixin.js';\n/* </remove-on-release> */\nimport { CoreEventStoreMixin } from '../../Engine/quark/store/CoreEventStoreMixin.js';\nimport PartOfBaseProject from './mixin/PartOfBaseProject.js';\n\nconst EngineMixin = /* <remove-on-release> */globalThis.bryntum?.useBasicEngine ? PartOfBaseProject(ChronoEventStoreMixin.derive(AjaxStore)) : /* </remove-on-release> */PartOfProject(CoreEventStoreMixin.derive(AjaxStore));\n\n/**\n * @module Scheduler/data/EventStore\n */\n\n/**\n * A store holding all the {@link Scheduler.model.EventModel events} to be rendered into a {@link Scheduler.view.Scheduler Scheduler}.\n *\n * This store only accepts a model class inheriting from {@link Scheduler.model.EventModel}.\n *\n * An EventStore is usually connected to a project, which binds it to other related stores (AssignmentStore,\n * ResourceStore and DependencyStore). The project also handles normalization/calculation of the data on the records in\n * the store. For example if a record is added with a `startDate` and an `endDate`, it will calculate the `duration`.\n *\n * The calculations happens async, records are not guaranteed to have up to date data until they are finished. To be\n * certain that calculations have finished, call `await project.commitAsync()` after store actions. Or use one of the\n * `xxAsync` functions, such as `loadDataAsync()`.\n *\n * Using `commitAsync()`:\n *\n * ```javascript\n * eventStore.data = [{ startDate, endDate }, ...];\n *\n * // duration of the record is not yet calculated\n *\n * await eventStore.project.commitAsync();\n *\n * // now it is\n * ```\n *\n * Using `loadDataAsync()`:\n *\n * ```javascript\n * await eventStore.loadDataAsync([{ startDate, endDate }, ...]);\n *\n * // duration is calculated\n * ```\n *\n * ## Using recurring events\n * When recurring events are in the database, **all recurring event definitions** which started before\n * the requested start date, and have not yet finished recurring MUST be loaded into the EventStore.\n *\n * Only the **base** recurring event **definitions** are stored in the EventStore. You do not\n * need to calculate the future occurrence dates of these events. This is all handled by the EventStore.\n *\n * When asked to yield a set of events for a certain date range for creating a UI through\n * {@link #function-getEvents}, the EventStore *automatically* interpolates any occurrences of\n * recurring events into the results. They do not occupy slots in the EventStore for every date\n * in their repetition range (that would be very inefficient, and *might* be infinite).\n *\n * @mixes Scheduler/data/mixin/PartOfProject\n * @mixes Scheduler/data/mixin/EventStoreMixin\n * @mixes Scheduler/data/mixin/RecurringEventsMixin\n * @mixes Scheduler/data/mixin/GetEventsMixin\n * @extends Core/data/AjaxStore\n */\nexport default class EventStore extends EngineMixin.mixin(\n    RecurringEventsMixin,\n    EventStoreMixin,\n    DayIndexMixin,\n    GetEventsMixin\n) {\n\n    static $name = 'EventStore';\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Class used to represent records\n             * @config {Scheduler.model.EventModel}\n             * @typings {typeof EventModel}\n             * @default\n             * @category Common\n             */\n            modelClass : EventModel\n        };\n    }\n}\n","/**\n * @module Scheduler/model/mixin/AssignmentModelMixin\n */\n\n/**\n * Mixin that holds configuration shared between assignments in Scheduler and Scheduler Pro.\n * @mixin\n */\nexport default Target => class AssignmentModelMixin extends Target {\n    static get $name() {\n        return 'AssignmentModelMixin';\n    }\n\n    /**\n     * Set value for the specified field(s), triggering engine calculations immediately. See\n     * {@link Core.data.Model#function-set Model#set()} for arguments.\n     *\n     * ```javascript\n     * assignment.set('resourceId', 2);\n     * // assignment.resource is not yet resolved\n     *\n     * await assignment.setAsync('resourceId', 2);\n     * // assignment.resource is resolved\n     * ```\n     *\n     * @param {String|Object} field The field to set value for, or an object with multiple values to set in one call\n     * @param {*} value Value to set\n     * @param {Boolean} [silent=false] Set to true to not trigger events\n     * automatically.\n     * @function setAsync\n     * @category Editing\n     * @async\n     */\n\n    //region Fields\n\n    static get fields() {\n        return [\n            /**\n             * Id for the resource to assign to\n             * @field {String|Number} resourceId\n             * @category Common\n             */\n            'resourceId',\n\n            /**\n             * Id for the event to assign\n             * @field {String|Number} eventId\n             * @category Common\n             */\n            'eventId',\n\n            /**\n             * Specify `false` to opt out of drawing dependencies from/to this assignment\n             * @field {Boolean} drawDependencies\n             * @category Common\n             */\n            { name : 'drawDependencies', type : 'boolean' },\n\n            'event',\n\n            'resource'\n        ];\n    }\n\n    //endregion\n\n    construct(data, ...args) {\n        data = data || {};\n\n        const\n            { fieldMap }    = this,\n            eventIdField    = fieldMap.eventId.dataSource,\n            resourceIdField = fieldMap.resourceId.dataSource,\n            eventField      = fieldMap.event.dataSource,\n            resourceField   = fieldMap.resource.dataSource,\n            eventId         = data[eventIdField],\n            resourceId      = data[resourceIdField],\n            event           = data[eventField],\n            resource        = data[resourceField];\n\n        // Engine expects event and resource, not eventId and resourceId. We need to support both\n        if (eventId != null) {\n            data[eventField] = eventId;\n        }\n        else if (event != null) {\n            data[eventIdField] = event.isModel ? event.id : event;\n        }\n\n        if (resourceId != null) {\n            data[resourceField] = resourceId;\n        }\n        else if (resource != null) {\n            data[resourceIdField] = resource.isModel ? resource.id : resource;\n        }\n\n        super.construct(data, ...args);\n    }\n\n    //region Event & resource\n\n    /**\n     * A key made up from the event id and the id of the resource assigned to.\n     * @property eventResourceKey\n     * @readonly\n     * @internal\n     */\n    get eventResourceKey() {\n        return this.buildEventResourceKey(this.event, this.resource);\n    }\n\n    buildEventResourceKey(event, resource) {\n        let eventKey, resourceKey;\n\n        if (event) {\n            eventKey = event.isModel ? event.id : event;\n        }\n        else {\n            eventKey = this.internalId;\n        }\n\n        if (resource) {\n            resourceKey = resource.isModel ? resource.id : resource;\n        }\n        else {\n            resourceKey = this.internalId;\n        }\n        return `${eventKey}-${resourceKey}`;\n    }\n\n    buildIndexKey({ event, resource }) {\n        return this.buildEventResourceKey(event, resource);\n    }\n\n    set(field, value, ...args) {\n        const toSet = this.fieldToKeys(field, value);\n\n        // If resource was set, store its id as resourceId and announce it\n        if ('resource' in toSet) {\n            if (toSet.resource?.id !== undefined) {\n                toSet.resourceId = toSet.resource.id;\n            }\n        }\n        // If resourceId was set, we need to replace resource to have it re-referenced in engine\n        else if ('resourceId' in toSet && this.constructor.isProAssignmentModel) {\n            toSet.resource = toSet.resourceId;\n        }\n\n        // Same for event\n        if ('event' in toSet) {\n            if (toSet.event?.id !== undefined) {\n                toSet.eventId = toSet.event.id;\n            }\n        }\n        else if ('eventId' in toSet && this.constructor.isProAssignmentModel) {\n            toSet.event = toSet.eventId;\n        }\n\n        return super.set(toSet, null, ...args);\n    }\n\n    afterChange(toSet, wasSet, silent, fromRelationUpdate, skipAccessors) {\n        const me = this;\n\n        // Make sure Core Engine implementation notices \"resourceId\" change\n        // and updates \"resource\" field value respectively\n        if (!me.constructor.isProAssignmentModel && wasSet?.resourceId &&\n            me.resource?.id !== wasSet.resourceId.value) {\n            me.resource = wasSet.resourceId.value;\n        }\n        // If that's non-Core Engine and we have \"eventId\" indicated as just set\n        // and there was also \"event\" passed to set but it was not set\n        // and if that happens when propagating after sync-response applied\n        // - this means an event has changed its identifier\n        // (this fixes 11_backend.t.js in the Gantt)\n        else if (me.constructor.isProAssignmentModel && me.project?.propagatingSyncChanges &&\n            wasSet?.eventId && !wasSet?.event &&\n            (toSet.event.value === wasSet.eventId.value || toSet.event.value.id === wasSet.eventId.value)\n        ) {\n            // sanitize both wasSet and meta.modified\n            delete wasSet.eventId;\n            delete me.meta.modified.eventId;\n        }\n\n        return super.afterChange(...arguments);\n    }\n\n    // Settings resourceId relays to `resource`. Underlying data will be updated in `afterChange()` above\n    set resourceId(value) {\n        const { resource } = this;\n\n        // When assigning a new id to a resource, it will update the resourceId of the assignment. But the assignments\n        // resource is still the same so we need to announce here\n        if (resource?.isModel && resource.id === value) {\n            this.set('resourceId', value);\n        }\n        else {\n            this.resource = value;\n        }\n    }\n\n    get resourceId() {\n        // If assigned using `resource` and not `resourceId` there will be no resourceId\n        return this.resource?.id ?? this.get('resourceId');\n    }\n\n    // Same for event as for resourceId\n    set eventId(value) {\n        const { event } = this;\n\n        // When assigning a new id to an event, it will update the eventId of the assignment. But the assignments\n        // event is still the same so we need to announce here\n        if (event?.isModel && event.id === value) {\n            this.set('eventId', value);\n        }\n        else {\n            this.event = value;\n        }\n    }\n\n    get eventId() {\n        // If assigned using `event` and not `eventId` there will be no eventId\n        return this.event?.id ?? this.get('eventId');\n    }\n\n    /**\n     * Convenience property to get the name of the associated event.\n     * @property {String}\n     * @readonly\n     */\n    get eventName() {\n        return this.event?.name;\n    }\n\n    /**\n     * Convenience property to get the name of the associated resource.\n     * @property {String}\n     * @readonly\n     */\n    get resourceName() {\n        return this.resource?.name;\n    }\n\n    // <remove-on-release>\n    // TODO: Deprecate in favor of `get resource`\n    // </remove-on-release>\n    /**\n     * Returns the resource associated with this assignment.\n     *\n     * @returns {Scheduler.model.ResourceModel} Instance of resource\n     */\n    getResource() {\n        return this.resource;\n    }\n\n    //endregion\n\n    // Convenience getter to not have to check `instanceof AssignmentModel`\n    get isAssignment() {\n        return true;\n    }\n\n    /**\n     * Returns true if the Assignment can be persisted (e.g. task and resource are not 'phantoms')\n     *\n     * @property {Boolean}\n     */\n    get isPersistable() {\n        const\n            {\n                event,\n                resource,\n                unjoinedStores,\n                assignmentStore\n            }           = this,\n            crudManager = assignmentStore?.crudManager;\n\n        let result;\n\n        if (assignmentStore) {\n            // If the owning event is not persistable, this assignment is also not persistable.\n            // if crud manager is used it can deal with phantom event/resource since it persists all records in one batch\n            // if no crud manager used we have to wait till event/resource are persisted\n            result = this.isValid && event.isPersistable && (crudManager || !event.hasGeneratedId && !resource.hasGeneratedId);\n        }\n        // if we remove the record\n        else {\n            result = !this.isPhantom && Boolean(unjoinedStores[0]);\n        }\n\n        // Records not yet fully created cannot be persisted\n        return result && super.isPersistable && !this.event?.isCreating;\n    }\n\n    get isValid() {\n        return this.resource != null && this.event != null;\n    }\n\n    /**\n     * Returns a textual representation of this assignment (e.g. Mike 50%).\n     * @returns {String}\n     */\n    toString() {\n        if (this.resourceName) {\n            return `${this.resourceName} ${Math.round(this.units)}%`;\n        }\n\n        return '';\n    }\n\n    //region STM hooks\n\n    shouldRecordFieldChange(fieldName, oldValue, newValue) {\n        if (!super.shouldRecordFieldChange(fieldName, oldValue, newValue)) {\n            return false;\n        }\n\n        if (fieldName === 'event' || fieldName === 'eventId') {\n            const eventStore = this.project?.eventStore;\n\n            if (eventStore && eventStore.oldIdMap[oldValue] === eventStore.getById(newValue)) {\n                return false;\n            }\n        }\n\n        if (fieldName === 'resource' || fieldName === 'resourceId') {\n            const resourceStore = this.project?.resourceStore;\n\n            if (resourceStore && resourceStore.oldIdMap[oldValue] === resourceStore.getById(newValue)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //endregion\n};\n","import Model from '../../Core/data/Model.js';\nimport PartOfProject from '../data/mixin/PartOfProject.js';\nimport AssignmentModelMixin from './mixin/AssignmentModelMixin.js';\n/* <remove-on-release> */\nimport { BaseAssignmentMixin } from '../../Engine/quark/model/scheduler_basic/BaseAssignmentMixin.js';\n/* </remove-on-release> */\nimport { CoreAssignmentMixin } from '../../Engine/quark/model/scheduler_core/CoreAssignmentMixin.js';\n\nconst EngineMixin = /* <remove-on-release> */globalThis.bryntum?.useBasicEngine ? BaseAssignmentMixin : /* </remove-on-release> */CoreAssignmentMixin;\n\n/**\n * @module Scheduler/model/AssignmentModel\n */\n\n/**\n * This model represents a single assignment of a resource to an event in the scheduler, usually added to a\n * {@link Scheduler.data.AssignmentStore}.\n *\n * It is a subclass of the {@link Core.data.Model} class. Please refer to the documentation for that class to become\n * familiar with the base interface of this class.\n *\n * ## Fields and references\n *\n * An Assignment has the following fields:\n * - `id` - The id of the assignment\n * - `resourceId` - The id of the resource assigned (optionally replaced with `resource` for load)\n * - `eventId` - The id of the event to which the resource is assigned (optionally replaced with `event` for load)\n *\n * The data source for these fields can be customized by subclassing this class:\n *\n * ```javascript\n * class MyAssignment extends AssignmentModel {\n *   static get fields() {\n *       return [\n *          { name : 'resourceId', dataSource : 'linkedResource' }\n *       ];\n *   }\n * }\n * ```\n *\n * After load and project normalization, these references are accessible (assuming their respective stores are loaded):\n * - `event` - The linked event record\n * - `resource` - The linked resource record\n *\n * ## Async resolving of references\n *\n * As described above, an assignment links an event to a resource. It holds references to an event record and a resource\n * record. These references are populated async, using the calculation engine of the project that the assignment via\n * its store is a part of. Because of this asyncness, references cannot be used immediately after modifications:\n *\n * ```javascript\n * assignment.resourceId = 2;\n * // assignment.resource is not yet available\n * ```\n *\n * To make sure references are updated, wait for calculations to finish:\n *\n * ```javascript\n * assignment.resourceId = 2;\n * await assignment.project.commitAsync();\n * // assignment.resource is available\n * ```\n *\n * As an alternative, you can also use `setAsync()` to trigger calculations directly after the change:\n *\n * ```javascript\n * await assignment.setAsync({ resourceId : 2});\n * // assignment.resource is available\n * ```\n *\n * @extends Core/data/Model\n * @mixes Scheduler/model/mixin/AssignmentModelMixin\n * @uninherit Core/data/mixin/TreeNode\n */\nexport default class AssignmentModel extends AssignmentModelMixin(PartOfProject(EngineMixin.derive(Model))) {\n    // NOTE: Leave field defs at top to be picked up by jsdoc\n\n    /**\n     * Id for event to assign. Can be used as an alternative to `eventId`, but please note that after\n     * load it will be populated with the actual event and not its id. This field is not persistable.\n     * @field {Scheduler.model.EventModel} event\n     * @accepts {String|Number|Scheduler.model.EventModel}\n     * @category Common\n     */\n\n    /**\n     * Id for resource to assign to. Can be used as an alternative to `resourceId`, but please note that after\n     * load it will be populated with the actual resource and not its id. This field is not persistable.\n     * @field {Scheduler.model.ResourceModel} resource\n     * @accepts {String|Number|Scheduler.model.ResourceModel}\n     * @category Common\n     */\n\n    static get $name() {\n        return 'AssignmentModel';\n    }\n}\n\nAssignmentModel.exposeProperties();\n","import Model from '../../../Core/data/Model.js';\nimport ArrayHelper from '../../../Core/helper/ArrayHelper.js';\n\n/**\n * @module Scheduler/data/mixin/AssignmentStoreMixin\n */\n\n/**\n * This is a mixin, containing functionality related to managing assignments.\n *\n * It is consumed by the regular {@link Scheduler.data.AssignmentStore} class and Scheduler Pros counterpart.\n *\n * @mixin\n */\nexport default Target => class AssignmentStoreMixin extends Target {\n    static get $name() {\n        return 'AssignmentStoreMixin';\n    }\n\n    /**\n     * Add assignments to the store.\n     *\n     * NOTE: References (event, resource) on the assignments are determined async by a calculation engine. Thus they\n     * cannot be directly accessed after using this function.\n     *\n     * For example:\n     *\n     * ```javascript\n     * const [assignment] = assignmentStore.add({ eventId, resourceId });\n     * // assignment.event is not yet available\n     * ```\n     *\n     * To guarantee references are set up, wait for calculations for finish:\n     *\n     * ```javascript\n     * const [assignment] = assignmentStore.add({ eventId, resourceId });\n     * await assignmentStore.project.commitAsync();\n     * // assignment.event is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * Alternatively use `addAsync()` instead:\n     *\n     * ```javascript\n     * const [assignment] = await assignmentStore.addAsync({ eventId, resourceId });\n     * // assignment.event is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * @param {Scheduler.model.AssignmentModel|Scheduler.model.AssignmentModel[]|AssignmentModelConfig|AssignmentModelConfig[]} records\n     * Array of records/data or a single record/data to add to store\n     * @param {Boolean} [silent] Specify `true` to suppress events\n     * @returns {Scheduler.model.AssignmentModel[]} Added records\n     * @function add\n     * @category CRUD\n     */\n\n    /**\n     * Add assignments to the store and triggers calculations directly after. Await this function to have up to date\n     * references on the added assignments.\n     *\n     * ```javascript\n     * const [assignment] = await assignmentStore.addAsync({ eventId, resourceId });\n     * // assignment.event is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * @param {Scheduler.model.AssignmentModel|Scheduler.model.AssignmentModel[]|AssignmentModelConfig|AssignmentModelConfig[]} records\n     * Array of records/data or a single record/data to add to store\n     * @param {Boolean} [silent] Specify `true` to suppress events\n     * @returns {Scheduler.model.AssignmentModel[]} Added records\n     * @function addAsync\n     * @category CRUD\n     * @async\n     */\n\n    /**\n     * Applies a new dataset to the AssignmentStore. Use it to plug externally fetched data into the store.\n     *\n     * NOTE: References (assignments, resources) on the assignments are determined async by a calculation engine. Thus\n     * they cannot be directly accessed after assigning the new dataset.\n     *\n     * For example:\n     *\n     * ```javascript\n     * assignmentStore.data = [{ eventId, resourceId }];\n     * // assignmentStore.first.event is not yet available\n     * ```\n     *\n     * To guarantee references are available, wait for calculations for finish:\n     *\n     * ```javascript\n     * assignmentStore.data = [{ eventId, resourceId  }];\n     * await assignmentStore.project.commitAsync();\n     * // assignmentStore.first.event is available\n     * ```\n     *\n     * Alternatively use `loadDataAsync()` instead:\n     *\n     * ```javascript\n     * await assignmentStore.loadDataAsync([{ eventId, resourceId }]);\n     * // assignmentStore.first.event is available\n     * ```\n     *\n     * @member {AssignmentModelConfig[]} data\n     * @category Records\n     */\n\n    /**\n     * Applies a new dataset to the AssignmentStore and triggers calculations directly after. Use it to plug externally\n     * fetched data into the store.\n     *\n     * ```javascript\n     * await assignmentStore.loadDataAsync([{ eventId, resourceId }]);\n     * // assignmentStore.first.event is available\n     * ```\n     *\n     * @param {AssignmentModelConfig[]} data Array of AssignmentModel data objects\n     * @function loadDataAsync\n     * @category CRUD\n     * @async\n     */\n\n    static get defaultConfig() {\n        return {\n            /**\n             * CrudManager must load stores in the correct order. Lowest first.\n             * @private\n             */\n            loadPriority : 300,\n            /**\n             * CrudManager must sync stores in the correct order. Lowest first.\n             * @private\n             */\n            syncPriority : 300,\n\n            storeId : 'assignments'\n        };\n    }\n\n    add(newAssignments, ...args) {\n        newAssignments = ArrayHelper.asArray(newAssignments);\n\n        for (let i = 0; i < newAssignments.length; i++) {\n            let assignment = newAssignments[i];\n\n            if (!(assignment instanceof Model)) {\n                newAssignments[i] = assignment = this.createRecord(assignment);\n            }\n            if (!this.isSyncingDataOnLoad && this.storage.findIndex('eventResourceKey', assignment.eventResourceKey, true) !== -1) {\n                throw new Error(`Duplicate assignment Event: ${assignment.eventId} to resource: ${assignment.resourceId}`);\n            }\n            if (assignment.event?.isCreating) {\n                assignment.isCreating = true;\n            }\n        }\n        return super.add(newAssignments, ...args);\n    }\n\n    includesAssignment(eventId, resourceId) {\n        return this.storage.findIndex('eventResourceKey', `${eventId}-${resourceId}`, true) !== -1;\n    }\n\n    setStoreData(data) {\n        if (this.usesSingleAssignment) {\n            throw new Error('Data loading into AssignmentStore (multi-assignment mode) cannot be combined EventStore data containing resourceId (single-assignment mode)');\n        }\n\n        super.setStoreData(data);\n    }\n\n    //region Init & destroy\n\n    // This index fixes poor performance when you add large number of events to an event store with large number of\n    // events - if cache is missing existing records are iterated n² times.\n    // https://github.com/bryntum/support/issues/3154#issuecomment-881336588\n\n    set storage(storage) {\n        super.storage = storage;\n\n        // This allows a map based, fast lookup of assignments by their eventResourceKey.\n        // This is so that the test for duplicate assignment adding is fast.\n        this.storage.addIndex({ property : 'eventResourceKey', dependentOn : { event : true, resource : true } });\n    }\n\n    get storage() {\n        // Micro optimization to avoid expensive super call\n        return this._storage || super.storage;\n    }\n\n    //endregion\n\n    //region Stores\n\n    // To not have to do instanceof checks\n    get isAssignmentStore() {\n        return true;\n    }\n\n    //endregion\n\n    //region Recurrence\n\n    /**\n     * Returns a \"fake\" assignment used to identify a certain occurrence of a recurring event.\n     * If passed the original event, it returns `originalAssignment`.\n     * @param {Scheduler.model.AssignmentModel} originalAssignment\n     * @param {Scheduler.model.EventModel} occurrence\n     * @returns {Object} Temporary assignment\n     * @internal\n     */\n    getOccurrence(originalAssignment, occurrence) {\n        // Pass along the original assignment for non occurrence related calls\n        if (!originalAssignment || !occurrence?.isOccurrence) {\n            return originalAssignment;\n        }\n\n        // Not for saving chars, needed in fn below\n        const me = this;\n\n        return {\n            id                     : `${occurrence.id}:a${originalAssignment.id}`,\n            event                  : occurrence,\n            resource               : originalAssignment.resource,\n            eventId                : occurrence.id,\n            resourceId             : originalAssignment.resource.id,\n            isAssignment           : true,\n            // This field is required to distinguish this fake assignment when event is being removed from UI\n            isOccurrenceAssignment : true,\n            // Not being an actual record, instanceMeta is stored on the store instead\n            instanceMeta(instanceOrId) {\n                return me.occurrenceInstanceMeta(this, instanceOrId);\n            }\n        };\n    }\n\n    // Per fake assignment instance meta, stored on store since fakes are always generated on demand\n    occurrenceInstanceMeta(occurrenceAssignment, instanceOrId) {\n        const\n            me         = this,\n            instanceId = instanceOrId.id || instanceOrId,\n            { id }     = occurrenceAssignment;\n\n        let { occurrenceMeta } = me;\n\n        if (!occurrenceMeta) {\n            occurrenceMeta = me.occurrenceMeta = {};\n        }\n\n        if (!occurrenceMeta[id]) {\n            occurrenceMeta[id] = {};\n        }\n\n        return occurrenceMeta[id][instanceId] || (occurrenceMeta[id][instanceId] = {});\n    }\n\n    //endregion\n\n    //region Mapping\n\n    /**\n     * Maps over event assignments.\n     *\n     * @param {Scheduler.model.EventModel} event\n     * @param {Function} [fn]\n     * @param {Function} [filterFn]\n     * @returns {Scheduler.model.EventModel[]|Array}\n     * @category Assignments\n     */\n    mapAssignmentsForEvent(event, fn, filterFn) {\n        event = this.eventStore.getById(event);\n\n        const\n            fnSet           = Boolean(fn),\n            filterFnSet     = Boolean(filterFn);\n\n        if (fnSet || filterFnSet) {\n            return event.assignments.reduce((result, assignment) => {\n                const mapResult = fnSet ? fn(assignment) : assignment;\n\n                if (!filterFnSet || filterFn(mapResult)) {\n                    result.push(mapResult);\n                }\n\n                return result;\n            }, []);\n        }\n\n        return event.assignments;\n    }\n\n    /**\n     * Maps over resource assignments.\n     *\n     * @param {Scheduler.model.ResourceModel|Number|String} resource\n     * @param {Function} [fn]\n     * @param {Function} [filterFn]\n     * @returns {Scheduler.model.ResourceModel[]|Array}\n     * @category Assignments\n     */\n    mapAssignmentsForResource(resource, fn, filterFn) {\n        resource = this.resourceStore.getById(resource);\n\n        const\n            fnSet           = Boolean(fn),\n            filterFnSet     = Boolean(filterFn);\n\n        if (fnSet || filterFnSet) {\n            return resource.assignments.reduce((result, assignment) => {\n                const mapResult = fnSet ? fn(assignment) : assignment;\n\n                if (!filterFnSet || filterFn(mapResult)) {\n                    result.push(mapResult);\n                }\n\n                return result;\n            }, []);\n        }\n\n        return resource.assignments;\n    }\n\n    /**\n     * Returns all assignments for a given event.\n     *\n     * @param {Scheduler.model.TimeSpan} event\n     * @returns {Scheduler.model.AssignmentModel[]}\n     * @category Assignments\n     */\n    getAssignmentsForEvent(event) {\n        return event.assignments;\n    }\n\n    /**\n     * Removes all assignments for given event\n     *\n     * @param {Scheduler.model.TimeSpan} event\n     * @category Assignments\n     */\n    removeAssignmentsForEvent(event) {\n        return this.remove(event.assignments);\n    }\n\n    /**\n     * Returns all assignments for a given resource.\n     *\n     * @param {Scheduler.model.ResourceModel} resource\n     * @returns {Scheduler.model.AssignmentModel[]}\n     * @category Assignments\n     */\n    getAssignmentsForResource(resource) {\n        resource = this.resourceStore.getById(resource);\n        return resource.assignments;\n    }\n\n    /**\n     * Removes all assignments for given resource\n     *\n     * @param {Scheduler.model.ResourceModel|*} resource\n     * @category Assignments\n     */\n    removeAssignmentsForResource(resource) {\n        this.remove(this.getAssignmentsForResource(resource));\n    }\n\n    /**\n     * Returns all resources assigned to an event.\n     *\n     * @param {Scheduler.model.EventModel} event\n     * @returns {Scheduler.model.ResourceModel[]}\n     * @category Assignments\n     */\n    getResourcesForEvent(event) {\n        return event.resources;\n    }\n\n    /**\n     * Returns all events assigned to a resource\n     *\n     * @param {Scheduler.model.ResourceModel|String|Number} resource\n     * @returns {Scheduler.model.TimeSpan[]}\n     * @category Assignments\n     */\n    getEventsForResource(resource) {\n        resource = this.resourceStore.getById(resource);\n\n        return resource?.events;\n    }\n\n    /**\n     * Creates and adds assignment record(s) for a given event and resource(s).\n     *\n     * @param {Scheduler.model.TimeSpan} event\n     * @param {Scheduler.model.ResourceModel|Scheduler.model.ResourceModel[]} resources The resource(s) to assign to the event\n     * @param {Function} [assignmentSetupFn] A hook function which takes an assignment as its argument and must return an assignment.\n     * @param {Boolean} [removeExistingAssignments] `true` to remove assignments for other resources\n     * @returns {Scheduler.model.AssignmentModel[]} An array with the created assignment(s)\n     * @category Assign\n     */\n    assignEventToResource(event, resources, assignmentSetupFn = null, removeExistingAssignments = false) {\n        const\n            me       = this,\n            toRemove = removeExistingAssignments ? new Set(event.assignments) : null;\n\n        resources = ArrayHelper.asArray(resources).map(r => r.$original ?? r);\n\n        if (me.eventStore?.usesSingleAssignment) {\n            // Use same code path as other single assignments if already assigned\n            if (event.assignments?.length) {\n                if (!me.isEventAssignedToResource(event, resources[0])) {\n                    event.resource = resources[0];\n                }\n                return [];\n            }\n            // otherwise - set \"resourceId\" and proceed to assignment creation\n            else {\n                event.resourceId = resources[0].id;\n            }\n        }\n\n        let newAssignments = [];\n\n        me.suspendAutoCommit();\n\n        // Assign\n        resources.forEach(resource => {\n            const existingAssignment = me.getAssignmentForEventAndResource(event, resource);\n            if (!existingAssignment) {\n                const assignment = {\n                    event,\n                    resource\n                };\n\n                newAssignments.push(assignmentSetupFn?.(assignment) ?? assignment);\n            }\n            else if (removeExistingAssignments) {\n                toRemove.delete(existingAssignment);\n            }\n        });\n\n        newAssignments = me.add(newAssignments);\n\n        if (removeExistingAssignments) {\n            me.remove(Array.from(toRemove));\n        }\n\n        // If true, will trigger a commit\n        me.resumeAutoCommit();\n\n        return newAssignments;\n    }\n\n    /**\n     * Removes assignment record for a given event and resource.\n     *\n     * @param {Scheduler.model.TimeSpan|String|Number} event\n     * @param {Scheduler.model.ResourceModel|String|Number} [resources] The resource to unassign the event from. If omitted, all resources of the events will be unassigned\n     * @returns {Scheduler.model.AssignmentModel|Scheduler.model.AssignmentModel[]}\n     * @category Assign\n     */\n    unassignEventFromResource(event, resources) {\n        const\n            me = this,\n            assignmentsToRemove = [];\n\n        if (!resources) {\n            return me.removeAssignmentsForEvent(event);\n        }\n\n        resources = ArrayHelper.asArray(resources);\n\n        for (let i = 0; i < resources.length; i++) {\n            if (me.isEventAssignedToResource(event, resources[i])) {\n                assignmentsToRemove.push(me.getAssignmentForEventAndResource(event, resources[i]));\n            }\n        }\n\n        return me.remove(assignmentsToRemove);\n    }\n\n    /**\n     * Checks whether an event is assigned to a resource.\n     *\n     * @param {Scheduler.model.EventModel|String|Number} event Event record or id\n     * @param {Scheduler.model.ResourceModel|String|Number} resource Resource record or id\n     * @returns {Boolean}\n     * @category Assignments\n     */\n    isEventAssignedToResource(event, resource) {\n        return Boolean(this.getAssignmentForEventAndResource(event, resource));\n    }\n\n    /**\n     * Returns an assignment record for a given event and resource\n     *\n     * @param {Scheduler.model.EventModel|String|Number} event The event or its id\n     * @param {Scheduler.model.ResourceModel|String|Number} resource The resource or its id\n     * @returns {Scheduler.model.AssignmentModel}\n     * @category Assignments\n     */\n    getAssignmentForEventAndResource(event, resource) {\n        let assignments;\n\n        // Note: In order to not evaluate conditions which do not have to be evaluated each condition is assigned to a\n        // variable within the condition.\n        if (\n            !(event = this.eventStore.getById(event)) ||\n            !(assignments = event.assignments) ||\n            // Also note that resources are looked for in the master store if chained, to handle dragging between\n            // schedulers using chained versions of the same resource store. Needed since assignmentStore is shared and\n            // might point to wrong resourceStore (can only point to one)\n            !(resource = this.resourceStore.$master.getById(resource))\n        ) {\n            return null;\n        }\n\n        return this.getOccurrence(assignments.find(a => a.resource?.$original === resource.$original), event);\n    }\n\n    //endregion\n};\n","import AjaxStore from '../../Core/data/AjaxStore.js';\nimport AssignmentModel from '../model/AssignmentModel.js';\nimport PartOfProject from './mixin/PartOfProject.js';\nimport PartOfBaseProject from './mixin/PartOfBaseProject.js';\nimport AssignmentStoreMixin from './mixin/AssignmentStoreMixin.js';\n/* <remove-on-release> */\nimport { ChronoAssignmentStoreMixin } from '../../Engine/quark/store/ChronoAssignmentStoreMixin.js';\n/* </remove-on-release> */\nimport { CoreAssignmentStoreMixin } from '../../Engine/quark/store/CoreAssignmentStoreMixin.js';\n\nconst EngineMixin = /* <remove-on-release> */globalThis.bryntum?.useBasicEngine ? PartOfBaseProject(ChronoAssignmentStoreMixin.derive(AjaxStore)) : /* </remove-on-release> */PartOfProject(CoreAssignmentStoreMixin.derive(AjaxStore));\n\n/**\n * @module Scheduler/data/AssignmentStore\n */\n\n/**\n * A store representing a collection of assignments between events in the {@link Scheduler.data.EventStore} and resources\n * in the {@link Scheduler.data.ResourceStore}.\n *\n * This store only accepts a model class inheriting from {@link Scheduler.model.AssignmentModel}.\n *\n * An AssignmentStore is usually connected to a project, which binds it to other related stores (EventStore,\n * ResourceStore and DependencyStore). The project also handles references (event, resource) to related records for the\n * records in the store.\n *\n * Resolving the references happens async, records are not guaranteed to have up to date references until calculations\n * are finished. To be certain that references are resolved, call `await project.commitAsync()` after store actions. Or\n * use one of the `xxAsync` functions, such as `loadDataAsync()`.\n *\n * Using `commitAsync()`:\n *\n * ```javascript\n * assignmentStore.data = [{ eventId, resourceId }, ...];\n *\n * // references (event, resource) not resolved yet\n *\n * await assignmentStore.project.commitAsync();\n *\n * // now they are\n * ```\n *\n * Using `loadDataAsync()`:\n *\n * ```javascript\n * await assignmentStore.loadDataAsync([{ eventId, resourceId }, ...]);\n *\n * // references (event, resource) are resolved\n * ```\n *\n * @mixes Scheduler/data/mixin/AssignmentStoreMixin\n * @mixes Scheduler/data/mixin/PartOfProject\n * @extends Core/data/AjaxStore\n */\nexport default class AssignmentStore extends AssignmentStoreMixin(EngineMixin) {\n\n    static $name = 'AssignmentStore';\n\n    static get defaultConfig() {\n        return {\n            modelClass : AssignmentModel\n        };\n    }\n\n}\n","import DateHelper from '../../Core/helper/DateHelper.js';\nimport Model from '../../Core/data/Model.js';\nimport Duration from '../../Core/data/Duration.js';\n\n/**\n * @module Scheduler/model/DependencyBaseModel\n */\n\nconst canonicalDependencyTypes = [\n    'SS',\n    'SF',\n    'FS',\n    'FF'\n];\n\n/**\n * Base class used for both Scheduler and Gantt. Not intended to be used directly\n *\n * @extends Core/data/Model\n */\nexport default class DependencyBaseModel extends Model {\n    static get $name() {\n        return 'DependencyBaseModel';\n    }\n\n    /**\n     * Set value for the specified field(s), triggering engine calculations immediately. See\n     * {@link Core.data.Model#function-set Model#set()} for arguments.\n     **\n     * ```javascript\n     * dependency.set('from', 2);\n     * // dependency.fromEvent is not yet up to date\n     *\n     * await dependency.setAsync('from', 2);\n     * // dependency.fromEvent is up to date\n     * ```\n     *\n     * @param {String|Object} field The field to set value for, or an object with multiple values to set in one call\n     * @param {*} value Value to set\n     * @param {Boolean} [silent=false] Set to true to not trigger events\n     * automatically.\n     * @function setAsync\n     * @category Editing\n     * @async\n     */\n\n    //region Fields\n\n    /**\n     * An enumerable object, containing names for the dependency types integer constants.\n     * - 0 StartToStart\n     * - 1 StartToEnd\n     * - 2 EndToStart\n     * - 3 EndToEnd\n     * @property {Object}\n     * @readonly\n     * @category Dependency\n     */\n    static get Type() {\n        return {\n            StartToStart : 0,\n            StartToEnd   : 1,\n            EndToStart   : 2,\n            EndToEnd     : 3\n        };\n    }\n\n    static get fields() {\n        return [\n            // 3 mandatory fields\n\n            /**\n             * From event, id of source event\n             * @field {String|Number} from\n             * @category Dependency\n             */\n            { name : 'from' },\n\n            /**\n             * To event, id of target event\n             * @field {String|Number} to\n             * @category Dependency\n             */\n            { name : 'to' },\n\n            /**\n             * Dependency type, see static property {@link #property-Type-static}\n             * @field {Number} type=2\n             * @category Dependency\n             */\n            { name : 'type', type : 'int', defaultValue : 2 },\n\n            /**\n             * CSS class to apply to lines drawn for the dependency\n             * @field {String} cls\n             * @category Styling\n             */\n            { name : 'cls', defaultValue : '' },\n\n            /**\n             * Bidirectional, drawn with arrows in both directions\n             * @field {Boolean} bidirectional\n             * @category Dependency\n             */\n            { name : 'bidirectional', type : 'boolean' },\n\n            /**\n             * Start side on source (top, left, bottom, right)\n             * @field {'top'|'left'|'bottom'|'right'} fromSide\n             * @category Dependency\n             */\n            { name : 'fromSide', type : 'string' },\n\n            /**\n             * End side on target (top, left, bottom, right)\n             * @field {'top'|'left'|'bottom'|'right'} toSide\n             * @category Dependency\n             */\n            { name : 'toSide', type : 'string' },\n\n            /**\n             * The magnitude of this dependency's lag (the number of units).\n             * @field {Number} lag\n             * @category Dependency\n             */\n            { name : 'lag', type : 'number', allowNull : true, defaultValue : 0 },\n\n            /**\n             * The units of this dependency's lag, defaults to \"d\" (days). Valid values are:\n             *\n             * - \"ms\" (milliseconds)\n             * - \"s\" (seconds)\n             * - \"m\" (minutes)\n             * - \"h\" (hours)\n             * - \"d\" (days)\n             * - \"w\" (weeks)\n             * - \"M\" (months)\n             * - \"y\" (years)\n             *\n             * This field is readonly after creation, to change `lagUnit` use {@link #function-setLag setLag()}.\n             * @field {'ms'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} lagUnit\n             * @category Dependency\n             * @readonly\n             */\n            {\n                name         : 'lagUnit',\n                type         : 'string',\n                defaultValue : 'd'\n            },\n\n            { name : 'highlighted', persist : false, internal : true }\n        ];\n    }\n\n    // fromEvent/toEvent defined in CoreDependencyMixin in engine\n\n    /**\n     * Gets/sets the source event of the dependency.\n     *\n     * Accepts multiple formats but always returns an {@link Scheduler.model.EventModel}.\n     *\n     * **NOTE:** This is not a proper field but rather an alias, it will be serialized but cannot be remapped. If you\n     * need to remap, consider using {@link #field-from} instead.\n     *\n     * @field {Scheduler.model.EventModel} fromEvent\n     * @accepts {String|Number|Scheduler.model.EventModel}\n     * @category Dependency\n     */\n\n    /**\n     * Gets/sets the target event of the dependency.\n     *\n     * Accepts multiple formats but always returns an {@link Scheduler.model.EventModel}.\n     *\n     * **NOTE:** This is not a proper field but rather an alias, it will be serialized but cannot be remapped. If you\n     * need to remap, consider using {@link #field-to} instead.\n     *\n     * @field {Scheduler.model.EventModel} toEvent\n     * @accepts {String|Number|Scheduler.model.EventModel}\n     * @category Dependency\n     */\n\n    //endregion\n\n    //region Init\n\n    construct(data) {\n        const\n            from = data[this.fieldMap.from.dataSource],\n            to   = data[this.fieldMap.to.dataSource];\n\n        // Engine expects fromEvent and toEvent, not from and to. We need to support both\n        if (from != null) {\n            data.fromEvent = from;\n        }\n\n        if (to != null) {\n            data.toEvent = to;\n        }\n\n        super.construct(...arguments);\n    }\n\n    //endregion\n\n    get eventStore() {\n        return this.eventStore || this.unjoinedStores[0]?.eventStore;\n    }\n\n    set from(value) {\n        const { fromEvent } = this;\n\n        // When assigning a new id to an event, it will update the eventId of the assignment. But the assignments\n        // event is still the same so we need to announce here\n        if (fromEvent?.isModel && fromEvent.id === value) {\n            this.set('from', value);\n        }\n        else {\n            this.fromEvent = value;\n        }\n    }\n\n    get from() {\n        return this.get('from');\n    }\n\n    set to(value) {\n        const { toEvent } = this;\n\n        // When assigning a new id to an event, it will update the eventId of the assignment. But the assignments\n        // event is still the same so we need to announce here\n        if (toEvent?.isModel && toEvent.id === value) {\n            this.set('to', value);\n        }\n        else {\n            this.toEvent = value;\n        }\n    }\n\n    get to() {\n        return this.get('to');\n    }\n\n    /**\n     * Alias to dependency type, but when set resets {@link #field-fromSide} & {@link #field-toSide} to null as well.\n     *\n     * @property {Number}\n     * @category Dependency\n     */\n    get hardType() {\n        return this.getHardType();\n    }\n\n    set hardType(type) {\n        this.setHardType(type);\n    }\n\n    /**\n     * Returns dependency hard type, see {@link #property-hardType}.\n     *\n     * @returns {Number}\n     * @category Dependency\n     */\n    getHardType() {\n        return this.get('type');\n    }\n\n    /**\n     * Sets dependency {@link #field-type} and resets {@link #field-fromSide} and {@link #field-toSide} to null.\n     *\n     * @param {Number} type\n     * @category Dependency\n     */\n    setHardType(type) {\n        let result;\n\n        if (type !== this.hardType) {\n            result = this.set({\n                type,\n                fromSide : null,\n                toSide   : null\n            });\n        }\n\n        return result;\n    }\n\n    get lag() {\n        return this.get('lag');\n    }\n\n    set lag(lag) {\n        this.setLag(lag);\n    }\n\n    /**\n     * Sets lag and lagUnit in one go. Only allowed way to change lagUnit, the lagUnit field is readonly after creation\n     * @param {Number|String|Object} lag The lag value. May be just a numeric magnitude, or a full string descriptor eg '1d'\n     * @param {'ms'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} [lagUnit] Unit for numeric lag value, see\n     * {@link #field-lagUnit} for valid values\n     * @category Dependency\n     */\n    setLag(lag, lagUnit = this.lagUnit) {\n        // Either they're only setting the magnitude\n        // or, if it's a string, parse the full duration.\n        if (arguments.length === 1) {\n            if (typeof lag === 'number') {\n                this.lag = lag;\n            }\n            else {\n                //<debug>\n                if (typeof lag !== 'string') {\n                    throw new Error('Depenedency#setLag accepts either numeric magnitude, or a duration string');\n                }\n                //</debug>\n                lag = DateHelper.parseDuration(lag);\n                this.set({\n                    lag     : lag.magnitude,\n                    lagUnit : lag.unit\n                });\n            }\n            return;\n        }\n\n        // Must be a number\n        lag = parseFloat(lag);\n\n        this.set({\n            lag,\n            lagUnit\n        });\n    }\n\n    getLag() {\n        if (this.lag) {\n            return `${this.lag < 0 ? '-' : '+'}${Math.abs(this.lag)}${DateHelper.getShortNameOfUnit(this.lagUnit)}`;\n        }\n        return '';\n    }\n\n    /**\n     * Property which encapsulates the lag's magnitude and units. An object which contains two properties:\n     * @property {Core.data.Duration}\n     * @property {Number} fullLag.magnitude The magnitude of the duration\n     * @property {'ms'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} fullLag.unit The unit in which the duration is measured, eg\n     * `'d'` for days\n     * @category Dependency\n     */\n    get fullLag() {\n        return new Duration({\n            unit      : this.lagUnit,\n            magnitude : this.lag\n        });\n    }\n\n    set fullLag(lag) {\n        if (typeof lag === 'string') {\n            this.setLag(lag);\n        }\n        else {\n            this.setLag(lag.magnitude, lag.unit);\n        }\n    }\n\n    /**\n     * Returns true if the linked events have been persisted (e.g. neither of them are 'phantoms')\n     *\n     * @property {Boolean}\n     * @readonly\n     * @category Editing\n     */\n    get isPersistable() {\n        const\n            me = this,\n            { stores, unjoinedStores } = me,\n            store = stores[0];\n\n        let result;\n\n        if (store) {\n            const\n                { fromEvent, toEvent } = me,\n                crudManager            = store.crudManager;\n\n            // if crud manager is used it can deal with phantom source/target since it persists all records in one batch\n            // if no crud manager used we have to wait till source/target are persisted\n            result = fromEvent && (crudManager || !fromEvent.hasGeneratedId) && toEvent && (crudManager || !toEvent.hasGeneratedId);\n        }\n        else {\n            result = Boolean(unjoinedStores[0]);\n        }\n\n        return result && super.isPersistable;\n    }\n\n    getDateRange() {\n        const { fromEvent, toEvent } = this;\n\n        if (fromEvent?.isScheduled && toEvent?.isScheduled) {\n            const Type = DependencyBaseModel.Type;\n\n            let sourceDate,\n                targetDate;\n\n            switch (this.type) {\n                case Type.StartToStart:\n                    sourceDate = fromEvent.startDateMS;\n                    targetDate = toEvent.startDateMS;\n                    break;\n\n                case Type.StartToEnd:\n                    sourceDate = fromEvent.startDateMS;\n                    targetDate = toEvent.endDateMS;\n                    break;\n\n                case Type.EndToEnd:\n                    sourceDate = fromEvent.endDateMS;\n                    targetDate = toEvent.endDateMS;\n                    break;\n\n                case Type.EndToStart:\n                    sourceDate = fromEvent.endDateMS;\n                    targetDate = toEvent.startDateMS;\n                    break;\n\n                default:\n                    throw new Error('Invalid dependency type: ' + this.type);\n            }\n\n            return {\n                start : Math.min(sourceDate, targetDate),\n                end   : Math.max(sourceDate, targetDate)\n            };\n        }\n\n        return null;\n    }\n\n    /**\n     * Applies given CSS class to dependency, the value doesn't persist\n     *\n     * @param {String} cls\n     * @category Dependency\n     */\n    highlight(cls) {\n        const classes = this.highlighted?.split(' ') ?? [];\n\n        if (!classes.includes(cls)) {\n            this.highlighted = classes.concat(cls).join(' ');\n        }\n    }\n\n    /**\n     * Removes given CSS class from dependency if applied, the value doesn't persist\n     *\n     * @param {String} cls\n     * @category Dependency\n     */\n    unhighlight(cls) {\n        const { highlighted } = this;\n\n        if (highlighted) {\n            const\n                classes = highlighted.split(' '),\n                index   = classes.indexOf(cls);\n\n            if (index >= 0) {\n                classes.splice(index, 1);\n                this.highlighted = classes.join(' ');\n            }\n        }\n    }\n\n    /**\n     * Checks if the given CSS class is applied to dependency.\n     *\n     * @param {String} cls\n     * @returns {Boolean}\n     * @category Dependency\n     */\n    isHighlightedWith(cls) {\n        return this.highlighted && this.highlighted.split(' ').includes(cls);\n    }\n\n    getConnectorString(raw) {\n        const rawValue = canonicalDependencyTypes[this.type];\n\n        if (raw) {\n            return rawValue;\n        }\n\n        // FS => empty string; it's the default\n        if (this.type === DependencyBaseModel.Type.EndToStart) {\n            return '';\n        }\n\n        return rawValue;\n    }\n\n    // getConnectorStringFromType(type, raw) {\n    //     const rawValue = canonicalDependencyTypes[type];\n    //\n    //     if (raw) {\n    //         return rawValue;\n    //     }\n    //\n    //     // FS => empty string; it's the default\n    //     if (type === DependencyBaseModel.Type.EndToStart) {\n    //         return '';\n    //     }\n    //\n    //     const locale = LocaleManager.locale;\n    //\n    //     // See if there is a local version of SS, SF or FF\n    //     if (locale) {\n    //         const localized = locale.Scheduler && locale.Scheduler[rawValue];\n    //         if (localized) {\n    //             return localized;\n    //         }\n    //     }\n    //\n    //     return rawValue;\n    // }\n\n    // getConnectorString(raw) {\n    //     return this.getConnectorStringFromType(this.type);\n    // }\n\n    // * getConnectorStringGenerator(raw) {\n    //     return this.getConnectorStringFromType(yield this.$.type);\n    // }\n\n    toString() {\n        return `${this.from}${this.getConnectorString()}${this.getLag()}`;\n    }\n\n    /**\n     * Returns `true` if the dependency is valid. It is considered valid if it has a valid type and both from and to\n     * events are set and pointing to different events.\n     *\n     * @property {Boolean}\n     * @typings ignore\n     * @category Editing\n     */\n    get isValid() {\n        const { fromEvent, toEvent, type } = this;\n\n        return typeof type === 'number' && fromEvent && toEvent && fromEvent !== toEvent;\n    }\n\n    get fromEventName() {\n        return this.fromEvent?.name || '';\n    }\n\n    get toEventName() {\n        return this.toEvent?.name || '';\n    }\n\n    //region STM hooks\n\n    shouldRecordFieldChange(fieldName, oldValue, newValue) {\n        if (!super.shouldRecordFieldChange(fieldName, oldValue, newValue)) {\n            return false;\n        }\n\n        if (fieldName === 'from' || fieldName === 'to' || fieldName === 'fromEvent' || fieldName === 'toEvent') {\n\n            const eventStore = this.project?.eventStore;\n\n            if (eventStore && eventStore.oldIdMap[oldValue] === eventStore.getById(newValue)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //endregion\n}\n\nDependencyBaseModel.exposeProperties();\n","import DependencyBaseModel from './DependencyBaseModel.js';\nimport PartOfProject from '../data/mixin/PartOfProject.js';\n/* <remove-on-release> */\nimport { BaseDependencyMixin } from '../../Engine/quark/model/scheduler_basic/BaseDependencyMixin.js';\n/* </remove-on-release> */\nimport { CoreDependencyMixin } from '../../Engine/quark/model/scheduler_core/CoreDependencyMixin.js';\n\nconst EngineMixin = /* <remove-on-release> */globalThis.bryntum?.useBasicEngine ? BaseDependencyMixin : /* </remove-on-release> */CoreDependencyMixin;\n\n/**\n * @module Scheduler/model/DependencyModel\n */\n\n/**\n * This model represents a dependency between two events, usually added to a {@link Scheduler.data.DependencyStore}.\n *\n * It is a subclass of the {@link Scheduler.model.DependencyBaseModel} class, which in its turn subclasses\n * {@link Core.data.Model}. Please refer to documentation of those classes to become familiar with the base interface of\n * this class.\n *\n * ## Fields and references\n *\n * A Dependency has a few predefined fields, see Fields below.  The name of any fields data source can be customized in\n * the subclass, see the example below. Please also refer to {@link Core.data.Model} for details.\n *\n * ```javascript\n * class MyDependency extends DependencyModel {\n *   static get fields() {\n *     return [\n *       { name: 'to', dataSource: 'targetId' },\n *       { name: 'from', dataSource: 'sourceId' }\n *     ]);\n *   }\n * }\n * ```\n *\n * After load and project normalization, these references are accessible (assuming their respective stores are loaded):\n * - `fromEvent` - The event on the start side of the dependency\n * - `toEvent` - The event on the end side of the dependency\n *\n * ## Async resolving of references\n *\n * As described above, a dependency has links to events. These references are populated async, using the calculation\n * engine of the project that the resource via its store is a part of. Because of this asyncness, references cannot be\n * used immediately after modifications:\n *\n * ```javascript\n * dependency.from = 2;\n * // dependency.fromEvent is not yet up to date\n * ```\n *\n * To make sure references are updated, wait for calculations to finish:\n *\n * ```javascript\n * dependency.from = 2;\n * await dependency.project.commitAsync();\n * // dependency.fromEvent is up to date\n * ```\n *\n * As an alternative, you can also use `setAsync()` to trigger calculations directly after the change:\n *\n * ```javascript\n * await dependency.setAsync({ from : 2});\n * // dependency.fromEvent is up to date\n * ```\n *\n * @extends Scheduler/model/DependencyBaseModel\n * @uninherit Core/data/mixin/TreeNode\n */\nexport default class DependencyModel extends PartOfProject(EngineMixin.derive(DependencyBaseModel)) {\n    static get $name() {\n        return 'DependencyModel';\n    }\n\n    // Determines the type of dependency based on fromSide and toSide\n    getTypeFromSides(fromSide, toSide, rtl) {\n        const\n            types     = DependencyBaseModel.Type,\n            startSide = rtl ? 'right' : 'left',\n            endSide   = rtl ? 'left' : 'right';\n\n        if (fromSide === startSide) {\n            return (toSide === startSide) ? types.StartToStart : types.StartToEnd;\n        }\n\n        return (toSide === endSide) ? types.EndToEnd : types.EndToStart;\n    }\n}\n\nDependencyModel.exposeProperties();\n","import ArrayHelper from '../../../Core/helper/ArrayHelper.js';\nimport Model from '../../../Core/data/Model.js';\n\n/**\n * @module Scheduler/data/mixin/DependencyStoreMixin\n */\n\n/**\n * This is a mixin, containing functionality related to managing dependencies.\n *\n * It is consumed by the regular {@link Scheduler.data.DependencyStore} class and Scheduler Pros counterpart.\n *\n * @mixin\n */\nexport default Target => class DependencyStoreMixin extends Target {\n    static get $name() {\n        return 'DependencyStoreMixin';\n    }\n\n    /**\n     * Add dependencies to the store.\n     *\n     * NOTE: References (fromEvent, toEvent) on the dependencies are determined async by a calculation engine. Thus they\n     * cannot be directly accessed after using this function.\n     *\n     * For example:\n     *\n     * ```javascript\n     * const [dependency] = dependencyStore.add({ from, to });\n     * // dependency.fromEvent is not yet available\n     * ```\n     *\n     * To guarantee references are set up, wait for calculations for finish:\n     *\n     * ```javascript\n     * const [dependency] = dependencyStore.add({ from, to });\n     * await dependencyStore.project.commitAsync();\n     * // dependency.fromEvent is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * Alternatively use `addAsync()` instead:\n     *\n     * ```javascript\n     * const [dependency] = await dependencyStore.addAsync({ from, to });\n     * // dependency.fromEvent is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * @param {Scheduler.model.DependencyModel|Scheduler.model.DependencyModel[]|DependencyModelConfig|DependencyModelConfig[]} records\n     * Array of records/data or a single record/data to add to store\n     * @param {Boolean} [silent] Specify `true` to suppress events\n     * @returns {Scheduler.model.DependencyModel[]} Added records\n     * @function add\n     * @category CRUD\n     */\n\n    /**\n     * Add dependencies to the store and triggers calculations directly after. Await this function to have up to date\n     * references on the added dependencies.\n     *\n     * ```javascript\n     * const [dependency] = await dependencyStore.addAsync({ from, to });\n     * // dependency.fromEvent is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * @param {Scheduler.model.DependencyModel|Scheduler.model.DependencyModel[]|DependencyModelConfig|DependencyModelConfig[]} records\n     * Array of records/data or a single record/data to add to store\n     * @param {Boolean} [silent] Specify `true` to suppress events\n     * @returns {Scheduler.model.DependencyModel[]} Added records\n     * @function addAsync\n     * @category CRUD\n     * @async\n     */\n\n    /**\n     * Applies a new dataset to the DependencyStore. Use it to plug externally fetched data into the store.\n     *\n     * NOTE: References (fromEvent, toEvent) on the dependencies are determined async by a calculation engine. Thus\n     * they cannot be directly accessed after assigning the new dataset.\n     *\n     * For example:\n     *\n     * ```javascript\n     * dependencyStore.data = [{ from, to }];\n     * // dependencyStore.first.fromEvent is not yet available\n     * ```\n     *\n     * To guarantee references are available, wait for calculations for finish:\n     *\n     * ```javascript\n     * dependencyStore.data = [{ from, to }];\n     * await dependencyStore.project.commitAsync();\n     * // dependencyStore.first.fromEvent is available\n     * ```\n     *\n     * Alternatively use `loadDataAsync()` instead:\n     *\n     * ```javascript\n     * await dependencyStore.loadDataAsync([{ from, to }]);\n     * // dependencyStore.first.fromEvent is available\n     * ```\n     *\n     * @member {DependencyModelConfig[]} data\n     * @category Records\n     */\n\n    /**\n     * Applies a new dataset to the DependencyStore and triggers calculations directly after. Use it to plug externally\n     * fetched data into the store.\n     *\n     * ```javascript\n     * await dependencyStore.loadDataAsync([{ from, to }]);\n     * // dependencyStore.first.fromEvent is available\n     * ```\n     *\n     * @param {DependencyModelConfig[]} data Array of DependencyModel data objects\n     * @function loadDataAsync\n     * @category CRUD\n     * @async\n     */\n\n    static get defaultConfig() {\n        return {\n            /**\n             * CrudManager must load stores in the correct order. Lowest first.\n             * @private\n             */\n            loadPriority : 400,\n            /**\n             * CrudManager must sync stores in the correct order. Lowest first.\n             * @private\n             */\n            syncPriority : 400,\n\n            storeId : 'dependencies'\n        };\n    }\n\n    // <remove-on-release>\n    // TODO: document\n    // </remove-on-release>\n    reduceEventDependencies(event, reduceFn, result, flat = true, depsGetterFn) {\n        depsGetterFn = depsGetterFn || (event => this.getEventDependencies(event));\n\n        event = ArrayHelper.asArray(event);\n\n        event.reduce((result, event) => {\n            if (event.children && !flat) {\n                event.traverse(evt => {\n                    result = depsGetterFn(evt).reduce(reduceFn, result);\n                });\n            }\n            else {\n                result = depsGetterFn(event).reduce(reduceFn, result);\n            }\n        }, result);\n\n        return result;\n    }\n\n    // <remove-on-release>\n    // TODO: document\n    // </remove-on-release>\n    mapEventDependencies(event, fn, filterFn, flat, depsGetterFn) {\n        return this.reduceEventDependencies(event, (result, dependency) => {\n            filterFn(dependency) && result.push(dependency);\n            return result;\n        }, [], flat, depsGetterFn);\n    }\n\n    // <remove-on-release>\n    // TODO: document\n    // </remove-on-release>\n    mapEventPredecessors(event, fn, filterFn, flat) {\n        return this.reduceEventPredecessors(event, (result, dependency) => {\n            filterFn(dependency) && result.push(dependency);\n            return result;\n        }, [], flat);\n    }\n\n    // <remove-on-release>\n    // TODO: document\n    // </remove-on-release>\n    mapEventSuccessors(event, fn, filterFn, flat) {\n        return this.reduceEventSuccessors(event, (result, dependency) => {\n            filterFn(dependency) && result.push(dependency);\n            return result;\n        }, [], flat);\n    }\n\n    /**\n     * Returns all dependencies for a certain event (both incoming and outgoing)\n     *\n     * @param {Scheduler.model.EventModel} event\n     * @returns {Scheduler.model.DependencyModel[]}\n     */\n    getEventDependencies(event) {\n        return [].concat(event.predecessors || [], event.successors || []);\n    }\n\n    // <remove-on-release>\n    // TODO: document\n    // </remove-on-release>\n    removeEventDependencies(event) {\n        this.remove(this.getEventDependencies(event));\n    }\n\n    // <remove-on-release>\n    // TODO: document\n    // </remove-on-release>\n    removeEventPredecessors(event) {\n        this.remove(event.predecessors);\n    }\n\n    // <remove-on-release>\n    // TODO: document\n    // </remove-on-release>\n    removeEventSuccessors(event, flat) {\n        this.remove(event.successors);\n    }\n\n    getBySourceTargetId(key) {\n        // <remove-on-release>\n        // TODO: in original code this uses a keymap\n        // </remove-on-release>\n        return this.records.find(r =>\n            key == this.constructor.makeDependencySourceTargetCompositeKey(r.from, r.to)\n        );\n    }\n\n    /**\n     * Returns dependency model instance linking tasks with given ids. The dependency can be forward (from 1st\n     * task to 2nd) or backward (from 2nd to 1st).\n     *\n     * @param {Scheduler.model.EventModel|String} sourceEvent 1st event\n     * @param {Scheduler.model.EventModel|String} targetEvent 2nd event\n     * @returns {Scheduler.model.DependencyModel}\n     */\n    getDependencyForSourceAndTargetEvents(sourceEvent, targetEvent) {\n        sourceEvent = Model.asId(sourceEvent);\n        targetEvent = Model.asId(targetEvent);\n\n        return this.getBySourceTargetId(this.constructor.makeDependencySourceTargetCompositeKey(sourceEvent, targetEvent));\n    }\n\n    /**\n     * Returns a dependency model instance linking given events if such dependency exists in the store.\n     * The dependency can be forward (from 1st event to 2nd) or backward (from 2nd to 1st).\n     *\n     * @param {Scheduler.model.EventModel|String} sourceEvent\n     * @param {Scheduler.model.EventModel|String} targetEvent\n     * @returns {Scheduler.model.DependencyModel}\n     */\n    getEventsLinkingDependency(sourceEvent, targetEvent) {\n        return this.getDependencyForSourceAndTargetEvents(sourceEvent, targetEvent) ||\n            this.getDependencyForSourceAndTargetEvents(targetEvent, sourceEvent);\n    }\n\n    /**\n     * Validation method used to validate a dependency. Override and return `true` to indicate that an\n     * existing dependency between two tasks is valid. For a new dependency being created please see\n     * {@link #function-isValidDependencyToCreate}.\n     *\n     * @param {Scheduler.model.DependencyModel|Scheduler.model.TimeSpan|Number|String} dependencyOrFromId The dependency\n     * model, the from task/event or the id of the from task/event\n     * @param {Scheduler.model.TimeSpan|Number|String} [toId] To task/event or id thereof if the first parameter is not\n     * a dependency record\n     * @param {Number} [type] Dependency {@link Scheduler.model.DependencyBaseModel#property-Type-static} if the first\n     * parameter is not a dependency model instance.\n     * @returns {Boolean}\n     */\n    async isValidDependency(dependencyOrFromId, toId, type) {\n        let fromEvent = dependencyOrFromId, toEvent = toId;\n\n        if (dependencyOrFromId == null) {\n            return false;\n        }\n\n        // Accept dependency model\n        if (dependencyOrFromId.isDependencyModel) {\n            ({ fromEvent, toEvent } = dependencyOrFromId);\n        }\n\n        // Accept from as id\n        fromEvent = this.eventStore.getById(fromEvent);\n\n        // Accept to as id\n        toEvent = this.eventStore.getById(toEvent);\n\n        // This condition is supposed to map all model instances to be validated by project. Lowest common ancestor\n        // for scheduler event, scheduler pro event and gantt task is TimeSpan\n        if (fromEvent && toEvent) {\n            // Block creating dependencies to display only tasks in Gantt\n            if (!fromEvent.project || !toEvent.project) {\n                return false;\n            }\n\n            // Not asserting dependency type here. Default value should normally suffice.\n            return this.project.isValidDependency(fromEvent, toEvent, type);\n        }\n\n        return dependencyOrFromId !== toId;\n    }\n\n    /**\n     * Validation method used to validate a dependency while creating. Override and return `true` to indicate that\n     * a new dependency is valid to be created.\n     *\n     * @param {Scheduler.model.TimeSpan|Number|String} fromId From event/task or id\n     * @param {Scheduler.model.TimeSpan|Number|String} toId To event/task or id\n     * @param {Number} type Dependency {@link Scheduler.model.DependencyBaseModel#property-Type-static}\n     * @returns {Boolean}\n     */\n    isValidDependencyToCreate(fromId, toId, type) {\n        return this.isValidDependency(fromId, toId, type);\n    }\n\n    /**\n     * Returns all dependencies highlighted with the given CSS class\n     *\n     * @param {String} cls\n     * @returns {Scheduler.model.DependencyBaseModel[]}\n     */\n    getHighlightedDependencies(cls) {\n        return this.records.reduce((result, dep) => {\n            if (dep.isHighlightedWith(cls)) result.push(dep);\n            return result;\n        }, []);\n    }\n\n    static makeDependencySourceTargetCompositeKey(from, to) {\n        return `source(${from})-target(${to})`;\n    }\n\n    //region Product neutral\n\n    getTimeSpanDependencies(record) {\n        return this.getEventDependencies(record);\n    }\n\n    //endregion\n};\n","import AjaxStore from '../../Core/data/AjaxStore.js';\nimport DependencyModel from '../model/DependencyModel.js';\nimport PartOfProject from './mixin/PartOfProject.js';\nimport DependencyStoreMixin from './mixin/DependencyStoreMixin.js';\n/* <remove-on-release> */\nimport { ChronoDependencyStoreMixin } from '../../Engine/quark/store/ChronoDependencyStoreMixin.js';\n/* </remove-on-release> */\nimport { CoreDependencyStoreMixin } from '../../Engine/quark/store/CoreDependencyStoreMixin.js';\nimport PartOfBaseProject from './mixin/PartOfBaseProject.js';\n\nconst EngineMixin = /* <remove-on-release> */ globalThis.bryntum?.useBasicEngine ? PartOfBaseProject(ChronoDependencyStoreMixin.derive(AjaxStore)) : /* </remove-on-release> */PartOfProject(CoreDependencyStoreMixin.derive(AjaxStore));\n\n/**\n * @module Scheduler/data/DependencyStore\n */\n\n/**\n * A store representing a collection of dependencies between events in the {@link Scheduler.data.EventStore}.\n *\n * This store only accepts a model class inheriting from {@link Scheduler.model.DependencyModel}.\n *\n * A DependencyStore is usually connected to a project, which binds it to other related stores (EventStore,\n * AssignmentStore and ResourceStore). The project also handles references (fromEvent, toEvent) to related records\n * for the records in the store.\n *\n * Resolving the references happens async, records are not guaranteed to have up to date references until calculations\n * are finished. To be certain that references are resolved, call `await project.commitAsync()` after store actions. Or\n * use one of the `xxAsync` functions, such as `loadDataAsync()`.\n *\n * Using `commitAsync()`:\n *\n * ```javascript\n * dependencyStore.data = [{ from, to }, ...];\n *\n * // references (fromEvent, toEvent) not resolved yet\n *\n * await dependencyStore.project.commitAsync();\n *\n * // now they are\n * ```\n *\n * Using `loadDataAsync()`:\n *\n * ```javascript\n * await dependencyStore.loadDataAsync([{ from, to }, ...]);\n *\n * // references (fromEvent, toEvent) are resolved\n * ```\n *\n * @mixes Scheduler/data/mixin/PartOfProject\n * @mixes Scheduler/data/mixin/DependencyStoreMixin\n * @extends Core/data/AjaxStore\n */\nexport default class DependencyStore extends DependencyStoreMixin(EngineMixin.derive(AjaxStore)) {\n\n    static get defaultConfig() {\n        return {\n            modelClass : DependencyModel\n        };\n    }\n\n}\n","/**\n * @module Scheduler/crud/mixin/AbstractCrudManagerValidation\n */\n\n/**\n * Mixin proving responses validation API to Crud Manager.\n * @mixin\n */\nexport default Target => class AbstractCrudManagerValidation extends Target {\n\n    static get $name() {\n        return 'AbstractCrudManagerValidation';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * This config validates the response structure for requests made by the Crud Manager.\n             * When `true`, the Crud Manager checks every parsed response structure for errors\n             * and if the response format is invalid, a warning is logged to the browser console.\n             *\n             * The config is intended to help developers implementing backend integration.\n             *\n             * @config {Boolean}\n             * @default\n             * @category CRUD\n             */\n            validateResponse : true,\n\n            /**\n             * When `true` treats parsed responses without `success` property as successful.\n             * In this mode a parsed response is treated as invalid if it has explicitly set `success : false`.\n             * @config {Boolean}\n             * @default\n             * @category CRUD\n             */\n            skipSuccessProperty : true,\n\n            crudLoadValidationWarningPrefix : 'CrudManager load response error(s):',\n\n            crudSyncValidationWarningPrefix : 'CrudManager sync response error(s):',\n\n            supportShortSyncResponseNote : 'Note: Please consider enabling \"supportShortSyncResponse\" option to allow less detailed sync responses (https://bryntum.com/products/scheduler/docs/api/Scheduler/crud/AbstractCrudManagerMixin#config-supportShortSyncResponse)',\n\n            disableValidationNote : 'Note: To disable this validation please set the \"validateResponse\" config to false'\n        };\n    }\n\n    get crudLoadValidationMandatoryStores() {\n        return [];\n    }\n\n    getStoreLoadResponseWarnings(storeInfo, responded, expectedResponse) {\n        const\n            messages        = [],\n            { storeId }     = storeInfo,\n            mandatoryStores = this.crudLoadValidationMandatoryStores,\n            result          = { [storeId] : {} };\n\n        // if the store section is responded\n        if (responded) {\n            if (!responded.rows) {\n                messages.push(`- \"${storeId}\" store section should have a \"rows\" property with an array of the store records.`);\n\n                result[storeId].rows = ['...'];\n            }\n        }\n        // if the store is mandatory\n        else if (mandatoryStores?.includes(storeId)) {\n            messages.push(`- No \"${storeId}\" store section found. It should contain the store data.`);\n\n            result[storeId].rows = ['...'];\n        }\n\n        // extend expected response w/ this store part\n        if (messages.length) {\n            Object.assign(expectedResponse, result);\n        }\n\n        return messages;\n    }\n\n    getLoadResponseWarnings(response) {\n        const\n            messages         = [],\n            expectedResponse = {};\n\n        if (!this.skipSuccessProperty) {\n            expectedResponse.success = true;\n        }\n\n        // iterate stores to check properties validity\n        this.forEachCrudStore((store, storeId, storeInfo) => {\n            messages.push(...this.getStoreLoadResponseWarnings(storeInfo, response?.[storeId], expectedResponse));\n        });\n\n        if (messages.length) {\n            messages.push('Please adjust your response to look like this:\\n' +\n                JSON.stringify(expectedResponse, null, 4).replace(/\"\\.\\.\\.\"/g, '...'));\n\n            messages.push(this.disableValidationNote);\n        }\n\n        return messages;\n    }\n\n    validateLoadResponse(response) {\n        const messages = this.getLoadResponseWarnings(response);\n\n        if (messages.length) {\n            console.warn(this.crudLoadValidationWarningPrefix + '\\n' + messages.join('\\n'));\n        }\n    }\n\n    getStoreSyncResponseWarnings(storeInfo, requested, responded, expectedResponse) {\n        const\n            messages         = [],\n            missingRows      = [],\n            missingRemoved   = [],\n            { storeId }      = storeInfo,\n            result           = { [storeId] : {} },\n            phantomIdField   = storeInfo.phantomIdField || this.phantomIdField,\n            { modelClass }   = storeInfo.store,\n            { idField }      = modelClass,\n            respondedRows    = responded?.rows || [],\n            respondedRemoved = responded?.removed || [];\n\n        let showSupportShortSyncResponseNote = false;\n\n        // if added records were passed in the request they should be mentioned in the response\n        if (requested?.added) {\n            missingRows.push(\n                ...requested.added.filter(record => {\n                    return !respondedRows.find(row => row[phantomIdField] == record[phantomIdField]) &&\n                        !respondedRemoved.find(row => row[phantomIdField] == record[phantomIdField] || row[idField] == record[phantomIdField]);\n                }).map(record => ({ [phantomIdField] : record[phantomIdField], [idField] : '...' }))\n            );\n\n            if (missingRows.length) {\n                const missingIds = missingRows.map(row => '#' + row[phantomIdField]).join(', ');\n\n                messages.push(`- \"${storeId}\" store \"rows\" section should mention added record(s) ${missingIds} sent in the request. ` +\n                    'It should contain the added records identifiers (both phantom and \"real\" ones assigned by the backend).');\n            }\n        }\n\n        // if short responses are enabled\n        if (this.supportShortSyncResponse) {\n            // if the data is not object, will return error\n            if (!missingRows.length && responded) {\n                if (typeof responded !== 'object' || Array.isArray(responded)) {\n                    messages.push(`- \"${storeId}\" store section should be an Object.`);\n                    result[storeId]['...'] = '...';\n                }\n\n                // for request to edit records, if rows is present, it must be an array\n                if (responded.rows && !Array.isArray(responded.rows)) {\n                    messages.push(`- \"${storeId}\" store \"rows\" section should be an array`);\n                    missingRows.push('...');\n                }\n\n                // removed if presented must be an array\n                if (responded.removed && !Array.isArray(responded.removed)) {\n                    messages.push(`- \"${storeId}\" store \"removed\" section should be an array:`);\n                    missingRemoved.push('...');\n                }\n            }\n        }\n        // if short responses are disabled\n        else {\n            // if updated records were passed in the request they should be mentioned in the response\n            if (requested?.updated) {\n                const missingUpdatedRows = requested.updated.filter(record => !respondedRows.find(row => row[idField] == record[idField]))\n                    .map(record => ({ [idField] : record[idField] }));\n\n                missingRows.push(...missingUpdatedRows);\n\n                if (missingUpdatedRows.length) {\n                    const missingIds = missingUpdatedRows.map(row => '#' + row[idField]).join(', ');\n\n                    messages.push(`- \"${storeId}\" store \"rows\" section should mention updated record(s) ${missingIds} sent in the request. ` +\n                        `It should contain the updated record identifiers.`);\n\n                    showSupportShortSyncResponseNote = true;\n                }\n\n            }\n\n            if (missingRows.length) {\n                missingRows.push('...');\n            }\n\n            // if removed records were passed in the request they should be mentioned in the response\n            if (requested?.removed) {\n                missingRemoved.push(\n                    ...requested.removed.filter(record => !respondedRows.find(row => row[idField] == record[idField]))\n                        .map(record => ({ [idField] : record[idField] }))\n                );\n\n                if (missingRemoved.length) {\n                    const missingIds = missingRemoved.map(row => '#' + row[idField]).join(', ');\n\n                    messages.push(`- \"${storeId}\" store \"removed\" section should mention removed record(s) ${missingIds} sent in the request. ` +\n                        `It should contain the removed record identifiers.`);\n\n                    result[storeId].removed = missingRemoved;\n                    missingRemoved.push('...');\n\n                    showSupportShortSyncResponseNote = true;\n                }\n            }\n\n        }\n\n        if (missingRows.length) {\n            result[storeId].rows = missingRows;\n        }\n\n        // get rid of store section if no rows/removed there\n        if (!messages.length) {\n            delete result[storeId];\n        }\n\n        // extend expected response w/ this store part\n        Object.assign(expectedResponse, result);\n\n        return { messages, showSupportShortSyncResponseNote };\n    }\n\n    getSyncResponseWarnings(response, requestDesc) {\n        const\n            messages         = [],\n            expectedResponse = {},\n            request          = requestDesc.pack;\n\n        if (!this.skipSuccessProperty) {\n            expectedResponse.success = true;\n        }\n\n        let showSupportShortSyncResponseNote = false;\n\n        // iterate stores to check properties validity\n        this.forEachCrudStore((store, storeId, storeInfo) => {\n            const warnings = this.getStoreSyncResponseWarnings(storeInfo, request?.[storeId], response[storeId], expectedResponse);\n\n            showSupportShortSyncResponseNote = showSupportShortSyncResponseNote || warnings.showSupportShortSyncResponseNote;\n\n            messages.push(...warnings.messages);\n        });\n\n        if (messages.length) {\n            messages.push('Please adjust your response to look like this:\\n' +\n                JSON.stringify(expectedResponse, null, 4).replace(/\"\\.\\.\\.\":\\s*\"\\.\\.\\.\"/g, ',,,').replace(/\"\\.\\.\\.\"/g, '...'));\n\n            if (showSupportShortSyncResponseNote) {\n                messages.push(this.supportShortSyncResponseNote);\n            }\n\n            messages.push(this.disableValidationNote);\n        }\n\n        return messages;\n    }\n\n    validateSyncResponse(response, request) {\n        const messages = this.getSyncResponseWarnings(response, request);\n\n        if (messages.length) {\n            console.warn(this.crudSyncValidationWarningPrefix + '\\n' + messages.join('\\n'));\n        }\n    }\n};\n","import Store from '../../Core/data/Store.js';\nimport Delayable from '../../Core/mixin/Delayable.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport ArrayHelper from '../../Core/helper/ArrayHelper.js';\nimport Objects from '../../Core/helper/util/Objects.js';\nimport Base from '../../Core/Base.js';\nimport Events from '../../Core/mixin/Events.js';\nimport AbstractCrudManagerValidation from './mixin/AbstractCrudManagerValidation.js';\n\n/**\n * @module Scheduler/crud/AbstractCrudManagerMixin\n */\n\nexport class AbstractCrudManagerError extends Error {}\n\nexport class CrudManagerRequestError extends AbstractCrudManagerError {\n    constructor(cfg = {}) {\n        super(cfg.message || cfg.request && StringHelper.capitalize(cfg.request?.type) + ' failed' || 'Crud Manager request failed');\n        Object.assign(this, cfg);\n        this.action = this.request?.type;\n    }\n}\n\nconst\n    storeSortFn     = function(lhs, rhs, sortProperty) {\n        // <remove-on-release>\n        // TODO: get rid of these StoreDescriptors. Just use Stores.\n        // </remove-on-release>\n        if (lhs.store) {\n            lhs = lhs.store;\n        }\n        if (rhs.store) {\n            rhs = rhs.store;\n        }\n\n        lhs = lhs[sortProperty] || 0;\n        rhs = rhs[sortProperty] || 0;\n        return (lhs < rhs) ? -1 : ((lhs > rhs) ? 1 : 0);\n    },\n\n    // Sorter function to keep stores in loadPriority order\n    storeLoadSortFn = function(lhs, rhs) {\n        return storeSortFn(lhs, rhs, 'loadPriority');\n    },\n\n    // Sorter function to keep stores in syncPriority order\n    storeSyncSortFn = function(lhs, rhs) {\n        return storeSortFn(lhs, rhs, 'syncPriority');\n    };\n\n/**\n * An abstract mixin that supplies most of the CrudManager functionality.\n * It implements basic mechanisms of collecting stores to organize batch communication with a server.\n * It does not contain methods related to _data transfer_ nor _encoding_.\n * These methods are to be provided in sub-classes.\n * Out of the box there are mixins implementing {@link Scheduler/crud/transport/AjaxTransport support of AJAX for data transferring}\n * and {@link Scheduler/crud/encoder/JsonEncoder JSON for data encoding system}.\n * For example this is how we make a model that will implement CrudManager protocol and use AJAX/JSON to pass the data\n * to the server:\n *\n * ```javascript\n * class SystemSettings extends JsonEncode(AjaxTransport(AbstractCrudManagerMixin(Model))) {\n *     ...\n * }\n * ```\n *\n * ## Data transfer and encoding methods\n *\n * These are methods that must be provided by subclasses of this class:\n *\n * - {@link #function-sendRequest}\n * - {@link #function-cancelRequest}\n * - {@link #function-encode}\n * - {@link #function-decode}\n *\n * @mixin\n * @mixes Core/mixin/Delayable\n * @mixes Core/mixin/Events\n * @mixes Scheduler/crud/mixin/AbstractCrudManagerValidation\n * @abstract\n */\nexport default Target => {\n\n    // Trigger $meta calculation to get up-to-date is \"isXXX\" flags\n    // (kinky construction to avoid production minification faced in Angular https://github.com/bryntum/support/issues/2889)\n    Target.$$meta = Target.$meta;\n\n    const mixins = [];\n\n    // These two mixins are mixed in the Scheduling Engine code ..but in its own way\n    // so that Base.mixin() cannot understand that they are already there and applies them 2nd time\n    if (!Target.isEvents) {\n        mixins.push(Events);\n    }\n    if (!Target.isDelayable) {\n        mixins.push(Delayable);\n    }\n\n    mixins.push(AbstractCrudManagerValidation);\n\n    return class AbstractCrudManagerMixin extends (Target || Base).mixin(...mixins) {\n\n        /**\n         * Fires before server response gets applied to the stores. Return `false` to prevent data applying.\n         * This event can be used for server data preprocessing. To achieve it user can modify the `response` object.\n         * @event beforeResponseApply\n         * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n         * @param {'sync'|'load'} requestType The request type (`sync` or `load`).\n         * @param {Object} response The decoded server response object.\n         */\n\n        /**\n         * Fires before loaded data get applied to the stores. Return `false` to prevent data applying.\n         * This event can be used for server data preprocessing. To achieve it user can modify the `response` object.\n         * @event beforeLoadApply\n         * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n         * @param {Object} response The decoded server response object.\n         * @param {Object} options Options provided to the {@link #function-load} method.\n         */\n        /**\n         * Fires before sync response data get applied to the stores. Return `false` to prevent data applying.\n         * This event can be used for server data preprocessing. To achieve it user can modify the `response` object.\n         * @event beforeSyncApply\n         * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n         * @param {Object} response The decoded server response object.\n         */\n\n        static get $name() {\n            return 'AbstractCrudManagerMixin';\n        }\n\n        //region Default config\n\n        static get defaultConfig() {\n            return {\n                /**\n                 * The server revision stamp.\n                 * The _revision stamp_ is a number which should be incremented after each server-side change.\n                 * This property reflects the current version of the data retrieved from the server and gets updated\n                 * after each {@link #function-load} and {@link #function-sync} call.\n                 * @property {Number}\n                 * @readonly\n                 * @category CRUD\n                 */\n                crudRevision : null,\n\n                /**\n                 * A list of registered stores whose server communication will be collected into a single batch.\n                 * Each store is represented by a _store descriptor_.\n                 * @member {CrudManagerStoreDescriptor[]} crudStores\n                 * @category CRUD\n                 */\n\n                /**\n                 * Sets the list of stores controlled by the CRUD manager.\n                 *\n                 * When adding a store to the CrudManager, make sure the server response format is correct for `load`\n                 * and `sync` requests. Learn more in the\n                 * [Working with data](#Scheduler/guides/data/crud_manager.md#loading-data) guide.\n                 *\n                 * Store can be provided by itself, its storeId or as a _store descriptor_.\n                 * @config {Core.data.Store[]|String[]|CrudManagerStoreDescriptor[]}\n                 * @category CRUD\n                 */\n                crudStores : [],\n\n                /**\n                 * Name of a store property to retrieve store identifiers from. Make sure you have an instance of a\n                 * store to use it by id. Store identifier is used as a container name holding corresponding store data\n                 * while transferring them to/from the server. By default, `storeId` property is used. And in case a\n                 * container identifier has to differ this config can be used:\n                 *\n                 * ```javascript\n                 * class CatStore extends Store {\n                 *     static configurable = {\n                 *         // store id is \"meow\" but for sending/receiving store data\n                 *         // we want to have \"cats\" container in JSON, so we create a new property \"storeIdForCrud\"\n                 *         id             : 'meow',\n                 *         storeIdForCrud : 'cats'\n                 *     }\n                 * });\n                 *\n                 * // create an instance to use a store by id\n                 * new CatStore();\n                 *\n                 * class MyCrudManager extends CrudManager {\n                 *     ...\n                 *     crudStores           : ['meow'],\n                 *     // crud manager will get store identifier from \"storeIdForCrud\" property\n                 *     storeIdProperty  : 'storeIdForCrud'\n                 * });\n                 * ```\n                 * The `storeIdProperty` property can also be specified directly on a store:\n                 *\n                 * ```javascript\n                 * class CatStore extends Store {\n                 *     static configurable = {\n                 *         // storeId is \"meow\" but for sending/receiving store data\n                 *         // we want to have \"cats\" container in JSON\n                 *         id              : 'meow',\n                 *         // so we create a new property \"storeIdForCrud\"..\n                 *         storeIdForCrud  : 'cats',\n                 *         // and point CrudManager to use it as the store identifier source\n                 *         storeIdProperty  : 'storeIdForCrud'\n                 *     }\n                 * });\n                 *\n                 * class DogStore extends Store {\n                 *     static configurable = {\n                 *         // storeId is \"dogs\" and it will be used as a container name for the store data\n                 *         storeId : 'dogs',\n                 *         // id is set to get a store by identifier\n                 *         id      : 'dogs'\n                 *     }\n                 * });\n                 *\n                 * // create an instance to use a store by id\n                 * new CatStore();\n                 * new DogStore();\n                 *\n                 * class MyCrudManager extends CrudManager {\n                 *     ...\n                 *     crudStores : ['meow', 'dogs']\n                 * });\n                 * ```\n                 * @config {String}\n                 * @category CRUD\n                 */\n                storeIdProperty : 'storeId',\n\n                // <remove-on-release>\n                // TODO: no support for remote filtering yet\n                // /**\n                //  * The name of the 'filter' parameter to send in a load request.\n                //  * @config {String}\n                //  * @default\n                //  */\n                // </remove-on-release>\n                crudFilterParam : 'filter',\n\n                /**\n                 * Sends request to the server.\n                 * @function sendRequest\n                 * @param {Object} request The request to send. An object having following properties:\n                 * @param {'load'|'sync'} request.type Request type, can be either `load` or `sync`\n                 * @param {String} request.data {@link #function-encode Encoded} request.\n                 * @param {Function} request.success Callback to be started on successful request transferring\n                 * @param {Function} request.failure Callback to be started on request transfer failure\n                 * @param {Object} request.thisObj `this` reference for the above `success` and `failure` callbacks\n                 * @returns {Promise} The request promise.\n                 * @abstract\n                 */\n\n                /**\n                 * Cancels request to the server.\n                 * @function cancelRequest\n                 * @param {Promise} promise The request promise to cancel (a value returned by corresponding\n                 * {@link #function-sendRequest} call).\n                 * @param {Function} reject Reject handle of the corresponding promise\n                 * @abstract\n                 */\n\n                /**\n                 * Encodes request to the server.\n                 * @function encode\n                 * @param {Object} request The request to encode.\n                 * @returns {String} The encoded request.\n                 * @abstract\n                 */\n\n                /**\n                 * Decodes response from the server.\n                 * @function decode\n                 * @param {String} response The response to decode.\n                 * @returns {Object} The decoded response.\n                 * @abstract\n                 */\n\n                transport : {},\n\n                /**\n                 * When `true` forces the CRUD manager to process responses depending on their `type` attribute.\n                 * So `load` request may be responded with `sync` response for example.\n                 * Can be used for smart server logic allowing the server to decide when it's better to respond with a\n                 * complete data set (`load` response) or it's enough to return just a delta (`sync` response).\n                 * @config {Boolean}\n                 * @default\n                 * @category CRUD\n                 */\n                trackResponseType : false,\n\n                /**\n                 * When `true` the Crud Manager does not require all updated and removed records to be mentioned in the\n                 * *sync* response. In this case response should include only server side changes.\n                 *\n                 * **Please note that added records should still be mentioned in response to provide real identifier\n                 * instead of the phantom one.**\n                 * @config {Boolean}\n                 * @default\n                 * @category CRUD\n                 */\n                supportShortSyncResponse : true,\n\n                /**\n                 * Field name to be used to transfer a phantom record identifier.\n                 * @config {String}\n                 * @default\n                 * @category CRUD\n                 */\n                phantomIdField : '$PhantomId',\n\n                /**\n                 * Field name to be used to transfer a phantom parent record identifier.\n                 * @config {String}\n                 * @default\n                 * @category CRUD\n                 */\n                phantomParentIdField : '$PhantomParentId',\n\n                /**\n                 * Specify `true` to automatically call {@link #function-load} method on the next frame after creation.\n                 *\n                 * Called on the next frame to allow a Scheduler (or similar) linked to a standalone CrudManager to\n                 * register its stores before loading starts.\n                 *\n                 * @config {Boolean}\n                 * @default\n                 * @category CRUD\n                 */\n                autoLoad : false,\n\n                /**\n                 * The timeout in milliseconds to wait before persisting changes to the server.\n                 * Used when {@link #config-autoSync} is set to `true`.\n                 * @config {Number}\n                 * @default\n                 * @category CRUD\n                 */\n                autoSyncTimeout : 100,\n\n                /**\n                 * `true` to automatically persist store changes after edits are made in any of the stores monitored.\n                 * Please note that sync request will not be invoked immediately but only after\n                 * {@link #config-autoSyncTimeout} interval.\n                 * @config {Boolean}\n                 * @default\n                 * @category CRUD\n                 */\n                autoSync : false,\n\n                /**\n                 * `True` to reset identifiers (defined by `idField` config) of phantom records before submitting them\n                 * to the server.\n                 * @config {Boolean}\n                 * @default\n                 * @category CRUD\n                 */\n                resetIdsBeforeSync : true,\n\n                /**\n                 * @member {CrudManagerStoreDescriptor[]} syncApplySequence\n                 * An array of stores presenting an alternative sync responses apply order.\n                 * Each store is represented by a _store descriptor_.\n                 * @category CRUD\n                 */\n\n                /**\n                 * An array of store identifiers sets an alternative sync responses apply order.\n                 * By default, the order in which sync responses are applied to the stores is the same as they\n                 * registered in. But in case of some tricky dependencies between stores this order can be changed:\n                 *\n                 *```javascript\n                 * class MyCrudManager extends CrudManager {\n                 *     // register stores (will be loaded in this order: 'store1' then 'store2' and finally 'store3')\n                 *     crudStores : ['store1', 'store2', 'store3'],\n                 *     // but we apply changes from server to them in an opposite order\n                 *     syncApplySequence : ['store3', 'store2', 'store1']\n                 * });\n                 *```\n                 * @config {String[]}\n                 * @category CRUD\n                 */\n                syncApplySequence : [],\n\n                orderedCrudStores : [],\n\n                /**\n                 * `true` to write all fields from the record to the server.\n                 * If set to `false` it will only send the fields that were modified.\n                 * Note that any fields that have {@link Core/data/field/DataField#config-persist} set to `false` will\n                 * still be ignored and fields having {@link Core/data/field/DataField#config-alwaysWrite} set to `true`\n                 * will always be included.\n                 * @config {Boolean}\n                 * @default\n                 * @category CRUD\n                 */\n                writeAllFields : false,\n\n                crudIgnoreUpdates : 0,\n\n                autoSyncSuspendCounter : 0,\n\n                // Flag that shows if crud manager performed successful load request\n                crudLoaded : false,\n\n                applyingLoadResponse : false,\n                applyingSyncResponse : false,\n\n                callOnFunctions : true\n            };\n        }\n\n        static configurable = {\n            /**\n             * Convenience shortcut to set only the url to load from, when you do not need to supply any other config\n             * options in the `load` section of the `transport` config.\n             *\n             * Using `loadUrl`:\n             * ```javascript\n             * {\n             *     loadUrl : 'read.php\n             * }\n             * ```\n             *\n             * Equals the following `transport` config:\n             * ```javascript\n             * {\n             *     transport : {\n             *         load : {\n             *             url : 'read.php'\n             *         }\n             *     }\n             * }\n             * ```\n             *\n             * When read at runtime, it will return the value from `transport.load.url`.\n             *\n             * @prp {String}\n             */\n            loadUrl : null,\n\n            /**\n             * Convenience shortcut to set only the url to sync to, when you do not need to supply any other config\n             * options in the `sync` section of the `transport` config.\n             *\n             * Using `loadUrl`:\n             * ```javascript\n             * {\n             *     syncUrl : 'sync.php\n             * }\n             * ```\n             *\n             * Equals the following `transport` config:\n             * ```javascript\n             * {\n             *     transport : {\n             *         load : {\n             *             url : 'sync.php'\n             *         }\n             *     }\n             * }\n             * ```\n             *\n             * When read at runtime, it will return the value from `transport.sync.url`.\n             *\n             * @prp {String}\n             */\n            syncUrl : null,\n\n            /**\n             * Specify as `true` to force sync requests to be sent when calling `sync()`, even if there are no local\n             * changes. Useful in a polling scenario, to keep client up to date with the backend.\n             * @prp {Boolean}\n             */\n            forceSync : null\n        };\n\n        static delayable = {\n            // Postponed to next frame, to allow Scheduler created after CrudManager to inject its stores\n            // (timeRanges, resourceTimeRanges)\n            doAutoLoad : 'raf'\n        };\n\n        get isCrudManager() {\n            return true;\n        }\n\n        //endregion\n\n        //region Init\n\n        construct(config = {}) {\n            this._requestId = 0;\n            this.activeRequests = {};\n            this.crudStoresIndex = {};\n\n            super.construct(config);\n        }\n\n        afterConstruct() {\n            super.afterConstruct();\n\n            if (this.autoLoad) {\n                this._autoLoadPromise = this.doAutoLoad();\n            }\n        }\n\n        //endregion\n\n        //region Configs\n\n        get loadUrl() {\n            return this.transport?.load?.url;\n        }\n\n        updateLoadUrl(url) {\n            ObjectHelper.setPath(this, 'transport.load.url', url);\n        }\n\n        get syncUrl() {\n            return this.transport?.sync?.url;\n        }\n\n        updateSyncUrl(url) {\n            ObjectHelper.setPath(this, 'transport.sync.url', url);\n        }\n\n        //endregion\n\n        //region Store descriptors & index\n\n        /**\n         * Returns a registered store descriptor.\n         * @param {String|Core.data.Store} storeId The store identifier or registered store instance.\n         * @returns {CrudManagerStoreDescriptor} The descriptor of the store.\n         * @category CRUD\n         */\n        getStoreDescriptor(storeId) {\n            if (!storeId) return null;\n\n            if (storeId instanceof Store) return this.crudStores.find(storeDesc => storeDesc.store === storeId);\n\n            if (typeof storeId === 'object') return this.crudStoresIndex[storeId.storeId];\n\n            return this.crudStoresIndex[storeId] || this.getStoreDescriptor(Store.getStore(storeId));\n        }\n\n        fillStoreDescriptor(descriptor) {\n            const\n                { store } = descriptor,\n                {\n                    storeIdProperty = this.storeIdProperty,\n                    modelClass\n                }         = store;\n\n            if (!descriptor.storeId) {\n                descriptor.storeId = store[storeIdProperty] || store.id;\n            }\n            if (!descriptor.idField) {\n                descriptor.idField = modelClass.idField;\n            }\n            if (!descriptor.phantomIdField) {\n                descriptor.phantomIdField = modelClass.phantomIdField;\n            }\n            if (!descriptor.phantomParentIdField) {\n                descriptor.phantomParentIdField = modelClass.phantomParentIdField;\n            }\n            if (!('writeAllFields' in descriptor)) {\n                descriptor.writeAllFields = store.writeAllFields;\n            }\n\n            return descriptor;\n        }\n\n        updateCrudStoreIndex() {\n            const\n                crudStoresIndex = this.crudStoresIndex = {};\n\n            this.crudStores.forEach(store => store.storeId && (crudStoresIndex[store.storeId] = store));\n        }\n\n        //endregion\n\n        //region Store collection (add, remove, get & iterate)\n\n        /**\n         * Returns a registered store.\n         * @param {String} storeId Store identifier.\n         * @returns {Core.data.Store} Found store instance.\n         * @category CRUD\n         */\n        getCrudStore(storeId) {\n            const storeDescriptor = this.getStoreDescriptor(storeId);\n            return storeDescriptor?.store;\n        }\n\n        forEachCrudStore(fn, thisObj = this) {\n            if (!fn) {\n                throw new Error('Iterator function must be provided');\n            }\n\n            this.crudStores.every(store =>\n                fn.call(thisObj, store.store, store.storeId, store) !== false\n            );\n        }\n\n        set crudStores(stores) {\n            this._crudStores = [];\n\n            this.addCrudStore(stores);\n\n            // Ensure preconfigured stores stay stable at the start of the array when\n            // addPrioritizedStore attempts to insert in order. Only featured gantt/scheduler stores\n            // must participate in the ordering. If they were configured in, they must not move.\n            for (const store of this._crudStores) {\n                store.loadPriority = store.syncPriority = 0;\n            }\n        }\n\n        get crudStores() {\n            return this._crudStores;\n        }\n\n        get orderedCrudStores() {\n            return this._orderedCrudStores;\n        }\n\n        set orderedCrudStores(stores) {\n            return this._orderedCrudStores = stores;\n        }\n\n        set syncApplySequence(stores) {\n            this._syncApplySequence = [];\n\n            this.addStoreToApplySequence(stores);\n        }\n\n        get syncApplySequence() {\n            return this._syncApplySequence;\n        }\n\n        internalAddCrudStore(store) {\n            const\n                me = this;\n\n            let storeInfo;\n\n            // if store instance provided\n            if (store instanceof Store) {\n                storeInfo = { store };\n            }\n            else if (typeof store === 'object') {\n                if (!store.store) {\n                    // not a store descriptor, assume it is a store config\n                    store = {\n                        storeId : store.id,\n                        store   : new Store(store)\n                    };\n                }\n\n                storeInfo = store;\n            }\n            // if it's a store identifier\n            else {\n                storeInfo = { store : Store.getStore(store) };\n            }\n\n            me.fillStoreDescriptor(storeInfo);\n\n            // store instance\n            store = storeInfo.store;\n\n            // if the store has \"setCrudManager\" hook - use it\n            if (store.setCrudManager) {\n                store.setCrudManager(me);\n            }\n            // otherwise decorate the store w/ \"crudManager\" property\n            else {\n                store.crudManager = me;\n            }\n\n            // Stores have a defaultConfig for pageSize. CrudManager does not support that.\n            // <remove-on-release>\n            // TODO: PORT currently no support for paging.\n            // </remove-on-release>\n            store.pageSize = null;\n\n            // Prevent AjaxStores from performing their own CRUD operations if CrudManager is configured with an URL\n            if (me.loadUrl || me.syncUrl) {\n                store.autoCommit = false;\n                store.autoLoad = false;\n                if (store.createUrl || store.updateUrl || store.deleteUrl || store.readUrl) {\n                    console.warn('You have configured an URL on a Store that is handled by a CrudManager that is also configured with an URL. The Store URL\\'s should be removed.');\n                }\n            }\n\n            // listen to store changes\n            me.bindCrudStoreListeners(store);\n\n            return storeInfo;\n        }\n\n        /**\n         * Adds a store to the collection.\n         *\n         *```javascript\n         * // append stores to the end of collection\n         * crudManager.addCrudStore([\n         *     store1,\n         *     // storeId\n         *     'bar',\n         *     // store descriptor\n         *     {\n         *         storeId : 'foo',\n         *         store   : store3\n         *     },\n         *     {\n         *         storeId         : 'bar',\n         *         store           : store4,\n         *         // to write all fields of modified records\n         *         writeAllFields  : true\n         *     }\n         * ]);\n         *```\n         *\n         * **Note:** Order in which stores are kept in the collection is very essential sometimes.\n         * Exactly in this order the loaded data will be put into each store.\n         *\n         * When adding a store to the CrudManager, make sure the server response format is correct for `load` and `sync`\n         * requests. Learn more in the [Working with data](#Scheduler/guides/data/crud_manager.md#loading-data) guide.\n         *\n         * @param {Core.data.Store|String|CrudManagerStoreDescriptor|Core.data.Store[]|String[]|CrudManagerStoreDescriptor[]} store\n         * A store or list of stores. Each store might be specified by its instance, `storeId` or _descriptor_.\n         * @param {Number} [position] The relative position of the store. If `fromStore` is specified the position\n         * will be taken relative to it. If not specified then store(s) will be appended to the end of collection.\n         * Otherwise, it will be just a position in stores collection.\n         *\n         * ```javascript\n         * // insert stores store4, store5 to the start of collection\n         * crudManager.addCrudStore([ store4, store5 ], 0);\n         * ```\n         *\n         * @param {String|Core.data.Store|CrudManagerStoreDescriptor} [fromStore] The store relative to which position\n         * should be calculated. Can be defined as a store identifier, instance or descriptor (the result of\n         * {@link #function-getStoreDescriptor} call).\n         *\n         * ```javascript\n         * // insert store6 just before a store having storeId equal to 'foo'\n         * crudManager.addCrudStore(store6, 0, 'foo');\n         *\n         * // insert store7 just after store3 store\n         * crudManager.addCrudStore(store7, 1, store3);\n         * ```\n         * @category CRUD\n         */\n        addCrudStore(store, position, fromStore) {\n            store = ArrayHelper.asArray(store);\n\n            if (!store?.length) {\n                return;\n            }\n\n            const\n                me     = this,\n                stores = store.map(me.internalAddCrudStore, me);\n\n            // if no position specified then append stores to the end\n            if (typeof position === 'undefined') {\n                me.crudStores.push(...stores);\n            }\n            // if position specified\n            else {\n                // if specified the store relative to which we should insert new one(-s)\n                if (fromStore) {\n                    if (fromStore instanceof Store || typeof fromStore !== 'object') fromStore = me.getStoreDescriptor(fromStore);\n                    // get its position\n                    position += me.crudStores.indexOf(fromStore);\n                }\n                // insert new store(-s)\n                me.crudStores.splice(position, 0, ...stores);\n            }\n\n            me.orderedCrudStores.push(...stores);\n\n            me.updateCrudStoreIndex();\n        }\n\n        // Adds configured scheduler stores to the store collection ensuring correct order\n        // unless they're already registered.\n        addPrioritizedStore(store) {\n            const me = this;\n\n            if (!me.hasCrudStore(store)) {\n                me.addCrudStore(store, ArrayHelper.findInsertionIndex(store, me.crudStores, storeLoadSortFn));\n            }\n            if (!me.hasApplySequenceStore(store)) {\n                me.addStoreToApplySequence(store, ArrayHelper.findInsertionIndex(store, me.syncApplySequence, storeSyncSortFn));\n            }\n        }\n\n        hasCrudStore(store) {\n            return this.crudStores?.some(s => s === store || s.store === store || s.storeId === store);\n        }\n\n        /**\n         * Removes a store from collection. If the store was registered in alternative sync sequence list\n         * it will be removed from there as well.\n         *\n         * ```javascript\n         * // remove store having storeId equal to \"foo\"\n         * crudManager.removeCrudStore(\"foo\");\n         *\n         * // remove store3\n         * crudManager.removeCrudStore(store3);\n         * ```\n         *\n         * @param {CrudManagerStoreDescriptor|String|Core.data.Store} store The store to remove. Either the store\n         * descriptor, store identifier or store itself.\n         * @category CRUD\n         */\n        removeCrudStore(store) {\n            const\n                me         = this,\n                stores     = me.crudStores,\n                foundStore = stores.find(s => s === store || s.store === store || s.storeId === store);\n\n            if (foundStore) {\n                // unbind store listeners\n                me.unbindCrudStoreListeners(foundStore.store);\n\n                delete me.crudStoresIndex[foundStore.storeId];\n                ArrayHelper.remove(stores, foundStore);\n\n                if (me.syncApplySequence) {\n                    me.removeStoreFromApplySequence(store);\n                }\n            }\n            else {\n                throw new Error('Store not found in stores collection');\n            }\n        }\n\n        //endregion\n\n        //region Store listeners\n\n        bindCrudStoreListeners(store) {\n            store.ion({\n                name : store.id,\n\n                // When a tentatively added record gets confirmed as permanent, this signals a change\n                addConfirmed : 'onCrudStoreChange',\n                change       : 'onCrudStoreChange',\n                destroy      : 'onCrudStoreDestroy',\n                thisObj      : this\n            });\n        }\n\n        unbindCrudStoreListeners(store) {\n            this.detachListeners(store.id);\n        }\n\n        //endregion\n\n        //region Apply sequence\n\n        /**\n         * Adds a store to the alternative sync responses apply sequence.\n         * By default, the order in which sync responses are applied to the stores is the same as they registered in.\n         * But this order can be changes either on construction step using {@link #config-syncApplySequence} option\n         * or by calling this method.\n         *\n         * **Please note**, that if the sequence was not initialized before this method call then\n         * you will have to do it yourself like this for example:\n         *\n         * ```javascript\n         * // alternative sequence was not set for this crud manager\n         * // so let's fill it with existing stores keeping the same order\n         * crudManager.addStoreToApplySequence(crudManager.crudStores);\n         *\n         * // and now we can add our new store\n         *\n         * // we will load its data last\n         * crudManager.addCrudStore(someNewStore);\n         * // but changes to it will be applied first\n         * crudManager.addStoreToApplySequence(someNewStore, 0);\n         * ```\n         * add registered stores to the sequence along with the store(s) you want to add\n         *\n         * @param {Core.data.Store|CrudManagerStoreDescriptor|Core.data.Store[]|CrudManagerStoreDescriptor[]} store The\n         * store to add or its _descriptor_ (or array of stores or descriptors).\n         * @param {Number} [position] The relative position of the store. If `fromStore` is specified the position\n         * will be taken relative to it. If not specified then store(s) will be appended to the end of collection.\n         * Otherwise, it will be just a position in stores collection.\n         *\n         * ```javascript\n         * // insert stores store4, store5 to the start of sequence\n         * crudManager.addStoreToApplySequence([ store4, store5 ], 0);\n         * ```\n         * @param {String|Core.data.Store|CrudManagerStoreDescriptor} [fromStore] The store relative to which position\n         * should be calculated. Can be defined as a store identifier, instance or its descriptor (the result of\n         * {@link #function-getStoreDescriptor} call).\n         *\n         * ```javascript\n         * // insert store6 just before a store having storeId equal to 'foo'\n         * crudManager.addStoreToApplySequence(store6, 0, 'foo');\n         *\n         * // insert store7 just after store3 store\n         * crudManager.addStoreToApplySequence(store7, 1, store3);\n         * ```\n         * @category CRUD\n         */\n        addStoreToApplySequence(store, position, fromStore) {\n            if (!store) {\n                return;\n            }\n\n            store = ArrayHelper.asArray(store);\n\n            const\n                me   = this,\n                // loop over list of stores to add\n                data = store.reduce((collection, store) => {\n                    const s = me.getStoreDescriptor(store);\n                    s && collection.push(s);\n                    return collection;\n                }, []);\n\n            // if no position specified then append stores to the end\n            if (typeof position === 'undefined') {\n                me.syncApplySequence.push(...data);\n\n                // if position specified\n            }\n            else {\n                let pos = position;\n                // if specified the store relative to which we should insert new one(-s)\n                if (fromStore) {\n                    if (fromStore instanceof Store || typeof fromStore !== 'object') fromStore = me.getStoreDescriptor(fromStore);\n                    // get its position\n                    pos += me.syncApplySequence.indexOf(fromStore);\n                }\n                // insert new store(-s)\n                //me.syncApplySequence.splice.apply(me.syncApplySequence, [].concat([pos, 0], data));\n                me.syncApplySequence.splice(pos, 0, ...data);\n            }\n\n            const sequenceKeys = me.syncApplySequence.map(({ storeId }) => storeId);\n\n            me.orderedCrudStores = [...me.syncApplySequence];\n            me.crudStores.forEach(storeDesc => {\n                if (!sequenceKeys.includes(storeDesc.storeId)) {\n                    me.orderedCrudStores.push(storeDesc);\n                }\n            });\n        }\n\n        /**\n         * Removes a store from the alternative sync sequence.\n         *\n         * ```javascript\n         * // remove store having storeId equal to \"foo\"\n         * crudManager.removeStoreFromApplySequence(\"foo\");\n         * ```\n         *\n         * @param {CrudManagerStoreDescriptor|String|Core.data.Store} store The store to remove. Either the store\n         * descriptor, store identifier or store itself.\n         * @category CRUD\n         */\n        removeStoreFromApplySequence(store) {\n            const index = this.syncApplySequence.findIndex(s => s === store || s.store === store || s.storeId === store);\n            if (index > -1) {\n                this.syncApplySequence.splice(index, 1);\n\n                // ordered crud stores list starts with syncApplySequence, we can use same index\n                this.orderedCrudStores.splice(index, 1);\n            }\n        }\n\n        hasApplySequenceStore(store) {\n            return this.syncApplySequence.some(s => s === store || s.store === store || s.storeId === store);\n        }\n\n        //endregion\n\n        //region Events\n\n        // Remove stores that are destroyed, to not try and apply response changes etc. to them\n        onCrudStoreDestroy({ source : store }) {\n            this.removeCrudStore(store);\n        }\n\n        onCrudStoreChange(event) {\n            const me = this;\n\n            if (me.crudIgnoreUpdates) {\n                return;\n            }\n\n            /**\n             * Fires when data in any of the registered data stores is changed.\n             * ```javascript\n             *     crudManager.on('hasChanges', function (crud) {\n             *         // enable persist changes button when some store gets changed\n             *         saveButton.enable();\n             *     });\n             * ```\n             * @event hasChanges\n             * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n             */\n\n            if (me.crudStoreHasChanges(event?.source)) {\n                me.trigger('hasChanges');\n\n                if (me.autoSync) {\n                    me.scheduleAutoSync();\n                }\n            }\n            else {\n                me.trigger('noChanges');\n            }\n        }\n\n        /**\n         * Suspends automatic sync upon store changes. Can be called multiple times (it uses an internal counter).\n         * @category CRUD\n         */\n        suspendAutoSync() {\n            this.autoSyncSuspendCounter++;\n        }\n\n        /**\n         * Resumes automatic sync upon store changes. Will schedule a sync if the internal counter is 0.\n         * @param {Boolean} [doSync=true] Pass `true` to schedule a sync after resuming (if there are pending\n         * changes) and `false` to not persist the changes.\n         * @category CRUD\n         */\n        resumeAutoSync(doSync = true) {\n            const me = this;\n\n            me.autoSyncSuspendCounter--;\n\n            if (me.autoSyncSuspendCounter <= 0) {\n                me.autoSyncSuspendCounter = 0;\n\n                // if configured to trigger persisting and there are changes\n                if (doSync && me.autoSync && me.crudStoreHasChanges()) {\n                    me.scheduleAutoSync();\n                }\n            }\n        }\n\n        get isAutoSyncSuspended() {\n            return this.autoSyncSuspendCounter > 0;\n        }\n\n        scheduleAutoSync() {\n            const me = this;\n\n            // add deferred call if it's not scheduled yet\n            if (!me.hasTimeout('autoSync') && !me.isAutoSyncSuspended) {\n                me.setTimeout({\n                    name : 'autoSync',\n                    fn   : () => {\n                        me.sync().catch(error => {\n                            // <debug>\n                            if (!me.hasListener('syncFail') && !me.hasListener('requestFail') && !me.onSyncFail && !me.onRequestFail) {\n                                console.warn('CrudManager error while auto-syncing the data (please setup \"syncFail\" or \"requestFail\" event listeners to handle such cases)\\n', error);\n                            }\n                            // </debug>\n                        });\n                    },\n                    delay : me.autoSyncTimeout\n                });\n            }\n        }\n\n        async triggerFailedRequestEvents(request, response, responseText, fetchOptions) {\n            const { options, type : requestType } = request;\n\n            /**\n             * Fires when a request fails.\n             * @event requestFail\n             * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager instance.\n             * @param {'sync'|'load'} requestType The request type (`sync` or `load`).\n             * @param {Object} response The decoded server response object.\n             * @param {String} responseText The raw server response text\n             * @param {Object} responseOptions The response options.\n             */\n            this.trigger('requestFail', { requestType, response, responseText, responseOptions : fetchOptions });\n            /**\n             * Fires when a {@link #function-load load request} fails.\n             * @event loadFail\n             * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager instance.\n             * @param {Object} response The decoded server response object.\n             * @param {String} responseText The raw server response text\n             * @param {Object} responseOptions The response options.\n             * @params {Object} options Options provided to the {@link #function-load} method.\n             */\n            /**\n             * Fires when a {@link #function-sync sync request} fails.\n             * @event syncFail\n             * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager instance.\n             * @param {Object} response The decoded server response object.\n             * @param {String} responseText The raw server response text\n             * @param {Object} responseOptions The response options.\n             */\n            this.trigger(requestType + 'Fail', { response, responseOptions : fetchOptions, responseText, options });\n        }\n\n        async internalOnResponse(request, responseText, fetchOptions) {\n            const\n                me                              = this,\n                response                        = responseText ? me.decode(responseText) : null,\n                { options, type : requestType } = request;\n\n            if (responseText && !response) {\n                console.error('Failed to parse response: ' + responseText);\n            }\n\n            if (!response || (me.skipSuccessProperty ? response.success === false : !response.success)) {\n                me.triggerFailedRequestEvents(request, response, responseText, fetchOptions);\n            }\n            else if (\n                me.trigger('beforeResponseApply', { requestType, response }) !== false &&\n                me.trigger(`before${StringHelper.capitalize(requestType)}Apply`, { response, options }) !== false\n            ) {\n                me.crudRevision = response.revision;\n\n                await me.applyResponse(request, response, options);\n\n                // Might have been destroyed while applying response\n                if (me.isDestroyed) {\n                    return;\n                }\n\n                /**\n                 * Fires on successful request completion after data gets applied to the stores.\n                 * @event requestDone\n                 * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                 * @param {'sync'|'load'} requestType The request type (`sync` or `load`).\n                 * @param {Object} response The decoded server response object.\n                 * @param {Object} responseOptions The server response options.\n                 */\n                me.trigger('requestDone', { requestType, response, responseOptions : fetchOptions });\n                /**\n                 * Fires on successful {@link #function-load load request} completion after data gets loaded to the stores.\n                 * @event load\n                 * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                 * @param {Object} response The decoded server response object.\n                 * @param {Object} responseOptions The server response options.\n                 * @params {Object} options Options provided to the {@link #load} method.\n                 */\n                /**\n                 * Fires on successful {@link #function-sync sync request} completion.\n                 * @event sync\n                 * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                 * @param {Object} response The decoded server response object.\n                 * @param {Object} responseOptions The server response options.\n                 */\n                me.trigger(requestType, { response, responseOptions : fetchOptions, options });\n\n                if (requestType === 'load' || !me.crudStoreHasChanges()) {\n                    /**\n                     * Fires when registered stores get into state when they don't have any\n                     * not persisted change. This happens after {@link #function-load} or {@link #function-sync} request\n                     * completion. Or this may happen after a record update which turns its fields back to their original state.\n                     *\n                     * ```javascript\n                     * crudManager.on('nochanges', function (crud) {\n                     *     // disable persist changes button when there is no changes\n                     *     saveButton.disable();\n                     * });\n                     * ```\n                     *\n                     * @event noChanges\n                     * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                     */\n                    me.trigger('noChanges');\n\n                    if (requestType === 'load') {\n                        me.emitCrudStoreEvents(request.pack.stores, 'afterRequest');\n                    }\n                }\n            }\n\n            return response;\n        }\n\n        //endregion\n\n        //region Changes tracking\n\n        suspendChangesTracking() {\n            this.crudIgnoreUpdates++;\n        }\n\n        resumeChangesTracking(skipChangeCheck) {\n            if (this.crudIgnoreUpdates && !--this.crudIgnoreUpdates && !skipChangeCheck) {\n                this.onCrudStoreChange();\n            }\n        }\n\n        get isBatchingChanges() {\n            return this.crudIgnoreUpdates > 0;\n        }\n\n        /**\n         * Returns `true` if any of registered stores (or some particular store) has non persisted changes.\n         *\n         * ```javascript\n         * // if we have any unsaved changes\n         * if (crudManager.crudStoreHasChanges()) {\n         *     // persist them\n         *     crudManager.sync();\n         * // otherwise\n         * } else {\n         *     alert(\"There are no unsaved changes...\");\n         * }\n         * ```\n         *\n         * @param {String|Core.data.Store} [storeId] The store identifier or store instance to check changes for.\n         * If not specified then will check changes for all of the registered stores.\n         * @returns {Boolean} `true` if there are not persisted changes.\n         * @category CRUD\n         */\n        crudStoreHasChanges(storeId) {\n            return storeId\n                ? this.isCrudStoreDirty(this.getCrudStore(storeId))\n                : this.crudStores.some(config => this.isCrudStoreDirty(config.store));\n        }\n\n        isCrudStoreDirty(store) {\n            return Boolean(store.changes);\n        }\n\n        //endregion\n\n        //region Load\n\n        doAutoLoad() {\n            return this.load().catch(error => {\n                // <debug>\n                if (!this.isDestroyed && !this.hasListener('loadFail') && !this.hasListener('requestFail')) {\n                    console.warn('CrudManager error while auto-loading the data (please setup \"loadFail\" or \"requestFail\" event listeners to handle such cases)\\n', error);\n                }\n                // </debug>\n            });\n        }\n\n        emitCrudStoreEvents(stores, eventName, eventParams) {\n            const event = { action : 'read' + eventName, ...eventParams };\n\n            for (const store of this.crudStores) {\n                if (stores.includes(store.storeId)) {\n                    store.store.trigger(eventName, event);\n                }\n            }\n        }\n\n        getLoadPackage(options) {\n            const\n                pack        = {\n                    type      : 'load',\n                    requestId : this.requestId\n                },\n                stores      = this.crudStores,\n                optionsCopy = Object.assign({}, options);\n\n            // This is a special option which does not apply to a store.\n            // It's used as options to the AjaxTransport#sendRequest method\n            delete optionsCopy.request;\n\n            pack.stores = stores.map(store => {\n                const\n                    opts     = optionsCopy?.[store.storeId],\n                    pageSize = store.pageSize || store.store?.pageSize;\n\n                // <remove-on-release>\n                // TODO: PORT currently no support for remote filters\n                // if the store uses remote filtering\n                // if (store.store.remoteFilter && filterParam) {\n                //\n                //     opts = opts || {};\n                //\n                //     var filters = [];\n                //\n                //     store.store.getFilters().each(function(f) {\n                //         filters.push(f.serialize());\n                //     });\n                //\n                //     // put filters info into the package\n                //     opts[filterParam] = filters;\n                // }\n                // TODO: PORT currently no support for paging\n                // </remove-on-release>\n                if (opts || pageSize) {\n                    const\n                        params = Object.assign({\n                            storeId : store.storeId,\n                            page    : 1\n                        }, opts);\n\n                    if (pageSize) {\n                        params.pageSize = pageSize;\n                    }\n\n                    store.currentPage = params.page;\n\n                    // Remove from common request options\n                    if (opts) {\n                        delete optionsCopy[store.storeId];\n                    }\n\n                    return params;\n                }\n\n                return store.storeId;\n            });\n\n            // Apply common request options\n            Object.assign(pack, optionsCopy);\n\n            return pack;\n        }\n\n        loadCrudStore(store, data, options) {\n            const rows = data?.rows;\n\n            if (options?.append || data?.append) {\n                store.add(rows);\n            }\n            else {\n                store.data = rows;\n            }\n\n            store.trigger('load', { data : rows });\n        }\n\n        loadDataToCrudStore(storeDesc, data, options) {\n            const\n                store = storeDesc.store,\n                rows  = data?.rows;\n\n            store.__loading = true;\n\n            if (rows) {\n                this.loadCrudStore(store, data, options, storeDesc);\n            }\n\n            store.__loading = false;\n        }\n\n        /**\n         * Loads data to the Crud Manager\n         * @param {Object} response A simple object representing the data.\n         * The object structure matches the decoded `load` response structure:\n         *\n         * ```js\n         * // load static data into crudManager\n         * crudManager.loadCrudManagerData({\n         *     success   : true,\n         *     resources : {\n         *         rows : [\n         *             { id : 1, name : 'John' },\n         *             { id : 2, name : 'Abby' }\n         *         ]\n         *     }\n         * });\n         * ```\n         * @param {Object} [options] Extra data loading options.\n         * @category CRUD\n         */\n        loadCrudManagerData(response, options = {}) {\n            // we don't want to react to store changes during loading of them\n            this.suspendChangesTracking();\n\n            // we load data to the stores in the order they're kept in this.stores array\n            this.crudStores.forEach(storeDesc => {\n                const\n                    storeId = storeDesc.storeId,\n                    data    = response[storeId];\n\n                if (data) {\n                    this.loadDataToCrudStore(storeDesc, data, options[storeId]);\n                }\n            });\n\n            this.resumeChangesTracking(true);\n        }\n\n        /**\n         * Returns true if the crud manager is currently loading data\n         * @property {Boolean}\n         * @readonly\n         * @category CRUD\n         */\n        get isCrudManagerLoading() {\n            return Boolean(this.activeRequests.load || this.applyingLoadResponse);\n        }\n\n        /**\n         * Returns true if the crud manager is currently syncing data\n         * @property {Boolean}\n         * @readonly\n         * @category CRUD\n         */\n        get isCrudManagerSyncing() {\n            return Boolean(this.activeRequests.sync || this.applyingSyncResponse);\n        }\n\n        get isLoadingOrSyncing() {\n            return Boolean(this.isCrudManagerLoading || this.isCrudManagerSyncing);\n        }\n\n        /**\n         * Loads data to the stores registered in the crud manager. For example:\n         *\n         * ```javascript\n         * crudManager.load(\n         *     // here are request parameters\n         *     {\n         *         store1 : { append : true, page : 3, smth : 'foo' },\n         *         store2 : { page : 2, bar : '!!!' }\n         *     }\n         * ).then(\n         *     () => alert('OMG! It works!'),\n         *     ({ response, cancelled }) => console.log(`Error: ${cancelled ? 'Cancelled' : response.message}`)\n         * );\n         * ```\n         *\n         * ** Note: ** If there is an incomplete load request in progress then system will try to cancel it by calling {@link #function-cancelRequest}.\n         * @param {Object|String} [options] The request parameters or a URL.\n         * @param {Object} [options.request] An object which contains options to merge\n         * into the options which are passed to {@link Scheduler/crud/transport/AjaxTransport#function-sendRequest}.\n         * ```javascript\n         * {\n         *     store1 : { page : 3, append : true, smth : 'foo' },\n         *     store2 : { page : 2, bar : '!!!' },\n         *     request : {\n         *         params : {\n         *             startDate : '2021-01-01'\n         *         }\n         *     }\n         * },\n         * ```\n         *\n         * Omitting request arg:\n         * ```javascript\n         * crudManager.load().then(\n         *     () => alert('OMG! It works!'),\n         *     ({ response, cancelled }) => console.log(`Error: ${cancelled ? 'Cancelled' : response.message}`)\n         * );\n         * ```\n         *\n         * When presented it should be an object where keys are store Ids and values are, in turn, objects\n         * of parameters related to the corresponding store. These parameters will be transferred in each\n         * store's entry in the `stores` property of the POST data.\n         *\n         * Additionally, for flat stores `append: true` can be specified to add loaded records to the existing records,\n         * default is to remove corresponding store's existing records first.\n         * **Please note** that for delta loading you can also use an {@link #config-trackResponseType alternative approach}.\n         * @param {'sync'|'load'} [options.request.type] The request type. Either `load` or `sync`.\n         * @param {String} [options.request.url] The URL for the request. Overrides the URL defined in the `transport`\n         * object\n         * @param {String} [options.request.data] The encoded _Crud Manager_ request data.\n         * @param {Object} [options.request.params] An object specifying extra HTTP params to send with the request.\n         * @param {Function} [options.request.success] A function to be started on successful request transferring.\n         * @param {String} [options.request.success.rawResponse] `Response` object returned by the\n         * [fetch api](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n         * @param {Function} [options.request.failure] A function to be started on request transfer failure.\n         * @param {String} [options.request.failure.rawResponse] `Response` object returned by the\n         * [fetch api](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n         * @param {Object} [options.request.thisObj] `this` reference for the above `success` and `failure` functions.\n         * @returns {Promise} Promise, which is resolved if request was successful.\n         * Both the resolve and reject functions are passed a `state` object. State object has following structure:\n         *\n         * ```\n         * {\n         *     cancelled       : Boolean, // **optional** flag, which is present when promise was rejected\n         *     rawResponse     : String,  // raw response from ajax request, either response xml or text\n         *     rawResponseText : String,  // raw response text as String from ajax request\n         *     response        : Object,  // processed response in form of object\n         *     options         : Object   // options, passed to load request\n         * }\n         * ```\n         *\n         * If promise was rejected by {@link #event-beforeLoad} event, `state` object will have the following structure:\n         *\n         * ```\n         * {\n         *     cancelled : true\n         * }\n         * ```\n         * @category CRUD\n         * @async\n         */\n        load(options) {\n            if (typeof options === 'string') {\n                options = {\n                    request : {\n                        url : options\n                    }\n                };\n            }\n\n            const\n                me   = this,\n                pack = me.getLoadPackage(options);\n\n            me._autoLoadPromise = null;\n\n            return new Promise((resolve, reject) => {\n                /**\n                 * Fires before {@link #function-load load request} is sent. Return `false` to cancel load request.\n                 * @event beforeLoad\n                 * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                 * @param {Object} pack The data package which contains data for all stores managed by the crud manager.\n                 */\n                if (me.trigger('beforeLoad', { pack }) !== false) {\n                    // if another load request is in progress let's cancel it\n                    const { load } = me.activeRequests;\n\n                    if (load) {\n                        me.cancelRequest(load.desc, load.reject);\n\n                        me.trigger('loadCanceled', { pack });\n                    }\n\n                    // <remove-on-release>\n                    // TODO: refactor this\n                    // </remove-on-release>\n                    const request = Objects.assign({\n                        id      : pack.requestId,\n                        data    : me.encode(pack),\n                        type    : 'load',\n                        success : me.onCrudRequestSuccess,\n                        failure : me.onCrudRequestFailure,\n                        thisObj : me\n                    }, options?.request);\n\n                    me.activeRequests.load = {\n                        type : 'load',\n                        options,\n                        pack,\n                        resolve,\n                        reject(...args) {\n                            // sendRequest will start a fetch promise, which we cannot reject from here. In fact what we\n                            // need to do, is to make fetch.then() to not call any real handlers. Which is what we do here.\n                            request.success = request.failure = null;\n                            reject(...args);\n                        },\n                        id   : pack.requestId,\n                        desc : me.sendRequest(request)\n                    };\n\n                    me.emitCrudStoreEvents(pack.stores, 'loadStart');\n\n                    me.trigger('loadStart', { pack });\n                }\n                else {\n                    /**\n                     * Fired after {@link #function-load load request} was canceled by some {@link #event-beforeLoad}\n                     * listener or due to incomplete prior load request.\n                     * @event loadCanceled\n                     * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                     * @param {Object} pack The data package which contains data for all stores managed by the crud\n                     * manager.\n                     */\n                    me.trigger('loadCanceled', { pack });\n                    reject({ cancelled : true });\n                }\n            });\n        }\n\n        getActiveCrudManagerRequest(requestType) {\n            let request = this.activeRequests[requestType];\n\n            if (!request && this.trackResponseType) {\n                request = Object.values(this.activeRequests)[0];\n            }\n\n            return request;\n        }\n\n        //endregion\n\n        //region Changes (prepare, process, get)\n\n        prepareAddedRecordData(record, storeInfo) {\n            const\n                me                   = this,\n                { store }            = storeInfo,\n                { isTree }           = store,\n                phantomIdField       = storeInfo.phantomIdField || me.phantomIdField,\n                phantomParentIdField = storeInfo.phantomParentIdField || me.phantomParentIdField,\n                subStoreFields       = store.modelClass.allFields.filter(field => field.subStore),\n                cls                  = record.constructor,\n                data                 = Object.assign(record.persistableData, {\n                    [phantomIdField] : record.id\n                });\n\n            if (isTree) {\n                const { parent } = record;\n\n                if (parent && !parent.isRoot && parent.isPhantom) {\n                    data[phantomParentIdField] = parent.id;\n                }\n            }\n\n            if (me.resetIdsBeforeSync) {\n                ObjectHelper.deletePath(data, cls.idField);\n            }\n\n            // If we have store fields that should be persisted w/ Crud Manager protocol\n            subStoreFields.forEach(field => {\n                const subStore = record.get(field.name);\n\n                if (subStore.allCount) {\n                    data[field.dataSource] = {\n                        added : subStore.getRange()\n                            .map(record => me.prepareAddedRecordData(record, { store : subStore }))\n                    };\n                }\n            });\n\n            return data;\n        }\n\n        prepareAdded(list, storeInfo) {\n            return list.filter(record => record.isValid).map(record => this.prepareAddedRecordData(record, storeInfo));\n        }\n\n        prepareUpdated(list, storeInfo) {\n            const\n                { store }            = storeInfo,\n                { isTree }           = store,\n                writeAllFields       = storeInfo.writeAllFields || (storeInfo.writeAllFields !== false && this.writeAllFields),\n                phantomParentIdField = storeInfo.phantomParentIdField || this.phantomParentIdField,\n                subStoreFields       = store.modelClass.allFields.filter(field => field.subStore);\n\n            // <remove-on-release>\n            // TODO: root node included into store.modified need to get rid of it since we don't persist it\n            // </remove-on-release>\n            if (storeInfo.store.tree) {\n                const rootNode = storeInfo.store.rootNode;\n                list = list.filter(record => record !== rootNode);\n            }\n\n            return list.filter(record => record.isValid).reduce((data, record) => {\n                let recordData;\n\n                // write all fields\n                if (writeAllFields) {\n                    recordData = record.persistableData;\n                }\n                else {\n                    recordData = record.modificationDataToWrite;\n                }\n\n                if (isTree) {\n                    const { parent } = record;\n\n                    if (parent && !parent.isRoot && parent.isPhantom) {\n                        recordData[phantomParentIdField] = parent.id;\n                    }\n                }\n\n                // If we have store fields that should be persisted w/ Crud Manager protocal\n                subStoreFields.forEach(field => {\n                    const subStore = record.get(field.name);\n\n                    recordData[field.dataSource] = this.getCrudStoreChanges({ store : subStore });\n                });\n\n                // recordData can be null\n                if (!ObjectHelper.isEmpty(recordData)) {\n                    data.push(recordData);\n                }\n\n                return data;\n            }, []);\n        }\n\n        prepareRemoved(list) {\n            return list.map(record => {\n                const cls = record.constructor;\n\n                return ObjectHelper.setPath({}, cls.idField, record.id);\n            });\n        }\n\n        getCrudStoreChanges(storeDescriptor) {\n            const { store } = storeDescriptor;\n\n            let { added = [], modified : updated = [], removed = [] } = (store.changes || {}),\n                result;\n\n            if (added.length) added = this.prepareAdded(added, storeDescriptor);\n            if (updated.length) updated = this.prepareUpdated(updated, storeDescriptor);\n            if (removed.length) removed = this.prepareRemoved(removed);\n\n            // if this store has changes\n            if (added.length || updated.length || removed.length) {\n                result = {};\n\n                if (added.length) result.added = added;\n                if (updated.length) result.updated = updated;\n                if (removed.length) result.removed = removed;\n            }\n\n            return result;\n        }\n\n        getChangesetPackage() {\n            const { changes } = this;\n\n            return changes || this.forceSync\n                ? {\n                    type      : 'sync',\n                    requestId : this.requestId,\n                    revision  : this.crudRevision,\n                    ...changes\n                } : null;\n        }\n\n        //endregion\n\n        //region Apply\n\n        /**\n         * Returns current changes as an object consisting of added/modified/removed arrays of records for every\n         * managed store, keyed by each store's `id`. Returns `null` if no changes exist. Format:\n         *\n         * ```javascript\n         * {\n         *     resources : {\n         *         added    : [{ name : 'New guy' }],\n         *         modified : [{ id : 2, name : 'Mike' }],\n         *         removed  : [{ id : 3 }]\n         *     },\n         *     events : {\n         *         modified : [{  id : 12, name : 'Cool task' }]\n         *     },\n         *     ...\n         * }\n         * ```\n         *\n         * @property {Object}\n         * @readonly\n         * @category CRUD\n         */\n        get changes() {\n            const data = {};\n\n            this.crudStores.forEach(store => {\n                const changes = this.getCrudStoreChanges(store);\n\n                if (changes) {\n                    data[store.storeId] = changes;\n                }\n            });\n\n            return Object.keys(data).length > 0 ? data : null;\n        }\n\n        getRowsToApplyChangesTo({ store, storeId }, storeResponse, storePack) {\n            const\n                me             = this,\n                { modelClass } = store,\n                idDataSource   = modelClass.idField,\n                // request data\n                {\n                    updated : requestUpdated,\n                    removed : requestRemoved\n                }              = storePack || {};\n\n            let rows, removed, remote;\n\n            // If the response contains the store section\n            if (storeResponse) {\n                remote = true;\n\n                const respondedIds = {};\n\n                // responded record changes/removals\n                rows    = storeResponse.rows?.slice() || [];\n                removed = storeResponse.removed?.slice() || [];\n\n                // Collect hash w/ identifiers of responded records\n                [...rows, ...removed].forEach(responseRecord => {\n                    const id = ObjectHelper.getPath(responseRecord, idDataSource);\n\n                    respondedIds[id] = true;\n                });\n\n                // If it's told to support providing server changes only in response\n                // CrudManager should collect other records to commit from current requested data\n                if (me.supportShortSyncResponse) {\n                    // append records requested to update (if not there already)\n                    requestUpdated?.forEach(data => {\n                        const id = ObjectHelper.getPath(data, idDataSource);\n\n                        // if response doesn't include\n                        if (!respondedIds[id]) {\n                            rows.push({ [idDataSource] : id });\n                        }\n                    });\n                    // append records requested to remove (if not there already)\n                    requestRemoved?.forEach(data => {\n                        const id = ObjectHelper.getPath(data, idDataSource);\n\n                        // if response doesn't include\n                        if (!respondedIds[id]) {\n                            removed.push({ [idDataSource] : id });\n                        }\n                    });\n                }\n\n            }\n            // If there is no this store section we use records mentioned in the current request\n            else if (requestUpdated || requestRemoved) {\n                remote  = false;\n                rows    = requestUpdated;\n                removed = requestRemoved;\n            }\n\n            // return nullish \"rows\"/\"removed\" if no entries\n            rows    = rows?.length ? rows : null;\n            removed = removed?.length ? removed : null;\n\n            return {\n                rows,\n                removed,\n                remote\n            };\n        }\n\n        applyChangesToStore(storeDesc, storeResponse, storePack) {\n            const\n                me                = this,\n                phantomIdField    = storeDesc.phantomIdField || me.phantomIdField,\n                { store }         = storeDesc,\n                idField           = store.modelClass.getFieldDataSource('id'),\n                subStoreFields    = store.modelClass.allFields.filter(field => field.subStore),\n                // collect records we need to process\n                { rows, removed, remote } = me.getRowsToApplyChangesTo(storeDesc, storeResponse, storePack),\n                added = [],\n                updated = [];\n\n            // Convert to the { updated, added } format accepted by stores\n            if (rows) {\n                for (const data of rows) {\n                    // Existing records are updated\n                    if (store.getById(data[phantomIdField] ?? data[idField])) {\n                        updated.push(data);\n                    }\n                    // Others added\n                    else {\n                        added.push(data);\n                    }\n                }\n            }\n\n            const extraLogEntries = [];\n\n            // Handle sub-stores (if any)\n            if (updated.length && subStoreFields.length) {\n\n                updated.forEach(updateData => {\n                    const\n                        record = store.getById(updateData[phantomIdField] ?? updateData[idField]),\n                        // find the request portion related to the record\n                        recordRequest = storePack.added?.find(t => t[phantomIdField] == updateData[phantomIdField]) ||\n                            storePack.updated?.find(t => t[idField] == updateData[idField]);\n\n                    const extraLogInfo = {};\n\n                    subStoreFields.forEach(field => {\n                        const store = record.get(field.name);\n\n                        me.applyChangesToStore({ store }, updateData[field.dataSource],\n                            recordRequest?.[field.dataSource]\n                        );\n\n                        // We're putting the store field entry to the log\n                        // just to indicate the fact it was actually changed.\n                        // The value will not be used for comparison so we can use any.\n                        extraLogInfo[field.dataSource] = 'foo';\n\n                        delete updateData[field.dataSource];\n                    });\n\n                    extraLogEntries.push([record, extraLogInfo]);\n                });\n            }\n\n            // process added/updated records\n            const log = store.applyChangeset({ removed, added, updated }, null, phantomIdField, remote, true);\n\n            extraLogEntries.forEach(([record, logEntry]) => Object.assign(log.get(record.id), logEntry));\n\n            return log;\n        }\n\n        applySyncResponse(response, request) {\n            const\n                me     = this,\n                stores = me.orderedCrudStores;\n\n            me.applyingChangeset = me.applyingSyncResponse = true;\n            me.suspendChangesTracking();\n\n            for (const store of stores) {\n                me.applyChangesToStore(store, response[store.storeId], request?.pack?.[store.storeId]);\n            }\n\n            me.resumeChangesTracking(true);\n            me.applyingChangeset = me.applyingSyncResponse = false;\n        }\n\n        applyLoadResponse(response, options) {\n            this.applyingLoadResponse = true;\n\n            this.loadCrudManagerData(response, options);\n\n            this.applyingLoadResponse = false;\n        }\n\n        async applyResponse(request, response, options) {\n            const\n                me = this,\n                // in trackResponseType mode we check response type before deciding how to react on the response\n                responseType = me.trackResponseType && response.type || request.type;\n\n            switch (responseType) {\n                case 'load' :\n                    if (me.validateResponse) {\n                        me.validateLoadResponse(response);\n                    }\n\n                    me.applyLoadResponse(response, options);\n                    break;\n                case 'sync' :\n                    if (me.validateResponse) {\n                        me.validateSyncResponse(response, request);\n                    }\n\n                    me.applySyncResponse(response, request);\n                    break;\n            }\n        }\n\n        /**\n         * Applies a set of changes, as an object keyed by store id, to the affected stores. This function is intended\n         * to use in apps that handle their own data syncing, it is not needed when using the CrudManager approach.\n         *\n         * Example of a changeset:\n         * ```javascript\n         * project.applyChangeset({\n         *     events : {\n         *         added : [\n         *             { id : 10, name : 'Event 10', startDate : '2022-06-07' }\n         *         ],\n         *         updated : [\n         *             { id : 5, name : 'Changed' }\n         *         ],\n         *         removed : [\n         *             { id : 1 }\n         *         ]\n         *     },\n         *     resources : { ... },\n         *     ...\n         * });\n         * ```\n         *\n         * Optionally accepts a `transformFn` to convert an incoming changeset to the expected format.\n         * See {@link Core/data/Store#function-applyChangeset} for more details.\n         *\n         * @param {Object} changes Changeset to apply, an object keyed by store id where each value follows the\n         * format described in {@link Core/data/Store#function-applyChangeset}\n         * @param {Function} [transformFn] Optional function used to preprocess a changeset per store in a different\n         * format, should return an object with the format expected by {@link Core/data/Store#function-applyChangeset}\n         * @param {String} [phantomIdField] Field used by the backend when communicating a record being assigned a\n         * proper id instead of a phantom id\n         */\n        applyChangeset(changes, transformFn = null, phantomIdField, logChanges = false) {\n            const\n                me  = this,\n                log = logChanges ? new Map() : undefined;\n\n            me.suspendAutoSync();\n            me.suspendChangesTracking();\n\n            for (const { store, phantomIdField } of me.orderedCrudStores) {\n                if (changes[store.id]) {\n                    const storeLog = store.applyChangeset(\n                        changes[store.id],\n                        transformFn,\n                        phantomIdField || me.phantomIdField,\n                        // mark this changeset as remote to enforce it\n                        true,\n                        logChanges\n                    );\n\n                    if (storeLog) {\n                        log.set(store.id, storeLog);\n                    }\n                }\n            }\n\n            me.resumeChangesTracking(true);\n            me.resumeAutoSync(false);\n\n            return log;\n        }\n\n        //endregion\n\n        /**\n         * Generates unique request identifier.\n         * @internal\n         * @template\n         * @returns {Number} The request identifier.\n         * @category CRUD\n         */\n        get requestId() {\n            return Number.parseInt(`${Date.now()}${(this._requestId++)}`);\n        }\n\n        /**\n         * Persists changes made on the registered stores to the server and/or receives changes made on the backend.\n         * Usage:\n         *\n         * ```javascript\n         * // persist and run a callback on request completion\n         * crud.sync().then(\n         *     () => console.log(\"Changes saved...\"),\n         *     ({ response, cancelled }) => console.log(`Error: ${cancelled ? 'Cancelled' : response.message}`)\n         * );\n         * ```\n         *\n         * ** Note: ** If there is an incomplete sync request in progress then system will queue the call and delay it\n         * until previous request completion.\n         * In this case {@link #event-syncDelayed} event will be fired.\n         *\n         * ** Note: ** Please take a look at {@link #config-autoSync} config. This option allows to persist changes\n         * automatically after any data modification.\n         *\n         * ** Note: ** By default a sync request is only sent if there are any local {@link #property-changes}. To\n         * always send a request when calling this function, configure {@link #config-forceSync} as `true`.\n         *\n         * @returns {Promise} Promise, which is resolved if request was successful.\n         * Both the resolve and reject functions are passed a `state` object. State object has the following structure:\n         * ```\n         * {\n         *     cancelled       : Boolean, // **optional** flag, which is present when promise was rejected\n         *     rawResponse     : String,  // raw response from ajax request, either response xml or text\n         *     rawResponseText : String,  // raw response text as String from ajax request\n         *     response        : Object,  // processed response in form of object\n         * }\n         * ```\n         * If promise was rejected by the {@link #event-beforeSync} event, `state` object will have this structure:\n         * ```\n         * {\n         *     cancelled : true\n         * }\n         * ```\n         * @category CRUD\n         * @async\n         */\n        sync() {\n            const me = this;\n\n            // A direct call to sync cancels any outstanding autoSync\n            me.clearTimeout('autoSync');\n\n            if (me.activeRequests.sync) {\n                // let's delay this call and start it only after server response\n                /**\n                 * Fires after {@link #function-sync sync request} was delayed due to incomplete previous one.\n                 * @event syncDelayed\n                 * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                 * @param {Object} arguments The arguments of {@link #function-sync} call.\n                 */\n                me.trigger('syncDelayed');\n\n                // Queue sync request after current one\n                return me.activeSyncPromise = me.activeSyncPromise.finally(() => me.sync());\n            }\n\n            // Store current request promise. While this one is pending, all following sync requests will create chain\n            // of sequential promises\n            return me.activeSyncPromise = new Promise((resolve, reject) => {\n                // get current changes set package\n                const pack = me.getChangesetPackage();\n\n                // if no data to persist we resolve immediately\n                if (!pack) {\n                    resolve(null);\n                    return;\n                }\n\n                /**\n                 * Fires before {@link #function-sync sync request} is sent. Return `false` to cancel sync request.\n                 *\n                 * ```javascript\n                 * crudManager.on('beforesync', function() {\n                 *     // cannot persist changes before at least one record is added\n                 *     // to the `someStore` store\n                 *     if (!someStore.getCount()) return false;\n                 * });\n                 * ```\n                 * @event beforeSync\n                 * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                 * @param {Object} pack The data package which contains data for all stores managed by the crud manager.\n                 */\n                if (me.trigger('beforeSync', { pack }) !== false) {\n\n                    me.trigger('syncStart', { pack });\n\n                    // keep active request details\n                    me.activeRequests.sync = {\n                        type : 'sync',\n                        pack,\n                        resolve,\n                        reject,\n                        id   : pack.requestId,\n                        desc : me.sendRequest({\n                            id      : pack.requestId,\n                            data    : me.encode(pack),\n                            type    : 'sync',\n                            success : me.onCrudRequestSuccess,\n                            failure : me.onCrudRequestFailure,\n                            thisObj : me\n                        })\n                    };\n                }\n                else {\n                    /**\n                     * Fires after {@link #function-sync sync request} was canceled by some {@link #event-beforeSync} listener.\n                     * @event syncCanceled\n                     * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                     * @param {Object} pack The data package which contains data for all stores managed by the crud manager.\n                     */\n                    me.trigger('syncCanceled', { pack });\n                    reject({ cancelled : true });\n                }\n            }).catch(error => {\n                // If the request was not cancelled in beforeSync listener, forward the error so the user's `catch` handler can catch it\n                if (error && !error.cancelled) {\n                    throw error;\n                }\n\n                // Pass the error object as a param to the next `then` chain\n                return error;\n            });\n        }\n\n        async onCrudRequestSuccess(rawResponse, fetchOptions, request) {\n            const\n                me = this,\n                {\n                    type : requestType,\n                    id   : requestId\n                }  = request;\n\n            if (me.isDestroyed) return;\n\n            let responseText = '';\n\n            request = me.activeRequests[requestType];\n\n            // we throw exception below to let events trigger first in internalOnResponse() call\n            try {\n                responseText = await rawResponse.text();\n            }\n            catch (e) {\n            }\n\n            // since we break the method w/ promises chain ..need to check if the instance is not destroyed in the meantime\n            if (me.isDestroyed) return;\n\n            // This situation should never occur.\n            // In the load() method, if a load is called while there is a load\n            // ongoing, the ongoing Transport request is cancelled and loadCanceled triggered.\n            // But having got here, it's too late to cancel a Transport request, so\n            // the operation is unregistered below.\n            // In the sync() method, if a sync is called while there is a sync\n            // ongoing, it waits until completion, before syncing.\n            // The activeRequest for any operation should NEVER be able to be\n            // replaced while this operation is ongoing, so this must be fatal.\n            if (request?.id !== requestId) {\n                throw new Error(`Interleaved ${requestType} operation detected`);\n            }\n\n            // Reset the active request info before we enter async code which could allow\n            // application code to run which could potentially call another request.\n            // It is too late for this request to be canceled - the activeRequest represented\n            // the Transport object and that has completed now.\n            me.activeRequests[requestType] = null;\n\n            const response = await me.internalOnResponse(request, responseText, fetchOptions);\n\n            // since we break the method w/ promises chain ..need to check if the instance is not destroyed in the meantime\n            if (me.isDestroyed) return;\n\n            if (!response || (me.skipSuccessProperty ? response?.success === false : !response?.success)) {\n                const error = {\n                    rawResponse,\n                    response,\n                    request\n                };\n                if (response?.message) {\n                    error.message = response.message;\n                }\n                request.reject(new CrudManagerRequestError(error));\n            }\n\n            // Successful request type done flag (this.crudLoaded or this.crudSynced)..\n            me['crud' + StringHelper.capitalize(request.type) + 'ed'] = true;\n\n            request.resolve({ response, rawResponse, responseText, request });\n        }\n\n        async onCrudRequestFailure(rawResponse, fetchOptions, request) {\n            const me = this;\n\n            if (me.isDestroyed) return;\n\n            request = me.activeRequests[request.type];\n\n            const\n                signal      = fetchOptions?.abortController?.signal,\n                wasAborted  = Boolean(signal?.aborted);\n\n            if (!wasAborted) {\n                let response,\n                    responseText = '';\n\n                try {\n                    responseText = await rawResponse.text();\n                    response = me.decode(responseText);\n                }\n                catch (e) {\n                }\n\n                // since we break the method w/ promises chain ..need to check if the instance is not destroyed in the meantime\n                if (me.isDestroyed) return;\n\n                me.triggerFailedRequestEvents(request, response, responseText, fetchOptions);\n\n                // since we break the method w/ promises chain ..need to check if the instance is not destroyed in the meantime\n                if (me.isDestroyed) return;\n\n                request.reject(new CrudManagerRequestError({\n                    rawResponse,\n                    request\n                }));\n            }\n\n            // reset the active request info\n            me.activeRequests[request.type] = null;\n        }\n\n        /**\n         * Accepts all changes in all stores, resets the modification tracking:\n         * * Clears change tracking for all records\n         * * Clears added\n         * * Clears modified\n         * * Clears removed\n         * Leaves the store in an \"unmodified\" state.\n         * @category CRUD\n         */\n        acceptChanges() {\n            this.crudStores.forEach(store => store.store.acceptChanges());\n        }\n\n        /**\n         * Reverts all changes in all stores and re-inserts any records that were removed locally. Any new uncommitted\n         * records will be removed.\n         * @category CRUD\n         */\n        revertChanges() {\n            // the method aliases revertCrudStoreChanges\n            this.revertCrudStoreChanges();\n        }\n\n        revertCrudStoreChanges() {\n            const { usesSingleAssignment } = this.eventStore;\n\n            // Ignore assignment store if using single assignment, otherwise reverting changes will undo changes from\n            // reverting the event store after reassignment\n            this.orderedCrudStores.forEach(({ store }) => (!store.isAssignmentStore || !usesSingleAssignment) && store.revertChanges());\n        }\n\n        /**\n         * Removes all stores and cancels active requests.\n         * @category CRUD\n         * @internal\n         */\n        doDestroy() {\n            const\n                me             = this,\n                { load, sync } = me.activeRequests;\n\n            load && me.cancelRequest(load.desc, load.reject);\n            sync && me.cancelRequest(sync.desc, sync.reject);\n\n            while (me.crudStores.length > 0) {\n                me.removeCrudStore(me.crudStores[0]);\n            }\n\n            super.doDestroy && super.doDestroy();\n        }\n    };\n};\n","import Base from '../../../Core/Base.js';\nimport AjaxHelper from '../../../Core/helper/AjaxHelper.js';\nimport Objects from '../../../Core/helper/util/Objects.js';\n\n/**\n * @module Scheduler/crud/transport/AjaxTransport\n */\n\n/**\n * Implements data transferring functional that can be used for {@link Scheduler.crud.AbstractCrudManager} super classing.\n * Uses the fetch API for transport, https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n *\n * @example\n * // create a new CrudManager using AJAX as a transport system and JSON for encoding\n * class MyCrudManager extends AjaxTransport(JsonEncode(AbstractCrudManager)) {}\n *\n * @abstract\n * @mixin\n */\nexport default Target => class AjaxTransport extends (Target || Base) {\n    static get $name() {\n        return 'AjaxTransport';\n    }\n\n    /**\n     * Configuration of the AJAX requests used by _Crud Manager_ to communicate with a server-side.\n     *\n     * ```javascript\n     * transport : {\n     *     load : {\n     *         url       : 'http://mycool-server.com/load.php',\n     *         // HTTP request parameter used to pass serialized \"load\"-requests\n     *         paramName : 'data',\n     *         // pass extra HTTP request parameter\n     *         params    : {\n     *             foo : 'bar'\n     *         }\n     *     },\n     *     sync : {\n     *         url     : 'http://mycool-server.com/sync.php',\n     *         // specify Content-Type for requests\n     *         headers : {\n     *             'Content-Type' : 'application/json'\n     *         }\n     *     }\n     * }\n     *```\n     * Since the class uses Fetch API you can use\n     * any its [Request interface](https://developer.mozilla.org/en-US/docs/Web/API/Request) options:\n     *\n     * ```javascript\n     * transport : {\n     *     load : {\n     *         url         : 'http://mycool-server.com/load.php',\n     *         // HTTP request parameter used to pass serialized \"load\"-requests\n     *         paramName   : 'data',\n     *         // pass few Fetch API options\n     *         method      : 'GET',\n     *         credentials : 'include',\n     *         cache       : 'no-cache'\n     *     },\n     *     sync : {\n     *         url         : 'http://mycool-server.com/sync.php',\n     *         // specify Content-Type for requests\n     *         headers     : {\n     *             'Content-Type' : 'application/json'\n     *         },\n     *         credentials : 'include'\n     *     }\n     * }\n     *```\n     *\n     * An object where you can set the following possible properties:\n     * @config {Object} transport\n     * @property {Object} [transport.load] Load requests configuration:\n     * @property {String} [transport.load.url] URL to request for data loading.\n     * @property {String} [transport.load.method='GET'] HTTP method to be used for load requests.\n     * @property {String} [transport.load.paramName='data'] Name of the parameter that will contain a serialized `load`\n     * request. The value is mandatory for requests using `GET` method (default for `load`) so if the value is not\n     * provided `data` string is used as default.\n     * This value is optional for HTTP methods like `POST` and `PUT`, the request body will be used for data\n     * transferring in these cases.\n     * @property {Object} [transport.load.params] An object containing extra HTTP parameters to pass to the server when\n     * sending a `load` request.\n     *\n     * ```javascript\n     * transport : {\n     *     load : {\n     *         url       : 'http://mycool-server.com/load.php',\n     *         // HTTP request parameter used to pass serialized \"load\"-requests\n     *         paramName : 'data',\n     *         // pass extra HTTP request parameter\n     *         // so resulting URL will look like: http://mycool-server.com/load.php?userId=123456&data=...\n     *         params    : {\n     *             userId : '123456'\n     *         }\n     *     },\n     *     ...\n     * }\n     * ```\n     * @property {Object<String,String>} [transport.load.headers] An object containing headers to pass to each server request.\n     *\n     * ```javascript\n     * transport : {\n     *     load : {\n     *         url       : 'http://mycool-server.com/load.php',\n     *         // HTTP request parameter used to pass serialized \"load\"-requests\n     *         paramName : 'data',\n     *         // specify Content-Type for \"load\" requests\n     *         headers   : {\n     *             'Content-Type' : 'application/json'\n     *         }\n     *     },\n     *     ...\n     * }\n     * ```\n     * @property {Object} [transport.load.fetchOptions] **DEPRECATED:** Any Fetch API options can be simply defined on\n     * the upper configuration level:\n     * ```javascript\n     * transport : {\n     *     load : {\n     *         url          : 'http://mycool-server.com/load.php',\n     *         // HTTP request parameter used to pass serialized \"load\"-requests\n     *         paramName    : 'data',\n     *         // Fetch API options\n     *         method       : 'GET',\n     *         credentials  : 'include'\n     *     },\n     *     ...\n     * }\n     * ```\n     * @property {Object} [transport.load.requestConfig] **DEPRECATED:** The config options can be defined on the upper\n     * configuration level.\n     * @property {Object} [transport.sync] Sync requests (`sync` in further text) configuration:\n     * @property {String} [transport.sync.url] URL to request for `sync`.\n     * @property {String} [transport.sync.method='POST'] HTTP request method to be used for `sync`.\n     * @property {String} [transport.sync.paramName=undefined] Name of the parameter in which `sync` data will be\n     * transferred. This value is optional for requests using methods like `POST` and `PUT`, the request body will be\n     * used for data transferring in this case (default for `sync`). And the value is mandatory for requests using `GET`\n     * method (if the value is not provided `data` string will be used as fallback).\n     * @property {Object} [transport.sync.params] HTTP parameters to pass with an HTTP request handling `sync`.\n     *\n     * ```javascript\n     * transport : {\n     *     sync : {\n     *         url    : 'http://mycool-server.com/sync.php',\n     *         // extra HTTP request parameter\n     *         params : {\n     *             userId : '123456'\n     *         }\n     *     },\n     *     ...\n     * }\n     * ```\n     * @property {Object<String,String>} [transport.sync.headers] HTTP headers to pass with an HTTP request handling `sync`.\n     *\n     * ```javascript\n     * transport : {\n     *     sync : {\n     *         url     : 'http://mycool-server.com/sync.php',\n     *         // specify Content-Type for \"sync\" requests\n     *         headers : {\n     *             'Content-Type' : 'application/json'\n     *         }\n     *     },\n     *     ...\n     * }\n     * ```\n     * @property {Object} [transport.sync.fetchOptions] **DEPRECATED:** Any Fetch API options can be simply defined on\n     * the upper configuration level:\n     * ```javascript\n     * transport : {\n     *     sync : {\n     *         url         : 'http://mycool-server.com/sync.php',\n     *         credentials : 'include'\n     *     },\n     *     ...\n     * }\n     * ```\n     * @property {Object} [transport.sync.requestConfig] **DEPRECATED:** The config options can be defined on the upper\n     * configuration level.\n     * @category CRUD\n     */\n\n    static get defaultMethod() {\n        return {\n            load : 'GET',\n            sync : 'POST'\n        };\n    }\n\n    /**\n     * Cancels a sent request.\n     * @param {Promise} requestPromise The Promise object wrapping the Request to be cancelled.\n     * The _requestPromise_ is the value returned from the corresponding {@link #function-sendRequest} call.\n     * @category CRUD\n     */\n    cancelRequest(requestPromise, reject) {\n        requestPromise.abort?.();\n        // <remove-on-release>\n        // TODO: fix this\n        // </remove-on-release>\n        if (!this.isDestroying) {\n            reject({ cancelled : true });\n        }\n    }\n\n    shouldUseBodyForRequestData(packCfg, method, paramName) {\n        return !(method === 'HEAD' || method === 'GET') && !paramName;\n    }\n\n    /**\n     * Sends a _Crud Manager_ request to the server.\n     * @param {Object} request The request configuration object having following properties:\n     * @param {'load'|'sync'} request.type The request type. Either `load` or `sync`.\n     * @param {String} request.url The URL for the request. Overrides the URL defined in the `transport` object\n     * @param {String} request.data The encoded _Crud Manager_ request data.\n     * @param {Object} request.params An object specifying extra HTTP params to send with the request.\n     * @param {Function} request.success A function to be started on successful request transferring.\n     * @param {String} request.success.rawResponse `Response` object returned by the [fetch api](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n     * @param {Function} request.failure A function to be started on request transfer failure.\n     * @param {String} request.failure.rawResponse `Response` object returned by the [fetch api](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n     * @param {Object} request.thisObj `this` reference for the above `success` and `failure` functions.\n     * @returns {Promise} The fetch Promise object.\n     * @fires beforeSend\n     * @async\n     * @category CRUD\n     */\n    sendRequest(request) {\n        const\n            me              = this,\n            { data }        = request,\n            transportConfig = me.transport[request.type] || {},\n            // clone parameters defined for this type of request\n            requestConfig   = Objects.assign({}, transportConfig, transportConfig.requestConfig);\n\n        if (request.url) {\n            requestConfig.url = request.url;\n        }\n\n        requestConfig.method = requestConfig.method || AjaxTransport.defaultMethod[request.type];\n        requestConfig.params = Objects.assign(requestConfig.params || {}, request.params);\n\n        let { paramName } = requestConfig;\n\n        // transfer package in the request body for some types of HTTP requests\n        if (me.shouldUseBodyForRequestData(transportConfig, requestConfig.method, paramName)) {\n            requestConfig.body = data;\n\n            // for requests having body we set Content-Type to 'application/json' by default\n            requestConfig.headers = requestConfig.headers || {};\n            requestConfig.headers['Content-Type'] = requestConfig.headers['Content-Type'] || 'application/json';\n        }\n        else {\n            // when we don't use body paramName is mandatory so fallback to 'data' as name\n            paramName = paramName || 'data';\n\n            requestConfig.params[paramName] = data;\n        }\n\n        if (!requestConfig.url) {\n            throw new Error('Trying to request without URL specified');\n        }\n\n        // sanitize request config\n        delete requestConfig.requestConfig;\n        delete requestConfig.paramName;\n\n        let ajaxPromise, resultPromise;\n\n        function performSend() {\n            // AjaxHelper.fetch call it \"queryParams\"\n            requestConfig.queryParams = requestConfig.params;\n\n            delete requestConfig.params;\n\n            let cancelled = false;\n\n            const fetchOptions = Objects.assign({}, requestConfig, requestConfig.fetchOptions);\n\n            ajaxPromise  = AjaxHelper.fetch(requestConfig.url, fetchOptions);\n\n            return ajaxPromise.catch(error => {\n                ajaxPromise.done = true;\n\n                me.trigger?.('responseReceived', { success : false });\n\n                const signal = fetchOptions.abortController?.signal;\n\n                if (signal) {\n                    cancelled = signal.aborted;\n\n                    if (!cancelled) {\n                        console.warn(error);\n                    }\n                }\n\n                return { error, cancelled };\n            }).then(response => {\n                ajaxPromise.done = true;\n\n                me.trigger?.('responseReceived', { success : Boolean(response?.ok) });\n\n                const callback = response?.ok ? request.success : request.failure;\n\n                return callback?.call(request.thisObj || me, response, fetchOptions, request);\n            });\n        }\n\n        /**\n         * Fires before a request is sent to the server.\n         *\n         * ```javascript\n         * crudManager.on('beforeSend', function ({ params, type }) {\n         *     // let's set \"sync\" request parameters\n         *     if (type == 'sync') {\n         *         // dynamically depending on \"flag\" value\n         *         if (flag) {\n         *             params.foo = 'bar';\n         *         }\n         *         else {\n         *             params.foo = 'smth';\n         *         }\n         *     }\n         * });\n         * ```\n         * @event beforeSend\n         * @param {Scheduler.crud.AbstractCrudManager} crudManager The CRUD manager.\n         * @param {Object} params HTTP request params to be passed in the request URL.\n         * @param {'sync'|'load'} requestType CrudManager request type (`load`/`sync`)\n         * @param {Object} requestConfig Configuration object for Ajax request call\n         * @async\n         */\n        const beforeSendResult = me.trigger('beforeSend', {\n            params      : requestConfig.params,\n            requestType : request.type,\n            requestConfig,\n            config      : request\n        });\n\n        if (Objects.isPromise(beforeSendResult)) {\n            resultPromise = beforeSendResult.then(performSend);\n        }\n        else {\n            resultPromise = performSend();\n        }\n\n        resultPromise.abort = () => {\n            if (!ajaxPromise.done) {\n                ajaxPromise.abort?.();\n            }\n        };\n\n        return resultPromise;\n    }\n};\n","import Base from '../../../Core/Base.js';\nimport StringHelper from '../../../Core/helper/StringHelper.js';\n\n/**\n * @module Scheduler/crud/encoder/JsonEncoder\n */\n\n/**\n * Implements data encoding functional that should be mixed to a {@link Scheduler.crud.AbstractCrudManager} sub-class.\n * Uses _JSON_ as an encoding system.\n *\n * @example\n * // create a new CrudManager using AJAX as a transport system and JSON for encoding\n * class MyCrudManager extends JsonEncode(AjaxTransport(AbstractCrudManager)) {}\n *\n * @mixin\n */\nexport default Target => class JsonEncoder extends (Target || Base) {\n    static get $name() {\n        return 'JsonEncoder';\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Configuration of the JSON encoder used by the _Crud Manager_.\n             *\n             * @config {Object}\n             * @property {Object} encoder.requestData Static data to send with the data request.\n             *\n             * ```js\n             * new CrudManager({\n             *     // add static \"foo\" property to all requests data\n             *     encoder : {\n             *         requestData : {\n             *             foo : 'Bar'\n             *         }\n             *     },\n             *     ...\n             * });\n             * ```\n             *\n             * The above snippet will result adding \"foo\" property to all requests data:\n             *\n             * ```json\n             *     {\n             *         \"requestId\"   : 756,\n             *         \"type\"        : \"load\",\n             *\n             *         \"foo\"         : \"Bar\",\n             *\n             *         \"stores\"      : [\n             *             ...\n             * ```\n             * @category CRUD\n             */\n            encoder : {}\n        };\n    }\n\n    /**\n     * Encodes a request object to _JSON_ encoded string. If encoding fails (due to circular structure), it returns null.\n     * Supposed to be overridden in case data provided by the _Crud Manager_ has to be transformed into format requested by server.\n     * @param {Object} requestData The request to encode.\n     * @returns {String} The encoded request.\n     * @category CRUD\n     */\n    encode(requestData) {\n        requestData = Object.assign({}, this.encoder?.requestData, requestData);\n\n        return StringHelper.safeJsonStringify(requestData);\n    }\n\n    /**\n     * Decodes (parses) a _JSON_ response string to an object. If parsing fails, it returns null.\n     * Supposed to be overridden in case data provided by server has to be transformed into format requested by the _Crud Manager_.\n     * @param {String} responseText The response text to decode.\n     * @returns {Object} The decoded response.\n     * @category CRUD\n     */\n    decode(responseText) {\n        return StringHelper.safeJsonParse(responseText);\n    }\n};\n","import AbstractCrudManagerMixin from '../../../Scheduler/crud/AbstractCrudManagerMixin.js';\nimport StringHelper from '../../../Core/helper/StringHelper.js';\nimport Base from '../../../Core/Base.js';\nimport AjaxTransport from '../../crud/transport/AjaxTransport.js';\nimport JsonEncoder from '../../crud/encoder/JsonEncoder.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Scheduler/data/mixin/ProjectCrudManager\n */\n\n/**\n * This mixin provides Crud Manager functionality supporting loading of scheduling engine projects.\n *\n * @mixin\n * @mixes Scheduler/crud/AbstractCrudManagerMixin\n * @mixes Scheduler/crud/transport/AjaxTransport\n * @mixes Scheduler/crud/encoder/JsonEncoder\n */\nexport default Target => class ProjectCrudManager extends (Target || Base).mixin(AbstractCrudManagerMixin, AjaxTransport, JsonEncoder) {\n\n    //region Config\n\n    static get defaultConfig() {\n        return {\n            project : null\n        };\n    }\n\n    startConfigure(config) {\n        // process the project first which ingests any configured data sources,\n        this.getConfig('project');\n\n        super.startConfigure(config);\n\n        this._changesToClear = new Map();\n    }\n\n    async doAutoLoad() {\n        const { project } = this;\n\n        // Delay autoLoad to after projects initial commit if configured with a project\n        if (project) {\n            await project.commitAsync();\n        }\n\n        return super.doAutoLoad();\n    }\n\n    applyProjectResponse(response) {\n        const\n            me = this,\n            { project } = me;\n\n        me.applyingProjectResponse = true;\n\n        const\n            startDateField = project.fieldMap.startDate,\n            endDateField   = project.fieldMap.endDate,\n            startDate      = ObjectHelper.getPath(response, startDateField.dataSource),\n            endDate        = ObjectHelper.getPath(response, endDateField.dataSource);\n\n        // With early rendering engine won't convert project dates in time, do it manually first\n        if (typeof startDate === 'string') {\n            ObjectHelper.setPath(response, startDateField.dataSource, startDateField.convert(startDate));\n        }\n        if (typeof endDate === 'string') {\n            ObjectHelper.setPath(response, endDateField.dataSource, endDateField.convert(endDate));\n        }\n\n        Object.assign(project, response);\n\n        me._changesToClear.set(me, response);\n\n        me.applyingProjectResponse = false;\n    }\n\n    loadCrudManagerData(response, options = {}) {\n        const\n            me = this,\n            { project } = me;\n\n        // We don't want to react on store changes while loading them\n        me.suspendChangesTracking();\n\n        super.loadCrudManagerData(...arguments);\n\n        // If there is project data provided\n        if (response?.project) {\n            // If the project is delaying its linking to a new graph instance\n            // wait till it detaches all records from the old graph\n            // and then apply the project data.\n            // Otherwise the project changes we apply here will be overridden when detaching from the old graph.\n            // Since the code copies last identifier values from the graph when detaching.\n            if (project.delayEnteringReplica) {\n                project.ion({\n                    recordsUnlinked : () => {\n                        me.suspendChangesTracking();\n                        me.applyProjectResponse(response.project);\n                        me.resumeChangesTracking();\n                    },\n                    once : true\n                });\n            }\n            else {\n                me.applyProjectResponse(response.project);\n            }\n        }\n\n        me.resumeChangesTracking();\n    }\n\n    async sync() {\n        const { project } = this;\n\n        // Suspend Crud Manager autoSync to not react on changes during commitAsync() call\n        this.suspendAutoSync();\n\n        // Make sure data is in a calculated state before syncing\n        if (project) {\n            await project.commitAsync();\n        }\n\n        if (this.isDestroying) {\n            return;\n        }\n\n        // resume autoSync silently\n        this.resumeAutoSync(false);\n\n        return super.sync();\n    }\n\n    async applyResponse(request, response, options) {\n        const me = this;\n\n        if (me.isDestroyed || me.project?.isDestroyed) {\n            return;\n        }\n\n        me.trigger('beforeApplyResponse');\n\n        await super.applyResponse(request, response, options);\n        // If there is the project data provided or it's not provided but short responses are enabled\n        // in such cases we treat a successful response covering all sent changes as much as that's possible\n        // so responding `project : { ... }` should not be really needed\n        if (response?.project || (me.supportShortSyncResponse && request?.pack?.project)) {\n            // apply the responded changes (or accept the requested ones)\n            me.applyProjectResponse(response.project || request?.pack?.project);\n        }\n\n        // if we have a project\n        if (me.project) {\n            let requestType = request.type;\n\n            // response can force its type\n            if (me.trackResponseType) {\n                requestType = response.type || requestType;\n            }\n\n            // Make a boolean flag indicating what has triggered the propagation (\"propagatingLoadChanges\" or  \"propagatingSyncChanges\")\n            const propagationFlag = `propagating${StringHelper.capitalize(requestType)}Changes`;\n\n            me.suspendAutoSync();\n            me[propagationFlag] = true;\n\n            const loud = me.project.isInitialCommit && !me.project.silenceInitialCommit;\n\n            // Wait till calculation gets done\n            await me.project.commitAsync();\n\n            me[propagationFlag] = false;\n\n            // for initial commit we still trigger the sync, but not for following\n            me.resumeAutoSync?.(loud);\n\n            // Accept changes came from the server (might have been destroyed while waiting above)\n            me.commitRespondedChanges?.();\n        }\n\n        // Trigger if we did not get destroyed while waiting above\n        me.trigger?.('applyResponse');\n    }\n\n    applySyncResponse(...args) {\n        const\n            me          = this,\n            stmDisabled = me.project?.stm.disabled;\n\n        if (stmDisabled === false && me.ignoreRemoteChangesInSTM) {\n            me.project.stm.disable();\n        }\n\n        super.applySyncResponse(...args);\n\n        if (stmDisabled === false) {\n            me.project.stm.enable();\n        }\n    }\n\n    shouldClearRecordFieldChange(record, field, value) {\n        const oldValue = record.getValue(field);\n\n        field = record.getFieldDefinition(field);\n\n        // If the field value matches the one responded from the server\n        // we silently accept it\n        return field?.isEqual ? field.isEqual(oldValue, value) : ObjectHelper.isEqual(oldValue, value);\n    }\n\n    commitRespondedChanges() {\n        // We silently accept changes came from the server\n        this._changesToClear.forEach((changes, record) => {\n            Object.entries(changes).forEach(([key, value]) => {\n                // If the field value matches the one responded from the server\n                // we silently accept it\n                if (this.shouldClearRecordFieldChange(record, key, value)) {\n                    delete record.meta.modified[key];\n                }\n            });\n        });\n\n        this._changesToClear.clear();\n    }\n\n    applyChangesToStore(storeDesc, storeResponse, storePack, ...rest) {\n        const changesMap = super.applyChangesToStore(storeDesc, storeResponse, storePack, ...rest);\n\n        // The changes enter graph first but not store until later, clearing changes in StoreChanges might still leave\n        // records modified. We need to clean up after the next propagation, so we store record changes in a map for now\n        if (changesMap.size && this.project) {\n            for (const [id, changes] of changesMap) {\n                const record = storeDesc.store.getById(id);\n                record && this._changesToClear.set(record, changes);\n            }\n        }\n\n        return changesMap;\n    }\n};\n","import Model from '../../../Core/data/Model.js';\n\n/**\n * @module Scheduler/model/mixin/ProjectModelCommon\n */\n\n/**\n * Mixin that provides helpful methods and properties for a `ProjectModel`. This mixin applies to all Bryntum products.\n * @mixin\n * @internal\n */\nexport default Target => class ProjectModelCommon extends (Target || Model) {\n    static $name = 'ProjectModelCommon';\n\n    static get configurable() {\n        return {\n            // <remove-on-release>\n            // TODO: json : null,\n            // </remove-on-release>\n\n            // Documented in Gantt/Scheduler/SchedulerPro version of ./model/ProjectModel since types differ\n            assignments  : null,\n            dependencies : null,\n            resources    : null,\n            timeRanges   : null\n        };\n    }\n\n    //region Inline data\n\n    get assignments() {\n        return this.assignmentStore.allRecords;\n    }\n\n    updateAssignments(assignments) {\n        this.assignmentStore.data = assignments;\n    }\n\n    get dependencies() {\n        return this.dependencyStore.allRecords;\n    }\n\n    updateDependencies(dependencies) {\n        this.dependencyStore.data = dependencies;\n    }\n\n    get resources() {\n        return this.resourceStore.allRecords;\n    }\n\n    updateResources(resources) {\n        this.resourceStore.data = resources;\n    }\n\n    get timeRanges() {\n        return this.timeRangeStore.allRecords;\n    }\n\n    getTimeRanges(startDate, endDate) {\n        const\n            store = this.timeRangeStore,\n            ret = [];\n\n        for (const timeSpan of store) {\n            // Collect occurrences for the recurring events in the record set\n            if (timeSpan.isRecurring) {\n                ret.push(...timeSpan.getOccurrencesForDateRange(startDate, endDate));\n            }\n            else if (timeSpan.startDate < endDate && startDate < timeSpan.endDate) {\n                ret.push(timeSpan);\n            }\n        }\n\n        return ret;\n    }\n\n    updateTimeRanges(timeRanges) {\n        this.timeRangeStore.data = timeRanges;\n    }\n\n    getResourceTimeRanges(startDate, endDate) {\n        const\n            store = this.resourceTimeRangeStore,\n            ret = [];\n\n        for (const timeSpan of store) {\n            // Collect occurrences for the recurring events in the record set\n            if (timeSpan.isRecurring) {\n                ret.push(...timeSpan.getOccurrencesForDateRange(startDate, endDate));\n            }\n            else if (timeSpan.startDate < endDate && startDate < timeSpan.endDate) {\n                ret.push(timeSpan);\n            }\n        }\n\n        return ret;\n    }\n\n    //endregion\n};\n","import TimeSpan from './TimeSpan.js';\nimport RecurringTimeSpan from './mixin/RecurringTimeSpan.js';\n\n/**\n * @module Scheduler/model/ResourceTimeRangeModel\n */\n\n/**\n * This class represent a single resource time range in your schedule.\n * To style the rendered elements, use {@link Scheduler.model.TimeSpan#field-cls} or {@link #field-timeRangeColor} field.\n * The class is used by the {@link Scheduler.feature.ResourceTimeRanges} feature.\n *\n * ## Recurring ranges support\n *\n * You can also make ranges recurring by adding a `recurrenceRule` to the range data.\n *\n * ```javascript\n *\n * // Make new store that supports time ranges recurrence\n * const store = new ResourceTimeRangeStore({\n *     data : [{        {\n *         id             : 1,\n *         resourceId     : 'r1',\n *         startDate      : '2019-01-01T11:00',\n *         endDate        : '2019-01-01T13:00',\n *         name           : 'Coffee break',\n *         // this time range should repeat every day\n *         recurrenceRule : 'FREQ=DAILY'\n *     }]\n * });\n * ```\n *\n * @extends Scheduler/model/TimeSpan\n */\nexport default class ResourceTimeRangeModel extends TimeSpan.mixin(RecurringTimeSpan) {\n    static $name = 'ResourceTimeRangeModel';\n\n    //region Fields\n\n    static fields = [\n        /**\n         * Id of the resource this time range is associated with\n         * @field {String|Number} resourceId\n         */\n        'resourceId',\n\n        /**\n         * Controls this time ranges primary color, defaults to using current themes default time range color.\n         * @field {String} timeRangeColor\n         */\n        'timeRangeColor'\n    ];\n\n    static relations = {\n        /**\n         * The associated resource, retrieved using a relation to a ResourceStore determined by the value assigned\n         * to `resourceId`. The relation also lets you access all time ranges on a resource through\n         * `ResourceModel#timeRanges`.\n         * @member {Scheduler.model.ResourceModel} resource\n         */\n        resource : {\n            foreignKey            : 'resourceId',\n            foreignStore          : 'resourceStore',\n            relatedCollectionName : 'timeRanges',\n            nullFieldOnRemove     : true\n        }\n    };\n\n    static domIdPrefix = 'resourcetimerange';\n\n    get domId() {\n        return `${this.constructor.domIdPrefix}-${this.id}`;\n    }\n\n    //endregion\n\n    // Used internally to differentiate between Event and ResourceTimeRange\n    get isResourceTimeRange() {\n        return true;\n    }\n\n    // To match EventModel API\n    get resources() {\n        return this.resource ? [this.resource] : [];\n    }\n\n    // To match EventModel API\n    get $linkedResources() {\n        return this.resources;\n    }\n}\n","import AjaxStore from '../../Core/data/AjaxStore.js';\nimport ResourceTimeRangeModel from '../model/ResourceTimeRangeModel.js';\nimport RecurringTimeSpansMixin from './mixin/RecurringTimeSpansMixin.js';\n\n/**\n * @module Scheduler/data/ResourceTimeRangeStore\n */\n\n/**\n * A class representing a collection of resource time ranges.\n * Contains a collection of {@link Scheduler.model.ResourceTimeRangeModel ResourceTimeRangeModel} records.\n * The class is used by the {@link Scheduler.feature.ResourceTimeRanges ResourceTimeRanges} feature.\n *\n * ## Recurring ranges support\n *\n * By default, the class doesn't support recurrence. In order to add its support\n * please use {@link Scheduler.data.mixin.RecurringTimeSpansMixin RecurringTimeSpansMixin} mixin\n * (the store model in turn should be mixed with {@link Scheduler/model/mixin/RecurringTimeSpan RecurringTimeSpan} class):\n *\n * ```js\n * // Mix RecurringTimeSpan (which adds recurrence support) to ResourceTimeRangeModel\n * class MyResourceTimeRange extends RecurringTimeSpan(ResourceTimeRangeModel) {};\n *\n * // Mix RecurringTimeSpansMixin (which adds recurrence support) to ResourceTimeRangeStore\n * class MyResourceTimeRangeStore extends RecurringTimeSpansMixin(ResourceTimeRangeStore) {\n *     static get defaultConfig() {\n *         return {\n *             // use our new MyResourceTimeRange model\n *             modelClass : MyResourceTimeRange\n *         };\n *     }\n * };\n *\n * // Make new store that supports time ranges recurrence\n * const store = new MyResourceTimeRangeStore({\n *     data : [{        {\n *         id             : 1,\n *         resourceId     : 'r1',\n *         startDate      : '2019-01-01T11:00',\n *         endDate        : '2019-01-01T13:00',\n *         name           : 'Coffee break',\n *         // this time range should repeat every day\n *         recurrenceRule : 'FREQ=DAILY'\n *     }]\n * });\n * ```\n *\n * @extends Core/data/AjaxStore\n */\nexport default class ResourceTimeRangeStore extends AjaxStore.mixin(RecurringTimeSpansMixin) {\n\n    static $name = 'ResourceTimeRangeStore';\n\n    static get defaultConfig() {\n        return {\n            /**\n             * CrudManager must load stores in the correct order. Lowest first.\n             * @private\n             */\n            loadPriority : 500,\n\n            /**\n             * CrudManager must sync stores in the correct order. Lowest first.\n             * @private\n             */\n            syncPriority : 500,\n\n            /**\n             * This store should be linked to a ResourceStore to link the time ranges to resources\n             * @config {Scheduler.data.ResourceStore}\n             */\n            resourceStore : null,\n\n            modelClass : ResourceTimeRangeModel,\n            storeId    : 'resourceTimeRanges'\n        };\n    }\n\n    set resourceStore(store) {\n        this._resourceStore = store;\n\n        // If store is assigned after configuration we need to init relations\n        if (!this.isConfiguring) {\n            this.initRelations(true);\n        }\n    }\n\n    get resourceStore() {\n        return this._resourceStore;\n    }\n\n    // Matching signature in EventStore to allow reusage of SchedulerStores#onInternalEventStoreChange()\n    getResourcesForEvent(resourceTimeRange) {\n        return [resourceTimeRange.resource];\n    }\n\n    /**\n     * Get resource time ranges intersecting the specified date range for a resource.\n     *\n     * The result is sorted by `startDate`.\n     *\n     * @param {Object} options Options\n     * @param {Scheduler.model.ResourceModel} options.resourceRecord Resource record\n     * @param {Date} options.startDate Start date of the range\n     * @param {Date} options.endDate End date of the range\n     * @returns {Scheduler.model.ResourceTimeRangeModel[]}\n     */\n    getRanges({ resourceRecord, startDate, endDate }) {\n        const rangesInDateRange = resourceRecord.timeRanges.flatMap(range => {\n            if (range.supportsRecurring) {\n                return range.getOccurrencesForDateRange(startDate, endDate);\n            }\n\n            if (range.intersectsRange(startDate, endDate)) {\n                return range;\n            }\n\n            return [];\n        });\n\n        return rangesInDateRange.sort((span1, span2) => span1.startDate - span2.startDate);\n    }\n}\n","import Model from '../../../Core/data/Model.js';\nimport TimeZoneHelper from '../../../Core/helper/TimeZoneHelper.js';\nimport FunctionHelper from '../../../Core/helper/FunctionHelper.js';\n\n/**\n * @module Scheduler/model/mixin/ProjectModelTimeZoneMixin\n */\n\n/**\n * Mixin that holds TimeZone functionality shared between projects in Scheduler, Scheduler Pro, Gantt and Calendar\n * @mixin\n */\nexport default Target => class ProjectModelTimeZoneMixin extends (Target || Model) {\n    static $name = 'ProjectModelTimeZoneMixin';\n\n    static configurable = {\n        /**\n         * Set to a IANA time zone (i.e. `Europe/Stockholm`) or a UTC offset in minutes (i.e. `-120`). This will\n         * convert all events, tasks and time ranges to the specified time zone or offset. It will also affect the\n         * displayed timeline's headers as well at the start and end date of it.\n         *\n         * There is currently no built-in time zone support in JavaScript which means that the converted dates\n         * technically still are in the local system time zone, but adjusted to match the configured time zone.\n         *\n         * ### DST\n         * If a IANA time zone is provided, there will be support for DST. But if local system time zone has DST that\n         * will affect the time zone conversion at the exact hour when the local system time zone switches DST on and\n         * off.\n         *\n         * *For example:*\n         * 1. The local system time zone is `Europe/Stockholm` (which is UTC+1 or UTC+2 when DST).\n         * 2. The date `2022-03-27T07:00:00Z` (which is UTC) is converted to `America/Chicago` (which is UTC-6 or UTC-5\n         *    when DST).\n         * 3. The converted JS date will be created from `2022-03-27T02:00:00` which is exactly the hour when\n         *    `Europe/Stockholm` adds an DST hour. This has the effect that the converted date shows up incorrectly as\n         *    `2022-03-27T03:00` instead.\n         *\n         * If a UTC offset is provided, there is no DST support at all.\n         *\n         * ### Editing\n         * If creating new records or editing existing record dates, the dates will be interpreted as in the selected\n         * time zone.\n         *\n         * ### Saving\n         * When saving or syncing data, the dates will be restored to local system time and converted to JSON\n         * ISO formatted.\n         *\n         * @prp {String|Number} [timeZone]\n         * @category Advanced\n         */\n        timeZone : {\n            // Don't ingest the config eagerly because it relies on project being present.\n            // Lazy means it waits for ingestion until timeZone property is referenced.\n            $config : 'lazy',\n            value   : null\n        }\n    };\n\n    get _storesWithDates() {\n        return [this.taskStore, this.timeRangeStore, this.resourceTimeRangeStore].filter(s => s);\n    }\n\n    // Overrides a Store's processRecord function to be able to convert records added by a dataset\n    // before they are processed by the engine\n    overrideStoreProcessRecord(store) {\n        if (this._storesWithDates.includes(store) && !store.$originalProcessRecord) {\n            store.$originalProcessRecord =\n                FunctionHelper.before(store, 'processRecord', (record, isDataSet) => {\n                    if (isDataSet || store.isLoadingData) {\n                        // When loading or changing dataset, de data is treated as local dates and need to be converted\n                        this.convertRecordToTimeZone(record);\n                    }\n                });\n        }\n    }\n\n    attachStore(store) {\n        super.attachStore(store);\n\n        // If a new store is attached, convert it to the configured timezone\n        if (store && this.timeZone != null && this._storesWithDates.includes(store)) {\n            this.convertStoresToTimeZone([store]);\n            this.overrideStoreProcessRecord();\n        }\n    }\n\n    detachStore(store) {\n        super.detachStore(store);\n\n        // When a store is detached, the records isn't timezone converted anymore\n        if (store && !store.isDestroyed) {\n            const { $originalProcessRecord } = store;\n\n            if ($originalProcessRecord) {\n                $originalProcessRecord(); // Restores the original function\n                store.$originalProcessRecord = null;\n                // Convert records back to local system timezone\n                this.convertStoresToTimeZone([store], null);\n\n            }\n        }\n    }\n\n    relayStoreChange({ source, action, records, replaced }) {\n        const me = this;\n\n        if (me.timeZone != null && me._storesWithDates.includes(source)) {\n            // When a record is added or replaced, it is treated as in current configured timezone\n            if (['add', 'replace'].includes(action)) {\n                if (!records?.length && replaced?.length) {\n                    records = replaced;\n                }\n                if (records.length) {\n                    records.forEach(record => record.timeZone = me.timeZone);\n                }\n            }\n        }\n    }\n\n    convertStoresToTimeZone(stores, timeZone = this.timeZone) {\n        const\n            me            = this,\n            stmAutoRecord = me.stm?.autoRecord;\n\n        // Disable STM while updating timezone values\n        if (stmAutoRecord) {\n            me.stm.autoRecord = false;\n        }\n\n        for (const store of stores) {\n            store?.forEach(r => me.convertRecordToTimeZone(r, timeZone));\n        }\n\n        if (stmAutoRecord) {\n            // Restore original value\n            me.stmAutoRecord = stmAutoRecord;\n        }\n    }\n\n    convertRecordToTimeZone(record, timeZone = this.timeZone) {\n        if (record.timeZone !== timeZone) {\n            record.$ignoreChange = true; // Used to ignore changes in NestedEvents feature\n            // Convert baselines if exists\n            if (record.baselines?.count) {\n                for (const bl of record.baselines) {\n                    // The baseline records is not marked with a timezone when they are created\n                    if (record.timeZone !== bl.timeZone) {\n                        bl.timeZone = record.timeZone;\n                    }\n                    bl.convertToTimeZone(timeZone);\n                }\n            }\n\n            record.convertToTimeZone(timeZone);\n\n            record.$ignoreChange = false;\n        }\n    }\n\n    updateTimeZone(timeZone, oldTimeZone) {\n        const\n            me            = this,\n            isConfiguring = me._isConfiguringTimeZone || me.isConfiguring;\n\n        me.trigger('beforeTimeZoneChange', {\n            timeZone,\n            oldTimeZone,\n            isConfiguring\n        });\n\n        me.calendarManagerStore.forEach(calendar => calendar.bumpVersion());\n\n        // Convert data to time zone\n        me.convertStoresToTimeZone(me._storesWithDates);\n\n        me._storesWithDates.forEach(store => me.overrideStoreProcessRecord(store));\n\n        // Convert project startdate\n        if (me.startDate) {\n            const startDate = oldTimeZone != null ? TimeZoneHelper.fromTimeZone(me.startDate, oldTimeZone) : me.startDate;\n            me.startDate = timeZone != null ? TimeZoneHelper.toTimeZone(startDate, timeZone) : startDate;\n        }\n\n        me.ignoreRecordChanges = true;\n        me.commitAsync().then(() => {\n            if (!me.isDestroyed) {\n                me.trigger('timeZoneChange', {\n                    timeZone,\n                    oldTimeZone,\n                    isConfiguring\n                });\n            }\n            delete me._isConfiguringTimeZone;\n        });\n    }\n\n};\n","import Model from '../../../Core/data/Model.js';\nimport ProjectModelCommon from './ProjectModelCommon.js';\nimport ResourceTimeRangeModel from '../ResourceTimeRangeModel.js';\nimport TimeSpan from '../TimeSpan.js';\nimport Store from '../../../Core/data/Store.js';\nimport StringHelper from '../../../Core/helper/StringHelper.js';\nimport ResourceTimeRangeStore from '../../data/ResourceTimeRangeStore.js';\nimport ProjectModelTimeZoneMixin from './ProjectModelTimeZoneMixin.js';\n\n/**\n * @module Scheduler/model/mixin/ProjectModelMixin\n */\n\n/**\n * Mixin that holds configuration shared between projects in Scheduler and Scheduler Pro.\n * @mixes Scheduler/model/mixin/ProjectModelTimeZoneMixin\n * @mixin\n */\nexport default Target => class ProjectModelMixin extends (Target || Model).mixin(\n    ProjectModelCommon,\n    ProjectModelTimeZoneMixin\n) {\n    static get $name() {\n        return 'ProjectModelMixin';\n    }\n\n    //region Config\n\n    static get defaultConfig() {\n        return {\n            /**\n             * State tracking manager instance the project relies on\n             * @member {Core.data.stm.StateTrackingManager} stm\n             * @category Advanced\n             */\n            /**\n             * Configuration options to provide to the STM manager\n             *\n             * @config {StateTrackingManagerConfig|Core.data.stm.StateTrackingManager}\n             * @category Advanced\n             */\n            stm : {},\n\n            timeRangeModelClass         : TimeSpan,\n            resourceTimeRangeModelClass : ResourceTimeRangeModel,\n\n            /**\n             * The constructor to create a time range store instance with. Should be a class subclassing the\n             * {@link Core.data.Store}\n             * @config {Core.data.Store|Object}\n             * @typings {typeof Store|object}\n             * @category Models & Stores\n             */\n            timeRangeStoreClass : Store,\n\n            /**\n             * The constructor to create a resource time range store instance with. Should be a class subclassing the\n             * {@link Scheduler.data.ResourceTimeRangeStore}\n             * @config {Scheduler.data.ResourceTimeRangeStore|Object}\n             * @typings {typeof ResourceTimeRangeStore|object}\n             * @category Models & Stores\n             */\n            resourceTimeRangeStoreClass : ResourceTimeRangeStore,\n\n            /**\n             * The initial data, to fill the {@link #property-timeRangeStore timeRangeStore} with.\n             * Should be an array of {@link Scheduler.model.TimeSpan TimeSpan} or its configuration objects.\n             *\n             * @config {Scheduler.model.TimeSpan[]} [timeRangesData]\n             * @category Legacy inline data\n             */\n\n            /**\n             * The initial data, to fill the {@link #property-resourceTimeRangeStore resourceTimeRangeStore} with.\n             * Should be an array of {@link Scheduler.model.ResourceTimeRangeModel ResourceTimeRangeModel} or it's\n             * configuration objects.\n             *\n             * @config {Scheduler.model.ResourceTimeRangeModel[]} [resourceTimeRangesData]\n             * @category Legacy inline data\n             */\n\n            eventStore      : {},\n            assignmentStore : {},\n            dependencyStore : {},\n            resourceStore   : {},\n            timeRangesData  : null\n        };\n    }\n\n    static configurable = {\n        /**\n         * Project data as a JSON string, used to populate its stores.\n         *\n         * ```javascript\n         * const project = new ProjectModel({\n         *     json : '{\"eventsData\":[...],\"resourcesData\":[...],...}'\n         * }\n         * ```\n         *\n         * @config {String}\n         * @category Inline data\n         */\n        json : null,\n\n        /**\n         * The {@link Core.data.Store store} holding the time ranges information.\n         *\n         * See also {@link Scheduler.model.TimeSpan}\n         *\n         * @member {Core.data.Store} timeRangeStore\n         * @category Models & Stores\n         */\n        /**\n         * A {@link Core.data.Store} instance or a config object.\n         * @config {Core.data.Store|StoreConfig}\n         * @category Models & Stores\n         */\n        timeRangeStore : {\n            value : {\n                id         : 'timeRanges', // no-sanity\n                modelClass : TimeSpan\n            },\n            $config : 'nullify'\n        },\n\n        /**\n         * The {@link Scheduler.data.ResourceTimeRangeStore store} holding the resource time ranges information.\n         *\n         * See also {@link Scheduler.model.ResourceTimeRangeModel}\n         *\n         * @member {Scheduler.data.ResourceTimeRangeStore} resourceTimeRangeStore\n         * @category Models & Stores\n         */\n        /**\n         * A {@link Scheduler.data.ResourceTimeRangeStore} instance or a config object.\n         * @config {Scheduler.data.ResourceTimeRangeStore|ResourceTimeRangeStoreConfig}\n         * @category Models & Stores\n         */\n        resourceTimeRangeStore : {\n            value   : {},\n            $config : 'nullify'\n        },\n\n        // Documented in Scheduler/SchedulerPro versions of model/ProjectModel since types differ\n        events             : null,\n        resourceTimeRanges : null\n    };\n\n    //endregion\n\n    //region Properties\n\n    /**\n     * Get or set data of project stores. The returned data is identical to what\n     * {@link #function-toJSON} returns:\n     *\n     * ```javascript\n     *\n     * const data = scheduler.project.inlineData;\n     *\n     * // data:\n     * {\n     *     eventsData             : [...],\n     *     resourcesData          : [...],\n     *     dependenciesData       : [...],\n     *     assignmentsData        : [...],\n     *     resourceTimeRangesData : [...],\n     *     timeRangesData         : [...]\n     * }\n     *\n     *\n     * // Plug it back in later\n     * scheduler.project.inlineData = data;\n     * ```\n     *\n     * @property {Object}\n     * @category Inline data\n     */\n    get inlineData() {\n        return StringHelper.safeJsonParse(super.json);\n    }\n\n    set inlineData(inlineData) {\n        this.json = inlineData;\n    }\n\n    //endregion\n\n    //region Functions\n\n    /**\n     * Accepts a \"data package\" consisting of data for the projects stores, which is then loaded into the stores.\n     *\n     * The package can hold data for `EventStore`, `AssignmentStore`, `ResourceStore`, `DependencyStore`,\n     * `TimeRangeStore` and `ResourceTimeRangeStore`. It uses the same format as when creating a project with inline\n     * data:\n     *\n     * ```javascript\n     * await project.loadInlineData({\n     *     eventsData             : [...],\n     *     resourcesData          : [...],\n     *     assignmentsData        : [...],\n     *     dependenciesData       : [...],\n     *     resourceTimeRangesData : [...],\n     *     timeRangesData         : [...]\n     * });\n     * ```\n     *\n     * After populating the stores it commits the project, starting its calculations. By awaiting `loadInlineData()` you\n     * can be sure that project calculations are finished.\n     *\n     * @function loadInlineData\n     * @param {Object} dataPackage A data package as described above\n     * @fires load\n     * @async\n     * @category Inline data\n     */\n\n    /**\n     * Project changes (CRUD operations to records in its stores) are automatically committed on a buffer to the\n     * underlying graph based calculation engine. The engine performs it calculations async.\n     *\n     * By calling this function, the commit happens right away. And by awaiting it you are sure that project\n     * calculations are finished and that references between records are up to date.\n     *\n     * The returned promise is resolved with an object. If that object has `rejectedWith` set, there has been a conflict and the calculation failed.\n     *\n     * ```javascript\n     * // Move an event in time\n     * eventStore.first.shift(1);\n     *\n     * // Trigger calculations directly and wait for them to finish\n     * const result = await project.commitAsync();\n     *\n     * if (result.rejectedWith) {\n     *     // there was a conflict during the scheduling\n     * }\n     * ```\n     *\n     * @async\n     * @function commitAsync\n     * @category Common\n     */\n\n    //endregion\n\n    //region Init\n\n    construct(config = {}) {\n        super.construct(...arguments);\n\n        // These stores are not handled by engine, but still held on project\n\n        if (config.timeRangesData) {\n            this.timeRangeStore.data = config.timeRangesData;\n        }\n\n        if (config.resourceTimeRangesData) {\n            this.resourceTimeRangeStore.data = config.resourceTimeRangesData;\n        }\n    }\n\n    afterConstruct() {\n        super.afterConstruct();\n\n        const me = this;\n\n        !me.timeRangeStore.stm && me.stm.addStore(me.timeRangeStore);\n        !me.resourceTimeRangeStore.stm && me.stm.addStore(me.resourceTimeRangeStore);\n    }\n\n    //endregion\n\n    //region Attaching stores\n\n    // Attach to a store, relaying its change events\n    attachStore(store) {\n        if (store) {\n            store.ion({\n                name    : store.$$name,\n                change  : 'relayStoreChange',\n                thisObj : this\n            });\n        }\n        super.attachStore(store);\n    }\n\n    // Detach a store, stop relaying its change events\n    detachStore(store) {\n        if (store) {\n            this.detachListeners(store.$$name);\n            super.detachStore(store);\n        }\n    }\n\n    relayStoreChange(event) {\n        super.relayStoreChange(event);\n        /**\n         * Fired when data in any of the projects stores changes.\n         *\n         * Basically a relayed version of each stores own change event, decorated with which store it originates from.\n         * See the {@link Core.data.Store#event-change store change event} documentation for more information.\n         *\n         * @event change\n         * @param {Scheduler.model.ProjectModel} source This project\n         * @param {Core.data.Store} store Affected store\n         * @param {'remove'|'removeAll'|'add'|'updatemultiple'|'clearchanges'|'filter'|'update'|'dataset'|'replace'} action\n         * Name of action which triggered the change. May be one of:\n         * * `'remove'`\n         * * `'removeAll'`\n         * * `'add'`\n         * * `'updatemultiple'`\n         * * `'clearchanges'`\n         * * `'filter'`\n         * * `'update'`\n         * * `'dataset'`\n         * * `'replace'`\n         * @param {Core.data.Model} record Changed record, for actions that affects exactly one record (`'update'`)\n         * @param {Core.data.Model[]} records Changed records, passed for all actions except `'removeAll'`\n         * @param {Object} changes Passed for the `'update'` action, info on which record fields changed\n         */\n        return this.trigger('change', { store : event.source, ...event, source : this });\n    }\n\n    updateTimeRangeStore(store, oldStore) {\n        this.detachStore(oldStore);\n        this.attachStore(store);\n    }\n\n    setTimeRangeStore(store) {\n        this.timeRangeStore = store;\n    }\n\n    changeTimeRangeStore(store) {\n        // If it's not being nullified, upgrade a config object to be a full store\n        if (store && !store.isStore) {\n            store = this.timeRangeStoreClass.new({\n                modelClass : this.timeRangeModelClass\n            }, store);\n        }\n        return store;\n    }\n\n    updateResourceTimeRangeStore(store, oldStore) {\n        this.detachStore(oldStore);\n        this.attachStore(store);\n    }\n\n    changeResourceTimeRangeStore(store) {\n        // If it's not being nullified, upgrade a config object to be a full store\n        if (store && !store.isStore) {\n            store = this.resourceTimeRangeStoreClass.new({\n                modelClass : this.resourceTimeRangeModelClass\n            }, store);\n        }\n        return store;\n    }\n\n    setResourceTimeRangeStore(store) {\n        this.resourceTimeRangeStore = store;\n    }\n\n    //endregion\n\n    //region Inline data\n\n    get events() {\n        return this.eventStore.allRecords;\n    }\n\n    updateEvents(events) {\n        this.eventStore.data = events;\n    }\n\n    get resourceTimeRanges() {\n        return this.resourceTimeRangeStore.allRecords;\n    }\n\n    updateResourceTimeRanges(resourceTimeRanges) {\n        this.resourceTimeRangeStore.data = resourceTimeRanges;\n    }\n\n    async loadInlineData(data) {\n        // Flag reset in super\n        this.isLoadingInlineData = true;\n\n        // Stores not handled by engine\n        if (data.resourceTimeRangesData) {\n            this.resourceTimeRangeStore.data = data.resourceTimeRangesData;\n        }\n\n        if (data.timeRangesData) {\n            this.timeRangeStore.data = data.timeRangesData;\n        }\n\n        return super.loadInlineData(data);\n    }\n\n    //endregion\n\n    //region JSON\n\n    /**\n     * Returns the data from the records of the projects stores, in a format that can be consumed by `loadInlineData()`.\n     *\n     * Used by JSON.stringify to correctly convert this record to json.\n     *\n     *\n     * ```javascript\n     * const project = new ProjectModel({\n     *     eventsData             : [...],\n     *     resourcesData          : [...],\n     *     assignmentsData        : [...],\n     *     dependenciesData       : [...],\n     *     resourceTimeRangesData : [...],\n     *     timeRangesData         : [...]\n     * });\n     *\n     * const json = project.toJSON();\n     *\n     * // json:\n     * {\n     *     eventsData             : [...],\n     *     resourcesData          : [...],\n     *     dependenciesData       : [...],\n     *     assignmentsData        : [...],\n     *     resourceTimeRangesData : [...],\n     *     timeRangesData         : [...]\n     * }\n     * ```\n     *\n     * Output can be consumed by `loadInlineData()`:\n     *\n     * ```javascript\n     * const json = project.toJSON();\n     *\n     * // Plug it back in later\n     * project.loadInlineData(json);\n     * ```\n     *\n     * @returns {Object}\n     * @category Inline data\n     */\n    toJSON() {\n        const\n            me = this,\n            result = {\n                eventsData             : me.eventStore.toJSON(),\n                resourcesData          : me.resourceStore.toJSON(),\n                dependenciesData       : me.dependencyStore.toJSON(),\n                timeRangesData         : me.timeRangeStore.toJSON(),\n                resourceTimeRangesData : me.resourceTimeRangeStore.toJSON()\n            };\n\n        if (!me.eventStore.usesSingleAssignment) {\n            result.assignmentsData = me.assignmentStore.toJSON();\n        }\n\n        return result;\n    }\n\n    /**\n     * Get or set project data (records from its stores) as a JSON string.\n     *\n     * Get a JSON string:\n     *\n     * ```javascript\n     * const project = new ProjectModel({\n     *     eventsData             : [...],\n     *     resourcesData          : [...],\n     *     assignmentsData        : [...],\n     *     dependenciesData       : [...],\n     *     resourceTimeRangesData : [...],\n     *     timeRangesData         : [...]\n     * });\n     *\n     * const jsonString = project.json;\n     *\n     * // jsonString:\n     * '{\"eventsData\":[...],\"resourcesData\":[...],...}'\n     * ```\n     *\n     * Set a JSON string (to populate the project stores):\n     *\n     * ```javascript\n     * project.json = '{\"eventsData\":[...],\"resourcesData\":[...],...}'\n     * ```\n     *\n     * @property {String}\n     * @category Inline data\n     */\n    get json() {\n        return super.json;\n    }\n\n    changeJson(json) {\n        if (typeof json === 'string') {\n            json = StringHelper.safeJsonParse(json);\n        }\n\n        return json;\n    }\n\n    updateJson(json) {\n        json && this.loadInlineData(json);\n    }\n\n    //endregion\n\n    afterChange(toSet, wasSet) {\n        super.afterChange(...arguments);\n\n        if (wasSet.calendar) {\n            this.trigger('calendarChange');\n        }\n    }\n\n    doDestroy() {\n        this.timeRangeStore.destroy();\n        this.resourceTimeRangeStore.destroy();\n\n        super.doDestroy();\n    }\n};\n","/**\n * @module Scheduler/model/mixin/ProjectCurrentConfig\n */\n\n/**\n * Mixin that makes sure current config for a project includes store data and is cleaned up properly.\n *\n * @mixin\n * @private\n */\nexport default Target => class ProjectCurrentConfig extends Target {\n\n    // This function is not meant to be called by any code other than Base#getCurrentConfig().\n    // It extracts the current configs/fields for the project, with special handling for inline data\n    getCurrentConfig(options) {\n        const\n            me     = this,\n            result = super.getCurrentConfig(options);\n\n        if (result) {\n            for (const storeName of ['eventStore', 'resourceStore', 'assignmentStore', 'dependencyStore', 'timeRangeStore', 'resourceTimeRangeStore']) {\n                const store = me[storeName];\n\n                if (store) {\n                    if (store.count) {\n                        result[store.id + 'Data'] = store.getInlineData(options);\n                    }\n\n                    // Get stores current state, in case it has filters etc. added at runtime\n                    const storeState = store.getCurrentConfig(options);\n                    if (storeState && Object.keys(storeState).length > 0) {\n                        result[storeName] = Object.assign(result[storeName] || {}, storeState);\n                    }\n                    // Remove empty store configs\n                    else if (result[storeName] && Object.keys(result[storeName]).length === 0) {\n                        delete result[storeName];\n                    }\n                }\n            }\n\n            if (result.timeRangeStore) {\n                // Exclude default time range modelClass (it is a plain store), spam\n                if (me.timeRangeStore.originalModelClass === me.timeRangeModelClass || me.timeRangeStore.originalModelClass.$name === 'TimeSpan') {\n                    delete result.timeRangeStore.modelClass;\n                }\n\n                // Same for default storeId\n                if (result.timeRangeStore.storeId === 'timeRanges') {\n                    delete result.timeRangeStore.storeId;\n                }\n\n                // Since timeRangeStore is a plain store it is always configured with id, spam\n                if (Object.keys(result.timeRangeStore).length === 1) {\n                    delete result.timeRangeStore;\n                }\n            }\n\n            // Gantt specifics\n            if (me.taskStore.isTaskStore) {\n                delete result.eventModelClass;\n                delete result.eventStoreClass;\n                delete result.children;\n            }\n\n            return result;\n        }\n    }\n};\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Scheduler/data/util/ModelPersistencyManager\n */\n\n/**\n * This class manages model persistency, it listens to model stores' beforesync event and removes all non persistable\n * records from sync operation. The logic has meaning only for CRUD-less sync operations.\n *\n * @private\n */\nexport default class ModelPersistencyManager extends Base {\n    // region Event attachers\n\n    set eventStore(newEventStore) {\n        const me = this;\n\n        me.eventStoreDetacher && me.eventStoreDetacher();\n        me._eventStore = newEventStore;\n        if (newEventStore && newEventStore.autoCommit) {\n            me.eventStoreDetacher = newEventStore.ion({\n                beforecommit : me.onEventStoreBeforeSync,\n                thisObj      : me,\n                detachable   : true,\n                // Just in case\n                prio         : 100\n            });\n        }\n    }\n\n    get eventStore() {\n        return this._eventStore;\n    }\n\n    set resourceStore(newResourceStore) {\n        const me = this;\n\n        me.resourceStoreDetacher && me.resourceStoreDetacher();\n        me._resourceStore = newResourceStore;\n\n        if (newResourceStore && newResourceStore.autoCommit) {\n            me.resourceStoreDetacher = newResourceStore.ion({\n                beforecommit : me.onResourceStoreBeforeSync,\n                thisObj      : me,\n                detachable   : true,\n                // Just in case\n                prio         : 100\n            });\n        }\n    }\n\n    get resourceStore() {\n        return this._resourceStore;\n    }\n\n    set assignmentStore(newAssignmentStore) {\n        const me = this;\n\n        me.assignmentStoreDetacher && me.assignmentStoreDetacher();\n        me._assignmentStore = newAssignmentStore;\n\n        if (newAssignmentStore && newAssignmentStore.autoSync) {\n            me.assignmentStoreDetacher = newAssignmentStore.ion({\n                beforecommit : me.onAssignmentStoreBeforeSync,\n                thisObj      : me,\n                detachable   : true,\n                // Just in case\n                prio         : 100\n            });\n        }\n    }\n\n    get assignmentStore() {\n        return this._assignmentStore;\n    }\n\n    set dependencyStore(newDependencyStore) {\n        const me = this;\n\n        me.dependencyStoreDetacher && me.dependencyStoreDetacher();\n        me._dependencyStore = newDependencyStore;\n\n        if (newDependencyStore && newDependencyStore.autoSync) {\n            me.dependencyStoreDetacher = newDependencyStore.ion({\n                beforecommit : me.onDependencyStoreBeforeSync,\n                thisObj      : me,\n                detachable   : true,\n                // Just in case\n                prio         : 100\n            });\n        }\n    }\n\n    get dependencyStore() {\n        return this._dependencyStore;\n    }\n\n    // endregion\n\n    // region Event handlers\n\n    onEventStoreBeforeSync({ changes }) {\n        const me = this;\n        me.removeNonPersistableRecordsToCreate(changes);\n        return me.shallContinueSync(changes);\n    }\n\n    onResourceStoreBeforeSync({ changes }) {\n        const me = this;\n        me.removeNonPersistableRecordsToCreate(changes);\n        return me.shallContinueSync(changes);\n    }\n\n    onAssignmentStoreBeforeSync({ changes }) {\n        const me = this;\n        me.removeNonPersistableRecordsToCreate(changes);\n        return me.shallContinueSync(changes);\n    }\n\n    onDependencyStoreBeforeSync({ changes }) {\n        const me = this;\n        me.removeNonPersistableRecordsToCreate(changes);\n        return me.shallContinueSync(changes);\n    }\n\n    // endregion\n\n    // region Management rules\n\n    removeNonPersistableRecordsToCreate(changes) {\n        const recordsToCreate = changes.added || [];\n        let r, i;\n\n        // We remove from the array we iterate thus we iterate from end to start\n        for (i = recordsToCreate.length - 1; i >= 0; --i) {\n            r = recordsToCreate[i];\n            if (!r.isPersistable) {\n                recordsToCreate.splice(recordsToCreate.indexOf(r), 1);\n            }\n        }\n\n        // Prevent empty create request\n        if (recordsToCreate.length === 0) {\n            changes.added.length = 0;\n        }\n    }\n\n    shallContinueSync(options) {\n        return Boolean((options.added && options.added.length > 0) ||\n            (options.modified && options.modified.length > 0) ||\n            (options.removed && options.removed.length > 0));\n    }\n\n    // endregion\n}\n","import VersionHelper from '../../Core/helper/VersionHelper.js';\nimport ProjectModelMixin from './mixin/ProjectModelMixin.js';\nimport ProjectCurrentConfig from './mixin/ProjectCurrentConfig.js';\nimport ModelPersistencyManager from '../data/util/ModelPersistencyManager.js';\n/* <remove-on-release> */\nimport { SchedulerBasicProjectMixin } from '../../Engine/quark/model/scheduler_basic/SchedulerBasicProjectMixin.js';\n/* </remove-on-release> */\nimport { SchedulerCoreProjectMixin } from '../../Engine/quark/model/scheduler_core/SchedulerCoreProjectMixin.js';\nimport EventModel from './EventModel.js';\nimport DependencyModel from './DependencyModel.js';\nimport ResourceModel from './ResourceModel.js';\nimport AssignmentModel from './AssignmentModel.js';\nimport EventStore from '../data/EventStore.js';\nimport DependencyStore from '../data/DependencyStore.js';\nimport ResourceStore from '../data/ResourceStore.js';\nimport AssignmentStore from '../data/AssignmentStore.js';\n\nconst EngineMixin = /* <remove-on-release> */globalThis.bryntum?.useBasicEngine ? SchedulerBasicProjectMixin : /* </remove-on-release> */SchedulerCoreProjectMixin;\n\n/**\n * @module Scheduler/model/ProjectModel\n */\n\n/**\n * This class represents a global project of your Scheduler - a central place for all data.\n *\n * It holds and links the stores usually used by Scheduler:\n *\n * - {@link Scheduler.data.EventStore}\n * - {@link Scheduler.data.ResourceStore}\n * - {@link Scheduler.data.AssignmentStore}\n * - {@link Scheduler.data.DependencyStore}\n * - {@link #config-timeRangeStore TimeRangeStore}\n * - {@link Scheduler.data.ResourceTimeRangeStore}\n *\n * The project uses a calculation engine to normalize dates and durations. It is also responsible for\n * handling references between models, for example to link an event via an assignment to a resource. These operations\n * are asynchronous, a fact that is hidden when working in the Scheduler UI but which you must know about when performing\n * more advanced operations on the data level.\n *\n * When there is a change to data that requires something else to be recalculated, the project schedules a calculation (a\n * commit) which happens moments later. It is also possible to trigger these calculations directly. This snippet illustrate\n * the process:\n *\n 1. Something changes which requires the project to recalculate, for example adding a new task:\n *\n * ```javascript\n * const [event] = project.eventStore.add({ startDate, endDate });\n * ```\n *\n * 2. A recalculation is scheduled, thus:\n *\n * ```javascript\n * event.duration; // <- Not yet calculated\n * ```\n *\n * 3. Calculate now instead of waiting for the scheduled calculation\n *\n * ```javascript\n * await project.commitAsync();\n *\n * event.duration; // <- Now available\n * ```\n *\n * ## Using inline data\n *\n * The project provides settable property {@link Scheduler.crud.AbstractCrudManager#property-inlineData} that can\n * be used to get data from all its stores at once and to set this data as well. Populating the stores this way can\n * be useful if you cannot or you do not want to use CrudManager for server requests but you pull the data by other\n * means and have it ready outside of ProjectModel. Also, the data from all stores is available in a single\n * assignment statement.\n *\n * ### Getting data\n * ```javascript\n * const data = scheduler.project.inlineData;\n *\n * // use the data in your application\n * ```\n *\n * ### Setting data\n * ```javascript\n * const data = // your function to pull server data\n *\n * scheduler.project.inlineData = data;\n * ```\n *\n * ## Monitoring data changes\n *\n * While it is possible to listen for data changes on the projects individual stores, it is sometimes more convenient\n * to have a centralized place to handle all data changes. By listening for the {@link #event-change change event} your\n * code gets notified when data in any of the stores changes. Useful for example to keep an external data model up to\n * date:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     project: {\n *         listeners : {\n *             change({ store, action, records }) {\n *                 const { $name } = store.constructor;\n *\n *                 if (action === 'add') {\n *                     externalDataModel.add($name, records);\n *                 }\n *\n *                 if (action === 'remove') {\n *                     externalDataModel.remove($name, records);\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * ## Built in StateTrackingManager\n *\n * The project also has a built in {@link Core.data.stm.StateTrackingManager StateTrackingManager} (STM for short), that\n * handles undo/redo for the project stores (additional stores can also be added). You can enable it to track all\n * project store changes:\n *\n * ```javascript\n * // Turn on auto recording when you create your Scheduler:\n * const scheduler = new Scheduler({\n *    project : {\n *        stm : {\n *            autoRecord : true\n *        }\n *    }\n * });\n *\n * // Undo a transaction\n * project.stm.undo();\n *\n * // Redo\n * project.stm.redo();\n * ```\n *\n * Check out the `undoredo` demo to see it in action.\n *\n * @extends Core/data/Model\n * @mixes Scheduler/model/mixin/ProjectModelMixin\n * @uninherit Core/data/mixin/TreeNode\n */\nexport default class ProjectModel extends ProjectCurrentConfig(ProjectModelMixin(EngineMixin)) {\n    static get $name() {\n        return 'ProjectModel';\n    }\n\n    //region Inline data configs & properties\n\n    /**\n     * @hidefields id, readOnly, children, parentId, parentIndex\n     */\n\n    /**\n     * Get/set {@link #property-eventStore} data.\n     *\n     * Always returns an array of {@link Scheduler.model.EventModel EventModels} but also accepts an array of\n     * its configuration objects as input.\n     *\n     * @member {Scheduler.model.EventModel[]} events\n     * @accepts {Scheduler.model.EventModel[]|EventModelConfig[]}\n     * @category Inline data\n     */\n    /**\n     * Data use to fill the {@link #property-eventStore}. Should be an array of\n     * {@link Scheduler.model.EventModel EventModels} or its configuration objects.\n     *\n     * @config {Scheduler.model.EventModel[]|EventModelConfig[]} events\n     * @category Inline data\n     */\n\n    /**\n     * Get/set {@link #property-resourceStore} data.\n     *\n     * Always returns an array of {@link Scheduler.model.ResourceModel ResourceModels} but also accepts an array\n     * of its configuration objects as input.\n     *\n     * @member {Scheduler.model.ResourceModel[]} resources\n     * @accepts {Scheduler.model.ResourceModel[]|ResourceModelConfig[]}\n     * @category Inline data\n     */\n    /**\n     * Data use to fill the {@link #property-resourceStore}. Should be an array of\n     * {@link Scheduler.model.ResourceModel ResourceModels} or its configuration objects.\n     *\n     * @config {Scheduler.model.ResourceModel[]|ResourceModelConfig[]} resources\n     * @category Inline data\n     */\n\n    /**\n     * Get/set {@link #property-assignmentStore} data.\n     *\n     * Always returns an array of {@link Scheduler.model.AssignmentModel AssignmentModels} but also accepts an\n     * array of its configuration objects as input.\n     *\n     * @member {Scheduler.model.AssignmentModel[]} assignments\n     * @accepts {Scheduler.model.AssignmentModel[]|AssignmentModelConfig[]}\n     * @category Inline data\n     */\n    /**\n     * Data use to fill the {@link #property-assignmentStore}. Should be an array of\n     * {@link Scheduler.model.AssignmentModel AssignmentModels} or its configuration objects.\n     *\n     * @config {Scheduler.model.AssignmentModel[]|AssignmentModelConfig[]} assignments\n     * @category Inline data\n     */\n\n    /**\n     * Get/set {@link #property-dependencyStore} data.\n     *\n     * Always returns an array of {@link Scheduler.model.DependencyModel DependencyModels} but also accepts an\n     * array of its configuration objects as input.\n     *\n     * @member {Scheduler.model.DependencyModel[]} dependencies\n     * @accepts {Scheduler.model.DependencyModel[]|DependencyModelConfig[]}\n     * @category Inline data\n     */\n    /**\n     * Data use to fill the {@link #property-dependencyStore}. Should be an array of\n     * {@link Scheduler.model.DependencyModel DependencyModels} or its configuration objects.\n     *\n     * @config {Scheduler.model.DependencyModel[]|DependencyModelConfig[]} dependencies\n     * @category Inline data\n     */\n\n    /**\n     * Get/set {@link #property-timeRangeStore} data.\n     *\n     * Always returns an array of {@link Scheduler.model.TimeSpan TimeSpans} but also accepts an\n     * array of its configuration objects as input.\n     *\n     * @member {Scheduler.model.TimeSpan[]} timeRanges\n     * @accepts {Scheduler.model.TimeSpan[]|TimeSpanConfig[]}\n     * @category Inline data\n     */\n    /**\n     * Data use to fill the {@link #property-timeRangeStore}. Should be an array of\n     * {@link Scheduler.model.TimeSpan TimeSpans} or its configuration objects.\n     *\n     * @config {Scheduler.model.TimeSpan[]|TimeSpanConfig[]} timeRanges\n     * @category Inline data\n     */\n\n    /**\n     * Get/set {@link #property-resourceTimeRangeStore} data.\n     *\n     * Always returns an array of {@link Scheduler.model.ResourceTimeRangeModel ResourceTimeRangeModels} but\n     * also accepts an array of its configuration objects as input.\n     *\n     * @member {Scheduler.model.ResourceTimeRangeModel[]} resourceTimeRanges\n     * @accepts {Scheduler.model.ResourceTimeRangeModel[]|ResourceTimeRangeModelConfig[]}\n     * @category Inline data\n     */\n    /**\n     * Data use to fill the {@link #property-resourceTimeRangeStore}. Should be an array\n     * of {@link Scheduler.model.ResourceTimeRangeModel ResourceTimeRangeModels} or its configuration objects.\n     *\n     * @config {Scheduler.model.ResourceTimeRangeModel[]|ResourceTimeRangeModelConfig[]} resourceTimeRanges\n     * @category Inline data\n     */\n\n    //endregion\n\n    //region Legacy inline data configs & properties\n\n    /**\n     * The initial data, to fill the {@link #property-eventStore} with.\n     * Should be an array of {@link Scheduler.model.EventModel EventModels} or its configuration objects.\n     *\n     * @config {Scheduler.model.EventModel[]|EventModelConfig[]} eventsData\n     * @category Legacy inline data\n     */\n\n    /**\n     * The initial data, to fill the {@link #property-dependencyStore} with.\n     * Should be an array of {@link Scheduler.model.DependencyModel DependencyModels} or its configuration\n     * objects.\n     *\n     * @config {Scheduler.model.DependencyModel[]|DependencyModelConfig[]} [dependenciesData]\n     * @category Legacy inline data\n     */\n\n    /**\n     * The initial data, to fill the {@link #property-resourceStore} with.\n     * Should be an array of {@link Scheduler.model.ResourceModel ResourceModels} or its configuration objects.\n     *\n     * @config {Scheduler.model.ResourceModel[]|ResourceModelConfig[]} [resourcesData]\n     * @category Legacy inline data\n     */\n\n    /**\n     * The initial data, to fill the {@link #property-assignmentStore} with.\n     * Should be an array of {@link Scheduler.model.AssignmentModel AssignmentModels} or its configuration\n     * objects.\n     *\n     * @config {Scheduler.model.AssignmentModel[]|AssignmentModelConfig[]} [assignmentsData]\n     * @category Legacy inline data\n     */\n\n    //endregion\n\n    //region Store configs & properties\n\n    /**\n     * The {@link Scheduler.data.EventStore store} holding the events information.\n     *\n     * See also {@link Scheduler.model.EventModel}\n     *\n     * @member {Scheduler.data.EventStore} eventStore\n     * @category Models & Stores\n     */\n    /**\n     * An {@link Scheduler.data.EventStore} instance or a config object.\n     * @config {Scheduler.data.EventStore|EventStoreConfig} eventStore\n     * @category Models & Stores\n     */\n\n    /**\n     * The {@link Scheduler.data.DependencyStore store} holding the dependencies information.\n     *\n     * See also {@link Scheduler.model.DependencyModel}\n     *\n     * @member {Scheduler.data.DependencyStore} dependencyStore\n     * @category Models & Stores\n     */\n    /**\n     * A {@link Scheduler.data.DependencyStore} instance or a config object.\n     * @config {Scheduler.data.DependencyStore|DependencyStoreConfig} dependencyStore\n     * @category Models & Stores\n     */\n\n    /**\n     * The {@link Scheduler.data.ResourceStore store} holding the resources that can be assigned to the events in the event store.\n     *\n     * See also {@link Scheduler.model.ResourceModel}\n     *\n     * @member {Scheduler.data.ResourceStore} resourceStore\n     * @category Models & Stores\n     */\n    /**\n     * A {@link Scheduler.data.ResourceStore} instance or a config object.\n     * @config {Scheduler.data.ResourceStore|ResourceStoreConfig} resourceStore\n     * @category Models & Stores\n     */\n\n    /**\n     * The {@link Scheduler.data.AssignmentStore store} holding the assignments information.\n     *\n     * See also {@link Scheduler.model.AssignmentModel}\n     *\n     * @member {Scheduler.data.AssignmentStore} assignmentStore\n     * @category Models & Stores\n     */\n    /**\n     * An {@link Scheduler.data.AssignmentStore} instance or a config object.\n     * @config {Scheduler.data.AssignmentStore|AssignmentStoreConfig} assignmentStore\n     * @category Models & Stores\n     */\n\n    //endregion\n\n    //region Configs\n\n    static get defaultConfig() {\n        return {\n            /**\n             * The constructor of the event model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the {@link #property-eventStore}\n             *\n             * @config {Scheduler.model.EventModel}\n             * @typings {typeof EventModel}\n             * @category Models & Stores\n             */\n            eventModelClass : EventModel,\n\n            /**\n             * The constructor of the dependency model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the {@link #property-dependencyStore}\n             *\n             * @config {Scheduler.model.DependencyModel}\n             * @typings {typeof DependencyModel}\n             * @category Models & Stores\n             */\n            dependencyModelClass : DependencyModel,\n\n            /**\n             * The constructor of the resource model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the {@link #property-resourceStore}\n             *\n             * @config {Scheduler.model.ResourceModel}\n             * @typings {typeof ResourceModel}\n             * @category Models & Stores\n             */\n            resourceModelClass : ResourceModel,\n\n            /**\n             * The constructor of the assignment model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the {@link #property-assignmentStore}\n             *\n             * @config {Scheduler.model.AssignmentModel}\n             * @typings {typeof AssignmentModel}\n             * @category Models & Stores\n             */\n            assignmentModelClass : AssignmentModel,\n\n            /**\n             * The constructor to create an event store instance with. Should be a class, subclassing the\n             * {@link Scheduler.data.EventStore}\n             * @config {Scheduler.data.EventStore|Object}\n             * @typings {typeof EventStore|object}\n             * @category Models & Stores\n             */\n            eventStoreClass : EventStore,\n\n            /**\n             * The constructor to create a dependency store instance with. Should be a class, subclassing the\n             * {@link Scheduler.data.DependencyStore}\n             * @config {Scheduler.data.DependencyStore|Object}\n             * @typings {typeof DependencyStore|object}\n             * @category Models & Stores\n             */\n            dependencyStoreClass : DependencyStore,\n\n            /**\n             * The constructor to create a resource store instance with. Should be a class, subclassing the\n             * {@link Scheduler.data.ResourceStore}\n             * @config {Scheduler.data.ResourceStore|Object}\n             * @typings {typeof ResourceStore|object}\n             * @category Models & Stores\n             */\n            resourceStoreClass : ResourceStore,\n\n            /**\n             * The constructor to create an assignment store instance with. Should be a class, subclassing the\n             * {@link Scheduler.data.AssignmentStore}\n             * @config {Scheduler.data.AssignmentStore|Object}\n             * @typings {typeof AssignmentStore|object}\n             * @category Models & Stores\n             */\n            assignmentStoreClass : AssignmentStore\n        };\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fired when the engine has finished its calculations and the results has been written back to the records.\n     *\n     * ```javascript\n     * scheduler.project.on({\n     *     dataReady() {\n     *        console.log('Calculations finished');\n     *     }\n     * });\n     *\n     * scheduler.eventStore.first.duration = 10;\n     *\n     * // At some point a bit later it will log 'Calculations finished'\n     * ```\n     *\n     * @event dataReady\n     * @param {Scheduler.model.ProjectModel} source The project\n     * @param {Boolean} isInitialCommit Flag that shows if this commit is initial\n     * @param {Set} records Set of all {@link Core.data.Model}s that were modified in the completed transaction.\n     * Use the {@link Core.data.Model#property-modifications} property of each Model to identify\n     * modified fields.\n     */\n\n    //endregion\n\n    /**\n     * Silences propagations caused by the project loading.\n     *\n     * Applying the loaded data to the project occurs in two basic stages:\n     *\n     * 1. Data gets into the engine graph which triggers changes propagation\n     * 2. The changes caused by the propagation get written to related stores\n     *\n     * Setting this flag to `true` makes the component perform step 2 silently without triggering events causing reactions on those changes\n     * (like sending changes back to the server if `autoSync` is enabled) and keeping stores in unmodified state.\n     *\n     * This is safe if the loaded data is consistent so propagation doesn't really do any adjustments.\n     * By default the system treats the data as consistent so this option is `true`.\n     *\n     * ```js\n     * new Scheduler({\n     *     project : {\n     *         // We want scheduling engine to recalculate the data properly\n     *         // so then we could save it back to the server\n     *         silenceInitialCommit : false\n     *     }\n     *     ...\n     * })\n     * ```\n     *\n     * @config {Boolean} silenceInitialCommit\n     * @default true\n     * @category Advanced\n     */\n\n    construct(...args) {\n        super.construct(...args);\n\n        if (VersionHelper.isTestEnv) {\n            globalThis.bryntum.testProject = this;\n        }\n\n        // Moved here from EventStore, since project is now the container instead of it\n        this.modelPersistencyManager = this.createModelPersistencyManager();\n    }\n\n    /**\n     * Creates and returns model persistency manager\n     *\n     * @returns {Scheduler.data.util.ModelPersistencyManager}\n     * @internal\n     */\n    createModelPersistencyManager() {\n        return new ModelPersistencyManager({\n            eventStore      : this,\n            resourceStore   : this.resourceStore,\n            assignmentStore : this.assignmentStore,\n            dependencyStore : this.dependencyStore\n        });\n    }\n\n    doDestroy() {\n        this.modelPersistencyManager.destroy();\n        super.doDestroy();\n    }\n\n    // To comply with TaskBoards expectations\n    get taskStore() {\n        return this.eventStore;\n    }\n}\n\nProjectModel.applyConfigs = true;\n\nProjectModel.initClass();\n","/**\n * @module Scheduler/crud/mixin/CrudManagerView\n */\n\nimport LoadMaskable from '../../../Core/mixin/LoadMaskable.js';\nimport Mask from '../../../Core/widget/Mask.js';\n\n/**\n * Mixin to track Crud Manager requests to the server and mask the view during them. For masking, it\n * uses the {@link Core.mixin.LoadMaskable#config-loadMask} and {@link Core.mixin.LoadMaskable#config-syncMask}\n * properties.\n *\n * @mixin\n * @extends Core/mixin/LoadMaskable\n */\nexport default Target => class CrudManagerView extends Target.mixin(LoadMaskable) {\n\n    // <debug>\n    // region Localization test\n    static localization = [\n        'L{GridBase.loadFailedMessage}',\n        'L{GridBase.syncFailedMessage}'\n    ];\n    // endregion\n    // </debug>\n\n    static get $name() {\n        return 'CrudManagerView';\n    }\n\n    static config = {\n        clearMaskDelay : null,\n\n        // Test environment may be in a poll wait for mask to disappear.\n        // Hiding the mask immediately, before the load sequence ends releases it too early\n        testConfig : {\n            clearMaskDelay : 0\n        }\n    };\n\n    //region Init\n\n    afterConstruct() {\n        super.afterConstruct();\n\n        const { crudManager, project } = this;\n\n        if (this.loadMask && (crudManager || project).isCrudManagerLoading) {\n            // Show loadMask if crud manager is already loading\n            this.onCrudManagerLoadStart();\n        }\n    }\n\n    //endregion\n\n    /**\n     * Applies the {@link Scheduler.crud.mixin.CrudManagerView#config-syncMask} as the\n     * {@link Core.widget.Widget#config-masked mask} for this widget.\n     * @internal\n     */\n    applySyncMask() {\n        const { syncMask } = this;\n\n        if (syncMask) {\n            this.masked = Mask.mergeConfigs(this.loadMaskDefaults, syncMask);\n        }\n    }\n\n    /**\n     * Hooks up crud manager listeners\n     * @private\n     * @category Store\n     */\n    bindCrudManager(crudManager) {\n        this.detachListeners('crudManager');\n\n        crudManager?.ion({\n            name                : 'crudManager',\n            loadStart           : 'onCrudManagerLoadStart',\n            beforeSend          : 'onCrudManagerBeforeSend',\n            load                : 'onCrudManagerLoad',\n            loadCanceled        : 'onCrudManagerLoadCanceled',\n            syncStart           : 'onCrudManagerSyncStart',\n            beforeApplyResponse : 'onCrudManagerBeforeApplyResponse',\n            applyResponse       : 'onCrudManagerApplyResponse',\n            sync                : 'onCrudManagerSync',\n            syncCanceled        : 'onCrudManagerSyncCanceled',\n            requestFail         : 'onCrudManagerRequestFail',\n            responseReceived    : 'onAjaxTransportResponseReceived',\n            thisObj             : this\n        });\n    }\n\n    onCrudManagerBeforeSend({ params }) {\n        this.applyStartEndParameters?.(params);\n    }\n\n    onCrudManagerLoadStart() {\n        // Show loadMask before crud manager starts loading\n        this.applyLoadMask();\n        this.toggleEmptyText?.();\n    }\n\n    onCrudManagerSyncStart() {\n        this.applySyncMask();\n    }\n\n    onCrudManagerBeforeApplyResponse() {\n        // Prevent redrawing for each applied change, instead do it once after all changes are applied\n        // (TaskBoard does not have suspendRefresh/resumeRefresh, it already updates on a buffer so not needed)\n        this.suspendRefresh?.();\n    }\n\n    onCrudManagerApplyResponse() {\n        // Repaint rows once after applying changes\n        this.resumeRefresh?.(true);\n    }\n\n    onCrudManagerRequestFinalize(successful = true, requestType, response) {\n        const\n            me = this;\n\n        if (successful) {\n            me.toggleEmptyText?.();\n        }\n        else {\n            if (!me.masked) {\n                me.applyLoadMask();\n            }\n            me.applyMaskError(\n                `<div class=\"b-grid-load-failure\">\n                    <div class=\"b-grid-load-fail\">${me.L(`L{GridBase.${requestType}FailedMessage}`)}</div>\n                    ${response && response.message ? `<div class=\"b-grid-load-fail\">${me.L('L{CrudManagerView.serverResponseLabel}')} ${response.message}</div>` : ''}\n                </div>`);\n        }\n    }\n\n    onCrudManagerLoadCanceled() {\n        this.onCrudManagerRequestFinalize(true, 'load');\n    }\n\n    onCrudManagerSyncCanceled() {\n        this.onCrudManagerRequestFinalize(true, 'sync');\n    }\n\n    onCrudManagerLoad() {\n        this.onCrudManagerRequestFinalize(true, 'load');\n    }\n\n    onCrudManagerSync() {\n        this.onCrudManagerRequestFinalize(true, 'sync');\n    }\n\n    onCrudManagerRequestFail({ requestType, response }) {\n        this.onCrudManagerRequestFinalize(false, requestType, response);\n    }\n\n    onAjaxTransportResponseReceived() {\n        const me = this;\n        if (me.clearMaskDelay != null) {\n            me.setTimeout(() => me.masked = null, me.clearMaskDelay);\n        }\n        else {\n            me.masked = null;\n        }\n    }\n\n    get widgetClass() {}\n};\n"],"names":["diffSecond","date","diff","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","later","version","Array","prototype","indexOf","searchElement","TypeError","t","Object","len","length","n","arguments","Number","Infinity","Math","floor","abs","k","max","String","trim","replace","array","sort","arr","zeroIsLast","a","b","push","shift","next","val","values","extent","cur","zeroIsLargest","nextIdx","i","nextInvalid","min","zeroVal","start","undefined","prev","prevIdx","prevInvalid","day","D","name","range","d","call","isValid","DExtent","month","M","DAYS_IN_MONTH","dy","DStart","Y","end","DEnd","nextRollover","DMax","prevRollover","dayOfWeekCount","dc","dcExtent","ceil","dcStart","dcEnd","dcMax","getTime","dayOfWeek","dw","getDay","dayOfYear","DAY","year","dyExtent","dyMax","hour","h","getHour","hStart","hEnd","isUTC","minute","m","getMin","mStart","mEnd","s","inc","MIN","SEC","MStart","MEnd","second","getSec","cache","time","weekOfMonth","wm","wmExtent","wmStart","wmEnd","wmMax","weekOfYear","wy","wThur","YThur","WEEK","wyExtent","dwFirst","dwLast","wyStart","wyEnd","wyThur","wyMax","getYear","YStart","YEnd","NEVER","fullDate","fd","modifier","after","constraint","value","startDate","before","compile","schedDef","constraints","constraintsLen","tickConstraint","key","nameParts","split","mod","vals","ra","rb","compareFn","dir","nextVal","maxAttempts","done","curVal","newVal","result","compare","tick","tickSafe","tickStart","schedule","sched","Error","schedules","schedulesLen","exceptions","exceptionsLen","j","getInstances","count","endDate","isRange","loopCount","schedStarts","exceptStarts","results","isForward","lastResult","rStart","rEnd","setNextStarts","setRangeStarts","findNext","updateRangeStarts","calcRangeOverlap","updateNextStarts","maxEndDate","calcMaxEndDate","calcEnd","r","getStart","tickStarts","toString","cleanDate","isNaN","valueOf","schedArr","startsArr","rangesArr","nextStart","newStart","minEndDate","exceptsArr","nextRange","prevRange","setTimeout","fn","scheduleTimeout","now","isDone","clear","clearTimeout","setInterval","timezone","useLocalTime","build","UTC","get","localTime","HOUR","period","parse","cron","expr","hasSeconds","NAMES","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","SUN","MON","TUE","WED","THU","FRI","SAT","REPLACEMENTS","FIELDS","getValue","offset","cloneSchedule","clone","field","slice","add","addHash","curSched","hash","addWeekday","except1","except2","addRange","item","incSplit","rangeSplit","isHash","itemSorter","parseExpr","components","f","component","items","prepareExpr","prepared","toUpperCase","e","recur","curArr","curName","every","applyMin","applyMax","last","x","c","on","first","dayOfMonth","onWeekend","onWeekday","customModifier","id","custom","customPeriod","startingOn","between","splice","and","except","text","str","pos","input","error","TOKENTYPES","eof","rank","dayName","monthName","yearIndex","dayInstance","weekday","weekend","at","also","of","onthe","through","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","sun","mon","tue","wed","thu","fri","sat","fir","sec","thi","type","startPos","endPos","peek","expected","scanTokens","whiteSpace","token","curInput","scanToken","substring","exec","index","scan","expectedToken","parseThroughExpr","tokenType","parseTokenValue","checkAndParse","nums","parseRanges","concat","parseEvery","num","parseTimePeriod","parseToken","parseOnThe","parseScheduleExpr","timePeriod","found","convertString","output","parts","parseInt","toLowerCase","iterable","gen1Pending","gen2Pending","iterator","gen1","Symbol","gen2","inBatchesBySize","batchSize","runningBatch","el","filter","func","drop","howMany","some","map","reduce","initialAcc","acc","uniqueOnly","seen","Set","has","uniqueOnlyBy","uniqueBy","takeWhile","iterators","concatIterable","iteratorsProducer","ChainedIteratorClass","constructor","derive","copy","iter1","iter2","toArray","from","order","toSet","toMap","Map","flush","element","memoize","MemoizedIteratorClass","ChainedIterator","CI","elements","$iterator","$iterable","alreadyConsumed","MemoizedIterator","MI","MixinInstanceOfProperty","MixinStateProperty","MixinWalkDepthState","baseEl","sourceEl","$elementsByTopoLevel","$topoLevels","linearizedByTopoLevelsSource","linearizedByTopoLevels","new","props","me","assign","topoLevels","buildTopoLevels","elementsByTopoLevel","keys","level1","level2","buildElementsByTopoLevel","getOrCreateLevel","topoLevel","elementsAtLevel","set","maxTopoLevel","baseElements","walkDepthState","requirements","mixin","mixins","level","mixin1","mixin2","MIXIN_ID","identity","ZeroBaseClass","MixinState","baseClass","identitySymbol","mixinLambda","$minimalClass","getMixinState","symbol","mixinLambdaWrapper","base","extendedClass","defineProperty","hasInstance","isInstanceOfStatic","minimalClass","buildMinimalClass","getBaseClassMixinId","mixinId","baseClassesIds","newId","self","baseCls","minimalClassConstructor","cls","nextHash","fromCharCode","wrapperCls","minimalClassesByLinearHash","mix","Mixin","$","bind","isMixinClass","getPrototypeOf","hasOwnProperty","required","lastRequirement","forEach","requirement","mixinState","currentBaseClass","currentIsSub","isPrototypeOf","currentIsSuper","instance","Boolean","isInstanceOf","MixinAny","TimeUnit","ConstraintType","SchedulingMode","DependencyValidationResult","DependencyType","DependenciesCalendar","ProjectType","Direction","isEqualEffectiveDirection","direction","kind","enforcedBy","inheritedFrom","ConstraintIntervalSide","MIN_DATE","MAX_DATE","isDateFinite","EdgeInclusion","CalendarIteratorResult","CalendarCache","config","cacheFilledStartDate","cacheFilledEndDate","intervalsCachingChunkDuration","intervalsCachingChunkUnit","Day","maxCacheExtendCycles","maxRange","includeWrappingRangeFrom","ensureCacheFilledForInterval","intervalCache","includeWrappingRange","cacheFilledStartDateN","cacheFilledEndDateN","startDateN","endDateN","fillCache","_1","_2","forEachAvailabilityInterval","options","scope","cacheCursorDate","cursorDate","rangeStart","cycle","DateHelper","interval","getIntervalOf","Left","Right","intervalStartDate","intervalEndDate","FullRangeIterated","MaxRangeReached","countFrom","countTill","cacheInterval","StoppedByIterator","getNextInterval","getPrevInterval","MaxCacheExtendCyclesReached","stripDuplicates","CalendarCacheInterval","intervals","calendar","includeInterval","combineWith","getIsWorking","isWorking","normalizeIntervals","filtered","interval1","interval2","getPriorityField","binarySearch","comparator","left","right","mid","IndexPosition","SortedMap","search","insertAt","setValueAt","getEntryAt","getKeyAt","getValueAt","delete","deleteAt","size","indexOfKey","Exact","Next","getAllEntries","IntervalCache","points","leftInfinityKey","rightInfinityKey","emptyInterval","combineIntervalsFn","getDateAt","getPointAt","edgeInclusion","startDateIndex","getIntervalWithStartDateIndex","addInterval","extendInterval","curIndex","lastUpdatedPoint","inclusion","curDate","existingInterval","getSummary","label","CalendarCacheSingle","staticIntervalsCached","unspecifiedTimeInterval","_this$calendar$projec","cacheStaticIntervals","parentCache","timeZone","ignoreTimeZone","project","forEachRecurrentInterval","startSchedule","getStartDateSchedule","endSchedule","getEndDateSchedule","wrappingStartDate","wrappingEndDate","nextEndDate","getStartOfNextDay","wrappingStartDates","wrappingEndDates","startDates","endDates","recStartDate","recEndDate","TimeZoneHelper","toTimeZone","existingCacheInterval","forEachStaticInterval","_this$calendar$projec2","intervalStore","isStatic","isRecurrent","AbstractPartOfProjectGenericMixin","commitAsync","$project","calculateProject","setProject","getProject","getAssignmentStore","assignmentStore","getDependencyStore","dependencyStore","getEventStore","eventStore","getResourceStore","resourceStore","getCalendarManagerStore","calendarManagerStore","AbstractPartOfProjectStoreMixin","Store","superProto","isLoadingData","disableHasLoadedDataToCommitFlag","$name","construct","asyncEvents","remove","removeAll","change","refresh","move","update","trigger","eventName","param","asyncEvent","asyncAction","action","isEngineReady","isWritingData","eventsSuspended","dataReadyDetacher","queuedDataReadyEvents","ion","dataReady","once","setStoreData","data","_this$project","syncDataOnLoad","hasLoadedDataToCommit","store","doAutoCommit","suspendCount","addAsync","records","silent","insertAsync","insert","loadDataAsync","performFilter","_this$rootNode","rootNode","isLoading","then","AbstractPartOfProjectModelMixin","Model","joinStore","joinedProject","isRepopulatingStores","joinProject","unjoinStore","isReplacing","isLeavingProjectStore","isFillingFromMaster","isChained","masterStore","isDestroying","leaveProject","graph","stores","find","setAsync","fieldName","getAsync","_this$project2","isStmRestoring","isRestoringData","stm","isRestoring","CalendarIntervalMixin","fields","defaultValue","getCalendar","resetPriority","priorityField","getDepth","priority","recurrentStartDate","recurrentEndDate","parseDateSchedule","JSON","startDateSchedule","endDateSchedule","CalendarIntervalStore","defaultConfig","modelClass","UnspecifiedTimeIntervalModel","CorePartOfProjectGenericMixin","_this$project3","_this$project4","_this$project5","getEventById","_this$eventStore","getById","getDependencyById","_this$dependencyStore","getResourceById","_this$resourceStore","getAssignmentById","_this$assignmentStore","getCalendarById","_this$calendarManager","AbstractCalendarMixin","CalendarMixin","subStore","intervalStoreClass","meta","intervalsStore","initIntervalsStore","storeClass","getDefaultConfiguration","calendarIntervalModelClass","processIntervalsStoreData","bumpVersion","isDefault","defaultCalendar","childLevel","_this$getProject","maxCalendarRange","calendarCache","accumulateWorkingTime","durationMs","_this$getProject2","finalDate","remainingDurationInMs","adjustDurationToDST","calendarCacheInterval","dstDiff","getTimezoneOffset","calculateDurationMs","allowNegative","duration","multiplier","calculateEndDate","res","calculateStartDate","skipNonWorkingTime","workingDate","addIntervals","removeInterval","removeIntervals","clearIntervals","clearCache","$calendarCache","unspecifiedTimeIsWorking","parent","isRoot","resetPriorityOfAllIntervals","traverse","insertChild","child","isArray","doDestroy","destroy","isDayHoliday","clearTime","getNext","hasWorkingTime","_intervalStartDate","_intervalEndDate","getDailyHolidaysRanges","getWorkingTimeRanges","entry","getNonWorkingTimeRanges","iconCls","isWorkingTime","fullyContained","workingTimeStart","AbstractHasAssignmentsMixin","HasAssignmentsMixin","getAssignmentFor","resource","assignment","assigned","isAssignedTo","assignmentCls","addAssignment","event","unassign","removeAssignment","isInActiveTransaction","assignmentsForRemoval","afterEventRemoval","CorePartOfProjectModelMixin","$isCalculating","$changed","$beforeChange","invalidate","bufferedCommitAsync","getCurrentOrProposed","hasCurrentOrProposed","propose","changes","_this$recurringTimeSp","recurringTimeSpan","setChanged","setData","calculateInvalidated","finalizeInvalidated","isNotNumber","CIFromSetOrArrayOrValue","delay","Promise","resolve","format","match","number","AbstractAssignmentStoreMixin","allAssignmentsForRemoval","AbstractCalendarManagerStoreMixin","isDestroyed","record","AbstractDependencyStoreMixin","dependenciesForRemoval","allDependenciesForRemoval","dataAddRemoveActions","AbstractEventStoreMixin","onDataChange","_event$removed","isAddRemove","removed","onNodeRemoveChild","children","flags","toRemove","dependency","processRecord","eventRecord","isDataset","existingRecord","AbstractResourceStoreMixin","afterResourceRemoval","resourceRecord","CoreEventMixin","_startDate","_endDate","_duration","proposeStartDate","proposeEndDate","proposeDuration","inSet","fromRelationUpdate","skipAccessors","getStartDate","keepDuration","_this$startDate","inSetting","setStartDate","getEndDate","_this$endDate","setEndDate","getDuration","unit","keepStart","durationUnit","setDuration","getDurationUnit","changed","_me$assignmentStore","unresolved","storage","findItem","_me$assignmentStore2","cachedAssignments","applyValue","useProp","afterChange","wasSet","changedStart","changedEnd","changedDuration","calculate","currentOrProposedStartDate","currentOrProposedEndDate","currentOrProposedDuration","currentOrProposedDurationUnit","hourDuration","targetDuration","as","CoreResourceMixin","getResourcesAssignments","query","skipAccessor","asId","recordOrId","isModel","CoreAssignmentMixin","isEqual","persist","$master","isPerformingCommit","skipInvalidateIndices","invalidateIndices","resolved","resourceId","eventId","CorePartOfProjectStoreMixin","onCommitAsync","emptySet","CoreAssignmentStoreMixin","extraKeys","property","unique","getEventsAssignments","$original","updateIndices","rebuildIndices","afterLoadData","linkAssignments","modelName","unlinkAssignments","_assignment$modelName","getData","CoreCalendarMixin","CoreCalendarManagerStoreMixin","tree","CoreDependencyMixin","_this$dependencyStore2","fromEvent","toEvent","_this$eventStore2","_this$eventStore3","CoreDependencyStoreMixin","getIncomingDepsForEvent","getOutgoingDepsForEvent","CoreHasAssignmentsMixin","$cachedAssignments","_this$assigned","deep","ObjectHelper","isObject","skipFieldIdentifiers","CoreHasDependenciesMixin","outgoingDeps","incomingDeps","SchedulerCoreEvent","CoreEventStoreMixin","_this$assignmentStore2","CoreResourceStoreMixin","removing","_this$assignmentStore3","EventsWrapper","Events","DelayableWrapper","Delayable","AbstractProjectMixin","isInitialCommit","isInitialCommitPerformed","isLoadingInlineData","silenceInitialCommit","repopulateStore","repopulateReplica","deferUntilRepopulationIfNeeded","deferId","args","attachStore","detachStore","getStm","SchedulerCoreProjectMixin","configurable","eventModelClass","assignmentModelClass","resourceModelClass","dependencyModelClass","calendarModelClass","eventStoreClass","assignmentStoreClass","resourceStoreClass","dependencyStoreClass","calendarManagerStoreClass","assignmentsData","calendarsData","dependenciesData","eventsData","resourcesData","$invalidated","ongoing","_eventStore$crudManag","crudManager","isAssignmentStore","isSharingAssignmentStore","hasInlineData","loadInlineData","_me$eventStore","_me$dependencyStore","_me$resourceStore","_me$calendarManagerSt","_me$stm","tasksData","commitLoad","joinStoreRecords","unJoinStoreRecords","node","resolveStoreAndModelClass","setEventStore","changeEventStore","oldStore","addStore","hasStore","removeStore","oldEvent","newEvent","updateEventStore","setAssignmentStore","changeAssignmentStore","updateAssignmentStore","setResourceStore","changeResourceStore","oldResource","newResource","updateResourceStore","setDependencyStore","changeDependencyStore","updateDependencyStore","setCalendarManagerStore","changeCalendarManagerStore","_calendarManagerStore","_calendarManagerStore2","updateCalendarManagerStore","$calendar","effectiveCalendar","addEvent","addResource","addDependency","hasPendingAutoCommit","hasTimeout","unScheduleAutoCommit","doCommitAsync","silenceCommit","_store$suspendAutoCom","suspendAutoCommit","isCalculated","beginBatch","endBatch","_store$resumeAutoComm","resumeAutoCommit","propagateAsync","isValidDependency","$stm","StateTrackingManager","disabled","restoringStop","disable","enable","applyConfigs","dateFieldsToConvert","constraintDate","deadlineDate","Target","TimeZonedDatesMixin","TimeSpan","setLocalDate","getLocalDate","fromTimeZone","applyChangeset","rawChanges","getFieldPersistentValue","convertToTimeZone","metaModified","modified","convertFields","isTask","manuallyScheduled","clearChanges","isEmpty","allowNull","internal","column","fullDuration","magnitude","normalize","isOccurrence","_eventStore","_me$stores","isEventStore","hasDuration","DH","updateInternalCls","_cls","DomClassList","internalCls","isDomClassList","endingDate","parseFloat","updateDatesFromDuration","getDurationInUnit","doNotRound","Duration","parseDuration","calcEndDate","calcStartDate","setStartEndDate","dates","startOf","startDateMS","_ref","batching","hasBatchedChange","endDateMS","_ref2","durationMS","asMilliseconds","isMilestone","inSetNormalize","getFieldDefinition","convert","fieldOrClone","isFrozen","fieldToKeys","isEventModel","isTaskModel","validOnly","forEachDate","thisObj","isScheduled","amount","u","wbsCode","_wbsCode","indexPath","join","fullCopy","apply","intersects","timeSpan","intersectsRange","myStart","myEnd","intersectSpans","splitPoint","oldDuration","cloneDuration","ownNewDuration","unitsChanged","usesSingleAssignment","assignments","clonedData","toICSString","icsEventConfig","timestamp","DTSTAMP","startEnd","allDay","DTSTART","DTEND","VersionHelper","scheduler","getVersion","icsWrapConfig","BEGIN","VERSION","CALSCALE","PRODID","END","eventConfig","UID","CLASS","SUMMARY","recurrenceRule","RRULE","icsItems","eventItems","exportToICS","blob","Blob","BrowserHelper","downloadBlob","isEditable","isFieldModified","_$name","ResourceStoreMixin","Base","isResourceStore","loadPriority","syncPriority","storeId","autoTree","isResourceModel","onRecordIdChange","oldValue","isChangingId","updateAssignmentResourceIds","allResourceRecords","_allResourceRecords","getAllDataRecords","getAvailableResources","isDateRangeAvailable","PartOfProject","ResourceModelMixin","syncId","events","getEvents","deprecate","isPersistable","unassignAll","initials","names","firstInitial","lastInitial","_calendar$isWorkingTi","EngineMixin","ResourceModel","GridRowModel","exposeProperties","AjaxStore","ResourceStore","EventStoreMixin","removeUnassignedEvent","singleAssignment","filtersFunction","FunctionHelper","returnTrue","isCreating","getEventCounts","added","storeFilterFn","isFiltered","reapplyFilterOnAdd","includes","dateMap","forEachScheduledEvent","getTotalTimeSpan","earliest","latest","lastTotalTimeSpan","isEventPersistable","excludeEvent","generatedParent","allEvents","getEventsForResource","isAssignment","currentEvent","resources","eventToRemove","filterEventsForResource","getResourcesForEvent","getAssignmentsForEvent","getAssignmentsForResource","assignEventToResource","removeExistingAssignments","unassignEventFromResource","reassignEventFromResourceToResource","newResourceId","getAssignmentForEventAndResource","isEventAssignedToResource","removeAssignmentsForEvent","removeAssignmentsForResource","append","detachListeners","_project$assignmentSt","attachToAssignmentStore","assignmentStoreChange","prio","_usesSingleAssignment","isStore","hasGenerateIdOverride","generateId","singleAssignmentIdCounter","processRecords","eventRecords","_this$stm","assignmentsToAdd","reassignedFromReplace","includesAssignment","joinRecordsToStore","_me$crudManager","_me$modelClass$fieldM","resourceIds","skipEnforcingSingleAssignment","fieldMap","$processResourceIds","assignmentSet","processResourceIds","_me$crudManager2","_me$project","rId","useRawData","disableDefaultValue","disableDuplicateIdCheck","disableTypeConversion","verifyNoGeneratedIds","loadData","onBeforeRemoveAssignment","isRemoving","isSettingData","isSyncingDataOnLoad","assignmentRecord","isRemoved","onProjectAssignmentStoreChange","addPreCommit","isAssigning","_me$modelClass$fieldM2","isEvent","beforeRemove","removePreCommit","_me$modelClass$fieldM3","_me$getById","indexToRemove","removeAllPreCommit","_me$modelClass$fieldM4","allRecords","_me$modelClass$fieldM5","_me$modelClass$fieldM6","params","_this$stm2","isAssign","_this$crudManager","notRecurring","isRecurring","GetEventsMixin","startOnly","includeOccurrences","allowPartial","onlyAssigned","dayTime","getDateIndex","lastDateRange","passedFilter","ignoreFilters","setDate","dateFilter","eventStartDate","eventEndDate","betweenLesserEqual","newDateRange","processConfiguredListeners","old","Objects","getEventsAsMap","getEventsAsArray","allCount","candidateEvents","dateIndex","useDayIndex","eventSet","indexName","recurringEvents","startOfDay","coincidingEvents","getOccurrencesForDateRange","_dateMap","baseEventFilter","_me$recurringEvents","_coincidingEvents","occurrences","lastDate","bucket","occurrence","lastIntersectingDate","dateKey","indexNameMap","indexProps","emptyArray","freeze","MILLIS_PER_DAY","DayTime","EventDayIndex","MIDNIGHT","users","_this$dayTime$startOf","dateMS","_eventRecord$endDate","create","returnKey","initialized","initialize","ret","sync","allValues","matches","startShift","removeEvent","_this$dayTime$startOf2","replaced","_wasSet$startDate","_wasSet$endDate","addedCount","removedCount","replacedCount","outgoingEvent","isParent","register","unregister","proto","DayIndexMixin","dayIndices","_super$afterLoadData","syncIndices","onDataReplaced","onModelChange","invalidateDayIndices","_this$dayIndices","dayIndex","registerDayIndex","_this$dayIndices2","unregisterDayIndex","RecurringTimeSpansMixin","globalOccurrences","refreshRecurringEventsCache","isRecurrenceRelatedFieldChange","removeOccurrences","getOccurrencesForTimeSpan","recurrence","forEachOccurrence","getRecurringTimeSpans","RecurringEventsMixin","getRecurringEvents","supportsRecurring","dayParseRegExp","days","RecurrenceDayRuleEncoder","decodeDay","rawDay","parsedDay","encodeDay","position","decode","rawDays","encode","frequencyToUnitRe","frequencyToUnit","frequency","counter","isFirst","buildOccurrence","captureLastOccurrence","lastOccurrenceDate","AbstractRecurrenceIterator","MAX_OCCURRENCES_COUNT","processIterationConfig","until","syncingStartDate","isSyncedWithRule","timeSpanStart","earliestVisibleDate","extraArgs","timeSpanStartMS","earliestVisibleDateMS","spansStart","getOccurrenceIndex","getNthDayInPeriod","sign","borderDate","delta","buildDate","dt","isValidPosition","forEachDateAtPositions","positions","datesLength","processed","isInView","occurrenceDate","hasException","isInViewMS","occurenceDate","occurrenceDateMS","DailyRecurrenceIterator","intervalDuration","delayInIntervals","inView","WeeklyRecurrenceIterator","_weekDays","weekStartDay","startHours","startMinutes","startSeconds","startMS","weekDays","DayRuleEncoder","weekStartDate","MonthlyRecurrenceIterator","getNthDayOfMonth","dayNum","daysInMonth","hasPositions","processedDate","monthDays","weekDayPosition","monthStartDate","monthEndDate","weekDay","till","copyTimeValues","sortedMonthDates","YearlyRecurrenceIterator","months","yearStartDate","yearEndDate","recurrenceIterators","it","convertStringOfIntegerItemsValue","convertStringOfItemsValue","isEqualAsString","value1","value2","convertInteger","RecurrenceModel","isRecurrenceModel","dateFormat","_dateFormat","recurrenceIterator","_timeSpan","rule","part","sanitize","_suspendedTimeSpanNotifying","suspendTimeSpanNotifying","resumeTimeSpanNotifying","_me$timeSpan","timeSpanStartDate","isSanitizing","_me$monthDays","sanitizeRecurrenceData","isTimeSpanNotifyingSuspended","onRecurrenceChanged","convertExceptionDatesValue","ArrayHelper","asArray","makeKey","serializeExceptionDatesValue","parseKey","RecurringTimeSpan","serialize","cancelBatch","detachFromRecurringEvent","_this$firstStore","recurringEvent","firstStore","isRecurringTimeSpansMixin","recurrenceModel","_recurrenceModel","model","setRecurrence","recurrenceEnd","_recurrence","_recurringTimeSpan","occurrenceMap","_occurrencesMap","removeOccurrence","dateOrTimeSpan","isTimeSpan","createRecurrenceKey","removeOccurrencesFrom","_this$recurrence","exceptionDates","exceptionDate","_this$meta$modified","occurrenceIndex","occurrenceKey","onStartDate","occurrenceEndDate","dataSource","constraintType","creatingOccurrence","convertToRealEvent","_wasSet$resourceRecor","resourceRecords","newExceptionDate","addExceptionDate","_this$exceptionDates","oneDayMS","EventModelMixin","updateAssignmentEventIds","_me$fieldMap","newResourceIds","existingResourceIds","onlyInA","toAdd","onlyInB","forEachResource","getResource","getAllDayStartDate","getAllDayEndDate","wrapStartDate","wrapEndDate","isDraggable","readOnly","draggable","isResizable","resizable","wasPersistable","batchChanges","postamble","preamble","ignoreBag","updateModifiedBagForRecord","persistableData","_this$resource","applyResourceId","_this$fieldMap","_this$resources","ids","$linkedResources","_this$resources2","flatMap","$links","fromApplyValue","_me$resourceIds","suspendEvents","resumeEvents","applyResourceIds","_eventStore$crudManag2","_resourceIds","resourceIdToUpdate","mapping","removingResource","reassign","oldResourceId","predecessors","successors","dependencies","isInterDay","eventStartMidnight","getAllDayDisplayStartDate","getAllDayDisplayEndDate","isLeaf","EventModel","EventStore","AssignmentModelMixin","eventIdField","resourceIdField","eventField","resourceField","eventResourceKey","buildEventResourceKey","eventKey","resourceKey","internalId","buildIndexKey","_toSet$resource","isProAssignmentModel","_toSet$event","_me$resource","propagatingSyncChanges","_this$event","_this$event2","resourceName","_this$resource2","_this$event3","unjoinedStores","hasGeneratedId","isPhantom","round","units","shouldRecordFieldChange","newValue","oldIdMap","AssignmentModel","AssignmentStoreMixin","newAssignments","_assignment$event","createRecord","findIndex","addIndex","dependentOn","_storage","getOccurrence","originalAssignment","isOccurrenceAssignment","instanceMeta","instanceOrId","occurrenceInstanceMeta","occurrenceAssignment","instanceId","occurrenceMeta","mapAssignmentsForEvent","filterFn","fnSet","filterFnSet","mapResult","mapAssignmentsForResource","_resource","assignmentSetupFn","_event$assignments","existingAssignment","assignmentsToRemove","_a$resource","AssignmentStore","canonicalDependencyTypes","DependencyBaseModel","Type","StartToStart","StartToEnd","EndToStart","EndToEnd","to","_this$unjoinedStores$","hardType","getHardType","setHardType","fromSide","toSide","lag","setLag","lagUnit","getLag","getShortNameOfUnit","fullLag","getDateRange","sourceDate","targetDate","highlight","_this$highlighted","classes","highlighted","unhighlight","isHighlightedWith","getConnectorString","raw","rawValue","fromEventName","_this$fromEvent","toEventName","_this$toEvent","DependencyModel","getTypeFromSides","rtl","types","startSide","endSide","DependencyStoreMixin","reduceEventDependencies","reduceFn","flat","depsGetterFn","getEventDependencies","evt","mapEventDependencies","mapEventPredecessors","reduceEventPredecessors","mapEventSuccessors","reduceEventSuccessors","removeEventDependencies","removeEventPredecessors","removeEventSuccessors","getBySourceTargetId","makeDependencySourceTargetCompositeKey","getDependencyForSourceAndTargetEvents","sourceEvent","targetEvent","getEventsLinkingDependency","dependencyOrFromId","toId","isDependencyModel","isValidDependencyToCreate","fromId","getHighlightedDependencies","dep","getTimeSpanDependencies","DependencyStore","AbstractCrudManagerValidation","validateResponse","skipSuccessProperty","crudLoadValidationWarningPrefix","crudSyncValidationWarningPrefix","supportShortSyncResponseNote","disableValidationNote","crudLoadValidationMandatoryStores","getStoreLoadResponseWarnings","storeInfo","responded","expectedResponse","messages","mandatoryStores","rows","getLoadResponseWarnings","response","success","forEachCrudStore","stringify","validateLoadResponse","console","warn","getStoreSyncResponseWarnings","requested","missingRows","missingRemoved","phantomIdField","idField","respondedRows","respondedRemoved","showSupportShortSyncResponseNote","row","missingIds","supportShortSyncResponse","updated","missingUpdatedRows","getSyncResponseWarnings","requestDesc","request","pack","warnings","validateSyncResponse","AbstractCrudManagerError","CrudManagerRequestError","cfg","_cfg$request","_this$request","message","StringHelper","capitalize","storeSortFn","lhs","rhs","sortProperty","storeLoadSortFn","storeSyncSortFn","$$meta","$meta","isEvents","isDelayable","AbstractCrudManagerMixin","crudRevision","crudStores","storeIdProperty","crudFilterParam","transport","trackResponseType","phantomParentIdField","autoLoad","autoSyncTimeout","autoSync","resetIdsBeforeSync","syncApplySequence","orderedCrudStores","writeAllFields","crudIgnoreUpdates","autoSyncSuspendCounter","crudLoaded","applyingLoadResponse","applyingSyncResponse","callOnFunctions","loadUrl","syncUrl","forceSync","delayable","doAutoLoad","isCrudManager","_requestId","activeRequests","crudStoresIndex","afterConstruct","_autoLoadPromise","_this$transport","_this$transport$load","load","url","updateLoadUrl","setPath","_this$transport2","_this$transport2$sync","updateSyncUrl","getStoreDescriptor","storeDesc","getStore","fillStoreDescriptor","descriptor","updateCrudStoreIndex","getCrudStore","storeDescriptor","_crudStores","addCrudStore","_orderedCrudStores","_syncApplySequence","addStoreToApplySequence","internalAddCrudStore","setCrudManager","pageSize","autoCommit","createUrl","updateUrl","deleteUrl","readUrl","bindCrudStoreListeners","fromStore","_store","addPrioritizedStore","hasCrudStore","findInsertionIndex","hasApplySequenceStore","_this$crudStores","removeCrudStore","foundStore","unbindCrudStoreListeners","removeStoreFromApplySequence","addConfirmed","collection","sequenceKeys","onCrudStoreDestroy","source","onCrudStoreChange","crudStoreHasChanges","scheduleAutoSync","suspendAutoSync","resumeAutoSync","doSync","isAutoSyncSuspended","catch","triggerFailedRequestEvents","responseText","fetchOptions","requestType","responseOptions","internalOnResponse","revision","applyResponse","emitCrudStoreEvents","suspendChangesTracking","resumeChangesTracking","skipChangeCheck","isBatchingChanges","isCrudStoreDirty","eventParams","getLoadPackage","requestId","optionsCopy","_store$store","opts","page","currentPage","loadCrudStore","loadDataToCrudStore","__loading","loadCrudManagerData","isCrudManagerLoading","isCrudManagerSyncing","isLoadingOrSyncing","reject","_options","cancelRequest","desc","onCrudRequestSuccess","failure","onCrudRequestFailure","sendRequest","cancelled","getActiveCrudManagerRequest","prepareAddedRecordData","isTree","subStoreFields","allFields","deletePath","getRange","prepareAdded","list","prepareUpdated","recordData","modificationDataToWrite","getCrudStoreChanges","prepareRemoved","getChangesetPackage","getRowsToApplyChangesTo","storeResponse","storePack","_rows","_removed","idDataSource","requestUpdated","requestRemoved","remote","_storeResponse$rows","_storeResponse$remove","respondedIds","responseRecord","getPath","applyChangesToStore","getFieldDataSource","extraLogEntries","updateData","_storePack$added","_storePack$updated","recordRequest","extraLogInfo","log","logEntry","applySyncResponse","applyingChangeset","_request$pack","applyLoadResponse","responseType","transformFn","logChanges","storeLog","activeSyncPromise","finally","rawResponse","_request","_fetchOptions$abortCo","signal","abortController","wasAborted","aborted","acceptChanges","revertChanges","revertCrudStoreChanges","AjaxTransport","defaultMethod","requestPromise","_requestPromise$abort","abort","shouldUseBodyForRequestData","packCfg","method","paramName","transportConfig","requestConfig","body","headers","ajaxPromise","resultPromise","performSend","queryParams","AjaxHelper","fetch","_me$trigger","_me$trigger2","ok","callback","beforeSendResult","isPromise","_ajaxPromise$abort","_ajaxPromise","JsonEncoder","encoder","requestData","_this$encoder","safeJsonStringify","safeJsonParse","ProjectCrudManager","startConfigure","getConfig","_changesToClear","applyProjectResponse","applyingProjectResponse","startDateField","endDateField","delayEnteringReplica","recordsUnlinked","_request$pack2","_me$resumeAutoSync","_me$commitRespondedCh","propagationFlag","loud","commitRespondedChanges","_me$project2","stmDisabled","ignoreRemoteChangesInSTM","shouldClearRecordFieldChange","_field","entries","rest","changesMap","ProjectModelCommon","timeRanges","updateAssignments","updateDependencies","updateResources","timeRangeStore","getTimeRanges","updateTimeRanges","getResourceTimeRanges","resourceTimeRangeStore","ResourceTimeRangeModel","relations","foreignKey","foreignStore","relatedCollectionName","nullFieldOnRemove","domIdPrefix","domId","isResourceTimeRange","ResourceTimeRangeStore","_resourceStore","isConfiguring","initRelations","resourceTimeRange","getRanges","rangesInDateRange","span1","span2","ProjectModelTimeZoneMixin","$config","_storesWithDates","taskStore","overrideStoreProcessRecord","$originalProcessRecord","isDataSet","convertRecordToTimeZone","convertStoresToTimeZone","relayStoreChange","_records","stmAutoRecord","autoRecord","_record$baselines","$ignoreChange","baselines","bl","updateTimeZone","oldTimeZone","_isConfiguringTimeZone","ignoreRecordChanges","ProjectModelMixin","timeRangeModelClass","resourceTimeRangeModelClass","timeRangeStoreClass","resourceTimeRangeStoreClass","timeRangesData","json","resourceTimeRanges","inlineData","resourceTimeRangesData","$$name","updateTimeRangeStore","setTimeRangeStore","changeTimeRangeStore","updateResourceTimeRangeStore","changeResourceTimeRangeStore","setResourceTimeRangeStore","updateEvents","updateResourceTimeRanges","toJSON","changeJson","updateJson","ProjectCurrentConfig","getCurrentConfig","storeName","getInlineData","storeState","originalModelClass","isTaskStore","ModelPersistencyManager","newEventStore","eventStoreDetacher","beforecommit","onEventStoreBeforeSync","detachable","newResourceStore","resourceStoreDetacher","onResourceStoreBeforeSync","newAssignmentStore","assignmentStoreDetacher","_assignmentStore","onAssignmentStoreBeforeSync","newDependencyStore","dependencyStoreDetacher","_dependencyStore","onDependencyStoreBeforeSync","removeNonPersistableRecordsToCreate","shallContinueSync","recordsToCreate","ProjectModel","isTestEnv","globalThis","bryntum","testProject","modelPersistencyManager","createModelPersistencyManager","initClass","CrudManagerView","LoadMaskable","clearMaskDelay","testConfig","loadMask","onCrudManagerLoadStart","applySyncMask","syncMask","masked","Mask","mergeConfigs","loadMaskDefaults","bindCrudManager","loadStart","beforeSend","loadCanceled","syncStart","beforeApplyResponse","syncCanceled","requestFail","responseReceived","onCrudManagerBeforeSend","_this$applyStartEndPa","applyStartEndParameters","_this$toggleEmptyText","applyLoadMask","toggleEmptyText","onCrudManagerSyncStart","onCrudManagerBeforeApplyResponse","_this$suspendRefresh","suspendRefresh","onCrudManagerApplyResponse","_this$resumeRefresh","resumeRefresh","onCrudManagerRequestFinalize","successful","_me$toggleEmptyText","applyMaskError","L","onCrudManagerLoadCanceled","onCrudManagerSyncCanceled","onCrudManagerLoad","onCrudManagerSync","onCrudManagerRequestFail","onAjaxTransportResponseReceived","widgetClass"],"mappings":"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AAC9G,QAAQ,IAAI,IAAI,CAACnL,UAAU,CAACklB,oBAAoB,CAACzmC,SAAS,EAAEoC,OAAO,EAAE,IAAI,EAAEsqB,QAAQ,CAAC,CAAC,CAAA;AAC3G,GAAA;AACJ,CAAC;;ACxKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAeqR,CAAAA,MAAM,IAAI,MAAM2I,aAAa,UAAU3I,MAAM,IAAI2H,IAAI,EAAE;AAClE;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,WAAWzjB,KAAKA,GAAG;AACf,IAAA,OAAO,eAAe,CAAA;AAC1B,GAAA;AACJ,CAAC;;AChDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAA,CAAe8b,MAAM,IAAI,MAAM4I,kBAAkB,SAAS5I,MAAM,CAAC;EAC7D,WAAW9b,KAAKA,GAAG;AACf,IAAA,OAAO,oBAAoB,CAAA;AAC/B,GAAA;AACA;EACA,WAAW+jB,eAAeA,GAAG;AACzB,IAAA,OAAO,IAAI,CAAA;AACf,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;EACA,WAAW3f,MAAMA,GAAG;IAChB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACY,IAAA;AAAEvrB,MAAAA,IAAI,EAAG,MAAM;AAAE+R,MAAAA,IAAI,EAAG,QAAQ;AAAEknB,MAAAA,OAAO,EAAG,IAAA;KAAM;AAClD;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACY,YAAY;AACZ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;IACY,YAAY;AACZ;AACZ;AACA;AACA;AACA;AACA;IACY,UAAU;AACV;AACZ;AACA;AACA;AACA;A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GAAI,IAAI,CAACygB,iBAAiB,MAAAzY,aAAA,GAAI,IAAI,CAACtE,OAAO,MAAAsE,IAAAA,IAAAA,aAAA,uBAAZA,aAAA,CAAchI,QAAQ,CAAC,CAAA;AACnE,IAAA,OAAO,CAACA,QAAQ,KAAA,CAAA4rB,qBAAA,GAAI5rB,QAAQ,CAAC0Q,aAAa,MAAA,IAAA,IAAAkb,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAtBA,qBAAA,CAAArsC,IAAA,CAAAygB,QAAQ,EAAiBvkB,IAAI,CAAC,CAAA,CAAA;AACtD,GAAA;AACJ,CAAC;;AC/ND,MAAMowC,aAAW,GAAGjU,iBAAiB,CAAA;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMkU,aAAa,SAASb,kBAAkB,CAACD,aAAa,CAACa,aAAW,CAACv2B,MAAM,CAACy2B,YAAY,CAAC,CAAC,CAAC,CAAC;AAC3G;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,OAAOxlB,KAAK,GAAG,eAAe,CAAA;AAClC,CAAA;AACAulB,aAAa,CAACE,gBAAgB,EAAE,CAAA;AAChCF,aAAa,CAAChC,MAAM,GAAG,eAAe;;AChFtC,MAAM+B,aAAW,GAAGb,aAAa,CAACzP,sBAAsB,CAACjmB,MAAM,CAAC22B,SAAS,CAAC,CAAC,CAAA;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;EACA,WAAWvb,MAAMA,GAAG;IAChB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACY,IAAA;AACIvrB,MAAAA,IAAI,EAAO,YAAY;AACvBmkC,MAAAA,QAAQ,EAAG,IAAA;KACd;AACD;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,IAAA;AACInkC,MAAAA,IAAI,EAAO,aAAa;AACxB+R,MAAAA,IAAI,EAAO,OAAO;AAClBknB,MAAAA,OAAO,EAAI,KAAK;AAChBkL,MAAAA,QAAQ,EAAG,IAAA;KACd;AACD;AACZ;AACA;AACA;AACA;AACY,IAAA;AACInkC,MAAAA,IAAI,EAAK,WAAW;AACpBokC,MAAAA,MAAM,EAAG;AACLryB,QAAAA,IAAI,EAAG,oBAAA;OACV;AACDknB,MAAAA,OAAO,EAAI,KAAK;AAChBkL,MAAAA,QAAQ,EAAG,IAAI;AACfzM,MAAAA,OAAO,EAAI,IAAA;KACd;AACD;AACZ;AACA;AACA;AACA;AACA;AACY,IAAA;AACI13B,MAAAA,IAAI,EAAW,WA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CAAA;AACzC,OAAA;AACJ,KAAA;AACA,IAAA,OAAOA,OAAO,CAAA;AAClB,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIkjC,UAAUA,CAACzf,SAAS,EAAE;AAClB,IAAA,QAAQA,SAAS;AACb;AACA,MAAA,KAAK,SAAS,CAAA;AACd,MAAA,KAAK,UAAU,CAAA;AACf,MAAA,KAAK,cAAc;QACf,OAAO,IAAI,CAAC07B,MAAM,CAAA;AAC1B,KAAA;AACA,IAAA,OAAO,KAAK,CAACjc,UAAU,CAACzf,SAAS,CAAC,CAAA;AACtC,GAAA;AACA;AACJ,CAAC;;ACn3BD,MAAM0hB,aAAW,GAAGzQ,kBAAkB,CAAA;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM0qB,UAAU,SAASja,aAAW,CAACv2B,MAAM,CAACitB,QAAQ,CAAC,CAAC/pB,KAAK,CACtEunC,iBAAiB,EACjB/U,aAAa,EACbuX,eACJ,CAAC,CAAC;EACE,WAAWh8B,KAAKA,GAAG;AACf,IAAA,OAAO,YAAY,CAAA;AACvB,GAAA;AACJ,CAAA;AACAu/B,UAAU,CAAC9Z,gBAAgB,EAAE,CAAA;AAC7B8Z,UAAU,CAAChc,MAAM,GAAG,YAAY;;AC9FhC,MAAM+B,aAAW,GAAGb,aAAa,CAAC3P,mBAAmB,CAAC/lB,MAAM,CAAC22B,SAAS,CAAC,CAAC,CAAA;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM8Z,UAAU,SAASla,aAAW,CAACrzB,KAAK,CACrDkgC,oBAAoB,EACpBvM,eAAe,EACfkL,aAAa,EACb3E,cACJ,CAAC,CAAC;EACE,OAAOnsB,KAAK,GAAG,YAAY,CAAA;EAC3B,WAAWkF,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,UAAU,EAAGo6B,UAAAA;KAChB,CAAA;AACL,GAAA;AACJ,CAAA;AACAC,UAAU,CAACjc,MAAM,GAAG,YAAY;;ACpFhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAAA,CAAezH,MAAM,IAAI,MAAM2jB,oBAAoB,SAAS3jB,MAAM,CAAC;EAC/D,WAAW9b,KAAKA,GAAG;AACf,IAAA,OAAO,sBAAsB,CAAA;AACjC,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;EACA,WAAWoE,MAAMA,GAAG;IAChB,OAAO;AACH;AACZ;AACA;AACA;AACA;IACY,YAAY;AACZ;AACZ;AACA;AACA;AACA;IACY,SAAS;AACT;AACZ;AACA;AACA;AACA;AACY,IAAA;AAAEvrB,MAAAA,IAAI,EAAG,kBAAkB;AAAE+R,MAAAA,IAAI,EAAG,SAAA;AAAU,KAAC,EAC/C,OAAO,EACP,UAAU,CACb,CAAA;AACL,GAAA;AACA;AACAqV,EAAAA,SAASA,CAACuB,IAAI,EAAE,GAAGwU,IAAI,EAAE;AACrBxU,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAE,CAAA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM0vB,eAAe,SAAS7B,oBAAoB,CAAChb,aAAa,CAACa,aAAW,CAACv2B,MAAM,CAAC4T,KAAK,CAAC,CAAC,CAAC,CAAC;AACxG;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,WAAW3C,KAAKA,GAAG;AACf,IAAA,OAAO,iBAAiB,CAAA;AAC5B,GAAA;AACJ,CAAA;AACAshC,eAAe,CAAC7b,gBAAgB,EAAE,CAAA;AAClC6b,eAAe,CAAC/d,MAAM,GAAG,iBAAiB;;ACvF1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAAA,CAAezH,MAAM,IAAI,MAAMylB,oBAAoB,SAASzlB,MAAM,CAAC;EAC/D,WAAW9b,KAAKA,GAAG;AACf,IAAA,OAAO,sBAAsB,CAAA;AACjC,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,WAAWkF,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACYye,MAAAA,YAAY,EAAG,GAAG;AAClB;AACZ;AACA;AACA;AACYC,MAAAA,YAAY,EAAG,GAAG;AAClBC,MAAAA,OAAO,EAAG,aAAA;KACb,CAAA;AACL,GAAA;AACAv+B,EAAAA,GAAGA,CAACk8C,cAAc,EAAE,GAAGxrB,IAAI,EAAE;AACzBwrB,IAAAA,cAAc,GAAGrI,WAAW,CAACC,OAAO,CAACoI,cAAc,CAAC,CAAA;AACpD,IAAA,KAAK,IAAItpD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGspD,cAAc,CAAClrD,MAAM,EAAE4B,CAAC,EAAE,EAAE;AAAA,MAAA,IAAAupD,iBAAA,CAAA;AAC5C,MAAA,IAAI/2B,UAAU,GAAG82B,cAAc,CAACtpD,CAAC,CAAC,CAAA;AAClC,MAAA,IAAI,EAAEwyB,UAAU,YAAY/H,KAAK,CAAC,EAAE;QAChC6+B,cAAc,CAACtpD,CAAC,CAAC,GAAGwyB,UAAU,GAAG,IAAI,CAACg3B,YAAY,CAACh3B,UAAU,CAAC,CAAA;AAClE,OAAA;MACA,IAAI,CAAC,IAAI,CAACigB,mBAAmB,IAAI,IAAI,CAACza,OAAO,CAACyxB,SAAS,CAAC,kBAAkB,EAAEj3B,UAAU,CAACo1B,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AACnH,QAAA,MAAM,IAAIngD,KAAK,CAAE,CAAA,4BAAA,EAA8B+qB,UAAU,CAAC2H,OAAQ,CAAA,cAAA,EAAgB3H,UAAU,CAAC0H,UAAW,CAAA,CAAC,CAAC,CAAA;AAC9G,OAAA;MACA,IAAAqvB,CAAAA,iBAAA,GAAI/2B,UAAU,CAACK,KAAK,MAAA02B,IAAAA,IAAAA,iBAAA,KAAhBA,KAAAA,CAAAA,IAAAA,iBAAA,CAAkBvb,UAAU,EAAE;QAC9Bxb,UAAU,CAACwb,UAAU,GAAG,IAAI,CAAA;AAChC,OAAA;AACJ,KAAA;IACA,OAAO,KAAK,CAAC5gC,GAAG,CAACk8C,cAAc,EAAE,GAAGxrB,IAAI,CAAC,CAAA;AAC7C,GAAA;AACAqT,EAAAA,kBAAkBA,CAAChX,OAAO,EAAED,UAAU,EAAE;AACpC,IAAA,OAAO,IAAI,CAAClC,OAAO,CAACyxB,SAAS,CAAC,kBAAkB,EAAG,CAAA,EAAEtvB,OAAQ,CAAA,CAAA,EAAGD,UAAW,CAAC,CAAA,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;AAC9F,GAAA;EACA7Q,YAAYA,CAACC,IAAI,EAAE;IACf,IAAI,IAAI,CAAC4f,oBAAoB,EAAE;AAC3B,MAAA,MAAM,IAAIzhC,KAAK,CAAC,6IAA6I,CAAC,CAAA;AAClK,KAAA;AACA,IAAA,KAAK,CAAC4hB,YAAY,CAACC,IAAI,CAAC,CAAA;AAC5B,GAAA;AACA;AACA;AACA;AACA;EACA,IAAI0O,OAAOA,CAACA,OAAO,EAAE;IACjB,KAAK,CAACA,OAAO,GAAGA,OAAO,CAAA;AACvB;AACA;AACA,IAAA,IAAI,CAACA,OAAO,CAAC0xB,QAAQ,CAAC;AAAEjvB,MAAAA,QAAQ,EAAG,kBAAkB;AAAEkvB,MAAAA,WAAW,EAAG;AAAE92B,QAAAA,KAAK,EAAG,IAAI;AAAEN,QAAAA,QAAQ,EAAG,IAAA;AAAK,OAAA;AAAE,KAAC,CAAC,CAAA;AAC7G,GAAA;EACA,IAAIyF,OAAOA,GAAG;AACV;AACA,IAAA,OAAO,IAAI,CAAC4xB,QAAQ,IAAI,KAAK,CAAC5xB,OAAO,CAAA;AACzC,GAAA;AACA;AACA;AACA;EACA,IAAIuH,iBAAiBA,GAAG;AACpB,IAAA,OAAO,IAAI,CAAA;AACf,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIsqB,EAAAA,aAAaA,CAACC,kBAAkB,EAAEvT,UAAU,EAAE;AAC1C;IACA,IAAI,CAACuT,kBAAkB,IAAI,EAACvT,UAAU,KAAVA,IAAAA,IAAAA,UAAU,KAAVA,KAAAA,CAAAA,IAAAA,UAAU,CAAEpR,YAAY,CAAE,EAAA;AAClD,MAAA,OAAO2kB,kBAAkB,CAAA;AAC7B,KAAA;AACA;IACA,MAAMhxC,EAAE,GAAG,IAAI,CAAA;IACf,OAAO;MACHrJ,EAAE,EAAwB,GAAE8mC,UAAU,CAAC9mC,EAAG,CAAIq6C,EAAAA,EAAAA,kBAAkB,CAACr6C,EAAG,CAAC,CAAA;AACrEojB,MAAAA,KAAK,EAAoB0jB,UAAU;MACnChkB,QAAQ,EAAiBu3B,kBAAkB,CAACv3B,QAAQ;MACpD4H,OAAO,EAAkBoc,UAAU,CAAC9mC,EAAE;AACtCyqB,MAAAA,UAAU,EAAe4vB,kBAAkB,CAACv3B,QAAQ,CAAC9iB,EAAE;AACvDy/B,MAAAA,YAAY,EAAa,IAAI;AAC7B;AACA6a,MAAAA,sBAAsB,EAAG,IAAI;AAC7B;MACAC,YAAYA,CAACC,YAAY,EAAE;AACvB,QAAA,OAAOnxC,EAAE,CAACoxC,sBAAsB,CAAC,IAAI,EAAED,YAAY,CAAC,CAAA;AACxD,OAAA;KACH,CAAA;AACL,GAAA;AACA;AACAC,EAAAA,sBAAsBA,CAACC,oBAAoB,EAAEF,YAAY,EAAE;IACvD,MACInxC,EAAE,GAAW,IAAI;AACjBsxC,MAAAA,UAAU,GAAGH,YAAY,CAACx6C,EAAE,IAAIw6C,YAAY;AAC5C,MAAA;AAAEx6C,QAAAA,EAAAA;AAAG,OAAC,GAAO06C,oBAAoB,CAAA;IACrC,IAAI;AAAEE,MAAAA,cAAAA;AAAe,KAAC,GAAGvxC,EAAE,CAAA;IAC3B,IAAI,CAACuxC,cAAc,EAAE;AACjBA,MAAAA,cAAc,GAAGvxC,EAAE,CAACuxC,cAAc,GAAG,EAAE,CAAA;AAC3C,KAAA;AACA,IAAA,IAAI,CAACA,cAAc,CAAC56C,EAAE,CAAC,EAAE;AACrB46C,MAAAA,cAAc,CAAC56C,EAAE,CAAC,GAAG,EAAE,CAAA;AAC3B,KAAA;AACA,IAAA,OAAO46C,cAAc,CAAC56C,EAAE,CAAC,CAAC26C,UAAU,CAAC,KAAKC,cAAc,CAAC56C,EAAE,CAAC,CAAC26C,UAAU,CAAC,GAAG,EAAE,CAAC,CAAA;AAClF,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIE,EAAAA,sBAAsBA,CAACz3B,KAAK,EAAExoB,EAAE,EAAEkgD,QAAQ,EAAE;IACxC13B,KAAK,GAAG,IAAI,CAACzL,UAAU,CAACqG,OAAO,CAACoF,KAAK,CAAC,CAAA;AACtC,IAAA,MACI23B,KAAK,GAAartC,OAAO,CAAC9S,EAAE,CAAC;AAC7BogD,MAAAA,WAAW,GAAOttC,OAAO,CAACotC,QAAQ,CAAC,CAAA;IACvC,IAAIC,KAAK,IAAIC,WAAW,EAAE;MACtB,OAAO53B,KAAK,CAACsW,WAAW,CAACrzB,MAAM,CAAC,CAAC5O,MAAM,EAAEsrB,UAAU,KAAK;QACpD,MAAMk4B,SAAS,GAAGF,KAAK,GAAGngD,EAAE,CAACmoB,UAAU,CAAC,GAAGA,UAAU,CAAA;AACrD,QAAA,IAAI,CAACi4B,WAAW,IAAIF,QAAQ,CAACG,SAAS,CAAC,EAAE;AACrCxjD,UAAAA,MAAM,CAAC3H,IAAI,CAACmrD,SAAS,CAAC,CAAA;AAC1B,SAAA;AACA,QAAA,OAAOxjD,MAAM,CAAA;OAChB,EAAE,EAAE,CAAC,CAAA;AACV,KAAA;IACA,OAAO2rB,KAAK,CAACsW,WAAW,CAAA;AAC5B,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIwhB,EAAAA,yBAAyBA,CAACp4B,QAAQ,EAAEloB,EAAE,EAAEkgD,QAAQ,EAAE;IAC9Ch4B,QAAQ,GAAG,IAAI,CAACjL,aAAa,CAACmG,OAAO,CAAC8E,QAAQ,CAAC,CAAA;AAC/C,IAAA,MACIi4B,KAAK,GAAartC,OAAO,CAAC9S,EAAE,CAAC;AAC7BogD,MAAAA,WAAW,GAAOttC,OAAO,CAACotC,QAAQ,CAAC,CAAA;IACvC,IAAIC,KAAK,IAAIC,WAAW,EAAE;MACtB,OAAOl4B,QAAQ,CAAC4W,WAAW,CAACrzB,MAAM,CAAC,CAAC5O,MAAM,EAAEsrB,UAAU,KAAK;QACvD,MAAMk4B,SAAS,GAAGF,KAAK,GAAGngD,EAAE,CAACmoB,UAAU,CAAC,GAAGA,UAAU,CAAA;AACrD,QAAA,IAAI,CAACi4B,WAAW,IAAIF,QAAQ,CAACG,SAAS,CAAC,EAAE;AACrCxjD,UAAAA,MAAM,CAAC3H,IAAI,CAACmrD,SAAS,CAAC,CAAA;AAC1B,SAAA;AACA,QAAA,OAAOxjD,MAAM,CAAA;OAChB,EAAE,EAAE,CAAC,CAAA;AACV,KAAA;IACA,OAAOqrB,QAAQ,CAAC4W,WAAW,CAAA;AAC/B,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIqG,sBAAsBA,CAAC3c,KAAK,EAAE;IAC1B,OAAOA,KAAK,CAACsW,WAAW,CAAA;AAC5B,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI8G,yBAAyBA,CAACpd,KAAK,EAAE;AAC7B,IAAA,OAAO,IAAI,CAAC5K,MAAM,CAAC4K,KAAK,CAACsW,WAAW,CAAC,CAAA;AACzC,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIsG,yBAAyBA,CAACld,QAAQ,EAAE;IAChCA,QAAQ,GAAG,IAAI,CAACjL,aAAa,CAACmG,OAAO,CAAC8E,QAAQ,CAAC,CAAA;IAC/C,OAAOA,QAAQ,CAAC4W,WAAW,CAAA;AAC/B,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI+G,4BAA4BA,CAAC3d,QAAQ,EAAE;IACnC,IAAI,CAACtK,MAAM,CAAC,IAAI,CAACwnB,yBAAyB,CAACld,QAAQ,CAAC,CAAC,CAAA;AACzD,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIgd,oBAAoBA,CAAC1c,KAAK,EAAE;IACxB,OAAOA,KAAK,CAACuc,SAAS,CAAA;AAC1B,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIH,oBAAoBA,CAAC1c,QAAQ,EAAE;AAAA,IAAA,IAAAq4B,SAAA,CAAA;IAC3Br4B,QAAQ,GAAG,IAAI,CAACjL,aAAa,CAACmG,OAAO,CAAC8E,QAAQ,CAAC,CAAA;IAC/C,OAAAq4B,CAAAA,SAAA,GAAOr4B,QAAQ,MAAA,IAAA,IAAAq4B,SAAA,KAARA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,SAAA,CAAUle,MAAM,CAAA;AAC3B,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIgD,EAAAA,qBAAqBA,CAAC7c,KAAK,EAAEuc,SAAS,EAAEyb,iBAAiB,GAAG,IAAI,EAAElb,yBAAyB,GAAG,KAAK,EAAE;AAAA,IAAA,IAAAhQ,cAAA,CAAA;IACjG,MACI7mB,EAAE,GAAS,IAAI;MACf8c,QAAQ,GAAG+Z,yBAAyB,GAAG,IAAIx5B,GAAG,CAAC0c,KAAK,CAACsW,WAAW,CAAC,GAAG,IAAI,CAAA;AAC5EiG,IAAAA,SAAS,GAAG6R,WAAW,CAACC,OAAO,CAAC9R,SAAS,CAAC,CAACv5B,GAAG,CAACzM,CAAC,IAAIA,CAAC,CAACwxB,SAAS,IAAIxxB,CAAC,CAAC,CAAA;IACrE,IAAAu2B,CAAAA,cAAA,GAAI7mB,EAAE,CAACsO,UAAU,MAAAuY,IAAAA,IAAAA,cAAA,KAAbA,KAAAA,CAAAA,IAAAA,cAAA,CAAeuJ,oBAAoB,EAAE;AAAA,MAAA,IAAA4hB,kBAAA,CAAA;AACrC;MACA,IAAAA,CAAAA,kBAAA,GAAIj4B,KAAK,CAACsW,WAAW,MAAA2hB,IAAAA,IAAAA,kBAAA,KAAjBA,KAAAA,CAAAA,IAAAA,kBAAA,CAAmB1sD,MAAM,EAAE;AAC3B,QAAA,IAAI,CAAC0a,EAAE,CAACk3B,yBAAyB,CAACnd,KAAK,EAAEuc,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;AACpDvc,UAAAA,KAAK,CAACN,QAAQ,GAAG6c,SAAS,CAAC,CAAC,CAAC,CAAA;AACjC,SAAA;AACA,QAAA,OAAO,EAAE,CAAA;AACb,OAAA;AACA;WACK;QACDvc,KAAK,CAACqH,UAAU,GAAGkV,SAAS,CAAC,CAAC,CAAC,CAAC3/B,EAAE,CAAA;AACtC,OAAA;AACJ,KAAA;IACA,IAAI65C,cAAc,GAAG,EAAE,CAAA;IACvBxwC,EAAE,CAAC4pB,iBAAiB,EAAE,CAAA;AACtB;AACA0M,IAAAA,SAAS,CAACzyB,OAAO,CAAC4V,QAAQ,IAAI;MAC1B,MAAMw4B,kBAAkB,GAAGjyC,EAAE,CAACi3B,gCAAgC,CAACld,KAAK,EAAEN,QAAQ,CAAC,CAAA;MAC/E,IAAI,CAACw4B,kBAAkB,EAAE;AACrB,QAAA,MAAMv4B,UAAU,GAAG;UACfK,KAAK;AACLN,UAAAA,QAAAA;SACH,CAAA;AACD+2B,QAAAA,cAAc,CAAC/pD,IAAI,CAAC,CAAAsrD,iBAAiB,KAAjBA,IAAAA,IAAAA,iBAAiB,KAAjBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,iBAAiB,CAAGr4B,UAAU,CAAC,KAAIA,UAAU,CAAC,CAAA;OACrE,MACI,IAAImd,yBAAyB,EAAE;AAChC/Z,QAAAA,QAAQ,CAAC9S,MAAM,CAACioC,kBAAkB,CAAC,CAAA;AACvC,OAAA;AACJ,KAAC,CAAC,CAAA;AACFzB,IAAAA,cAAc,GAAGxwC,EAAE,CAAC1L,GAAG,CAACk8C,cAAc,CAAC,CAAA;AACvC,IAAA,IAAI3Z,yBAAyB,EAAE;MAC3B72B,EAAE,CAACmP,MAAM,CAACrqB,KAAK,CAACsZ,IAAI,CAAC0e,QAAQ,CAAC,CAAC,CAAA;AACnC,KAAA;AACA;IACA9c,EAAE,CAACiqB,gBAAgB,EAAE,CAAA;AACrB,IAAA,OAAOumB,cAAc,CAAA;AACzB,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI1Z,EAAAA,yBAAyBA,CAAC/c,KAAK,EAAEuc,SAAS,EAAE;IACxC,MACIt2B,EAAE,GAAG,IAAI;AACTkyC,MAAAA,mBAAmB,GAAG,EAAE,CAAA;IAC5B,IAAI,CAAC5b,SAAS,EAAE;AACZ,MAAA,OAAOt2B,EAAE,CAACm3B,yBAAyB,CAACpd,KAAK,CAAC,CAAA;AAC9C,KAAA;AACAuc,IAAAA,SAAS,GAAG6R,WAAW,CAACC,OAAO,CAAC9R,SAAS,CAAC,CAAA;AAC1C,IAAA,KAAK,IAAIpvC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGovC,SAAS,CAAChxC,MAAM,EAAE4B,CAAC,EAAE,EAAE;MACvC,IAAI8Y,EAAE,CAACk3B,yBAAyB,CAACnd,KAAK,EAAEuc,SAAS,CAACpvC,CAAC,CAAC,CAAC,EAAE;AACnDgrD,QAAAA,mBAAmB,CAACzrD,IAAI,CAACuZ,EAAE,CAACi3B,gCAAgC,CAACld,KAAK,EAAEuc,SAAS,CAACpvC,CAAC,CAAC,CAAC,CAAC,CAAA;AACtF,OAAA;AACJ,KAAA;AACA,IAAA,OAAO8Y,EAAE,CAACmP,MAAM,CAAC+iC,mBAAmB,CAAC,CAAA;AACzC,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIhb,EAAAA,yBAAyBA,CAACnd,KAAK,EAAEN,QAAQ,EAAE;IACvC,OAAOpV,OAAO,CAAC,IAAI,CAAC4yB,gCAAgC,CAACld,KAAK,EAAEN,QAAQ,CAAC,CAAC,CAAA;AAC1E,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIwd,EAAAA,gCAAgCA,CAACld,KAAK,EAAEN,QAAQ,EAAE;AAC9C,IAAA,IAAI4W,WAAW,CAAA;AACf;AACA;AACA,IAAA,IACI,EAAEtW,KAAK,GAAG,IAAI,CAACzL,UAAU,CAACqG,OAAO,CAACoF,KAAK,CAAC,CAAC,IACzC,EAAEsW,WAAW,GAAGtW,KAAK,CAACsW,WAAW,CAAC;AAClC;AACA;AACA;AACA,IAAA,EAAE5W,QAAQ,GAAG,IAAI,CAACjL,aAAa,CAACuS,OAAO,CAACpM,OAAO,CAAC8E,QAAQ,CAAC,CAAC,EAC5D;AACE,MAAA,OAAO,IAAI,CAAA;AACf,KAAA;IACA,OAAO,IAAI,CAACs3B,aAAa,CAAC1gB,WAAW,CAAC3d,IAAI,CAACnsB,CAAC,IAAA;AAAA,MAAA,IAAA4rD,WAAA,CAAA;AAAA,MAAA,OAAI,CAAAA,CAAAA,WAAA,GAAA5rD,CAAC,CAACkzB,QAAQ,MAAA,IAAA,IAAA04B,WAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAVA,WAAA,CAAYrwB,SAAS,MAAKrI,QAAQ,CAACqI,SAAS,CAAA;KAAC,CAAA,EAAE/H,KAAK,CAAC,CAAA;AACzG,GAAA;AACA;AACJ,CAAC;;ACrbD,MAAMua,aAAW,GAAGb,aAAa,CAAChS,wBAAwB,CAAC1jB,MAAM,CAAC22B,SAAS,CAAC,CAAC,CAAA;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM0d,eAAe,SAAS7B,oBAAoB,CAACjc,aAAW,CAAC,CAAC;EAC3E,OAAOtlB,KAAK,GAAG,iBAAiB,CAAA;EAChC,WAAWkF,aAAaA,GAAG;IACvB,OAAO;AACHC,MAAAA,UAAU,EAAGm8B,eAAAA;KAChB,CAAA;AACL,GAAA;AACJ,CAAA;AACA8B,eAAe,CAAC7f,MAAM,GAAG,iBAAiB;;ACrD1C;AACA;AACA;AACA,MAAM8f,wBAAwB,GAAG,CAC7B,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,CACP,CAAA;AACD;AACA;AACA;AACA;AACA;AACe,MAAMC,mBAAmB,SAAS3gC,KAAK,CAAC;EACnD,WAAW3C,KAAKA,GAAG;AACf,IAAA,OAAO,qBAAqB,CAAA;AAChC,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,WAAWujC,IAAIA,GAAG;IACd,OAAO;AACHC,MAAAA,YAAY,EAAG,CAAC;AAChBC,MAAAA,UAAU,EAAK,CAAC;AAChBC,MAAAA,UAAU,EAAK,CAAC;AAChBC,MAAAA,QAAQ,EAAO,CAAA;KAClB,CAAA;AACL,GAAA;EACA,WAAWv/B,MAAMA,GAAG;IAChB,OAAO;AACH;AACA;AACZ;AACA;AACA;AACA;AACY,IAAA;AAAEvrB,MAAAA,IAAI,EAAG,MAAA;KAAQ;AACjB;AACZ;AACA;AACA;AACA;AACY,IAAA;AAAEA,MAAAA,IAAI,EAAG,IAAA;KAAM;AACf;AACZ;AACA;AACA;AACA;AACY,IAAA;AAAEA,MAAAA,IAAI,EAAG,MAAM;AAAE+R,MAAAA,IAAI,EAAG,KAAK;AAAEyZ,MAAAA,YAAY,EAAG,CAAA;KAAG;AACjD;AACZ;AACA;AACA;AACA;AACY,IAAA;AAAExrB,MAAAA,IAAI,EAAG,KAAK;AAAEwrB,MAAAA,YAAY,EAAG,EAAA;KAAI;AACnC;AACZ;AACA;AACA;AACA;AACY,IAAA;AAAExrB,MAAAA,IAAI,EAAG,eAAe;AAAE+R,MAAAA,IAAI,EAAG,SAAA;KAAW;AAC5C;AACZ;AACA;AACA;AACA;AACY,IAAA;AAAE/R,MAAAA,IAAI,EAAG,UAAU;AAAE+R,MAAAA,IAAI,EAAG,QAAA;KAAU;AACtC;AACZ;AACA;AACA;AACA;AACY,IAAA;AAAE/R,MAAAA,IAAI,EAAG,QAAQ;AAAE+R,MAAAA,IAAI,EAAG,QAAA;KAAU;AACpC;AACZ;AACA;AACA;AACA;AACY,IAAA;AAAE/R,MAAAA,IAAI,EAAG,KAAK;AAAE+R,MAAAA,IAAI,EAAG,QAAQ;AAAEmyB,MAAAA,SAAS,EAAG,IAAI;AAAE1Y,MAAAA,YAAY,EAAG,CAAA;KAAG;AACrE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,IAAA;AACIxrB,MAAAA,IAAI,EAAW,SAAS;AACxB+R,MAAAA,IAAI,EAAW,QAAQ;AACvByZ,MAAAA,YAAY,EAAG,GAAA;AACnB,KAAC,EACD;AAAExrB,MAAAA,IAAI,EAAG,aAAa;AAAEi5B,MAAAA,OAAO,EAAG,KAAK;AAAEkL,MAAAA,QAAQ,EAAG,IAAA;AAAK,KAAC,CAC7D,CAAA;AACL,GAAA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;EACA/c,SAASA,CAACuB,IAAI,EAAE;IACZ,MACIpS,IAAI,GAAGoS,IAAI,CAAC,IAAI,CAACmoB,QAAQ,CAACv6B,IAAI,CAACksC,UAAU,CAAC;MAC1CsI,EAAE,GAAKpiC,IAAI,CAAC,IAAI,CAACmoB,QAAQ,CAACia,EAAE,CAACtI,UAAU,CAAC,CAAA;AAC5C;IACA,IAAIlsC,IAAI,IAAI,IAAI,EAAE;MACdoS,IAAI,CAACoS,SAAS,GAAGxkB,IAAI,CAAA;AACzB,KAAA;IACA,IAAIw0C,EAAE,IAAI,IAAI,EAAE;MACZpiC,IAAI,CAACqS,OAAO,GAAG+vB,EAAE,CAAA;AACrB,KAAA;AACA,IAAA,KAAK,CAAC3jC,SAAS,CAAC,GAAGzpB,SAAS,CAAC,CAAA;AACjC,GAAA;AACA;EACA,IAAI8oB,UAAUA,GAAG;AAAA,IAAA,IAAAukC,qBAAA,CAAA;AACb,IAAA,OAAO,IAAI,CAACvkC,UAAU,KAAAukC,CAAAA,qBAAA,GAAI,IAAI,CAAC/C,cAAc,CAAC,CAAC,CAAC,MAAA,IAAA,IAAA+C,qBAAA,KAAtBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAA,CAAwBvkC,UAAU,CAAA,CAAA;AAChE,GAAA;EACA,IAAIlQ,IAAIA,CAACtR,KAAK,EAAE;IACZ,MAAM;AAAE81B,MAAAA,SAAAA;AAAU,KAAC,GAAG,IAAI,CAAA;AAC1B;AACA;AACA,IAAA,IAAIA,SAAS,KAAA,IAAA,IAATA,SAAS,KAAA,KAAA,CAAA,IAATA,SAAS,CAAEjC,OAAO,IAAIiC,SAAS,CAACjsB,EAAE,KAAK7J,KAAK,EAAE;AAC9C,MAAA,IAAI,CAAC8T,GAAG,CAAC,MAAM,EAAE9T,KAAK,CAAC,CAAA;AAC3B,KAAC,MACI;MACD,IAAI,CAAC81B,SAAS,GAAG91B,KAAK,CAAA;AAC1B,KAAA;AACJ,GAAA;EACA,IAAIsR,IAAIA,GAAG;AACP,IAAA,OAAO,IAAI,CAAClM,GAAG,CAAC,MAAM,CAAC,CAAA;AAC3B,GAAA;EACA,IAAI0gD,EAAEA,CAAC9lD,KAAK,EAAE;IACV,MAAM;AAAE+1B,MAAAA,OAAAA;AAAQ,KAAC,GAAG,IAAI,CAAA;AACxB;AACA;AACA,IAAA,IAAIA,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,IAAPA,OAAO,CAAElC,OAAO,IAAIkC,OAAO,CAAClsB,EAAE,KAAK7J,KAAK,EAAE;AAC1C,MAAA,IAAI,CAAC8T,GAAG,CAAC,IAAI,EAAE9T,KAAK,CAAC,CAAA;AACzB,KAAC,MACI;MACD,IAAI,CAAC+1B,OAAO,GAAG/1B,KAAK,CAAA;AACxB,KAAA;AACJ,GAAA;EACA,IAAI8lD,EAAEA,GAAG;AACL,IAAA,OAAO,IAAI,CAAC1gD,GAAG,CAAC,IAAI,CAAC,CAAA;AACzB,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAI4gD,QAAQA,GAAG;AACX,IAAA,OAAO,IAAI,CAACC,WAAW,EAAE,CAAA;AAC7B,GAAA;EACA,IAAID,QAAQA,CAACl5C,IAAI,EAAE;AACf,IAAA,IAAI,CAACo5C,WAAW,CAACp5C,IAAI,CAAC,CAAA;AAC1B,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACIm5C,EAAAA,WAAWA,GAAG;AACV,IAAA,OAAO,IAAI,CAAC7gD,GAAG,CAAC,MAAM,CAAC,CAAA;AAC3B,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI8gD,WAAWA,CAACp5C,IAAI,EAAE;AACd,IAAA,IAAIxL,MAAM,CAAA;AACV,IAAA,IAAIwL,IAAI,KAAK,IAAI,CAACk5C,QAAQ,EAAE;AACxB1kD,MAAAA,MAAM,GAAG,IAAI,CAACwS,GAAG,CAAC;QACdhH,IAAI;AACJq5C,QAAAA,QAAQ,EAAG,IAAI;AACfC,QAAAA,MAAM,EAAK,IAAA;AACf,OAAC,CAAC,CAAA;AACN,KAAA;AACA,IAAA,OAAO9kD,MAAM,CAAA;AACjB,GAAA;EACA,IAAI+kD,GAAGA,GAAG;AACN,IAAA,OAAO,IAAI,CAACjhD,GAAG,CAAC,KAAK,CAAC,CAAA;AAC1B,GAAA;EACA,IAAIihD,GAAGA,CAACA,GAAG,EAAE;AACT,IAAA,IAAI,CAACC,MAAM,CAACD,GAAG,CAAC,CAAA;AACpB,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,MAAMA,CAACD,GAAG,EAAEE,OAAO,GAAG,IAAI,CAACA,OAAO,EAAE;AAChC;AACA;AACA,IAAA,IAAI7tD,SAAS,CAACF,MAAM,KAAK,CAAC,EAAE;AACxB,MAAA,IAAI,OAAO6tD,GAAG,KAAK,QAAQ,EAAE;QACzB,IAAI,CAACA,GAAG,GAAGA,GAAG,CAAA;AAClB,OAAC,MACI;AACDA,QAAAA,GAAG,GAAG7rC,UAAU,CAACgmB,aAAa,CAAC6lB,GAAG,CAAC,CAAA;QACnC,IAAI,CAACvyC,GAAG,CAAC;UACLuyC,GAAG,EAAOA,GAAG,CAAChnB,SAAS;UACvBknB,OAAO,EAAGF,GAAG,CAACz0B,IAAAA;AAClB,SAAC,CAAC,CAAA;AACN,OAAA;AACA,MAAA,OAAA;AACJ,KAAA;AACA;AACAy0B,IAAAA,GAAG,GAAGlmB,UAAU,CAACkmB,GAAG,CAAC,CAAA;IACrB,IAAI,CAACvyC,GAAG,CAAC;MACLuyC,GAAG;AACHE,MAAAA,OAAAA;AACJ,KAAC,CAAC,CAAA;AACN,GAAA;AACAC,EAAAA,MAAMA,GAAG;IACL,IAAI,IAAI,CAACH,GAAG,EAAE;AACV,MAAA,OAAQ,CAAE,EAAA,IAAI,CAACA,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAI,CAAExtD,EAAAA,IAAI,CAACE,GAAG,CAAC,IAAI,CAACstD,GAAG,CAAE,CAAA,EAAE7rC,UAAU,CAACisC,kBAAkB,CAAC,IAAI,CAACF,OAAO,CAAE,CAAC,CAAA,CAAA;AAC3G,KAAA;AACA,IAAA,OAAO,EAAE,CAAA;AACb,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIG,OAAOA,GAAG;IACV,OAAO,IAAInmB,QAAQ,CAAC;MAChB3O,IAAI,EAAQ,IAAI,CAAC20B,OAAO;MACxBlnB,SAAS,EAAG,IAAI,CAACgnB,GAAAA;AACrB,KAAC,CAAC,CAAA;AACN,GAAA;EACA,IAAIK,OAAOA,CAACL,GAAG,EAAE;AACb,IAAA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;AACzB,MAAA,IAAI,CAACC,MAAM,CAACD,GAAG,CAAC,CAAA;AACpB,KAAC,MACI;MACD,IAAI,CAACC,MAAM,CAACD,GAAG,CAAChnB,SAAS,EAAEgnB,GAAG,CAACz0B,IAAI,CAAC,CAAA;AACxC,KAAA;AACJ,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,IAAIqV,aAAaA,GAAG;IAChB,MACI/zB,EAAE,GAAG,IAAI;AACT,MAAA;QAAEyS,MAAM;AAAEq9B,QAAAA,cAAAA;AAAe,OAAC,GAAG9vC,EAAE;AAC/B4Q,MAAAA,KAAK,GAAG6B,MAAM,CAAC,CAAC,CAAC,CAAA;AACrB,IAAA,IAAIrkB,MAAM,CAAA;AACV,IAAA,IAAIwiB,KAAK,EAAE;MACP,MACI;UAAEgS,SAAS;AAAEC,UAAAA,OAAAA;AAAQ,SAAC,GAAG7iB,EAAE;QAC3BwmB,WAAW,GAAc5V,KAAK,CAAC4V,WAAW,CAAA;AAC9C;AACA;AACAp4B,MAAAA,MAAM,GAAGw0B,SAAS,KAAK4D,WAAW,IAAI,CAAC5D,SAAS,CAACmtB,cAAc,CAAC,IAAIltB,OAAO,KAAK2D,WAAW,IAAI,CAAC3D,OAAO,CAACktB,cAAc,CAAC,CAAA;AAC3H,KAAC,MACI;AACD3hD,MAAAA,MAAM,GAAGiW,OAAO,CAACyrC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAA;AACvC,KAAA;AACA,IAAA,OAAO1hD,MAAM,IAAI,KAAK,CAAC2lC,aAAa,CAAA;AACxC,GAAA;AACA0f,EAAAA,YAAYA,GAAG;IACX,MAAM;MAAE7wB,SAAS;AAAEC,MAAAA,OAAAA;AAAQ,KAAC,GAAG,IAAI,CAAA;AACnC,IAAA,IAAID,SAAS,KAAA,IAAA,IAATA,SAAS,KAAA,KAAA,CAAA,IAATA,SAAS,CAAEoM,WAAW,IAAInM,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,IAAPA,OAAO,CAAEmM,WAAW,EAAE;AAChD,MAAA,MAAMujB,IAAI,GAAGD,mBAAmB,CAACC,IAAI,CAAA;MACrC,IAAImB,UAAU,EACVC,UAAU,CAAA;MACd,QAAQ,IAAI,CAAC/5C,IAAI;QACb,KAAK24C,IAAI,CAACC,YAAY;UAClBkB,UAAU,GAAG9wB,SAAS,CAACgL,WAAW,CAAA;UAClC+lB,UAAU,GAAG9wB,OAAO,CAAC+K,WAAW,CAAA;AAChC,UAAA,MAAA;QACJ,KAAK2kB,IAAI,CAACE,UAAU;UAChBiB,UAAU,GAAG9wB,SAAS,CAACgL,WAAW,CAAA;UAClC+lB,UAAU,GAAG9wB,OAAO,CAACmL,SAAS,CAAA;AAC9B,UAAA,MAAA;QACJ,KAAKukB,IAAI,CAACI,QAAQ;UACde,UAAU,GAAG9wB,SAAS,CAACoL,SAAS,CAAA;UAChC2lB,UAAU,GAAG9wB,OAAO,CAACmL,SAAS,CAAA;AAC9B,UAAA,MAAA;QACJ,KAAKukB,IAAI,CAACG,UAAU;UAChBgB,UAAU,GAAG9wB,SAAS,CAACoL,SAAS,CAAA;UAChC2lB,UAAU,GAAG9wB,OAAO,CAAC+K,WAAW,CAAA;AAChC,UAAA,MAAA;AACJ,QAAA;UACI,MAAM,IAAIj/B,KAAK,CAAC,2BAA2B,GAAG,IAAI,CAACiL,IAAI,CAAC,CAAA;AAChE,OAAA;MACA,OAAO;QACHtS,KAAK,EAAG3B,IAAI,CAACyB,GAAG,CAACssD,UAAU,EAAEC,UAAU,CAAC;AACxClrD,QAAAA,GAAG,EAAK9C,IAAI,CAACI,GAAG,CAAC2tD,UAAU,EAAEC,UAAU,CAAA;OAC1C,CAAA;AACL,KAAA;AACA,IAAA,OAAO,IAAI,CAAA;AACf,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACIC,SAASA,CAAC7wC,GAAG,EAAE;AAAA,IAAA,IAAA8wC,iBAAA,CAAA;AACX,IAAA,MAAMC,OAAO,GAAG,CAAA,CAAAD,iBAAA,GAAA,IAAI,CAACE,WAAW,MAAA,IAAA,IAAAF,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,iBAAA,CAAkBrmD,KAAK,CAAC,GAAG,CAAC,KAAI,EAAE,CAAA;AAClD,IAAA,IAAI,CAACsmD,OAAO,CAACte,QAAQ,CAACzyB,GAAG,CAAC,EAAE;AACxB,MAAA,IAAI,CAACgxC,WAAW,GAAGD,OAAO,CAAC74C,MAAM,CAAC8H,GAAG,CAAC,CAACusB,IAAI,CAAC,GAAG,CAAC,CAAA;AACpD,KAAA;AACJ,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI0kB,WAAWA,CAACjxC,GAAG,EAAE;IACb,MAAM;AAAEgxC,MAAAA,WAAAA;AAAY,KAAC,GAAG,IAAI,CAAA;AAC5B,IAAA,IAAIA,WAAW,EAAE;AACb,MAAA,MACID,OAAO,GAAGC,WAAW,CAACvmD,KAAK,CAAC,GAAG,CAAC;AAChCgN,QAAAA,KAAK,GAAKs5C,OAAO,CAAC9uD,OAAO,CAAC+d,GAAG,CAAC,CAAA;MAClC,IAAIvI,KAAK,IAAI,CAAC,EAAE;AACZs5C,QAAAA,OAAO,CAAC98C,MAAM,CAACwD,KAAK,EAAE,CAAC,CAAC,CAAA;QACxB,IAAI,CAACu5C,WAAW,GAAGD,OAAO,CAACxkB,IAAI,CAAC,GAAG,CAAC,CAAA;AACxC,OAAA;AACJ,KAAA;AACJ,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI2kB,iBAAiBA,CAAClxC,GAAG,EAAE;AACnB,IAAA,OAAO,IAAI,CAACgxC,WAAW,IAAI,IAAI,CAACA,WAAW,CAACvmD,KAAK,CAAC,GAAG,CAAC,CAACgoC,QAAQ,CAACzyB,GAAG,CAAC,CAAA;AACxE,GAAA;EACAmxC,kBAAkBA,CAACC,GAAG,EAAE;AACpB,IAAA,MAAMC,QAAQ,GAAG/B,wBAAwB,CAAC,IAAI,CAACz4C,IAAI,CAAC,CAAA;AACpD,IAAA,IAAIu6C,GAAG,EAAE;AACL,MAAA,OAAOC,QAAQ,CAAA;AACnB,KAAA;AACA;IACA,IAAI,IAAI,CAACx6C,IAAI,KAAK04C,mBAAmB,CAACC,IAAI,CAACG,UAAU,EAAE;AACnD,MAAA,OAAO,EAAE,CAAA;AACb,KAAA;AACA,IAAA,OAAO0B,QAAQ,CAAA;AACnB,GAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA3jD,EAAAA,QAAQA,GAAG;AACP,IAAA,OAAQ,GAAE,IAAI,CAAC2N,IAAK,CAAA,EAAE,IAAI,CAAC81C,kBAAkB,EAAG,GAAE,IAAI,CAACZ,MAAM,EAAG,CAAC,CAAA,CAAA;AACrE,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIrrD,OAAOA,GAAG;IACV,MAAM;MAAE26B,SAAS;MAAEC,OAAO;AAAEjpB,MAAAA,IAAAA;AAAK,KAAC,GAAG,IAAI,CAAA;IACzC,OAAO,OAAOA,IAAI,KAAK,QAAQ,IAAIgpB,SAAS,IAAIC,OAAO,IAAID,SAAS,KAAKC,OAAO,CAAA;AACpF,GAAA;EACA,IAAIwxB,aAAaA,GAAG;AAAA,IAAA,IAAAC,eAAA,CAAA;AAChB,IAAA,OAAO,CAAAA,CAAAA,eAAA,GAAI,IAAA,CAAC1xB,SAAS,MAAA,IAAA,IAAA0xB,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAdA,eAAA,CAAgBzsD,IAAI,KAAI,EAAE,CAAA;AACrC,GAAA;EACA,IAAI0sD,WAAWA,GAAG;AAAA,IAAA,IAAAC,aAAA,CAAA;AACd,IAAA,OAAO,CAAAA,CAAAA,aAAA,GAAI,IAAA,CAAC3xB,OAAO,MAAA,IAAA,IAAA2xB,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZA,aAAA,CAAc3sD,IAAI,KAAI,EAAE,CAAA;AACnC,GAAA;AACA;AACAsoD,EAAAA,uBAAuBA,CAACv9B,SAAS,EAAEqgB,QAAQ,EAAEmd,QAAQ,EAAE;IACnD,IAAI,CAAC,KAAK,CAACD,uBAAuB,CAACv9B,SAAS,EAAEqgB,QAAQ,EAAEmd,QAAQ,CAAC,EAAE;AAC/D,MAAA,OAAO,KAAK,CAAA;AAChB,KAAA;AACA,IAAA,IAAIx9B,SAAS,KAAK,MAAM,IAAIA,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAK,SAAS,EAAE;AAAA,MAAA,IAAAnC,aAAA,CAAA;AACpG,MAAA,MAAMnC,UAAU,GAAA,CAAAmC,aAAA,GAAG,IAAI,CAACtE,OAAO,MAAA,IAAA,IAAAsE,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZA,aAAA,CAAcnC,UAAU,CAAA;AAC3C,MAAA,IAAIA,UAAU,IAAIA,UAAU,CAAC+hC,QAAQ,CAACpd,QAAQ,CAAC,KAAK3kB,UAAU,CAACqG,OAAO,CAACy7B,QAAQ,CAAC,EAAE;AAC9E,QAAA,OAAO,KAAK,CAAA;AAChB,OAAA;AACJ,KAAA;AACA,IAAA,OAAO,IAAI,CAAA;AACf,GAAA;AACA;AACJ,CAAA;;AACAkC,mBAAmB,CAAC7d,gBAAgB,EAAE,CAAA;AACtC6d,mBAAmB,CAAC/f,MAAM,GAAG,qBAAqB;;ACpelD,MAAM+B,aAAW,GAAG5R,mBAAmB,CAAA;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM+xB,eAAe,SAAShhB,aAAa,CAACa,aAAW,CAACv2B,MAAM,CAACu0C,mBAAmB,CAAC,CAAC,CAAC;EAChG,WAAWtjC,KAAKA,GAAG;AACf,IAAA,OAAO,iBAAiB,CAAA;AAC5B,GAAA;AACA;AACA0lC,EAAAA,gBAAgBA,CAACzB,QAAQ,EAAEC,MAAM,EAAEyB,GAAG,EAAE;AACpC,IAAA,MACIC,KAAK,GAAOtC,mBAAmB,CAACC,IAAI;AACpCsC,MAAAA,SAAS,GAAGF,GAAG,GAAG,OAAO,GAAG,MAAM;AAClCG,MAAAA,OAAO,GAAKH,GAAG,GAAG,MAAM,GAAG,OAAO,CAAA;IACtC,IAAI1B,QAAQ,KAAK4B,SAAS,EAAE;MACxB,OAAQ3B,MAAM,KAAK2B,SAAS,GAAID,KAAK,CAACpC,YAAY,GAAGoC,KAAK,CAACnC,UAAU,CAAA;AACzE,KAAA;IACA,OAAQS,MAAM,KAAK4B,OAAO,GAAIF,KAAK,CAACjC,QAAQ,GAAGiC,KAAK,CAAClC,UAAU,CAAA;AACnE,GAAA;AACJ,CAAA;AACA+B,eAAe,CAAChgB,gBAAgB,EAAE,CAAA;AAClCggB,eAAe,CAACliB,MAAM,GAAG,iBAAiB;;AC9E1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAAA,CAAezH,MAAM,IAAI,MAAMiqB,oBAAoB,SAASjqB,MAAM,CAAC;EAC/D,WAAW9b,KAAKA,GAAG;AACf,IAAA,OAAO,sBAAsB,CAAA;AACjkF,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACYye,MAAAA,YAAY,EAAG,GAAG;AAClB;AACZ;AACA;AACA;AACYC,MAAAA,YAAY,EAAG,GAAG;AAClBC,MAAAA,OAAO,EAAG,cAAA;KACb,CAAA;AACL,GAAA;AACAmiB,EAAAA,uBAAuBA,CAACj7B,KAAK,EAAEk7B,QAAQ,EAAE7mD,MAAM,EAAE8mD,IAAI,GAAG,IAAI,EAAEC,YAAY,EAAE;IACxEA,YAAY,GAAGA,YAAY,KAAKp7B,KAAK,IAAI,IAAI,CAACq7B,oBAAoB,CAACr7B,KAAK,CAAC,CAAC,CAAA;AAC1EA,IAAAA,KAAK,GAAGouB,WAAW,CAACC,OAAO,CAACruB,KAAK,CAAC,CAAA;AAClCA,IAAAA,KAAK,CAAC/c,MAAM,CAAC,CAAC5O,MAAM,EAAE2rB,KAAK,KAAK;AAC5B,MAAA,IAAIA,KAAK,CAAC6C,QAAQ,IAAI,CAACs4B,IAAI,EAAE;AACzBn7B,QAAAA,KAAK,CAAC7B,QAAQ,CAACm9B,GAAG,IAAI;UAClBjnD,MAAM,GAAG+mD,YAAY,CAACE,GAAG,CAAC,CAACr4C,MAAM,CAACi4C,QAAQ,EAAE7mD,MAAM,CAAC,CAAA;AACvD,SAAC,CAAC,CAAA;AACN,OAAC,MACI;QACDA,MAAM,GAAG+mD,YAAY,CAACp7B,KAAK,CAAC,CAAC/c,MAAM,CAACi4C,QAAQ,EAAE7mD,MAAM,CAAC,CAAA;AACzD,OAAA;KACH,EAAEA,MAAM,CAAC,CAAA;AACV,IAAA,OAAOA,MAAM,CAAA;AACjB,GAAA;EACAknD,oBAAoBA,CAACv7B,KAAK,EAAExoB,EAAE,EAAEkgD,QAAQ,EAAEyD,IAAI,EAAEC,YAAY,EAAE;IAC1D,OAAO,IAAI,CAACH,uBAAuB,CAACj7B,KAAK,EAAE,CAAC3rB,MAAM,EAAE2uB,UAAU,KAAK;MAC/D00B,QAAQ,CAAC10B,UAAU,CAAC,IAAI3uB,MAAM,CAAC3H,IAAI,CAACs2B,UAAU,CAAC,CAAA;AAC/C,MAAA,OAAO3uB,MAAM,CAAA;AACjB,KAAC,EAAE,EAAE,EAAE8mD,IAAI,EAAEC,YAAY,CAAC,CAAA;AAC9B,GAAA;EACAI,oBAAoBA,CAACx7B,KAAK,EAAExoB,EAAE,EAAEkgD,QAAQ,EAAEyD,IAAI,EAAE;IAC5C,OAAO,IAAI,CAACM,uBAAuB,CAACz7B,KAAK,EAAE,CAAC3rB,MAAM,EAAE2uB,UAAU,KAAK;MAC/D00B,QAAQ,CAAC10B,UAAU,CAAC,IAAI3uB,MAAM,CAAC3H,IAAI,CAACs2B,UAAU,CAAC,CAAA;AAC/C,MAAA,OAAO3uB,MAAM,CAAA;AACjB,KAAC,EAAE,EAAE,EAAE8mD,IAAI,CAAC,CAAA;AAChB,GAAA;EACAO,kBAAkBA,CAAC17B,KAAK,EAAExoB,EAAE,EAAEkgD,QAAQ,EAAEyD,IAAI,EAAE;IAC1C,OAAO,IAAI,CAACQ,qBAAqB,CAAC37B,KAAK,EAAE,CAAC3rB,MAAM,EAAE2uB,UAAU,KAAK;MAC7D00B,QAAQ,CAAC10B,UAAU,CAAC,IAAI3uB,MAAM,CAAC3H,IAAI,CAACs2B,UAAU,CAAC,CAAA;AAC/C,MAAA,OAAO3uB,MAAM,CAAA;AACjB,KAAC,EAAE,EAAE,EAAE8mD,IAAI,CAAC,CAAA;AAChB,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACIE,oBAAoBA,CAACr7B,KAAK,EAAE;AACxB,IAAA,OAAO,EAAE,CAAC9e,MAAM,CAAC8e,KAAK,CAACg0B,YAAY,IAAI,EAAE,EAAEh0B,KAAK,CAACi0B,UAAU,IAAI,EAAE,CAAC,CAAA;AACtE,GAAA;EACA2H,uBAAuBA,CAAC57B,KAAK,EAAE;IAC3B,IAAI,CAAC5K,MAAM,CAAC,IAAI,CAACimC,oBAAoB,CAACr7B,KAAK,CAAC,CAAC,CAAA;AACjD,GAAA;EACA67B,uBAAuBA,CAAC77B,KAAK,EAAE;AAC3B,IAAA,IAAI,CAAC5K,MAAM,CAAC4K,KAAK,CAACg0B,YAAY,CAAC,CAAA;AACnC,GAAA;AACA8H,EAAAA,qBAAqBA,CAAC97B,KAAK,EAAEm7B,IAAI,EAAE;AAC/B,IAAA,IAAI,CAAC/lC,MAAM,CAAC4K,KAAK,CAACi0B,UAAU,CAAC,CAAA;AACjC,GAAA;EACA8H,mBAAmBA,CAACxoD,GAAG,EAAE;IACrB,OAAO,IAAI,CAAC0jB,OAAO,CAAC0B,IAAI,CAACpiB,CAAC,IACtBhD,GAAG,IAAI,IAAI,CAACwQ,WAAW,CAACi4C,sCAAsC,CAACzlD,CAAC,CAAC8N,IAAI,EAAE9N,CAAC,CAACsiD,EAAE,CAC/E,CAAC,CAAA;AACL,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIoD,EAAAA,qCAAqCA,CAACC,WAAW,EAAEC,WAAW,EAAE;AAC5DD,IAAAA,WAAW,GAAGtkC,KAAK,CAAC8O,IAAI,CAACw1B,WAAW,CAAC,CAAA;AACrCC,IAAAA,WAAW,GAAGvkC,KAAK,CAAC8O,IAAI,CAACy1B,WAAW,CAAC,CAAA;AACrC,IAAA,OAAO,IAAI,CAACJ,mBAAmB,CAAC,IAAI,CAACh4C,WAAW,CAACi4C,sCAAsC,CAACE,WAAW,EAAEC,WAAW,CAAC,CAAC,CAAA;AACtH,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,0BAA0BA,CAACF,WAAW,EAAEC,WAAW,EAAE;AACjD,IAAA,OAAO,IAAI,CAACF,qCAAqC,CAACC,WAAW,EAAEC,WAAW,CAAC,IACvE,IAAI,CAACF,qCAAqC,CAACE,WAAW,EAAED,WAAW,CAAC,CAAA;AAC5E,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,MAAM9rB,iBAAiBA,CAACisB,kBAAkB,EAAEC,IAAI,EAAEz8C,IAAI,EAAE;IACpD,IAAIgpB,SAAS,GAAGwzB,kBAAkB;AAAEvzB,MAAAA,OAAO,GAAGwzB,IAAI,CAAA;IAClD,IAAID,kBAAkB,IAAI,IAAI,EAAE;AAC5B,MAAA,OAAO,KAAK,CAAA;AAChB,KAAA;AACA;IACA,IAAIA,kBAAkB,CAACE,iBAAiB,EAAE;MACtC,CAAC;QAAE1zB,SAAS;AAAEC,QAAAA,OAAAA;AAAQ,OAAC,GAAGuzB,kBAAkB,EAAA;AAChD,KAAA;AACA;IACAxzB,SAAS,GAAG,IAAI,CAACtU,UAAU,CAACqG,OAAO,CAACiO,SAAS,CAAC,CAAA;AAC9C;IACAC,OAAO,GAAG,IAAI,CAACvU,UAAU,CAACqG,OAAO,CAACkO,OAAO,CAAC,CAAA;AAC1C;AACA;IACA,IAAID,SAAS,IAAIC,OAAO,EAAE;AACtB;MACA,IAAI,CAACD,SAAS,CAACzW,OAAO,IAAI,CAAC0W,OAAO,CAAC1W,OAAO,EAAE;AACxC,QAAA,OAAO,KAAK,CAAA;AAChB,OAAA;AACA;MACA,OAAO,IAAI,CAACA,OAAO,CAACge,iBAAiB,CAACvH,SAAS,EAAEC,OAAO,EAAEjpB,IAAI,CAAC,CAAA;AACnE,KAAA;IACA,OAAOw8C,kBAAkB,KAAKC,IAAI,CAAA;AACtC,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIE,EAAAA,yBAAyBA,CAACC,MAAM,EAAEH,IAAI,EAAEz8C,IAAI,EAAE;IAC1C,OAAO,IAAI,CAACuwB,iBAAiB,CAACqsB,MAAM,EAAEH,IAAI,EAAEz8C,IAAI,CAAC,CAAA;AACrD,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI68C,0BAA0BA,CAAC1zC,GAAG,EAAE;IAC5B,OAAO,IAAI,CAACiO,OAAO,CAAChU,MAAM,CAAC,CAAC5O,MAAM,EAAEsoD,GAAG,KAAK;AACxC,MAAA,IAAIA,GAAG,CAACzC,iBAAiB,CAAClxC,GAAG,CAAC,EAAE3U,MAAM,CAAC3H,IAAI,CAACiwD,GAAG,CAAC,CAAA;AAChD,MAAA,OAAOtoD,MAAM,CAAA;KAChB,EAAE,EAAE,CAAC,CAAA;AACV,GAAA;AACA,EAAA,OAAO2nD,sCAAsCA,CAAC33C,IAAI,EAAEw0C,EAAE,EAAE;AACpD,IAAA,OAAQ,CAASx0C,OAAAA,EAAAA,IAAK,CAAWw0C,SAAAA,EAAAA,EAAG,CAAE,CAAA,CAAA,CAAA;AAC1C,GAAA;AACA;EACA+D,uBAAuBA,CAAC16B,MAAM,EAAE;AAC5B,IAAA,OAAO,IAAI,CAACm5B,oBAAoB,CAACn5B,MAAM,CAAC,CAAA;AAC5C,GAAA;AACA;AACJ,CAAC;;ACjRD,MAAMqY,aAAW,GAAGb,aAAa,CAACzQ,wBAAwB,CAACjlB,MAAM,CAAC22B,SAAS,CAAC,CAAC,CAAA;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMkiB,eAAe,SAAS7B,oBAAoB,CAACzgB,aAAW,CAACv2B,MAAM,CAAC22B,SAAS,CAAC,CAAC,CAAC;EAC7F,WAAWxgB,aAAaA,GAAG;IACvB,OAAO;AACHC,MAAAA,UAAU,EAAGsgC,eAAAA;KAChB,CAAA;AACL,GAAA;AACJ,CAAA;AACAmC,eAAe,CAACrkB,MAAM,GAAG,iBAAiB;;ACtD1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAA,CAAezH,MAAM,IAAI,MAAM+rB,6BAA6B,SAAS/rB,MAAM,CAAC;EACxE,WAAW9b,KAAKA,GAAG;AACf,IAAA,OAAO,+BAA+B,CAAA;AAC1C,GAAA;EACA,WAAWqW,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYyxB,MAAAA,gBAAgB,EAAG,IAAI;AACvB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,mBAAmB,EAAG,IAAI;AAC1BC,MAAAA,+BAA+B,EAAG,qCAAqC;AACvEC,MAAAA,+BAA+B,EAAG,qCAAqC;AACvEC,MAAAA,4BAA4B,EAAG,kOAAkO;AACjQC,MAAAA,qBAAqB,EAAG,oFAAA;KAC3B,CAAA;AACL,GAAA;EACA,IAAIC,iCAAiCA,GAAG;AACpC,IAAA,OAAO,EAAE,CAAA;AACb,GAAA;AACAC,EAAAA,4BAA4BA,CAACC,SAAS,EAAEC,SAAS,EAAEC,gBAAgB,EAAE;IACjE,MACIC,QAAQ,GAAU,EAAE;AACpB,MAAA;AAAE5kB,QAAAA,OAAAA;AAAQ,OAAC,GAAOykB,SAAS;MAC3BI,eAAe,GAAG,IAAI,CAACN,iCAAiC;AACxDhpD,MAAAA,MAAM,GAAY;QAAE,CAACykC,OAAO,GAAI,EAAC;OAAG,CAAA;AACxC;AACA,IAAA,IAAI0kB,SAAS,EAAE;AACX,MAAA,IAAI,CAACA,SAAS,CAACI,IAAI,EAAE;AACjBF,QAAAA,QAAQ,CAAChxD,IAAI,CAAE,CAAKosC,GAAAA,EAAAA,OAAQ,mFAAkF,CAAC,CAAA;QAC/GzkC,MAAM,CAACykC,OAAO,CAAC,CAAC8kB,IAAI,GAAG,CAAC,KAAK,CAAC,CAAA;AAClC,OAAA;AACJ,KAAA;AACA;SACK,IAAID,eAAe,KAAA,IAAA,IAAfA,eAAe,KAAA,KAAA,CAAA,IAAfA,eAAe,CAAEliB,QAAQ,CAAC3C,OAAO,CAAC,EAAE;AACzC4kB,MAAAA,QAAQ,CAAChxD,IAAI,CAAE,CAAQosC,MAAAA,EAAAA,OAAQ,0DAAyD,CAAC,CAAA;MACzFzkC,MAAM,CAACykC,OAAO,CAAC,CAAC8kB,IAAI,GAAG,CAAC,KAAK,CAAC,CAAA;AAClC,KAAA;AACA;IACA,IAAIF,QAAQ,CAACnyD,MAAM,EAAE;AACjBF,MAAAA,MAAM,CAAC6a,MAAM,CAACu3C,gBAAgB,EAAEppD,MAAM,CAAC,CAAA;AAC3C,KAAA;AACA,IAAA,OAAOqpD,QAAQ,CAAA;AACnB,GAAA;EACAG,uBAAuBA,CAACC,QAAQ,EAAE;IAC9B,MACIJ,QAAQ,GAAW,EAAE;MACrBD,gBAAgB,GAAG,EAAE,CAAA;AACzB,IAAA,IAAI,CAAC,IAAI,CAACT,mBAAmB,EAAE;MAC3BS,gBAAgB,CAACM,OAAO,GAAG,IAAI,CAAA;AACnC,KAAA;AACA;IACA,IAAI,CAACC,gBAAgB,CAAC,CAACnnC,KAAK,EAAEiiB,OAAO,EAAEykB,SAAS,KAAK;MACjDG,QAAQ,CAAChxD,IAAI,CAAC,GAAG,IAAI,CAAC4wD,4BAA4B,CAACC,SAAS,EAAEO,QAAQ,KAARA,IAAAA,IAAAA,QAAQ,uBAARA,QAAQ,CAAGhlB,OAAO,CAAC,EAAE2kB,gBAAgB,CAAC,CAAC,CAAA;AACzG,KAAC,CAAC,CAAA;IACF,IAAIC,QAAQ,CAACnyD,MAAM,EAAE;MACjBmyD,QAAQ,CAAChxD,IAAI,CAAC,kDAAkD,GAC5DqtB,IAAI,CAACkkC,SAAS,CAACR,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC,CAACtxD,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAA;AAC1EuxD,MAAAA,QAAQ,CAAChxD,IAAI,CAAC,IAAI,CAAC0wD,qBAAqB,CAAC,CAAA;AAC7C,KAAA;AACA,IAAA,OAAOM,QAAQ,CAAA;AACnB,GAAA;EACAQ,oBAAoBA,CAACJ,QAAQ,EAAE;AAC3B,IAAA,MAAMJ,QAAQ,GAAG,IAAI,CAACG,uBAAuB,CAACC,QAAQ,CAAC,CAAA;IACvD,IAAIJ,QAAQ,CAACnyD,MAAM,EAAE;AACjB4yD,MAAAA,OAAO,CAACC,IAAI,CAAC,IAAI,CAACnB,+BAA+B,GAAG,IAAI,GAAGS,QAAQ,CAACnoB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;AACnF,KAAA;AACJ,GAAA;EACA8oB,4BAA4BA,CAACd,SAAS,EAAEe,SAAS,EAAEd,SAAS,EAAEC,gBAAgB,EAAE;IAC5E,MACIC,QAAQ,GAAW,EAAE;AACrBa,MAAAA,WAAW,GAAQ,EAAE;AACrBC,MAAAA,cAAc,GAAK,EAAE;AACrB,MAAA;AAAE1lB,QAAAA,OAAAA;AAAQ,OAAC,GAAQykB,SAAS;AAC5BlpD,MAAAA,MAAM,GAAa;QAAE,CAACykC,OAAO,GAAI,EAAC;OAAG;AACrC2lB,MAAAA,cAAc,GAAKlB,SAAS,CAACkB,cAAc,IAAI,IAAI,CAACA,cAAc;AAClE,MAAA;AAAErkC,QAAAA,UAAAA;OAAY,GAAKmjC,SAAS,CAAC1mC,KAAK;AAClC,MAAA;AAAE6nC,QAAAA,OAAAA;AAAQ,OAAC,GAAQtkC,UAAU;MAC7BukC,aAAa,GAAM,CAAAnB,SAAS,KAATA,IAAAA,IAAAA,SAAS,uBAATA,SAAS,CAAEI,IAAI,KAAI,EAAE;MACxCgB,gBAAgB,GAAG,CAAApB,SAAS,KAATA,IAAAA,IAAAA,SAAS,uBAATA,SAAS,CAAE76B,OAAO,KAAI,EAAE,CAAA;IAC/C,IAAIk8B,gCAAgC,GAAG,KAAK,CAAA;AAC5C;AACA,IAAA,IAAIP,SAAS,KAATA,IAAAA,IAAAA,SAAS,eAATA,SAAS,CAAEjjB,KAAK,EAAE;MAClBkjB,WAAW,CAAC7xD,IAAI,CACZ,GAAG4xD,SAAS,CAACjjB,KAAK,CAAC14B,MAAM,CAACuf,MAAM,IAAI;QAChC,OAAO,CAACy8B,aAAa,CAAChmC,IAAI,CAACmmC,GAAG,IAAIA,GAAG,CAACL,cAAc,CAAC,IAAIv8B,MAAM,CAACu8B,cAAc,CAAC,CAAC,IAC5E,CAACG,gBAAgB,CAACjmC,IAAI,CAACmmC,GAAG,IAAIA,GAAG,CAACL,cAAc,CAAC,IAAIv8B,MAAM,CAACu8B,cAAc,CAAC,IAAIK,GAAG,CAACJ,OAAO,CAAC,IAAIx8B,MAAM,CAACu8B,cAAc,CAAC,CAAC,CAAA;AAC9H,OAAC,CAAC,CAACz7C,GAAG,CAACkf,MAAM,KAAK;AAAE,QAAA,CAACu8B,cAAc,GAAIv8B,MAAM,CAACu8B,cAAc,CAAC;AAAE,QAAA,CAACC,OAAO,GAAI,KAAA;OAAO,CAAC,CACvF,CAAC,CAAA;MACD,IAAIH,WAAW,CAAChzD,MAAM,EAAE;AACpB,QAAA,MAAMwzD,UAAU,GAAGR,WAAW,CAACv7C,GAAG,CAAC87C,GAAG,IAAI,GAAG,GAAGA,GAAG,CAACL,cAAc,CAAC,CAAC,CAAClpB,IAAI,CAAC,IAAI,CAAC,CAAA;QAC/EmoB,QAAQ,CAAChxD,IAAI,CAAE,CAAKosC,GAAAA,EAAAA,OAAQ,yDAAwDimB,UAAW,CAAA,sBAAA,CAAuB,GAClH,yGAAyG,CAAC,CAAA;AAClH,OAAA;AACJ,KAAA;AACA;IACA,IAAI,IAAI,CAACC,wBAAwB,EAAE;AAC/B;AACA,MAAA,IAAI,CAACT,WAAW,CAAChzD,MAAM,IAAIiyD,SAAS,EAAE;QAClC,IAAI,OAAOA,SAAS,KAAK,QAAQ,IAAIzyD,KAAK,CAACuzB,OAAO,CAACk/B,SAAS,CAAC,EAAE;AAC3DE,UAAAA,QAAQ,CAAChxD,IAAI,CAAE,CAAKosC,GAAAA,EAAAA,OAAQ,sCAAqC,CAAC,CAAA;AAClEzkC,UAAAA,MAAM,CAACykC,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,CAAA;AAClC,SAAA;AACA;AACA,QAAA,IAAI0kB,SAAS,CAACI,IAAI,IAAI,CAAC7yD,KAAK,CAACuzB,OAAO,CAACk/B,SAAS,CAACI,IAAI,CAAC,EAAE;AAClDF,UAAAA,QAAQ,CAAChxD,IAAI,CAAE,CAAKosC,GAAAA,EAAAA,OAAQ,2CAA0C,CAAC,CAAA;AACvEylB,UAAAA,WAAW,CAAC7xD,IAAI,CAAC,KAAK,CAAC,CAAA;AAC3B,SAAA;AACA;AACA,QAAA,IAAI8wD,SAAS,CAAC76B,OAAO,IAAI,CAAC53B,KAAK,CAACuzB,OAAO,CAACk/B,SAAS,CAAC76B,OAAO,CAAC,EAAE;AACxD+6B,UAAAA,QAAQ,CAAChxD,IAAI,CAAE,CAAKosC,GAAAA,EAAAA,OAAQ,+CAA8C,CAAC,CAAA;AAC3E0lB,UAAAA,cAAc,CAAC9xD,IAAI,CAAC,KAAK,CAAC,CAAA;AAC9B,SAAA;AACJ,OAAA;AACJ,KAAA;AACA;SACK;AACD;AACA,MAAA,IAAI4xD,SAAS,KAATA,IAAAA,IAAAA,SAAS,eAATA,SAAS,CAAEW,OAAO,EAAE;AACpB,QAAA,MAAMC,kBAAkB,GAAGZ,SAAS,CAACW,OAAO,CAACt8C,MAAM,CAACuf,MAAM,IAAI,CAACy8B,aAAa,CAAChmC,IAAI,CAACmmC,GAAG,IAAIA,GAAG,CAACJ,OAAO,CAAC,IAAIx8B,MAAM,CAACw8B,OAAO,CAAC,CAAC,CAAC,CACrH17C,GAAG,CAACkf,MAAM,KAAK;AAAE,UAAA,CAACw8B,OAAO,GAAIx8B,MAAM,CAACw8B,OAAO,CAAA;AAAE,SAAC,CAAC,CAAC,CAAA;AACrDH,QAAAA,WAAW,CAAC7xD,IAAI,CAAC,GAAGwyD,kBAAkB,CAAC,CAAA;QACvC,IAAIA,kBAAkB,CAAC3zD,MAAM,EAAE;AAC3B,UAAA,MAAMwzD,UAAU,GAAGG,kBAAkB,CAACl8C,GAAG,CAAC87C,GAAG,IAAI,GAAG,GAAGA,GAAG,CAACJ,OAAO,CAAC,CAAC,CAACnpB,IAAI,CAAC,IAAI,CAAC,CAAA;UAC/EmoB,QAAQ,CAAChxD,IAAI,CAAE,CAAKosC,GAAAA,EAAAA,OAAQ,2DAA0DimB,UAAW,CAAA,sBAAA,CAAuB,GACnH,CAAA,iDAAA,CAAkD,CAAC,CAAA;AACxDF,UAAAA,gCAAgC,GAAG,IAAI,CAAA;AAC3C,SAAA;AACJ,OAAA;MACA,IAAIN,WAAW,CAAChzD,MAAM,EAAE;AACpBgzD,QAAAA,WAAW,CAAC7xD,IAAI,CAAC,KAAK,CAAC,CAAA;AAC3B,OAAA;AACA;AACA,MAAA,IAAI4xD,SAAS,KAATA,IAAAA,IAAAA,SAAS,eAATA,SAAS,CAAE37B,OAAO,EAAE;AACpB67B,QAAAA,cAAc,CAAC9xD,IAAI,CACf,GAAG4xD,SAAS,CAAC37B,OAAO,CAAChgB,MAAM,CAACuf,MAAM,IAAI,CAACy8B,aAAa,CAAChmC,IAAI,CAACmmC,GAAG,IAAIA,GAAG,CAACJ,OAAO,CAAC,IAAIx8B,MAAM,CAACw8B,OAAO,CAAC,CAAC,CAAC,CAC7F17C,GAAG,CAACkf,MAAM,KAAK;AAAE,UAAA,CAACw8B,OAAO,GAAIx8B,MAAM,CAACw8B,OAAO,CAAA;SAAG,CAAC,CACxD,CAAC,CAAA;QACD,IAAIF,cAAc,CAACjzD,MAAM,EAAE;AACvB,UAAA,MAAMwzD,UAAU,GAAGP,cAAc,CAACx7C,GAAG,CAAC87C,GAAG,IAAI,GAAG,GAAGA,GAAG,CAACJ,OAAO,CAAC,CAAC,CAACnpB,IAAI,CAAC,IAAI,CAAC,CAAA;UAC3EmoB,QAAQ,CAAChxD,IAAI,CAAE,CAAKosC,GAAAA,EAAAA,OAAQ,8DAA6DimB,UAAW,CAAA,sBAAA,CAAuB,GACtH,CAAA,iDAAA,CAAkD,CAAC,CAAA;AACxD1qD,UAAAA,MAAM,CAACykC,OAAO,CAAC,CAACnW,OAAO,GAAG67B,cAAc,CAAA;AACxCA,UAAAA,cAAc,CAAC9xD,IAAI,CAAC,KAAK,CAAC,CAAA;AAC1BmyD,UAAAA,gCAAgC,GAAG,IAAI,CAAA;AAC3C,SAAA;AACJ,OAAA;AACJ,KAAA;IACA,IAAIN,WAAW,CAAChzD,MAAM,EAAE;AACpB8I,MAAAA,MAAM,CAACykC,OAAO,CAAC,CAAC8kB,IAAI,GAAGW,WAAW,CAAA;AACtC,KAAA;AACA;AACA,IAAA,IAAI,CAACb,QAAQ,CAACnyD,MAAM,EAAE;MAClB,OAAO8I,MAAM,CAACykC,OAAO,CAAC,CAAA;AAC1B,KAAA;AACA;AACAztC,IAAAA,MAAM,CAAC6a,MAAM,CAACu3C,gBAAgB,EAAEppD,MAAM,CAAC,CAAA;IACvC,OAAO;MAAEqpD,QAAQ;AAAEmB,MAAAA,gCAAAA;KAAkC,CAAA;AACzD,GAAA;AACAM,EAAAA,uBAAuBA,CAACrB,QAAQ,EAAEsB,WAAW,EAAE;IAC3C,MACI1B,QAAQ,GAAW,EAAE;MACrBD,gBAAgB,GAAG,EAAE;MACrB4B,OAAO,GAAYD,WAAW,CAACE,IAAI,CAAA;AACvC,IAAA,IAAI,CAAC,IAAI,CAACtC,mBAAmB,EAAE;MAC3BS,gBAAgB,CAACM,OAAO,GAAG,IAAI,CAAA;AACnC,KAAA;IACA,IAAIc,gCAAgC,GAAG,KAAK,CAAA;AAC5C;IACA,IAAI,CAACb,gBAAgB,CAAC,CAACnnC,KAAK,EAAEiiB,OAAO,EAAEykB,SAAS,KAAK;MACjD,MAAMgC,QAAQ,GAAG,IAAI,CAAClB,4BAA4B,CAACd,SAAS,EAAE8B,OAAO,KAAPA,IAAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAGvmB,OAAO,CAAC,EAAEglB,QAAQ,CAAChlB,OAAO,CAAC,EAAE2kB,gBAAgB,CAAC,CAAA;AACtHoB,MAAAA,gCAAgC,GAAGA,gCAAgC,IAAIU,QAAQ,CAACV,gCAAgC,CAAA;AAChHnB,MAAAA,QAAQ,CAAChxD,IAAI,CAAC,GAAG6yD,QAAQ,CAAC7B,QAAQ,CAAC,CAAA;AACvC,KAAC,CAAC,CAAA;IACF,IAAIA,QAAQ,CAACnyD,MAAM,EAAE;AACjBmyD,MAAAA,QAAQ,CAAChxD,IAAI,CAAC,kDAAkD,GAC5DqtB,IAAI,CAACkkC,SAAS,CAACR,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC,CAACtxD,OAAO,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAACA,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAA;AAClH,MAAA,IAAI0yD,gCAAgC,EAAE;AAClCnB,QAAAA,QAAQ,CAAChxD,IAAI,CAAC,IAAI,CAACywD,4BAA4B,CAAC,CAAA;AACpD,OAAA;AACAO,MAAAA,QAAQ,CAAChxD,IAAI,CAAC,IAAI,CAAC0wD,qBAAqB,CAAC,CAAA;AAC7C,KAAA;AACA,IAAA,OAAOM,QAAQ,CAAA;AACnB,GAAA;AACA8B,EAAAA,oBAAoBA,CAAC1B,QAAQ,EAAEuB,OAAO,EAAE;IACpC,MAAM3B,QAAQ,GAAG,IAAI,CAACyB,uBAAuB,CAACrB,QAAQ,EAAEuB,OAAO,CAAC,CAAA;IAChE,IAAI3B,QAAQ,CAACnyD,MAAM,EAAE;AACjB4yD,MAAAA,OAAO,CAACC,IAAI,CAAC,IAAI,CAAClB,+BAA+B,GAAG,IAAI,GAAGQ,QAAQ,CAACnoB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;AACnF,KAAA;AACJ,GAAA;AACJ,CAAC;;AC3MD;AACA;AACA;AACO,MAAMkqB,wBAAwB,SAAS7qD,KAAK,CAAC,EAAA;AAC7C,MAAM8qD,uBAAuB,SAASD,wBAAwB,CAAC;AAClE17C,EAAAA,WAAWA,CAAC47C,GAAG,GAAG,EAAE,EAAE;IAAA,IAAAC,YAAA,EAAAC,aAAA,CAAA;AAClB,IAAA,KAAK,CAACF,GAAG,CAACG,OAAO,IAAIH,GAAG,CAACN,OAAO,IAAIU,YAAY,CAACC,UAAU,CAAAJ,CAAAA,YAAA,GAACD,GAAG,CAACN,OAAO,MAAAO,IAAAA,IAAAA,YAAA,KAAXA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,YAAA,CAAa//C,IAAI,CAAC,GAAG,SAAS,IAAI,6BAA6B,CAAC,CAAA;AAC5HxU,IAAAA,MAAM,CAAC6a,MAAM,CAAC,IAAI,EAAEy5C,GAAG,CAAC,CAAA;AACxB,IAAA,IAAI,CAAC5pC,MAAM,GAAA8pC,CAAAA,aAAA,GAAG,IAAI,CAACR,OAAO,MAAAQ,IAAAA,IAAAA,aAAA,KAAZA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAA,CAAchgD,IAAI,CAAA;AACpC,GAAA;AACJ,CAAA;AACA,MACIogD,WAAW,GAAO,UAASC,GAAG,EAAEC,GAAG,EAAEC,YAAY,EAAE;IAC/C,IAAIF,GAAG,CAACrpC,KAAK,EAAE;MACXqpC,GAAG,GAAGA,GAAG,CAACrpC,KAAK,CAAA;AACnB,KAAA;IACA,IAAIspC,GAAG,CAACtpC,KAAK,EAAE;MACXspC,GAAG,GAAGA,GAAG,CAACtpC,KAAK,CAAA;AACnB,KAAA;AACAqpC,IAAAA,GAAG,GAAGA,GAAG,CAACE,YAAY,CAAC,IAAI,CAAC,CAAA;AAC5BD,IAAAA,GAAG,GAAGA,GAAG,CAACC,YAAY,CAAC,IAAI,CAAC,CAAA;AAC5B,IAAA,OAAQF,GAAG,GAAGC,GAAG,GAAI,CAAC,CAAC,GAAKD,GAAG,GAAGC,GAAG,GAAI,CAAC,GAAG,CAAE,CAAA;GAClD;AACD;AACAE,EAAAA,eAAe,GAAG,UAASH,GAAG,EAAEC,GAAG,EAAE;AACjC,IAAA,OAAOF,WAAW,CAACC,GAAG,EAAEC,GAAG,EAAE,cAAc,CAAC,CAAA;GAC/C;AACD;AACAG,EAAAA,eAAe,GAAG,UAASJ,GAAG,EAAEC,GAAG,EAAE;AACjC,IAAA,OAAOF,WAAW,CAACC,GAAG,EAAEC,GAAG,EAAE,cAAc,CAAC,CAAA;GAC/C,CAAA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAAA,CAAepvB,MAAM,IAAI;AACrB;AACA;AACAA,EAAAA,MAAM,CAACwvB,MAAM,GAAGxvB,MAAM,CAACyvB,KAAK,CAAA;EAC5B,MAAMr5C,MAAM,GAAG,EAAE,CAAA;AACjB;AACA;AACA,EAAA,IAAI,CAAC4pB,MAAM,CAAC0vB,QAAQ,EAAE;AAClBt5C,IAAAA,MAAM,CAACza,IAAI,CAAC29B,MAAM,CAAC,CAAA;AACvB,GAAA;AACA,EAAA,IAAI,CAAC0G,MAAM,CAAC2vB,WAAW,EAAE;AACrBv5C,IAAAA,MAAM,CAACza,IAAI,CAAC69B,SAAS,CAAC,CAAA;AAC1B,GAAA;AACApjB,EAAAA,MAAM,CAACza,IAAI,CAACowD,6BAA6B,CAAC,CAAA;AAC1C,EAAA,OAAO,MAAM6D,wBAAwB,SAAS,CAAC5vB,MAAM,IAAI2H,IAAI,EAAExxB,KAAK,CAAC,GAAGC,MAAM,CAAC,CAAC;AAC5E;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;IACQ,WAAW8N,KAAKA,GAAG;AACf,MAAA,OAAO,0BAA0B,CAAA;AACrC,KAAA;AACA;IACA,WAAWkF,aAAaA,GAAG;MACvB,OAAO;AACH;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACgBymC,QAAAA,YAAY,EAAG,IAAI;AACnB;AAChB;AACA;AACA;AACA;AACA;AACgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACgBC,QAAAA,UAAU,EAAG,EAAE;AACf;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACgBC,QAAAA,eAAe,EAAG,SAAS;AAC3BC,QAAAA,eAAe,EAAG,QAAQ;AAC1B;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACgB;AAChB;AACA;AACA;AACA;AACA;AACA;QACgBC,SAAS,EAAG,EAAE;AACd;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACgBC,QAAAA,iBAAiB,EAAG,KAAK;AACzB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACgBjC,QAAAA,wBAAwB,EAAG,IAAI;AAC/B;AAChB;AACA;AACA;AACA;AACA;AACgBP,QAAAA,cAAc,EAAG,YAAY;AAC7B;AAChB;AACA;AACA;AACA;AACA;AACgByC,QAAAA,oBAAoB,EAAG,kBAAkB;AACzC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACgBC,QAAAA,QAAQ,EAAG,KAAK;AAChB;AAChB;AACA;AACA;AACA;AACA;AACA;AACgBC,QAAAA,eAAe,EAAG,GAAG;AACrB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACgBC,QAAAA,QAAQ,EAAG,KAAK;AAChB;AAChB;AACA;AACA;AACA;AACA;AACA;AACgBC,QAAAA,kBAAkB,EAAG,IAAI;AACzB;AAChB;AACA;AACA;AACA;AACA;AACgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACgBC,QAAAA,iBAAiB,EAAG,EAAE;AACtBC,QAAAA,iBAAiB,EAAG,EAAE;AACtB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACgBC,QAAAA,cAAc,EAAG,KAAK;AACtBC,QAAAA,iBAAiB,EAAG,CAAC;AACrBC,QAAAA,sBAAsB,EAAG,CAAC;AAC1B;AACAC,QAAAA,UAAU,EAAG,KAAK;AAClBC,QAAAA,oBAAoB,EAAG,KAAK;AAC5BC,QAAAA,oBAAoB,EAAG,KAAK;AAC5BC,QAAAA,eAAe,EAAG,IAAA;OACrB,CAAA;AACL,KAAA;AACA,IAAA,OAAOz2B,YAAY,GAAG;AAClB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY02B,MAAAA,OAAO,EAAG,IAAI;AACd;AACZ;AACA;AACA;AACA;AACA;AAC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A;AACY0C,MAAAA,mBAAmB,EAAGn+C,KAAK;AAC3B;AACZ;AACA;AACA;AACA;AACA;AACA;AACYo+C,MAAAA,2BAA2B,EAAGlC,sBAAsB;AACpD;AACZ;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;MACYx8C,UAAU,EAAQ,EAAE;MACpBJ,eAAe,EAAG,EAAE;MACpBE,eAAe,EAAG,EAAE;MACpBI,aAAa,EAAK,EAAE;AACpBy+C,MAAAA,cAAc,EAAI,IAAA;KACrB,CAAA;AACL,GAAA;AACA,EAAA,OAAO5nC,YAAY,GAAG;AAClB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ6nC,IAAAA,IAAI,EAAG,IAAI;AACX;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACQlD,IAAAA,cAAc,EAAG;AACbl9D,MAAAA,KAAK,EAAG;AACJ6J,QAAAA,EAAE,EAAW,YAAY;AACzBwd,QAAAA,UAAU,EAAG6W,QAAAA;OAChB;AACDwgC,MAAAA,OAAO,EAAG,SAAA;KACb;AACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACQpB,IAAAA,sBAAsB,EAAG;MACrBt9D,KAAK,EAAK,EAAE;AACZ0+D,MAAAA,OAAO,EAAG,SAAA;KACb;AACD;AACA53B,IAAAA,MAAM,EAAe,IAAI;AACzBu5B,IAAAA,kBAAkB,EAAG,IAAA;GACxB,CAAA;AACD;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIC,UAAUA,GAAG;AACb,IAAA,OAAOtT,YAAY,CAACoO,aAAa,CAAC,KAAK,CAACgF,IAAI,CAAC,CAAA;AACjD,GAAA;EACA,IAAIE,UAAUA,CAACA,UAAU,EAAE;IACvB,IAAI,CAACF,IAAI,GAAGE,UAAU,CAAA;AAC1B,GAAA;AA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AAe,EAAG6oB,UAAU;AAC5B;AACZ;AACA;AACA;AACA;AACA;AACA;AACY1oB,MAAAA,oBAAoB,EAAG8wB,eAAe;AACtC;AACZ;AACA;AACA;AACA;AACA;AACA;AACY/wB,MAAAA,kBAAkB,EAAG8O,aAAa;AAClC;AACZ;AACA;AACA;AACA;AACA;AACA;AACY/O,MAAAA,oBAAoB,EAAGwsB,eAAAA;KAC1B,CAAA;AACL,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACInjC,SAASA,CAAC,GAAG+V,IAAI,EAAE;AACf,IAAA,KAAK,CAAC/V,SAAS,CAAC,GAAG+V,IAAI,CAAC,CAAA;IACxB,IAAI+L,aAAa,CAAC++B,SAAS,EAAE;AACzBC,MAAAA,UAAU,CAACC,OAAO,CAACC,WAAW,GAAG,IAAI,CAAA;AACzC,KAAA;AACA;AACA,IAAA,IAAI,CAACC,uBAAuB,GAAG,IAAI,CAACC,6BAA6B,EAAE,CAAA;AACvE,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACIA,EAAAA,6BAA6BA,GAAG;IAC5B,OAAO,IAAI1B,uBAAuB,CAAC;AAC/BngD,MAAAA,UAAU,EAAQ,IAAI;MACtBE,aAAa,EAAK,IAAI,CAACA,aAAa;MACpCN,eAAe,EAAG,IAAI,CAACA,eAAe;MACtCE,eAAe,EAAG,IAAI,CAACA,eAAAA;AAC3B,KAAC,CAAC,CAAA;AACN,GAAA;AACAkK,EAAAA,SAASA,GAAG;AACR,IAAA,IAAI,CAAC43C,uBAAuB,CAAC33C,OAAO,EAAE,CAAA;IACtC,KAAK,CAACD,SAAS,EAAE,CAAA;AACrB,GAAA;AACA;EACA,IAAIozC,SAASA,GAAG;IACZ,OAAO,IAAI,CAACp9C,UAAU,CAAA;AAC1B,GAAA;AACJ,CAAA;AACAuhD,YAAY,CAACnlC,YAAY,GAAG,IAAI,CAAA;AAChCmlC,YAAY,CAACO,SAAS,EAAE,CAAA;AACxBP,YAAY,CAACt9B,MAAM,GAAG,cAAc;;AC7epC;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAezH,CAAAA,MAAM,IAAI,MAAMulC,eAAe,SAASvlC,MAAM,CAAC7pB,KAAK,CAACqvD,YAAY,CAAC,CAAC;EAC9E,WAAWthD,KAAKA,GAAG;AACf,IAAA,OAAO,iBAAiB,CAAA;AAC5B,GAAA;AACA,EAAA,OAAOpJ,MAAM,GAAG;AACZ2qD,IAAAA,cAAc,EAAG,IAAI;AACrB;AACA;AACAC,IAAAA,UAAU,EAAG;AACTD,MAAAA,cAAc,EAAG,CAAA;AACrB,KAAA;GACH,CAAA;AACD;AACA/T,EAAAA,cAAcA,GAAG;IACb,KAAK,CAACA,cAAc,EAAE,CAAA;IACtB,MAAM;MAAEh2B,WAAW;AAAEra,MAAAA,OAAAA;AAAQ,KAAC,GAAG,IAAI,CAAA;IACrC,IAAI,IAAI,CAACskD,QAAQ,IAAI,CAACjqC,WAAW,IAAIra,OAAO,EAAEw1C,oBAAoB,EAAE;AAChE;MACA,IAAI,CAAC+O,sBAAsB,EAAE,CAAA;AACjC,KAAA;AACJ,GAAA;AACA;AACA;AACJ;AACA;AACA;AACA;AACIC,EAAAA,aAAaA,GAAG;IACZ,MAAM;AAAEC,MAAAA,QAAAA;AAAS,KAAC,GAAG,IAAI,CAAA;AACzB,IAAA,IAAIA,QAAQ,EAAE;AACV,MAAA,IAAI,CAACC,MAAM,GAAGC,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,gBAAgB,EAAEJ,QAAQ,CAAC,CAAA;AACpE,KAAA;AACJ,GAAA;AACA;AACJ;AACA;AACA;AACA;EACIK,eAAeA,CAACzqC,WAAW,EAAE;AACzB,IAAA,IAAI,CAAC8Q,eAAe,CAAC,aAAa,CAAC,CAAA;AACnC9Q,IAAAA,WAAW,aAAXA,WAAW,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAXA,WAAW,CAAEpW,GAAG,CAAC;AACbvoB,MAAAA,IAAI,EAAkB,aAAa;AACnCqpE,MAAAA,SAAS,EAAa,wBAAwB;AAC9CC,MAAAA,UAAU,EAAY,yBAAyB;AAC/CvU,MAAAA,IAAI,EAAkB,mBAAmB;AACzCwU,MAAAA,YAAY,EAAU,2BAA2B;AACjDC,MAAAA,SAAS,EAAa,wBAAwB;AAC9CC,MAAAA,mBAAmB,EAAG,kCAAkC;AACxD9Q,MAAAA,aAAa,EAAS,4BAA4B;AAClD3hB,MAAAA,IAAI,EAAkB,mBAAmB;AACzC0yB,MAAAA,YAAY,EAAU,2BAA2B;AACjDC,MAAAA,WAAW,EAAW,0BAA0B;AAChDC,MAAAA,gBAAgB,EAAM,iCAAiC;AACvD1iC,MAAAA,OAAO,EAAe,IAAA;AAC1B,KAAC,CAAC,CAAA;AACN,GAAA;AACA2iC,EAAAA,uBAAuBA,CAAC;AAAE72B,IAAAA,MAAAA;AAAO,GAAC,EAAE;AAAA,IAAA,IAAA82B,qBAAA,CAAA;AAChC,IAAA,CAAAA,qBAAA,GAAA,IAAI,CAACC,uBAAuB,MAAAD,IAAAA,IAAAA,qBAAA,KAA5BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAA,CAAA3pE,IAAA,CAAI,IAAA,EAA2B6yC,MAAM,CAAC,CAAA;AAC1C,GAAA;AACA61B,EAAAA,sBAAsBA,GAAG;AAAA,IAAA,IAAAmB,qBAAA,CAAA;AACrB;IACA,IAAI,CAACC,aAAa,EAAE,CAAA;IACpB,CAAAD,qBAAA,GAAI,IAAA,CAACE,eAAe,MAAA,IAAA,IAAAF,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAApBA,qBAAA,CAAA7pE,IAAA,CAAA,IAAuB,CAAC,CAAA;AAC5B,GAAA;AACAgqE,EAAAA,sBAAsBA,GAAG;IACrB,IAAI,CAACrB,aAAa,EAAE,CAAA;AACxB,GAAA;AACAsB,EAAAA,gCAAgCA,GAAG;AAAA,IAAA,IAAAC,oBAAA,CAAA;AAC/B;AACA;IACA,CAAAA,oBAAA,GAAI,IAAA,CAACC,cAAc,MAAA,IAAA,IAAAD,oBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAnBA,oBAAA,CAAAlqE,IAAA,CAAA,IAAsB,CAAC,CAAA;AAC3B,GAAA;AACAoqE,EAAAA,0BAA0BA,GAAG;AAAA,IAAA,IAAAC,mBAAA,CAAA;AACzB;AACA,IAAA,CAAAA,mBAAA,GAAA,IAAI,CAACC,aAAa,MAAAD,IAAAA,IAAAA,mBAAA,KAAlBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,mBAAA,CAAArqE,IAAA,CAAI,IAAA,EAAiB,IAAI,CAAC,CAAA;AAC9B,GAAA;EACAuqE,4BAA4BA,CAACC,UAAU,GAAG,IAAI,EAAEpS,WAAW,EAAEvI,QAAQ,EAAE;IACnE,MACI73C,EAAE,GAAG,IAAI,CAAA;AACb,IAAA,IAAIwyD,UAAU,EAAE;AAAA,MAAA,IAAAC,mBAAA,CAAA;AACZ,MAAA,CAAAA,mBAAA,GAAAzyD,EAAE,CAAC+xD,eAAe,MAAA,IAAA,IAAAU,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAlBA,mBAAA,CAAAzqE,IAAA,CAAAgY,EAAqB,CAAC,CAAA;AAC1B,KAAC,MACI;AACD,MAAA,IAAI,CAACA,EAAE,CAAC6wD,MAAM,EAAE;QACZ7wD,EAAE,CAAC8xD,aAAa,EAAE,CAAA;AACtB,OAAA;MACA9xD,EAAE,CAAC0yD,cAAc,CACZ,CAAA;AACjB,kDAAA,EAAoD1yD,EAAE,CAAC2yD,CAAC,CAAE,CAAavS,WAAAA,EAAAA,WAAY,gBAAe,CAAE,CAAA;AACpG,oBAAA,EAAsBvI,QAAQ,IAAIA,QAAQ,CAACgC,OAAO,GAAI,iCAAgC75C,EAAE,CAAC2yD,CAAC,CAAC,wCAAwC,CAAE,CAAG9a,CAAAA,EAAAA,QAAQ,CAACgC,OAAQ,CAAA,MAAA,CAAO,GAAG,EAAG,CAAA;AACtK,sBAAA,CAAuB,CAAC,CAAA;AAChB,KAAA;AACJ,GAAA;AACA+Y,EAAAA,yBAAyBA,GAAG;AACxB,IAAA,IAAI,CAACL,4BAA4B,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;AACnD,GAAA;AACAM,EAAAA,yBAAyBA,GAAG;AACxB,IAAA,IAAI,CAACN,4BAA4B,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;AACnD,GAAA;AACAO,EAAAA,iBAAiBA,GAAG;AAChB,IAAA,IAAI,CAACP,4BAA4B,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;AACnD,GAAA;AACAQ,EAAAA,iBAAiBA,GAAG;AAChB,IAAA,IAAI,CAACR,4BAA4B,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;AACnD,GAAA;AACAS,EAAAA,wBAAwBA,CAAC;IAAE5S,WAAW;AAAEvI,IAAAA,QAAAA;AAAS,GAAC,EAAE;IAChD,IAAI,CAAC0a,4BAA4B,CAAC,KAAK,EAAEnS,WAAW,EAAEvI,QAAQ,CAAC,CAAA;AACnE,GAAA;AACAob,EAAAA,+BAA+BA,GAAG;IAC9B,MAAMjzD,EAAE,GAAG,IAAI,CAAA;AACf,IAAA,IAAIA,EAAE,CAACuwD,cAAc,IAAI,IAAI,EAAE;AAC3BvwD,MAAAA,EAAE,CAAC1O,UAAU,CAAC,MAAM0O,EAAE,CAAC6wD,MAAM,GAAG,IAAI,EAAE7wD,EAAE,CAACuwD,cAAc,CAAC,CAAA;AAC5D,KAAC,MACI;MACDvwD,EAAE,CAAC6wD,MAAM,GAAG,IAAI,CAAA;AACpB,KAAA;AACJ,GAAA;EACA,IAAIqC,WAAWA,GAAG,EAAC;AACvB,CAAC;;;;"}