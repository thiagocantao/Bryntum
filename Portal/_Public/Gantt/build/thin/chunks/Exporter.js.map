{"version":3,"file":"Exporter.js","sources":["../../../../Grid/lib/Grid/feature/export/Utils.js","../../../../Grid/lib/Grid/feature/export/exporter/Exporter.js"],"sourcesContent":["\nexport const RowsRange = {\n    all     : 'all',\n    visible : 'visible'\n};\n\nexport const PaperFormat = {\n    A6 : {\n        width  : 4.11,\n        height : 5.81\n    },\n    A5 : {\n        width  : 5.81,\n        height : 8.25\n    },\n    A4 : {\n        width  : 8.25,\n        height : 11.69\n    },\n    A3 : {\n        width  : 11.69,\n        height : 16.49\n    },\n    Legal : {\n        width  : 8.5,\n        height : 14\n    },\n    Letter : {\n        width  : 8.5,\n        height : 11\n    }\n};\n\nexport const Orientation = {\n    portrait  : 'portrait',\n    landscape : 'landscape'\n};\n\nexport const FileFormat = {\n    pdf : 'pdf',\n    png : 'png'\n};\n\nexport const FileMIMEType = {\n    pdf : 'application/pdf',\n    png : 'image/png'\n};\n","import DomSync from '../../../../Core/helper/DomSync.js';\nimport TemplateHelper from '../../../../Core/helper/TemplateHelper.js';\nimport BrowserHelper from '../../../../Core/helper/BrowserHelper.js';\nimport Base from '../../../../Core/Base.js';\nimport Localizable from '../../../../Core/localization/Localizable.js';\nimport IdHelper from '../../../../Core/helper/IdHelper.js';\nimport DomHelper from '../../../../Core/helper/DomHelper.js';\nimport { RowsRange } from '../Utils.js';\nimport Events from '../../../../Core/mixin/Events.js';\nimport Delayable from '../../../../Core/mixin/Delayable.js';\n\n/**\n * @module Grid/feature/export/exporter/Exporter\n */\n\n/**\n * Base class for all exporters\n * @mixes Core/localization/Localizable\n * @mixes Core/mixin/Events\n */\nexport default class Exporter extends Delayable(Events(Localizable(Base))) {\n    static get defaultConfig() {\n        return {\n            /**\n             * `True` to replace all linked CSS files URLs to absolute before passing HTML to the server.\n             * When passing a string the current origin of the CSS files URLS will be replaced by the passed origin.\n             *\n             * For example: css files pointing to /app.css will be translated from current origin to {translateURLsToAbsolute}/app.css\n             * @config {Boolean|String}\n             * @default\n             */\n            translateURLsToAbsolute : true,\n\n            /**\n             * When true links are converted to absolute by combining current window location (with replaced origin) with\n             * resource link.\n             * When false links are converted by combining new origin with resource link (for angular)\n             * @config {Boolean}\n             * @default\n             */\n            keepPathName : true,\n\n            /**\n             * This method accepts all stylesheets (link and style tags) which are supposed to be put on the page. Use this\n             * hook method to filter or modify them.\n             *\n             * ```javascript\n             * new Grid({\n             *     features: {\n             *         pdfExport: {\n             *             // filter out inline styles and bootstrap.css\n             *             filterStyles: styles => styles.filter(item => !/(link|bootstrap.css)/.test(item))\n             *         }\n             *     }\n             * });\n             * ```\n             * @param {String[]} styles\n             * @returns {String[]} List of stylesheets to put on the exported page\n             */\n            filterStyles : styles => styles\n        };\n    }\n\n    /**\n     * Template of an extracted page.\n     * @param {Object} data Data for the page template\n     * @returns {String}\n     */\n    pageTpl(data) {\n        const\n            {\n                title,\n                header,\n                footer,\n                styles,\n                htmlClasses,\n                bodyStyle,\n                bodyClasses = [],\n                paperHeight,\n                paperWidth,\n                html\n            } = data;\n\n        bodyClasses.push(`b-${this.constructor.type}`);\n\n        // Other classes needed on outer element.\n        // <remove-on-release>\n        // TODO: use the new static Widget.outerCls property when merged with master\n        // </remove-on-release>\n        if (DomHelper.scrollBarWidth) {\n            bodyClasses.push('b-visible-scrollbar');\n        }\n        else {\n            bodyClasses.push('b-overlay-scrollbar');\n        }\n        if (BrowserHelper.isChrome) {\n            bodyClasses.push('b-chrome');\n        }\n        else if (BrowserHelper.isSafari) {\n            bodyClasses.push('b-safari');\n        }\n        else if (BrowserHelper.isFirefox) {\n            bodyClasses.push('b-firefox');\n        }\n\n        return TemplateHelper.tpl`\n            <!DOCTYPE html>\n            <html class=\"${htmlClasses}\" style=\"width: ${paperWidth}in; height: ${paperHeight}in;\">\n                <head>\n                    <meta content=\"text/html; charset=UTF-8\" http-equiv=\"Content-Type\" />\n                    <title>${title}</title>\n                    ${styles.join('')}\n                </head>\n                <body class=\"b-export ${bodyClasses.join(' ')}\" style=\"width: ${paperWidth}in; height: ${paperHeight}in; ${bodyStyle}\">\n                    <div class=\"b-export-content\">\n                        ${header && `<div class=\"b-export-header\" style=\"width: 100%\">${header}</div>`}\n                        <div class=\"b-export-body\"><div class=\"b-export-viewport\">${html}</div></div>\n                        ${footer && `<div class=\"b-export-footer\" style=\"width: 100%\">${footer}</div>`}\n                    </div>\n                </body>\n            </html>`;\n    }\n\n    /**\n     * Returns all style-related tags: `<style>` and `<link rel=\"stylesheet\">`\n     * @property {String[]}\n     * @readonly\n     */\n    get stylesheets() {\n        const me = this;\n\n        if (me._stylesheets) {\n            return me._stylesheets;\n        }\n\n        const\n            translate       = me.translateURLsToAbsolute,\n            origin          = globalThis.origin,\n            styleSheetNodes = Array.from(document.querySelectorAll('link[rel=\"stylesheet\"], style')),\n            styles          = [];\n\n        styleSheetNodes.forEach(node => {\n            node = node.cloneNode(true);\n\n            // put absolute URL to node `href` attribute\n            if (translate && node.href) {\n                let result;\n\n                if (translate === true) {\n                    result = node.href;\n                }\n                // translate is truthy if we are here, which means it is string now\n                else if (this.keepPathName) {\n                    result = node.href.replace(origin, translate);\n                }\n                else {\n                    result = new URL(node.getAttribute('href'), translate);\n                }\n\n                node.setAttribute('href', result);\n            }\n\n            let styleText = node.outerHTML;\n\n            if (translate && /style/i.test(node.tagName)) {\n                const converter = me.getStyleTagURLConverter(translate);\n                styleText = styleText.replace(/url\\(['\"]?(.+?)['\"]?\\)/g, converter);\n            }\n\n            styles.push(styleText);\n        });\n\n        styles.push(\n            `<style>\n                body, html {\n                    overflow: auto;\n                }\n\n                body {\n                    position: relative;\n                    margin: 0;\n                }\n            </style>`);\n\n        return me._stylesheets = me.filterStyles(styles);\n    }\n\n    set stylesheets(value) {\n        this._stylesheets = value ? this.filterStyles(value) : value;\n    }\n\n    getStyleTagURLConverter(translate) {\n        return function(match, url) {\n            let result;\n\n            try {\n                let base;\n\n                // Filter out local references, e.g. to svg marker\n                if (/^#/.test(url)) {\n                    result = match;\n                }\n                else {\n                    if (translate === true) {\n                        base = globalThis.location.href;\n                    }\n                    // translate is truthy if we are here, which means it is string now\n                    else if (this.keepPathName) {\n                        base = globalThis.location.href.replace(globalThis.location.origin, translate);\n                    }\n                    else {\n                        base = translate;\n                    }\n\n                    result = `url('${new URL(url, base).href}')`;\n                }\n            }\n            catch (e) {\n                result = match;\n            }\n\n            return result;\n        }.bind(this);\n    }\n\n    saveState({ client }) {\n        this.state = client.state;\n    }\n\n    async restoreState({ client }) {\n        const\n            promises  = [],\n            detachers = new Set();\n\n        detachers.add(\n            client.scrollable.ion({\n                scroll() {\n                    promises.push(client.scrollable.await('scrollEnd'));\n                }\n            })\n        );\n\n        client.eachSubGrid(({ header, scrollable }) => {\n            detachers.add(\n                scrollable.ion({\n                    scroll() {\n                        promises.push(scrollable.await('scrollEnd'));\n                    }\n                })\n            );\n\n            detachers.add(\n                header.scrollable.ion({\n                    scroll() {\n                        promises.push(header.scrollable.await('scrollEnd'));\n                    }\n                })\n            );\n        });\n\n        client.state = this.state;\n\n        await Promise.all(promises);\n\n        detachers.forEach(fn => fn());\n    }\n\n    beforeExport() {\n        // Into this element we will put HTML for export\n        this.element = document.createElement('div');\n    }\n\n    //region DOM helpers\n\n    cloneElement(element, target = this.element, clear = true) {\n        if (clear) {\n            target.innerHTML = '';\n        }\n\n        target.appendChild(element.cloneNode(true));\n\n        DomHelper.removeEachSelector(target, '.b-grid-row,.b-grid-merged-cells-container');\n\n        const maskEl = target.querySelector('.b-gridbase > .b-mask');\n\n        if (maskEl) {\n            maskEl.remove();\n        }\n    }\n\n    createPlaceholder(el, clear = true, config = {}) {\n        if (clear) {\n            el.innerHTML = '';\n        }\n\n        return DomHelper.createElement(Object.assign({\n            parent : el,\n            id     : IdHelper.generateId('export')\n        }, config));\n    }\n\n    prepareElement({ client }) {\n        const { tbar, bbar } = client;\n\n        if (tbar) {\n            this.element.querySelector(`#${tbar.id}`).remove();\n        }\n\n        if (bbar) {\n            this.element.querySelector(`#${bbar.id}`).remove();\n        }\n    }\n\n    /**\n     * Appends generated header/footer element to the document body to measure their height\n     * @param html\n     * @returns {Number}\n     * @private\n     */\n    measureElement(html = '') {\n        if (html instanceof HTMLElement) {\n            html = html.outerHTML;\n        }\n\n        const target = DomHelper.createElement({\n            parent : document.body,\n            style  : {\n                visibility : 'hidden',\n                position   : 'absolute'\n            },\n            // Add html to measure to a div between two other divs to take margin into account\n            html : `<div style=\"height: 1px\"></div>${html}<div style=\"height: 1px\"></div>`\n        });\n\n        const result = target.offsetHeight - 2;\n\n        target.remove();\n\n        return result;\n    }\n\n    // Converts local urls to absolute\n    prepareHTML(html) {\n        if (html instanceof HTMLElement) {\n            html = html.outerHTML;\n        }\n\n        const target = DomHelper.createElement({\n            parent : document.body,\n            style  : {\n                visibility : 'hidden',\n                position   : 'absolute'\n            },\n            html\n        });\n\n        const elements = target.querySelectorAll('img');\n\n        for (let i = 0, l = elements.length; i < l; i++) {\n            elements[i].setAttribute('src', elements[i].src);\n        }\n\n        const result = target.innerHTML;\n\n        target.remove();\n\n        return result;\n    }\n\n    getVirtualScrollerHeight(client) {\n        let result = 0;\n\n        // If overlay scroll is enabled, this will return 0\n        // when disabled, it will report proper virtualScrollers element height\n        client.eachSubGrid(subGrid => {\n            if (subGrid.overflowingHorizontally) {\n                result = DomHelper.scrollBarWidth;\n            }\n        });\n\n        // If there's a visible scrollbar, need to also take border height into account\n        return result === 0 ? result : (result + 1);\n    }\n\n    //endregion\n\n    inchToPx(value) {\n        // 1in = 96px for screens\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/length#Absolute_length_units\n        return value * 96;\n    }\n\n    getScaleValue(base, value) {\n        return Math.floor((base * 10000 / value)) / 10000;\n    }\n\n    getVisibleRowsCount(client) {\n        const\n            rowManager = client.rowManager,\n            // We cannot rely on `visibleRowCount` property, it is a mere estimate\n            firstVisibleIndex = rowManager.rows.indexOf(rowManager.firstVisibleRow),\n            lastVisibleIndex  = rowManager.rows.indexOf(rowManager.lastVisibleRow);\n\n        let result;\n\n        // first index could be negative only if there are no rendered rows, in which case we return store count\n        if (firstVisibleIndex !== -1) {\n            // last visible index could be negative if last actually visible row doesn't reach view bottom, i.e.\n            // view is not completely filled with rows\n            if (lastVisibleIndex === -1) {\n                result = client.store.count - firstVisibleIndex;\n            }\n            else {\n                // for a zero-based index we need to add 1 to the result\n                result = lastVisibleIndex - firstVisibleIndex + 1;\n            }\n        }\n        else {\n            result = client.store.count;\n        }\n\n        return result;\n    }\n\n    async export(config) {\n        const me = this;\n\n        let pages;\n\n        me.beforeExport();\n\n        me.saveState(config);\n\n        await me.prepareComponent(config);\n\n        try {\n            pages = await me.getPages(config);\n        }\n        finally {\n            await me.restoreComponent(config);\n\n            me.stylesheets = null;\n\n            // https://app.assembla.com/spaces/bryntum/tickets/9400-scrollrowintoview-promise-is-not-reliable/details\n            // Restoring scroll might trigger rows repaint on next animation frame. We are\n            // waiting for next animation frame in such case. Covered in SinglePage.t.js\n            await new Promise(resolve => me.requestAnimationFrame(resolve));\n\n            await me.restoreState(config);\n        }\n\n        return pages;\n    }\n\n    async getPages(config) {\n        const\n            generator = this.pagesExtractor(config),\n            pages     = [];\n\n        let step;\n\n        while ((step = await generator.next()) && !step.done) {\n            pages.push(step.value);\n        }\n\n        return pages;\n    }\n\n    // Row buffer has to be adjusted to render complete row set per exported page. See virtual scrolling section in README\n    // for more details\n    adjustRowBuffer(client) {\n        const\n            { contentHeight } = this.exportMeta,\n            { rowManager }    = client;\n\n        this.oldRowManagerConfig = {\n            prependRowBuffer : rowManager.prependRowBuffer,\n            appendRowBuffer  : rowManager.appendRowBuffer\n        };\n\n        // render 3 times more rows to get enough to fill exported page\n        const adjustedRowBuffer = Math.ceil(contentHeight / rowManager.rowOffsetHeight);\n\n        rowManager.prependRowBuffer = adjustedRowBuffer;\n        rowManager.appendRowBuffer  = adjustedRowBuffer;\n\n        client.renderRows();\n\n        // In case we are at the bottom of the view and we are increasing buffer, rowmanager might return to the top row\n        // In this case we need to force it to render rows at the current scroll position\n        client.rowManager.jumpToPosition(client.scrollable.y);\n    }\n\n    restoreRowBuffer(client) {\n        client.rowManager.prependRowBuffer = this.oldRowManagerConfig.prependRowBuffer;\n        client.rowManager.appendRowBuffer  = this.oldRowManagerConfig.appendRowBuffer;\n\n        // There is no need to force rendering rows here, those would be updated during applyState call on a grid.\n        // More precisely - during setRowHeight method.\n    }\n\n    async prepareComponent(config) {\n        const\n            me          = this,\n            {\n                client,\n                columns,\n                rowsRange,\n                keepRegionSizes,\n                enableDirectRendering\n            } = config,\n            { rowManager } = client,\n            exportMeta  = me.exportMeta = {\n                enableDirectRendering,\n                totalWidth  : 0,\n                totalHeight : 0 - (enableDirectRendering ? 0 : me.getVirtualScrollerHeight(client)),\n                subGrids    : {}\n            };\n\n        client.columns.forEach(column => {\n            if (columns.includes(column.id)) {\n                column.show();\n            }\n            else {\n                column.hide();\n            }\n        });\n\n        // Wait for animation frame to catch optional resize event which may occur after hiding columns. Scroll\n        // stretcher should be synced before we proceed.\n        // Covered by export/Columns.t\n        await new Promise(resolve => client.requestAnimationFrame(resolve));\n\n        if (client.rowManager.rowCount > 0) {\n            if (rowsRange === RowsRange.all) {\n                exportMeta.firstVisibleDataIndex = rowManager.rows[0].dataIndex;\n            }\n            else {\n                exportMeta.firstVisibleDataIndex = rowManager.firstVisibleRow.dataIndex;\n\n                config.alignRows = true;\n            }\n\n            if (!enableDirectRendering) {\n                await client.scrollRowIntoView(client.store.getAt(exportMeta.firstVisibleDataIndex), { block : 'start' });\n            }\n        }\n\n        const { element } = me;\n\n        // clone whole grid element to the detached container\n        me.cloneElement(client.element);\n\n        me.prepareElement(config);\n\n        let fakeRow;\n\n        // Create fake row, we will use it to render stuff\n        if (enableDirectRendering) {\n            exportMeta.fakeRow = fakeRow = client.rowManager.rowClass.new({\n                cls        : client.rowCls,\n                rowManager : client.rowManager,\n                grid       : client,\n                // use fake indices, they aren't really required\n                index      : -10,\n                dataIndex  : -10\n            });\n        }\n\n        client.eachSubGrid(subGrid => {\n            // Call private listener to create actual DOM nodes\n            if (fakeRow) {\n                subGrid.onAddRow({ rows : [fakeRow], isExport : true });\n\n                // Trick inline widgets to think they're rendered into component (in fact they are)\n                // This is required to remove `Widget.outerCls` classes from the widget\n                fakeRow.element.dataset.ownerCmp = client.id;\n            }\n\n            const placeHolder = me.createPlaceholder(element.querySelector(`[id=\"${subGrid.id}\"]`), false);\n\n            let width;\n\n            if (keepRegionSizes?.[subGrid.region]) {\n                width = subGrid.element.offsetWidth;\n            }\n            else {\n                width = subGrid.columns.visibleColumns.reduce((result, column) => {\n                    if (typeof column.width === 'number') {\n                        result += column.width;\n                    }\n                    else {\n                        result += (client.hideHeaders ? client.rowManager.rows[0].getCell(column.id) : column.element).offsetWidth;\n                    }\n                    return result;\n                }, 0);\n            }\n\n            exportMeta.totalWidth += width;\n\n            const splitterWidth = subGrid.splitterElement?.offsetWidth || 0;\n\n            exportMeta.totalWidth += splitterWidth;\n\n            exportMeta.subGrids[subGrid.region] = {\n                id       : subGrid.id,\n                headerId : subGrid.header?.id || null,\n                footerId : subGrid.footer?.id || null,\n                rows     : [],\n                splitterWidth,\n                placeHolder,\n                width\n            };\n        });\n    }\n\n    prepareExportElement() {\n        const\n            me = this,\n            { element, exportMeta } = me;\n\n        // Exporters may change subGrid width, e.g. when specific date range is exported\n        Object.values(exportMeta.subGrids).forEach(({ width, id, headerId, footerId }) => {\n            [id, headerId, footerId].forEach(id => {\n                if (id) {\n                    const childElement = element.querySelector(`[id=\"${id}\"]`);\n                    // SubGrid now always have header & footer, but not always in DOM\n                    if (childElement) {\n                        childElement.style.width = `${width}px`;\n                        childElement.style.flex = '';\n                    }\n                }\n            });\n        });\n\n        return element.innerHTML;\n    }\n\n    async restoreComponent(config) {\n        if (this.exportMeta.fakeRow) {\n            this.exportMeta.fakeRow.destroy();\n            delete this.exportMeta.fakeRow;\n        }\n    }\n\n    async scrollRowIntoView(client, index) {\n        await client.scrollRowIntoView(client.store.getAt(index), { block : 'start' });\n\n        // #9400 - scrollRowIntoView promise is not reliable\n        await new Promise(resolve => this.requestAnimationFrame(resolve));\n    }\n\n    collectRow(row) {\n        const\n            subGrids = this.exportMeta.subGrids,\n            re       = /data-owner-cmp=\".+?\"/;\n\n        Object.entries(row.elements).forEach(([key, value]) => {\n            subGrids[key].rows.push([\n                value.outerHTML.replace(re, ''),\n                row.top,\n                row.offsetHeight,\n                new Map() // This one is used to collect events (or in general additional row content)\n            ]);\n        });\n    }\n\n    renderMergedCells(config, fromIndex, toIndex, rows) {\n        const\n            me           = this,\n            { client }   = config,\n            { subGrids } = me.exportMeta,\n            // Generate config for merged cells\n            domConfigMap = client.features.mergeCells.buildMergedCellsConfig(fromIndex, toIndex, rows);\n\n        for (const subGridName in subGrids) {\n            const\n                subGrid = subGrids[subGridName],\n                target  = document.createElement('div');\n\n            // Render config into temporary element\n            DomSync.sync({\n                targetElement : target,\n                domConfig     : {\n                    children : domConfigMap[subGridName].children\n                }\n            });\n\n            if (target.childNodes.length) {\n                // mergeCells feature uses dependency injection, so in order to get rendered cell content we\n                // need to get the cell element matching the range\n                target.childNodes.forEach(child => {\n                    const\n                        { syncId } = child.dataset,\n                        range      = client.features.mergeCells.mergedRanges\n                            .find(range => range.cellElement?.parentNode.dataset.syncId === syncId);\n\n                    if (range) {\n                        // Replace cell content if range is found (it might not be found if there's only one cell)\n                        child.innerHTML = range.cellElement.outerHTML;\n                    }\n                });\n\n                subGrid.mergedCellsHtml = [target.innerHTML];\n            }\n        }\n    }\n}\n\n// HACK: terser/obfuscator doesn't yet support async generators, when processing code it converts async generator to regular async\n// function.\n/**\n * Pages generator. Value should be string with exported HTML\n * @param {Object} config\n * @returns {AsyncIterableIterator<{value: String, done: Boolean}>}\n * @private\n */\nExporter.prototype.pagesExtractor = async function * pagesExtractor() {\n    throw new Error('Implement this method in a subclass');\n};\n"],"names":["RowsRange","all","visible","PaperFormat","A6","width","height","A5","A4","A3","Legal","Letter","Orientation","portrait","landscape","FileFormat","pdf","png","FileMIMEType","Exporter","Delayable","Events","Localizable","Base","defaultConfig","translateURLsToAbsolute","keepPathName","filterStyles","styles","pageTpl","data","title","header","footer","htmlClasses","bodyStyle","bodyClasses","paperHeight","paperWidth","html","push","constructor","type","DomHelper","scrollBarWidth","BrowserHelper","isChrome","isSafari","isFirefox","TemplateHelper","tpl","join","stylesheets","me","_stylesheets","translate","origin","globalThis","styleSheetNodes","Array","from","document","querySelectorAll","forEach","node","cloneNode","href","result","replace","URL","getAttribute","setAttribute","styleText","outerHTML","test","tagName","converter","getStyleTagURLConverter","value","match","url","base","location","e","bind","saveState","client","state","restoreState","promises","detachers","Set","add","scrollable","ion","scroll","await","eachSubGrid","Promise","fn","beforeExport","element","createElement","cloneElement","target","clear","innerHTML","appendChild","removeEachSelector","maskEl","querySelector","remove","createPlaceholder","el","config","Object","assign","parent","id","IdHelper","generateId","prepareElement","tbar","bbar","measureElement","HTMLElement","body","style","visibility","position","offsetHeight","prepareHTML","elements","i","l","length","src","getVirtualScrollerHeight","subGrid","overflowingHorizontally","inchToPx","getScaleValue","Math","floor","getVisibleRowsCount","rowManager","firstVisibleIndex","rows","indexOf","firstVisibleRow","lastVisibleIndex","lastVisibleRow","store","count","export","pages","prepareComponent","getPages","restoreComponent","resolve","requestAnimationFrame","generator","pagesExtractor","step","next","done","adjustRowBuffer","contentHeight","exportMeta","oldRowManagerConfig","prependRowBuffer","appendRowBuffer","adjustedRowBuffer","ceil","rowOffsetHeight","renderRows","jumpToPosition","y","restoreRowBuffer","columns","rowsRange","keepRegionSizes","enableDirectRendering","totalWidth","totalHeight","subGrids","column","includes","show","hide","rowCount","firstVisibleDataIndex","dataIndex","alignRows","scrollRowIntoView","getAt","block","fakeRow","rowClass","new","cls","rowCls","grid","index","_subGrid$splitterElem","_subGrid$header","_subGrid$footer","onAddRow","isExport","dataset","ownerCmp","placeHolder","region","offsetWidth","visibleColumns","reduce","hideHeaders","getCell","splitterWidth","splitterElement","headerId","footerId","prepareExportElement","values","childElement","flex","destroy","collectRow","row","re","entries","key","top","Map","renderMergedCells","fromIndex","toIndex","domConfigMap","features","mergeCells","buildMergedCellsConfig","subGridName","DomSync","sync","targetElement","domConfig","children","childNodes","child","syncId","range","mergedRanges","find","_range$cellElement","cellElement","parentNode","mergedCellsHtml","prototype","Error","_$name"],"mappings":"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"}