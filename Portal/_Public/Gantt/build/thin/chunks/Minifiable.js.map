{"version":3,"file":"Minifiable.js","sources":["../../../../Core/lib/Core/mixin/Hoverable.js","../../../../Core/lib/Core/util/drag/DragTipProxy.js","../../../../Core/lib/Core/widget/panel/PanelCollapserOverlay.js","../../../../Core/lib/Core/widget/mixin/Minifiable.js"],"sourcesContent":["import Delayable from './Delayable.js';\nimport DomClassList from '../helper/util/DomClassList.js';\nimport EventHelper from '../helper/EventHelper.js';\n\n/**\n * @module Core/mixin/Hoverable\n */\n\nconst\n    EDGES = {\n        e : 'b-hover-edge',\n        t : 'b-hover-top',\n        r : 'b-hover-right',\n        b : 'b-hover-bottom',\n        l : 'b-hover-left'\n    },\n    EDGE_CLASSES = {\n        [EDGES.e] : 1,\n        [EDGES.t] : 1,\n        [EDGES.r] : 1,\n        [EDGES.b] : 1,\n        [EDGES.l] : 1\n    },\n    ZONES = {\n        t  : [EDGES.e, EDGES.t],\n        r  : [EDGES.e, EDGES.r],\n        b  : [EDGES.e, EDGES.b],\n        l  : [EDGES.e, EDGES.l],\n        tr : [EDGES.e, EDGES.t, EDGES.r],\n        bl : [EDGES.e, EDGES.b, EDGES.l],\n        tl : [EDGES.e, EDGES.t, EDGES.l],\n        br : [EDGES.e, EDGES.b, EDGES.r]\n    };\n\n/**\n * This mixin provides mouse hover tracking.\n *\n * ```javascript\n *  class Tracker extends Base.mixin(Hoverable) {\n *      hoverEnter(leaving) {\n *          // this.hoverTarget has been entered from \"leaving\"\n *          // this.hoverTarget will never be null, but leaving may be null\n *      }\n *\n *      hoverLeave(leaving) {\n *          // this.hoverTarget has been entered from \"leaving\"\n *          // this.hoverTarget may be null, but leaving will never be null\n *      }\n *\n *      hoverMove(event) {\n *          // called when a mousemove is made within a hover target\n *          // this.hoverTarget will never be null\n *      }\n *  }\n *\n *  let tracker = new Tracker({\n *      hoverRootElement : document.body,\n *      hoverSelector    : '.hoverable'\n *  });\n * ```\n *\n * @mixin\n * @internal\n */\nexport default Target => class Hoverable extends Target.mixin(Delayable) {\n    static get $name() {\n        return 'Hoverable';\n    }\n\n    //region Configs\n\n    static get configurable() {\n        return {\n            /**\n             * A CSS class to add to the {@link #config-hoverTarget target} element.\n             * @config {String}\n             */\n            hoverCls : null,\n\n            /**\n             * A CSS class to add to the {@link #config-hoverTarget target} element to enable CSS animations. This class\n             * is added after calling {@link #function-hoverEnter}.\n             * @config {String}\n             */\n            hoverAnimationCls : null,\n\n            /**\n             * A CSS class to add to the {@link #config-hoverRootElement root} element.\n             * @config {String}\n             */\n            hoverRootCls : null,\n\n            /**\n             * A CSS class to add to the {@link #config-hoverRootElement root} element when there is an active\n             * {@link #config-hoverTarget target}.\n             * @config {String}\n             */\n            hoverRootActiveCls : null,\n\n            /**\n             * The number of milliseconds to delay notification of changes in the {@link #config-hoverTarget}.\n             * @config {Number}\n             */\n            hoverDelay : null,\n\n            /**\n             * The current element that the cursor is inside as determined by `mouseover` and `mouseout`. Changes in\n             * this config trigger re-evaluation of the {@link #config-hoverSelector} to determine if there is a\n             * {@link #config-hoverTarget}.\n             * @config {HTMLElement}\n             * @private\n             */\n            hoverElement : null,\n\n            /**\n             * An element to ignore. Mouse entry into this element will not trigger a change in either of the\n             * {@link #config-hoverElement} or {@link #config-hoverTarget} values.\n             * @config {HTMLElement}\n             */\n            hoverIgnoreElement : null,\n\n            /**\n             * This property is a string containing one character for each edge that is hoverable. For example, a\n             * value of \"tb\" indicates that the top and bottom edges are hoverable.\n             * @config {String}\n             */\n            hoverEdges : null,\n\n            /**\n             * When {@link #config-hoverEdges} is used, this value determines the size (in pixels) of the edge. When\n             * the cursor is within this number of pixels of an edge listed in `hoverEdges`, the appropriate CSS class\n             * is added to the {@link #config-hoverTarget}:\n             *\n             *  - `b-hover-top`\n             *  - `b-hover-right`\n             *  - `b-hover-bottom`\n             *  - `b-hover-left`\n             *\n             * Depending on the values of `hoverEdges`, it is possible to have at most two of these classes present at\n             * any one time (when the cursor is in a corner).\n             * @config {Number}\n             * @default\n             */\n            hoverEdgeSize : 10,\n\n            /**\n             * The outer element where hover tracking will operate (attach events to it and use as root limit when\n             * looking for ancestors).\n             *\n             * A common choice for this will be `document.body`.\n             * @config {HTMLElement}\n             */\n            hoverRootElement : {\n                $config : 'nullify',\n\n                value : null\n            },\n\n            /**\n             * A selector for the [closest](https://developer.mozilla.org/en-US/docs/Web/API/Element/closest) API to\n             * determine the actual element of interest. This selector is used to process changes to the\n             * {@link #config-hoverElement} to determine the {@link #config-hoverTarget}.\n             * @config {String}\n             */\n            hoverSelector : null,\n\n            /**\n             * The currently active hover target. This will be the same as {@link #config-hoverElement} unless there is\n             * a {@link #config-hoverSelector}.\n             * @config {HTMLElement}\n             */\n            hoverTarget : {\n                $config : 'nullify',\n\n                value : null\n            },\n\n            /**\n             * Set to `true` to include tracking of `mousemove` events for the active {@link #config-hoverTarget}. This\n             * is required for the {@link #function-hoverMove} method to be called.\n             * @config {Boolean}\n             * @default false\n             */\n            hoverTrack : null,\n\n            /**\n             * A string value containing one character per active edge (e.g., \"tr\").\n             * @config {String}\n             * @private\n             */\n            hoverZone : null\n        };\n    }\n\n    static get delayable() {\n        return {\n            setHoverTarget : 0\n        };\n    }\n\n    //endregion\n    //region State Handling\n\n    /**\n     * This method is called when the cursor enters the {@link #config-hoverTarget}. The `hoverTarget` will not be\n     * `null`.\n     * @param {HTMLElement} leaving The element that was previously the `hoverTarget`. This value may be null.\n     */\n    hoverEnter(leaving) {\n        // template\n    }\n\n    /**\n     * This method should return true if the given `element` should be ignored. By default, this is `true` if the\n     * `element` is contained inside the {@link #config-hoverIgnoreElement}.\n     * @param {HTMLElement} element\n     * @returns {Boolean}\n     * @protected\n     */\n    hoverIgnore(element) {\n        return this.hoverIgnoreElement?.contains(element);\n    }\n\n    /**\n     * This method is called when the cursor leaves the {@link #config-hoverTarget}. The `hoverTarget` may be `null`\n     * or refer to the new `hoverTarget`\n     * @param {HTMLElement} leaving The element that was previously the `hoverTarget`. This value will not be null.\n     */\n    hoverLeave(leaving) {\n        // template\n    }\n\n    /**\n     * This method is called when the mouse moves within a {@link #config-hoverTarget}, but only if enabled by the\n     * {@link #config-hoverTrack} config.\n     * @param {Event} event\n     */\n    hoverMove(event) {\n        // template\n    }\n\n    //endregion\n    //region Events\n\n    onHoverMouseMove(event) {\n        const\n            me = this,\n            { hoverEdges, hoverEdgeSize, hoverTarget } = me;\n\n        if (hoverTarget) {\n            if (hoverEdges) {\n                const\n                    { top, left, width, height, right, bottom } = hoverTarget.getBoundingClientRect(),\n                    { clientX, clientY } = event,\n                    centerX = left + width / 2,\n                    centerY = top + height / 2,\n                    t = clientY <  (hoverEdgeSize ? top    + hoverEdgeSize : centerY),\n                    r = clientX >= (hoverEdgeSize ? right  - hoverEdgeSize : centerX),\n                    b = clientY >= (hoverEdgeSize ? bottom - hoverEdgeSize : centerY),\n                    l = clientX <  (hoverEdgeSize ? left   + hoverEdgeSize : centerX),\n                    tb = ((t || b) ? (t ? 't' : 'b') : ''),\n                    rl = ((r || l) ? (r ? 'r' : 'l') : '');\n\n                me.hoverZone = (hoverEdges.includes(tb) ? tb : '') + (hoverEdges.includes(rl) ? rl : '');\n            }\n\n            me.hoverEvent = event;\n            me.hoverTrack && me.hoverMove(event);\n        }\n    }\n\n    onHoverMouseOver(event) {\n        this.hoverEvent = event;\n        this.hoverElement = event.target;\n    }\n\n    onHoverMouseOut(event) {\n        this.hoverEvent = event;\n        this.hoverElement = event.relatedTarget;\n    }\n\n    //endregion\n    //region Configs\n\n    // hoverDelay\n\n    updateHoverDelay(delay) {\n        this.setHoverTarget.delay = delay;\n    }\n\n    // hoverEdges\n\n    changeHoverEdges(edges) {\n        return (edges === true) ? 'trbl' : (edges || '').replace('v', 'tb').replace('h', 'lr');\n    }\n\n    updateHoverEdges() {\n        this.syncHoverListeners();\n    }\n\n    // hoverElement\n\n    changeHoverElement(element) {\n        if (!this.hoverIgnore(element)) {\n            return element;\n        }\n    }\n\n    updateHoverElement(hoverEl) {\n        const { hoverSelector } = this;\n\n        if (hoverSelector) {\n            hoverEl = hoverEl?.closest(hoverSelector);\n        }\n\n        this.setHoverTarget(hoverEl);  // this may be delayed\n    }\n\n    // hoverRootElement\n\n    updateHoverRootElement(rootEl, was) {\n        const { hoverRootCls } = this;\n\n        if (hoverRootCls) {\n            was?.classList.remove(hoverRootCls);\n            rootEl?.classList.add(hoverRootCls);\n        }\n\n        this.syncHoverListeners();\n    }\n\n    // hoverTarget\n\n    changeHoverTarget(hoverEl, was) {\n        if (was) {\n            this.hoverZone = null;\n        }\n\n        return hoverEl;\n    }\n\n    updateHoverTarget(hoverEl, was) {\n        const\n            me = this,\n            { hoverCls, hoverAnimationCls, hoverRootActiveCls, hoverRootElement } = me;\n\n        if (hoverRootActiveCls) {\n            hoverRootElement?.classList[hoverEl ? 'add' : 'remove'](hoverRootActiveCls);\n        }\n\n        if (was) {\n            hoverCls && was.classList.remove(hoverCls);\n            hoverAnimationCls && was.classList.remove(hoverAnimationCls);\n\n            me.hoverLeave(was);\n        }\n\n        if (hoverEl) {\n            hoverCls && hoverEl.classList.add(hoverCls);\n\n            me.hoverEnter(was);\n\n            if (me.hoverTrack) {\n                me.hoverMove(me.hoverEvent);\n            }\n\n            if (hoverAnimationCls) {\n                hoverEl.getBoundingClientRect();   // force layout so next change starts animation\n                hoverEl.classList.add(hoverAnimationCls);\n            }\n        }\n    }\n\n    // hoverTrack\n\n    updateHoverTrack() {\n        this.syncHoverListeners();\n    }\n\n    // hoverZone\n\n    updateHoverZone(zone) {\n        const { hoverAnimationCls, hoverTarget } = this;\n\n        if (hoverTarget) {\n            const\n                { className } = hoverTarget,\n                cls = DomClassList.change(className, /* add= */zone ? ZONES[zone] : null, /* remove= */EDGE_CLASSES);\n\n            if (className !== cls) {\n                hoverTarget.className = cls;\n\n                if (zone && hoverAnimationCls) {\n                    hoverTarget.classList.remove(hoverAnimationCls);\n                    hoverTarget.getBoundingClientRect();   // force layout so next change starts animation\n                    hoverTarget.classList.add(hoverAnimationCls);\n                }\n            }\n        }\n    }\n\n    //endregion\n\n    //region Misc\n\n    setHoverTarget(target) {\n        // this method runs later based on the hoverDelay\n        this.hoverTarget = target;\n    }\n\n    syncHoverListeners() {\n        const\n            me = this,\n            element = me.hoverRootElement,\n            listeners = {\n                element,\n                thisObj   : me,\n                mouseover : 'onHoverMouseOver',\n                mouseout  : 'onHoverMouseOut'\n            };\n\n        if (me.hoverTrack || me.hoverEdges) {\n            listeners.mousemove = 'onHoverMouseMove';\n        }\n\n        me._hoverRootDetacher?.();\n        me._hoverRootDetacher = element && EventHelper.on(listeners);\n    }\n\n    //endregion\n};\n","import DragProxy from './DragProxy.js';\nimport Widget from '../../widget/Widget.js';\nimport Rectangle from '../../helper/util/Rectangle.js';\n\nimport '../../widget/Tooltip.js';\n\n/**\n * @module Core/util/drag/DragTipProxy\n */\n\n/**\n * This drag proxy manages a {@link #config-tooltip} (or derived class) and aligns the tooltip to the current drag\n * position adjusted by the {@link #config-align} config.\n * @extends Core/util/drag/DragProxy\n * @classtype tip\n * @internal\n */\nexport default class DragTipProxy extends DragProxy {\n    static get type() {\n        return 'tip';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Controls how the tooltip will be aligned to the current drag position.\n             *\n             * See {@link Core.helper.util.Rectangle#function-alignTo} for details.\n             * @config {String}\n             * @default\n             */\n            align : 't10-b50',\n\n            /**\n             * The number of pixels to offset from the drag position.\n             * @config {Number}\n             * @default\n             */\n            offset : 20,\n\n            /**\n             * The tooltip to be shown, hidden and repositioned to track the drag position.\n             * @config {Core.widget.Tooltip}\n             */\n            tooltip : {\n                $config : ['lazy', 'nullify'],\n\n                value : {\n                    type : 'tooltip'\n                }\n            }\n        };\n    }\n\n    open() {\n        this.getConfig('tooltip');  // trigger creation\n    }\n\n    close() {\n        this.tooltip?.hide();\n    }\n\n    dragMove(drag) {\n        const\n            { offset, tooltip } = this,\n            { event } = drag;\n\n        if (tooltip) {\n            if (!tooltip.isVisible) {\n                tooltip.show();\n            }\n\n            tooltip.alignTo({\n                align  : this.align,\n                target : new Rectangle(event.clientX - offset, event.clientY - offset, offset * 2, offset * 2)\n            });\n        }\n    }\n\n    changeTooltip(config, existing) {\n        return Widget.reconfigure(existing, config, /* owner = */ this);\n    }\n}\n\nDragTipProxy.initClass();\n","import Animator from '../../util/Animator.js';\nimport PanelCollapser from './PanelCollapser.js';\nimport Delayable from '../../mixin/Delayable.js';\nimport ObjectHelper from '../../helper/ObjectHelper.js';\nimport EventHelper from '../../helper/EventHelper.js';\nimport DomHelper from '../../helper/DomHelper.js';\nimport DomClassList from '../../helper/util/DomClassList.js';\n\n/**\n * @module Core/widget/panel/PanelCollapserOverlay\n */\n\nconst\n    { dockIsHorz } = PanelCollapser.maps,\n    collapseExposeEdge = {\n        top    : 0,\n        down   : 0,\n        left   : 1,\n        bottom : 2,\n        up     : 2,\n        right  : 3\n    },\n    translateByDir = {\n        up : {\n            from : `translate(0,0)`,\n            to   : 'translate(0,-100%)'\n        },\n        down : {\n            from : `translate(0,0)`,\n            to   : 'translate(0,100%)'\n        },\n        left : {\n            from : `translate(0,0)`,\n            to   : 'translate(-100%,0)'\n        },\n        right : {\n            from : `translate(0,0)`,\n            to   : 'translate(100%,0)'\n        }\n    };\n\n/**\n * A panel collapse implementation that adds the ability to reveal the collapsed panel as a floating overlay.\n * @extends Core/widget/panel/PanelCollapser\n * @classtype overlay\n */\nexport default class PanelCollapserOverlay extends PanelCollapser.mixin(Delayable) {\n    static get $name() {\n        return 'PanelCollapserOverlay';\n    }\n\n    static get type() {\n        return 'overlay';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * The number of milliseconds to wait once the mouse leaves a {@link Core.widget.Panel#config-revealed}\n             * panel before returning to an unrevealed state. Clicking outside the revealed panel will immediately\n             * return the panel to its collapsed state.\n             *\n             * This may be disabled by configuring {@link #config-autoClose} as `null`.\n             *\n             * If this value is negative, the panel will not automatically recollapse due to the mouse leaving, however,\n             * clicks outside the panel will still recollapse it.\n             *\n             * If this value is `null`, the panel will not automatically recollapse for either outside clicks or if\n             * the mouse leaves the panel.\n             * @config {Number}\n             * @default\n             */\n            autoCloseDelay : 1000,\n\n            /**\n             * By default, clicking outside the revealed overlay hides the revealed overlay.\n             *\n             * If the revealed overlay was shown using the {@link #property-recollapseTool}\n             * then moving the mouse outside of the revealed overlay hides the revealed overlay.\n             *\n             * Configure this as `false` to disable auto hiding, making overlayed\n             * state permanent, and changeable using the {@link #function-toggleReveal} method.\n             * @config {Boolean}\n             * @default\n             */\n            autoClose : true,\n\n            revealing : {\n                value   : null,\n                $config : null,\n                default : false\n            },\n\n            /**\n             * The reveal/hide tool which slides the collapsed panel over the top of the UI.\n             * @member {Core.widget.Tool} recollapseTool\n             */\n            /**\n             * The reveal/hide tool which slides the collapsed panel over the top of the UI.\n             *\n             * The `type` of this instance should not be changed but the tool instance can be\n             * configured in other ways via this config property.\n             * @config {ToolConfig|Core.widget.Tool}\n             */\n            recollapseTool : {\n                type       : 'collapsetool',\n                cls        : 'b-recollapse',\n                collapsify : 'overlay',\n\n                handler() {\n                    // NOTE: As a tool, our this pointer is the Panel so we use it to access the current collapser\n                    this.collapsible?.toggleReveal();\n                }\n            }\n        };\n    }\n\n    static get delayable() {\n        return {\n            doAutoClose : 0\n        };\n    }\n\n    doAutoClose() {\n        this.toggleReveal(false);\n    }\n\n    updateAutoCloseDelay(delay) {\n        const { doAutoClose } = this;\n\n        if (!(doAutoClose.suspended = delay == null || delay < 0)) {\n            doAutoClose.delay = delay;\n            doAutoClose.immediate = !delay;\n        }\n    }\n\n    changeRecollapseTool(tool) {\n        const\n            me = this,\n            { panel } = me;\n\n        if (me.isConfiguring || me.isDestroying || !panel || panel.isDestroying) {\n            return tool;\n        }\n\n        panel.tools = {\n            recollapse : tool\n        };\n    }\n\n    beforeCollapse(operation) {\n        if (super.beforeCollapse(operation) === false) {\n            return false;\n        }\n\n        if (this.panel.revealed) {\n            operation.animation = null;\n        }\n    }\n\n    applyHeaderDock(collapsed, flush = true) {\n        this.panel?.recompose();\n\n        super.applyHeaderDock(collapsed, flush);\n    }\n\n    collapseBegin(operation) {\n        const\n            me = this,\n            { collapseDir, innerElement } = me,\n            { animation } = operation,\n            { collapseTool, panel } = me;\n\n        me.configuredWidth = panel._lastWidth;\n        me.configuredHeight = panel._lastHeight;\n\n        me.applyHeaderDock(true);\n\n        // const innerElementRect = me.lockInnerSize();\n        me.lockInnerSize();\n\n        collapseTool?.element.classList.add('b-collapsed');\n\n        if (animation) {\n            panel.element.classList.add('b-collapsing');\n\n            animation.element = innerElement;\n            animation.transform = translateByDir[collapseDir];\n            operation.animation = Animator.run(animation);\n        }\n    }\n\n    onComplete(action) {\n        super.onComplete(action);\n\n        const\n            me          = this,\n            { panel }   = me,\n            { element } = panel;\n\n        me.autoCloseLeaveDetacher = me.autoCloseLeaveDetacher?.();\n        me.autoCloseClickDetacher = me.autoCloseClickDetacher?.();\n\n        // The act of hiding the revealed panel (\"unrevealing\") causes a mouseleave event (once the panel slides out\n        // from under the cursor) and that starts the autoClose timer. If the user then reveals the panel again within\n        // the 1sec delay (by default), the autoClose timer will still fire and unreveal the panel.\n        me.doAutoClose.cancel();\n\n        if (action === 'reveal' && me.autoClose) {\n            // Only listen for mouseleave to close if we contain focus.\n            // If we do not, then we have been revealed using the API from some other\n            // part of the UI, so mouseleave closing would not be appropriate.\n            if (panel.containsFocus) {\n                me.autoCloseLeaveDetacher = EventHelper.on({\n                    element,\n\n                    mouseenter : ev => {\n                        me.doAutoClose.cancel();\n                    },\n\n                    mouseleave : ev => {\n                        me.doAutoClose();\n                    }\n                });\n            }\n\n            me.autoCloseClickDetacher = EventHelper.on({\n                element   : document.body,\n                thisObj   : panel,\n                mousedown : ev => {\n                    // If it's a click outside of the revealed Panel, but *not* on the element which\n                    // was active when the reveal was done (because that's the toggle button)\n                    // then unreveal.\n                    if (!panel.owns(ev) && !me.revealer?.contains(ev.target) && me.autoCloseDelay != null) {\n                        me.doAutoClose.now();\n                    }\n                }\n            });\n        }\n    }\n\n    expandBegin(operation) {\n        const\n            me = this,\n            { animation } = operation,\n            { collapseDir, collapseTool, innerElement, panel } = me,\n            { element } = panel;\n\n        element.classList.remove('b-collapsed', 'b-collapsing');\n        me.restoreConfiguredSize();\n        me.lockInnerSize(false);\n        me.lockInnerSize();\n\n        collapseTool?.element.classList.remove('b-collapsed');\n\n        if (animation) {\n            element.classList.add('b-collapsed', 'b-expanding');\n\n            animation.element = innerElement;\n            animation.transform = {\n                from : translateByDir[collapseDir].to,\n                to   : translateByDir[collapseDir].from\n            };\n\n            operation.animation = Animator.run(animation);\n        }\n    }\n\n    expandEnd(operation) {\n        super.expandEnd(operation);\n\n        const { panel } = this;\n\n        if (operation.completed) {\n            panel.revealed = false;\n        }\n\n        panel.element.classList.remove('b-expanding');\n    }\n\n    expandRevert(operation) {\n        super.expandRevert(operation);\n\n        this.panel.element.classList.add('b-expanding');\n    }\n\n    get innerElement() {\n        return this.panel.overlayElement;\n    }\n\n    get innerSizeElement() {\n        return this.panel.element;\n    }\n\n    get toolsConfig() {\n        const\n            me = this,\n            { direction } = me,\n            config = super.toolsConfig,\n            tool = me.recollapseTool;\n\n        if (tool) {\n            return {\n                ...config,\n\n                recollapse : tool && ObjectHelper.assign({\n                    direction : direction.toLowerCase()\n                }, tool)\n            };\n        }\n\n        return config;\n    }\n\n    lockInnerSize(lock = true) {\n        const\n            me = this,\n            { panel } = me,\n            panelRect = lock && panel.rectangle(),  // must read this before we call super\n            inset = lock ? [0, 0, 0, 0] : '',\n            // now we can call super:\n            innerRect = super.lockInnerSize(lock);\n\n        // The panel overlay is visible because we switch to \"overflow:visible\" in collapsed state. By doing this,\n        // however, the header animation undesirably escapes as well. Fortunately, we can use the clip-path to hide\n        // this by only allowing the desired side to escape while all other sides remain clipped. Even more fortunate\n        // for us is that clip-path is expressed as an inset from the normal rectangle of the element (so we don't\n        // need to adjust it if the collapsed panel is resized), and further, unlike CSS path style, clip-path works\n        // for all elements not only absolutely positioned ones.\n        if (lock) {\n            // <remove-on-release>\n            // TODO: see if there's a way to read the box-shadow style to pick up the right value (10 is the default)\n            // </remove-on-release>\n            inset[collapseExposeEdge[me.collapseDir]] = `-${panelRect[me.collapseDim] + 10}px`;\n        }\n\n        panel.element.style.clipPath = lock ? `inset(${inset.join(' ')})` : '';\n\n        return innerRect;\n    }\n\n    onOverlayTransitionDone(ev) {\n        const\n            me = this,\n            { panel } = me;\n\n        if (ev.srcElement === panel.overlayElement && me.revealing) {\n            me.revealing = false;\n\n            me.onComplete(panel.revealed ? 'reveal' : 'unreveal');\n        }\n    }\n\n    onRevealerClick() {\n        this.toggleReveal();\n    }\n\n    /**\n     * Toggles the revealed state of the Panel to match the passed boolean flag.\n     * @param {Boolean} [state]  If not specified, this method toggles current state. Otherwise, pass `true` to reveal\n     * the overlay, or `false` to hide it.\n     */\n    toggleReveal(state) {\n        const\n            { panel }   = this,\n            { element } = panel;\n\n        if (panel.collapsed) {\n            this.revealer = DomHelper.getActiveElement(element);\n\n            if (state == null) {\n                state = !panel.revealed;\n            }\n\n            if (panel.revealed !== state && panel.trigger('beforeToggleReveal', { reveal : state }) !== false) {\n                // This is essentially a hide, so move focus back to whence it came\n                if (!state && element.contains(this.revealer)) {\n                    panel.revertFocus(true);\n                }\n                this.revealing = true;\n                panel.revealed = state;\n            }\n        }\n    }\n\n    updateRevealing(value) {\n        const\n            me = this,\n            horzDirRe = /left|right/i,\n            { panel } = me,\n            dim = horzDirRe.test(me.collapseDir) ? 'height' : 'width';\n\n        if (panel) {\n            me.innerElement.style[dim] = '0px';\n            me.innerElement.style[`min-${dim}`] = '100%';\n\n            panel.element.classList[value ? 'add' : 'remove']('b-panel-overlay-revealing');\n        }\n    }\n\n    wrapCollapser(key, body) {\n        const\n            me = this,\n            { collapseDir, panel } = me,\n            { expandedHeaderDock, header, uiClassList } = panel,\n            recollapse = panel.tools?.recollapse,\n            [before, after] = me.splitHeaderItems({ as : 'element', dock : me.collapseDock }),\n            horz = dockIsHorz[expandedHeaderDock],\n            title = panel.hasHeader ? (panel.title || header?.title || '\\xA0') : null;\n\n        if (recollapse) {\n            recollapse.direction = collapseDir;\n        }\n\n        return [\n            'overlayElement',\n            {\n                class : {\n                    ...uiClassList,\n                    [`b-panel-overlay-header-${expandedHeaderDock}`] : 1,\n                    [`b-panel-overlay-${collapseDir}`]               : 1,\n                    [`b-${horz ? 'h' : 'v'}box`]                     : 1,\n                    'b-panel-overlay'                                : 1,\n                    'b-box-center'                                   : 1\n                },\n\n                // internalListeners is not correct for element listeners in domConfigs\n                listeners : {  // eslint-disable-line bryntum/no-listeners-in-lib\n                    transitionend : ev => me.onOverlayTransitionDone(ev)\n                },\n\n                children : {\n                    overlayHeaderElement : title && {\n                        tag   : 'header',\n                        class : new DomClassList({\n                            ...uiClassList,\n                            [`b-dock-${expandedHeaderDock}`] : 1,\n                            'b-panel-header'                 : 1,\n                            'b-panel-overlay-header'         : 1\n                        }, header?.cls),\n\n                        children : [\n                            ...before,\n                            {\n                                reference : 'overlayTitleElement',\n                                html      : title,\n                                class     : {\n                                    ...uiClassList,\n                                    [`b-align-${header?.titleAlign || 'start'}`] : 1,\n                                    'b-header-title'                             : 1\n                                }\n                            },\n                            ...after\n                        ]\n                    },\n\n                    [key] : body\n                }\n            }\n        ];\n    }\n}\n\n// Register this widget type with its Factory\nPanelCollapserOverlay.initClass();\n","import Base from '../../Base.js';\n\n/**\n * @module Core/widget/mixin/Minifiable\n */\n\n/**\n * Mixin for widgets that can present in a full and minified form. This behavior is used in\n * {@link Core.widget.Toolbar#config-overflow} handling.\n *\n * @mixin\n * @internal\n */\nexport default Target => class Minifiable extends (Target || Base) {\n    static $name = 'Minifiable';\n\n    static configurable = {\n        /**\n         * Set to `false` to prevent this widget from assuming its {@link #config-minified} form automatically (for\n         * example, due to {@link Core.widget.Toolbar#config-overflow} handling.\n         *\n         * When this value is `true` (the default), the minifiable widget's {@link #config-minified} config may be\n         * set to `true` to reduce toolbar overflow.\n         *\n         * @config {Boolean}\n         * @default\n         */\n        minifiable : true,\n\n        /**\n         * Set to `true` to present this widget in its minimal form.\n         * @config {Boolean}\n         * @default false\n         */\n        minified : null\n    };\n\n    compose() {\n        const { minified } = this;\n\n        return {\n            class : {\n                'b-minified' : minified\n            }\n        };\n    }\n\n    get widgetClass() {}\n};\n"],"names":["EDGES","e","t","r","b","l","EDGE_CLASSES","ZONES","tr","bl","tl","br","Target","Hoverable","mixin","Delayable","$name","configurable","hoverCls","hoverAnimationCls","hoverRootCls","hoverRootActiveCls","hoverDelay","hoverElement","hoverIgnoreElement","hoverEdges","hoverEdgeSize","hoverRootElement","$config","value","hoverSelector","hoverTarget","hoverTrack","hoverZone","delayable","setHoverTarget","hoverEnter","leaving","hoverIgnore","element","_this$hoverIgnoreElem","contains","hoverLeave","hoverMove","event","onHoverMouseMove","me","top","left","width","height","right","bottom","getBoundingClientRect","clientX","clientY","centerX","centerY","tb","rl","includes","hoverEvent","onHoverMouseOver","target","onHoverMouseOut","relatedTarget","updateHoverDelay","delay","changeHoverEdges","edges","replace","updateHoverEdges","syncHoverListeners","changeHoverElement","updateHoverElement","hoverEl","_hoverEl","closest","updateHoverRootElement","rootEl","was","classList","remove","add","changeHoverTarget","updateHoverTarget","updateHoverTrack","updateHoverZone","zone","className","cls","DomClassList","change","_me$_hoverRootDetache","listeners","thisObj","mouseover","mouseout","mousemove","_hoverRootDetacher","call","EventHelper","on","DragTipProxy","DragProxy","type","align","offset","tooltip","open","getConfig","close","_this$tooltip","hide","dragMove","drag","isVisible","show","alignTo","Rectangle","changeTooltip","config","existing","Widget","reconfigure","initClass","_$name","dockIsHorz","PanelCollapser","maps","collapseExposeEdge","down","up","translateByDir","from","to","PanelCollapserOverlay","autoCloseDelay","autoClose","revealing","default","recollapseTool","collapsify","handler","_this$collapsible","collapsible","toggleReveal","doAutoClose","updateAutoCloseDelay","suspended","immediate","changeRecollapseTool","tool","panel","isConfiguring","isDestroying","tools","recollapse","beforeCollapse","operation","revealed","animation","applyHeaderDock","collapsed","flush","_this$panel","recompose","collapseBegin","collapseDir","innerElement","collapseTool","configuredWidth","_lastWidth","configuredHeight","_lastHeight","lockInnerSize","transform","Animator","run","onComplete","action","_me$autoCloseLeaveDet","_me$autoCloseClickDet","autoCloseLeaveDetacher","autoCloseClickDetacher","cancel","containsFocus","mouseenter","ev","mouseleave","document","body","mousedown","_me$revealer","owns","revealer","now","expandBegin","restoreConfiguredSize","expandEnd","completed","expandRevert","overlayElement","innerSizeElement","toolsConfig","direction","ObjectHelper","assign","toLowerCase","lock","panelRect","rectangle","inset","innerRect","collapseDim","style","clipPath","join","onOverlayTransitionDone","srcElement","onRevealerClick","state","DomHelper","getActiveElement","trigger","reveal","revertFocus","updateRevealing","horzDirRe","dim","test","wrapCollapser","key","_panel$tools","expandedHeaderDock","header","uiClassList","before","after","splitHeaderItems","as","dock","collapseDock","horz","title","hasHeader","class","transitionend","children","overlayHeaderElement","tag","reference","html","titleAlign","Minifiable","Base","minifiable","minified","compose","widgetClass"],"mappings":";;;AAGA;AACA;AACA;AACA,MACIA,KAAK,GAAG;AACJC,IAAAA,CAAC,EAAG,cAAc;AAClBC,IAAAA,CAAC,EAAG,aAAa;AACjBC,IAAAA,CAAC,EAAG,eAAe;AACnBC,IAAAA,CAAC,EAAG,gBAAgB;AACpBC,IAAAA,CAAC,EAAG,cAAA;GACP;AACDC,EAAAA,YAAY,GAAG;AACX,IAAA,CAACN,KAAK,CAACC,CAAC,GAAI,CAAC;AACb,IAAA,CAACD,KAAK,CAACE,CAAC,GAAI,CAAC;AACb,IAAA,CAACF,KAAK,CAACG,CAAC,GAAI,CAAC;AACb,IAAA,CAACH,KAAK,CAACI,CAAC,GAAI,CAAC;IACb,CAACJ,KAAK,CAACK,CAAC,GAAI,CAAA;GACf;AACDE,EAAAA,KAAK,GAAG;IACJL,CAAC,EAAI,CAACF,KAAK,CAACC,CAAC,EAAED,KAAK,CAACE,CAAC,CAAC;IACvBC,CAAC,EAAI,CAACH,KAAK,CAACC,CAAC,EAAED,KAAK,CAACG,CAAC,CAAC;IACvBC,CAAC,EAAI,CAACJ,KAAK,CAACC,CAAC,EAAED,KAAK,CAACI,CAAC,CAAC;IACvBC,CAAC,EAAI,CAACL,KAAK,CAACC,CAAC,EAAED,KAAK,CAACK,CAAC,CAAC;AACvBG,IAAAA,EAAE,EAAG,CAACR,KAAK,CAACC,CAAC,EAAED,KAAK,CAACE,CAAC,EAAEF,KAAK,CAACG,CAAC,CAAC;AAChCM,IAAAA,EAAE,EAAG,CAACT,KAAK,CAACC,CAAC,EAAED,KAAK,CAACI,CAAC,EAAEJ,KAAK,CAACK,CAAC,CAAC;AAChCK,IAAAA,EAAE,EAAG,CAACV,KAAK,CAACC,CAAC,EAAED,KAAK,CAACE,CAAC,EAAEF,KAAK,CAACK,CAAC,CAAC;AAChCM,IAAAA,EAAE,EAAG,CAACX,KAAK,CAACC,CAAC,EAAED,KAAK,CAACI,CAAC,EAAEJ,KAAK,CAACG,CAAC,CAAA;GAClC,CAAA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAeS,CAAAA,MAAM,IAAI,MAAMC,SAAS,SAASD,MAAM,CAACE,KAAK,CAACC,SAAS,CAAC,CAAC;EACrE,WAAWC,KAAKA,GAAG;AACf,IAAA,OAAO,WAAW,CAAA;AACtB,GAAA;AACA;EACA,WAAWC,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACYC,MAAAA,QAAQ,EAAG,IAAI;AACf;AACZ;AACA;AACA;AACA;AACYC,MAAAA,iBAAiB,EAAG,IAAI;AACxB;AACZ;AACA;AACA;AACYC,MAAAA,YAAY,EAAG,IAAI;AACnB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,kBAAkB,EAAG,IAAI;AACzB;AACZ;AACA;AACA;AACYC,MAAAA,UAAU,EAAG,IAAI;AACjB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,YAAY,EAAG,IAAI;AACnB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,kBAAkB,EAAG,IAAI;AACzB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,UAAU,EAAG,IAAI;AACjB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,aAAa,EAAG,EAAE;AAClB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,gBAAgB,EAAG;AACfC,QAAAA,OAAO,EAAG,SAAS;AACnBC,QAAAA,KAAK,EAAG,IAAA;OACX;AACD;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,aAAa,EAAG,IAAI;AACpB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,WAAW,EAAG;AACVH,QAAAA,OAAO,EAAG,SAAS;AACnBC,QAAAA,KAAK,EAAG,IAAA;OACX;AACD;AACZ;AACA;AACA;AACA;AACA;AACYG,MAAAA,UAAU,EAAG,IAAI;AACjB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,SAAS,EAAG,IAAA;KACf,CAAA;AACL,GAAA;EACA,WAAWC,SAASA,GAAG;IACnB,OAAO;AACHC,MA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"}