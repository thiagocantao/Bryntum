{"version":3,"file":"ScheduleMenu.js","sources":["../../../../Scheduler/lib/Scheduler/preset/ViewPreset.js","../../../../Scheduler/lib/Scheduler/localization/En.js","../../../../Scheduler/lib/Scheduler/preset/PresetStore.js","../../../../Scheduler/lib/Scheduler/preset/PresetManager.js","../../../../Scheduler/lib/Scheduler/data/TimeAxis.js","../../../../Scheduler/lib/Scheduler/view/model/TimeAxisViewModel.js","../../../../Scheduler/lib/Scheduler/view/mixin/TimelineDateMapper.js","../../../../Scheduler/lib/Scheduler/view/mixin/TimelineDomEvents.js","../../../../Scheduler/lib/Scheduler/view/mixin/TimelineViewPresets.js","../../../../Scheduler/lib/Scheduler/view/mixin/TimelineZoomable.js","../../../../Scheduler/lib/Scheduler/view/recurrence/RecurrenceConfirmationPopup.js","../../../../Scheduler/lib/Scheduler/view/mixin/RecurringEvents.js","../../../../Scheduler/lib/Scheduler/view/mixin/TimelineEventRendering.js","../../../../Scheduler/lib/Scheduler/view/mixin/TimelineScroll.js","../../../../Scheduler/lib/Scheduler/view/mixin/TimelineState.js","../../../../Scheduler/lib/Scheduler/view/Header.js","../../../../Scheduler/lib/Scheduler/view/TimeAxisSubGrid.js","../../../../Scheduler/lib/Scheduler/view/TimelineBase.js","../../../../Scheduler/lib/Scheduler/crud/AbstractCrudManager.js","../../../../Scheduler/lib/Scheduler/data/CrudManager.js","../../../../Scheduler/lib/Scheduler/view/mixin/CurrentConfig.js","../../../../Scheduler/lib/Scheduler/view/mixin/Describable.js","../../../../Scheduler/lib/Scheduler/view/mixin/SchedulerDom.js","../../../../Scheduler/lib/Scheduler/view/mixin/SchedulerDomEvents.js","../../../../Scheduler/lib/Scheduler/eventlayout/HorizontalLayout.js","../../../../Scheduler/lib/Scheduler/eventlayout/HorizontalLayoutStack.js","../../../../Scheduler/lib/Scheduler/eventlayout/PackMixin.js","../../../../Scheduler/lib/Scheduler/eventlayout/HorizontalLayoutPack.js","../../../../Scheduler/lib/Scheduler/view/mixin/SchedulerResourceRendering.js","../../../../Scheduler/lib/Scheduler/view/mixin/SchedulerEventRendering.js","../../../../Scheduler/lib/Scheduler/data/mixin/ProjectConsumer.js","../../../../Scheduler/lib/Scheduler/view/mixin/SchedulerStores.js","../../../../Scheduler/lib/Scheduler/view/mixin/SchedulerScroll.js","../../../../Scheduler/lib/Scheduler/view/mixin/SchedulerRegions.js","../../../../Scheduler/lib/Scheduler/view/mixin/SchedulerState.js","../../../../Scheduler/lib/Scheduler/view/mixin/EventSelection.js","../../../../Scheduler/lib/Scheduler/view/mixin/EventNavigation.js","../../../../Scheduler/lib/Scheduler/view/mixin/TransactionalFeatureMixin.js","../../../../Scheduler/lib/Scheduler/data/mixin/AttachToProjectMixin.js","../../../../Scheduler/lib/Scheduler/view/orientation/HorizontalRendering.js","../../../../Scheduler/lib/Scheduler/eventlayout/VerticalLayout.js","../../../../Scheduler/lib/Scheduler/view/orientation/VerticalRendering.js","../../../../Scheduler/lib/Scheduler/view/TimeAxisBase.js","../../../../Scheduler/lib/Scheduler/view/HorizontalTimeAxis.js","../../../../Scheduler/lib/Scheduler/view/ResourceHeader.js","../../../../Scheduler/lib/Scheduler/column/TimeAxisColumn.js","../../../../Scheduler/lib/Scheduler/view/VerticalTimeAxis.js","../../../../Scheduler/lib/Scheduler/column/VerticalTimeAxisColumn.js","../../../../Scheduler/lib/Scheduler/view/SchedulerBase.js","../../../../Scheduler/lib/Scheduler/widget/EventColorPicker.js","../../../../Scheduler/lib/Scheduler/tooltip/ClockTemplate.js","../../../../Scheduler/lib/Scheduler/feature/mixin/TaskEditStm.js","../../../../Scheduler/lib/Scheduler/feature/base/TimeSpanMenuBase.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceFrequencyCombo.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceDaysCombo.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceDaysButtonGroup.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceMonthDaysButtonGroup.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceMonthsButtonGroup.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceStopConditionCombo.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrencePositionsCombo.js","../../../../Scheduler/lib/Scheduler/view/recurrence/RecurrenceEditorPanel.js","../../../../Scheduler/lib/Scheduler/widget/EventColorField.js","../../../../Scheduler/lib/Scheduler/feature/EventMenu.js","../../../../Scheduler/lib/Scheduler/feature/ScheduleMenu.js"],"sourcesContent":["import Model from '../../Core/data/Model.js';\nimport IdHelper from '../../Core/helper/IdHelper.js';\nimport DH from '../../Core/helper/DateHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\n\n/**\n * @module Scheduler/preset/ViewPreset\n */\n\n/**\n * An object containing a unit identifier and an increment variable, used to define the `timeResolution` of a\n * `ViewPreset`.\n * @typedef {Object} ViewPresetTimeResolution\n * @property {String} unit The unit of the resolution, e.g. 'minute'\n * @property {Number} increment The increment of the resolution, e.g. 15\n */\n\n/**\n * Defines a header level for a ViewPreset.\n *\n * A sample header configuration can look like below\n * ```javascript\n * headers    : {\n *     {\n *         unit        : \"month\",\n *         renderer : function(start, end, headerConfig, index) {\n *             var month = start.getMonth();\n *             // Simple alternating month in bold\n *             if (start.getMonth() % 2) {\n *                 return '<strong>' + month + '</strong>';\n *             }\n *             return month;\n *         },\n *         align       : 'start' // `start` or `end`, omit to center content (default)\n *     },\n *     {\n *         unit        : \"week\",\n *         increment   : 1,\n *         renderer    : function(start, end, headerConfig, index) {\n *             return 'foo';\n *         }\n *     },\n * }\n * ```\n *\n * @typedef {Object} ViewPresetHeaderRow\n * @property {'start'|'center'|'end'} align The text alignment for the cell. Valid values are `start` or `end`, omit\n * this to center text content (default). Can also be added programmatically in `the renderer`.\n * @property {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} unit The unit of time\n * represented by each cell in this header row. See also increment property. Valid values are \"millisecond\", \"second\",\n * \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\".\n * @property {String} headerCellCls A CSS class to add to the cells in the time axis header row. Can also be added\n * programmatically in the `renderer`.\n * @property {Number} increment The number of units each header cell will represent (e.g. 30 together with unit:\n * \"minute\" for 30 minute cells)\n * @property {String} dateFormat Defines how the cell date will be formatted\n * @property {Function} renderer A custom renderer function used to render the cell content. It should return text/HTML\n * to put in the header cell.\n *\n * ```javascript\n * function (startDate, endDate, headerConfig, i) {\n *   // applies special CSS class to align header left\n *   headerConfig.align = \"start\";\n *   // will be added as a CSS class of the header cell DOM element\n *   headerConfig.headerCellCls = \"myClass\";\n *\n *   return DateHelper.format(startDate, 'YYYY-MM-DD');\n * }\n * ```\n *\n * The render function is called with the following parameters:\n *\n * @property {Date} renderer.startDate The start date of the cell.\n * @property {Date} renderer.endDate The end date of the cell.\n * @property {Object} renderer.headerConfig An object containing the header config.\n * @property {'start'|'center'|'end'} [renderer.headerConfig.align] The text alignment for the cell. See `align` above.\n * @property {String} [renderer.headerConfig.headerCellCls] A CSS class to add to the cells in the time axis header row.\n * See `headerCellCls` above.\n * @property {Number} renderer.index The index of the cell in the row.\n * @property {Object} thisObj `this` reference for the renderer function\n * @property {Function} cellGenerator A function that should return an array of objects containing 'start', 'end' and\n * 'header' properties. Use this if you want full control over how the header rows are generated.\n *\n * **Note:** `cellGenerator` cannot be used for the bottom level of your headers.\n *\n * Example :\n * ```javascript\n * viewPreset : {\n *     displayDateFormat : 'H:mm',\n *     shiftIncrement    : 1,\n *     shiftUnit         : 'WEEK',\n *     timeResolution    : {\n *         unit      : 'MINUTE',\n *         increment : 10\n *     },\n *     headers           : [\n *         {\n *             unit          : 'year',\n *             // Simplified scenario, assuming view will always just show one US fiscal year\n *             cellGenerator : (viewStart, viewEnd) => [{\n *                 start  : viewStart,\n *                 end    : viewEnd,\n *                 header : `Fiscal Year ${viewStart.getFullYear() + 1}`\n *             }]\n *         },\n *         {\n *             unit : 'quarter',\n *             renderer(start, end, cfg) {\n *                 const\n *                     quarter       = Math.floor(start.getMonth() / 3) + 1,\n *                     fiscalQuarter = quarter === 4 ? 1 : (quarter + 1);\n *\n *                 return `FQ${fiscalQuarter} ${start.getFullYear() + (fiscalQuarter === 1 ? 1 : 0)}`;\n *             }\n *         },\n *         {\n *             unit       : 'month',\n *             dateFormat : 'MMM Y'\n *         }\n *     ]\n *  },\n * ```\n */\n\n/**\n * A ViewPreset is a record of {@link Scheduler.preset.PresetStore PresetStore} which describes the granularity\n * of the timeline view of a {@link Scheduler.view.Scheduler Scheduler} and the layout and subdivisions of the timeline header.\n *\n * You can create a new instance by specifying all fields:\n *\n * ```javascript\n * const myViewPreset = new ViewPreset({\n *     id   : 'myPreset',              // Unique id value provided to recognize your view preset. Not required, but having it you can simply set new view preset by id: scheduler.viewPreset = 'myPreset'\n *\n *     name : 'My view preset',        // A human-readable name provided to be used in GUI, e.i. preset picker, etc.\n *\n *     tickWidth  : 24,                // Time column width in horizontal mode\n *     tickHeight : 50,                // Time column height in vertical mode\n *     displayDateFormat : 'HH:mm',    // Controls how dates will be displayed in tooltips etc\n *\n *     shiftIncrement : 1,             // Controls how much time to skip when calling shiftNext and shiftPrevious.\n *     shiftUnit      : 'day',         // Valid values are 'millisecond', 'second', 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year'.\n *     defaultSpan    : 12,            // By default, if no end date is supplied to a view it will show 12 hours\n *\n *     timeResolution : {              // Dates will be snapped to this resolution\n *         unit      : 'minute',       // Valid values are 'millisecond', 'second', 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year'.\n *         increment : 15\n *     },\n *\n *     headers : [                     // This defines your header rows from top to bottom\n *         {                           // For each row you can define 'unit', 'increment', 'dateFormat', 'renderer', 'align', and 'thisObj'\n *             unit       : 'day',\n *             dateFormat : 'ddd DD/MM'\n *         },\n *         {\n *             unit       : 'hour',\n *             dateFormat : 'HH:mm'\n *         }\n *     ],\n *\n *     columnLinesFor : 1              // Defines header level column lines will be drawn for. Defaults to the last level.\n * });\n * ```\n *\n * Or you can extend one of view presets registered in {@link Scheduler.preset.PresetManager PresetManager}:\n *\n * ```javascript\n * const myViewPreset2 = new ViewPreset({\n *     id   : 'myPreset',                  // Unique id value provided to recognize your view preset. Not required, but having it you can simply set new view preset by id: scheduler.viewPreset = 'myPreset'\n *     name : 'My view preset',            // A human-readable name provided to be used in GUI, e.i. preset picker, etc.\n *     base : 'hourAndDay',                // Extends 'hourAndDay' view preset provided by PresetManager. You can pick out any of PresetManager's view presets: PresetManager.records\n *\n *     timeResolution : {                  // Override time resolution\n *         unit      : 'minute',\n *         increment : 15                  // Make it increment every 15 mins\n *     },\n *\n *     headers : [                         // Override headers\n *         {\n *             unit       : 'day',\n *             dateFormat : 'DD.MM.YYYY'   // Use different date format for top header 01.10.2020\n *         },\n *         {\n *             unit       : 'hour',\n *             dateFormat : 'LT'\n *         }\n *     ]\n * });\n * ```\n *\n * See {@link Scheduler.preset.PresetManager PresetManager} for the list of base presets. You may add your own\n * presets to this global list:\n *\n * ```javascript\n * PresetManager.add(myViewPreset);     // Adds new preset to the global scope. All newly created scheduler instances will have it too.\n *\n * const scheduler = new Scheduler({\n *     viewPreset : 'myPreset'\n *     // other configs...\n * });\n * ```\n *\n * Or add them on an individual basis to Scheduler instances:\n *\n * ```javascript\n * const scheduler = new Scheduler({...});\n *\n * scheduler.presets.add(myViewPreset); // Adds new preset to the scheduler instance only. All newly created scheduler instances will **not** have it.\n *\n * scheduler.viewPreset = 'myPreset';\n * ```\n *\n * ## Defining custom header rows\n *\n * You can have any number of header rows by specifying {@link #field-headers}, see {@link #typedef-ViewPresetHeaderRow}\n * for the config object format and {@link Core.helper.DateHelper} for the supported date formats, or use to render\n * custom contents into the row cells.\n *\n * ```javascript\n *  headers : [\n *      {\n *          unit       : 'month',\n *          dateFormat : 'MM.YYYY'\n *      },\n *      {\n *          unit       : 'week',\n *          renderer   : ({ startDate }) => `Week ${DateHelper.format(startDate, 'WW')}`\n *      }\n *  ]\n * ```\n *\n * {@inlineexample Scheduler/preset/CustomHeader.js}\n *\n * This live demo shows a custom ViewPreset with AM/PM time format:\n * @inlineexample Scheduler/preset/amPmPreset.js\n * @extends Core/data/Model\n */\nexport default class ViewPreset extends Model {\n\n    static $name = 'ViewPreset';\n\n    static get fields() {\n        return [\n            /**\n             * The name of an existing view preset to extend\n             * @field {String} base\n             */\n            { name : 'base', type : 'string' },\n\n            /**\n             * The name of the view preset\n             * @field {String} name\n             */\n            { name : 'name', type : 'string' },\n\n            /**\n             * The height of the row in horizontal orientation\n             * @field {Number} rowHeight\n             * @default\n             */\n            {\n                name         : 'rowHeight',\n                defaultValue : 24\n            },\n\n            /**\n             * The width of the time tick column in horizontal orientation\n             * @field {Number} tickWidth\n             * @default\n             */\n            {\n                name         : 'tickWidth',\n                defaultValue : 50\n            },\n\n            /**\n             * The height of the time tick column in vertical orientation\n             * @field {Number} tickHeight\n             * @default\n             */\n            {\n                name         : 'tickHeight',\n                defaultValue : 50\n            },\n\n            /**\n             * Defines how dates will be formatted in tooltips etc\n             * @field {String} displayDateFormat\n             * @default\n             */\n            {\n                name         : 'displayDateFormat',\n                defaultValue : 'HH:mm'\n            },\n\n            /**\n             * The unit to shift when calling shiftNext/shiftPrevious to navigate in the chart.\n             * Valid values are \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\".\n             * @field {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} shiftUnit\n             * @default\n             */\n            {\n                name         : 'shiftUnit',\n                defaultValue : 'hour'\n            },\n\n            /**\n             * The amount to shift (in shiftUnits)\n             * @field {Number} shiftIncrement\n             * @default\n             */\n            {\n                name         : 'shiftIncrement',\n                defaultValue : 1\n            },\n\n            /**\n             * The amount of time to show by default in a view (in the unit defined by {@link #field-mainUnit})\n             * @field {Number} defaultSpan\n             * @default\n             */\n            {\n                name         : 'defaultSpan',\n                defaultValue : 12\n            },\n\n            /**\n             * Initially set to a unit. Defaults to the unit defined by the middle header.\n             * @field {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} mainUnit\n             */\n            {\n                name : 'mainUnit'\n            },\n\n            /**\n             * Note: Currently, this field only applies when changing viewPreset with the {@link Scheduler.widget.ViewPresetCombo}.\n             *\n             * Set to a number and that amount of {@link #field-mainUnit} will be added to the startDate. For example: A\n             * start value of `5` together with the mainUnit `hours` will add 5 hours to the startDate. This can achieve\n             * a \"day view\" that starts 5 AM.\n             *\n             * Set to a string unit (for example week, day, month) and the startDate will be the start of that unit\n             * calculated from current startDate. A start value of `week` will result in a startDate in the first day of\n             * the week.\n             *\n             * If set to a number or not set at all, the startDate will be calculated at the beginning of current\n             * mainUnit.\n             * @field {Number|String} start\n             */\n            {\n                name : 'start'\n            },\n\n            /**\n             * An object containing a unit identifier and an increment variable. This value means minimal task duration\n             * you can create using UI. For example when you drag create a task or drag & drop a task, if increment is 5\n             * and unit is 'minute' that means that you can create a 5-minute-long task, or move it 5 min\n             * forward/backward. This config maps to scheduler's\n             * {@link Scheduler.view.mixin.TimelineDateMapper#property-timeResolution} config.\n             *\n             * ```javascript\n             * timeResolution : {\n             *   unit      : 'minute',  //Valid values are \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\".\n             *   increment : 5\n             * }\n             * ```\n             *\n             * @field {ViewPresetTimeResolution} timeResolution\n             */\n            'timeResolution',\n\n            /**\n             * An array containing one or more {@link #typedef-ViewPresetHeaderRow} config objects, each of\n             * which defines a level of headers for the scheduler.\n             * The `main` unit will be the last header's unit, but this can be changed using the\n             * {@link #field-mainHeaderLevel} field.\n             * @field {ViewPresetHeaderRow[]} headers\n             */\n            'headers',\n\n            /**\n             * Index of the {@link #field-headers} array to define which header level is the `main` header.\n             * Defaults to the bottom header.\n             * @field {Number} mainHeaderLevel\n             */\n            'mainHeaderLevel',\n\n            /**\n             * Index of a header level in the {@link #field-headers} array for which column lines are drawn. See\n             * {@link Scheduler.feature.ColumnLines}.\n             * Defaults to the bottom header.\n             * @field {Number} columnLinesFor\n             */\n            'columnLinesFor'\n        ];\n    }\n\n    construct() {\n        super.construct(...arguments);\n        this.normalizeUnits();\n    }\n\n    generateId(owner) {\n        const\n            me    = this,\n            {\n                headers\n            }     = me,\n            parts = [];\n\n        // If we were subclassed from a base, use that id as the basis of our.\n        let result = Object.getPrototypeOf(me.data).id;\n\n        if (!result) {\n            for (let { length } = headers, i = length - 1; i >= 0; i--) {\n                const\n                    { unit, increment } = headers[i],\n                    multiple            = increment > 1;\n\n                parts.push(`${multiple ? increment : ''}${i ? unit : StringHelper.capitalize(unit)}${multiple ? 's' : ''}`);\n            }\n\n            // Use upwards header units so eg \"monthAndYear\"\n            result = parts.join('And');\n        }\n\n        // If duplicate, decorate the generated by adding details.\n        // For example make it \"hourAndDay-50by80\"\n        // Only interrogate the store if it is loaded. If consulted during\n        // a load, the idMap will be created empty\n        if (owner.count && owner.includes(result)) {\n            result += `-${me.tickWidth}by${me.tickHeight || me.tickWidth}`;\n            // If still duplicate use increment\n            if (owner.includes(result)) {\n                result += `-${me.bottomHeader.increment}`;\n                // And if STILL duplicate, make it unique with a suffix\n                if (owner.includes(result)) {\n                    result = IdHelper.generateId(`${result}-`);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    normalizeUnits() {\n        const\n            me                                     = this,\n            { timeResolution, headers, shiftUnit } = me;\n\n        if (headers) {\n            // Make sure date \"unit\" constant specified in the preset are resolved\n            for (let i = 0, { length } = headers; i < length; i++) {\n                const header = headers[i];\n\n                header.unit = DH.normalizeUnit(header.unit);\n                if (header.splitUnit) {\n                    header.splitUnit = DH.normalizeUnit(header.splitUnit);\n                }\n                if (!('increment' in header)) {\n                    headers[i] = Object.assign({\n                        increment : 1\n                    }, header);\n                }\n            }\n        }\n\n        if (timeResolution) {\n            timeResolution.unit = DH.normalizeUnit(timeResolution.unit);\n        }\n\n        if (shiftUnit) {\n            me.shiftUnit = DH.normalizeUnit(shiftUnit);\n        }\n    }\n\n    // Process legacy columnLines config into a headers array.\n    static normalizeHeaderConfig(data) {\n        const\n            { headerConfig, columnLinesFor, mainHeaderLevel } = data,\n            headers                                           = data.headers = [];\n\n        if (headerConfig.top) {\n            if (columnLinesFor === 'top') {\n                data.columnLinesFor = 0;\n            }\n            if (mainHeaderLevel === 'top') {\n                data.mainHeaderLevel = 0;\n            }\n            headers[0] = headerConfig.top;\n        }\n        if (headerConfig.middle) {\n            if (columnLinesFor === 'middle') {\n                data.columnLinesFor = headers.length;\n            }\n            if (mainHeaderLevel === 'middle') {\n                data.mainHeaderLevel = headers.length;\n            }\n            headers.push(headerConfig.middle);\n        }\n        else {\n            throw new Error('ViewPreset.headerConfig must be configured with a middle');\n        }\n        if (headerConfig.bottom) {\n            // Main level is middle when using headerConfig object.\n            data.mainHeaderLevel = headers.length - 1;\n\n            // There *must* be a middle above this bottom header\n            // so that is the columnLines one by default.\n            if (columnLinesFor == null) {\n                data.columnLinesFor = headers.length - 1;\n            }\n            else if (columnLinesFor === 'bottom') {\n                data.columnLinesFor = headers.length;\n            }\n\n            // There *must* be a middle above this bottom header\n            // so that is the main one by default.\n            if (mainHeaderLevel == null) {\n                data.mainHeaderLevel = headers.length - 1;\n            }\n            if (mainHeaderLevel === 'bottom') {\n                data.mainHeaderLevel = headers.length;\n            }\n\n            headers.push(headerConfig.bottom);\n        }\n    }\n\n    // These are read-only once configured.\n    set() {}\n\n    inSet() {}\n\n    get columnLinesFor() {\n        return ('columnLinesFor' in this.data) ? this.data.columnLinesFor : this.headers.length - 1;\n    }\n\n    get tickSize() {\n        return this._tickSize || this.tickWidth;\n    }\n\n    get tickWidth() {\n        return ('tickWidth' in this.data) ? this.data.tickWidth : 50;\n    }\n\n    get tickHeight() {\n        return ('tickHeight' in this.data) ? this.data.tickHeight : 50;\n    }\n\n    get headerConfig() {\n        // Configured in the legacy manner, just return the configured value.\n        if (this.data.headerConfig) {\n            return this.data.headerConfig;\n        }\n\n        // Rebuild the object based upon the configured headers array.\n        const\n            result      = {},\n            { headers } = this,\n            { length }  = headers;\n\n        switch (length) {\n            case 1 :\n                result.middle = headers[0];\n                break;\n            case 2:\n                if (this.mainHeaderLevel === 0) {\n                    result.middle = headers[0];\n                    result.bottom = headers[1];\n                }\n                else {\n                    result.top    = headers[0];\n                    result.middle = headers[1];\n                }\n                break;\n            case 3:\n                result.top    = headers[0];\n                result.middle = headers[1];\n                result.bottom = headers[2];\n                break;\n            default:\n                throw new Error('headerConfig object not supported for >3 header levels');\n        }\n\n        return result;\n    }\n\n    set mainHeaderLevel(mainHeaderLevel) {\n        this.data.mainHeaderLevel = mainHeaderLevel;\n    }\n\n    get mainHeaderLevel() {\n        if ('mainHeaderLevel' in this.data) {\n            return this.data.mainHeaderLevel;\n        }\n\n        // 3 headers, then it's the middle\n        if (this.data.headers.length === 3) {\n            return 1;\n        }\n\n        // Assume it goes top, middle.\n        // If it's middle, top, use mainHeaderLevel : 0\n        return this.headers.length - 1;\n    }\n\n    get mainHeader() {\n        return this.headers[this.mainHeaderLevel];\n    }\n\n    get topHeader() {\n        return this.headers[0];\n    }\n\n    get topUnit() {\n        return this.topHeader.unit;\n    }\n\n    get topIncrement() {\n        return this.topHeader.increment;\n    }\n\n    get bottomHeader() {\n        return this.headers[this.headers.length - 1];\n    }\n\n    get leafUnit() {\n        return this.bottomHeader.unit;\n    }\n\n    get leafIncrement() {\n        return this.bottomHeader.increment;\n    }\n\n    get mainUnit() {\n        if ('mainUnit' in this.data) {\n            return this.data.mainUnit;\n        }\n        return this.mainHeader.unit;\n    }\n\n    get msPerPixel() {\n        const { bottomHeader } = this;\n\n        return Math.round(DH.asMilliseconds(bottomHeader.increment || 1, bottomHeader.unit) / this.tickWidth);\n    }\n\n    get isValid() {\n        const me = this;\n\n        let valid = true;\n\n        // Make sure all date \"unit\" constants are valid\n        for (const header of me.headers) {\n            valid = valid && Boolean(DH.normalizeUnit(header.unit));\n        }\n\n        if (me.timeResolution) {\n            valid = valid && DH.normalizeUnit(me.timeResolution.unit);\n        }\n\n        if (me.shiftUnit) {\n            valid = valid && DH.normalizeUnit(me.shiftUnit);\n        }\n\n        return valid;\n    }\n}\n","import LocaleHelper from '../../Core/localization/LocaleHelper.js';\nimport '../../Grid/localization/En.js';\n\nconst locale = {\n\n    localeName : 'En',\n    localeDesc : 'English (US)',\n    localeCode : 'en-US',\n\n    Object : {\n        newEvent : 'New event'\n    },\n\n    ResourceInfoColumn : {\n        eventCountText : data => data + ' event' + (data !== 1 ? 's' : '')\n    },\n\n    Dependencies : {\n        from    : 'From',\n        to      : 'To',\n        valid   : 'Valid',\n        invalid : 'Invalid'\n    },\n\n    DependencyType : {\n        SS           : 'SS',\n        SF           : 'SF',\n        FS           : 'FS',\n        FF           : 'FF',\n        StartToStart : 'Start-to-Start',\n        StartToEnd   : 'Start-to-Finish',\n        EndToStart   : 'Finish-to-Start',\n        EndToEnd     : 'Finish-to-Finish',\n        short        : [\n            'SS',\n            'SF',\n            'FS',\n            'FF'\n        ],\n        long : [\n            'Start-to-Start',\n            'Start-to-Finish',\n            'Finish-to-Start',\n            'Finish-to-Finish'\n        ]\n    },\n\n    DependencyEdit : {\n        From              : 'From',\n        To                : 'To',\n        Type              : 'Type',\n        Lag               : 'Lag',\n        'Edit dependency' : 'Edit dependency',\n        Save              : 'Save',\n        Delete            : 'Delete',\n        Cancel            : 'Cancel',\n        StartToStart      : 'Start to Start',\n        StartToEnd        : 'Start to End',\n        EndToStart        : 'End to Start',\n        EndToEnd          : 'End to End'\n    },\n\n    EventEdit : {\n        Name         : 'Name',\n        Resource     : 'Resource',\n        Start        : 'Start',\n        End          : 'End',\n        Save         : 'Save',\n        Delete       : 'Delete',\n        Cancel       : 'Cancel',\n        'Edit event' : 'Edit event',\n        Repeat       : 'Repeat'\n    },\n\n    EventDrag : {\n        eventOverlapsExisting : 'Event overlaps existing event for this resource',\n        noDropOutsideTimeline : 'Event may not be dropped completely outside the timeline'\n    },\n\n    SchedulerBase : {\n        'Add event'      : 'Add event',\n        'Delete event'   : 'Delete event',\n        'Unassign event' : 'Unassign event',\n        color            : 'Color'\n    },\n\n    TimeAxisHeaderMenu : {\n        pickZoomLevel   : 'Zoom',\n        activeDateRange : 'Date range',\n        startText       : 'Start date',\n        endText         : 'End date',\n        todayText       : 'Today'\n    },\n\n    EventCopyPaste : {\n        copyEvent  : 'Copy event',\n        cutEvent   : 'Cut event',\n        pasteEvent : 'Paste event'\n    },\n\n    EventFilter : {\n        filterEvents : 'Filter tasks',\n        byName       : 'By name'\n    },\n\n    TimeRanges : {\n        showCurrentTimeLine : 'Show current timeline'\n    },\n\n    PresetManager : {\n        secondAndMinute : {\n            displayDateFormat : 'll LTS',\n            name              : 'Seconds'\n        },\n        minuteAndHour : {\n            topDateFormat     : 'ddd MM/DD, hA',\n            displayDateFormat : 'll LST'\n        },\n        hourAndDay : {\n            topDateFormat     : 'ddd MM/DD',\n            middleDateFormat  : 'LST',\n            displayDateFormat : 'll LST',\n            name              : 'Day'\n        },\n        day : {\n            name : 'Day/hours'\n        },\n        week : {\n            name : 'Week/hours'\n        },\n        dayAndWeek : {\n            displayDateFormat : 'll LST',\n            name              : 'Week/days'\n        },\n        dayAndMonth : {\n            name : 'Month'\n        },\n        weekAndDay : {\n            displayDateFormat : 'll LST',\n            name              : 'Week'\n        },\n        weekAndMonth : {\n            name : 'Weeks'\n        },\n        weekAndDayLetter : {\n            name : 'Weeks/weekdays'\n        },\n        weekDateAndMonth : {\n            name : 'Months/weeks'\n        },\n        monthAndYear : {\n            name : 'Months'\n        },\n        year : {\n            name : 'Years'\n        },\n        manyYears : {\n            name : 'Multiple years'\n        }\n    },\n\n    RecurrenceConfirmationPopup : {\n        'delete-title'              : 'You are deleting an event',\n        'delete-all-message'        : 'Do you want to delete all occurrences of this event?',\n        'delete-further-message'    : 'Do you want to delete this and all future occurrences of this event, or only the selected occurrence?',\n        'delete-further-btn-text'   : 'Delete All Future Events',\n        'delete-only-this-btn-text' : 'Delete Only This Event',\n        'update-title'              : 'You are changing a repeating event',\n        'update-all-message'        : 'Do you want to change all occurrences of this event?',\n        'update-further-message'    : 'Do you want to change only this occurrence of the event, or this and all future occurrences?',\n        'update-further-btn-text'   : 'All Future Events',\n        'update-only-this-btn-text' : 'Only This Event',\n        Yes                         : 'Yes',\n        Cancel                      : 'Cancel',\n        width                       : 600\n    },\n\n    RecurrenceLegend : {\n        ' and '                         : ' and ',\n        Daily                           : 'Daily',\n        'Weekly on {1}'                 : ({ days }) => `Weekly on ${days}`,\n        'Monthly on {1}'                : ({ days }) => `Monthly on ${days}`,\n        'Yearly on {1} of {2}'          : ({ days, months }) => `Yearly on ${days} of ${months}`,\n        'Every {0} days'                : ({ interval }) => `Every ${interval} days`,\n        'Every {0} weeks on {1}'        : ({ interval, days }) => `Every ${interval} weeks on ${days}`,\n        'Every {0} months on {1}'       : ({ interval, days }) => `Every ${interval} months on ${days}`,\n        'Every {0} years on {1} of {2}' : ({ interval, days, months }) => `Every ${interval} years on ${days} of ${months}`,\n        position1                       : 'the first',\n        position2                       : 'the second',\n        position3                       : 'the third',\n        position4                       : 'the fourth',\n        position5                       : 'the fifth',\n        'position-1'                    : 'the last',\n        day                             : 'day',\n        weekday                         : 'weekday',\n        'weekend day'                   : 'weekend day',\n        daysFormat                      : ({ position, days }) => `${position} ${days}`\n    },\n\n    RecurrenceEditor : {\n        'Repeat event'      : 'Repeat event',\n        Cancel              : 'Cancel',\n        Save                : 'Save',\n        Frequency           : 'Frequency',\n        Every               : 'Every',\n        DAILYintervalUnit   : 'day(s)',\n        WEEKLYintervalUnit  : 'week(s)',\n        MONTHLYintervalUnit : 'month(s)',\n        YEARLYintervalUnit  : 'year(s)',\n        Each                : 'Each',\n        'On the'            : 'On the',\n        'End repeat'        : 'End repeat',\n        'time(s)'           : 'time(s)'\n    },\n\n    RecurrenceDaysCombo : {\n        day           : 'day',\n        weekday       : 'weekday',\n        'weekend day' : 'weekend day'\n    },\n\n    RecurrencePositionsCombo : {\n        position1    : 'first',\n        position2    : 'second',\n        position3    : 'third',\n        position4    : 'fourth',\n        position5    : 'fifth',\n        'position-1' : 'last'\n    },\n\n    RecurrenceStopConditionCombo : {\n        Never     : 'Never',\n        After     : 'After',\n        'On date' : 'On date'\n    },\n\n    RecurrenceFrequencyCombo : {\n        None    : 'No repeat',\n        Daily   : 'Daily',\n        Weekly  : 'Weekly',\n        Monthly : 'Monthly',\n        Yearly  : 'Yearly'\n    },\n\n    RecurrenceCombo : {\n        None   : 'None',\n        Custom : 'Custom...'\n    },\n\n    Summary : {\n        'Summary for' : date => `Summary for ${date}`\n    },\n\n    ScheduleRangeCombo : {\n        completeview : 'Complete schedule',\n        currentview  : 'Visible schedule',\n        daterange    : 'Date range',\n        completedata : 'Complete schedule (for all events)'\n    },\n\n    SchedulerExportDialog : {\n        'Schedule range' : 'Schedule range',\n        'Export from'    : 'From',\n        'Export to'      : 'To'\n    },\n\n    ExcelExporter : {\n        'No resource assigned' : 'No resource assigned'\n    },\n\n    CrudManagerView : {\n        serverResponseLabel : 'Server response:'\n    },\n\n    DurationColumn : {\n        Duration : 'Duration'\n    }\n};\n\nexport default LocaleHelper.publishLocale(locale);\n","import { unitMagnitudes } from '../../Core/helper/DateHelper.js';\nimport ViewPreset from './ViewPreset.js';\nimport Localizable from '../../Core/localization/Localizable.js';\nimport '../../Scheduler/localization/En.js';\nimport Store from '../../Core/data/Store.js';\nimport PresetManager from './PresetManager.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Scheduler/preset/PresetStore\n */\n\n/**\n * A special Store subclass which holds {@link Scheduler.preset.ViewPreset ViewPresets}.\n * Each ViewPreset in this store represents a zoom level. The store data is sorted in special\n * zoom order. That is zoomed out to zoomed in. The first Preset will produce the narrowest event bars\n * the last one will produce the widest event bars.\n *\n * To specify view presets (zoom levels) please provide set of view presets to the scheduler:\n *\n * ```javascript\n * const myScheduler = new Scheduler({\n *     presets : [\n *         {\n *             base : 'hourAndDay',\n *             id   : 'MyHourAndDay',\n *             // other preset configs....\n *         },\n *         {\n *             base : 'weekAndMonth',\n *             id   : 'MyWeekAndMonth',\n *             // other preset configs....\n *         }\n *     ],\n *     viewPreset : 'MyHourAndDay',\n *     // other scheduler configs....\n *     });\n * ```\n *\n * @extends Core/data/Store\n */\nexport default class PresetStore extends Localizable(Store) {\n\n    static get $name() {\n        return 'PresetStore';\n    }\n\n    static get defaultConfig() {\n        return {\n            useRawData : true,\n\n            modelClass : ViewPreset,\n\n            /**\n             * Specifies the sort order of the presets in the store.\n             * By default they are in zoomed out to zoomed in order. That is\n             * presets which will create widest event bars to presets\n             * which will produce narrowest event bars.\n             *\n             * Configure this as `-1` to reverse this order.\n             * @config {Number}\n             * @default\n             */\n            zoomOrder : 1\n        };\n    }\n\n    set storage(storage) {\n        super.storage = storage;\n\n        // Maintained in order automatically while adding.\n        this.storage.addSorter((lhs, rhs) => {\n            const\n                leftBottomHeader  = lhs.bottomHeader,\n                rightBottomHeader = rhs.bottomHeader;\n\n            // Sort order:\n            //  Milliseconds per pixel.\n            //  Tick size.\n            //  Unit magnitude.\n            //  Increment size.\n            const\n                order = rhs.msPerPixel - lhs.msPerPixel ||\n                unitMagnitudes[leftBottomHeader.unit] - unitMagnitudes[rightBottomHeader.unit] ||\n                leftBottomHeader.increment - rightBottomHeader.increment;\n\n            return order * this.zoomOrder;\n        });\n    }\n\n    get storage() {\n        return super.storage;\n    }\n\n    getById(id) {\n        // If we do not know about the id, inherit it from the PresetManager singleton\n        return super.getById(id) || !this.isPresetManager && PresetManager.getById(id);\n    }\n\n    createRecord(data, ...args) {\n        let result;\n\n        if (data.isViewPreset) {\n            return data;\n        }\n        if (typeof data === 'string') {\n            result = this.getById(data);\n        }\n        else if (typeof data === 'number') {\n            result = this.getAt(data);\n        }\n        // Its a ViewPreset data object\n        else {\n            // If it's extending an existing ViewPreset, inherit then override\n            // the data from the base.\n            if (data.base) {\n                data = this.copyBaseValues(data);\n            }\n\n            // Model constructor will call generateId if no id is provided\n            return super.createRecord(data, ...args);\n        }\n        if (!result) {\n            throw new Error(`ViewPreset ${data} does not exist`);\n        }\n        return result;\n    }\n\n    updateLocalization() {\n        super.updateLocalization();\n\n        const me = this;\n\n        // Collect presets from store...\n        let presets = me.allRecords;\n\n        // and basePresets if we are the PresetManager\n        if (me.isPresetManager) {\n            presets = new Set(presets.concat(Object.values(me.basePresets)));\n        }\n\n        presets.forEach(preset => {\n            let localePreset = me.optionalL(`L{PresetManager.${preset.id}}`, null, true);\n\n            // Default presets generated from base presets use localization of base if they have no own\n            if (typeof localePreset === 'string' && preset.baseId) {\n                localePreset = me.optionalL(`L{PresetManager.${preset.baseId}}`, null, true);\n            }\n\n            // Apply any custom format defined in locale, or the original format if none exists\n            if (localePreset && typeof localePreset === 'object') {\n                if (!preset.originalDisplayDateFormat) {\n                    preset.originalDisplayDateFormat = preset.displayDateFormat;\n                }\n\n                // <remove-on-release>\n                // TODO: work around to work topDateFormat for weekAndDay viewPreset localization.\n                //  it must be fixed on: https://github.com/bryntum/support/issues/1775\n                // </remove-on-release>\n                // it there is a topDateFormat but preset.mainHeaderLevel is 0, means the middle header is the top header actually,\n                // so convert property to middle (if middle doesn't exists) to localization understand (topDateFormat for weekAndDay for example)\n                // topDateFormat doesn't work when mainHeaderLevel is 0 because it doesn't have top config\n                // but has top header visually (Check on get headerConfig method in ViewPreset class)\n                if (preset.mainHeaderLevel === 0 && localePreset.topDateFormat) {\n                    localePreset.middleDateFormat = localePreset.middleDateFormat || localePreset.topDateFormat;\n                }\n\n                preset.setData('displayDateFormat', localePreset.displayDateFormat || preset.originalDisplayDateFormat);\n\n                ['top', 'middle', 'bottom'].forEach(level => {\n                    const\n                        levelConfig           = preset.headerConfig[level],\n                        localeLevelDateFormat = localePreset[level + 'DateFormat'];\n\n                    if (levelConfig) {\n                        if (!levelConfig.originalDateFormat) {\n                            levelConfig.originalDateFormat = levelConfig.dateFormat;\n                        }\n\n                        // if there was defined topDateFormat on locale file for example, use it instead of renderer from basePresets (https://github.com/bryntum/support/issues/1307)\n                        if (localeLevelDateFormat && levelConfig.renderer) {\n                            levelConfig.renderer = null;\n                        }\n\n                        levelConfig.dateFormat = localeLevelDateFormat || levelConfig.originalDateFormat;\n\n                    }\n                });\n\n                // The preset names are used in ViewPresetCombo and are localized by default\n                if (localePreset.name) {\n                    if (!preset.unlocalizedName) {\n                        preset.unlocalizedName = preset.name;\n                    }\n                    preset.setData('name', localePreset.name);\n                }\n                else if (preset.unlocalizedName && preset.unlocalizedName !== preset.name) {\n                    preset.name = preset.unlocalizedName;\n                    preset.unlocalizedName = null;\n                }\n            }\n        });\n    }\n\n    // This function is not meant to be called by any code other than Base#getCurrentConfig().\n    // Preset config on Scheduler/Gantt expects array of presets and not store config\n    getCurrentConfig(options) {\n        return super.getCurrentConfig(options).data;\n    }\n\n    copyBaseValues(presetData) {\n        let base = this.getById(presetData.base);\n\n        if (!base) {\n            throw new Error(`ViewPreset base '${presetData.base}' does not exist.`);\n        }\n        base = ObjectHelper.clone(base.data);\n        delete base.id;\n\n        if (presetData.name) {\n            delete base.name;\n        }\n\n        // Merge supplied data into a clone of the base ViewPreset's data\n        // so that the new one overrides the base.\n        return ObjectHelper.merge(base, presetData);\n    }\n\n    add(preset) {\n        preset = Array.isArray(preset) ? preset : [preset];\n\n        preset.forEach(preset => {\n            // If a ViewPreset instance that extends another preset was added\n            // Only in add we can apply the base data\n            if (preset.isViewPreset && preset.base) {\n                preset.data = this.copyBaseValues(preset.originalData);\n            }\n        });\n        return super.add(...arguments);\n    }\n}\n","import DateHelper from '../../Core/helper/DateHelper.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport ViewPreset from './ViewPreset.js';\nimport PresetStore from './PresetStore.js';\n\n// No module tag here. That stops the singleton from being included by the docs.\n\n/**\n * ## Intro\n * This is a global Store of {@link Scheduler.preset.ViewPreset ViewPresets}, required to supply initial data to\n * Scheduler's {@link Scheduler.view.mixin.TimelineViewPresets#config-presets}.\n *\n * You can provide new view presets globally or for a specific scheduler.\n *\n * **NOTE:** You **cannot** modify existing records in the PresetManager store. You can either remove\n * preset records from the store or add new records to the store.\n * Also please keep in mind, all changes provided to the PresetManager store are not reflected to the\n * {@link Scheduler.view.mixin.TimelineViewPresets#config-presets} of schedulers that already exist!\n *\n * If you want to have just a few presets (also known as zoom levels) in your Scheduler, you can slice corresponding records\n * from the `PresetManager` and apply them to the Scheduler `presets` config.\n * ```javascript\n * const newPresets = PresetManager.records.slice(10, 12);\n *\n * const scheduler = new Scheduler({\n *     presets    : newPresets, // Only 2 zoom levels are available\n *     viewPreset : newPresets[0].id\n * });\n * ```\n *\n * If you want to adjust all default presets and assign to a specific scheduler you are going to create,\n * you can extend them and pass as an array to the Scheduler `presets` config.\n * Here is an example of how to set the same `timeResolution` to all `ViewPresets`.\n * ```javascript\n * const newPresets = PresetManager.map(preset => {\n *     return {\n *         id             : 'my_' + preset.id,\n *         base           : preset.id, // Based on an existing preset\n *         timeResolution : {\n *             unit      : 'day',\n *             increment : 1\n *         }\n *     };\n * });\n *\n * const scheduler = new Scheduler({\n *     presets     : newPresets,\n *     viewPreset : 'my_hourAndDay'\n * });\n * ```\n *\n * If you want to do the same for **all** schedulers which will be created next, you can register new presets in a loop.\n * ```javascript\n * PresetManager.records.forEach(preset => {\n *     // Pass the same ID, so when a new preset is added to the store,\n *     // it will replace the current one.\n *     PresetManager.registerPreset(preset.id, {\n *        id             : preset.id,\n *        base           : preset.id,\n *        timeResolution : {\n *            unit      : 'day',\n *            increment : 1\n *        }\n *    });\n * });\n * ```\n *\n * Here is an example of how to add a new `ViewPreset` to the global `PresetManager` store and to the already created\n * scheduler `presets`.\n * ```javascript\n * const scheduler = new Scheduler({...});\n *\n * const newGlobalPresets = PresetManager.add({\n *     id              : 'myNewPreset',\n *     base            : 'hourAndDay', // Based on an existing preset\n *     columnLinesFor  : 0,\n *     // Override headers\n *     headers : [\n *         {\n *             unit       : 'day',\n *             // Use different date format for top header 01.10.2020\n *             dateFormat : 'DD.MM.YYYY'\n *         },\n *         {\n *             unit       : 'hour',\n *             dateFormat : 'LT'\n *         }\n *     ]\n * });\n *\n * // Add new presets to the scheduler that has been created before changes\n * // to PresetManager are applied\n * scheduler.presets.add(newGlobalPresets);\n * ```\n *\n * ## Predefined presets\n *\n * Predefined presets are:\n *\n * - `secondAndMinute` - creates a 2 level header - minutes and seconds:\n * {@inlineexample Scheduler/preset/secondAndMinute.js}\n * - `minuteAndHour` - creates a 2 level header - hours and minutes:\n * {@inlineexample Scheduler/preset/minuteAndHour.js}\n * - `hourAndDay` - creates a 2 level header - days and hours:\n * {@inlineexample Scheduler/preset/hourAndDay.js}\n * - `dayAndWeek` - creates a 2 level header - weeks and days:\n * {@inlineexample Scheduler/preset/dayAndWeek.js}\n * - `dayAndMonth` - creates a 2 level header - months and days:\n * {@inlineexample Scheduler/preset/dayAndMonth.js}\n * - `weekAndDay` - just like `dayAndWeek` but with different formatting:\n * {@inlineexample Scheduler/preset/weekAndDay.js}\n * - `weekAndDayLetter` - creates a 2 level header - weeks and day letters:\n * {@inlineexample Scheduler/preset/weekAndDayLetter.js}\n * - `weekAndMonth` - creates a 2 level header - months and weeks:\n * {@inlineexample Scheduler/preset/weekAndMonth.js}\n * - `weekDateAndMonth` - creates a 2 level header - months and weeks (weeks shown by first day only):\n * {@inlineexample Scheduler/preset/weekDateAndMonth.js}\n * - `monthAndYear` - creates a 2 level header - years and months:\n * {@inlineexample Scheduler/preset/monthAndYear.js}\n * - `year` - creates a 2 level header - years and quarters:\n * {@inlineexample Scheduler/preset/year.js}\n * - `manyYears` - creates a 2 level header - 5-years and years:\n * {@inlineexample Scheduler/preset/manyYears.js}\n *\n * See the {@link Scheduler.preset.ViewPreset} and {@link Scheduler.preset.ViewPresetHeaderRow} classes for a\n * description of the view preset properties.\n *\n * ## Localizing View Presets\n * Bryntum Scheduler uses locales for translations including date formats for view presets.\n *\n * To translate date format for view presets just define the date format for the specified region\n * for your locale file, like this:\n * ```javascript\n * const locale = {\n *\n *     localeName : 'En',\n *\n *     // ... Other translations here ...\n *\n *     PresetManager : {\n *         // Translation for the \"weekAndDay\" ViewPreset\n *         weekAndDay : {\n *             // Change the date format for the top and middle levels\n *             topDateFormat    : 'MMM',\n *             middleDateFormat : 'D'\n *         },\n *         // Translation for the \"dayAndWeek\" ViewPreset\n *         dayAndWeek : {\n *             // Change the date format for the top level\n *             topDateFormat : 'MMMM YYYY'\n *         }\n *     }\n * }\n *\n * LocaleManager.applyLocale(locale);\n * ```\n *\n * Check the <a target=\"_blank\" href=\"../examples/localization/\">localization demo</a> and [this guide](#Scheduler/guides/customization/localization.md) for more details.\n *\n * @singleton\n * @extends Scheduler/preset/PresetStore\n */\nclass PresetManager extends PresetStore {\n\n    // <debug>\n    // region Localization test\n    static localization = [\n        'L{secondAndMinute}',\n        'L{minuteAndHour}',\n        'L{hourAndDay}',\n        'L{dayAndWeek}',\n        'L{weekAndDay}',\n        'L{day}',\n        'L{week}',\n        'L{dayAndMonth}',\n        'L{weekAndMonth}',\n        'L{weekAndDayLetter}',\n        'L{weekDateAndMonth}',\n        'L{monthAndYear}',\n        'L{year}',\n        'L{manyYears}'\n    ];\n    // endregion\n    // </debug>\n\n    static get $name() {\n        return 'PresetManager';\n    }\n\n    static get defaultConfig() {\n        return {\n            // To not break CSP demo\n            preventSubClassingModel : true,\n\n            basePresets : {\n                secondAndMinute : {\n                    name              : 'Seconds',\n                    tickWidth         : 30,   // Time column width\n                    tickHeight        : 40,\n                    displayDateFormat : 'll LTS', // Controls how dates will be displayed in tooltips etc\n                    shiftIncrement    : 10,     // Controls how much time to skip when calling shiftNext and shiftPrevious.\n                    shiftUnit         : 'minute', // Valid values are \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\".\n                    defaultSpan       : 24,    // By default, if no end date is supplied to a view it will show 24 hours\n                    timeResolution    : {      // Dates will be snapped to this resolution\n                        unit      : 'second',  // Valid values are \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\".\n                        increment : 5\n                    },\n                    // This defines your header rows.\n                    // For each row you can define \"unit\", \"increment\", \"dateFormat\", \"renderer\", \"align\", and \"thisObj\"\n                    headers : [\n                        {\n                            unit       : 'minute',\n                            dateFormat : 'lll'\n                        },\n                        {\n                            unit       : 'second',\n                            increment  : 10,\n                            dateFormat : 'ss'\n                        }\n                    ]\n                },\n                minuteAndHour : {\n                    name              : 'Minutes',\n                    tickWidth         : 60,    // Time column width\n                    tickHeight        : 60,\n                    displayDateFormat : 'll LT', // Controls how dates will be displayed in tooltips etc\n                    shiftIncrement    : 1,     // Controls how much time to skip when calling shiftNext and shiftPrevious.\n                    shiftUnit         : 'hour', // Valid values are \"MILLI\", \"SECOND\", \"minute\", \"HOUR\", \"DAY\", \"WEEK\", \"MONTH\", \"QUARTER\", \"YEAR\".\n                    defaultSpan       : 24,    // By default, if no end date is supplied to a view it will show 24 hours\n                    timeResolution    : {      // Dates will be snapped to this resolution\n                        unit      : 'minute',  // Valid values are \"MILLI\", \"SECOND\", \"minute\", \"HOUR\", \"DAY\", \"WEEK\", \"MONTH\", \"QUARTER\", \"YEAR\".\n                        increment : 15\n                    },\n                    headers : [\n                        {\n                            unit       : 'hour',\n                            dateFormat : 'ddd MM/DD, hA'\n                        },\n                        {\n                            unit       : 'minute',\n                            increment  : 30,\n                            dateFormat : 'mm'\n                        }\n                    ]\n                },\n                hourAndDay : {\n                    name              : 'Day',\n                    tickWidth         : 70,\n                    tickHeight        : 40,\n                    displayDateFormat : 'll LT',\n                    shiftIncrement    : 1,\n                    shiftUnit         : 'day',\n                    defaultSpan       : 24,\n                    timeResolution    : {\n                        unit      : 'minute',\n                        increment : 30\n                    },\n                    headers : [\n                        {\n                            unit       : 'day',\n                            dateFormat : 'ddd DD/MM' //Mon 01/10\n                        },\n                        {\n                            unit       : 'hour',\n                            dateFormat : 'LT'\n                        }\n                    ]\n                },\n                day : {\n                    name              : 'Day/hours',\n                    displayDateFormat : 'LT',\n                    shiftIncrement    : 1,\n                    shiftUnit         : 'day',\n                    defaultSpan       : 1,\n                    timeResolution    : {\n                        unit      : 'minute',\n                        increment : 30\n                    },\n                    mainHeaderLevel : 0,\n                    headers         : [\n                        {\n                            unit       : 'day',\n                            dateFormat : 'ddd DD/MM', // Mon 01/02\n                            splitUnit  : 'day'\n                        },\n                        {\n                            unit : 'hour',\n                            renderer(value) {\n                                return `\n                                    <div class=\"b-sch-calendarcolumn-ct\"><span class=\"b-sch-calendarcolumn-hours\">${DateHelper.format(value, 'HH')}</span>\n                                    <span class=\"b-sch-calendarcolumn-minutes\">${DateHelper.format(value, 'mm')}</span></div>\n                                `;\n                            }\n                        }\n                    ]\n                },\n                week : {\n                    name              : 'Week/hours',\n                    displayDateFormat : 'LT',\n                    shiftIncrement    : 1,\n                    shiftUnit         : 'week',\n                    defaultSpan       : 24,\n                    timeResolution    : {\n                        unit      : 'minute',\n                        increment : 30\n                    },\n                    mainHeaderLevel : 0,\n                    headers         : [\n                        {\n                            unit       : 'week',\n                            dateFormat : 'D d',\n                            splitUnit  : 'day'\n                        },\n                        {\n                            unit       : 'hour',\n                            dateFormat : 'LT',    // will be overridden by renderer\n                            renderer(value) {\n                                return `\n                                    <div class=\"sch-calendarcolumn-ct\">\n                                    <span class=\"sch-calendarcolumn-hours\">${DateHelper.format(value, 'HH')}</span>\n                                    <span class=\"sch-calendarcolumn-minutes\">${DateHelper.format(value, 'mm')}</span>\n                                    </div>\n                                `;\n                            }\n                        }\n                    ]\n                },\n                dayAndWeek : {\n                    name              : 'Days & Weeks',\n                    tickWidth         : 100,\n                    tickHeight        : 80,\n                    displayDateFormat : 'll LT',\n                    shiftUnit         : 'day',\n                    shiftIncrement    : 1,\n                    defaultSpan       : 5,\n                    timeResolution    : {\n                        unit      : 'hour',\n                        increment : 1\n                    },\n                    headers : [\n                        {\n                            unit : 'week',\n                            renderer(start) {\n                                return DateHelper.getShortNameOfUnit('week') + '.' + DateHelper.format(start, 'WW MMM YYYY');\n                            }\n                        },\n                        {\n                            unit       : 'day',\n                            dateFormat : 'dd DD'\n                        }\n                    ]\n                },\n                // dayAndMonth : {\n                //     name              : 'Days & Months',\n                //     tickWidth         : 100,\n                //     tickHeight        : 80,\n                //     displayDateFormat : 'll LT',\n                //     shiftUnit         : 'day',\n                //     shiftIncrement    : 1,\n                //     defaultSpan       : 5,\n                //     timeResolution    : {\n                //         unit      : 'hour',\n                //         increment : 1\n                //     },\n                //     headers : [\n                //         {\n                //             unit       : 'month',\n                //             dateFormat : 'MMMM YYYY',\n                //             align      : 'start'\n                //         },\n                //         {\n                //             unit       : 'day',\n                //             dateFormat : 'dd DD'\n                //         }\n                //     ]\n                // },\n                dayAndMonth : {\n                    name              : 'Month',\n                    tickWidth         : 100,\n                    tickHeight        : 80,\n                    displayDateFormat : 'll LT',\n                    shiftUnit         : 'month',\n                    shiftIncrement    : 1,\n                    defaultSpan       : 1,\n                    mainUnit          : 'month',\n                    timeResolution    : {\n                        unit      : 'hour',\n                        increment : 1\n                    },\n                    headers : [\n                        {\n                            unit       : 'month',\n                            dateFormat : 'MMMM YYYY'\n                        },\n                        {\n                            unit       : 'day',\n                            dateFormat : 'DD'\n                        }\n                    ]\n                },\n                weekAndDay : {\n                    name              : 'Week',\n                    tickWidth         : 100,\n                    tickHeight        : 80,\n                    displayDateFormat : 'll hh:mm A',\n                    shiftUnit         : 'week',\n                    shiftIncrement    : 1,\n                    defaultSpan       : 1,\n                    timeResolution    : {\n                        unit      : 'day',\n                        increment : 1\n                    },\n                    mainHeaderLevel : 0,\n                    headers         : [\n                        {\n                            unit       : 'week',\n                            dateFormat : 'YYYY MMMM DD' // 2017 January 01\n                        },\n                        {\n                            unit       : 'day',\n                            increment  : 1,\n                            dateFormat : 'DD MMM'\n                        }\n                    ]\n                },\n                weekAndMonth : {\n                    name              : 'Weeks',\n                    tickWidth         : 100,\n                    tickHeight        : 105,\n                    displayDateFormat : 'll',\n                    shiftUnit         : 'week',\n                    shiftIncrement    : 5,\n                    defaultSpan       : 6,\n                    timeResolution    : {\n                        unit      : 'day',\n                        increment : 1\n                    },\n                    headers : [\n                        {\n                            unit       : 'month',\n                            dateFormat : 'MMM YYYY' //Jan 2017\n                        },\n                        {\n                            unit       : 'week',\n                            dateFormat : 'DD MMM'\n                        }\n                    ]\n                },\n                weekAndDayLetter : {\n                    name              : 'Weeks/weekdays',\n                    tickWidth         : 20,\n                    tickHeight        : 50,\n                    displayDateFormat : 'll',\n                    shiftUnit         : 'week',\n                    shiftIncrement    : 1,\n                    defaultSpan       : 10,\n                    timeResolution    : {\n                        unit      : 'day',\n                        increment : 1\n                    },\n                    mainHeaderLevel : 0,\n                    headers         : [\n                        {\n                            unit                : 'week',\n                            dateFormat          : 'ddd DD MMM YYYY',\n                            verticalColumnWidth : 115\n                        },\n                        {\n                            unit                : 'day',\n                            dateFormat          : 'd1',\n                            verticalColumnWidth : 25\n                        }\n                    ]\n                },\n                weekDateAndMonth : {\n                    name              : 'Months/weeks',\n                    tickWidth         : 30,\n                    tickHeight        : 40,\n                    displayDateFormat : 'll',\n                    shiftUnit         : 'week',\n                    shiftIncrement    : 1,\n                    defaultSpan       : 10,\n                    timeResolution    : {\n                        unit      : 'day',\n                        increment : 1\n                    },\n                    headers : [\n                        {\n                            unit       : 'month',\n                            dateFormat : 'YYYY MMMM'\n                        },\n                        {\n                            unit       : 'week',\n                            dateFormat : 'DD'\n                        }\n                    ]\n                },\n                monthAndYear : {\n                    name              : 'Months',\n                    tickWidth         : 110,\n                    tickHeight        : 110,\n                    displayDateFormat : 'll',\n                    shiftIncrement    : 3,\n                    shiftUnit         : 'month',\n                    defaultSpan       : 12,\n                    timeResolution    : {\n                        unit      : 'day',\n                        increment : 1\n                    },\n                    headers : [\n                        {\n                            unit       : 'year',\n                            dateFormat : 'YYYY' //2017\n                        },\n                        {\n                            unit       : 'month',\n                            dateFormat : 'MMM YYYY' //Jan 2017\n                        }\n                    ]\n                },\n                year : {\n                    name                : 'Years',\n                    tickWidth           : 100,\n                    tickHeight          : 100,\n                    resourceColumnWidth : 100,\n                    displayDateFormat   : 'll',\n                    shiftUnit           : 'year',\n                    shiftIncrement      : 1,\n                    defaultSpan         : 1,\n                    timeResolution      : {\n                        unit      : 'month',\n                        increment : 1\n                    },\n                    headers : [\n                        {\n                            unit       : 'year',\n                            dateFormat : 'YYYY'\n                        },\n                        {\n                            unit : 'quarter',\n                            renderer(start, end, cfg) {\n                                return DateHelper.getShortNameOfUnit('quarter').toUpperCase() + (Math.floor(start.getMonth() / 3) + 1);\n                            }\n                        }\n                    ]\n                },\n                manyYears : {\n                    name              : 'Multiple years',\n                    tickWidth         : 40,\n                    tickHeight        : 50,\n                    displayDateFormat : 'll',\n                    shiftUnit         : 'year',\n                    shiftIncrement    : 1,\n                    defaultSpan       : 10,\n                    timeResolution    : {\n                        unit      : 'year',\n                        increment : 1\n                    },\n                    mainHeaderLevel : 0,\n                    headers         : [\n                        {\n                            unit      : 'year',\n                            increment : 5,\n                            renderer  : (start, end) => start.getFullYear() + ' - ' + end.getFullYear()\n                        },\n                        {\n                            unit       : 'year',\n                            dateFormat : 'YY',\n                            increment  : 1\n                        }\n                    ]\n                }\n            },\n\n            // This is a list of bryntum-supplied preset adjustments used to create the Scheduler's\n            // default initial set of ViewPresets.\n            defaultPresets : [\n                // Years over years\n                'manyYears',\n                { width : 80, increment : 1, resolution : 1, base : 'manyYears', resolutionUnit : 'YEAR' },\n\n                // Years over quarters\n                'year',\n                { width : 30,  increment : 1, resolution : 1, base : 'year', resolutionUnit : 'MONTH' },\n                { width : 50,  increment : 1, resolution : 1, base : 'year', resolutionUnit : 'MONTH' },\n                { width : 200, increment : 1, resolution : 1, base : 'year', resolutionUnit : 'MONTH' },\n\n                // Years over months\n                'monthAndYear',\n\n                // Months over weeks\n                'weekDateAndMonth',\n\n                // Months over weeks\n                'weekAndMonth',\n\n                // Months over weeks\n                'weekAndDayLetter',\n\n                // Months over days\n                'dayAndMonth',\n\n                // Weeks over days\n                'weekAndDay',\n                { width : 54, increment : 1, resolution : 1, base : 'weekAndDay', resolutionUnit : 'HOUR' },\n\n                // Days over hours\n                'hourAndDay',\n                { width : 64,  increment : 6, resolution : 30, base : 'hourAndDay', resolutionUnit : 'MINUTE' },\n                { width : 100, increment : 6, resolution : 30, base : 'hourAndDay', resolutionUnit : 'MINUTE' },\n                { width : 64,  increment : 2, resolution : 30, base : 'hourAndDay', resolutionUnit : 'MINUTE' },\n\n                // Hours over minutes\n                'minuteAndHour',\n                { width : 60,  increment : 15, resolution : 5, base : 'minuteAndHour' },\n                { width : 130, increment : 15, resolution : 5, base : 'minuteAndHour' },\n                { width : 60,  increment : 5,  resolution : 5, base : 'minuteAndHour' },\n                { width : 100, increment : 5,  resolution : 5, base : 'minuteAndHour' },\n\n                // Minutes over seconds\n                'secondAndMinute',\n                { width : 60,  increment : 10, resolution : 5, base : 'secondAndMinute' },\n                { width : 130, increment : 5,  resolution : 5, base : 'secondAndMinute' }\n            ],\n\n            internalListeners : {\n                locale : 'updateLocalization'\n            }\n        };\n    }\n\n    set basePresets(basePresets) {\n        const presetCache = this._basePresets = {};\n\n        for (const id in basePresets) {\n            basePresets[id].id = id;\n            presetCache[id] = this.createRecord(basePresets[id]);\n        }\n    }\n\n    get basePresets() {\n        return this._basePresets;\n    }\n\n    set defaultPresets(defaultPresets) {\n        for (let i = 0, { length } = defaultPresets; i < length; i++) {\n            const\n                presetAdjustment   = defaultPresets[i],\n                isBase             = typeof presetAdjustment === 'string',\n                baseType           = isBase ? presetAdjustment : presetAdjustment.base;\n\n            let preset;\n\n            // The default was just a string, so it's an unmodified instance of a base type.\n            if (isBase) {\n                preset = this.basePresets[baseType];\n            }\n            // If it's an object, it's an adjustment to a base type\n            else {\n                const\n                    config             = Object.setPrototypeOf(ObjectHelper.clone(this.basePresets[baseType].data), { id : baseType }),\n                    { timeResolution } = config,\n                    bottomHeader       = config.headers[config.headers.length - 1];\n\n                config.id = undefined;\n\n                if ('width' in presetAdjustment) {\n                    config.tickWidth = presetAdjustment.width;\n                }\n                if ('height' in presetAdjustment) {\n                    config.tickHeight = presetAdjustment.height;\n                }\n                if ('increment' in presetAdjustment) {\n                    bottomHeader.increment = presetAdjustment.increment;\n                }\n                if ('resolution' in presetAdjustment) {\n                    timeResolution.increment = presetAdjustment.resolution;\n                }\n                if ('resolutionUnit' in presetAdjustment) {\n                    timeResolution.unit = DateHelper.getUnitByName(presetAdjustment.resolutionUnit);\n                }\n\n                preset = this.createRecord(config);\n\n                // Keep id of original preset around, used with localization in PresetStore\n                preset.baseId = baseType;\n            }\n            this.add(preset);\n        }\n    }\n\n    getById(id) {\n        // Look first in the default set, and if it's one of the base types that is not imported into the\n        // default set, then look at the bases.\n        return super.getById(id) || this.basePresets[id];\n    }\n\n    /**\n     * Registers a new view preset base to be used by any scheduler grid or tree on the page.\n     * @param {String} id The unique identifier for this preset\n     * @param {ViewPresetConfig} config The configuration properties of the view preset (see\n     * {@link Scheduler.preset.ViewPreset} for more information)\n     * @returns {Scheduler.preset.ViewPreset} A new ViewPreset based upon the passed configuration.\n     */\n    registerPreset(id, config) {\n        const\n            preset = this.createRecord(Object.assign({\n                id\n            }, config)),\n            existingDuplicate = this.find(p => p.equals(preset));\n\n        if (existingDuplicate) {\n            return existingDuplicate;\n        }\n\n        if (preset.isValid) {\n            this.add(preset);\n        }\n        else {\n            throw new Error('Invalid preset, please check your configuration');\n        }\n\n        return preset;\n    }\n\n    getPreset(preset) {\n        if (typeof preset === 'number') {\n            preset = this.getAt(preset);\n        }\n        if (typeof preset === 'string') {\n            preset = this.getById(preset);\n        }\n        else if (!(preset instanceof ViewPreset)) {\n            preset = this.createRecord(preset);\n        }\n        return preset;\n    }\n\n    /**\n     * Applies preset customizations or fetches a preset view preset using its name.\n     * @param {String|ViewPresetConfig} presetOrId Id of a predefined preset or a preset config object\n     * @returns {Scheduler.preset.ViewPreset} Resulting ViewPreset instance\n     */\n    normalizePreset(preset) {\n        const me = this;\n\n        if (!(preset instanceof ViewPreset)) {\n            if (typeof preset === 'string') {\n                preset = me.getPreset(preset);\n                if (!preset) {\n                    throw new Error('You must define a valid view preset. See PresetManager for reference');\n                }\n            }\n            else if (typeof preset === 'object') {\n                // Look up any existing ViewPreset that it is based upon.\n                if (preset.base) {\n                    const base = this.getById(preset.base);\n\n                    if (!base) {\n                        throw new Error(`ViewPreset base '${preset.base}' does not exist`);\n                    }\n                    // The config is based upon the base's data with the new config object merged in.\n                    preset = ObjectHelper.merge(ObjectHelper.clone(base.data), preset);\n                }\n\n                // Ensure the new ViewPreset has a legible, logical id which does not already\n                // exist in our store.\n                if (preset.id) {\n                    preset = me.createRecord(preset);\n                }\n                else {\n                    preset = me.createRecord(ObjectHelper.assign({}, preset));\n                    preset.id = preset.generateId(preset);\n                }\n            }\n        }\n\n        return preset;\n    }\n\n    /**\n     * Deletes a view preset\n     * @param {String} id The id of the preset, or the preset instance.\n     */\n    deletePreset(presetOrId) {\n        if (typeof presetOrId === 'string') {\n            presetOrId = this.getById(presetOrId);\n        }\n        else if (typeof presetOrId === 'number') {\n            presetOrId = this.getAt(presetOrId);\n        }\n\n        if (presetOrId) {\n            this.remove(presetOrId);\n\n            // ALso remove it from our base list\n            delete this.basePresets[presetOrId.id];\n        }\n    }\n}\n\nconst pm = new PresetManager();\n\nexport { pm as default };\n","import Store from '../../Core/data/Store.js';\nimport DH from '../../Core/helper/DateHelper.js';\nimport TimeSpan from '../model/TimeSpan.js';\nimport ViewPreset from '../preset/ViewPreset.js';\nimport PresetManager from '../preset/PresetManager.js';\n\n/**\n * @module Scheduler/data/TimeAxis\n */\n\n// Micro-optimized version of TimeSpan for faster reading. Hit a lot and since it is internal fields are guaranteed to\n// not be remapped and changes won't be batches, so we can always return raw value from data avoiding all additional\n// checks and logic\nclass Tick extends TimeSpan {\n    // Only getters on purpose, we do not support manipulating ticks\n\n    get startDate() {\n        return this.data.startDate;\n    }\n\n    get endDate() {\n        return this.data.endDate;\n    }\n}\n\n/**\n * A class representing the time axis of the scheduler. The scheduler timescale is based on the ticks generated by this\n * class. This is a pure \"data\" (model) representation of the time axis and has no UI elements.\n *\n * The time axis can be {@link #config-continuous} or not. In continuous mode, each timespan starts where the previous\n * ended, and in non-continuous mode there can be gaps between the ticks.\n * A non-continuous time axis can be used when want to filter out certain periods of time (like weekends) from the time\n * axis.\n *\n * To create a non-continuous time axis you have 2 options. First, you can create a time axis containing only the time\n * spans of interest. To do that, subclass this class and override the {@link #property-generateTicks} method.\n *\n * The other alternative is to call the {@link #function-filterBy} method, passing a function to it which should return\n * `false` if the time tick should be filtered out. Calling {@link Core.data.mixin.StoreFilter#function-clearFilters}\n * will return you to a full time axis.\n *\n * @extends Core/data/Store\n */\nexport default class TimeAxis extends Store {\n    //region Events\n\n    /**\n     * Fires before the timeaxis is about to be reconfigured (e.g. new start/end date or unit/increment). Return `false`\n     * to abort the operation.\n     * @event beforeReconfigure\n     * @param {Scheduler.data.TimeAxis} source The time axis instance\n     * @param {Date} startDate The new time axis start date\n     * @param {Date} endDate The new time axis end date\n     */\n\n    /**\n     * Event that is triggered when we end reconfiguring and everything UI-related should be done\n     * @event endReconfigure\n     * @private\n     */\n\n    /**\n     * Fires when the timeaxis has been reconfigured (e.g. new start/end date or unit/increment)\n     * @event reconfigure\n     * @param {Scheduler.data.TimeAxis} source The time axis instance\n     */\n\n    /**\n     * Fires if all the ticks in the timeaxis are filtered out. After firing the filter is temporarily disabled to\n     * return the time axis to a valid state. A disabled filter will be re-enabled the next time ticks are regenerated\n     * @event invalidFilter\n     * @param {Scheduler.data.TimeAxis} source The time axis instance\n     */\n\n    //endregion\n\n    //region Default config\n\n    static get defaultConfig() {\n        return {\n            modelClass : Tick,\n\n            /**\n             * Set to false if the timeline is not continuous, e.g. the next timespan does not start where the previous ended (for example skipping weekends etc).\n             * @config {Boolean}\n             * @default\n             */\n            continuous : true,\n\n            originalContinuous : null,\n\n            /**\n             * Include only certain hours or days in the time axis (makes it `continuous : false`). Accepts and object\n             * with `day` and `hour` properties:\n             * ```\n             * const scheduler = new Scheduler({\n             *     timeAxis : {\n             *         include : {\n             *              // Do not display hours after 17 or before 9 (only display 9 - 17). The `to´ value is not\n             *              // included in the time axis\n             *              hour : {\n             *                  from : 9,\n             *                  to   : 17\n             *              },\n             *              // Do not display sunday or saturday\n             *              day : [0, 6]\n             *         }\n             *     }\n             * }\n             * ```\n             * In most cases we recommend that you use Scheduler's workingTime config instead. It is easier to use and\n             * makes sure all parts of the Scheduler gets updated.\n             * @config {Object}\n             */\n            include : null,\n\n            /**\n             * Automatically adjust the timespan when generating ticks with {@link #property-generateTicks} according to\n             * the `viewPreset` configuration. Setting this to false may lead to shifting time/date of ticks.\n             * @config {Boolean}\n             * @default\n             */\n            autoAdjust : true,\n\n            //isConfigured : false,\n\n            // in case of `autoAdjust : false`, the 1st and last ticks can be truncated, containing only part of the normal tick\n            // these dates will contain adjusted start/end (like if the tick has not been truncated)\n            adjustedStart    : null,\n            adjustedEnd      : null,\n            // the visible position in the first tick, can actually be > 1 because the adjustment is done by the `mainUnit`\n            visibleTickStart : null,\n            // the visible position in the first tick, is always ticks count - 1 < value <= ticks count, in case of autoAdjust, always = ticks count\n            visibleTickEnd   : null,\n\n            tickCache : {},\n\n            viewPreset       : null,\n            maxTraverseTries : 100,\n            useRawData       : {\n                disableDuplicateIdCheck : true,\n                disableDefaultValue     : true,\n                disableTypeConversion   : true\n            }\n        };\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Method generating the ticks for this time axis. Should return an array of ticks. Each tick is an object of the following structure:\n             * ```\n             * {\n             *    startDate : ..., // start date\n             *    endDate   : ...  // end date\n             * }\n             * ```\n             * Take notice, that this function either has to be called with `start`/`end` parameters, or create those variables.\n             *\n             * To see it in action please check out our [TimeAxis](https://bryntum.com/products/scheduler/examples/timeaxis/) example and navigate to \"Compressed non-working time\" tab.\n             *\n             * @param {Date} axisStartDate The start date of the interval\n             * @param {Date} axisEndDate The end date of the interval\n             * @param {String} unit The unit of the time axis\n             * @param {Number} increment The increment for the unit specified.\n             * @returns {Array} ticks The ticks representing the time axis\n             * @config {Function}\n             */\n            generateTicks : null,\n\n            unit                : null,\n            increment           : null,\n            resolutionUnit      : null,\n            resolutionIncrement : null,\n            mainUnit            : null,\n            shiftUnit           : null,\n            shiftIncrement      : 1,\n            defaultSpan         : 1,\n\n            weekStartDay : null,\n\n            // Used to force resolution to match whole ticks, to snap accordingly when using fillTicks in the UI\n            forceFullTicks : null\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    // private\n    construct(config) {\n        const me = this;\n\n        super.construct(config);\n\n        me.originalContinuous = me.continuous;\n\n        me.ion({\n            change : ({ action }) => {\n                // If the change was due to filtering, there will be a refresh event\n                // arriving next, so do not reconfigure\n                if (action !== 'filter') {\n                    me.trigger('reconfigure', { supressRefresh : false });\n                }\n            },\n            refresh        : () => me.trigger('reconfigure', { supressRefresh : false }),\n            endreconfigure : event => me.trigger('reconfigure', event)\n        });\n\n        if (me.startDate) {\n            me.internalOnReconfigure();\n            me.trigger('reconfigure');\n        }\n        else if (me.viewPreset) {\n            const range  = me.getAdjustedDates(new Date());\n            me.startDate = range.startDate;\n            me.endDate   = range.endDate;\n        }\n    }\n\n    get isTimeAxis() {\n        return true;\n    }\n\n    //endregion\n\n    //region Configuration (reconfigure & consumePreset)\n\n    /**\n     * Reconfigures the time axis based on the config object supplied and generates the new 'ticks'.\n     * @param {Object} config\n     * @param {Boolean} [suppressRefresh]\n     * @private\n     */\n    reconfigure(config, suppressRefresh = false, preventThrow = false) {\n        const\n            me         = this,\n            normalized = me.getAdjustedDates(config.startDate, config.endDate),\n            oldConfig  = {};\n\n        if (me.trigger('beforeReconfigure', { startDate : normalized.startDate, endDate : normalized.endDate, config }) !== false) {\n            me.trigger('beginReconfigure');\n\n            me._configuredStartDate = config.startDate;\n            me._configuredEndDate   = config.endDate;\n\n            // Collect old values for end event\n            for (const propName in config) {\n                oldConfig[propName] = me[propName];\n            }\n\n            const viewPresetChanged = config.viewPreset && config.viewPreset !== me.viewPreset;\n\n            // If changing viewPreset, try to gracefully recover if an applied filter results in an empty view\n            if (viewPresetChanged) {\n                preventThrow = me.isFiltered;\n\n                me.filters.forEach(f => f.disabled = false);\n            }\n            Object.assign(me, config);\n\n            if (me.internalOnReconfigure(preventThrow, viewPresetChanged) === false) {\n                return false;\n            }\n\n            me.trigger('endReconfigure', { suppressRefresh, config, oldConfig });\n        }\n    }\n\n    internalOnReconfigure(preventThrow = false, viewPresetChanged) {\n        const me = this;\n\n        me.isConfigured = true;\n\n        const\n            adjusted   = me.getAdjustedDates(me.startDate, me.endDate, true),\n            normalized = me.getAdjustedDates(me.startDate, me.endDate),\n            start      = normalized.startDate,\n            end        = normalized.endDate;\n\n        if (start >= end) {\n            throw new Error(`Invalid start/end dates. Start date must be less than end date. Start date: ${start}. End date: ${end}.`);\n        }\n\n        const\n            { unit, increment = 1 } = me,\n            ticks                   = me.generateTicks(start, end, unit, increment);\n\n        // Suspending to be able to detect an invalid filter\n        me.suspendEvents();\n        me.maintainFilter = preventThrow;\n        me.data           = ticks;\n        me.maintainFilter = false;\n\n        const { count } = me;\n\n        if (count === 0) {\n            if (preventThrow) {\n                if (viewPresetChanged) {\n                    me.disableFilters();\n                }\n                me.resumeEvents();\n                return false;\n            }\n            throw new Error('Invalid time axis configuration or filter, please check your input data.');\n        }\n\n        // start date is cached, update it to fill after generated ticks\n        me.startDate = me.first.startDate;\n        me.endDate   = me.last.endDate;\n\n        me.resumeEvents();\n\n        if (me.isContinuous) {\n            me.adjustedStart = adjusted.startDate;\n            me.adjustedEnd   = DH.getNext(count > 1 ? ticks[count - 1].startDate : adjusted.startDate, unit, increment, me.weekStartDay);\n        }\n        else {\n            me.adjustedStart = me.startDate;\n            me.adjustedEnd   = me.endDate;\n        }\n\n        me.updateVisibleTickBoundaries();\n\n        me.updateTickCache(true);\n    }\n\n    updateVisibleTickBoundaries() {\n        const\n            me = this,\n            {\n                count,\n                unit,\n                startDate,\n                endDate,\n                weekStartDay,\n                increment = 1\n            }  = me;\n\n        // Denominator is amount of milliseconds in a full tick (unit * increment). Normally we use 30 days in a month\n        // and 365 days in a year. But if month is 31 day long or year is a leap one standard formula might calculate\n        // wrong value. e.g. if we're rendering 1 day from August, formula goes like (2021-08-31 - 2021-08-02) / 30 = 1\n        // and renders full tick which is incorrect. For such cases we need to adjust denominator to a correct one.\n        // Thankfully there are only a few of them - month, year and day with DST transition.\n        const\n            startDenominator = DH.getNormalizedUnitDuration(startDate, unit) * increment,\n            endDenominator   = DH.getNormalizedUnitDuration(endDate, unit) * increment;\n\n        // if visibleTickStart > 1 this means some tick is fully outside of the view - we are not interested in it and want to\n        // drop it and adjust \"adjustedStart\" accordingly\n        do {\n            me.visibleTickStart = (startDate - me.adjustedStart) / startDenominator;\n\n            // <remove-on-release>\n            // TODO: Changed from round to floor which seems to work, but this is not needed in ExtScheduler. Need to step and see what is different\n            // </remove-on-release>\n            if (me.autoAdjust) me.visibleTickStart = Math.floor(me.visibleTickStart);\n\n            if (me.visibleTickStart >= 1) me.adjustedStart = DH.getNext(me.adjustedStart, unit, increment, weekStartDay);\n        } while (me.visibleTickStart >= 1);\n\n        do {\n            me.visibleTickEnd = count - (me.adjustedEnd - endDate) / endDenominator;\n\n            if (count - me.visibleTickEnd >= 1) me.adjustedEnd = DH.getNext(me.adjustedEnd, unit, -1, weekStartDay);\n        } while (count - me.visibleTickEnd >= 1);\n\n        // This flag indicates that the time axis starts exactly on a tick boundary and finishes on a tick boundary\n        // This is used as an optimization flag by TimeAxisViewModel.createHeaderRow\n        me.fullTicks = !me.visibleTickStart && me.visibleTickEnd === count;\n    }\n\n    /**\n     * Get the currently used time unit for the ticks\n     * @readonly\n     * @member {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} unit\n     */\n\n    /**\n     * Get/set currently used preset\n     * @property {Scheduler.preset.ViewPreset}\n     */\n    get viewPreset() {\n        return this._viewPreset;\n    }\n\n    set viewPreset(preset) {\n        const me = this;\n\n        preset = PresetManager.getPreset(preset);\n\n        if (!(preset instanceof ViewPreset)) {\n            throw new Error('TimeAxis must be configured with the ViewPreset instance that the Scheduler is using');\n        }\n\n        me._viewPreset = preset;\n\n        Object.assign(me, {\n            unit      : preset.bottomHeader.unit,\n            increment : preset.bottomHeader.increment || 1,\n\n            resolutionUnit      : preset.timeResolution.unit,\n            resolutionIncrement : preset.timeResolution.increment,\n\n            mainUnit       : preset.mainHeader.unit,\n            shiftUnit      : preset.shiftUnit || preset.mainHeader.unit,\n            shiftIncrement : preset.shiftIncrement || 1,\n\n            defaultSpan : preset.defaultSpan || 1,\n            presetName  : preset.id,\n\n            // Weekview columns are updated upon 'datachanged' event on this object.\n            // We have to pass headers in order to render them correctly (timeAxisViewModel is incorrect in required time)\n            headers : preset.headers\n        });\n    }\n\n    //endregion\n\n    //region Getters & setters\n\n    get weekStartDay() {\n        return this._weekStartDay ?? DH.weekStartDay;\n    }\n\n    // private\n    get resolution() {\n        return {\n            unit      : this.resolutionUnit,\n            increment : this.resolutionIncrement\n        };\n    }\n\n    // private\n    set resolution(resolution) {\n        this.resolutionUnit      = resolution.unit;\n        this.resolutionIncrement = resolution.increment;\n    }\n\n    get resolutionUnit() {\n        return this.forceFullTicks ? this.unit : this._resolutionUnit;\n    }\n\n    get resolutionIncrement() {\n        return this.forceFullTicks ? this.increment : this._resolutionIncrement;\n    }\n\n    //endregion\n\n    //region Timespan & resolution\n\n    /**\n     * Changes the time axis timespan to the supplied start and end dates.\n     *\n     * **Note** This does **not** preserve the temporal scroll position. You may use\n     * {@link Scheduler.view.Scheduler#function-setTimeSpan} to set the time axis and\n     * maintain temporal scroll position (if possible).\n     * @param {Date} newStartDate The new start date\n     * @param {Date} [newEndDate] The new end date\n     */\n    setTimeSpan(newStartDate, newEndDate, preventThrow = false) {\n        // If providing a 0 span range, add default range\n        if (newEndDate && newStartDate - newEndDate === 0) {\n            newEndDate = null;\n        }\n\n        const\n            me                     = this,\n            { startDate, endDate } = me.getAdjustedDates(newStartDate, newEndDate);\n\n        if (me.startDate - startDate !== 0 || me.endDate - endDate !== 0) {\n            return me.reconfigure({\n                startDate,\n                endDate\n            }, false, preventThrow);\n        }\n    }\n\n    /**\n     * Moves the time axis by the passed amount and unit.\n     *\n     * NOTE: When using a filtered TimeAxis the result of `shift()` cannot be guaranteed, it might shift into a\n     * filtered out span. It tries to be smart about it by shifting from unfiltered start and end dates.\n     * If that solution does not work for your filtering setup, please call {@link #function-setTimeSpan} directly\n     * instead.\n     *\n     * @param {Number} amount The number of units to jump\n     * @param {String} [unit] The unit (Day, Week etc)\n     */\n    shift(amount, unit = this.shiftUnit) {\n        const me = this;\n\n        let { startDate, endDate } = me;\n\n        // Use unfiltered start and end dates when shifting a filtered time axis, to lessen risk of messing it up.\n        // Still not guaranteed to work though\n        if (me.isFiltered) {\n            startDate = me.allRecords[0].startDate;\n            endDate   = me.allRecords[me.allCount - 1].endDate;\n        }\n\n        // Hack for filtered time axis, for example if weekend is filtered out and you shiftPrev() day from monday\n        let tries = 0;\n        do {\n            startDate = DH.add(startDate, amount, unit);\n            endDate   = DH.add(endDate, amount, unit);\n        } while (tries++ < me.maxTraverseTries && me.setTimeSpan(startDate, endDate, {\n            preventThrow : true\n        }) === false);\n    }\n\n    /**\n     * Moves the time axis forward in time in units specified by the view preset `shiftUnit`, and by the amount specified by the `shiftIncrement`\n     * config of the current view preset.\n     *\n     * NOTE: When using a filtered TimeAxis the result of `shiftNext()` cannot be guaranteed, it might shift into a\n     * filtered out span. It tries to be smart about it by shifting from unfiltered start and end dates.\n     * If that solution does not work for your filtering setup, please call {@link #function-setTimeSpan} directly\n     * instead.\n     *\n     * @param {Number} [amount] The number of units to jump forward\n     */\n    shiftNext(amount = this.shiftIncrement) {\n        this.shift(amount);\n    }\n\n    /**\n     * Moves the time axis backward in time in units specified by the view preset `shiftUnit`, and by the amount specified by the `shiftIncrement` config of the current view preset.\n     *\n     * NOTE: When using a filtered TimeAxis the result of `shiftPrev()` cannot be guaranteed, it might shift into a\n     * filtered out span. It tries to be smart about it by shifting from unfiltered start and end dates.\n     * If that solution does not work for your filtering setup, please call {@link #function-setTimeSpan} directly\n     * instead.\n     *\n     * @param {Number} [amount] The number of units to jump backward\n     */\n    shiftPrevious(amount = this.shiftIncrement) {\n        this.shift(-amount);\n    }\n\n    //endregion\n\n    //region Filter & continuous\n\n    /**\n     * Filter the time axis by a function (and clears any existing filters first). The passed function will be called with each tick in time axis.\n     * If the function returns `true`, the 'tick' is included otherwise it is filtered. If all ticks are filtered out\n     * the time axis is considered invalid, triggering `invalidFilter` and then removing the filter.\n     * @param {Function} fn The function to be called, it will receive an object with `startDate`/`endDate` properties, and `index` of the tick.\n     * @param {Object} [thisObj] `this` reference for the function\n     * @typings {Promise<any|null>}\n     */\n    filterBy(fn, thisObj = this) {\n        const me = this;\n\n        me.filters.clear();\n\n        super.filterBy((tick, index) => fn.call(thisObj, tick.data, index));\n    }\n\n    filter() {\n        const\n            me     = this,\n            retVal = super.filter(...arguments);\n\n        if (!me.maintainFilter && me.count === 0) {\n            me.resumeEvents();\n            me.trigger('invalidFilter');\n            me.disableFilters();\n        }\n\n        return retVal;\n    }\n\n    disableFilters() {\n        this.filters.forEach(f => f.disabled = true);\n\n        this.filter();\n    }\n\n    triggerFilterEvent(event) {\n        const me = this;\n\n        if (!event.filters.count) {\n            me.continuous = me.originalContinuous;\n        }\n        else {\n            me.continuous = false;\n        }\n\n        // Filters has been applied (or cleared) but listeners are not informed yet, update tick cache to have start and\n        // end dates correct when later redrawing events & header\n        me.updateTickCache();\n\n        super.triggerFilterEvent(event);\n    }\n\n    /**\n     * Returns `true` if the time axis is continuous (will return `false` when filtered)\n     * @property {Boolean}\n     */\n    get isContinuous() {\n        return this.continuous !== false && !this.isFiltered;\n    }\n\n    //endregion\n\n    //region Dates\n\n    getAdjustedDates(startDate, endDate, forceAdjust = false) {\n        const me = this;\n\n        // If providing a 0 span range, add default range\n        if (endDate && startDate - endDate === 0) {\n            endDate = null;\n        }\n\n        startDate = startDate || me.startDate;\n        endDate   = endDate || DH.add(startDate, me.defaultSpan, me.mainUnit);\n\n        return me.autoAdjust || forceAdjust ? {\n            startDate : me.floorDate(startDate, false, me.autoAdjust ? me.mainUnit : me.unit, 1),\n            endDate   : me.ceilDate(endDate, false, me.autoAdjust ? me.mainUnit : me.unit, 1)\n        } : {\n            startDate,\n            endDate\n        };\n    }\n\n    /**\n     * Method to get the current start date of the time axis.\n     * @property {Date}\n     */\n    get startDate() {\n        // <remove-on-release>\n        // TODO: added _start as caching, might mess something up when reconfiguring? change here if tests fail\n        // </remove-on-release>\n        return this._start || (this.first ? new Date(this.first.startDate) : null);\n    }\n\n    set startDate(start) {\n        this._start = DH.parse(start);\n    }\n\n    /**\n     * Method to get a the current end date of the time axis\n     * @property {Date}\n     */\n    get endDate() {\n        return this._end || (this.last ? new Date(this.last.endDate) : null);\n    }\n\n    set endDate(end) {\n        if (end) this._end = DH.parse(end);\n    }\n\n    // used in performance critical code for comparisons\n    get startMS() {\n        return this._startMS;\n    }\n\n    // used in performance critical code for comparisons\n    get endMS() {\n        return this._endMS;\n    }\n\n    // Floors a date and optionally snaps it to one of the following resolutions:\n    // 1. 'resolutionUnit'. If param 'resolutionUnit' is passed, the date will simply be floored to this unit.\n    // 2. If resolutionUnit is not passed: If date should be snapped relative to the timeaxis start date,\n    // the resolutionUnit of the timeAxis will be used, or the timeAxis 'mainUnit' will be used to snap the date\n    //\n    // returns a copy of the original date\n    // private\n    floorDate(date, relativeToStart, resolutionUnit, incr) {\n        relativeToStart = relativeToStart !== false;\n\n        const\n            me         = this,\n            relativeTo = relativeToStart ? DH.clone(me.startDate) : null,\n            increment  = incr || me.resolutionIncrement,\n            unit       = resolutionUnit || (relativeToStart ? me.resolutionUnit : me.mainUnit),\n            snap       = (value, increment) => Math.floor(value / increment) * increment;\n\n        if (relativeToStart) {\n            const snappedDuration = snap(DH.diff(relativeTo, date, unit), increment);\n            // <remove-on-release>\n            // TODO: used to be small unit multiplied with factor (minute = seconds, minutes * 60)\n            // </remove-on-release>\n            return DH.add(relativeTo, snappedDuration, unit, false);\n        }\n\n        const dt = DH.clone(date);\n\n        if (unit === 'week') {\n            const\n                day      = dt.getDay() || 7,\n                startDay = me.weekStartDay || 7;\n\n            DH.add(DH.startOf(dt, 'day', false), day >= startDay ? startDay - day : -(7 - startDay + day), 'day', false);\n\n            // Watch out for Brazil DST craziness (see test 028_timeaxis_dst.t.js)\n            if (dt.getDay() !== startDay && dt.getHours() === 23) {\n                DH.add(dt, 1, 'hour', false);\n            }\n        }\n        else {\n            // removes \"smaller\" units from date (for example minutes; removes seconds and milliseconds)\n            DH.startOf(dt, unit, false);\n\n            // day and year are 1-based so need to make additional adjustments\n            const\n                modifier     = ['day', 'year'].includes(unit) ? 1 : 0,\n                useUnit      = unit === 'day' ? 'date' : unit,\n                snappedValue = snap(DH.get(dt, useUnit) - modifier, increment) + modifier;\n\n            DH.set(dt, useUnit, snappedValue);\n        }\n\n        return dt;\n    }\n\n    /**\n     * Rounds the date to nearest unit increment\n     * @private\n     */\n    roundDate(date, relativeTo, resolutionUnit = this.resolutionUnit, increment = this.resolutionIncrement || 1) {\n        const\n            me = this,\n            dt = DH.clone(date);\n\n        relativeTo = DH.clone(relativeTo || me.startDate);\n\n        switch (resolutionUnit) {\n            case 'week': {\n                DH.startOf(dt, 'day', false);\n\n                let distanceToWeekStartDay = dt.getDay() - me.weekStartDay,\n                    toAdd;\n\n                if (distanceToWeekStartDay < 0) {\n                    distanceToWeekStartDay = 7 + distanceToWeekStartDay;\n                }\n\n                if (Math.round(distanceToWeekStartDay / 7) === 1) {\n                    toAdd = 7 - distanceToWeekStartDay;\n                }\n                else {\n                    toAdd = -distanceToWeekStartDay;\n                }\n\n                return DH.add(dt, toAdd, 'day', false);\n            }\n\n            case 'month': {\n                const\n                    nbrMonths     = DH.diff(relativeTo, dt, 'month') + DH.as('month', dt.getDay() / DH.daysInMonth(dt)), //*/DH.as('month', DH.diff(relativeTo, dt)) + (dt.getDay() / DH.daysInMonth(dt)),\n                    snappedMonths = Math.round(nbrMonths / increment) * increment;\n                return DH.add(relativeTo, snappedMonths, 'month', false);\n            }\n\n            case 'quarter':\n                DH.startOf(dt, 'month', false);\n                return DH.add(dt, 3 - (dt.getMonth() % 3), 'month', false);\n\n            default: {\n                const\n                    duration        = DH.as(resolutionUnit, DH.diff(relativeTo, dt)),\n                    // Need to find the difference of timezone offsets between relativeTo and original dates. 0 if timezone offsets are the same.\n                    offset          = DH.as(resolutionUnit, relativeTo.getTimezoneOffset() - dt.getTimezoneOffset(), 'minute'),\n                    // Need to add the offset to the whole duration, so the divided value will take DST into account\n                    snappedDuration = Math.round((duration + offset) / increment) * increment;\n\n                // <remove-on-release>\n                // TODO: used to add one res unit lower * factor, minutes = add seconds, minutes * 60\n                // </remove-on-release>\n                // Now when the round is done, we need to subtract the offset, so the result also will take DST into account\n                return DH.add(relativeTo, snappedDuration - offset, resolutionUnit, false);\n            }\n        }\n    }\n\n    // private\n    ceilDate(date, relativeToStart, resolutionUnit, increment) {\n        const me = this;\n\n        relativeToStart = relativeToStart !== false;\n        increment       = increment || (relativeToStart ? me.resolutionIncrement : 1);\n\n        const\n            unit = resolutionUnit || (relativeToStart ? me.resolutionUnit : me.mainUnit),\n            dt   = DH.clone(date);\n\n        let doCall = false;\n\n        switch (unit) {\n            case 'minute':\n                doCall = !DH.isStartOf(dt, 'minute');\n                break;\n\n            case 'hour':\n                doCall = !DH.isStartOf(dt, 'hour');\n                break;\n\n            case 'day':\n            case 'date':\n                doCall = !DH.isStartOf(dt, 'day');\n                break;\n\n            case 'week':\n                DH.startOf(dt, 'day', false);\n                doCall = (dt.getDay() !== me.weekStartDay || !DH.isEqual(dt, date));\n                break;\n\n            case 'month':\n                DH.startOf(dt, 'day', false);\n                doCall = (dt.getDate() !== 1 || !DH.isEqual(dt, date));\n                break;\n\n            case 'quarter':\n                DH.startOf(dt, 'day', false);\n                doCall = (dt.getMonth() % 3 !== 0 || dt.getDate() !== 1 || !DH.isEqual(dt, date));\n                break;\n\n            case 'year':\n                DH.startOf(dt, 'day', false);\n                doCall = (dt.getMonth() !== 0 || dt.getDate() !== 1 || !DH.isEqual(dt, date));\n                break;\n        }\n\n        if (doCall) {\n            return DH.getNext(dt, unit, increment, me.weekStartDay);\n        }\n\n        return dt;\n    }\n\n    //endregion\n\n    //region Ticks\n\n    get include() {\n        return this._include;\n    }\n\n    set include(include) {\n        const me = this;\n\n        me._include   = include;\n        me.continuous = !include;\n\n        if (!me.isConfiguring) {\n            me.startDate = me._configuredStartDate;\n            me.endDate   = me._configuredEndDate;\n            me.internalOnReconfigure();\n            me.trigger('includeChange');\n        }\n    }\n\n    // Check if a certain date is included based on timeAxis.include rules\n    processExclusion(startDate, endDate, unit) {\n        const { include } = this;\n\n        if (include) {\n            return Object.entries(include).some(([includeUnit, rule]) => {\n\n                if (!rule) {\n                    return false;\n                }\n\n                const { from, to } = rule;\n\n                // Including the closest smaller unit with a { from, to} rule should affect start & end of the\n                // generated tick. Currently only works for days or smaller.\n                if (DH.compareUnits('day', unit) >= 0 && DH.getLargerUnit(includeUnit) === unit) {\n                    if (from) {\n                        DH.set(startDate, includeUnit, from);\n                    }\n\n                    if (to) {\n                        let stepUnit = unit;\n                        // Stepping back base on date, not day\n                        if (unit === 'day') {\n                            stepUnit = 'date';\n                        }\n                        // Since endDate is not inclusive it points to the next day etc.\n                        // Turns for example 2019-01-10T00:00 -> 2019-01-09T18:00\n                        DH.set(endDate, {\n                            [stepUnit]    : DH.get(endDate, stepUnit) - 1,\n                            [includeUnit] : to\n                        });\n                    }\n                }\n\n                // \"Greater\" unit being included? Then we need to care about it\n                // (for example excluding day will also affect hour, minute etc)\n                if (DH.compareUnits(includeUnit, unit) >= 0) {\n                    const datePart = (includeUnit === 'day' ? startDate.getDay() : DH.get(startDate, includeUnit));\n\n                    if ((from && datePart < from) || (to && datePart >= to)) {\n                        return true;\n                    }\n                }\n            });\n        }\n\n        return false;\n    }\n\n    // Calculate constants used for exclusion when scaling within larger ticks\n    initExclusion() {\n        Object.entries(this.include).forEach(([unit, rule]) => {\n            if (rule) {\n                const { from, to } = rule;\n\n                // For example for hour:\n                // 1. Get the next bigger unit -> day, get ratio -> 24\n                // 2. to 20 - from 8 = 12 hours visible each day. lengthFactor 24 / 12 = 2 means that each hour used\n                // needs to represent 2 hours when drawn (to stretch)\n                // |    ████    | -> |  ████████  |\n                rule.lengthFactor = DH.getUnitToBaseUnitRatio(unit, DH.getLargerUnit(unit)) / (to - from);\n                // <remove-on-release>\n                // TODO: Since `to` is exclusive this should be the correct one... but cannot get it to work throughout\n                // </remove-on-release>\n                rule.lengthFactorExcl = DH.getUnitToBaseUnitRatio(unit, DH.getLargerUnit(unit)) / (to - from - 1);\n\n                // Calculate weighted center to stretch around |   ██x█ |\n                rule.center = from + from / (rule.lengthFactor - 1);\n            }\n        });\n    }\n\n    /**\n     * Method generating the ticks for this time axis. Should return an array of ticks. Each tick is an object of the following structure:\n     * ```\n     * {\n     *    startDate : ..., // start date\n     *    endDate   : ...  // end date\n     * }\n     * ```\n     * Take notice, that this function either has to be called with `start`/`end` parameters, or create those variables.\n     *\n     * To see it in action please check out our [TimeAxis](https://bryntum.com/products/scheduler/examples/timeaxis/) example and navigate to \"Compressed non-working time\" tab.\n     *\n     * @member {Function} generateTicks\n     * @param {Date} axisStartDate The start date of the interval\n     * @param {Date} axisEndDate The end date of the interval\n     * @param {String} unit The unit of the time axis\n     * @param {Number} increment The increment for the unit specified.\n     * @returns {Array} ticks The ticks representing the time axis\n     */\n\n    updateGenerateTicks() {\n        if (!this.isConfiguring) {\n            this.reconfigure(this);\n        }\n    }\n\n    _generateTicks(axisStartDate, axisEndDate, unit = this.unit, increment = this.increment) {\n        const\n            me            = this,\n            ticks         = [],\n            usesExclusion = Boolean(me.include);\n\n        let intervalEnd,\n            tickEnd,\n            isExcluded,\n            dstDiff                = 0,\n            { startDate, endDate } = me.getAdjustedDates(axisStartDate, axisEndDate);\n\n        me.tickCache = {};\n\n        if (usesExclusion) {\n            me.initExclusion();\n        }\n\n        while (startDate < endDate) {\n            intervalEnd = DH.getNext(startDate, unit, increment, me.weekStartDay);\n\n            if (!me.autoAdjust && intervalEnd > endDate) {\n                intervalEnd = endDate;\n            }\n\n            // Handle hourly increments crossing DST boundaries to keep the timescale looking correct\n            // Only do this for HOUR resolution currently, and only handle it once per tick generation.\n            if (unit === 'hour' && increment > 1 && ticks.length > 0 && dstDiff === 0) {\n                const prev = ticks[ticks.length - 1];\n\n                dstDiff = ((prev.startDate.getHours() + increment) % 24) - prev.endDate.getHours();\n\n                if (dstDiff !== 0) {\n                    // A DST boundary was crossed in previous tick, adjust this tick to keep timeaxis \"symmetric\".\n                    intervalEnd = DH.add(intervalEnd, dstDiff, 'hour');\n                }\n            }\n\n            isExcluded = false;\n\n            if (usesExclusion) {\n                tickEnd    = new Date(intervalEnd.getTime());\n                isExcluded = me.processExclusion(startDate, intervalEnd, unit);\n            }\n            else {\n                tickEnd = intervalEnd;\n            }\n\n            if (!isExcluded) {\n                ticks.push({\n                    id      : (ticks.length + 1),\n                    startDate,\n                    endDate : intervalEnd\n                });\n                me.tickCache[startDate.getTime()] = ticks.length - 1;\n            }\n\n            startDate = tickEnd;\n        }\n\n        return ticks;\n    }\n\n    /**\n     * How many ticks are visible across the TimeAxis.\n     *\n     * Usually, this is an integer because {@link #config-autoAdjust} means that the start and end\n     * dates are adjusted to be on tick boundaries.\n     * @property {Number}\n     * @internal\n     */\n    get visibleTickTimeSpan() {\n        const me = this;\n        return me.isContinuous ? me.visibleTickEnd - me.visibleTickStart : me.count;\n    }\n\n    /**\n     * Gets a tick \"coordinate\" representing the date position on the time scale. Returns -1 if the date is not part of the time axis.\n     * @param {Date} date the date\n     * @returns {Number} the tick position on the scale or -1 if the date is not part of the time axis\n     */\n    getTickFromDate(date) {\n        const\n            me     = this,\n            ticks  = me.records,\n            dateMS = date.getTime?.() ?? date;\n\n        let begin = 0,\n            end   = ticks.length - 1,\n            middle, tick, tickStart, tickEnd;\n\n        // Quickly eliminate out of range dates or if we have not been set up with a time range yet\n        if (!ticks.length || dateMS < ticks[0].startDateMS || dateMS > ticks[end].endDateMS) {\n            return -1;\n        }\n        if (me.isContinuous) {\n            // <remove-on-release>\n            // TODO: This is the code from ExtScheduler, it is a calculation without iteration so it should perform better,\n            //  we should consider using it...\n            // if (date - ticks[0].startDate === 0) return this.visibleTickStart;\n            // if (date - ticks[end].endDate === 0) return this.visibleTickEnd;\n            //\n            // const { adjustedStart, adjustedEnd }     = this;\n            //\n            // let tickIndex       = Math.floor(ticks.length * (date - adjustedStart) / (adjustedEnd - adjustedStart));\n            //\n            // // for the date == adjustedEnd case\n            // if (tickIndex > end) {\n            //     tickIndex = end;\n            // }\n            //\n            // const tickStart           = tickIndex === 0 ? adjustedStart : ticks[tickIndex].startDate;\n            // const tickEnd             = tickIndex === end ? adjustedEnd : ticks[tickIndex].endDate;\n            //\n            // tick                = tickIndex + (date - tickStart) / (tickEnd - tickStart);\n            //\n            // // in case of `autoAdjust : false` the actual visible timespan starts not from 0 tick coordinate, but\n            // // from `visibleTickStart` coordinate, this check generally repeats the \"quick bailout\" check in the beginning of the method,\n            // // but still\n            // if (tick < this.visibleTickStart || tick > this.visibleTickEnd) {\n            //     return -1;\n            // }\n            //\n            // return tick;\n            // </remove-on-release>\n\n            // Chop tick cache in half until we find a match\n            while (begin < end) {\n                middle = (begin + end + 1) >> 1;\n                if (dateMS > ticks[middle].endDateMS) {\n                    begin = middle + 1;\n                }\n                else if (dateMS < ticks[middle].startDateMS) {\n                    end = middle - 1;\n                }\n                else {\n                    begin = middle;\n                }\n            }\n            tick      = ticks[begin];\n            tickStart = tick.startDateMS;\n\n            // Part way though, calculate the fraction\n            if (dateMS > tickStart) {\n                tickEnd = tick.endDateMS;\n                begin += (dateMS - tickStart) / (tickEnd - tickStart);\n            }\n\n            return Math.min(Math.max(begin, me.visibleTickStart), me.visibleTickEnd);\n        }\n        else {\n            for (let i = 0; i <= end; i++) {\n                tickEnd = ticks[i].endDateMS;\n\n                if (dateMS <= tickEnd) {\n                    tickStart = ticks[i].startDateMS;\n\n                    // date < tickStart can occur in filtered case\n                    tick = i + (dateMS > tickStart ? (dateMS - tickStart) / (tickEnd - tickStart) : 0);\n\n                    return tick;\n                }\n            }\n        }\n\n    }\n\n    getSnappedTickFromDate(date) {\n        const\n            startTickIdx = Math.floor(this.getTickFromDate(date));\n        return this.getAt(startTickIdx);\n    }\n\n    /**\n     * Gets the time represented by a tick \"coordinate\".\n     * @param {Number} tick the tick \"coordinate\"\n     * @param {'floor'|'round'|'ceil'} [roundingMethod] Rounding method to use. 'floor' to take the tick (lowest header\n     * in a time axis) start date, 'round' to round the value to nearest increment or 'ceil' to take the tick end date\n     * @returns {Date} The date to represented by the tick \"coordinate\", or null if invalid.\n     */\n    getDateFromTick(tick, roundingMethod) {\n        const me = this;\n\n        if (tick === me.visibleTickEnd) {\n            return me.endDate;\n        }\n\n        const\n            wholeTick = Math.floor(tick),\n            fraction  = tick - wholeTick,\n            t         = me.getAt(wholeTick);\n\n        if (!t) {\n            return null;\n        }\n\n        const\n            // if we've filtered timeaxis using filterBy, then we cannot trust to adjustedStart property and should use tick start\n            start = wholeTick === 0 && me.isContinuous ? me.adjustedStart : t.startDate,\n            // if we've filtered timeaxis using filterBy, then we cannot trust to adjustedEnd property and should use tick end\n            end   = (wholeTick === me.count - 1) && me.isContinuous ? me.adjustedEnd : t.endDate;\n\n        let date = DH.add(start, fraction * (end - start), 'millisecond');\n\n        if (roundingMethod) {\n            date = me[roundingMethod + 'Date'](date);\n        }\n\n        return date;\n    }\n\n    /**\n     * Returns the ticks of the timeaxis in an array of objects with a \"startDate\" and \"endDate\".\n     * @property {Scheduler.model.TimeSpan[]}\n     */\n    get ticks() {\n        return this.records;\n    }\n\n    /**\n     * Caches ticks and start/end dates for faster processing during rendering of events.\n     * @private\n     */\n    updateTickCache(onlyStartEnd = false) {\n        const me = this;\n\n        if (me.count) {\n            me._start   = me.first.startDate;\n            me._end     = me.last.endDate;\n            me._startMS = me.startDate.getTime();\n            me._endMS   = me.endDate.getTime();\n        }\n        else {\n            me._start = me._end = me._startMs = me._endMS = null;\n        }\n\n        // onlyStartEnd is true prior to clearing filters, to get start and end dates correctly during that process.\n        // No point in filling tickCache yet in that case, it will be done after the filters are cleared\n        if (!onlyStartEnd) {\n            me.tickCache = {};\n            me.forEach((tick, i) => me.tickCache[tick.startDate.getTime()] = i);\n        }\n    }\n\n    //endregion\n\n    //region Axis\n\n    /**\n     * Returns true if the passed date is inside the span of the current time axis.\n     * @param {Date} date The date to query for\n     * @returns {Boolean} true if the date is part of the time axis\n     */\n    dateInAxis(date, inclusiveEnd = false) {\n        const\n            me        = this,\n            axisStart = me.startDate,\n            axisEnd   = me.endDate;\n\n        // Date is between axis start/end and axis is not continuous - need to perform better lookup\n        if (me.isContinuous) {\n            return inclusiveEnd ? DH.betweenLesserEqual(date, axisStart, axisEnd) : DH.betweenLesser(date, axisStart, axisEnd);\n        }\n        else {\n            const length = me.getCount();\n\n            let tickStart, tickEnd, tick;\n\n            for (let i = 0; i < length; i++) {\n                tick      = me.getAt(i);\n                tickStart = tick.startDate;\n                tickEnd   = tick.endDate;\n\n                if ((inclusiveEnd && date <= tickEnd) || (!inclusiveEnd && date < tickEnd)) {\n                    return date >= tickStart;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Returns true if the passed timespan is part of the current time axis (in whole or partially).\n     * @param {Date} start The start date\n     * @param {Date} end The end date\n     * @returns {Boolean} true if the timespan is part of the timeaxis\n     */\n    timeSpanInAxis(start, end) {\n        const me = this;\n\n        if (!end || end.getTime() === start.getTime()) {\n            return this.dateInAxis(start, true);\n        }\n\n        if (me.isContinuous) {\n            return DH.intersectSpans(start, end, me.startDate, me.endDate);\n        }\n\n        return (start < me.startDate && end > me.endDate) || me.getTickFromDate(start) !== me.getTickFromDate(end);\n    }\n\n    // Accepts a TimeSpan model (uses its cached MS values to be a bit faster during rendering)\n    isTimeSpanInAxis(timeSpan) {\n        const\n            me                         = this,\n            { startMS, endMS }         = me,\n            { startDateMS }            = timeSpan,\n            endDateMS                  = timeSpan.endDateMS ?? timeSpan.meta.endDateCached;\n\n        // only consider fully scheduled ranges\n        if (!startDateMS || !endDateMS) return false;\n\n        if (endDateMS === startDateMS) {\n            return me.dateInAxis(timeSpan.startDate, true);\n        }\n\n        if (me.isContinuous) {\n            return endDateMS > startMS && startDateMS < endMS;\n        }\n\n        const\n            startTick = me.getTickFromDate(timeSpan.startDate),\n            endTick   = me.getTickFromDate(timeSpan.endDate);\n\n        // endDate is not inclusive\n        // <remove-on-release>\n        // TODO: Handle in getTickFromDate() somehow?\n        // </remove-on-release>\n        if (\n            (startTick === me.count && DH.isEqual(timeSpan.startDate, me.last.endDate)) ||\n            (endTick === 0 && DH.isEqual(timeSpan.endDate, me.first.startDate))\n        ) {\n            return false;\n        }\n\n        return (\n            // Spanning entire axis\n            (startDateMS < startMS && endDateMS > endMS) ||\n            // Unintentionally 0 wide (ticks excluded or outside)\n            startTick !== endTick\n        );\n    }\n\n    //endregion\n\n    //region Iteration\n\n    /**\n     * Calls the supplied iterator function once per interval. The function will be called with four parameters, startDate endDate, index, isLastIteration.\n     * @internal\n     * @param {String} unit The unit to use when iterating over the timespan\n     * @param {Number} increment The increment to use when iterating over the timespan\n     * @param {Function} iteratorFn The function to call\n     * @param {Object} [thisObj] `this` reference for the function\n     */\n    forEachAuxInterval(unit, increment = 1, iteratorFn, thisObj = this) {\n        const end = this.endDate;\n\n        let dt = this.startDate,\n            i  = 0,\n            intervalEnd;\n\n        if (dt > end) throw new Error('Invalid time axis configuration');\n\n        while (dt < end) {\n            intervalEnd = DH.min(DH.getNext(dt, unit, increment, this.weekStartDay), end);\n            iteratorFn.call(thisObj, dt, intervalEnd, i, intervalEnd >= end);\n            dt = intervalEnd;\n            i++;\n        }\n    }\n\n    //endregion\n}\n","import DH from '../../../Core/helper/DateHelper.js';\nimport Events from '../../../Core/mixin/Events.js';\nimport PresetManager from '../../preset/PresetManager.js';\nimport ViewPreset from '../../preset/ViewPreset.js';\nimport '../../data/TimeAxis.js';\n\n/**\n * @module Scheduler/view/model/TimeAxisViewModel\n */\n\n/**\n * This class is an internal view model class, describing the visual representation of a {@link Scheduler.data.TimeAxis}.\n * The config for the header rows is described in the {@link Scheduler.preset.ViewPreset#field-headers headers}.\n * To calculate the size of each cell in the time axis, this class requires:\n *\n * - availableSpace  - The total width or height available for the rendering\n * - tickSize       - The fixed width or height of each cell in the lowest header row. This value is normally read from the\n * {@link Scheduler.preset.ViewPreset viewPreset} but this can also be updated programmatically using the {@link #property-tickSize} setter\n *\n * Normally you should not interact with this class directly.\n *\n * @extends Core/mixin/Events\n */\nexport default class TimeAxisViewModel extends Events() {\n    //region Default config\n\n    // <remove-on-release>\n    // TODO: replace _availableSpace etc. with availableSpace in config and make setters work during config phase\n    // </remove-on-release>\n\n    static get defaultConfig() {\n        return {\n            /**\n             * The time axis providing the underlying data to be visualized\n             * @config {Scheduler.data.TimeAxis}\n             * @internal\n             */\n            timeAxis : null,\n\n            /**\n             * The available width/height, this is normally not known by the consuming UI component using this model\n             * class until it has been fully rendered. The consumer of this model should set\n             * {@link #property-availableSpace} when its width has changed.\n             * @config {Number}\n             * @internal\n             */\n            availableSpace : null,\n\n            /**\n             * The \"tick width\" for horizontal mode or \"tick height\" for vertical mode, to use for the cells in the\n             * bottom most header row.\n             * This value is normally read from the {@link Scheduler.preset.ViewPreset viewPreset}\n             * @config {Number}\n             * @default\n             * @internal\n             */\n            tickSize : 100,\n\n            /**\n             * true if there is a requirement to be able to snap events to a certain view resolution.\n             * This has implications of the {@link #config-tickSize} that can be used, since all widths must be in even pixels.\n             * @config {Boolean}\n             * @default\n             * @internal\n             */\n            snap : false,\n\n            /**\n             * true if cells in the bottom-most row should be fitted to the {@link #property-availableSpace available space}.\n             * @config {Boolean}\n             * @default\n             * @internal\n             */\n            forceFit : false,\n\n            headers : null,\n\n            mode : 'horizontal', // or 'vertical'\n\n            //used for Exporting. Make sure the tick columns are not recalculated when resizing.\n            suppressFit : false,\n\n            // cache of the config currently used.\n            columnConfig : [],\n\n            // the view preset name to apply initially\n            viewPreset : null,\n\n            // The default header level to draw column lines for\n            columnLinesFor : null,\n\n            originalTickSize : null,\n\n            headersDatesCache : []\n        };\n    }\n\n    //endregion\n\n    //region Init & destroy\n\n    construct(config) {\n        const me = this;\n\n        // getSingleUnitInPixels results are memoized because of frequent calls during rendering.\n        me.unitToPixelsCache = {};\n\n        super.construct(config);\n\n        const viewPreset = me.timeAxis.viewPreset || me.viewPreset;\n\n        if (viewPreset) {\n            if (viewPreset instanceof ViewPreset) {\n                me.consumeViewPreset(viewPreset);\n            }\n            else {\n                const preset = PresetManager.getPreset(viewPreset);\n                preset && me.consumeViewPreset(preset);\n            }\n        }\n\n        // When time axis is changed, reconfigure the model\n        me.timeAxis.ion({ reconfigure : 'onTimeAxisReconfigure', thisObj : me });\n\n        me.configured = true;\n    }\n\n    doDestroy() {\n        this.timeAxis.un('reconfigure', this.onTimeAxisReconfigure, this);\n        super.doDestroy();\n    }\n\n    /**\n     * Used to calculate the range to extend the TimeAxis to during infinite scroll.\n     * @param {Date} date\n     * @param {Boolean} centered\n     * @param {Scheduler.preset.ViewPreset} [preset] Optional, the preset for which to calculate the range.\n     * defaults to the currently active ViewPreset\n     * @returns {Object} `{ startDate, endDate }`\n     * @internal\n     */\n    calculateInfiniteScrollingDateRange(date, centered, preset = this.viewPreset) {\n        const\n            {\n                timeAxis,\n                availableSpace\n            } = this,\n            {\n                bufferCoef\n            } = this.owner,\n            {\n                leafUnit,\n                leafIncrement,\n                topUnit,\n                topIncrement,\n                tickSize\n            } = preset,\n            // If the units are the same and the increments are integer, snap to the top header's unit & increment\n            useTop    = leafUnit === topUnit && Math.round(topIncrement) === topIncrement && Math.round(leafIncrement) === leafIncrement,\n            snapSize  = useTop ? topIncrement : leafIncrement,\n            snapUnit  = useTop ? topUnit      : leafUnit;\n\n        // if provided date is the central point on the timespan\n        if (centered) {\n            const halfSpan = Math.ceil((availableSpace * bufferCoef + (availableSpace / 2)) / tickSize);\n\n            return {\n                startDate : timeAxis.floorDate(DH.add(date, -halfSpan * leafIncrement, leafUnit), false, snapUnit, snapSize),\n                endDate   : timeAxis.ceilDate(DH.add(date, halfSpan * leafIncrement, leafUnit), false, snapUnit, snapSize)\n            };\n        }\n        // if provided date is the left coordinate of the visible timespan area\n        else {\n            const bufferedTicks = Math.ceil(availableSpace * bufferCoef / tickSize);\n\n            return {\n                startDate : timeAxis.floorDate(DH.add(date, -bufferedTicks * leafIncrement, leafUnit), false, snapUnit, snapSize),\n                endDate   : timeAxis.ceilDate(DH.add(date, Math.ceil((availableSpace / tickSize + bufferedTicks) * leafIncrement), leafUnit), false, snapUnit, snapSize)\n            };\n        }\n    }\n\n    /**\n     * Returns an array representing the headers of the current timeAxis. Each element is an array representing the cells for that level in the header.\n     * @returns {Object[]} An array of headers, each element being an array representing each cell (with start date and end date) in the timeline representation.\n     * @internal\n     */\n    get columnConfig() {\n        return this._columnConfig;\n    }\n\n    set columnConfig(config) {\n        this._columnConfig = config;\n    }\n\n    get headers() {\n        return this._headers;\n    }\n\n    set headers(headers) {\n        if (headers && headers.length && headers[headers.length - 1].cellGenerator) {\n            throw new Error('`cellGenerator` cannot be used for the bottom level of your headers. Use TimeAxis#generateTicks() instead.');\n        }\n\n        this._headers = headers;\n    }\n\n    get isTimeAxisViewModel() {\n        return true;\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fires after the model has been updated.\n     * @event update\n     * @param {Scheduler.view.model.TimeAxisViewModel} source The model instance\n     */\n\n    /**\n     * Fires after the model has been reconfigured.\n     * @event reconfigure\n     * @param {Scheduler.view.model.TimeAxisViewModel} source The model instance\n     */\n\n    //endregion\n\n    //region Mode\n\n    /**\n     * Using horizontal mode?\n     * @returns {Boolean}\n     * @readonly\n     * @internal\n     */\n    get isHorizontal() {\n        return this.mode !== 'vertical';\n    }\n\n    /**\n     * Using vertical mode?\n     * @returns {Boolean}\n     * @readonly\n     * @internal\n     */\n    get isVertical() {\n        return this.mode === 'vertical';\n    }\n\n    /**\n     * Gets/sets the forceFit value for the model. Setting it will cause it to update its contents and fire the\n     * {@link #event-update} event.\n     * @property {Boolean}\n     * @internal\n     */\n    set forceFit(value) {\n        if (value !== this._forceFit) {\n            this._forceFit = value;\n            this.update();\n        }\n    }\n\n    //endregion\n\n    //region Reconfigure & update\n\n    reconfigure(config) {\n        // clear the cached headers\n        this.headers = null;\n\n        // Ensure correct ordering\n        this.setConfig(config);\n\n        this.trigger('reconfigure');\n    }\n\n    onTimeAxisReconfigure({ source : timeAxis, suppressRefresh }) {\n        if (this.viewPreset !== timeAxis.viewPreset) {\n            this.consumeViewPreset(timeAxis.viewPreset);\n        }\n        if (!suppressRefresh && timeAxis.count > 0) {\n            this.update();\n        }\n    }\n\n    /**\n     * Updates the view model current timeAxis configuration and available space.\n     * @param {Number} [availableSpace] The available space for the rendering of the axis (used in forceFit mode)\n     * @param {Boolean} [silent] Pass `true` to suppress the firing of the `update` event.\n     * @param {Boolean} [forceUpdate] Pass `true` to fire the `update` event even if the size has not changed.\n     * @internal\n     */\n    update(availableSpace, silent = false, forceUpdate = false) {\n        const\n            me                    = this,\n            { timeAxis, headers } = me,\n            spaceAvailable        = availableSpace !== 0;\n\n        // We're in configuration, or no change, quit\n        if (me.isConfiguring || (spaceAvailable && me._availableSpace === availableSpace)) {\n            if (forceUpdate) {\n                me.trigger('update');\n            }\n            return;\n        }\n\n        me._availableSpace = Math.max(availableSpace || me.availableSpace || 0, 0);\n\n        if (typeof me.availableSpace !== 'number') {\n            throw new Error('Invalid available space provided to TimeAxisModel');\n        }\n\n        me.columnConfig = [];\n\n        // The \"column width\" is considered to be the width of each tick in the lowest header row and this width\n        // has to be same for all cells in the lowest row.\n        const tickSize = me._tickSize = me.calculateTickSize(me.originalTickSize);\n\n        if (typeof tickSize !== 'number' || tickSize <= 0) {\n            throw new Error('Invalid timeAxis tick size');\n        }\n\n        // getSingleUnitInPixels results are memoized because of frequent calls during rendering.\n        me.unitToPixelsCache = {};\n\n        // totalSize is cached because of frequent calls which calculate it.\n        me._totalSize = null;\n\n        // Generate the underlying date ranges for each header row, which will provide input to the cell rendering\n        for (let pos = 0, { length } = headers; pos < length; pos++) {\n            const header = headers[pos];\n\n            if (header.cellGenerator) {\n                const headerCells = header.cellGenerator.call(me, timeAxis.startDate, timeAxis.endDate);\n\n                me.columnConfig[pos] = me.createHeaderRow(pos, header, headerCells);\n            }\n            else {\n                me.columnConfig[pos] = me.createHeaderRow(pos, header);\n            }\n        }\n\n        if (!silent) {\n            me.trigger('update');\n        }\n    }\n\n    //endregion\n\n    //region Date / position mapping\n\n    /**\n     * Returns the distance in pixels for a timespan with the given start and end date.\n     * @param {Date} start start date\n     * @param {Date} end end date\n     * @returns {Number} The length of the time span\n     * @category Date mapping\n     */\n    getDistanceBetweenDates(start, end) {\n        return this.getPositionFromDate(end) - this.getPositionFromDate(start);\n    }\n\n    /**\n     * Returns the distance in pixels for a time span\n     * @param {Number} durationMS Time span duration in ms\n     * @returns {Number} The length of the time span\n     * @category Date mapping\n     */\n    getDistanceForDuration(durationMs) {\n        return this.getSingleUnitInPixels('millisecond') * durationMs;\n    }\n\n    /**\n     * Gets the position of a date on the projected time axis or -1 if the date is not in the timeAxis.\n     * @param {Date} date the date to query for.\n     * @returns {Number} the coordinate representing the date\n     * @category Date mapping\n     */\n    getPositionFromDate(date, options = {}) {\n        const tick = this.getScaledTick(date, options);\n\n        if (tick === -1) {\n            return -1;\n        }\n\n        return this.tickSize * (tick - this.timeAxis.visibleTickStart);\n    }\n\n    // Translates a tick along the time axis to facilitate scaling events when excluding certain days or hours\n    getScaledTick(date, { respectExclusion, snapToNextIncluded, isEnd, min, max }) {\n        const\n            { timeAxis }      = this,\n            { include, unit } = timeAxis;\n\n        let tick = timeAxis.getTickFromDate(date);\n\n        if (tick !== -1 && respectExclusion && include) {\n            let tickChanged = false;\n\n            // Stretch if we are using a larger unit than 'hour', except if it is 'day'. If so, it is already handled\n            // by a cheaper reconfiguration of the ticks in `generateTicks`\n            if (include.hour && DH.compareUnits(unit, 'hour') > 0 && unit !== 'day') {\n                const\n                    { from, to, lengthFactor, center } = include.hour,\n                    // Original hours\n                    originalHours                      = date.getHours(),\n                    // Crop to included hours\n                    croppedHours                       = Math.min(Math.max(originalHours, from), to);\n\n                // If we are not asked to snap (when other part of span is not included) any cropped away hour\n                // should be considered excluded\n                if (!snapToNextIncluded && croppedHours !== originalHours) {\n                    return -1;\n                }\n\n                const\n                    // Should scale hour and smaller units (seconds will hardly affect visible result...)\n                    fractionalHours = croppedHours + date.getMinutes() / 60,\n                    // Number of hours from the center    |xxxx|123c----|xxx|\n                    hoursFromCenter = center - fractionalHours,\n                    // Step from center to stretch event  |x|112233c----|xxx|\n                    newHours        = center - hoursFromCenter * lengthFactor;\n\n                // Adding instead of setting to get a clone of the date, to not affect the original\n                date = DH.add(date, newHours - originalHours, 'h');\n\n                tickChanged = true;\n            }\n\n            if (include.day && DH.compareUnits(unit, 'day') > 0) {\n                const { from, to, lengthFactor, center } = include.day;\n\n                //region Crop\n                let checkDay = date.getDay();\n\n                // End date is exclusive, check the day before if at 00:00\n                if (isEnd && date.getHours() === 0 && date.getMinutes() === 0 && date.getSeconds() === 0 && date.getMilliseconds() === 0) {\n                    if (--checkDay < 0) {\n                        checkDay = 6;\n                    }\n                }\n                let addDays = 0;\n\n                if (checkDay < from || checkDay >= to) {\n                    // If end date is in view but start date is excluded, snap to next included day\n                    if (snapToNextIncluded) {\n\n                        // Step back to \"to-1\" (not inclusive) for end date\n                        if (isEnd) {\n                            addDays = (to - checkDay - 8) % 7;\n                        }\n                        // Step forward to \"from\" for start date\n                        else {\n                            addDays = (from - checkDay + 7) % 7;\n                        }\n\n                        date = DH.add(date, addDays, 'd');\n                        date = DH.startOf(date, 'd', false);\n\n                        // Keep end after start and vice versa\n                        if (\n                            (max && date.getTime() >= max) ||\n                            (min && date.getTime() <= min)\n                        ) {\n                            return -1;\n                        }\n                    }\n                    else {\n                        // day excluded at not snapping to next\n                        return -1;\n                    }\n                }\n                //endregion\n\n                const\n                    { weekStartDay } = timeAxis,\n                    // Center to stretch around, for some reason pre-calculated cannot be used for sundays :)\n                    fixedCenter      = date.getDay() === 0 ? 0 : center,\n                    // Should scale day and smaller units (minutes will hardly affect visible result...)\n                    fractionalDay    = date.getDay() + date.getHours() / 24, //+ dateClone.getMinutes() / (24 * 1440),\n                    // Number of days from the calculated center\n                    daysFromCenter   = fixedCenter - fractionalDay,\n                    // Step from center to stretch event\n                    newDay           = fixedCenter - daysFromCenter * lengthFactor;\n\n                // Adding instead of setting to get a clone of the date, to not affect the original\n                date = DH.add(date, newDay - fractionalDay + weekStartDay, 'd');\n\n                tickChanged = true;\n            }\n\n            // Now the date might start somewhere else (fraction of ticks)\n            if (tickChanged) {\n                // When stretching date might end up outside of time axis, making it invalid to use. Clip it to time axis\n                // to circumvent this\n                date = DH.constrain(date, timeAxis.startDate, timeAxis.endDate);\n\n                // Get a new tick based on the \"scaled\" date\n                tick = timeAxis.getTickFromDate(date);\n            }\n        }\n\n        return tick;\n    }\n\n    /**\n     * Gets the date for a position on the time axis\n     * @param {Number} position The page X or Y coordinate\n     * @param {'floor'|'round'|'ceil'} [roundingMethod] Rounding method to use. 'floor' to take the tick (lowest header\n     * in a time axis) start date, 'round' to round the value to nearest increment or 'ceil' to take the tick end date\n     * @param {Boolean} [allowOutOfRange=false] By default, this returns `null` if the position is outside\n     * of the time axis. Pass `true` to attempt to calculate a date outside of the time axis.\n     * @returns {Date} the Date corresponding to the xy coordinate\n     * @category Date mapping\n     */\n    getDateFromPosition(position, roundingMethod, allowOutOfRange = false) {\n        const\n            me           = this,\n            { timeAxis } = me,\n            tick         = me.getScaledPosition(position) / me.tickSize + timeAxis.visibleTickStart;\n\n        if (tick < 0 || tick > timeAxis.count) {\n            if (allowOutOfRange) {\n                let result;\n\n                // Subtract the correct number of tick units from the start date\n                if (tick < 0) {\n                    result = DH.add(timeAxis.startDate, tick, timeAxis.unit);\n                }\n                else {\n                    // Add the correct number of tick units to the end date\n                    result = DH.add(timeAxis.endDate, tick - timeAxis.count, timeAxis.unit);\n                }\n\n                // Honour the rounding requested\n                if (roundingMethod) {\n                    result = timeAxis[roundingMethod + 'Date'](result);\n                }\n                return result;\n            }\n            return null;\n        }\n\n        return timeAxis.getDateFromTick(tick, roundingMethod);\n    }\n\n    // Translates a position along the time axis to facilitate scaling events when excluding certain days or hours\n    getScaledPosition(position) {\n        const { include, unit, weekStartDay } = this.timeAxis;\n\n        // Calculations are\n\n        if (include) {\n            const dayWidth = this.getSingleUnitInPixels('day');\n\n            // Have to calculate day before hour to get end result correct\n            if (include.day && DH.compareUnits(unit, 'day') > 0) {\n                const { from, lengthFactor } = include.day,\n                    // Scaling happens within a week, determine position within it\n                    positionInWeek         = position % (dayWidth * 7),\n                    // Store were the week starts to be able to re-add it after scale\n                    weekStartPosition      = position - positionInWeek;\n                // Scale position using calculated length per day factor, adding the width of excluded days\n                position                     = positionInWeek / lengthFactor + (from - weekStartDay) * dayWidth + weekStartPosition;\n            }\n\n            // Hours are not taken into account when viewing days, since the day ticks are reconfigured in\n            // `generateTicks` instead\n            if (include.hour && DH.compareUnits(unit, 'hour') > 0 && unit !== 'day') {\n                const { from, lengthFactorExcl } = include.hour,\n                    hourWidth                  = this.getSingleUnitInPixels('hour'),\n                    // Scaling happens within a day, determine position within it\n                    positionInDay              = position % dayWidth,\n                    // Store were the day starts to be able to re-add it after scale\n                    dayStartPosition           = position - positionInDay;\n                // Scale position using calculated length per day factor, adding the width of excluded hours\n                position                         = positionInDay / lengthFactorExcl + from * hourWidth + dayStartPosition;\n            }\n        }\n\n        return position;\n    }\n\n    /**\n     * Returns the amount of pixels for a single unit\n     * @internal\n     * @returns {Number} The unit in pixel\n     */\n    getSingleUnitInPixels(unit) {\n        const me = this;\n\n        return me.unitToPixelsCache[unit] || (me.unitToPixelsCache[unit] = DH.getUnitToBaseUnitRatio(me.timeAxis.unit, unit, true) * me.tickSize / me.timeAxis.increment);\n    }\n\n    /**\n     * Returns the pixel increment for the current view resolution.\n     * @internal\n     * @returns {Number} The increment\n     */\n    get snapPixelAmount() {\n        if (this.snap) {\n            const { resolution } = this.timeAxis;\n            return (resolution.increment || 1) * this.getSingleUnitInPixels(resolution.unit);\n        }\n        return 1;\n    }\n\n    //endregion\n\n    //region Sizes\n\n    /**\n     * Get/set the current time column size (the width or height of a cell in the bottom-most time axis header row,\n     * depending on mode)\n     * @internal\n     * @property {Number}\n     */\n    get tickSize() {\n        return this._tickSize;\n    }\n\n    set tickSize(size) {\n        this.setTickSize(size, false);\n    }\n\n    setTickSize(size, suppressEvent) {\n        this._tickSize = this.originalTickSize = size;\n\n        this.update(undefined, suppressEvent);\n    }\n\n    get timeResolution() {\n        return this.timeAxis.resolution;\n    }\n\n    // Calculates the time column width/height based on the value defined viewPreset \"tickWidth/tickHeight\". It also\n    // checks for the forceFit view option and the snap, both of which impose constraints on the time column width\n    // configuration.\n    calculateTickSize(proposedSize) {\n        const\n            me                                  = this,\n            { forceFit, timeAxis, suppressFit } = me,\n            timelineUnit                        = timeAxis.unit;\n\n        let size  = 0,\n            ratio = 1; //Number.MAX_VALUE;\n\n        if (me.snap) {\n            const resolution = timeAxis.resolution;\n            ratio            = DH.getUnitToBaseUnitRatio(timelineUnit, resolution.unit) * resolution.increment;\n        }\n\n        if (!suppressFit) {\n            const fittingSize = me.availableSpace / timeAxis.visibleTickTimeSpan;\n\n            size = (forceFit || proposedSize < fittingSize) ? fittingSize : proposedSize;\n\n            if (ratio > 0 && (!forceFit || ratio < 1)) {\n                size = Math.max(1, ratio * size) / ratio;\n            }\n        }\n        else {\n            size = proposedSize;\n        }\n\n        return size;\n    }\n\n    /**\n     * Returns the total width/height of the time axis representation, depending on mode.\n     * @returns {Number} The width or height\n     * @internal\n     * @readonly\n     */\n    get totalSize() {\n        // Floor the space to prevent spurious overflow\n        return this._totalSize || (this._totalSize = Math.floor(this.tickSize * this.timeAxis.visibleTickTimeSpan));\n    }\n\n    /**\n     * Get/set the available space for the time axis representation. If size changes it will cause it to update its\n     * contents and fire the {@link #event-update} event.\n     * @internal\n     * @property {Number}\n     */\n    get availableSpace() {\n        return this._availableSpace;\n    }\n\n    set availableSpace(space) {\n        const me = this;\n        // We should only need to repaint fully if the tick width has changed (which will happen if forceFit is set, or if the full size of the time axis doesn't\n        // occupy the available space - and gets stretched\n        me._availableSpace = Math.max(0, space);\n\n        if (me._availableSpace > 0) {\n            const newTickSize = me.calculateTickSize(me.originalTickSize);\n\n            if (newTickSize > 0 && newTickSize !== me.tickSize) {\n                me.update();\n            }\n        }\n    }\n\n    //endregion\n\n    //region Fitting & snapping\n\n    /**\n     * Returns start dates for ticks at the specified level in format { date, isMajor }.\n     * @param {Number} level Level in headers array, `0` meaning the topmost...\n     * @param {Boolean} useLowestHeader Use lowest level\n     * @param getEnd\n     * @returns {Array}\n     * @internal\n     */\n    getDates(level = this.columnLinesFor, useLowestHeader = false, getEnd = false) {\n        const\n            me            = this,\n            ticks         = [],\n            linesForLevel = useLowestHeader ? me.lowestHeader : level,\n            majorLevel    = me.majorHeaderLevel,\n            levelUnit     = me.headers && me.headers[level].unit,\n            majorUnit     = majorLevel != null && me.headers && me.headers[majorLevel].unit,\n            validMajor    = majorLevel != null && DH.doesUnitsAlign(majorUnit, levelUnit),\n            hasGenerator  = !!(me.headers && me.headers[linesForLevel].cellGenerator);\n\n        if (hasGenerator) {\n            const cells = me.columnConfig[linesForLevel];\n\n            for (let i = 1, l = cells.length; i < l; i++) {\n                ticks.push({ date : cells[i].startDate });\n            }\n        }\n        else {\n            me.forEachInterval(linesForLevel, (start, end) => {\n                ticks.push({\n                    date    : getEnd ? end : start,\n                    // do not want to consider tick to be major tick, hence the check for majorHeaderLevel\n                    isMajor : majorLevel !== level && validMajor && me.isMajorTick(getEnd ? end : start)\n                });\n            });\n        }\n\n        return ticks;\n    }\n\n    get forceFit() {\n        return this._forceFit;\n    }\n\n    /**\n     * This function fits the time columns into the available space in the time axis column.\n     * @param {Boolean} suppressEvent `true` to skip firing the 'update' event.\n     * @internal\n     */\n    fitToAvailableSpace(suppressEvent) {\n        const proposedSize = Math.floor(this.availableSpace / this.timeAxis.visibleTickTimeSpan);\n        this.setTickSize(proposedSize, suppressEvent);\n    }\n\n    get snap() {\n        return this._snap;\n    }\n\n    /**\n     * Gets/sets the snap value for the model. Setting it will cause it to update its contents and fire the\n     * {@link #event-update} event.\n     * @property {Boolean}\n     * @internal\n     */\n    set snap(value) {\n        if (value !== this._snap) {\n            this._snap = value;\n            if (this.configured) {\n                this.update();\n            }\n        }\n    }\n\n    //endregion\n\n    //region Headers\n\n    // private\n    createHeaderRow(position, headerRowConfig, headerCells) {\n        const\n            me                            = this,\n            cells                         = [],\n            { align, headerCellCls = '' } = headerRowConfig,\n            today                         = DH.clearTime(new Date()),\n            { timeAxis }                  = me,\n            tickLevel                     = me.headers.length - 1,\n            createCellContext             = (start, end, i, isLast, data) => {\n                let value = DH.format(start, headerRowConfig.dateFormat);\n\n                const\n                    // So that we can use shortcut tickSize as the tickLevel cell width.\n                    // We can do this if the TimeAxis is aligned to start and end on tick boundaries\n                    // or if it's not the first or last tick.\n                    // getDistanceBetweenDates is an expensive operation.\n                    isInteriorTick = i > 0 && !isLast,\n                    cellData       = {\n                        align,\n                        start,\n                        end,\n                        value : data ? data.header : value,\n                        headerCellCls,\n                        width : tickLevel === position && me.owner && (timeAxis.fullTicks || isInteriorTick) ? me.owner.tickSize : me.getDistanceBetweenDates(start, end),\n                        index : i\n                    };\n                if (cellData.width === 0) {\n                    return;\n                }\n\n                // Vertical mode uses absolute positioning for header cells\n                cellData.coord = size - 1;\n                size += cellData.width;\n\n                me.headersDatesCache[position][start.getTime()] = 1;\n\n                if (headerRowConfig.renderer) {\n                    value = headerRowConfig.renderer.call(headerRowConfig.thisObj || me, start, end, cellData, i);\n\n                    cellData.value = value == null ? '' : value;\n                }\n\n                // To be able to style individual day cells, weekends or other important days\n                if (headerRowConfig.unit === 'day' && (!headerRowConfig.increment || headerRowConfig.increment === 1)) {\n                    cellData.headerCellCls += ' b-sch-dayheadercell-' + start.getDay();\n\n                    if (DH.clearTime(start, true) - today === 0) {\n                        cellData.headerCellCls += ' b-sch-dayheadercell-today';\n                    }\n                }\n\n                cells.push(cellData);\n            };\n\n        let size = 0;\n\n        me.headersDatesCache[position] = {};\n\n        if (headerCells) {\n            headerCells.forEach((cellData, i) => createCellContext(cellData.start, cellData.end, i, i === headerCells.length - 1, cellData));\n        }\n        else {\n            me.forEachInterval(position, createCellContext);\n        }\n\n        return cells;\n    }\n\n    get mainHeader() {\n        return ('mainHeaderLevel' in this) ? this.headers[this.mainHeaderLevel] : this.bottomHeader;\n    }\n\n    get bottomHeader() {\n        return this.headers[this.headers.length - 1];\n    }\n\n    get lowestHeader() {\n        return this.headers.length - 1;\n    }\n\n    /**\n     * This method is meant to return the level of the header which 2nd lowest.\n     * It is used for {@link #function-isMajorTick} method\n     * @returns {String}\n     * @private\n     */\n    get majorHeaderLevel() {\n        const { headers } = this;\n\n        if (headers) {\n            return Math.max(headers.length - 2, 0);\n        }\n\n        return null;\n    }\n\n    //endregion\n\n    //region Ticks\n\n    /**\n     * For vertical view (and column lines plugin) we sometimes want to know if current tick starts along with the\n     * upper header level.\n     * @param {Date} date\n     * @returns {Boolean}\n     * @private\n     */\n    isMajorTick(date) {\n        const nextLevel = this.majorHeaderLevel;\n        // if forceFit is used headersDatesCache won´t have been generated yet on the first call here,\n        // since no size is set yet\n        return nextLevel != null && this.headersDatesCache[nextLevel] && this.headersDatesCache[nextLevel][date.getTime()] || false;\n    }\n\n    /**\n     * Calls the supplied iterator function once per interval. The function will be called with three parameters, start date and end date and an index.\n     * Return false to break the iteration.\n     * @param {Number} position The index of the header in the headers array.\n     * @param {Function} iteratorFn The function to call, will be called with start date, end date and \"tick index\"\n     * @param {Object} [thisObj] `this` reference for the function\n     * @internal\n     */\n    forEachInterval(position, iteratorFn, thisObj = this) {\n        const { headers, timeAxis } = this;\n\n        if (headers) {\n            // This is the lowest header row, which should be fed the data in the tickStore (or a row above using same unit)\n            if (position === headers.length - 1) {\n                timeAxis.forEach((r, index) =>\n                    iteratorFn.call(thisObj, r.startDate, r.endDate, index, index === timeAxis.count - 1)\n                );\n            }\n            // All other rows\n            else {\n                const header = headers[position];\n\n                timeAxis.forEachAuxInterval(header.unit, header.increment, iteratorFn, thisObj);\n            }\n        }\n    }\n\n    /**\n     * Calls the supplied iterator function once per interval. The function will be called with three parameters, start date and end date and an index.\n     * Return false to break the iteration.\n     * @internal\n     * @param {Function} iteratorFn The function to call\n     * @param {Object} [thisObj] `this` reference for the function\n     */\n    forEachMainInterval(iteratorFn, thisObj) {\n        this.forEachInterval(this.mainHeaderLevel, iteratorFn, thisObj);\n    }\n\n    //endregion\n\n    //region ViewPreset\n\n    consumeViewPreset(preset) {\n        const me = this;\n\n        // clear the cached headers\n        me.headers = null;\n\n        me.getConfig('tickSize');\n\n        // Since we are bypassing the tickSize setter below, ensure that\n        // the config initial setter has been removed by referencing the property.\n        // We only do this to avoid multiple updates from this.\n        // <remove-on-release>\n        // TODO: Fix this issue, and do not bypass setters.\n        // </remove-on-release>\n        me.viewPreset = preset;\n\n        Object.assign(me, {\n            headers         : preset.headers,\n            columnLinesFor  : preset.columnLinesFor,\n            mainHeaderLevel : preset.mainHeaderLevel,\n            _tickSize       : me.isHorizontal ? preset.tickWidth : preset.tickHeight\n        });\n\n        me.originalTickSize = me.tickSize;\n    }\n\n    //endregion\n}\n","import Base from '../../../Core/Base.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\n\n// Used to avoid having to create huge amounts of Date objects\nconst tempDate = new Date();\n\n/**\n * @module Scheduler/view/mixin/TimelineDateMapper\n */\n\n/**\n * Mixin that contains functionality to convert between coordinates and dates etc.\n *\n * @mixin\n */\nexport default Target => class TimelineDateMapper extends (Target || Base) {\n    static $name = 'TimelineDateMapper';\n\n    static configurable = {\n        /**\n         * Set to `true` to snap to the current time resolution increment while interacting with scheduled events.\n         *\n         * The time resolution increment is either determined by the currently applied view preset, or it can be\n         * overridden using {@link #property-timeResolution}.\n         *\n         * <div class=\"note\">When the {@link Scheduler/view/mixin/TimelineEventRendering#config-fillTicks} option is\n         * enabled, snapping will align to full ticks, regardless of the time resolution.</div>\n         *\n         * @prp {Boolean}\n         * @default\n         * @category Scheduled events\n         */\n        snap : false\n    };\n\n    //region Coordinate <-> Date\n\n    getRtlX(x) {\n        if (this.rtl && this.isHorizontal) {\n            x = this.timeAxisViewModel.totalSize - x;\n        }\n        return x;\n    }\n\n    /**\n     * Gets the date for an X or Y coordinate, either local to the view element or the page based on the 3rd argument.\n     * If the coordinate is not in the currently rendered view, null will be returned unless the `allowOutOfRange`\n     * parameter is passed a `true`.\n     * @param {Number} coordinate The X or Y coordinate\n     * @param {'floor'|'round'|'ceil'} [roundingMethod] Rounding method to use. 'floor' to take the tick (lowest header\n     * in a time axis) start date, 'round' to round the value to nearest increment or 'ceil' to take the tick end date\n     * @param {Boolean} [local] true if the coordinate is local to the scheduler view element\n     * @param {Boolean} [allowOutOfRange] By default, this returns `null` if the position is outside\n     * of the time axis. Pass `true` to attempt to calculate a date outside of the time axis.\n     * @returns {Date} The Date corresponding to the X or Y coordinate\n     * @category Dates\n     */\n    getDateFromCoordinate(coordinate, roundingMethod, local = true, allowOutOfRange = false, ignoreRTL = false) {\n        if (!local) {\n            coordinate = this.currentOrientation.translateToScheduleCoordinate(coordinate);\n        }\n\n        // Time axis is flipped for RTL\n        if (!ignoreRTL) {\n            coordinate = this.getRtlX(coordinate);\n        }\n\n        return this.timeAxisViewModel.getDateFromPosition(coordinate, roundingMethod, allowOutOfRange);\n    }\n\n    getDateFromCoord(options) {\n        return this.getDateFromCoordinate(options.coord, options.roundingMethod, options.local, options.allowOutOfRange, options.ignoreRTL);\n    }\n\n    /**\n     * Gets the date for an XY coordinate regardless of the orientation of the time axis.\n     * @param {Array} xy The page X and Y coordinates\n     * @param {'floor'|'round'|'ceil'} [roundingMethod] Rounding method to use. 'floor' to take the tick (lowest header\n     * in a time axis) start date, 'round' to round the value to nearest increment or 'ceil' to take the tick end date\n     * @param {Boolean} [local] true if the coordinate is local to the scheduler element\n     * @param {Boolean} [allowOutOfRange] By default, this returns `null` if the position is outside\n     * of the time axis. Pass `true` to attempt to calculate a date outside of the time axis.\n     * @returns {Date} the Date corresponding to the xy coordinate\n     * @category Dates\n     */\n    getDateFromXY(xy, roundingMethod, local = true, allowOutOfRange = false) {\n        return this.currentOrientation.getDateFromXY(xy, roundingMethod, local, allowOutOfRange);\n    }\n\n    /**\n     * Gets the time for a DOM event such as 'mousemove' or 'click' regardless of the orientation of the time axis.\n     * @param {Event} e the Event instance\n     * @param {'floor'|'round'|'ceil'} [roundingMethod] Rounding method to use. 'floor' to take the tick (lowest header\n     * in a time axis) start date, 'round' to round the value to nearest increment or 'ceil' to take the tick end date\n     * @param {Boolean} [allowOutOfRange] By default, this returns `null` if the position is outside\n     * of the time axis. Pass `true` to attempt to calculate a date outside of the time axis.\n     * @returns {Date} The date corresponding to the EventObject's position along the orientation of the time axis.\n     * @category Dates\n     */\n    getDateFromDomEvent(e, roundingMethod, allowOutOfRange = false) {\n        return this.getDateFromXY([e.pageX, e.pageY], roundingMethod, false, allowOutOfRange);\n    }\n\n    /**\n     * Gets the start and end dates for an element Region\n     * @param {Core.helper.util.Rectangle} rect The rectangle to map to start and end dates\n     * @param {'floor'|'round'|'ceil'} roundingMethod Rounding method to use. 'floor' to take the tick (lowest header\n     * in a time axis) start date, 'round' to round the value to nearest increment or 'ceil' to take the tick end date\n     * @param {Number} duration The duration in MS of the underlying event\n     * @returns {Object} an object containing start/end properties\n     */\n    getStartEndDatesFromRectangle(rect, roundingMethod, duration, allowOutOfRange = false) {\n        const\n            me               = this,\n            { isHorizontal } = me,\n            startPos         = isHorizontal ? rect.x : rect.top,\n            endPos           = isHorizontal ? rect.right : rect.bottom;\n\n        let start, end;\n\n        // Element within bounds\n        if (startPos >= 0 && endPos < me.timeAxisViewModel.totalSize) {\n            start = me.getDateFromCoordinate(startPos, roundingMethod, true);\n            end = me.getDateFromCoordinate(endPos, roundingMethod, true);\n        }\n        // Starts before, start is worked backwards from end\n        else if (startPos < 0) {\n            end = me.getDateFromCoordinate(endPos, roundingMethod, true, allowOutOfRange);\n            start = end && DateHelper.add(end, -duration, 'ms');\n        }\n        // Ends after, end is calculated from the start\n        else {\n            start = me.getDateFromCoordinate(startPos, roundingMethod, true, allowOutOfRange);\n            end = start && DateHelper.add(start, duration, 'ms');\n        }\n\n        return {\n            start, end\n        };\n    }\n\n    //endregion\n\n    //region Date display\n\n    /**\n     * Method to get a displayed end date value, see {@link #function-getFormattedEndDate} for more info.\n     * @private\n     * @param {Date} endDate The date to format\n     * @param {Date} startDate The start date\n     * @returns {Date} The date value to display\n     */\n    getDisplayEndDate(endDate, startDate) {\n        if (\n            // If time is midnight,\n            endDate.getHours() === 0 && endDate.getMinutes() === 0 &&\n\n            // and end date is greater then start date\n            (!startDate || !(endDate.getYear() === startDate.getYear() && endDate.getMonth() === startDate.getMonth() && endDate.getDate() === startDate.getDate())) &&\n\n            // and UI display format doesn't contain hour info (in this case we'll just display the exact date)\n            !DateHelper.formatContainsHourInfo(this.displayDateFormat)\n        ) {\n            // format the date inclusively as 'the whole previous day'.\n            endDate = DateHelper.add(endDate, -1, 'day');\n        }\n\n        return endDate;\n    }\n\n    /**\n     * Method to get a formatted end date for a scheduled event, the grid uses the \"displayDateFormat\" property defined in the current view preset.\n     * End dates are formatted as 'inclusive', meaning when an end date falls on midnight and the date format doesn't involve any hour/minute information,\n     * 1ms will be subtracted (e.g. 2010-01-08T00:00:00 will first be modified to 2010-01-07 before being formatted).\n     * @private\n     * @param {Date} endDate The date to format\n     * @param {Date} startDate The start date\n     * @returns {String} The formatted date\n     */\n    getFormattedEndDate(endDate, startDate) {\n        return this.getFormattedDate(this.getDisplayEndDate(endDate, startDate));\n    }\n\n    //endregion\n\n    //region Other date functions\n\n    /**\n     * Gets the x or y coordinate relative to the scheduler element, or page coordinate (based on the 'local' flag)\n     * If the coordinate is not in the currently rendered view, -1 will be returned.\n     * @param {Date|Number} date the date to query for (or a date as ms)\n     * @param {Boolean|Object} options true to return a coordinate local to the scheduler view element (defaults to true),\n     * also accepts a config object like { local : true }.\n     * @returns {Number} the x or y position representing the date on the time axis\n     * @category Dates\n     */\n    getCoordinateFromDate(date, options = true) {\n        const\n            me                    = this,\n            { timeAxisViewModel } = me,\n            {\n                isContinuous,\n                startMS,\n                endMS,\n                startDate,\n                endDate,\n                unit\n            }                     = me.timeAxis,\n            dateMS                = date.valueOf();\n\n        // Avoiding to break the API while allowing passing options through to getPositionFromDate()\n        if (options === true) {\n            options = {\n                local : true\n            };\n        }\n        else if (!options) {\n            options = {\n                local : false\n            };\n        }\n        else if (!('local' in options)) {\n            options.local = true;\n        }\n\n        let pos;\n\n        // <remove-on-release>\n        // TODO: for 6.0 try to normalize and just use dates as input for this method,\n        //  then this if-statement would not be needed\n        // </remove-on-release>\n        if (!(date instanceof Date)) {\n            tempDate.setTime(date);\n            date = tempDate;\n        }\n\n        // Shortcut for continuous time axis that is using a unit that can be reliably translated to days (or smaller)\n        if (isContinuous &&\n            date.getTimezoneOffset() === startDate.getTimezoneOffset() &&\n            startDate.getTimezoneOffset() === endDate.getTimezoneOffset() &&\n            DateHelper.getUnitToBaseUnitRatio(unit, 'day') !== -1\n        ) {\n            if (dateMS < startMS || dateMS > endMS) {\n                return -1;\n            }\n            pos = (dateMS - startMS) / (endMS - startMS) * timeAxisViewModel.totalSize;\n        }\n        // Non-continuous or using for example months (vary in length)\n        else {\n            pos = timeAxisViewModel.getPositionFromDate(date, options);\n        }\n\n        // RTL coords from the end of the time axis\n        if (me.rtl && me.isHorizontal && !options?.ignoreRTL) {\n            pos = timeAxisViewModel.totalSize - pos;\n        }\n\n        if (!options.local) {\n            pos = me.currentOrientation.translateToPageCoordinate(pos);\n        }\n\n        return pos;\n    }\n\n    /**\n     * Returns the distance in pixels for the time span in the view.\n     * @param {Date} startDate The start date of the span\n     * @param {Date} endDate The end date of the span\n     * @returns {Number} The distance in pixels\n     * @category Dates\n     */\n    getTimeSpanDistance(startDate, endDate) {\n        return this.timeAxisViewModel.getDistanceBetweenDates(startDate, endDate);\n    }\n\n    /**\n     * Returns the center date of the currently visible timespan of scheduler.\n     *\n     * @property {Date}\n     * @readonly\n     * @category Dates\n     */\n    get viewportCenterDate() {\n        const { timeAxis, timelineScroller } = this;\n\n        // Take the easy way if the axis is continuous.\n        // We can just work out how far along the time axis the viewport center is.\n        if (timeAxis.isContinuous) {\n            // The offset from the start of the whole time axis\n            const timeAxisOffset = (timelineScroller.position + timelineScroller.clientSize / 2) / timelineScroller.scrollSize;\n\n            return new Date(timeAxis.startMS + (timeAxis.endMS - timeAxis.startMS) * timeAxisOffset);\n        }\n        return this.getDateFromCoordinate(timelineScroller.position + timelineScroller.clientSize / 2);\n    }\n\n    get viewportCenterDateCached() {\n        return this.cachedCenterDate || (this.cachedCenterDate = this.viewportCenterDate);\n    }\n\n    //endregion\n\n    //region TimeAxis getters/setters\n\n    /**\n     * Gets/sets the current time resolution object, which contains a unit identifier and an increment count\n     * `{ unit, increment }`. This value means minimal task duration you can create using UI.\n     *\n     * For example when you drag create a task or drag & drop a task, if increment is 5 and unit is 'minute'\n     * that means that you can create tasks in 5 minute increments, or move it in 5 minute steps.\n     *\n     * This value is taken from viewPreset {@link Scheduler.preset.ViewPreset#field-timeResolution timeResolution}\n     * config by default. When supplying a `Number` to the setter only the `increment` is changed and the `unit` value\n     * remains untouched.\n     *\n     * ```javascript\n     * timeResolution : {\n     *   unit      : 'minute',  //Valid values are \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\".\n     *   increment : 5\n     * }\n     * ```\n     *\n     * <div class=\"note\">When the {@link Scheduler/view/mixin/TimelineEventRendering#config-fillTicks} option is\n     * enabled, the resolution will be in full ticks regardless of configured value.</div>\n     *\n     * @property {Object|Number}\n     * @category Dates\n     */\n    get timeResolution() {\n        return this.timeAxis.resolution;\n    }\n\n    set timeResolution(resolution) {\n        this.timeAxis.resolution = (typeof resolution === 'number') ? {\n            increment : resolution,\n            unit      : this.timeAxis.resolution.unit\n        } : resolution;\n    }\n\n    //endregion\n\n    //region Snap\n\n    get snap() {\n        return this._timeAxisViewModel?.snap ?? this._snap;\n    }\n\n    updateSnap(snap) {\n        if (!this.isConfiguring) {\n            this.timeAxisViewModel.snap = snap;\n            this.timeAxis.forceFullTicks = snap && this.fillTicks;\n        }\n    }\n\n    //endregion\n\n    onSchedulerHorizontalScroll({ subGrid, scrollLeft, scrollX }) {\n        // Invalidate cached center date unless we are scrolling to center on it.\n        if (!this.scrollingToCenter) {\n            this.cachedCenterDate = null;\n        }\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport BrowserHelper from '../../../Core/helper/BrowserHelper.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\nimport StringHelper from '../../../Core/helper/StringHelper.js';\nimport EventHelper from '../../../Core/helper/EventHelper.js';\nimport DomDataStore from '../../../Core/data/DomDataStore.js';\nimport GlobalEvents from '../../../Core/GlobalEvents.js';\n\n/**\n * @module Scheduler/view/mixin/TimelineDomEvents\n */\n\nconst { eventNameMap } = EventHelper;\n\n/**\n * An object which encapsulates a schedule timeline tick context based on a DOM event. This will include\n * the row and resource information and the tick and time information for a DOM pointer event detected\n * in the timeline.\n * @typedef {Object} TimelineContext\n * @property {Event} domEvent The DOM event which triggered the context change.\n * @property {HTMLElement} eventElement If the `domEvent` was on an event bar, this will be the event bar element.\n * @property {HTMLElement} cellElement The cell element under the `domEvent`\n * @property {Date} date The date corresponding to the `domEvent` position in the timeline\n * @property {Scheduler.model.TimeSpan} tick A {@link Scheduler.model.TimeSpan} record which encapsulates the contextual tick\n * @property {Number} tickIndex The contextual tick index. This may be fractional.\n * @property {Number} tickParentIndex The integer contextual tick index.\n * @property {Date} tickStartDate The start date of the contextual tick.\n * @property {Date} tickEndDate The end date of the contextual tick.\n * @property {Grid.row.Row} row The contextual {@link Grid.row.Row}\n * @property {Number} index The contextual row index\n * @property {Scheduler.model.EventModel} [eventRecord] The contextual event record (if any) if the event source is a `Scheduler`\n * @property {Scheduler.model.AssignmentModel} [assignmentRecord] The contextual assignment record (if any) if the event source is a `Scheduler`\n * @property {Scheduler.model.ResourceModel} [resourceRecord] The contextual resource record(if any)  if the event source is a `Scheduler`\n */\n\n/**\n * Mixin that handles dom events (click etc) for scheduler and rendered events.\n *\n * @mixin\n */\nexport default Target => class TimelineDomEvents extends (Target || Base) {\n    /**\n     * Fires after a click on a time axis cell\n     * @event timeAxisHeaderClick\n     * @param {Scheduler.column.TimeAxisColumn|Scheduler.column.VerticalTimeAxisColumn} source The column object\n     * @param {Date} startDate The start date of the header cell\n     * @param {Date} endDate The end date of the header cell\n     * @param {Event} event The event object\n     */\n\n    /**\n     * Fires after a double click on a time axis cell\n     * @event timeAxisHeaderDblClick\n     * @param {Scheduler.column.TimeAxisColumn|Scheduler.column.VerticalTimeAxisColumn} source The column object\n     * @param {Date} startDate The start date of the header cell\n     * @param {Date} endDate The end date of the header cell\n     * @param {Event} event The event object\n     */\n\n    /**\n     * Fires after a right click on a time axis cell\n     * @event timeAxisHeaderContextMenu\n     * @param {Scheduler.column.TimeAxisColumn|Scheduler.column.VerticalTimeAxisColumn} source The column object\n     * @param {Date} startDate The start date of the header cell\n     * @param {Date} endDate The end date of the header cell\n     * @param {Event} event The event object\n     */\n\n    static $name = 'TimelineDomEvents';\n\n    //region Default config\n\n    static configurable = {\n        /**\n         * The currently hovered timeline context. This is updated as the mouse or pointer moves over the timeline.\n         * @member {TimelineContext} timelineContext\n         * @readonly\n         * @category Dates\n         */\n        timelineContext : {\n            $config : {\n                // Reject non-changes so that when set from scheduleMouseMove and EventMouseMove,\n                // we only update the context and fire events when it changes.\n                equal(c1, c2) {\n                    // index is the resource index, tickParentIndex is the\n                    // tick's index in the TimeAxis.\n                    return c1?.index === c2?.index &&\n                        c1?.tickParentIndex === c2?.tickParentIndex &&\n                        !((c1?.tickStartDate || 0) - (c2?.tickStartDate || 0));\n                }\n            }\n        },\n\n        /**\n         * By default, scrolling the schedule will update the {@link #property-timelineContext} to reflect the new\n         * currently hovered context. When displaying a large number of events on screen at the same time, this will\n         * have a slight impact on scrolling performance. In such scenarios, opt out of this behavior by setting\n         * this config to `false`.\n         * @default\n         * @prp {Boolean}\n         * @category Misc\n         */\n        updateTimelineContextOnScroll : true,\n\n        /**\n         * Set to `true` to ignore reacting to DOM events (mouseover/mouseout etc) while scrolling. Useful if you\n         * want to maximize scroll performance.\n         * @config {Boolean}\n         * @default false\n         */\n        ignoreDomEventsWhileScrolling : null\n    };\n\n    static properties = {\n        schedulerEvents : {\n            pointermove : 'handleScheduleEvent',\n            mouseover   : 'handleScheduleEvent',\n            mousedown   : 'handleScheduleEvent',\n            mouseup     : 'handleScheduleEvent',\n            click       : 'handleScheduleEvent',\n            dblclick    : 'handleScheduleEvent',\n            contextmenu : 'handleScheduleEvent',\n            mousemove   : 'handleScheduleEvent',\n            mouseout    : 'handleScheduleEvent'\n        }\n    };\n\n    static delayable = {\n        // Allow the scroll event to complete in its thread, and dispatch the mousemove event next AF\n        onScheduleScroll : 'raf'\n    };\n\n    // Currently hovered events (can be parent + child)\n    hoveredEvents = new Set();\n\n    //endregion\n\n    //region Init\n\n    /**\n     * Adds listeners for DOM events for the scheduler and its events.\n     * Which events is specified in Scheduler#schedulerEvents.\n     * @private\n     */\n    initDomEvents() {\n        const\n            me = this,\n            { schedulerEvents }  = me;\n\n        // Set thisObj and element of the configured listener specs.\n        schedulerEvents.element = me.timeAxisSubGridElement;\n        schedulerEvents.thisObj = me;\n        EventHelper.on(schedulerEvents);\n        EventHelper.on({\n            element    : me.timeAxisSubGridElement,\n            mouseleave : 'handleScheduleLeaveEvent',\n            capture    : true,\n            thisObj    : me\n        });\n\n        // This is to handle scroll events while the mouse is over the schedule.\n        // For example magic mouse or touchpad scrolls, or scrolls caused by keyboard\n        // navigation while the mouse happens to be over the schedule.\n        // The context must update. We must consider any scroll because the document\n        // or some other wrapping element could be scrolling the Scheduler under the mouse.\n        if (me.updateTimelineContextOnScroll && BrowserHelper.supportsPointerEventConstructor) {\n            EventHelper.on({\n                element : document,\n                scroll  : 'onScheduleScroll',\n                capture : true,\n                thisObj : me\n            });\n        }\n    };\n\n    //endregion\n\n    //region Event handling\n    getTimeSpanMouseEventParams(eventElement, event) {\n        throw new Error('Implement in subclass');\n    }\n\n    getScheduleMouseEventParams(cellData, event) {\n        throw new Error('Implement in subclass');\n    }\n\n    /**\n     * Wraps dom Events for the scheduler and event bars and fires as our events.\n     * For example click -> scheduleClick or eventClick\n     * @private\n     * @param event\n     */\n    handleScheduleEvent(event) {\n        const me = this;\n\n        if (me.ignoreDomEventsWhileScrolling && (me.scrolling || me.timeAxisSubGrid.scrolling)) {\n            return;\n        }\n\n        const timelineContext = me.getTimelineEventContext(event);\n\n        // Cache the last pointer event so that  when scrolling below the mouse\n        // we can inject mousemove events at that point.\n        me.lastPointerEvent = event;\n\n        // We are over the schedule region\n        if (timelineContext) {\n            // Only fire a scheduleXXXX event if we are *not* over an event.\n            // If over an event fire (event|task)XXXX.\n            me.trigger(`${timelineContext.eventElement ? me.scheduledEventName : 'schedule'}${eventNameMap[event.type] || StringHelper.capitalize(event.type)}`, timelineContext);\n        }\n\n        // If the context has changed, updateTimelineContext will fire events\n        me.timelineContext = timelineContext;\n    }\n\n    handleScheduleLeaveEvent(event) {\n        if (event.target === this.timeAxisSubGridElement) {\n            this.handleScheduleEvent(event);\n        }\n    }\n\n    /**\n     * This handles the scheduler being scrolled below the mouse by trackpad or keyboard events.\n     * The context, if present needs to be recalculated.\n     * @private\n     */\n    onScheduleScroll({ target }) {\n        const me = this;\n        // If the latest mouse event resulted in setting a context, we need to reproduce that event at the same clientX,\n        // clientY in order to keep the context up to date while scrolling.\n        // If the scroll is because of a pan feature drag (on us or a partner), we must not do this.\n        // Target might be removed in salesforce by Locker Service if scroll event occurs on body\n        if (\n            target && me.updateTimelineContextOnScroll && !me.features.pan?.isActive &&\n            !me.partners.some(p => p.features.pan?.isActive) &&\n            (target.contains(me.element) || me.bodyElement.contains(target))\n        ) {\n            const { timelineContext, lastPointerEvent } = me;\n\n            if (timelineContext) {\n                const\n                    targetElement = DomHelper.elementFromPoint(timelineContext.domEvent.clientX, timelineContext.domEvent.clientY),\n                    pointerEvent  = new BrowserHelper.PointerEventConstructor('pointermove', lastPointerEvent),\n                    mouseEvent    = new MouseEvent('mousemove', lastPointerEvent);\n\n                // See https://github.com/bryntum/support/issues/6274\n                // The pointerId does not propagate correctly on the synthetic PointerEvent, but also is readonly, so\n                // redefine the property. This is required by Ext JS gesture publisher which tracks pointer movements\n                // while a pointer is down. Without the correct pointerId, Ext JS would see this move as a \"missed\"\n                // pointerdown and forever await its pointerup (i.e., it would get stuck in the activeTouches). This\n                // would cause all future events to be perceived as part of or the end of a drag and would never again\n                // dispatch pointer events correctly. Finally, lastPointerEvent.pointerId is often incorrect (undefined\n                // in fact), so check the most recent pointerdown/touchstart event and default to 1\n                Object.defineProperty(pointerEvent, 'pointerId', {\n                    value : GlobalEvents.currentPointerDown?.pointerId ?? GlobalEvents.currentTouch?.identifier ?? 1\n                });\n\n                // Drag code should ignore these synthetic events\n                pointerEvent.scrollInitiated = mouseEvent.scrollInitiated = true;\n\n                // Emulate the correct browser sequence for mouse move events\n                targetElement?.dispatchEvent(pointerEvent);\n                targetElement?.dispatchEvent(mouseEvent);\n            }\n        }\n    }\n\n    updateTimelineContext(context, oldContext) {\n        /**\n         * Fired when the pointer-activated {@link #property-timelineContext} has changed.\n         * @event timelineContextChange\n         * @param {TimelineContext} oldContext The tick/resource context being deactivated.\n         * @param {TimelineContext} context The tick/resource context being activated.\n         */\n        this.trigger('timelineContextChange', { oldContext, context });\n\n        if (context && !oldContext) {\n            this.trigger('scheduleMouseEnter', context);\n        }\n        else if (!context) {\n            this.trigger('scheduleMouseLeave', { event : oldContext.event });\n        }\n    }\n\n    /**\n     * Gathers contextual information about the schedule contextual position of the passed event.\n     *\n     * Used by schedule mouse event handlers, but also by the scheduleContext feature.\n     * @param {Event} domEvent The DOM event to gather context for.\n     * @returns {TimelineContext} the schedule DOM event context\n     * @internal\n     */\n    getTimelineEventContext(domEvent) {\n        const\n            me           = this,\n            eventElement = domEvent.target.closest(me.eventInnerSelector),\n            cellElement  = me.getCellElementFromDomEvent(domEvent);\n\n        if (cellElement) {\n            const date = me.getDateFromDomEvent(domEvent, 'floor');\n\n            if (!date) {\n                return;\n            }\n\n            const\n                cellData    = DomDataStore.get(cellElement),\n                mouseParams = eventElement ? me.getTimeSpanMouseEventParams(eventElement, domEvent) : me.getScheduleMouseEventParams(cellData, domEvent);\n\n            if (!mouseParams) {\n                return;\n            }\n\n            const\n                index     = me.isVertical ? me.resourceStore.indexOf(mouseParams.resourceRecord) : cellData.row.dataIndex,\n                tickIndex = me.timeAxis.getTickFromDate(date),\n                tick      = me.timeAxis.getAt(Math.floor(tickIndex));\n\n            if (tick) {\n                return {\n                    isTimelineContext : true,\n                    domEvent,\n                    eventElement,\n                    cellElement,\n                    index,\n                    tick,\n                    tickIndex,\n                    date,\n                    tickStartDate     : tick.startDate,\n                    tickEndDate       : tick.endDate,\n                    tickParentIndex   : tick.parentIndex,\n                    row               : cellData.row,\n                    event             : domEvent,\n                    ...mouseParams\n                };\n            }\n        }\n    }\n\n    getCellElementFromDomEvent({ target, clientY, type }) {\n        const\n            me           = this,\n            {\n                isVertical,\n                foregroundCanvas\n            }            = me,\n            eventElement = target.closest(me.eventSelector);\n\n        // If event was on an event bar, calculate the cell.\n        if (eventElement) {\n            return me.getCell({\n                [isVertical ? 'row' : 'record'] : isVertical ? 0 : me.resolveRowRecord(eventElement),\n                column                          : me.timeAxisColumn\n            });\n        }\n        // If event was triggered by an element in the foreground canvas, but not an event element\n        // we need to ascertain the cell \"behind\" that element to be able to create the context.\n        else if (foregroundCanvas.contains(target)) {\n            // Only trigger a Scheduler event if the event was on the background itself.\n            // Otherwise, we will trigger unexpected events on things like dependency lines which historically\n            // have never triggered scheduleXXXX events. The exception to this is the mousemove event which\n            // needs to always fire so that timelineContext and scheduleTooltip correctly track the mouse\n            if (target === foregroundCanvas || type === 'mousemove') {\n                return me.rowManager.getRowAt(clientY, false)?.getCell(me.timeAxisColumn.id);\n            }\n        }\n        else {\n            // Event was inside a row, or on a row border.\n            return target.matches('.b-grid-row') ? target.firstElementChild : target.closest(me.timeCellSelector);\n        }\n    }\n\n    // Overridden by ResourceTimeRanges to \"pass events through\" to the schedule\n    matchScheduleCell(element) {\n        return element.closest(this.timeCellSelector);\n    }\n\n    onElementMouseButtonEvent(event) {\n        const targetCell = event.target.closest('.b-sch-header-timeaxis-cell');\n        if (targetCell) {\n            const\n                me           = this,\n                position     = targetCell.parentElement.dataset.headerPosition,\n                headerCells  = me.timeAxisViewModel.columnConfig[position],\n                index        = me.timeAxis.isFiltered ? headerCells.findIndex(cell => cell.index == targetCell.dataset.tickIndex) : targetCell.dataset.tickIndex,\n                cellConfig   = headerCells[index],\n                contextMenu  = me.features.contextMenu;\n\n            // Skip same events with Grid context menu triggerEvent\n            if (!contextMenu || event.type !== contextMenu.triggerEvent) {\n                this.trigger(`timeAxisHeader${StringHelper.capitalize(event.type)}`, {\n                    startDate : cellConfig.start,\n                    endDate   : cellConfig.end,\n                    event\n                });\n            }\n        }\n    }\n\n    onElementMouseDown(event) {\n        this.onElementMouseButtonEvent(event);\n        super.onElementMouseDown(event);\n    }\n\n    onElementClick(event) {\n        this.onElementMouseButtonEvent(event);\n        super.onElementClick(event);\n    }\n\n    onElementDblClick(event) {\n        this.onElementMouseButtonEvent(event);\n        super.onElementDblClick(event);\n    }\n\n    onElementContextMenu(event) {\n        this.onElementMouseButtonEvent(event);\n        super.onElementContextMenu(event);\n    }\n\n    /**\n     * Relays mouseover events as eventmouseenter if over rendered event.\n     * Also adds Scheduler#overScheduledEventClass to the hovered element.\n     * @private\n     */\n    onElementMouseOver(event) {\n        const\n            me                = this;\n\n        if (me.ignoreDomEventsWhileScrolling && (me.scrolling || me.timeAxisSubGrid.scrolling)) {\n            return;\n        }\n\n        super.onElementMouseOver(event);\n\n        const\n            { target }        = event,\n            { hoveredEvents } = me;\n\n        // We must be over the event bar\n        if (target.closest(me.eventInnerSelector) && !me.features.eventDrag?.isDragging) {\n            const eventElement = target.closest(me.eventSelector);\n\n            if (!hoveredEvents.has(eventElement) && !me.preventOverCls) {\n                hoveredEvents.add(eventElement);\n                eventElement.classList.add(me.overScheduledEventClass);\n\n                const params = me.getTimeSpanMouseEventParams(eventElement, event);\n                if (params) {\n                    // do not fire this event if model cannot be found\n                    // this can be the case for \"b-sch-dragcreator-proxy\" elements for example\n                    me.trigger(`${me.scheduledEventName}MouseEnter`, params);\n                }\n            }\n        }\n        else if (hoveredEvents.size) {\n            me.unhoverAll(event);\n        }\n    }\n\n    /**\n     * Relays mouseout events as eventmouseleave if out from rendered event.\n     * Also removes Scheduler#overScheduledEventClass from the hovered element.\n     * @private\n     */\n    onElementMouseOut(event) {\n        super.onElementMouseOut(event);\n\n        const\n            me                        = this,\n            { target, relatedTarget } = event,\n            eventInner                = target.closest(me.eventInnerSelector),\n            eventWrap                 = target.closest(me.eventSelector),\n            timeSpanRecord            = me.resolveTimeSpanRecord(target);\n\n        // We must be over the event bar\n        // <remove-on-release>\n        // TODO: this isDragging check should be done in the feature (all drag/resize features actually) and here we should have a hook call\n        // </remove-on-release>\n        if (eventInner && timeSpanRecord && me.hoveredEvents.has(eventWrap) && !me.features.eventDrag?.isDragging) {\n            // out to child shouldn't count...\n            if (relatedTarget && DomHelper.isDescendant(eventInner, relatedTarget)) {\n                return;\n            }\n\n            me.unhover(eventWrap, event);\n        }\n    }\n\n    unhover(element, event) {\n        const me = this;\n\n        element.classList.remove(me.overScheduledEventClass);\n        me.trigger(`${me.scheduledEventName}MouseLeave`, me.getTimeSpanMouseEventParams(element, event));\n        me.hoveredEvents.delete(element);\n    }\n\n    unhoverAll(event) {\n        for (const element of this.hoveredEvents) {\n            !element.isReleased && !element.classList.contains('b-released') && this.unhover(element, event);\n        }\n\n        // Might not be empty because of conditional unhover above\n        this.hoveredEvents.clear();\n    }\n\n    //endregion\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport PresetManager from '../../preset/PresetManager.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\nimport PresetStore from '../../preset/PresetStore.js';\nimport DateHelper, { unitMagnitudes } from '../../../Core/helper/DateHelper.js';\n\n/**\n * @module Scheduler/view/mixin/TimelineViewPresets\n */\n\nconst\n    datesDiffer = (d1 = 0, d2 = 0) => d2 - d1;\n\n/**\n * View preset handling.\n *\n * A Scheduler's {@link #config-presets} are loaded with a default set of {@link Scheduler.preset.ViewPreset ViewPresets}\n * which are defined by the system in the {@link Scheduler.preset.PresetManager PresetManager}.\n *\n * The zooming feature works by reconfiguring the Scheduler with a new {@link Scheduler.preset.ViewPreset ViewPreset} selected\n * from the {@link #config-presets} store.\n *\n * {@link Scheduler.preset.ViewPreset ViewPresets} can be added and removed from the store to change the amount of available steps.\n * Range of zooming in/out can be also modified with {@link Scheduler.view.mixin.TimelineZoomable#config-maxZoomLevel} / {@link Scheduler.view.mixin.TimelineZoomable#config-minZoomLevel} properties.\n *\n * This mixin adds additional methods to the column : {@link Scheduler.view.mixin.TimelineZoomable#property-maxZoomLevel}, {@link Scheduler.view.mixin.TimelineZoomable#property-minZoomLevel}, {@link Scheduler.view.mixin.TimelineZoomable#function-zoomToLevel}, {@link Scheduler.view.mixin.TimelineZoomable#function-zoomIn},\n * {@link Scheduler.view.mixin.TimelineZoomable#function-zoomOut}, {@link Scheduler.view.mixin.TimelineZoomable#function-zoomInFull}, {@link Scheduler.view.mixin.TimelineZoomable#function-zoomOutFull}.\n *\n * **Notice**: Zooming is not supported when `forceFit` option is set to true for the Scheduler or for filtered timeaxis.\n *\n * @mixin\n */\nexport default Target => class TimelineViewPresets extends (Target || Base) {\n    static get $name() {\n        return 'TimelineViewPresets';\n    }\n\n    //region Default config\n\n    static get configurable() {\n        return {\n            /**\n             * A string key used to lookup a predefined {@link Scheduler.preset.ViewPreset} (e.g. 'weekAndDay', 'hourAndDay'),\n             * managed by {@link Scheduler.preset.PresetManager}. See {@link Scheduler.preset.PresetManager} for more information.\n             * Or a config object for a viewPreset.\n             *\n             * Options:\n             * - 'secondAndMinute'\n             * - 'minuteAndHour'\n             * - 'hourAndDay'\n             * - 'dayAndWeek'\n             * - 'dayAndMonth'\n             * - 'weekAndDay'\n             * - 'weekAndMonth',\n             * - 'monthAndYear'\n             * - 'year'\n             * - 'manyYears'\n             * - 'weekAndDayLetter'\n             * - 'weekDateAndMonth'\n             * - 'day'\n             * - 'week'\n             *\n             * If passed as a config object, the settings from the viewPreset with the provided `base` property will be used along\n             * with any overridden values in your object.\n             *\n             * To override:\n             * ```javascript\n             * viewPreset : {\n             *   base    : 'hourAndDay',\n             *   id      : 'myHourAndDayPreset',\n             *   headers : [\n             *       {\n             *           unit      : \"hour\",\n             *           increment : 12,\n             *           renderer  : (startDate, endDate, headerConfig, cellIdx) => {\n             *               return \"\";\n             *           }\n             *       }\n             *   ]\n             * }\n             * ```\n             * or set a new valid preset config if the preset is not registered in the {@link Scheduler.preset.PresetManager}.\n             *\n             * When you use scheduler in weekview mode, this config is used to pick view preset. If passed view preset is not\n             * supported by weekview (only 2 supported by default - 'day' and 'week') default preset will be used - 'week'.\n             * @config {String|ViewPresetConfig}\n             * @default\n             * @category Common\n             */\n            viewPreset : 'weekAndDayLetter',\n\n            /**\n             * Get the {@link Scheduler.preset.PresetStore} created for the Scheduler,\n             * or set an array of {@link Scheduler.preset.ViewPreset} config objects.\n             * @member {Scheduler.preset.PresetStore|ViewPresetConfig[]} presets\n             * @category Common\n             */\n            /**\n             * An array of {@link Scheduler.preset.ViewPreset} config objects\n             * which describes the available timeline layouts for this scheduler.\n             *\n             * By default, a predefined set is loaded from the {@link Scheduler.preset.PresetManager}.\n             *\n             * A {@link Scheduler.preset.ViewPreset} describes the granularity of the\n             * timeline view and the layout and subdivisions of the timeline header.\n             * @config {ViewPresetConfig[]} presets\n             *\n             * @category Common\n             */\n            presets : true,\n\n            /**\n             * Defines how dates will be formatted in tooltips etc. This config has priority over similar config on the\n             * view preset. For allowed values see {@link Core.helper.DateHelper#function-format-static}.\n             *\n             * By default, this is ingested from {@link Scheduler.preset.ViewPreset} upon change of\n             * {@link Scheduler.preset.ViewPreset} (Such as when zooming in or out). But Setting this\n             * to your own value, overrides that behaviour.\n             * @prp {String}\n             * @category Scheduled events\n             */\n            displayDateFormat : null\n        };\n    }\n\n    //endregion\n\n    /**\n     * Get/set the current view preset\n     * @member {Scheduler.preset.ViewPreset|ViewPresetConfig|String} viewPreset\n     * @param [viewPreset.options]\n     * @param {Date} [viewPreset.options.startDate] A new start date for the time axis\n     * @param {Date} [viewPreset.options.endDate] A new end date for the time axis\n     * @param {Date} [viewPreset.options.centerDate] Where to center the new time axis\n     * @category Common\n    */\n\n    //region Get/set\n\n    changePresets(presets) {\n        const config = {\n            owner : this\n        };\n        let data = [];\n\n        // By default includes all presets\n        if (presets === true) {\n            data = PresetManager.allRecords;\n        }\n        // Accepts an array of presets\n        else if (Array.isArray(presets)) {\n            for (const preset of presets) {\n                // If we got a presetId\n                if (typeof preset === 'string') {\n                    const presetRecord = PresetManager.getById(preset);\n                    if (presetRecord) {\n                        data.push(presetRecord);\n                    }\n                }\n                else {\n                    data.push(preset);\n                }\n            }\n        }\n        // Or a store config object\n        else {\n            ObjectHelper.assign(config, presets);\n        }\n        // Creates store first and then adds data, because data config does not support a mix of raw objects and records.\n        const presetStore = new PresetStore(config);\n        presetStore.add(data);\n\n        return presetStore;\n    }\n\n    changeViewPreset(viewPreset, oldViewPreset) {\n        const\n            me           = this,\n            { presets } = me;\n\n        if (viewPreset) {\n            viewPreset = presets.createRecord(viewPreset);\n\n            // If an existing ViewPreset id is used, this will replace it.\n            if (!presets.includes(viewPreset)) {\n                presets.add(viewPreset);\n            }\n        }\n        else {\n            viewPreset = presets.first;\n        }\n\n        const\n            lastOpts = me.lastViewPresetOptions || {},\n            options  = viewPreset.options || (viewPreset.options = {}),\n            event    = options.event = {\n                startDate : options.startDate,\n                endDate   : options.endDate,\n                from      : oldViewPreset,\n                to        : viewPreset,\n                preset    : viewPreset\n            },\n            presetChanged  = !me._viewPreset || !me._viewPreset.equals(viewPreset),\n            optionsChanged = datesDiffer(options.startDate, lastOpts.startDate) ||\n                datesDiffer(options.endDate, lastOpts.endDate) ||\n                datesDiffer(options.centerDate, lastOpts.centerDate) ||\n                (options.startDate && datesDiffer(options.startDate, me.startDate)) ||\n                (options.endDate && datesDiffer(options.endDate, me.endDate));\n\n        // Only return the value for onward processing if there's a change\n        if (presetChanged || optionsChanged) {\n\n            // Bypass the no-change check if the viewPreset is the same and we only got in here\n            // because different options were asked for.\n            if (!presetChanged) {\n                me._viewPreset = null;\n            }\n\n            /**\n             * Fired before the {@link #config-viewPreset} is changed.\n             * @event beforePresetChange\n             * @param {Scheduler.view.Scheduler} source This Scheduler instance.\n             * @param {Date} startDate The new start date of the timeline.\n             * @param {Date} endDate The new end date of the timeline.\n             * @param {Scheduler.preset.ViewPreset} from The outgoing ViewPreset.\n             * @param {Scheduler.preset.ViewPreset} to The ViewPreset being switched to.\n             * @preventable\n             */\n            // Do not trigger events for the initial preset\n            if (me.isConfiguring || me.trigger('beforePresetChange', event) !== false) {\n                return viewPreset;\n            }\n        }\n    }\n\n    get displayDateFormat() {\n        return this._displayDateFormat || this.viewPreset.displayDateFormat;\n    }\n\n    updateDisplayDateFormat(format) {\n        // Start/EndDateColumn listens for this to change their format to match\n        this.trigger('displayDateFormatChange', { format });\n    }\n\n    /**\n     * Method to get a formatted display date\n     * @private\n     * @param {Date} date The date\n     * @returns {String} The formatted date\n     */\n    getFormattedDate(date) {\n        return DateHelper.format(date, this.displayDateFormat);\n    }\n\n    updateViewPreset(preset) {\n        const\n            me          = this,\n            { options } = preset,\n            {\n                event,\n                startDate,\n                endDate\n            }           = options,\n            {\n                isHorizontal,\n                _timeAxis : timeAxis,    // Do not tickle the getter, we are just peeking to see if it's there yet.\n                _timeAxisViewModel : timeAxisViewModel // Ditto\n            } = me,\n            rtl = isHorizontal && me.rtl;\n\n        let\n            {\n                centerDate,\n                zoomDate,\n                zoomPosition\n            }           = options,\n            forceUpdate = false;\n\n        me.syncSplits?.(split => split.viewPreset = preset);\n\n        // Options must not be reused when this preset is used again.\n        delete preset.options;\n\n        // Raise flag to prevent partner from changing view preset if one is in progress\n        me._viewPresetChanging = true;\n\n        if (timeAxis && !me.isConfiguring) {\n            const { timelineScroller } = me;\n\n            // Cache options only when they are applied so that non-change vetoing in changeViewPreset is accurate\n            me.lastViewPresetOptions = options;\n\n            // Timeaxis may already be configured (in case of sharing with the timeline partner), no need to reconfigure it\n            if (timeAxis.isConfigured) {\n                // None of this reconfiguring should cause a refresh\n                me.suspendRefresh();\n\n                // Set up these configs only if we actually have them.\n                const timeAxisCfg = ObjectHelper.copyProperties({}, me, [\n                    'weekStartDay',\n                    'startTime',\n                    'endTime'\n                ]);\n\n                if (me.infiniteScroll) {\n                    Object.assign(timeAxisCfg, timeAxisViewModel.calculateInfiniteScrollingDateRange(\n                        centerDate || new Date((startDate.getTime() + endDate.getTime()) / 2),\n                        true,\n                        preset\n                    ));\n                }\n                // if startDate is provided we use it and the provided endDate\n                else if (startDate) {\n                    timeAxisCfg.startDate = startDate;\n                    timeAxisCfg.endDate = endDate;\n\n                    // if both dates are provided we can calculate centerDate for the viewport\n                    if (!centerDate && endDate) {\n                        centerDate = new Date((startDate.getTime() + endDate.getTime()) / 2);\n                    }\n\n                    // when no start/end dates are provided we use the current timespan\n                }\n                else {\n                    timeAxisCfg.startDate = timeAxis.startDate;\n                    timeAxisCfg.endDate = endDate || timeAxis.endDate;\n\n                    if (!centerDate) {\n                        centerDate = me.viewportCenterDate;\n                    }\n                }\n\n                timeAxis.isConfigured = false;\n                timeAxisCfg.viewPreset = preset;\n                timeAxis.reconfigure(timeAxisCfg, true);\n\n                timeAxisViewModel.reconfigure({\n                    viewPreset : preset,\n                    headers    : preset.headers,\n\n                    // This was hardcoded to 'middle' prior to the Preset refactor.\n                    // In the old code, the default headers were 'top' and 'middle', which\n                    // meant that 'middle' meant the lowest header.\n                    // So this is now length - 1.\n                    columnLinesFor : preset.columnLinesFor != null ? preset.columnLinesFor : preset.headers.length - 1,\n\n                    tickSize : isHorizontal ? preset.tickWidth : preset.tickHeight || preset.tickWidth || 60\n                });\n\n                // Allow refresh to run after the reconfiguring, without refreshing since we will do that below anyway\n                me.resumeRefresh(false);\n            }\n\n            me.refresh();\n\n            // if view is rendered and scroll is not disabled by \"notScroll\" option\n            if (!options.notScroll && me.isPainted) {\n                if (options.visibleDate) {\n                    me.visibleDate = options.visibleDate;\n                }\n                // If a zoom at a certain date position is being requested, scroll the zoomDate\n                // to the required zoomPosition so that the zoom happens centered where the\n                // pointer events that are driving it targeted.\n                else if (zoomDate && zoomPosition) {\n                    const\n                        unitMagnitude = unitMagnitudes[timeAxis.resolutionUnit],\n                        unit          = unitMagnitude > 3 ? 'hour' : 'minute',\n                        milliseconds  = DateHelper.asMilliseconds((unit === 'minute' ? 15 : 1), unit),\n                        // Round the date to either 15 minutes for fine levels or 1 hour for coarse levels\n                        targetDate    = new Date(Math.round(zoomDate / milliseconds) * milliseconds);\n\n                    // setViewPreset method on partner panels should be executed with same arguments.\n                    // if one partner was provided with zoom info, other one has to be too to generate exact\n                    // header and set same scroll\n                    event.zoomDate = zoomDate;\n                    event.zoomPosition = zoomPosition;\n                    event.zoomLevel = options.zoomLevel;\n\n                    // Move the targetDate back under the mouse position as indicated by zoomPosition.\n                    // That is the offset into the TimeAxisSubGridElement.\n                    if (rtl) {\n                        timelineScroller.position = timelineScroller.scrollWidth - (me.getCoordinateFromDate(targetDate) + zoomPosition);\n                    }\n                    else {\n                        timelineScroller.position = me.getCoordinateFromDate(targetDate) - zoomPosition;\n                    }\n                }\n                // and we have centerDate to scroll to\n                else if (centerDate) {\n                    // remember the central date we scroll to (it gets reset after user scroll)\n                    me.cachedCenterDate = centerDate;\n\n                    // setViewPreset method on partner panels should be executed with same arguments.\n                    // if one partner was provided with a centerDate, other one has to be too to generate exact\n                    // header and set same scroll\n                    event.centerDate = centerDate;\n\n                    const\n                        viewportSize = me.timelineScroller.clientSize,\n                        centerCoord  = rtl ? me.timeAxisViewModel.totalSize - me.getCoordinateFromDate(centerDate, true)\n                            : me.getCoordinateFromDate(centerDate, true),\n                        coord        = Math.max(centerCoord - viewportSize / 2, 0);\n\n                    // The horizontal scroll handler must not invalidate the cached center\n                    // when this scroll event rolls round on the next frame.\n                    me.scrollingToCenter = true;\n\n                    // If preset change does not lead to a scroll we have to \"refresh\" manually at the end\n                    if (coord === (me.isHorizontal ? me.scrollLeft : me.scrollTop)) {\n                        forceUpdate = true;\n                    }\n                    else if (me.isHorizontal) {\n                        me.scrollHorizontallyTo(coord, false);\n                    }\n                    else {\n                        me.scrollVerticallyTo(coord, false);\n                    }\n\n                    // Release the lock on scrolling invalidating the cached center.\n                    me.setTimeout(() => {\n                        me.scrollingToCenter = false;\n                    }, 100);\n                }\n                else {\n                    // If preset change does not lead to a scroll we have to \"refresh\" manually at the end\n                    if ((me.isHorizontal ? me.scrollLeft : me.scrollTop) === 0) {\n                        forceUpdate = true;\n                    }\n                    // If we don't have a center date to scroll to, we reset scroll (this is bw compatible behavior)\n                    else {\n                        me.timelineScroller.scrollTo(0);\n                    }\n                }\n            }\n        }\n\n        // Update Scheduler element showing what preset is applied\n        me.dataset.presetId = preset.id;\n\n        /**\n         * Fired after the {@link #config-viewPreset} has changed.\n         * @event presetChange\n         * @param {Scheduler.view.Scheduler} source This Scheduler instance.\n         * @param {Date} startDate The new start date of the timeline.\n         * @param {Date} centerDate The new center date of the timeline.\n         * @param {Date} endDate The new end date of the timeline.\n         * @param {Scheduler.preset.ViewPreset} from The outgoing ViewPreset.\n         * @param {Scheduler.preset.ViewPreset} to The ViewPreset being switched to.\n         * @preventable\n         */\n        me.trigger('presetChange', event);\n\n        me._viewPresetChanging = false;\n\n        if (forceUpdate) {\n            if (me.isHorizontal) {\n                me.currentOrientation.updateFromHorizontalScroll(me.scrollLeft, true);\n            }\n            else {\n                me.currentOrientation.updateFromVerticalScroll(me.scrollTop);\n            }\n        }\n    }\n\n    //endregion\n\n    doDestroy() {\n        if (this._presets.owner === this) {\n            this._presets.destroy();\n        }\n        super.doDestroy();\n    }\n\n    // This function is not meant to be called by any code other than Base#getCurrentConfig().\n    getCurrentConfig(options) {\n        const result = super.getCurrentConfig(options);\n\n        // Cannot store name, will not be allowed when reapplying\n        if (result.viewPreset && result.viewPreset.name && !result.viewPreset.base) {\n            delete result.viewPreset.name;\n        }\n\n        return result;\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\nimport EventHelper from '../../../Core/helper/EventHelper.js';\n\n/**\n * @module Scheduler/view/mixin/TimelineZoomable\n */\n\n/**\n * Options which may be used when changing the {@link Scheduler.view.Scheduler#property-viewPreset} property.\n *\n * @typedef {Object} ChangePresetOptions\n * @property {VisibleDate} [visibleDate] A `visibleDate` specification to bring into view after the new\n * `ViewPreset` is applied.\n * @property {Date} [startDate] New time frame start. If provided along with end, view will be centered in this\n * time interval, ignoring centerDate config. __Ignored if {@link Scheduler.view.Scheduler#config-infiniteScroll} is used.__\n * @property {Date} [endDate] New time frame end. __Ignored if {@link Scheduler.view.Scheduler#config-infiniteScroll} is used.__\n * @property {Date} [centerDate] Date to keep in center. Is ignored when start and end are provided.\n * @property {Date} [zoomDate] The date that should be positioned at the passed `datePosition` client offset.\n * @property {Number} [zoomPosition] The client offset at which the passed `zoomDate` should be positioned.\n * @property {Number} [width] Lowest tick width. Might be increased automatically\n */\n\n/**\n * Mixin providing \"zooming\" functionality.\n *\n * The zoom levels are stored as instances of {@link Scheduler.preset.ViewPreset}s, and are\n * cached centrally in the {@link Scheduler.preset.PresetManager}.\n *\n * The default presets are loaded into the {@link Scheduler.view.mixin.TimelineViewPresets#config-presets}\n * store upon Scheduler instantiation. Preset selection is covered in the\n * {@link Scheduler.view.mixin.TimelineViewPresets} mixin.\n *\n * To specify custom zoom levels please provide a set of view presets to the global PresetManager store **before**\n * scheduler creation, or provide a set of view presets to a specific scheduler only:\n *\n * ```javascript\n * const myScheduler = new Scheduler({\n *     presets : [\n *         {\n *             base : 'hourAndDay',\n *             id   : 'MyHourAndDay',\n *             // other preset configs....\n *         },\n *         {\n *             base : 'weekAndMonth',\n *             id   : 'MyWeekAndMonth',\n *             // other preset configs....\n *         }\n *     ],\n *     viewPreset : 'MyHourAndDay',\n *     // other scheduler configs....\n *     });\n * ```\n *\n * @mixin\n */\nexport default Target => class TimelineZoomable extends (Target || Base) {\n    static $name = 'TimelineZoomable';\n\n    static defaultConfig = {\n        /**\n         * If true, you can zoom in and out on the time axis using CTRL-key + mouse wheel.\n         * @config {Boolean}\n         * @default\n         * @category Zoom\n         */\n        zoomOnMouseWheel : true,\n\n        /**\n         * True to zoom to time span when double-clicking a time axis cell.\n         * @config {Boolean}\n         * @default\n         * @category Zoom\n         */\n        zoomOnTimeAxisDoubleClick : true,\n\n        /**\n         * The minimum zoom level to which {@link #function-zoomOut} will work. Defaults to 0 (year ticks)\n         * @config {Number}\n         * @category Zoom\n         * @default\n         */\n        minZoomLevel : 0,\n\n        /**\n         * The maximum zoom level to which {@link #function-zoomIn} will work. Defaults to the number of\n         * {@link Scheduler.preset.ViewPreset ViewPresets} available, see {@link Scheduler/view/mixin/TimelineViewPresets#property-presets}\n         * for information. Unless you have modified the collection of available presets, the max zoom level is\n         * milliseconds.\n         * @config {Number}\n         * @category Zoom\n         * @default 23\n         */\n        maxZoomLevel : null,\n\n        /**\n         * Integer number indicating the size of timespan during zooming. When zooming, the timespan is adjusted to make\n         * the scrolling area `visibleZoomFactor` times wider than the timeline area itself. Used in\n         * {@link #function-zoomToSpan} and {@link #function-zoomToLevel} functions.\n         * @config {Number}\n         * @default\n         * @category Zoom\n         */\n        visibleZoomFactor : 5,\n\n        /**\n         * Whether the originally rendered timespan should be preserved while zooming. By default, it is set to `false`,\n         * meaning the timeline panel will adjust the currently rendered timespan to limit the amount of HTML content to\n         * render. When setting this option to `true`, be careful not to allow to zoom a big timespan in seconds\n         * resolution for example. That will cause **a lot** of HTML content to be rendered and affect performance. You\n         * can use {@link #config-minZoomLevel} and {@link #config-maxZoomLevel} config options for that.\n         * @config {Boolean}\n         * @default\n         * @category Zoom\n         */\n        zoomKeepsOriginalTimespan : null\n    };\n\n    // We cache the last mousewheel position, so that during zooming we can\n    // maintain a stable zoom point even if the mouse moves a little.\n    lastWheelTime = -1;\n    lastZoomPosition = -1;\n\n    construct(config) {\n        const me = this;\n\n        super.construct(config);\n\n        if (me.zoomOnMouseWheel) {\n            EventHelper.on({\n                element   : me.timeAxisSubGridElement,\n                wheel     : 'onWheel',\n                // Throttle zooming with the wheel a bit to have greater control of it\n                throttled : {\n                    buffer : 100,\n                    // Prevent events from slipping through the throttle, causing scroll\n                    alt    : e => e.ctrlKey && e.preventDefault()\n                },\n                thisObj : me,\n                capture : true,\n                passive : false\n            });\n        }\n\n        if (me.zoomOnTimeAxisDoubleClick) {\n            me.ion({\n                timeaxisheaderdblclick : ({ startDate, endDate }) => {\n                    if (!me.forceFit) {\n                        me.zoomToSpan({\n                            startDate,\n                            endDate\n                        });\n                    }\n                }\n            });\n        }\n    }\n\n    get maxZoomLevel() {\n        return this._maxZoomLevel || (this.presets.count - 1);\n    }\n\n    /**\n     * Get/set the {@link #config-maxZoomLevel} value\n     * @property {Number}\n     * @category Zoom\n     */\n    set maxZoomLevel(level) {\n        if (typeof level !== 'number') {\n            level = this.presets.count - 1;\n        }\n\n        if (level < 0 || level >= this.presets.count) {\n            throw new Error('Invalid range for `maxZoomLevel`');\n        }\n\n        this._maxZoomLevel = level;\n    }\n\n    get minZoomLevel() {\n        return this._minZoomLevel;\n    }\n\n    /**\n     * Sets the {@link #config-minZoomLevel} value\n     * @property {Number}\n     * @category Zoom\n     */\n    set minZoomLevel(level) {\n        if (typeof level !== 'number') {\n            level = 0;\n        }\n\n        if (level < 0 || level >= this.presets.count) {\n            throw new Error('Invalid range for `minZoomLevel`');\n        }\n\n        this._minZoomLevel = level;\n    }\n\n    /**\n     * Current zoom level, which is equal to the {@link Scheduler.preset.ViewPreset ViewPreset} index\n     * in the provided array of {@link Scheduler.view.mixin.TimelineViewPresets#config-presets zoom levels}.\n     * @property {Number}\n     * @category Zoom\n     */\n    get zoomLevel() {\n        return this.presets.indexOf(this.viewPreset);\n    }\n\n    // noinspection JSAnnotator\n    set zoomLevel(level) {\n        this.zoomToLevel(level);\n    }\n\n    /**\n     * Returns number of milliseconds per pixel.\n     * @param {Object} level Element from array of {@link Scheduler.view.mixin.TimelineViewPresets#config-presets}.\n     * @param {Boolean} ignoreActualWidth If true, then density will be calculated using default zoom level settings.\n     * Otherwise, density will be calculated for actual tick width.\n     * @returns {Number} Return number of milliseconds per pixel.\n     * @private\n     */\n    getMilliSecondsPerPixelForZoomLevel(preset, ignoreActualWidth) {\n        const\n            { bottomHeader } = preset,\n            // Scheduler uses direction independent tickSize, but presets are allowed to define different sizes for\n            // vertical and horizontal -> cant use preset.tickSize here\n            width            = this.isHorizontal ? preset.tickWidth : preset.tickHeight;\n\n        // trying to convert the unit + increment to a number of milliseconds\n        // this number is not fixed (month can be 28, 30 or 31 day), but at least this conversion\n        // will be consistent (should be no DST changes at year 1)\n        return Math.round(\n            (DateHelper.add(new Date(1, 0, 1), bottomHeader.increment || 1, bottomHeader.unit) - new Date(1, 0, 1)) /\n            // `actualWidth` is a column width after view adjustments applied to it (see `calculateTickWidth`)\n            // we use it if available to return the precise index value from `getCurrentZoomLevelIndex`\n            (ignoreActualWidth ? width : preset.actualWidth || width)\n        );\n    }\n\n    /**\n     * Zooms to passed view preset, saving center date. Method accepts config object as a first argument, which can be\n     * reduced to primitive type (string,number) when no additional options required. e.g.:\n     * ```javascript\n     * // zooming to preset\n     * scheduler.zoomTo({ preset : 'hourAndDay' })\n     * // shorthand\n     * scheduler.zoomTo('hourAndDay')\n     *\n     * // zooming to level\n     * scheduler.zoomTo({ level : 0 })\n     * // shorthand\n     * scheduler.zoomTo(0)\n     * ```\n     *\n     * It is also possible to zoom to a time span by omitting `preset` and `level` configs, in which case scheduler sets\n     * the time frame to a specified range and applies zoom level which allows to fit all columns to this range. The\n     * given time span will be centered in the scheduling view (unless `centerDate` config provided). In the same time,\n     * the start/end date of the whole time axis will be extended to allow scrolling for user.\n     * ```javascript\n     * // zooming to time span\n     * scheduler.zoomTo({\n     *     startDate : new Date(..),\n     *     endDate : new Date(...)\n     * });\n     * ```\n     *\n     * @param {ViewPresetConfig|Object|String|Number} config Config object, preset name or zoom level index.\n     * @param {String} [config.preset] Preset name to zoom to. Ignores level config in this case\n     * @param {Number} [config.level] Zoom level to zoom to. Is ignored, if preset config is provided\n     * @param {VisibleDate} [config.visibleDate] A `visibleDate` specification to bring into view after the zoom.\n     * @param {Date} [config.startDate] New time frame start. If provided along with end, view will be centered in this\n     * time interval (unless `centerDate` is present)\n     * @param {Date} [config.endDate] New time frame end\n     * @param {Date} [config.centerDate] Date that should be kept in the center. Has priority over start and end params\n     * @param {Date} [config.zoomDate] The date that should be positioned at the passed `datePosition` client offset.\n     * @param {Number} [config.zoomPosition] The client offset at which the passed `date` should be positioned.\n     * @param {Number} [config.width] Lowest tick width. Might be increased automatically\n     * @param {Number} [config.leftMargin] Amount of pixels to extend span start on (used, when zooming to span)\n     * @param {Number} [config.rightMargin] Amount of pixels to extend span end on (used, when zooming to span)\n     * @param {Number} [config.adjustStart] Amount of units to extend span start on (used, when zooming to span)\n     * @param {Number} [config.adjustEnd] Amount of units to extend span end on (used, when zooming to span)\n     * @category Zoom\n     */\n    zoomTo(config) {\n        const me = this;\n\n        if (typeof config === 'object') {\n            if (config.preset) {\n                me.zoomToLevel(config.preset, config);\n            }\n            else if (config.level != null) {\n                me.zoomToLevel(config.level, config);\n            }\n            else {\n                me.zoomToSpan(config);\n            }\n        }\n        else {\n            me.zoomToLevel(config);\n        }\n    }\n\n    /**\n     * Allows zooming to certain level of {@link Scheduler.view.mixin.TimelineViewPresets#config-presets} array.\n     * Automatically limits zooming between {@link #config-maxZoomLevel} and {@link #config-minZoomLevel}. Can also set\n     * time axis timespan to the supplied start and end dates.\n     *\n     * @param {Number} preset Level to zoom to.\n     * @param {ChangePresetOptions} [options] Object containing options which affect how the new preset is applied.\n     * @returns {Number|null} level Current zoom level or null if it hasn't changed.\n     * @category Zoom\n     */\n    zoomToLevel(preset, options = {}) {\n        if (this.forceFit) {\n            console.warn('Warning: The forceFit setting and zooming cannot be combined');\n            return;\n        }\n        // Sanitize numeric zooming.\n        if (typeof preset === 'number') {\n            preset = Math.min(Math.max(preset, this.minZoomLevel), this.maxZoomLevel);\n        }\n\n        const\n            me                 = this,\n            { presets }       = me,\n            tickSizeProp       = me.isVertical ? 'tickHeight' : 'tickWidth',\n            newPreset          = presets.createRecord(preset),\n            configuredTickSize = newPreset[tickSizeProp],\n            startDate          = options.startDate ? new Date(options.startDate) : null,\n            endDate            = options.endDate ? new Date(options.endDate) : null;\n\n        // If an existing ViewPreset id is used, this will replace it.\n        presets.add(newPreset);\n\n        let span = startDate && endDate ? { startDate, endDate } : null;\n\n        const\n            centerDate             = options.centerDate ? new Date(options.centerDate) : (span ? new Date((startDate.getTime() + endDate.getTime()) / 2) : me.viewportCenterDateCached);\n\n        let scrollableViewportSize = me.isVertical ? me.scrollable.clientHeight : me.timeAxisSubGrid.width;\n\n        if (scrollableViewportSize === 0) {\n            const\n                { _beforeCollapseState } = me.timeAxisSubGrid;\n\n            if (me.isHorizontal && me.timeAxisSubGrid.collapsed && _beforeCollapseState?.width) {\n                scrollableViewportSize = _beforeCollapseState.width;\n            }\n            else {\n                return null;\n            }\n        }\n\n        // Always calculate an optimal date range for the new zoom level\n        if (!span) {\n            span = me.calculateOptimalDateRange(centerDate, scrollableViewportSize, newPreset);\n        }\n\n        // Temporarily override tick size while reconfiguring the TimeAxisViewModel\n        if ('width' in options) {\n            newPreset.setData(tickSizeProp, options.width);\n        }\n\n        me.isZooming = true;\n\n        // Passed through to the viewPreset changing method\n        newPreset.options = {\n            ...options,\n            startDate : span.startDate || me.startDate,\n            endDate   : span.endDate || me.endDate,\n            centerDate\n        };\n        me.viewPreset = newPreset;\n\n        // after switching the view preset the `width` config of the zoom level may change, because of adjustments\n        // we will save the real value in the `actualWidth` property, so that `getCurrentZoomLevelIndex` method\n        // will return the exact level index after zooming\n        newPreset.actualWidth = me.timeAxisViewModel.tickSize;\n\n        me.isZooming = false;\n\n        // Restore the tick size because the default presets are shared.\n        newPreset.setData(tickSizeProp, configuredTickSize);\n\n        return me.zoomLevel;\n    }\n\n    /**\n     * Changes the range of the scheduling chart to fit all the events in its event store.\n     * @param {Object} [options] Options object for the zooming operation.\n     * @param {Number} [options.leftMargin] Defines margin in pixel between the first event start date and first visible\n     * date\n     * @param {Number} [options.rightMargin] Defines margin in pixel between the last event end date and last visible\n     * date\n     */\n    zoomToFit(options) {\n        const eventStore = this.eventStore,\n            span       = eventStore.getTotalTimeSpan();\n\n        options = {\n            leftMargin  : 0,\n            rightMargin : 0,\n            ...options,\n            ...span\n        };\n\n        // Make sure we received a time span, event store might be empty\n        if (options.startDate && options.endDate) {\n            if (options.endDate > options.startDate) {\n                this.zoomToSpan(options);\n            }\n            else {\n                // If we only had a zero time span, just scroll it into view\n                this.scrollToDate(options.startDate);\n            }\n        }\n    }\n\n    /**\n     * Sets time frame to specified range and applies zoom level which allows to fit all columns to this range.\n     *\n     * The given time span will be centered in the scheduling view, in the same time, the start/end date of the whole\n     * time axis will be extended in the same way as {@link #function-zoomToLevel} method does, to allow scrolling for\n     * user.\n     *\n     * @param {Object} config The time frame.\n     * @param {Date} config.startDate The time frame start.\n     * @param {Date} config.endDate The time frame end.\n     * @param {Date} [config.centerDate] Date that should be kept in the center. Has priority over start and end params\n     * @param {Number} [config.leftMargin] Amount of pixels to extend span start on\n     * @param {Number} [config.rightMargin] Amount of pixels to extend span end on\n     * @param {Number} [config.adjustStart] Amount of units to extend span start on\n     * @param {Number} [config.adjustEnd] Amount of units to extend span end on\n     *\n     * @returns {Number|null} level Current zoom level or null if it hasn't changed.\n     * @category Zoom\n     */\n    zoomToSpan(config = {}) {\n        if (config.leftMargin || config.rightMargin) {\n            config.adjustStart = 0;\n            config.adjustEnd = 0;\n        }\n\n        if (!config.leftMargin) config.leftMargin = 0;\n        if (!config.rightMargin) config.rightMargin = 0;\n\n        if (!config.startDate || !config.endDate) throw new Error('zoomToSpan: must provide startDate + endDate dates');\n\n        const\n            me           = this,\n            { timeAxis } = me,\n            // this config enables old zoomToSpan behavior which we want to use for zoomToFit in Gantt\n            needToAdjust = config.adjustStart >= 0 || config.adjustEnd >= 0;\n\n        let {\n            startDate,\n            endDate\n        } = config;\n\n        if (needToAdjust) {\n            startDate = DateHelper.add(startDate, -config.adjustStart, timeAxis.mainUnit);\n            endDate   = DateHelper.add(endDate, config.adjustEnd, timeAxis.mainUnit);\n        }\n\n        if (startDate <= endDate) {\n            // get scheduling view width\n            const\n                { availableSpace } = me.timeAxisViewModel,\n                presets = me.presets.allRecords,\n                diffMS  = endDate - startDate || 1;\n\n            // if potential width of col is less than col width provided by zoom level\n            //   - we'll zoom out panel until col width fit into width from zoom level\n            // and if width of column is more than width from zoom level\n            //   - we'll zoom in until col width fit won't fit into width from zoom level\n\n            let currLevel = me.zoomLevel,\n                inc, range;\n\n            // if we zoomed out even more than the highest zoom level - limit it to the highest zoom level\n            if (currLevel === -1) currLevel = 0;\n\n            let msPerPixel             = me.getMilliSecondsPerPixelForZoomLevel(presets[currLevel], true),\n                // increment to get next zoom level:\n                // -1 means that given timespan won't fit the available width in the current zoom level, we need to zoom out,\n                // so that more content will \"fit\" into 1 px\n                //\n                // +1 mean that given timespan will already fit into available width in the current zoom level, but,\n                // perhaps if we'll zoom in a bit more, the fitting will be better\n                candidateLevel         = currLevel + (inc = diffMS / msPerPixel + config.leftMargin + config.rightMargin > availableSpace ? -1 : 1),\n                zoomLevel, levelToZoom = null;\n\n            // loop over zoom levels\n            while (candidateLevel >= 0 && candidateLevel <= presets.length - 1) {\n                // get zoom level\n                zoomLevel = presets[candidateLevel];\n\n                msPerPixel = me.getMilliSecondsPerPixelForZoomLevel(zoomLevel, true);\n                const spanWidth = diffMS / msPerPixel + config.leftMargin + config.rightMargin;\n\n                // if zooming out\n                if (inc === -1) {\n                    // if columns fit into available space, then all is fine, we've found appropriate zoom level\n                    if (spanWidth <= availableSpace) {\n                        levelToZoom = candidateLevel;\n                        // stop searching\n                        break;\n                    }\n                    // if zooming in\n                }\n                else {\n                    // if columns still fits into available space, we need to remember the candidate zoom level as a potential\n                    // resulting zoom level, the indication that we've found correct zoom level will be that timespan won't fit\n                    // into available view\n                    if (spanWidth <= availableSpace) {\n                        // if it's not currently active level\n                        if (currLevel !== candidateLevel - inc) {\n                            // remember this level as applicable\n                            levelToZoom = candidateLevel;\n                        }\n                    }\n                    else {\n                        // Sanity check to find the following case:\n                        // If we're already zoomed in at the appropriate level, but the current zoomLevel is \"too small\" to fit and had to be expanded,\n                        // there is an edge case where we should actually just stop and use the currently selected zoomLevel\n                        break;\n                    }\n                }\n\n                candidateLevel += inc;\n            }\n\n            // If we didn't find a large/small enough zoom level, use the lowest/highest level\n            levelToZoom = levelToZoom != null ? levelToZoom : candidateLevel - inc;\n\n            // presets is the array of all ViewPresets this Scheduler is using\n            zoomLevel = presets[levelToZoom];\n\n            const unitToZoom = zoomLevel.bottomHeader.unit;\n\n            // Extract the correct msPerPixel value for the new zoom level\n            msPerPixel = me.getMilliSecondsPerPixelForZoomLevel(zoomLevel, true);\n\n            if (config.leftMargin || config.rightMargin) {\n                // time axis doesn't yet know about new view preset (zoom level) so it cannot round/ceil date correctly\n                startDate = new Date(startDate.getTime() - msPerPixel * config.leftMargin);\n                endDate   = new Date(endDate.getTime() + msPerPixel * config.rightMargin);\n            }\n\n            const tickCount = DateHelper.getDurationInUnit(startDate, endDate, unitToZoom, true) / zoomLevel.bottomHeader.increment;\n\n            if (tickCount === 0) {\n                return null;\n            }\n\n            const\n                customWidth = Math.floor(availableSpace / tickCount),\n                centerDate  = config.centerDate || new Date((startDate.getTime() + endDate.getTime()) / 2);\n\n            if (needToAdjust) {\n                range = {\n                    startDate,\n                    endDate\n                };\n            }\n            else {\n                range = me.calculateOptimalDateRange(centerDate, availableSpace, zoomLevel);\n            }\n\n            let result = me.zoomLevel;\n\n            // No change of zoom level needed, just move to the date range\n            if (me.zoomLevel === levelToZoom) {\n                timeAxis.reconfigure(range);\n            }\n            else {\n                result = me.zoomToLevel(levelToZoom,\n                    Object.assign(range, {\n                        width : customWidth,\n                        centerDate\n                    })\n                );\n            }\n\n            if (me.infiniteScroll) {\n                me.scrollToDate(startDate, { block : 'start' });\n            }\n\n            return result;\n        }\n\n        return null;\n    }\n\n    /**\n     * Zooms in the timeline according to the array of zoom levels. If the amount of levels to zoom is given, the view\n     * will zoom in by this value. Otherwise, a value of `1` will be used.\n     *\n     * @param {Number} [levels] (optional) amount of levels to zoom in\n     * @param {ChangePresetOptions} [options] Object containing options which affect how the new preset is applied.\n     * @returns {Number|null} currentLevel New zoom level of the panel or null if level hasn't changed.\n     * @category Zoom\n     */\n    zoomIn(levels = 1, options) {\n        // Allow zoomIn({ visibleDate : ... })\n        if (typeof levels === 'object') {\n            options = levels;\n            levels = 1;\n        }\n        const currentZoomLevelIndex = this.zoomLevel;\n\n        if (currentZoomLevelIndex >= this.maxZoomLevel) {\n            return null;\n        }\n\n        return this.zoomToLevel(currentZoomLevelIndex + levels, options);\n    }\n\n    /**\n     * Zooms out the timeline according to the array of zoom levels. If the amount of levels to zoom is given, the view\n     * will zoom out by this value. Otherwise, a value of `1` will be used.\n     *\n     * @param {Number} levels (optional) amount of levels to zoom out\n     * @param {ChangePresetOptions} [options] Object containing options which affect how the new preset is applied.\n     * @returns {Number|null} currentLevel New zoom level of the panel or null if level hasn't changed.\n     * @category Zoom\n     */\n    zoomOut(levels = 1, options) {\n        // Allow zoomOut({ visibleDate : ... })\n        if (typeof levels === 'object') {\n            options = levels;\n            levels = 1;\n        }\n        const currentZoomLevelIndex = this.zoomLevel;\n\n        if (currentZoomLevelIndex <= this.minZoomLevel) {\n            return null;\n        }\n\n        return this.zoomToLevel(currentZoomLevelIndex - levels, options);\n    }\n\n    /**\n     * Zooms in the timeline to the {@link #config-maxZoomLevel} according to the array of zoom levels.\n     *\n     * @param {ChangePresetOptions} [options] Object containing options which affect how the new preset is applied.\n     * @returns {Number|null} currentLevel New zoom level of the panel or null if level hasn't changed.\n     * @category Zoom\n     */\n    zoomInFull(options) {\n        return this.zoomToLevel(this.maxZoomLevel, options);\n    }\n\n    /**\n     * Zooms out the timeline to the {@link #config-minZoomLevel} according to the array of zoom levels.\n     *\n     * @param {ChangePresetOptions} [options] Object containing options which affect how the new preset is applied.\n     * @returns {Number|null} currentLevel New zoom level of the panel or null if level hasn't changed.\n     * @category Zoom\n     */\n    zoomOutFull(options) {\n        return this.zoomToLevel(this.minZoomLevel, options);\n    }\n\n    /*\n     * Adjusts the timespan of the panel to the new zoom level. Used for performance reasons,\n     * as rendering too many columns takes noticeable amount of time so their number is limited.\n     * @category Zoom\n     * @private\n     */\n    calculateOptimalDateRange(centerDate, viewportSize, viewPreset, userProvidedSpan) {\n        // this line allows us to always use the `calculateOptimalDateRange` method when calculating date range for zooming\n        // (even in case when user has provided own interval)\n        // other methods may override/hook into `calculateOptimalDateRange` to insert own processing\n        // (infinite scrolling feature does)\n        if (userProvidedSpan) return userProvidedSpan;\n\n        const\n            me               = this,\n            { timeAxis }     = me,\n            { bottomHeader } = viewPreset,\n            tickWidth        = me.isHorizontal ? viewPreset.tickWidth : viewPreset.tickHeight;\n\n        if (me.zoomKeepsOriginalTimespan) {\n            return {\n                startDate : timeAxis.startDate,\n                endDate   : timeAxis.endDate\n            };\n        }\n\n        const\n            unit       = bottomHeader.unit,\n            difference = Math.ceil(viewportSize / tickWidth * bottomHeader.increment * me.visibleZoomFactor / 2),\n            startDate  = DateHelper.add(centerDate, -difference, unit),\n            endDate    = DateHelper.add(centerDate, difference, unit);\n\n        if (me.infiniteScroll) {\n            return me.timeAxisViewModel.calculateInfiniteScrollingDateRange(centerDate, true);\n        }\n        else {\n            return {\n                startDate : timeAxis.floorDate(startDate, false, unit, bottomHeader.increment),\n                endDate   : timeAxis.ceilDate(endDate, false, unit, bottomHeader.increment)\n            };\n        }\n    }\n\n    onElementMouseMove(event) {\n        const\n            {\n                isHorizontal,\n                zoomContext\n            } = this;\n\n        super.onElementMouseMove(event);\n\n        if (event.isTrusted && zoomContext) {\n            // Invalidate the zoomContext if mouse has strayed away from it\n            if (Math.abs(event[`client${isHorizontal ? 'X' : 'Y'}`] - zoomContext.coordinate) > 10) {\n                this.zoomContext = null;\n            }\n        }\n    }\n\n    async onWheel(event) {\n        if (event.ctrlKey && !this.forceFit) {\n            event.preventDefault();\n\n            const\n                me           = this,\n                {\n                    zoomContext,\n                    isHorizontal,\n                    timelineScroller,\n                    zoomLevel\n                }            = me,\n                now          = performance.now(),\n                coordinate   = event[`client${isHorizontal ? 'X' : 'Y'}`];\n\n            let zoomPosition = coordinate - timelineScroller.viewport[`${isHorizontal ? 'x' : 'y'}`];\n\n            // zoomPosition is the offset into the TimeAxisSubGridElement.\n            if (isHorizontal && me.rtl) {\n                zoomPosition = timelineScroller.viewport.width + timelineScroller.viewport.x - coordinate;\n            }\n\n            // If we are in a fast-arriving stream of wheel events, we use the same zoomDate as last time.\n            // If it's a new zoom gesture or the pointer has strayed away from the context then ascertain\n            // the gesture's center date\n            if (now - me.lastWheelTime > 200 || !zoomContext || Math.abs(coordinate - me.zoomContext.coordinate) > 20) {\n                // We're creating a zoom gesture which lasts as long as the\n                // wheel events keep arriving at the same timeline position\n                me.zoomContext = {\n                    // So we can track if we're going in (to finer resolutions)\n                    zoomLevel,\n\n                    // Pointer client(X|Y)\n                    coordinate,\n\n                    // Full TimeAxis offset position at which to place the date\n                    zoomPosition,\n\n                    // The date to place at the position\n                    zoomDate : me.getDateFromDomEvent(event)\n                };\n            }\n            // Use the current zoomContext's zoomDate, but at each level, the relative position of that date\n            // in the TimeAxis has to be corrected as the TimeAxis grows and scrolls to keep the zoomPosition\n            // stable.\n            else {\n                // If we zoom in to a finer resolution, get a more accurate centering date.\n                // If gesture was started at a years/months level, the date will be inaccurate.\n                if (zoomLevel > zoomContext.zoomLevel) {\n                    zoomContext.zoomDate = me.getDateFromDomEvent(event);\n                    zoomContext.zoomLevel = zoomLevel;\n                }\n                zoomContext.zoomPosition = zoomPosition;\n            }\n\n            me.lastWheelTime = now;\n            me[`zoom${event.deltaY > 0 ? 'Out' : 'In'}`](undefined, me.zoomContext);\n        }\n    }\n\n    /**\n     * Changes the time axis timespan to the supplied start and end dates.\n     * @param {Date} startDate The new start date\n     * @param {Date} [endDate] The new end date. If omitted or equal to startDate, the\n     * {@link Scheduler.preset.ViewPreset#field-defaultSpan} property of the current view preset will be used to\n     * calculate the new end date.\n     */\n    setTimeSpan(startDate, endDate) {\n        this.timeAxis.setTimeSpan(startDate, endDate);\n    }\n\n    /**\n     * Moves the time axis by the passed amount and unit.\n     *\n     * NOTE: If using a filtered time axis, see {@link Scheduler.data.TimeAxis#function-shift} for more information.\n     *\n     * @param {Number} amount The number of units to jump\n     * @param {'ms'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} [unit] The unit (Day, Week etc)\n     */\n    shift(amount, unit) {\n        this.timeAxis.shift(amount, unit);\n    }\n\n    /**\n     * Moves the time axis forward in time in units specified by the view preset `shiftUnit`, and by the amount\n     * specified by the `shiftIncrement` config of the current view preset.\n     *\n     * NOTE: If using a filtered time axis, see {@link Scheduler.data.TimeAxis#function-shiftNext} for more information.\n     *\n     * @param {Number} [amount] The number of units to jump forward\n     */\n    shiftNext(amount) {\n        this.timeAxis.shiftNext(amount);\n    }\n\n    /**\n     * Moves the time axis backward in time in units specified by the view preset `shiftUnit`, and by the amount\n     * specified by the `shiftIncrement` config of the current view preset.\n     *\n     * NOTE: If using a filtered time axis, see {@link Scheduler.data.TimeAxis#function-shiftPrevious} for more\n     * information.\n     *\n     * @param {Number} [amount] The number of units to jump backward\n     */\n    shiftPrevious(amount) {\n        this.timeAxis.shiftPrevious(amount);\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Popup from '../../../Core/widget/Popup.js';\n\n/**\n * @module Scheduler/view/recurrence/RecurrenceConfirmationPopup\n */\n\n/**\n * A confirmation dialog shown when modifying a recurring event or some of its occurrences.\n * For recurring events, the dialog informs the user that the change will be applied to all occurrences.\n *\n * For occurrences, the dialog lets the user choose if the change should affect all future occurrences,\n * or this occurrence only.\n *\n * Usage example:\n *\n * ```javascript\n * const confirmation = new RecurrenceConfirmationPopup();\n *\n * confirmation.confirm({\n *     eventRecord : recurringEvent,\n *     actionType  : \"delete\",\n *     changerFn   : () => recurringEvent.remove(event)\n * });\n * ```\n *\n * @classType recurrenceconfirmation\n * @extends Core/widget/Popup\n */\nexport default class RecurrenceConfirmationPopup extends Popup {\n\n    // <debug>\n    // region Localization test\n    static localization = [\n        'L{delete-further-message}',\n        'L{update-further-message}',\n        'L{delete-all-message}',\n        'L{update-all-message}',\n        'L{delete-further-btn-text}',\n        'L{update-further-btn-text}',\n        'L{delete-only-this-btn-text}',\n        'L{update-only-this-btn-text}',\n        'L{delete-title}',\n        'L{update-title}'\n    ];\n    // endregion\n    // </debug>\n\n    static get $name() {\n        return 'RecurrenceConfirmationPopup';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrenceconfirmation';\n    }\n\n    static get defaultConfig() {\n        return {\n            localizableProperties : [],\n            align                 : 'b-t',\n            autoShow              : false,\n            autoClose             : false,\n            closeAction           : 'onRecurrenceClose',\n            modal                 : true,\n            centered              : true,\n            scrollAction          : 'realign',\n            constrainTo           : globalThis,\n            draggable             : true,\n            closable              : true,\n            floating              : true,\n            eventRecord           : null,\n            cls                   : 'b-sch-recurrenceconfirmation',\n            bbar                  : {\n                defaults : {\n                    localeClass : this\n                },\n                items : {\n                    changeSingleButton : {\n                        weight  : 100,\n                        cls     : 'b-raised',\n                        color   : 'b-blue',\n                        text    : 'L{update-only-this-btn-text}',\n                        onClick : 'up.onChangeSingleButtonClick'\n                    },\n                    changeMultipleButton : {\n                        weight  : 200,\n                        color   : 'b-green',\n                        text    : 'L{Object.Yes}',\n                        onClick : 'up.onChangeMultipleButtonClick'\n                    },\n                    cancelButton : {\n                        weight  : 300,\n                        color   : 'b-gray',\n                        text    : 'L{Object.Cancel}',\n                        onClick : 'up.onCancelButtonClick'\n                    }\n                }\n            }\n        };\n    }\n\n    /**\n     * Reference to the \"Apply changes to multiple occurrences\" button, if used\n     * @property {Core.widget.Button}\n     * @readonly\n     */\n    get changeMultipleButton() {\n        return this.widgetMap.changeMultipleButton;\n    }\n\n    /**\n     * Reference to the button that causes changing of the event itself only, if used\n     * @property {Core.widget.Button}\n     * @readonly\n     */\n    get changeSingleButton() {\n        return this.widgetMap.changeSingleButton;\n    }\n\n    /**\n     * Reference to the cancel button, if used\n     * @property {Core.widget.Button}\n     * @readonly\n     */\n    get cancelButton() {\n        return this.widgetMap.cancelButton;\n    }\n\n    /**\n     * Handler for \"Apply changes to multiple occurrences\" {@link #property-changeMultipleButton button}.\n     * It calls {@link #function-processMultipleRecords} and then hides the dialog.\n     */\n    onChangeMultipleButtonClick() {\n        this.processMultipleRecords();\n        this.hide();\n    }\n\n    /**\n     * Handler for the {@link #property-changeSingleButton button} that causes changing of the event itself only.\n     * It calls {@link #function-processSingleRecord} and then hides the dialog.\n     */\n    onChangeSingleButtonClick() {\n        this.processSingleRecord();\n        this.hide();\n    }\n\n    /**\n     * Handler for {@link #property-cancelButton cancel button}.\n     * It calls `cancelFn` provided to {@link #function-confirm} call and then hides the dialog.\n     */\n    onCancelButtonClick() {\n        this.cancelFn && this.cancelFn.call(this.thisObj);\n        this.hide();\n    }\n\n    onRecurrenceClose() {\n        if (this.cancelFn) {\n            this.cancelFn.call(this.thisObj);\n        }\n        this.hide();\n    }\n\n    /**\n     * Displays the confirmation.\n     * Usage example:\n     *\n     * ```javascript\n     * const popup = new RecurrenceConfirmationPopup();\n     *\n     * popup.confirm({\n     *     eventRecord,\n     *     actionType : \"delete\",\n     *     changerFn  : () => eventStore.remove(record)\n     * });\n     * ```\n     *\n     * @param {Object} config The following config options are supported:\n     * @param {Scheduler.model.EventModel} config.eventRecord   Event being modified.\n     * @param {'update'|'delete'} config.actionType Type of modification to be applied to the event. Can be\n     * either \"update\" or \"delete\".\n     * @param {Function} config.changerFn A function that should be called to apply the change to the event upon user\n     * choice.\n     * @param {Function} [config.thisObj] `changerFn` and `cancelFn` functions scope.\n     * @param {Function} [config.cancelFn] Function called on `Cancel` button click.\n     */\n    confirm(config = {}) {\n        const me = this;\n\n        //<debug>\n        if (!config || !config.actionType || !config.eventRecord) {\n            throw new Error('actionType and eventRecord must be specified for Scheduler.view.recurrence.RecurrenceConfirmationPopup');\n        }\n        //</debug>\n\n        [\n            'actionType',\n            'eventRecord',\n            'title',\n            'html',\n            'changerFn',\n            'cancelFn',\n            'finalizerFn',\n            'thisObj'\n        ].forEach(prop => {\n            if (prop in config) me[prop] = config[prop];\n        });\n\n        me.updatePopupContent();\n\n        return super.show(config);\n    }\n\n    updatePopupContent() {\n        const\n            me                                                         = this,\n            { changeMultipleButton, changeSingleButton, cancelButton } = me.widgetMap,\n            { eventRecord, actionType = 'update' }                     = me,\n            isMaster                                                   = eventRecord?.isRecurring;\n\n        if (isMaster) {\n            changeMultipleButton.text = me.L('L{Object.Yes}');\n            me.html = me.L(`${actionType}-all-message`);\n        }\n        else {\n            changeMultipleButton.text = me.L(`${actionType}-further-btn-text`);\n            me.html = me.L(`${actionType}-further-message`);\n        }\n\n        changeSingleButton.text = me.L(`${actionType}-only-this-btn-text`);\n        cancelButton.text = me.L('L{Object.Cancel}');\n\n        me.width = me.L('L{width}');\n\n        me.title = me.L(`${actionType}-title`);\n    }\n\n    /**\n     * Applies changes to multiple occurrences as reaction on \"Apply changes to multiple occurrences\"\n     * {@link #property-changeMultipleButton button} click.\n     */\n    processMultipleRecords() {\n        const { eventRecord, changerFn, thisObj, finalizerFn } = this;\n\n        eventRecord.beginBatch();\n        // Apply changes to the occurrence.\n        // It is not joined to any stores, so this has no consequence.\n        changerFn && this.callback(changerFn, thisObj, [eventRecord]);\n\n        // afterChange will promote it to being an new recurring base because there's still recurrence\n        eventRecord.endBatch();\n\n        finalizerFn && this.callback(finalizerFn, thisObj, [eventRecord]);\n    }\n\n    /**\n     * Applies changes to a single record by making it a \"real\" event and adding an exception to the recurrence.\n     * The method is called as reaction on clicking the {@link #property-changeSingleButton button} that causes changing of the event itself only.\n     */\n    processSingleRecord() {\n        const { eventRecord, changerFn, thisObj, finalizerFn } = this;\n\n        eventRecord.beginBatch();\n\n        let firstOccurrence;\n\n        // If that's a master event get its very first occurrence\n        if (eventRecord?.isRecurring) {\n            eventRecord.recurrence.forEachOccurrence(eventRecord.startDate, null, (occurrence, isFirst, index) => {\n                // index 1 is used by to the event itself, > 1 since there might be exceptions\n                if (index > 1) {\n                    firstOccurrence = occurrence;\n                    return false;\n                }\n            });\n        }\n\n        // turn the 1st occurrence into a new \"master\" event\n        firstOccurrence?.convertToRealEvent();\n\n        // When the changes apply, because there's no recurrence, it will become an exception\n        eventRecord.recurrence = null;\n\n        // Apply changes to the occurrence.\n        // It is not joined to any stores, so this has no consequence.\n        changerFn && this.callback(changerFn, thisObj, [eventRecord]);\n\n        // Must also change after the callback in case the callback sets the rule.\n        // This will update the batch update data block to prevent it being set back to recurring.\n        eventRecord.recurrenceRule = null;\n\n        // afterChange will promote it to being an exception because there's no recurrence\n        eventRecord.endBatch();\n\n        finalizerFn && this.callback(finalizerFn, thisObj, [eventRecord]);\n    }\n\n    updateLocalization() {\n        this.updatePopupContent();\n        super.updateLocalization();\n    }\n\n};\n\n// Register this widget type with its Factory\nRecurrenceConfirmationPopup.initClass();\n","import Base from '../../../Core/Base.js';\nimport '../recurrence/RecurrenceConfirmationPopup.js';\n\n/**\n * @module Scheduler/view/mixin/RecurringEvents\n */\n\n/**\n * A mixin that adds recurring events functionality to the Scheduler.\n *\n * The main purpose of the code in here is displaying a {@link Scheduler.view.recurrence.RecurrenceConfirmationPopup special confirmation}\n * on user mouse dragging/resizing/deleting recurring events and their occurrences.\n *\n * @mixin\n */\nexport default Target => class RecurringEvents extends (Target || Base) {\n    static $name = 'RecurringEvents';\n\n    static configurable = {\n        /**\n         * Enables showing occurrences of recurring events across the scheduler's time axis.\n         *\n         * Enables extra recurrence UI fields in the system-provided event editor (not in Scheduler Pro's task editor).\n         * @config {Boolean}\n         * @default\n         * @category Scheduled events\n         */\n        enableRecurringEvents : false,\n\n        recurrenceConfirmationPopup : {\n            $config : ['lazy'],\n            value   : {\n                type : 'recurrenceconfirmation'\n            }\n        }\n    };\n\n    construct(config) {\n        super.construct(config);\n\n        this.ion({\n            beforeEventDropFinalize   : 'onRecurrableBeforeEventDropFinalize',\n            beforeEventResizeFinalize : 'onRecurrableBeforeEventResizeFinalize',\n            beforeAssignmentDelete    : 'onRecurrableAssignmentBeforeDelete'\n        });\n    }\n\n    changeRecurrenceConfirmationPopup(recurrenceConfirmationPopup, oldRecurrenceConfirmationPopup) {\n        // Widget.reconfigure reither reconfigures an existing instance, or creates a new one, or,\n        // if the configuration is null, destroys the existing instance.\n        const result = this.constructor.reconfigure(oldRecurrenceConfirmationPopup, recurrenceConfirmationPopup, 'recurrenceconfirmation');\n        result.owner = this;\n        return result;\n    }\n\n    findRecurringEventToConfirmDelete(eventRecords) {\n        // show confirmation if we deal with at least one recurring event (or its occurrence)\n        // and if the record is not being edited by event editor (since event editor has its own confirmation)\n        return eventRecords.find(eventRecord => eventRecord.supportsRecurring && (eventRecord.isRecurring || eventRecord.isOccurrence));\n    }\n\n    onRecurrableAssignmentBeforeDelete({ assignmentRecords, context }) {\n        const\n            eventRecords = assignmentRecords.map(as => as.event),\n            eventRecord  = this.findRecurringEventToConfirmDelete(eventRecords);\n\n        if (this.enableRecurringEvents && eventRecord) {\n            this.recurrenceConfirmationPopup.confirm({\n                actionType : 'delete',\n                eventRecord,\n                changerFn() {\n                    context.finalize(true);\n                },\n                cancelFn() {\n                    context.finalize(false);\n                }\n            });\n\n            return false;\n        }\n    }\n\n    onRecurrableBeforeEventDropFinalize({ context }) {\n        if (this.enableRecurringEvents) {\n            const\n                { eventRecords } = context,\n                recurringEvents = eventRecords.filter(eventRecord => eventRecord.supportsRecurring && (eventRecord.isRecurring || eventRecord.isOccurrence));\n\n            if (recurringEvents.length) {\n                context.async = true;\n\n                this.recurrenceConfirmationPopup.confirm({\n                    actionType  : 'update',\n                    eventRecord : recurringEvents[0],\n                    changerFn() {\n                        context.finalize(true);\n                    },\n                    cancelFn() {\n                        context.finalize(false);\n                    }\n                });\n            }\n        }\n    }\n\n    onRecurrableBeforeEventResizeFinalize({ context }) {\n        if (this.enableRecurringEvents) {\n            const\n                { eventRecord } = context,\n                isRecurring     = eventRecord.supportsRecurring && (eventRecord.isRecurring || eventRecord.isOccurrence);\n\n            if (isRecurring) {\n                context.async = true;\n\n                this.recurrenceConfirmationPopup.confirm({\n                    actionType : 'update',\n                    eventRecord,\n                    changerFn() {\n                        context.finalize(true);\n                    },\n                    cancelFn() {\n                        context.finalize(false);\n                    }\n                });\n            }\n        }\n    }\n\n    // Make sure occurrence cache is up-to-date when reassigning events\n    onAssignmentChange({ action, records : assignments }) {\n        if (action !== 'dataset' && Array.isArray(assignments)) {\n            for (const assignment of assignments) {\n                if (assignment.event?.isRecurring && !assignment.event.isBatchUpdating) {\n                    assignment.event.removeOccurrences();\n                }\n            }\n        }\n    }\n\n    /**\n     * Returns occurrences of the provided recurring event across the date range of this Scheduler.\n     * @param  {Scheduler.model.TimeSpan} recurringEvent Recurring event for which occurrences should be retrieved.\n     * @returns {Scheduler.model.TimeSpan[]} Array of the provided timespans occurrences.\n     *\n     * __Empty if the passed event is not recurring, or has no occurrences in the date range.__\n     *\n     * __If the date range encompasses the start point, the recurring event itself will be the first entry.__\n     * @category Data\n     */\n    getOccurrencesFor(recurringEvent) {\n        return this.eventStore.getOccurrencesForTimeSpan(recurringEvent, this.timeAxis.startDate, this.timeAxis.endDate);\n    }\n\n    /**\n     * Internal utility function to remove events. Used when pressing [DELETE] or [BACKSPACE] or when clicking the\n     * delete button in the event editor. Triggers a preventable `beforeEventDelete` or `beforeAssignmentDelete` event.\n     * @param {Scheduler.model.EventModel[]|Scheduler.model.AssignmentModel[]} eventRecords Records to remove\n     * @param {Function} [callback] Optional callback executed after triggering the event but before deletion\n     * @returns {Boolean} Returns `false` if the operation was prevented, otherwise `true`\n     * @internal\n     * @fires beforeEventDelete\n     * @fires beforeAssignmentDelete\n     */\n    async removeEvents(eventRecords, callback = null, popupOwner = this) {\n        const me = this;\n\n        if (!me.readOnly && eventRecords.length) {\n            const context = {\n                finalize(removeRecord = true) {\n                    if (callback) {\n                        callback(removeRecord);\n                    }\n\n                    if (removeRecord !== false) {\n                        if (eventRecords.some(record => record.isOccurrence || record.event?.isOccurrence)) {\n                            eventRecords.forEach(record => record.isOccurrenceAssignment ? record.event.remove() : record.remove());\n                        }\n                        else {\n                            const store = eventRecords[0].isAssignment ? me.assignmentStore : me.eventStore;\n\n                            store.remove(eventRecords);\n                        }\n                    }\n                }\n            };\n\n            let shouldFinalize;\n\n            if (eventRecords[0].isAssignment) {\n                /**\n                 * Fires before an assignment is removed. Can be triggered by user pressing [DELETE] or [BACKSPACE] or\n                 * by the event editor. Can for example be used to display a custom dialog to confirm deletion, in which\n                 * case records should be \"manually\" removed after confirmation:\n                 *\n                 * ```javascript\n                 * scheduler.on({\n                 *    beforeAssignmentDelete({ assignmentRecords, context }) {\n                 *        // Show custom confirmation dialog (pseudo code)\n                 *        confirm.show({\n                 *            listeners : {\n                 *                onOk() {\n                 *                    // Remove the assignments on confirmation\n                 *                    context.finalize(true);\n                 *                },\n                 *                onCancel() {\n                 *                    // do not remove the assignments if \"Cancel\" clicked\n                 *                    context.finalize(false);\n                 *                }\n                 *            }\n                 *        });\n                 *\n                 *        // Prevent default behaviour\n                 *        return false;\n                 *    }\n                 * });\n                 * ```\n                 *\n                 * @event beforeAssignmentDelete\n                 * @param {Scheduler.view.Scheduler} source  The Scheduler instance\n                 * @param {Scheduler.model.EventModel[]} eventRecords  The records about to be deleted\n                 * @param {Object} context  Additional removal context:\n                 * @param {Function} context.finalize  Function to call to finalize the removal.\n                 *      Used to asynchronously decide to remove the records or not. Provide `false` to the function to\n                 *      prevent the removal.\n                 * @param {Boolean} [context.finalize.removeRecords = true]   Provide `false` to the function to prevent\n                 *      the removal.\n                 * @preventable\n                 */\n                shouldFinalize = me.trigger('beforeAssignmentDelete', { assignmentRecords : eventRecords, context });\n            }\n            else {\n                /**\n                 * Fires before an event is removed. Can be triggered by user pressing [DELETE] or [BACKSPACE] or by the\n                 * event editor. Return `false` to immediately veto the removal (or a `Promise` yielding `true` or `false`\n                 * for async vetoing).\n                 *\n                 * Can for example be used to display a custom dialog to confirm deletion, in which case\n                 * records should be \"manually\" removed after confirmation:\n                 *\n                 * ```javascript\n                 * scheduler.on({\n                 *    beforeEventDelete({ eventRecords, context }) {\n                 *        // Show custom confirmation dialog (pseudo code)\n                 *        confirm.show({\n                 *            listeners : {\n                 *                onOk() {\n                 *                    // Remove the events on confirmation\n                 *                    context.finalize(true);\n                 *                },\n                 *                onCancel() {\n                 *                    // do not remove the events if \"Cancel\" clicked\n                 *                    context.finalize(false);\n                 *                }\n                 *            }\n                 *        });\n                 *\n                 *        // Prevent default behaviour\n                 *        return false;\n                 *    }\n                 * });\n                 * ```\n                 *\n                 * @event beforeEventDelete\n                 * @param {Scheduler.view.Scheduler} source  The Scheduler instance\n                 * @param {Scheduler.model.EventModel[]} eventRecords  The records about to be deleted\n                 * @param {Object} context  Additional removal context:\n                 * @param {Function} context.finalize  Function to call to finalize the removal.\n                 *      Used to asynchronously decide to remove the records or not. Provide `false` to the function to\n                 *      prevent the removal.\n                 * @param {Boolean} [context.finalize.removeRecords = true]  Provide `false` to the function to prevent\n                 *      the removal.\n                 * @preventable\n                 * @async\n                 */\n                shouldFinalize = await me.trigger('beforeEventDelete', { eventRecords, context });\n            }\n\n            if (shouldFinalize !== false) {\n                const recurringEventRecord = eventRecords.find(eventRecord => eventRecord.isRecurring || eventRecord.isOccurrence);\n\n                if (recurringEventRecord) {\n                    me.recurrenceConfirmationPopup.owner = popupOwner;\n                    me.recurrenceConfirmationPopup.confirm({\n                        actionType  : 'delete',\n                        eventRecord : recurringEventRecord,\n                        changerFn() {\n                            context.finalize(true);\n                        },\n                        cancelFn() {\n                            context.finalize(false);\n                        }\n                    });\n                }\n                else {\n                    context.finalize(true);\n                }\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Scheduler/view/mixin/TimelineEventRendering\n */\n\n/**\n * Functions to handle event rendering (EventModel -> dom elements).\n *\n * @mixin\n */\nexport default Target => class TimelineEventRendering extends (Target || Base) {\n    static get $name() {\n        return 'TimelineEventRendering';\n    }\n\n    //region Default config\n\n    static get defaultConfig() {\n        return {\n            /**\n             * When `true`, events are sized and positioned based on rowHeight, resourceMargin and barMargin settings.\n             * Set this to `false` if you want to control height and vertical position using CSS instead.\n             *\n             * Note that events always get an absolute top position, but when this setting is enabled that position\n             * will match row's top. To offset within the row using CSS, use `transform : translateY(y)`.\n             *\n             * @config {Boolean}\n             * @default\n             * @category Scheduled events\n             */\n            managedEventSizing : true,\n\n            /**\n             * The CSS class added to an event/assignment when it is newly created\n             * in the UI and unsynced with the server.\n             * @config {String}\n             * @default\n             * @private\n             * @category CSS\n             */\n            generatedIdCls : 'b-sch-dirty-new',\n\n            /**\n             * The CSS class added to an event when it has unsaved modifications\n             * @config {String}\n             * @default\n             * @private\n             * @category CSS\n             */\n            dirtyCls : 'b-sch-dirty',\n\n            /**\n             * The CSS class added to an event when it is currently committing changes\n             * @config {String}\n             * @default\n             * @private\n             * @category CSS\n             */\n            committingCls : 'b-sch-committing',\n\n            /**\n             * The CSS class added to an event/assignment when it ends outside of the visible time range.\n             * @config {String}\n             * @default\n             * @private\n             * @category CSS\n             */\n            endsOutsideViewCls : 'b-sch-event-endsoutside',\n\n            /**\n             * The CSS class added to an event/assignment when it starts outside of the visible time range.\n             * @config {String}\n             * @default\n             * @private\n             * @category CSS\n             */\n            startsOutsideViewCls : 'b-sch-event-startsoutside',\n\n            /**\n             * The CSS class added to an event/assignment when it is not draggable.\n             * @config {String}\n             * @default\n             * @private\n             * @category CSS\n             */\n            fixedEventCls : 'b-sch-event-fixed'\n        };\n    }\n\n    static configurable = {\n        /**\n         * Controls how much space to leave between stacked event bars in px.\n         *\n         * Value will be constrained by half the row height in horizontal mode.\n         *\n         * @prp {Number}\n         * @default\n         * @category Scheduled events\n         */\n        barMargin : 10,\n\n        /**\n         * Specify `true` to force rendered events/tasks to fill entire ticks. This only affects rendering, start\n         * and end dates retain their value on the data level.\n         *\n         * When enabling `fillTicks` you should consider either disabling EventDrag/TaskDrag and EventResize/TaskResize,\n         * or enabling {@link Scheduler/view/mixin/TimelineDateMapper#config-snap}. Otherwise their behaviour might not\n         * be what a user expects.\n         *\n         * @prp {Boolean}\n         * @default\n         * @category Scheduled events\n         */\n        fillTicks : false,\n\n        resourceMargin : null,\n\n        /**\n         * Event color used by default. Events and resources can specify their own color, with priority order being:\n         * Event -> Resource -> Scheduler default.\n         *\n         * Specify `null` to not apply a default color and take control using custom CSS (an easily overridden color\n         * will be used to make sure events are still visible).\n         *\n         * For available standard colors, see {@link Scheduler.model.mixin.EventModelMixin#typedef-EventColor}.\n         *\n         * @prp {EventColor} eventColor\n         * @category Scheduled events\n         */\n        eventColor : 'green',\n\n        /**\n         * Event style used by default. Events and resources can specify their own style, with priority order being:\n         * Event -> Resource -> Scheduler default. Determines the appearance of the event by assigning a CSS class\n         * to it. Available styles are:\n         *\n         * * `'plain'` (default) - flat look\n         * * `'border'` - has border in darker shade of events color\n         * * `'colored'` - has colored text and wide left border in same color\n         * * `'hollow'` - only border + text until hovered\n         * * `'line'` - as a line with the text below it\n         * * `'dashed'` - as a dashed line with the text below it\n         * * `'minimal'` - as a thin line with small text above it\n         * * `'rounded'` - minimalistic style with rounded corners\n         * * `null` - do not apply a default style and take control using custom CSS (easily overridden basic styling will be used).\n         *\n         * In addition, there are two styles intended to be used when integrating with Bryntum Calendar. To match\n         * the look of Calendar events, you can use:\n         *\n         * * `'calendar'` - a variation of the \"colored\" style matching the default style used by Calendar\n         * * `'interday'` - a variation of the \"plain\" style, for interday events\n         *\n         * @prp {'plain'|'border'|'colored'|'hollow'|'line'|'dashed'|'minimal'|'rounded'|'calendar'|'interday'|null}\n         * @default\n         * @category Scheduled events\n         */\n        eventStyle : 'plain',\n\n        /**\n         * The width/height (depending on vertical / horizontal mode) of all the time columns.\n         *\n         * There is a limit for the tick size value. Its minimal allowed value is calculated so ticks would fit the\n         * available space. Only applicable when {@link Scheduler.view.TimelineBase#config-forceFit} is set to\n         * `false`. To set `tickSize` freely skipping that limitation please set\n         * {@link Scheduler.view.TimelineBase#config-suppressFit} to `true`.\n         *\n         * @prp {Number}\n         * @category Scheduled events\n         */\n        tickSize : null\n    };\n\n    //endregion\n\n    //region Settings\n\n    updateFillTicks(fillTicks) {\n        if (!this.isConfiguring) {\n            this.timeAxis.forceFullTicks = fillTicks && this.snap;\n\n            this.refreshWithTransition();\n\n            this.trigger('stateChange');\n        }\n    }\n\n    changeBarMargin(margin) {\n        ObjectHelper.assertNumber(margin, 'barMargin');\n\n        // bar margin should not exceed half of the row height\n        if (this.isHorizontal && this.rowHeight) {\n            return Math.min(Math.ceil(this.rowHeight / 2), margin);\n        }\n\n        return margin;\n    }\n\n    updateBarMargin() {\n        if (this.rendered) {\n            this.currentOrientation.onBeforeRowHeightChange();\n            this.refreshWithTransition();\n            this.trigger('stateChange');\n        }\n    }\n\n    // Documented in SchedulerEventRendering to not show up in Gantt docs\n    get resourceMargin() {\n        return this._resourceMargin == null ? this.barMargin : this._resourceMargin;\n    }\n\n    changeResourceMargin(margin) {\n        ObjectHelper.assertNumber(margin, 'resourceMargin');\n\n        // resource margin should not exceed half of the row height\n        if (this.isHorizontal && this.rowHeight) {\n            return Math.min(Math.ceil(this.rowHeight / 2), margin);\n        }\n\n        return margin;\n    }\n\n    updateResourceMargin() {\n        if (this.rendered) {\n            this.currentOrientation.onBeforeRowHeightChange();\n            this.refreshWithTransition();\n        }\n    }\n\n    changeTickSize(width) {\n        ObjectHelper.assertNumber(width, 'tickSize');\n\n        return width;\n    }\n\n    updateTickSize(width) {\n        this.timeAxisViewModel.tickSize = width;\n    }\n\n    get tickSize() {\n        return this.timeAxisViewModel.tickSize;\n    }\n\n    /**\n     * Predefined event colors, useful in combos etc.\n     * @type {String[]}\n     * @category Scheduled events\n     */\n    static get eventColors() {\n        // These are the colors available by default for Scheduler and Gantt\n        // They classes are located in eventstyles.scss\n        return ['red', 'pink', 'purple', 'magenta', 'violet', 'indigo', 'blue', 'cyan', 'teal', 'green', 'gantt-green', 'lime', 'yellow', 'orange', 'deep-orange', 'gray', 'light-gray'];\n    }\n\n    /**\n     * Predefined event styles , useful in combos etc.\n     * @type {String[]}\n     * @category Scheduled events\n     */\n    static get eventStyles() {\n        return ['plain', 'border', 'hollow', 'colored', 'line', 'dashed', 'minimal', 'rounded'];\n    }\n\n    updateEventStyle(style) {\n        if (!this.isConfiguring) {\n            this.refreshWithTransition();\n            this.trigger('stateChange');\n        }\n    }\n\n    updateEventColor(color) {\n        if (!this.isConfiguring) {\n            this.refreshWithTransition();\n            this.trigger('stateChange');\n        }\n    }\n\n    //endregion\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport Rectangle from '../../../Core/helper/util/Rectangle.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\nimport Scroller from '../../../Core/helper/util/Scroller.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\n\n/**\n * @module Scheduler/view/mixin/TimelineScroll\n */\nconst\n    maintainVisibleStart = {\n        maintainVisibleStart : true\n    },\n    defaultScrollOptions = {\n        block : 'nearest'\n    };\n\n/**\n * Functions for scrolling to events, dates etc.\n *\n * @mixin\n */\nexport default Target => class TimelineScroll extends (Target || Base) {\n    static get $name() {\n        return 'TimelineScroll';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * This config defines the size of the start and end invisible parts of the timespan when {@link #config-infiniteScroll} set to `true`.\n             *\n             * It should be provided as a coefficient, which will be multiplied by the size of the scheduling area.\n             *\n             * For example, if `bufferCoef` is `5` and the panel view width is 200px then the timespan will be calculated to\n             * have approximately 1000px (`5 * 200`) to the left and 1000px to the right of the visible area, resulting\n             * in 2200px of totally rendered content.\n             *\n             * @config {Number}\n             * @category Infinite scroll\n             * @default\n             */\n            bufferCoef : 5,\n\n            /**\n             * This config defines the scroll limit, which, when exceeded will cause a timespan shift.\n             * The limit is calculated as the `panelWidth * {@link #config-bufferCoef} * bufferThreshold`. During scrolling, if the left or right side\n             * has less than that of the rendered content - a shift is triggered.\n             *\n             * For example if `bufferCoef` is `5` and the panel view width is 200px and `bufferThreshold` is 0.2, then the timespan\n             * will be shifted when the left or right side has less than 200px (5 * 200 * 0.2) of content.\n             * @config {Number}\n             * @category Infinite scroll\n             * @default\n             */\n            bufferThreshold : 0.2,\n\n            /**\n             * Configure as `true` to automatically adjust the panel timespan during scrolling in the time dimension,\n             * when the scroller comes close to the start/end edges.\n             *\n             * The actually rendered timespan in this mode (and thus the amount of HTML in the DOM) is calculated based\n             * on the {@link #config-bufferCoef} option, and is thus not controlled by the {@link Scheduler/view/TimelineBase#config-startDate}\n             * and {@link Scheduler/view/TimelineBase#config-endDate} configs. The moment when the timespan shift\n             * happens is determined by the {@link #config-bufferThreshold} value.\n             *\n             * To specify initial point in time to view, supply the\n             * {@link Scheduler/view/TimelineBase#config-visibleDate} config.\n             *\n             * @config {Boolean} infiniteScroll\n             * @category Infinite scroll\n             * @default\n             */\n            infiniteScroll : false\n        };\n    }\n\n    initScroll() {\n        const\n            me = this,\n            {\n                isHorizontal,\n                visibleDate\n            }  = me;\n\n        super.initScroll();\n\n        const { scrollable } = isHorizontal ? me.timeAxisSubGrid : me;\n\n        scrollable.ion({\n            scroll  : 'onTimelineScroll',\n            thisObj : me\n        });\n\n        // Ensure the TimeAxis starts life at the correct size with buffer zones\n        // outside the visible window.\n        if (me.infiniteScroll) {\n            const\n                setTimeSpanOptions     = visibleDate ? { ...visibleDate, visibleDate : visibleDate.date } : { visibleDate : me.viewportCenterDate, block : 'center' },\n                { startDate, endDate } = me.timeAxisViewModel.calculateInfiniteScrollingDateRange(setTimeSpanOptions.visibleDate, setTimeSpanOptions.block === 'center');\n\n            // Don't ask to maintain visible start - we're initializing - there's no visible start yet.\n            // If there's a visibleDate set, it will execute its scroll on paint.\n            me.setTimeSpan(\n                startDate,\n                endDate,\n                setTimeSpanOptions\n            );\n        }\n    }\n\n    /**\n     * A {@link Core.helper.util.Scroller} which scrolls the time axis in whatever {@link Scheduler.view.Scheduler#config-mode} the\n     * Scheduler is configured, either `horiontal` or `vertical`.\n     *\n     * The width and height dimensions are replaced by `size`. So this will expose the following properties:\n     *\n     *    - `clientSize` The size of the time axis viewport.\n     *    - `scrollSize` The full scroll size of the time axis viewport\n     *    - `position` The position scrolled to along the time axis viewport\n     *\n     * @property {Core.helper.util.Scroller}\n     * @readonly\n     * @category Scrolling\n     */\n    get timelineScroller() {\n        const me = this;\n\n        if (!me.scrollInitialized) {\n            me.initScroll();\n        }\n        return me._timelineScroller || (me._timelineScroller = new TimelineScroller({\n            widget       : me,\n            scrollable   : me.isHorizontal ? me.timeAxisSubGrid.scrollable : me.scrollable,\n            isHorizontal : me.isHorizontal\n        }));\n    }\n\n    doDestroy() {\n        this._timelineScroller?.destroy();\n\n        super.doDestroy();\n    }\n\n    onTimelineScroll({ source }) {\n        // On scroll, check if we are nearing the end to see if the sliding window needs moving.\n        // onSchedulerHorizontalScroll is delayed to animationFrame\n        if (this.infiniteScroll) {\n            this.checkTimeAxisScroll(source[this.isHorizontal ? 'x' : 'y']);\n        }\n    }\n\n    checkTimeAxisScroll(scrollPos) {\n        const\n            me             = this,\n            scrollable     = me.timelineScroller,\n            { clientSize } = scrollable,\n            requiredSize   = clientSize * me.bufferCoef,\n            limit          = requiredSize * me.bufferThreshold,\n            maxScroll      = scrollable.maxPosition,\n            { style }      = me.timeAxisSubGrid.virtualScrollerElement;\n\n        // if scroll violates limits let's shift timespan\n        if ((maxScroll - scrollPos < limit) || scrollPos < limit) {\n            // If they were dragging the thumb, this must be a one-time thing. They *must* lose contact\n            // with the thumb when the window shift occurs and the thumb zooms back to the center.\n            // Changing for a short time to overflow:hidden terminates the thumb drag.\n            // They can start again from the center, the reset happens very quickly.\n            style.overflow = 'hidden';\n            style.pointerEvents = 'none';\n\n            // Avoid content height changing when scrollbar disappears\n            style.paddingBottom = `${DomHelper.scrollBarWidth}px`;\n\n            me.setTimeout(() => {\n                style.overflow = '';\n                style.paddingBottom = '';\n                style.pointerEvents = '';\n            }, 100);\n\n            me.shiftToDate(me.getDateFromCoordinate(scrollPos, null, true, false, true));\n        }\n    }\n\n    shiftToDate(date, centered) {\n        const newRange = this.timeAxisViewModel.calculateInfiniteScrollingDateRange(date, centered);\n\n        // this will trigger a refresh (`refreshKeepingScroll`) which will perform `restoreScrollState` and sync the scrolling position\n        this.setTimeSpan(newRange.startDate, newRange.endDate, maintainVisibleStart);\n    }\n\n    // If we change to infinite scrolling dynamically, it should create the buffer zones.\n    updateInfiniteScroll(infiniteScroll) {\n        // At construction time, this is handled in initScroll.\n        // This is just here to handle dynamic updates.\n        if (!this.isConfiguring && infiniteScroll) {\n            this.checkTimeAxisScroll(this.timelineScroller.position);\n        }\n    }\n\n    //region Scroll to date\n\n    /**\n     * Scrolls the timeline \"tick\" encapsulating the passed `Date` into view according to the passed options.\n     * @param {Date} date The date to which to scroll the timeline\n     * @param {ScrollOptions} [options] How to scroll.\n     * @returns {Promise} A Promise which resolves when the scrolling is complete.\n     * @category Scrolling\n     */\n    async scrollToDate(date, options = {}) {\n        const\n            me               = this,\n            {\n                timeAxis,\n                visibleDateRange,\n                infiniteScroll\n            }              = me,\n            {\n                unit,\n                increment\n            }              = timeAxis,\n            edgeOffset     = options.edgeOffset || 0,\n            visibleWidth   = DateHelper.ceil(visibleDateRange.endDate, increment + ' ' + unit) - DateHelper.floor(visibleDateRange.startDate, increment + ' ' + unit),\n            direction      = date > me.viewportCenterDate ? 1 : -1,\n            extraScroll    = (infiniteScroll ? visibleWidth * me.bufferCoef * me.bufferThreshold : (options.block === 'center' ? visibleWidth / 2 : (edgeOffset ? me.getMilliSecondsPerPixelForZoomLevel(me.viewPreset) * edgeOffset : 0))) * direction,\n            visibleDate    = new Date(date.getTime() + extraScroll),\n            shiftDirection = visibleDate > timeAxis.endDate ? 1 : visibleDate < timeAxis.startDate ? -1 : 0;\n\n        // Required visible date outside TimeAxis and infinite scrolling, that has opinions about how\n        // much scroll range has to be created after the target date.\n        if (shiftDirection && me.infiniteScroll) {\n            me.shiftToDate(new Date(date - extraScroll), null, true);\n            // shift to date could trigger a native browser async scroll out of our control. If a scroll\n            // happens during scrollToCoordinate, the scrolling is cancelled so we wait a bit here\n            await me.nextAnimationFrame();\n        }\n\n        const\n            scrollerViewport = me.timelineScroller.viewport,\n            localCoordinate  = me.getCoordinateFromDate(date, true),\n            // Available space can be less than tick size (Export.t.js in Gantt)\n            width            = Math.min(me.timeAxisViewModel.tickSize, me.timeAxisViewModel.availableSpace),\n            target           = me.isHorizontal\n                // In RTL coordinate is for the right edge of the tick, so we need to subtract width\n                ? new Rectangle(me.getCoordinateFromDate(date, false) - (me.rtl ? width : 0), scrollerViewport.y, width, scrollerViewport.height)\n                : new Rectangle(scrollerViewport.x, me.getCoordinateFromDate(date, false), scrollerViewport.width, me.timeAxisViewModel.tickSize);\n\n        await me.scrollToCoordinate(localCoordinate, target, date, options);\n    }\n\n    /**\n     * Scrolls to current time.\n     * @param {ScrollOptions} [options] How to scroll.\n     * @returns {Promise} A Promise which resolves when the scrolling is complete.\n     * @category Scrolling\n     */\n    scrollToNow(options = {}) {\n        return this.scrollToDate(new Date(), options);\n    }\n\n    /**\n     * Used by {@link #function-scrollToDate} to scroll to correct coordinate.\n     * @param {Number} localCoordinate Coordinate to scroll to\n     * @param {Date} date Date to scroll to, used for reconfiguring the time axis\n     * @param {ScrollOptions} [options] How to scroll.\n     * @returns {Promise} A Promise which resolves when the scrolling is complete.\n     * @private\n     * @category Scrolling\n     */\n    async scrollToCoordinate(localCoordinate, target, date, options = {}) {\n        const me = this;\n\n        // Not currently have this date in a timeaxis. Ignore negative scroll in weekview, it can be just 'filtered' with\n        // startTime/endTime config\n        if (localCoordinate < 0) {\n            // adjust the timeaxis first\n            const\n                visibleSpan         = me.endDate - me.startDate,\n                { unit, increment } = me.timeAxis,\n                newStartDate        = DateHelper.floor(new Date(date.getTime() - (visibleSpan / 2)), increment + ' ' + unit),\n                newEndDate          = DateHelper.add(newStartDate, visibleSpan);\n\n            // We're trying to reconfigure time span to current dates, which means we are as close to center as it\n            // could be. Do nothing then.\n            // covered by 1102_panel_api\n            if (newStartDate - me.startDate !== 0 && newEndDate - me.endDate !== 0) {\n                me.setTimeSpan(newStartDate, newEndDate);\n\n                return me.scrollToDate(date, options);\n            }\n\n            return;\n        }\n\n        await me.timelineScroller.scrollIntoView(target, options);\n\n        // Horizontal scroll is triggered on next frame in SubGrid.js, view is not up to date yet. Resolve on next frame\n        return !me.isDestroyed && me.nextAnimationFrame();\n    }\n\n    //endregion\n\n    //region Relative scrolling\n    // These methods are important to users because although they are mixed into the top level Grid/Scheduler,\n    // for X scrolling the explicitly target the SubGrid that holds the scheduler.\n\n    /**\n     * Get/set the `scrollLeft` value of the SubGrid that holds the scheduler.\n     *\n     * This may be __negative__ when the writing direction is right-to-left.\n     * @property {Number}\n     * @category Scrolling\n     */\n    set scrollLeft(left) {\n        this.timeAxisSubGrid.scrollable.element.scrollLeft = left;\n    }\n\n    get scrollLeft() {\n        return this.timeAxisSubGrid.scrollable.element.scrollLeft;\n    }\n\n    /**\n     * Get/set the writing direction agnostic horizontal scroll position.\n     *\n     * This is always the __positive__ offset from the scroll origin whatever the writing\n     * direction in use.\n     *\n     * Applies to the SubGrid that holds the scheduler\n     * @property {Number}\n     * @category Scrolling\n     */\n    set scrollX(x) {\n        this.timeAxisSubGrid.scrollable.x = x;\n    }\n\n    get scrollX() {\n        return this.timeAxisSubGrid.scrollable.x;\n    }\n\n    /**\n     * Get/set vertical scroll\n     * @property {Number}\n     * @category Scrolling\n     */\n    set scrollTop(top) {\n        this.scrollable.y = top;\n    }\n\n    get scrollTop() {\n        return this.scrollable.y;\n    }\n\n    /**\n     * Horizontal scrolling. Applies to the SubGrid that holds the scheduler\n     * @param {Number} x\n     * @param {ScrollOptions|Boolean} [options] How to scroll. May be passed as `true` to animate.\n     * @returns {Promise} A promise which is resolved when the scrolling has finished.\n     * @category Scrolling\n     */\n    scrollHorizontallyTo(coordinate, options = true) {\n        return this.timeAxisSubGrid.scrollable.scrollTo(coordinate, null, options);\n    }\n\n    /**\n     * Vertical scrolling\n     * @param {Number} y\n     * @param {ScrollOptions|Boolean} [options] How to scroll. May be passed as `true` to animate.\n     * @returns {Promise} A promise which is resolved when the scrolling has finished.\n     * @category Scrolling\n     */\n    scrollVerticallyTo(y, options = true) {\n        return this.scrollable.scrollTo(null, y, options);\n    }\n\n    /**\n     * Scrolls the subgrid that contains the scheduler\n     * @param {Number} x\n     * @param {ScrollOptions|Boolean} [options] How to scroll. May be passed as `true` to animate.\n     * @returns {Promise} A promise which is resolved when the scrolling has finished.\n     * @category Scrolling\n     */\n    scrollTo(x, options = true) {\n        return this.timeAxisSubGrid.scrollable.scrollTo(x, null, options);\n    }\n\n    //endregion\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n\n// Internal class used to interrogate and manipulate the timeline scroll position.\n// This delegates all operations to the appropriate Scroller, horizontal or vertical.\nclass TimelineScroller extends Scroller {\n    static get configurable() {\n        return {\n            position : null,\n            x        : null,\n            y        : null\n        };\n    }\n\n    // This class is passive about configuring the element.\n    // It has no opinions about *how* the overflow is handled.\n    updateOverflowX() {}\n    updateOverflowY() {}\n\n    onScroll(e) {\n        super.onScroll(e);\n        this._position = null;\n    }\n\n    syncPartners(force) {\n        this.scrollable.syncPartners(force);\n    }\n\n    updatePosition(position) {\n        this.scrollable[this.isHorizontal ? 'x' : 'y'] = position;\n    }\n\n    get viewport() {\n        return this.scrollable.viewport;\n    }\n\n    get position() {\n        return this._position = this.scrollable[this.isHorizontal ? 'x' : 'y'];\n    }\n\n    get clientSize() {\n        return this.scrollable[`client${this.isHorizontal ? 'Width' : 'Height'}`];\n    }\n\n    get scrollSize() {\n        return this.scrollable[`scroll${this.isHorizontal ? 'Width' : 'Height'}`];\n    }\n\n    get maxPosition() {\n        return this.scrollable[`max${this.isHorizontal ? 'X' : 'Y'}`];\n    }\n\n    scrollTo(position, options) {\n        return this.isHorizontal ? this.scrollable.scrollTo(position, null, options) : this.scrollable.scrollTo(null, position, options);\n    }\n\n    scrollBy(xDelta = 0, yDelta = 0, options = defaultScrollOptions) {\n        // Use the correct delta by default, but if it's zero, accommodate axis error.\n        return this.isHorizontal ? this.scrollable.scrollBy(xDelta || yDelta, 0, options) : this.scrollable.scrollBy(0, yDelta || xDelta, options);\n    }\n\n    scrollIntoView() {\n        return this.scrollable.scrollIntoView(...arguments);\n    }\n\n    // We accommodate mistakes. Setting X and Y sets the appropriate scroll axis position\n    changeX(x) {\n        this.position = x;\n    }\n\n    changeY(y) {\n        this.position = y;\n    }\n\n    get x() {\n        return this.position;\n    }\n\n    set x(x) {\n        this.scrollable[this.isHorizontal ? 'x' : 'y'] = x;\n    }\n\n    get y() {\n        return this.position;\n    }\n\n    set y(y) {\n        this.scroller[this.isHorizontal ? 'x' : 'y'] = y;\n    }\n\n    get clientWidth() {\n        return this.clientSize;\n    }\n\n    get clientHeight() {\n        return this.clientSize;\n    }\n\n    get scrollWidth() {\n        return this.scrollSize;\n    }\n\n    get scrollHeight() {\n        return this.scrollSize;\n    }\n\n    get maxX() {\n        return this.maxPosition;\n    }\n\n    get maxY() {\n        return this.maxPosition;\n    }\n}\n","import Base from '../../../Core/Base.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Scheduler/view/mixin/TimelineState\n */\n\nconst copyProperties = [\n    'barMargin'\n];\n\n/**\n * Mixin for Timeline base that handles state. It serializes the following timeline properties:\n *\n * * barMargin\n * * zoomLevel\n *\n * See {@link Grid.view.mixin.GridState} and {@link Core.mixin.State} for more information on state.\n *\n * @mixin\n */\nexport default Target => class TimelineState extends (Target || Base) {\n    static get $name() {\n        return 'TimelineState';\n    }\n\n    /**\n     * Gets or sets timeline's state. Check out {@link Scheduler.view.mixin.TimelineState} mixin for details.\n     * @member {Object} state\n     * @property {Object[]} state.columns\n     * @property {Number} state.rowHeight\n     * @property {Object} state.scroll\n     * @property {Number} state.scroll.scrollLeft\n     * @property {Number} state.scroll.scrollTop\n     * @property {Array} state.selectedRecords\n     * @property {String} state.style\n     * @property {String} state.selectedCell\n     * @property {Object} state.store\n     * @property {Object} state.store.sorters\n     * @property {Object} state.store.groupers\n     * @property {Object} state.store.filters\n     * @property {Object} state.subGrids\n     * @property {Number} state.barMargin\n     * @property {Number} state.zoomLevel\n     * @category State\n     */\n\n    /**\n     * Get timeline's current state for serialization. State includes rowHeight, headerHeight, readOnly, selectedCell,\n     * selectedRecordId, column states and store state etc.\n     * @returns {Object} State object to be serialized\n     * @private\n     */\n    getState() {\n        const\n            me    = this,\n            state = ObjectHelper.copyProperties(super.getState(), me, copyProperties);\n\n        state.zoomLevel = me.zoomLevel;\n\n        state.zoomLevelOptions = {\n            startDate  : me.startDate,\n            endDate    : me.endDate,\n            // With infinite scroll reading viewportCenterDate too early will lead to exception\n            centerDate : !me.infiniteScroll || me.timeAxisViewModel.availableSpace ? me.viewportCenterDate : undefined,\n            width      : me.tickSize\n        };\n\n        return state;\n    }\n\n    /**\n     * Apply previously stored state.\n     * @param {Object} state\n     * @private\n     */\n    applyState(state) {\n        const me = this;\n\n        me.suspendRefresh();\n\n        ObjectHelper.copyProperties(me, state, copyProperties);\n\n        super.applyState(state);\n\n        if (state.zoomLevel != null) {\n            // Do not restore left scroll, infinite scroll should do all the work\n            if (me.infiniteScroll) {\n                if (state?.scroll?.scrollLeft) {\n                    state.scroll.scrollLeft = {};\n                }\n            }\n\n            if (me.isPainted) {\n                me.zoomToLevel(state.zoomLevel, state.zoomLevelOptions);\n            }\n            else {\n                me._zoomAfterPaint = { zoomLevel : state.zoomLevel, zoomLevelOptions : state.zoomLevelOptions };\n            }\n        }\n\n        me.resumeRefresh(true);\n    }\n\n    onPaint(...args) {\n        super.onPaint(...args);\n\n        if (this._zoomAfterPaint) {\n            const { zoomLevel, zoomLevelOptions } = this._zoomAfterPaint;\n\n            this.zoomToLevel(zoomLevel, zoomLevelOptions);\n\n            delete this._zoomAfterPaint;\n        }\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import GridHeader from '../../Grid/view/Header.js';\n\n/**\n * @module Scheduler/view/Header\n */\n\n/**\n * Custom header subclass which handles the existence of the special TimeAxisColumn\n *\n * @extends Grid/view/Header\n * @private\n */\nexport default class Header extends GridHeader {\n    static get $name() {\n        return 'SchedulerHeader';\n    }\n\n    refreshContent() {\n        // Only render contents into the header once as it contains the special rendering of the TimeAxisColumn\n        // In case ResizeObserver polyfill is used headers element will have resize monitors inserted and we should\n        // take that into account\n        // https://github.com/bryntum/support/issues/3444\n        if (!this.headersElement?.querySelector('.b-sch-timeaxiscolumn')) {\n            super.refreshContent();\n        }\n    }\n}\n","import SubGrid from '../../Grid/view/SubGrid.js';\nimport Header from './Header.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\n\n/**\n * @module Scheduler/view/TimeAxisSubGrid\n */\n\n/**\n * Widget that encapsulates the SubGrid part of the scheduler which houses the timeline view.\n * @extends Grid/view/SubGrid\n * @private\n */\nexport default class TimeAxisSubGrid extends SubGrid {\n\n    static get $name() {\n        return 'TimeAxisSubGrid';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'timeaxissubgrid';\n    }\n\n    static get configurable() {\n        return {\n            // A Scheduler's SubGrid doesn't accept external columns moving in\n            sealedColumns : true,\n\n            // Use Scheduler's Header class\n            headerClass : Header\n        };\n    }\n\n    startConfigure(config) {\n        const { grid : scheduler } = config;\n\n        // Scheduler references its TimeAxisSubGrid instance through this property.\n        scheduler.timeAxisSubGrid = this;\n\n        super.startConfigure(config);\n\n        if (scheduler.isHorizontal) {\n            config.header = {\n                cls : {\n                    'b-sticky-headers' : scheduler.stickyHeaders\n                }\n            };\n            // We don't use what the GridSubGrids mixin tells us to.\n            // We use the Sheduler's Header class.\n            delete config.headerClass;\n        }\n\n        // If user have not specified a width or flex for scheduler region, default to flex=1\n        if (!('flex' in config || 'width' in config)) {\n            config.flex = 1;\n        }\n    }\n\n    changeScrollable() {\n        const\n            me         = this,\n            scrollable = super.changeScrollable(...arguments);\n\n        // TimeAxisSubGrid's X axis is stretched by its canvas.\n        // We don't need the Scroller's default stretching implementation.\n        if (scrollable) {\n            Object.defineProperty(scrollable, 'scrollWidth', {\n                get() {\n                    return this.element?.scrollWidth ?? 0;\n                },\n                set() {\n                    // Setting the scroll width to be wide just updates the canvas side in Scheduler.\n                    // We do not need the Scroller's default stretcher element to be added.\n                    // Note that \"me\" here is the TimeAxisSubGrid, so we are calling Scheduler.\n                    me.grid.updateCanvasSize();\n                }\n            });\n        }\n\n        return scrollable;\n    }\n\n    handleHorizontalScroll(addCls = true) {\n        // Swallow scroll syncing calls that happen during view preset changes, that process triggers multiple when\n        // it first changes tickWidth, then scrolls to center and then an additional sync on scroll end\n        if (!this.grid._viewPresetChanging) {\n            super.handleHorizontalScroll(addCls);\n        }\n    }\n\n    /**\n     * This is an event handler triggered when the TimeAxisSubGrid changes size.\n     * Its height changes when content height changes, and that is not what we are\n     * interested in here. If the *width* changes, that means the visible viewport\n     * has changed size.\n     * @param {HTMLElement} element\n     * @param {Number} width\n     * @param {Number} height\n     * @param {Number} oldWidth\n     * @param {Number} oldHeight\n     * @private\n     */\n    onInternalResize(element, width, height, oldWidth, oldHeight) {\n        const me = this;\n\n        // We, as the TimeAxisSubGrid dictate the scheduler viewport width\n        if (me.isPainted && width !== oldWidth) {\n            const\n                scheduler  = me.grid,\n                bodyHeight = scheduler._bodyRectangle.height;\n\n            // Avoid ResizeObserver errors when this operation may create a scrollbar\n            if (DomHelper.scrollBarWidth && width < oldWidth) {\n                me.monitorResize = false;\n            }\n            scheduler.onSchedulerViewportResize(width, bodyHeight, oldWidth, bodyHeight);\n\n            // Revert to monitoring on the next animation frame.\n            // This is to avoid \"ResizeObserver loop completed with undelivered notifications.\"\n            if (!me.monitorResize) {\n                me.requestAnimationFrame(() => me.monitorResize = true);\n            }\n        }\n\n        super.onInternalResize(...arguments);\n    }\n\n    // When restoring state we need to update time axis size immediately, resize event is not triggered fast enough to\n    // restore center date consistently\n    clearWidthCache() {\n        super.clearWidthCache();\n\n        // Check if we are in horizontal mode\n        if (this.owner.isHorizontal) {\n            this.owner.updateViewModelAvailableSpace(this.width);\n        }\n    }\n\n    async expand() {\n        const { owner } = this;\n\n        await super.expand();\n\n        if (owner.isPainted) {\n            owner.timeAxisViewModel.update(this.width, false, true);\n        }\n    }\n}\n\n// Register this widget type with its Factory\nTimeAxisSubGrid.initClass();\n","import GlobalEvents from '../../Core/GlobalEvents.js';\nimport GridBase from '../../Grid/view/GridBase.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport FunctionHelper from '../../Core/helper/FunctionHelper.js';\nimport ResizeMonitor from '../../Core/helper/ResizeMonitor.js';\nimport Collection from '../../Core/util/Collection.js';\nimport IdHelper from '../../Core/helper/IdHelper.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\n\nimport VersionHelper from '../../Core/helper/VersionHelper.js';\nimport TimeAxis from '../data/TimeAxis.js';\n\nimport TimeAxisViewModel from './model/TimeAxisViewModel.js';\nimport TimelineDateMapper from './mixin/TimelineDateMapper.js';\nimport TimelineDomEvents from './mixin/TimelineDomEvents.js';\nimport TimelineViewPresets from './mixin/TimelineViewPresets.js';\nimport TimelineZoomable from './mixin/TimelineZoomable.js';\nimport RecurringEvents from './mixin/RecurringEvents.js';\nimport TimelineEventRendering from './mixin/TimelineEventRendering.js';\nimport TimelineScroll from './mixin/TimelineScroll.js';\nimport TimelineState from './mixin/TimelineState.js';\nimport './TimeAxisSubGrid.js';\n\nconst\n    exitTransition = {\n        fn                : 'exitTransition',\n        delay             : 0,\n        cancelOutstanding : true\n    },\n    inRange = (v, r0, r1) => (r0 == null)\n        ? (r1 == null || v < r1)\n        : (r1 == null)\n            ? v >= r0\n            : (r0 < r1)\n                ? (r0 <= v && v < r1)       // 5 in [1, 10]  (after 1 and before 10)\n                : (v < r1 || r0 <= v),      // 5 in [10, 1]  (after 10 or before 1)\n    isWorkingTime = (d, wt) => inRange(d.getDay(), wt.fromDay, wt.toDay) && inRange(d.getHours(), wt.fromHour, wt.toHour),\n    emptyObject   = {};\n\n/**\n * @module Scheduler/view/TimelineBase\n */\n\n/**\n * Options accepted by the Scheduler's {@link Scheduler.view.Scheduler#config-visibleDate} property.\n *\n * @typedef {Object} VisibleDate\n * @property {Date} date The date to bring into view.\n * @property {'start'|'end'|'center'|'nearest'} [block] How far to scroll the date.\n * @property {Number} [edgeOffset] edgeOffset A margin around the date to bring into view.\n * @property {AnimateScrollOptions|Boolean|Number} [animate] Set to `true` to animate the scroll by 300ms,\n * or the number of milliseconds to animate over, or an animation config object.\n */\n\n/**\n * Abstract base class used by timeline based components such as Scheduler and Gantt. Based on Grid, supplies a \"locked\"\n * region for columns and a \"normal\" for rendering of events etc.\n * @abstract\n *\n * @mixes Scheduler/view/mixin/TimelineDateMapper\n * @mixes Scheduler/view/mixin/TimelineDomEvents\n * @mixes Scheduler/view/mixin/TimelineEventRendering\n * @mixes Scheduler/view/mixin/TimelineScroll\n * @mixes Scheduler/view/mixin/TimelineState\n * @mixes Scheduler/view/mixin/TimelineViewPresets\n * @mixes Scheduler/view/mixin/TimelineZoomable\n * @mixes Scheduler/view/mixin/RecurringEvents\n *\n * @extends Grid/view/Grid\n */\nexport default class TimelineBase extends GridBase.mixin(\n    TimelineDateMapper,\n    TimelineDomEvents,\n    TimelineEventRendering,\n    TimelineScroll,\n    TimelineState,\n    TimelineViewPresets,\n    TimelineZoomable,\n    RecurringEvents\n) {\n    //region Config\n\n    static get $name() {\n        return 'TimelineBase';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'timelinebase';\n    }\n\n    static configurable = {\n        partnerSharedConfigs : {\n            value : ['timeAxisViewModel', 'timeAxis', 'viewPreset'],\n\n            $config : {\n                merge : 'distinct'\n            }\n        },\n\n        /**\n         * Get/set startDate. Defaults to current date if none specified.\n         *\n         * When using {@link #config-infiniteScroll}, use {@link #config-visibleDate} to control initially visible date\n         * instead.\n         *\n         * **Note:** If you need to set start and end date at the same time, use {@link #function-setTimeSpan} method.\n         * @member {Date} startDate\n         * @category Common\n         */\n        /**\n         * The start date of the timeline (if not configure with {@link #config-infiniteScroll}).\n         *\n         * If omitted, and a TimeAxis has been set, the start date of the provided {@link Scheduler.data.TimeAxis} will\n         * be used. If no TimeAxis has been configured, it'll use the start/end dates of the loaded event dataset. If no\n         * date information exists in the event data set, it defaults to the current date and time.\n         *\n         * If a string is supplied, it will be parsed using\n         * {@link Core/helper/DateHelper#property-defaultFormat-static DateHelper.defaultFormat}.\n         *\n         * When using {@link #config-infiniteScroll}, use {@link #config-visibleDate} to control initially visible date\n         * instead.\n         *\n         * **Note:** If you need to set start and end date at the same time, use the {@link #function-setTimeSpan} method.\n         * @config {Date|String}\n         * @category Common\n         */\n        startDate : {\n            $config : {\n                equal : 'date'\n            },\n            value : null\n        },\n\n        /**\n         * Get/set endDate. Defaults to startDate + default span of the used ViewPreset.\n         *\n         * **Note:** If you need to set start and end date at the same time, use {@link #function-setTimeSpan} method.\n         * @member {Date} endDate\n         * @category Common\n         */\n        /**\n         * The end date of the timeline (if not configure with {@link #config-infiniteScroll}).\n         *\n         * If omitted, it will be calculated based on the {@link #config-startDate} setting and the 'defaultSpan'\n         * property of the current {@link #config-viewPreset}.\n         *\n         * If a string is supplied, it will be parsed using\n         * {@link Core/helper/DateHelper#property-defaultFormat-static DateHelper.defaultFormat}.\n         *\n         * **Note:** If you need to set start and end date at the same time, use the {@link #function-setTimeSpan} method.\n         * @config {Date|String}\n         * @category Common\n         */\n        endDate : {\n            $config : {\n                equal : 'date'\n            },\n            value : null\n        },\n\n        /**\n         * When set, the text in the major time axis header sticks in the scrolling viewport as long as possible.\n         * @config {Boolean}\n         * @default\n         * @category Time axis\n         */\n        stickyHeaders : true,\n\n        /**\n         * A scrolling `options` object describing the scroll action, including a `date` option\n         * which references a `Date`. See {@link #function-scrollToDate} for details about scrolling options.\n         *\n         * ```javascript\n         *     // The date we want in the center of the Scheduler viewport\n         *     myScheduler.visibleDate = {\n         *         date    : new Date(2023, 5, 17, 12),\n         *         block   : 'center',\n         *         animate : true\n         *     };\n         * ```\n         * @member {Object} visibleDate\n         * @category Common\n         */\n        /**\n         * A date to bring into view initially on the scrollable timeline.\n         *\n         * This may be configured as either a `Date` or a scrolling `options` object describing\n         * the scroll action, including a `date` option which references a `Date`.\n         *\n         * See {@link #function-scrollToDate} for details about scrolling options.\n         *\n         * Note that if a naked `Date` is passed, it will be stored internally as a scrolling options object\n         * using the following defaults:\n         *\n         * ```javascript\n         * {\n         *     date  : <The Date object>,\n         *     block : 'nearest'\n         * }\n         * ```\n         *\n         * This moves the date into view by the shortest scroll, so that it just appears at an edge.\n         *\n         * To bring your date of interest to the center of the viewport, configure your\n         * Scheduler thus:\n         *\n         * ```javascript\n         *     visibleDate : {\n         *         date  : new Date(2023, 5, 17, 12),\n         *         block : 'center'\n         *     }\n         * ```\n         * @config {Date|VisibleDate}\n         * @category Common\n         */\n        visibleDate : null,\n\n        /**\n         * CSS class to add to rendered events\n         * @config {String}\n         * @category CSS\n         * @private\n         */\n        eventCls : null,\n\n        /**\n         * Set to `true` to force the time columns to fit to the available space (horizontal or vertical depends on mode).\n         * Note that setting {@link #config-suppressFit} to `true`, will disable `forceFit` functionality. Zooming\n         * cannot be used when `forceFit` is set.\n         * @prp {Boolean}\n         * @default\n         * @category Time axis\n         */\n        forceFit : false,\n\n        /**\n         * Set to a time zone or a UTC offset. This will set the projects\n         * {@link Scheduler.model.ProjectModel#config-timeZone} config accordingly. As this config is only a referer,\n         * please se project's config {@link Scheduler.model.ProjectModel#config-timeZone documentation} for more\n         * information.\n         *\n         * ```javascript\n         * new Calendar(){\n         *   timeZone : 'America/Chicago'\n         * }\n         * ```\n         * @prp {String|Number} timeZone\n         * @category Misc\n         */\n        timeZone : null\n\n    };\n\n    static get defaultConfig() {\n        return {\n            /**\n             * A valid JS day index between 0-6 (0: Sunday, 1: Monday etc.) to be considered the start day of the week.\n             * When omitted, the week start day is retrieved from the active locale class.\n             * @config {Number} weekStartDay\n             * @category Time axis\n             */\n\n            /**\n             * An object with format `{ fromDay, toDay, fromHour, toHour }` that describes the working days and hours.\n             * This object will be used to populate TimeAxis {@link Scheduler.data.TimeAxis#config-include} property.\n             *\n             * Using it results in a non-continuous time axis. Any ticks not covered by the working days and hours will\n             * be excluded. Events within larger ticks (for example if using week as the unit for ticks) will be\n             * stretched to fill the gap otherwise left by the non working hours.\n             *\n             * As with end dates, `toDay` and `toHour` are exclusive. Thus `toDay : 6` means that day 6 (saturday) will\n             * not be included.\n             *\n             *\n             * **NOTE:** When this feature is enabled {@link Scheduler.view.mixin.TimelineZoomable Zooming feature} is\n             * not supported. It's recommended to disable zooming controls:\n             *\n             * ```javascript\n             * new Scheduler({\n             *     zoomOnMouseWheel          : false,\n             *     zoomOnTimeAxisDoubleClick : false,\n             *     ...\n             * });\n             * ```\n             *\n             * @config {Object}\n             * @category Time axis\n             */\n            workingTime : null,\n\n            /**\n             * A backing data store of 'ticks' providing the input date data for the time axis of timeline panel.\n             * @member {Scheduler.data.TimeAxis} timeAxis\n             * @readonly\n             * @category Time axis\n             */\n\n            /**\n             * A {@link Scheduler.data.TimeAxis} config object or instance, used to create a backing data store of\n             * 'ticks' providing the input date data for the time axis of timeline panel. Created automatically if none\n             * supplied.\n             * @config {TimeAxisConfig|Scheduler.data.TimeAxis}\n             * @category Time axis\n             */\n            timeAxis : null,\n\n            /**\n             * The backing view model for the visual representation of the time axis.\n             * Either a real instance or a simple config object.\n             * @private\n             * @config {Scheduler.view.model.TimeAxisViewModel|TimeAxisViewModelConfig}\n             * @category Time axis\n             */\n            timeAxisViewModel : null,\n\n            /**\n             * You can set this option to `false` to make the timeline panel start and end on the exact provided\n             * {@link #config-startDate}/{@link #config-endDate} w/o adjusting them.\n             * @config {Boolean}\n             * @default\n             * @category Time axis\n             */\n            autoAdjustTimeAxis : true,\n\n            /**\n             * Affects drag drop and resizing of events when {@link Scheduler/view/mixin/TimelineDateMapper#config-snap}\n             * is enabled.\n             *\n             * If set to `true`, dates will be snapped relative to event start. e.g. for a zoom level with\n             * `timeResolution = { unit: \"s\", increment: \"20\" }`, an event that starts at 10:00:03 and is dragged would\n             * snap its start date to 10:00:23, 10:00:43 etc.\n             *\n             * When set to `false`, dates will be snapped relative to the timeAxis startDate (tick start)\n             * - 10:00:03 -> 10:00:20, 10:00:40 etc.\n             *\n             * @config {Boolean}\n             * @default\n             * @category Scheduled events\n             */\n            snapRelativeToEventStartDate : false,\n\n            /**\n             * Set to `true` to prevent auto calculating of a minimal {@link Scheduler.view.mixin.TimelineEventRendering#property-tickSize}\n             * to always fit the content to the screen size. Setting this property on `true` will disable {@link #config-forceFit} behaviour.\n             * @config {Boolean}\n             * @default false\n             * @category Time axis\n             */\n            suppressFit : false,\n\n            /**\n             * CSS class to add to cells in the timeaxis column\n             * @config {String}\n             * @category CSS\n             * @private\n             */\n            timeCellCls : null,\n\n            scheduledEventName : null,\n\n            //dblClickTime : 200,\n\n            /**\n             * A CSS class to apply to each event in the view on mouseover.\n             * @config {String}\n             * @category CSS\n             * @private\n             */\n            overScheduledEventClass : null,\n\n            // allow the panel to prevent adding the hover CSS class in some cases - during drag drop operations\n            preventOverCls : false,\n\n            // This setting is set to true by features that need it\n            useBackgroundCanvas : false,\n\n            /**\n             * Set to `false` if you don't want event bar DOM updates to animate.\n             * @prp {Boolean}\n             * @default true\n             * @category Scheduled events\n             */\n            enableEventAnimations : true,\n\n            disableGridRowModelWarning : true,\n\n            // does not look good with locked columns and also interferes with event animations\n            animateRemovingRows : false,\n\n            /**\n             * Partners this Timeline panel with another Timeline in order to sync their region sizes (sub-grids like locked, normal will get the same width),\n             * start and end dates, view preset, zoom level and scrolling position. All these values will be synced with the timeline defined as the `partner`.\n             *\n             * - To add a new partner dynamically see {@link #function-addPartner} method.\n             * - To remove existing partner see {@link #function-removePartner} method.\n             * - To check if timelines are partners see {@link #function-isPartneredWith} method.\n             *\n             * Column widths and hide/show state are synced between partnered schedulers when the column set is identical.\n             * @config {Scheduler.view.TimelineBase}\n             * @category Time axis\n             */\n            partner : null,\n\n            schedulerRegion : 'normal',\n\n            transitionDuration : 200,\n            // internal timer id reference\n            animationTimeout   : null,\n\n            /**\n             * Region to which columns are added when they have none specified\n             * @config {String}\n             * @default\n             * @category Misc\n             */\n            defaultRegion : 'locked',\n\n            /**\n             * Decimal precision used when displaying durations, used by tooltips and DurationColumn.\n             * Specify `false` to use raw value\n             * @config {Number|Boolean}\n             * @default\n             * @category Common\n             */\n            durationDisplayPrecision : 1,\n\n            /**\n             * An object with configuration for the {@link Scheduler.column.TimeAxisColumn} in horizontal\n             * {@link Scheduler.view.SchedulerBase#config-mode}.\n             *\n             * Example:\n             *\n             * ```javascript\n             * new Scheduler({\n             *     timeAxisColumn : {\n             *         renderer : ({ record, cellElement }) => {\n             *             // output some markup as a layer below the events layer, you can draw a chart for example\n             *         }\n             *     },\n             *     ...\n             * });\n             * ```\n             *\n             * @config {TimeAxisColumnConfig} timeAxisColumn\n             * @category Time axis\n             */\n\n            asyncEventSuffix : 'PreCommit'\n        };\n    }\n\n    timeCellSelector = null;\n\n    updateTimeZone(timeZone) {\n        if (this.project) {\n            if (this.isConfiguring) {\n                this.project._isConfiguringTimeZone = true;\n            }\n            this.project.timeZone = timeZone;\n        }\n    }\n\n    get timeZone() {\n        return this.project?.timeZone;\n    }\n\n    //endregion\n\n    //region Feature hooks\n\n    /**\n     * Populates the event context menu. Chained in features to add menu items.\n     * @param {Object} options Contains menu items and extra data retrieved from the menu target.\n     * @param {Grid.column.Column} options.column Column for which the menu will be shown.\n     * @param {Scheduler.model.EventModel} options.eventRecord The context event.\n     * @param {Scheduler.model.ResourceModel} options.resourceRecord The context resource.\n     * @param {Scheduler.model.AssignmentModel} options.assignmentRecord The context assignment if any.\n     * @param {Object<String,MenuItemConfig|Boolean|null>} options.items A named object to describe menu items.\n     * @internal\n     */\n    populateEventMenu() {}\n\n    /**\n     * Populates the time axis context menu. Chained in features to add menu items.\n     * @param {Object} options Contains menu items and extra data retrieved from the menu target.\n     * @param {Grid.column.Column} options.column Column for which the menu will be shown.\n     * @param {Scheduler.model.ResourceModel} options.resourceRecord The context resource.\n     * @param {Date} options.date The Date corresponding to the mouse position in the time axis.\n     * @param {Object<String,MenuItemConfig|Boolean|null>} options.items A named object to describe menu items.\n     * @internal\n     */\n    populateScheduleMenu() {}\n\n    // Called when visible date range potentially changes such as when scrolling in\n    // the time axis.\n    onVisibleDateRangeChange(range) {\n        if (!this.handlingVisibleDateRangeChange) {\n            const\n                me                    = this,\n                { _visibleDateRange } = me,\n                dateRangeChange       = !_visibleDateRange || (_visibleDateRange.startDate - range.startDate || _visibleDateRange.endDate - range.endDate);\n\n            if (dateRangeChange) {\n                me.timeView.range                 = range;\n                me.handlingVisibleDateRangeChange = true;\n\n                /**\n                 * Fired when the range of dates visible within the viewport changes. This will be when\n                 * scrolling along a time axis.\n                 *\n                 * __Note__ that this event will fire frequently during scrolling, so any listener\n                 * should probably be added with the `buffer` option to slow down the calls to your\n                 * handler function :\n                 *\n                 * ```javascript\n                 * listeners : {\n                 *     visibleDateRangeChange({ old, new }) {\n                 *         this.updateRangeRequired(old, new);\n                 *     },\n                 *     // Only call once. 300 ms after the last event was detected\n                 *     buffer : 300\n                 * }\n                 * ```\n                 * @event visibleDateRangeChange\n                 * @param {Scheduler.view.Scheduler} source This Scheduler instance.\n                 * @param {Object} old The old date range\n                 * @param {Date} old.startDate the old start date.\n                 * @param {Date} old.endDate the old end date.\n                 * @param {Object} new The new date range\n                 * @param {Date} new.startDate the new start date.\n                 * @param {Date} new.endDate the new end date.\n                 */\n                me.trigger('visibleDateRangeChange', {\n                    old : _visibleDateRange,\n                    new : range\n                });\n                me.handlingVisibleDateRangeChange = false;\n                me._visibleDateRange              = range;\n            }\n        }\n    }\n\n    // Called when visible resource range changes in vertical mode\n    onVisibleResourceRangeChange() {}\n\n    //endregion\n\n    //region Init\n\n    construct(config = {}) {\n        const me = this;\n\n        super.construct(config);\n\n        me.$firstVerticalOverflow = true;\n\n        me.initDomEvents();\n\n        me.currentOrientation.init();\n\n        me.rowManager.ion({\n            refresh : () => {\n                me.forceLayout = false;\n            }\n        });\n    }\n\n    // Override from Grid.view.GridSubGrids\n    createSubGrid(region, config = {}) {\n        const\n            me                = this,\n            { stickyHeaders } = me;\n\n        // We are creating the TimeAxisSubGrid\n        if (region === (me.schedulerRegion || 'normal')) {\n            config.type = 'timeaxissubgrid';\n        }\n\n        // The assumption is that if we are in vertical mode, the locked SubGrid\n        // is used to house the verticalTimeAxis, and so it must all be overflow:visible\n        else if (region === 'locked' && stickyHeaders && me.isVertical) {\n            config.scrollable = {\n                overflowX : 'visible',\n                overflowY : 'visible'\n            };\n\n            // It's the child of the overflowElement\n            me.bodyContainer.classList.add('b-sticky-headers');\n        }\n\n        return super.createSubGrid(region, config);\n    }\n\n    doDestroy() {\n        const\n            me                                    = this,\n            { partneredWith, currentOrientation } = me;\n\n        currentOrientation?.destroy();\n\n        // Break links between this TimeLine and any partners.\n        if (partneredWith) {\n            partneredWith.forEach(p => {\n                me.removePartner(p);\n            });\n            partneredWith.destroy();\n        }\n        else {\n            me.timeAxisViewModel.destroy();\n            me.timeAxis.destroy();\n        }\n\n        super.doDestroy();\n    }\n\n    startConfigure(config) {\n        super.startConfigure(config);\n\n        // When the body height changes, we must update the SchedulerViewport's height\n        ResizeMonitor.addResizeListener(this.bodyContainer, this.onBodyResize.bind(this));\n\n        // partner needs to be initialized first so that the various shared\n        // configs are assigned first before we default them in.\n        this.getConfig('partner');\n    }\n\n    changeStartDate(startDate) {\n        if (typeof startDate === 'string') {\n            startDate = DateHelper.parse(startDate);\n        }\n        return startDate;\n    }\n\n    onPaint({ firstPaint }) {\n        // Upon first paint we need to pass the forceUpdate flag in case we are sharing the TimAxisViewModel\n        // with another Timeline which will already have done this.\n        if (firstPaint) {\n            // Take height from container element\n            // <remove-on-release>\n            // TODO: make flex element inherit height from parent (min-height: 100% doesn't work)\n            // </remove-on-release>\n            const\n                me             = this,\n                scrollable     = me.isHorizontal ? me.timeAxisSubGrid.scrollable : me.scrollable,\n                // Use exact subpixel available space so that tick size calculation is correct.\n                availableSpace = scrollable.element.getBoundingClientRect()[me.isHorizontal ? 'width' : 'height'];\n\n            // silent = true if infiniteScroll. If that is set, TimelineScroll.initScroll which is\n            // called by the base class's onPaint reconfigures the TAVM when it initializes.\n            me.timeAxisViewModel.update(availableSpace, me.infiniteScroll, true);\n\n            // If infiniteScroll caused the TAVM update to be silent, force the rendering to\n            // get hold of the scroll state and visible range\n            if (me.infiniteScroll) {\n                me.currentOrientation.doUpdateTimeView?.();\n            }\n        }\n\n        super.onPaint(...arguments);\n    }\n\n    onSchedulerHorizontalScroll(subGrid, scrollLeft, scrollX) {\n        // rerender cells in scheduler column on horizontal scroll to display events in view\n        this.currentOrientation.updateFromHorizontalScroll(scrollX);\n\n        super.onSchedulerHorizontalScroll(subGrid, scrollLeft, scrollX);\n    }\n\n    /**\n     * Overrides initScroll from Grid, listens for horizontal scroll to do virtual event rendering\n     * @private\n     */\n    initScroll() {\n        const me = this;\n\n        let frameCount = 0;\n\n        super.initScroll();\n\n        me.ion({\n            horizontalScroll : ({ subGrid, scrollLeft, scrollX }) => {\n                if (me.isPainted && subGrid === me.timeAxisSubGrid && !me.isDestroying && !me.refreshSuspended) {\n                    me.onSchedulerHorizontalScroll(subGrid, scrollLeft, scrollX);\n                }\n                frameCount++;\n            }\n        });\n\n        if (me.testPerformance === 'horizontal') {\n            me.setTimeout(() => {\n                const start     = performance.now();\n                let scrollSpeed = 5,\n                    direction   = 1;\n\n                const scrollInterval = me.setInterval(() => {\n                    scrollSpeed = scrollSpeed + 5;\n\n                    me.scrollX += (10 + Math.floor(scrollSpeed)) * direction;\n\n                    if (direction === 1 && me.scrollX > 5500) {\n                        direction   = -1;\n                        scrollSpeed = 5;\n                    }\n\n                    if (direction === -1 && me.scrollX <= 0) {\n                        const\n                            done    = performance.now(), // eslint-disable-line no-undef\n                            elapsed = done - start;\n\n                        const\n                            timePerFrame = elapsed / frameCount,\n                            fps          = Math.round((1000 / timePerFrame) * 10) / 10;\n\n                        clearInterval(scrollInterval);\n\n                        console.log(me.eventPositionMode, me.eventScrollMode, fps + 'fps');\n                    }\n                }, 0);\n            }, 500);\n        }\n    }\n\n    //endregion\n\n    /**\n     * Calls the specified function (returning its return value) and preserves the timeline center\n     * point. This is a useful way of retaining the user's visual context while making updates\n     * and changes to the view which require major changes or a full refresh.\n     * @param {Function} fn The function to call.\n     * @param {Object} thisObj The `this` context for the function.\n     * @param {...*} args Parameters to the function.\n     */\n    preserveViewCenter(fn, thisObj = this, ...args) {\n        const\n            me             = this,\n            centerDate     = me.viewportCenterDate,\n            result         = fn.apply(thisObj, args),\n            scroller       = me.timelineScroller,\n            { clientSize } = scroller,\n            scrollStart    = Math.max(Math.floor(me.getCoordinateFromDate(centerDate, true) - clientSize / 2), 0);\n\n        me.scrollingToCenter = true;\n        scroller.scrollTo(scrollStart, false).then(() => me.scrollingToCenter = false);\n\n        return result;\n    }\n\n    /**\n     * Changes this Scheduler's time axis timespan to the supplied start and end dates.\n     *\n     * @async\n     * @param {Date} newStartDate The new start date\n     * @param {Date} newEndDate The new end date\n     * @param {Object} [options] An object containing modifiers for the time span change operation.\n     * @param {Boolean} [options.maintainVisibleStart] Specify as `true` to keep the visible start date stable.\n     * @param {Date} [options.visibleDate] The date inside the range to scroll into view\n     */\n    setTimeSpan(newStartDate, newEndDate, options = emptyObject) {\n        const\n            me           = this,\n            { timeAxis } = me,\n            {\n                preventThrow = false, // Private, only used by the shift method.\n                maintainVisibleStart = false,\n                visibleDate\n            }            = options,\n            {\n                startDate,\n                endDate\n            }            = timeAxis.getAdjustedDates(newStartDate, newEndDate),\n            startChanged = timeAxis.startDate - startDate !== 0,\n            endChanged   = timeAxis.endDate - endDate !== 0;\n\n        if (startChanged || endChanged) {\n            if (maintainVisibleStart) {\n                const\n                    {\n                        timeAxisViewModel\n                    }             = me,\n                    { totalSize } = timeAxisViewModel,\n                    oldTickSize   = timeAxisViewModel.tickSize,\n                    scrollable    = me.timelineScroller,\n                    currentScroll = scrollable.position,\n                    visibleStart  = timeAxisViewModel.getDateFromPosition(currentScroll);\n\n                // If the current visibleStart is in the new range, maintain it\n                // So that there is no visual jump.\n                if (visibleStart >= startDate && visibleStart < endDate) {\n                    // We need to correct the scroll position as soon as the TimeAxisViewModel\n                    // has updated itself and before any other UI updates which that may trigger.\n                    timeAxisViewModel.ion({\n                        update() {\n                            const tickSizeChanged = timeAxisViewModel.tickSize !== oldTickSize;\n\n                            // Ensure the canvas element matches the TimeAxisViewModel's new totalSize.\n                            // This creates the required scroll range to be able to have the scroll\n                            // position correct before any further UI updates.\n                            me.updateCanvasSize();\n\n                            // If *only* the start moved, we can keep scroll position the same\n                            // by adjusting it by the amount the start moved.\n                            if (startChanged && !endChanged && !tickSizeChanged) {\n                                scrollable.position += (timeAxisViewModel.totalSize - totalSize);\n                            }\n                            // If only the end has changed, and tick size is same, we can maintain\n                            // the same scroll position.\n                            else if (!startChanged && !tickSizeChanged) {\n                                scrollable.position = currentScroll;\n                            }\n                            // Fall back to restoring the position by restoring the visible start time\n                            else {\n                                scrollable.position = timeAxisViewModel.getPositionFromDate(visibleStart);\n                            }\n\n                            // Force partners to sync with what we've just done to reset the scroll.\n                            // We are now in control.\n                            scrollable.syncPartners(true);\n                        },\n                        prio : 10000,\n                        once : true\n                    });\n                }\n            }\n\n            const returnValue = timeAxis.reconfigure({\n                startDate,\n                endDate\n            }, false, preventThrow);\n\n            if (visibleDate) {\n                return me.scrollToDate(visibleDate, options).then(() => returnValue);\n            }\n\n            return returnValue;\n        }\n    }\n\n    //region Config getters/setters\n\n    /**\n     * Returns `true` if any of the events/tasks or feature injected elements (such as ResourceTimeRanges) are within\n     * the {@link #config-timeAxis}\n     * @property {Boolean}\n     * @readonly\n     * @category Scheduled events\n     */\n    get hasVisibleEvents() {\n        return !this.noFeatureElementsInAxis() || this.eventStore.storage.values.some(t => this.timeAxis.isTimeSpanInAxis(t));\n    }\n\n    // Template function to be chained in features to determine if any elements are in time axis (needed since we cannot\n    // currently chain getters). Negated to not break chain. First feature that has elements visible returns false,\n    // which prevents other features from being queried.\n    noFeatureElementsInAxis() { }\n\n    // Private getter used to piece together event names such as beforeEventDrag / beforeTaskDrag. Could also be used\n    // in templates.\n    get capitalizedEventName() {\n        if (!this._capitalizedEventName) {\n            this._capitalizedEventName = StringHelper.capitalize(this.scheduledEventName);\n        }\n\n        return this._capitalizedEventName;\n    }\n\n    set partner(partner) {\n        this._partner = partner;\n\n        this.addPartner(partner);\n    }\n\n    /**\n     * Partners this Timeline with the passed Timeline in order to sync the horizontal scrolling position and zoom level.\n     *\n     * - To remove existing partner see {@link #function-removePartner} method.\n     * - To get the list of partners see {@link #property-partners} getter.\n     *\n     * @param {Scheduler.view.TimelineBase} otherTimeline The timeline to partner with\n     */\n    addPartner(partner) {\n        const me = this;\n\n        if (!me.isPartneredWith(partner)) {\n            const partneredWith = me.partneredWith || (me.partneredWith = new Collection());\n\n            // Each must know about the other so that they can sync others upon region resize\n            partneredWith.add(partner);\n\n            (partner.partneredWith || (partner.partneredWith = new Collection())).add(me);\n\n            // Flush through viewPreset initGetter so that the setup in setConfig doesn't\n            // take them to be the class's defined getters.\n            me.getConfig('viewPreset');\n\n            partner.ion({\n                presetchange : 'onPartnerPresetChange',\n                thisObj      : me\n            });\n            partner.scrollable.ion({\n                overflowChange : 'onPartnerOverflowChange',\n                thisObj        : me\n            });\n\n            // collect configs that are meant to be shared between partners\n            const partnerSharedConfig = me.partnerSharedConfigs.reduce((config, configName) => {\n                config[configName] = partner[configName];\n                return config;\n            }, {});\n\n            me.setConfig(partnerSharedConfig);\n\n            me.ion({\n                presetchange : 'onPartnerPresetChange',\n                thisObj      : partner\n            });\n            me.scrollable.ion({\n                overflowChange : 'onPartnerOverflowChange',\n                thisObj        : partner\n            });\n\n            if (me.isPainted) {\n                me.scrollable.addPartner(partner.scrollable, me.isHorizontal ? 'x' : 'y');\n\n                partner.syncPartnerSubGrids();\n            }\n            else {\n                // When initScroll comes round, make sure it syncs with the partner\n                me.initScroll = FunctionHelper.createSequence(me.initScroll, () => {\n                    me.scrollable.addPartner(partner.scrollable, me.isHorizontal ? 'x' : 'y');\n                    partner.syncPartnerSubGrids();\n                }, me);\n            }\n        }\n    }\n\n    /**\n     * Breaks the link between current Timeline and the passed Timeline\n     *\n     * - To add a new partner see {@link #function-addPartner} method.\n     * - To get the list of partners see {@link #property-partners} getter.\n     *\n     * @param {Scheduler.view.TimelineBase} otherTimeline The timeline to unlink from\n     */\n    removePartner(partner) {\n        const\n            me                = this,\n            { partneredWith } = me;\n\n        if (me.isPartneredWith(partner)) {\n            partneredWith.remove(partner);\n            me.scrollable.removePartner(partner.scrollable);\n            me.un({\n                presetchange : 'onPartnerPresetChange',\n                thisObj      : partner\n            });\n            me.scrollable.un({\n                overflowChange : 'onPartnerOverflowChange',\n                thisObj        : partner\n            });\n\n            partner.removePartner(me);\n        }\n    }\n\n    /**\n     * Checks whether the passed timeline is partnered with the current timeline.\n     * @param {Scheduler.view.TimelineBase} partner The timeline to check the partnering with\n     * @returns {Boolean} Returns `true` if the timelines are partnered\n     */\n    isPartneredWith(partner) {\n        return Boolean(this.partneredWith?.includes(partner));\n    }\n\n    /**\n     * Called when a partner scheduler changes its overflowing state. The scrollable\n     * of a Grid/Scheduler only handles overflowY, so this will mean the addition\n     * or removal of a vertical scrollbar.\n     *\n     * All partners must stay in sync. If another parter has a vertical scrollbar\n     * and we do not, we must set our overflowY to 'scroll' so that we show an empty\n     * scrollbar to keep widths synchronized.\n     * @param {Object} event A {@link Core.helper.util.Scroller#event-overflowChange} event\n     * @internal\n     */\n    onPartnerOverflowChange({ source : otherScrollable, y }) {\n        const\n            { scrollable } = this,\n            ourY           = scrollable.hasOverflow('y');\n\n        // If we disagree with our partner, the partner which doesn't have\n        // overflow, has to become overflowY : scroll\n        if (ourY !== y) {\n            if (ourY) {\n                otherScrollable.overflowY = 'scroll';\n            }\n            else {\n                otherScrollable.overflowY = true;\n                scrollable.overflowY      = 'scroll';\n                this.refreshVirtualScrollbars();\n            }\n        }\n        // If we agree with our partner, we can reset ourselves to overflowY : auto\n        else {\n            scrollable.overflowY = true;\n        }\n    }\n\n    onPartnerPresetChange({ preset, startDate, endDate, centerDate, zoomDate, zoomPosition, zoomLevel }) {\n        if (!this._viewPresetChanging && this.viewPreset !== preset) {\n\n            // Passed through to the viewPreset changing method\n            preset.options  = {\n                startDate,\n                endDate,\n                centerDate,\n                zoomDate,\n                zoomPosition,\n                zoomLevel\n            };\n            this.viewPreset = preset;\n        }\n    }\n\n    get partner() {\n        return this._partner;\n    }\n\n    /**\n     * Returns the partnered timelines.\n     *\n     * - To add a new partner see {@link #function-addPartner} method.\n     * - To remove existing partner see {@link #function-removePartner} method.\n     *\n     * @readonly\n     * @member {Scheduler.view.TimelineBase[]} partners\n     * @category Time axis\n     */\n    get partners() {\n        const partners = this.partner ? [this.partner] : [];\n\n        if (this.partneredWith) {\n            partners.push.apply(partners, this.partneredWith.allValues);\n        }\n\n        return partners;\n    }\n\n    get timeAxisColumn() {\n        return this.columns && this._timeAxisColumn;\n    }\n\n    changeColumns(columns, currentStore) {\n        const me = this;\n        let timeAxisColumnIndex, timeAxisColumnConfig;\n\n        // No columns means destroy\n        if (columns) {\n            const isArray = Array.isArray(columns);\n\n            let cols = columns;\n\n            if (!isArray) {\n                cols = columns.data;\n            }\n\n            timeAxisColumnIndex = cols && cols.length;\n\n            cols.some((col, index) => {\n                if (col.type === 'timeAxis') {\n                    timeAxisColumnIndex  = index;\n                    timeAxisColumnConfig = ObjectHelper.assign(col, me.timeAxisColumn);\n                    return true;\n                }\n                return false;\n            });\n\n            // <remove-on-release>\n            // TODO: Move to Scheduler\n            // </remove-on-release>\n            if (me.isVertical) {\n                cols = [\n                    ObjectHelper.assign({\n                        type : 'verticalTimeAxis'\n                    }, me.verticalTimeAxisColumn),\n                    // Make space for a regular TimeAxisColumn after the VerticalTimeAxisColumn\n                    cols[timeAxisColumnIndex]\n                ];\n\n                timeAxisColumnIndex = 1;\n            }\n            else {\n                // We're going to mutate this array which we do not own, so copy it first.\n                cols = cols.slice();\n            }\n\n            // Fix up the timeAxisColumn config in place\n            cols[timeAxisColumnIndex] = this._timeAxisColumn || {\n                type    : 'timeAxis',\n                cellCls : me.timeCellCls,\n                mode    : me.mode,\n                ...timeAxisColumnConfig\n            };\n\n            // If we are passed a raw array, or the Store we are passed is owned by another\n            // Scheduler, pass the raw column data ro the Grid's changeColumns\n            if (isArray || (columns.isStore && columns.owner !== this)) {\n                columns = cols;\n            }\n            else {\n                columns.data = cols;\n            }\n        }\n\n        return super.changeColumns(columns, currentStore);\n    }\n\n    updateColumns(columns, was) {\n        super.updateColumns(columns, was);\n\n        // Extract the known columns by type. Sorting will have placed them into visual order.\n        if (columns) {\n            const\n                me             = this,\n                timeAxisColumn = me._timeAxisColumn = me.columns.find(c => c.isTimeAxisColumn);\n\n            if (me.isVertical) {\n                me.verticalTimeAxisColumn = me.columns.find(c => c.isVerticalTimeAxisColumn);\n                me.verticalTimeAxisColumn.relayAll(me);\n            }\n\n            // Set up event relaying early\n            timeAxisColumn.relayAll(me);\n        }\n    }\n\n    onColumnsChanged({ action, changes, record : column, records }) {\n        const { timeAxisColumn, columns } = this;\n        // If someone replaces the column set (syncing leads to batch), ensure time axis is always added\n        if ((action === 'dataset' || action === 'batch') && !columns.includes(timeAxisColumn)) {\n            columns.add(timeAxisColumn, true);\n        }\n        // <remove-on-release>\n        // TODO: Have ResourceHeader call this directly instead of relying on event?\n        // </remove-on-release>\n        else if (column === timeAxisColumn && 'width' in changes) {\n            this.updateCanvasSize();\n        }\n\n        column && this.partneredWith?.forEach(partner => {\n            const partnerColumn = partner.columns.getAt(column.allIndex);\n\n            if (partnerColumn?.shouldSync(column)) {\n                const partnerChanges = {};\n                for (const k in changes) {\n                    partnerChanges[k] = changes[k].value;\n                }\n                partnerColumn.set(partnerChanges);\n            }\n        });\n\n        super.onColumnsChanged(...arguments);\n    }\n\n    get timeView() {\n        const me = this;\n        // Maintainer, we need to ensure that the columns property is initialized\n        // if this getter is called at configuration time before columns have been ingested.\n        return me.columns && me.isVertical\n            ? me.verticalTimeAxisColumn?.view\n            : me.timeAxisColumn?.timeAxisView;\n    }\n\n    updateEventCls(eventCls) {\n        const me = this;\n\n        if (!me.eventSelector) {\n            // No difference with new rendering, released have 'b-released' only\n            me.unreleasedEventSelector = me.eventSelector = `.${eventCls}-wrap`;\n        }\n        if (!me.eventInnerSelector) {\n            me.eventInnerSelector = `.${eventCls}`;\n        }\n    }\n\n    set timeAxisViewModel(timeAxisViewModel) {\n        const\n            me            = this,\n            currentModel  = me._timeAxisViewModel,\n            tavmListeners = {\n                name    : 'timeAxisViewModel',\n                update  : 'onTimeAxisViewModelUpdate',\n                prio    : 100,\n                thisObj : me\n            };\n\n        if ((me.partner && !timeAxisViewModel) || (currentModel && currentModel === timeAxisViewModel)) {\n            return;\n        }\n\n        if (currentModel?.owner === me) {\n            // We created this model, destroy it\n            currentModel.destroy();\n        }\n\n        me.detachListeners('timeAxisViewModel');\n\n        // Getting rid of instanceof check to allow using code from different bundles\n        if (timeAxisViewModel?.isTimeAxisViewModel) {\n            timeAxisViewModel.ion(tavmListeners);\n        }\n        else {\n            timeAxisViewModel = TimeAxisViewModel.new({\n                mode              : me._mode,\n                snap              : me.snap,\n                forceFit          : me.forceFit,\n                timeAxis          : me.timeAxis,\n                suppressFit       : me.suppressFit,\n                internalListeners : tavmListeners,\n                owner             : me\n            }, timeAxisViewModel);\n        }\n\n        // Replace in dependent classes relying on the model\n        if (!me.isConfiguring) {\n            if (me.isHorizontal) {\n                me.timeAxisColumn.timeAxisViewModel = timeAxisViewModel;\n            }\n            else {\n                me.verticalTimeAxisColumn.view.model = timeAxisViewModel;\n            }\n        }\n\n        me._timeAxisViewModel = timeAxisViewModel;\n\n        me.relayEvents(timeAxisViewModel, ['update'], 'timeAxisViewModel');\n\n        if (currentModel && timeAxisViewModel) {\n            me.trigger('timeAxisViewModelChange', { timeAxisViewModel });\n        }\n    }\n\n    /**\n     * The internal view model, describing the visual representation of the time axis.\n     * @property {Scheduler.view.model.TimeAxisViewModel}\n     * @readonly\n     * @category Time axis\n     */\n    get timeAxisViewModel() {\n        if (!this._timeAxisViewModel) {\n            this.timeAxisViewModel = null;\n        }\n        return this._timeAxisViewModel;\n    }\n\n    get suppressFit() {\n        return this._timeAxisViewModel?.suppressFit ?? this._suppressFit;\n    }\n\n    set suppressFit(value) {\n        if (this._timeAxisViewModel) {\n            this.timeAxisViewModel.suppressFit = value;\n        }\n        else {\n            this._suppressFit = value;\n        }\n    }\n\n    set timeAxis(timeAxis) {\n        const\n            me                = this,\n            currentTimeAxis   = me._timeAxis,\n            timeAxisListeners = {\n                name        : 'timeAxis',\n                reconfigure : 'onTimeAxisReconfigure',\n                thisObj     : me\n            };\n\n        if (me.partner && !timeAxis || (currentTimeAxis && currentTimeAxis === timeAxis)) {\n            return;\n        }\n\n        if (currentTimeAxis) {\n            if (currentTimeAxis.owner === me) {\n                // We created this model, destroy it\n                currentTimeAxis.destroy();\n            }\n        }\n\n        me.detachListeners('timeAxis');\n\n        // Getting rid of instanceof check to allow using code from different bundles\n        if (!timeAxis?.isTimeAxis) {\n            timeAxis = ObjectHelper.assign({\n                owner          : me,\n                viewPreset     : me.viewPreset,\n                autoAdjust     : me.autoAdjustTimeAxis,\n                weekStartDay   : me.weekStartDay,\n                forceFullTicks : me.fillTicks && me.snap\n            }, timeAxis);\n\n            if (me.startDate) {\n                timeAxis.startDate = me.startDate;\n            }\n            if (me.endDate) {\n                timeAxis.endDate = me.endDate;\n            }\n\n            if (me.workingTime) {\n                me.applyWorkingTime(timeAxis);\n            }\n\n            timeAxis = new TimeAxis(timeAxis);\n        }\n\n        // Inform about reconfiguring the timeaxis, to allow users to react to start & end date changes\n        timeAxis.ion(timeAxisListeners);\n\n        me._timeAxis = timeAxis;\n    }\n\n    onTimeAxisReconfigure({ config, oldConfig }) {\n        if (config) {\n            const dateRangeChange = !oldConfig || (oldConfig.startDate - config.startDate || oldConfig.endDate - config.endDate);\n\n            if (dateRangeChange) {\n                /**\n                 * Fired when the range of dates encapsulated by the UI changes. This will be when\n                 * moving a view in time by reconfiguring its {@link #config-timeAxis}. This will happen\n                 * when zooming, or changing {@link #config-viewPreset}.\n                 *\n                 * Contrast this with the {@link #event-visibleDateRangeChange} event which fires much\n                 * more frequently, during scrolling along the time axis and changing the __visible__\n                 * date range.\n                 * @event dateRangeChange\n                 * @param {Scheduler.view.TimelineBase} source This Scheduler/Gantt instance.\n                 * @param {Object} old The old date range\n                 * @param {Date} old.startDate the old start date.\n                 * @param {Date} old.endDate the old end date.\n                 * @param {Object} new The new date range\n                 * @param {Date} new.startDate the new start date.\n                 * @param {Date} new.endDate the new end date.\n                 */\n                this.trigger('dateRangeChange', {\n                    old : {\n                        startDate : oldConfig.startDate,\n                        endDate   : oldConfig.endDate\n                    },\n                    new : {\n                        startDate : config.startDate,\n                        endDate   : config.endDate\n                    }\n                });\n            }\n        }\n\n        /**\n         * Fired when the timeaxis has changed, for example by zooming or configuring a new time span.\n         * @event timeAxisChange\n         * @param {Scheduler.view.Scheduler} source - This Scheduler\n         * @param {Object} config Config object used to reconfigure the time axis.\n         * @param {Date} config.startDate New start date (if supplied)\n         * @param {Date} config.endDate New end date (if supplied)\n         */\n        this.trigger('timeAxisChange', { config });\n    }\n\n    get timeAxis() {\n        if (!this._timeAxis) {\n            this.timeAxis = null;\n        }\n        return this._timeAxis;\n    }\n\n    updateForceFit(value) {\n        if (this._timeAxisViewModel) {\n            this._timeAxisViewModel.forceFit = value;\n        }\n    }\n\n    /**\n     * Get/set working time. Assign `null` to stop using working time. See {@link #config-workingTime} config for details.\n     * @property {Object}\n     * @category Scheduled events\n     */\n    set workingTime(config) {\n        this._workingTime = config;\n\n        if (!this.isConfiguring) {\n            this.applyWorkingTime(this.timeAxis);\n        }\n    }\n\n    get workingTime() {\n        return this._workingTime;\n    }\n\n    // Translates the workingTime configs into TimeAxis#include rules, applies them and then refreshes the header and\n    // redraws the events\n    applyWorkingTime(timeAxis) {\n        const me     = this,\n            config = me._workingTime;\n\n        if (config) {\n            let hour = null;\n            // Only use valid values\n            if (config.fromHour >= 0 && config.fromHour < 24 && config.toHour > config.fromHour && config.toHour <= 24 && config.toHour - config.fromHour < 24) {\n                hour = { from : config.fromHour, to : config.toHour };\n            }\n\n            let day = null;\n            // Only use valid values\n            if (config.fromDay >= 0 && config.fromDay < 7 && config.toDay > config.fromDay && config.toDay <= 7 && config.toDay - config.fromDay < 7) {\n                day = { from : config.fromDay, to : config.toDay };\n            }\n\n            if (hour || day) {\n                timeAxis.include = {\n                    hour,\n                    day\n                };\n            }\n            else {\n                // No valid rules, restore timeAxis\n                timeAxis.include = null;\n            }\n        }\n        else {\n            // No rules, restore timeAxis\n            timeAxis.include = null;\n        }\n\n        if (me.isPainted) {\n            // Refreshing header, which also recalculate tickSize and header data\n            me.timeAxisColumn.refreshHeader();\n            // Update column lines\n            me.features.columnLines?.refresh();\n\n            // Animate event changes\n            me.refreshWithTransition();\n        }\n    }\n\n    updateStartDate(date) {\n        this.setStartDate(date);\n    }\n\n    /**\n     * Sets the timeline start date.\n     *\n     * **Note:**\n     * - If you need to set start and end date at the same time, use the {@link #function-setTimeSpan} method.\n     * - If keepDuration is false and new start date is greater than end date, it will throw an exception.\n     *\n     * @param {Date} date The new start date\n     * @param {Boolean} keepDuration Pass `true` to keep the duration of the timeline (\"move\" the timeline),\n     * `false` to change the duration (\"resize\" the timeline). Defaults to `true`.\n     */\n    setStartDate(date, keepDuration = true) {\n        const\n            me = this,\n            ta = me._timeAxis,\n            {\n                startDate,\n                endDate,\n                mainUnit\n            }  = ta || emptyObject;\n\n        if (typeof date === 'string') {\n            date = DateHelper.parse(date);\n        }\n\n        if (ta && endDate) {\n            if (date) {\n                let calcEndDate = endDate;\n\n                if (keepDuration && startDate) {\n                    const diff  = DateHelper.diff(startDate, endDate, mainUnit, true);\n                    calcEndDate = DateHelper.add(date, diff, mainUnit);\n                }\n\n                me.setTimeSpan(date, calcEndDate);\n            }\n        }\n        else {\n            me._tempStartDate = date;\n        }\n    }\n\n    get startDate() {\n        let ret = this._timeAxis?.startDate || this._tempStartDate;\n\n        if (!ret) {\n            ret = new Date();\n\n            const { workingTime } = this;\n            if (workingTime) {\n                while (!isWorkingTime(ret, workingTime)) {\n                    ret.setHours(ret.getHours() + 1);\n                }\n            }\n\n            this._tempStartDate = ret;\n        }\n\n        return ret;\n    }\n\n    changeEndDate(date) {\n        if (typeof date === 'string') {\n            date = DateHelper.parse(date);\n        }\n        this.setEndDate(date);\n    }\n\n    /**\n     * Sets the timeline end date\n     *\n     * **Note:**\n     * - If you need to set start and end date at the same time, use the {@link #function-setTimeSpan} method.\n     * - If keepDuration is false and new end date is less than start date, it will throw an exception.\n     *\n     * @param {Date} date The new end date\n     * @param {Boolean} keepDuration Pass `true` to keep the duration of the timeline (\"move\" the timeline),\n     * `false` to change the duration (\"resize\" the timeline). Defaults to `false`.\n     */\n    setEndDate(date, keepDuration = false) {\n        const\n            me = this,\n            ta = me._timeAxis,\n            {\n                startDate,\n                endDate,\n                mainUnit\n            }  = ta || emptyObject;\n\n        if (typeof date === 'string') {\n            date = DateHelper.parse(date);\n        }\n\n        if (ta && startDate) {\n            if (date) {\n                let calcStartDate = startDate;\n\n                if (keepDuration && endDate) {\n                    const diff    = DateHelper.diff(startDate, endDate, mainUnit, true);\n                    calcStartDate = DateHelper.add(date, -diff, mainUnit);\n                }\n\n                me.setTimeSpan(calcStartDate, date);\n            }\n        }\n        else {\n            me._tempEndDate = date;\n        }\n    }\n\n    get endDate() {\n        const me = this;\n\n        if (me._timeAxis) {\n            return me._timeAxis.endDate;\n        }\n\n        return me._tempEndDate || DateHelper.add(me.startDate, me.viewPreset.defaultSpan, me.viewPreset.mainHeader.unit);\n    }\n\n    changeVisibleDate(options) {\n        if (options instanceof Date) {\n            return { date : options, block : 'nearest' };\n        }\n        if (options instanceof Object) {\n            return {\n                date : options.date,\n                ...options\n            };\n        }\n    }\n\n    updateVisibleDate(options) {\n        const me = this;\n\n        // Infinite scroll initialization takes care of its visibleDate after\n        // calculating the optimum scroll range in TimelineScroll#initScroll\n        if (!(me.infiniteScroll && me.isConfiguring)) {\n            if (me.isPainted) {\n                me.scrollToDate(options.date, options);\n            }\n            else {\n                me.ion({\n                    paint : () => me.scrollToDate(options.date, options),\n                    once  : true\n                });\n            }\n        }\n    }\n\n    get features() {\n        return super.features;\n    }\n\n    // add region resize by default\n    set features(features) {\n        features = features === true ? {} : features;\n\n        if (!('regionResize' in features)) {\n            features.regionResize = true;\n        }\n\n        super.features = features;\n    }\n\n    //endregion\n\n    //region Event handlers\n\n    onLocaleChange() {\n        super.onLocaleChange();\n\n        const oldAutoAdjust = this.timeAxis.autoAdjust;\n        // Time axis should rebuild as weekStartDay may have changed\n        this.timeAxis.reconfigure({\n            autoAdjust : false\n        });\n\n        // Silently set it back to what the user had for next view refresh\n        this.timeAxis.autoAdjust = oldAutoAdjust;\n    }\n\n    /**\n     * Called when the element which encapsulates the Scheduler's visible height changes size.\n     * We only respond to *height* changes here. The TimeAxisSubGrid monitors its own width.\n     * @param {HTMLElement} element\n     * @param {DOMRect} oldRect\n     * @param {DOMRect} newRect\n     * @private\n     */\n    onBodyResize(element, oldRect, { width, height }) {\n        // Uncache old value upon element resize, not upon initial sizing\n        if (this.isVertical && oldRect && width !== oldRect.width) {\n            delete this.timeAxisSubGrid._width;\n        }\n\n        const newWidth = this.timeAxisSubGrid.element.offsetWidth;\n\n        // The Scheduler (The Grid) dictates the viewport height.\n        // Don't react on first invocation which will be initial size.\n        if (this._bodyRectangle && oldRect && (height !== oldRect.height)) {\n            this.onSchedulerViewportResize(newWidth, height, newWidth, oldRect.height);\n        }\n    }\n\n    onSchedulerViewportResize(width, height, oldWidth, oldHeight) {\n        if (this.isPainted) {\n            const\n                me = this,\n                {\n                    isHorizontal,\n                    partneredWith\n                }  = me;\n\n            me.currentOrientation.onViewportResize(width, height, oldWidth, oldHeight);\n\n            // Raw width is always correct for horizontal layout because the TimeAxisSubGrid\n            // never shows a scrollbar. It's always contained by an owning Grid which shows\n            // the vertical scrollbar.\n            me.updateViewModelAvailableSpace(isHorizontal ? width : Math.floor(height));\n\n            if (partneredWith && !me.isSyncingFromPartner) {\n                me.syncPartnerSubGrids();\n            }\n\n            /**\n             * Fired when the *scheduler* viewport (not the overall Scheduler element) changes size.\n             * This happens when the grid changes height, or when the subgrid which encapsulates the\n             * scheduler column changes width.\n             * @event timelineViewportResize\n             * @param {Core.widget.Widget} source - This Scheduler\n             * @param {Number} width The new width\n             * @param {Number} height The new height\n             * @param {Number} oldWidth The old width\n             * @param {Number} oldHeight The old height\n             */\n            me.trigger('timelineViewportResize', { width, height, oldWidth, oldHeight });\n        }\n    }\n\n    updateViewModelAvailableSpace(space) {\n        this.timeAxisViewModel.availableSpace = space;\n    }\n\n    onTimeAxisViewModelUpdate() {\n        if (!this._viewPresetChanging && !this.timeAxisSubGrid.collapsed) {\n            this.updateCanvasSize();\n            this.currentOrientation.onTimeAxisViewModelUpdate();\n        }\n    }\n\n    syncPartnerSubGrids() {\n        this.partneredWith.forEach(partner => {\n            if (!partner.isSyncingFromPartner) {\n                partner.isSyncingFromPartner = true;\n                this.eachSubGrid(subGrid => {\n                    const partnerSubGrid = partner.subGrids[subGrid.region];\n\n                    // If there is a difference, sync the partner SubGrid state\n                    if (partnerSubGrid.width !== subGrid.width) {\n                        if (subGrid.collapsed) {\n                            partnerSubGrid.collapse();\n                        }\n                        else {\n                            if (partnerSubGrid.collapsed) {\n                                partnerSubGrid.expand();\n                            }\n                            // When using flexed subgrid, make sure flex values has prio over width\n                            if (subGrid.flex) {\n                                // If flex values match, resize should be fine without changing anything\n                                if (subGrid.flex !== partnerSubGrid.flex) {\n                                    partnerSubGrid.flex = subGrid.flex;\n                                }\n                            }\n                            else {\n                                partnerSubGrid.width = subGrid.width;\n                            }\n                        }\n                    }\n                });\n                partner.isSyncingFromPartner = false;\n            }\n        });\n    }\n\n    //endregion\n\n    //region Mode\n\n    get currentOrientation() {\n        throw new Error('Implement in subclass');\n    }\n\n    // Horizontal is the default, overridden in scheduler\n    get isHorizontal() {\n        return true;\n    }\n\n    //endregion\n\n    //region Canvases and elements\n\n    get backgroundCanvas() {\n        return this._backgroundCanvas;\n    }\n\n    get foregroundCanvas() {\n        return this._foregroundCanvas;\n    }\n\n    get svgCanvas() {\n        const me = this;\n        if (!me._svgCanvas) {\n            const svg = me._svgCanvas = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            svg.setAttribute('id', IdHelper.generateId('svg'));\n            // To not be recycled by DomSync\n            svg.retainElement = true;\n            me.foregroundCanvas.appendChild(svg);\n            me.trigger('svgCanvasCreated', { svg });\n        }\n        return me._svgCanvas;\n    }\n\n    /**\n     * Returns the subGrid containing the time axis\n     * @member {Grid.view.SubGrid} timeAxisSubGrid\n     * @readonly\n     * @category Time axis\n     */\n\n    /**\n     * Returns the html element for the subGrid containing the time axis\n     * @property {HTMLElement}\n     * @readonly\n     * @category Time axis\n     */\n    get timeAxisSubGridElement() {\n        // Hit a lot, caching the element (it will never change)\n\n        if (!this._timeAxisSubGridElement) {\n            // We need the TimeAxisSubGrid to exist, so regions must be initialized\n            this.getConfig('regions');\n\n            this._timeAxisSubGridElement = this.timeAxisColumn?.subGridElement;\n        }\n\n        return this._timeAxisSubGridElement;\n    }\n\n    updateCanvasSize() {\n        const\n            me            = this,\n            { totalSize } = me.timeAxisViewModel,\n            width         = me.isHorizontal ? totalSize : me.timeAxisColumn.width;\n\n        let result = false;\n\n        if (me.isVertical) {\n            // Ensure vertical scroll range accommodates the TimeAxis\n            if (me.isPainted) {\n                // We used to have a bug here from not including the row border in the total height. Border is now\n                // removed, but leaving code here just in case some client is using border\n                me.refreshTotalHeight(totalSize + me._rowBorderHeight, true);\n            }\n\n            // Canvas might need a height in vertical mode, if ticks does not fill height (suppressFit : true)\n            if (me.suppressFit) {\n                DomHelper.setLength(me.foregroundCanvas, 'height', totalSize);\n            }\n\n            result = true;\n        }\n\n        if (width !== me.$canvasWidth && me.foregroundCanvas) {\n            if (me.backgroundCanvas) {\n                DomHelper.setLength(me.backgroundCanvas, 'width', width);\n            }\n\n            DomHelper.setLength(me.foregroundCanvas, 'width', width);\n\n            me.$canvasWidth = width;\n\n            result = true;\n        }\n\n        return result;\n    }\n\n    /**\n     * A chainable function which Features may hook to add their own content to the timeaxis header.\n     * @param {Array} configs An array of domConfigs, append to it to have the config applied to the header\n     */\n    getHeaderDomConfigs(configs) {}\n\n    /**\n     * A chainable function which Features may hook to add their own content to the foreground canvas\n     * @param {Array} configs An array of domConfigs, append to it to have the config applied to the foreground canvas\n     */\n    getForegroundDomConfigs(configs) {}\n\n    //endregion\n\n    //region Grid overrides\n\n    async onStoreDataChange({ action }) {\n        const me = this;\n\n        // Only update the UI immediately if we are visible\n        if (me.isVisible) {\n            // When repopulating stores (pro and up on data reload), the engine is not in a valid state until committed.\n            // Don't want to commit here, since it might be repopulating multiple stores.\n            // Instead delay grids refresh until project is ready\n            if (action === 'dataset' && me.project?.isRepopulatingStores) {\n                await me.project.await('refresh', false);\n            }\n\n            super.onStoreDataChange(...arguments);\n        }\n        // Otherwise wait till next time we get painted (shown, or a hidden ancestor shown)\n        else {\n            me.whenVisible('refresh', me, [true]);\n        }\n    }\n\n    refresh(forceLayout = true) {\n        const me = this;\n\n        if (me.isPainted && !me.refreshSuspended) {\n            // We need to refresh if there are Features laying claim to the visible time axis.\n            // Or there are events which fall inside the time axis.\n            // Or (if no events fall inside the time axis) there are event elements to remove.\n            if (me.isVertical || me.hasVisibleEvents || me.timeAxisSubGridElement.querySelector(me.eventSelector)) {\n                if (!me.project || me.isEngineReady) {\n                    me.refreshRows(false, forceLayout);\n                }\n                else {\n                    me.refreshAfterProjectRefresh             = true;\n                    me.currentOrientation.refreshAllWhenReady = true;\n                }\n            }\n            // Even if there are no events in our timeline, Features\n            // assume there will be a refresh event from the RowManager\n            // after a refresh request so fire it here.\n            else {\n                me.rowManager.trigger('refresh');\n            }\n        }\n    }\n\n    render() {\n        const\n            me          = this,\n            schedulerEl = me.timeAxisSubGridElement;\n\n        if (me.useBackgroundCanvas) {\n            me._backgroundCanvas = DomHelper.createElement({\n                className   : 'b-sch-background-canvas',\n                parent      : schedulerEl,\n                nextSibling : schedulerEl.firstElementChild\n            });\n        }\n\n        // The font-size trick is no longer used by scheduler, since it allows per resource margins\n        const fgCanvas = me._foregroundCanvas = DomHelper.createElement({\n            className : 'b-sch-foreground-canvas',\n            style     : `font-size:${(me.rowHeight - me.resourceMargin * 2)}px`,\n            parent    : schedulerEl\n        });\n\n        me.timeAxisSubGrid.insertRowsBefore = fgCanvas;\n\n        // Size correctly in case ticks does not fill height\n        if (me.isVertical && me.suppressFit) {\n            me.updateCanvasSize();\n        }\n\n        super.render(...arguments);\n    }\n\n    // <remove-on-release>\n    // TODO: refreshRows -> refresh in grid?\n    // </remove-on-release>\n    refreshRows(returnToTop = false, reLayoutEvents = true) {\n        const me = this;\n\n        if (me.isConfiguring) {\n            return;\n        }\n\n        me.currentOrientation.refreshRows(reLayoutEvents);\n\n        super.refreshRows(returnToTop);\n    }\n\n    updateHideHeaders(hide) {\n        const\n            me         = this,\n            scrollLeft = me.isPainted ? me.scrollLeft : 0;\n\n        super.updateHideHeaders(hide);\n\n        if (me.isPainted) {\n            if (!hide) {\n                me.timeAxisColumn.refreshHeader(null, true);\n            }\n\n            me.nextAnimationFrame().then(() => me.scrollLeft = scrollLeft);\n        }\n    }\n\n    getCellDataFromEvent(event, includeSingleAxisMatch) {\n        if (includeSingleAxisMatch) {\n            includeSingleAxisMatch = !Boolean(event.target.closest('.b-sch-foreground-canvas'));\n        }\n        return super.getCellDataFromEvent(event, includeSingleAxisMatch);\n    }\n\n    // This GridSelection override disables drag-selection in timeaxis column for scheduler and gantt\n    onCellNavigate(me, from, to) {\n        if (to.cell?.classList.contains('b-timeaxis-cell') && !GlobalEvents.currentMouseDown?.target.classList.contains('b-grid-cell')) {\n            this.preventDragSelect = true;\n        }\n        super.onCellNavigate(...arguments);\n    }\n\n    //endregion\n\n    //region Other\n\n    // duration = false prevents transition\n    runWithTransition(fn, duration) {\n        const me = this;\n\n        // Do not attempt to enter animating state if we are not visible\n        if (me.isVisible) {\n            // Allow calling with true/false to keep code simpler in other places\n            if (duration == null || duration === true) {\n                duration = me.transitionDuration;\n            }\n\n            // Ask Grid superclass to enter the animated state if requested and enabled.\n            if (duration && me.enableEventAnimations) {\n                if (!me.hasTimeout('exitTransition')) {\n                    me.isAnimating = true;\n                }\n\n                // Exit animating state in duration milliseconds.\n                exitTransition.delay = duration;\n                me.setTimeout(exitTransition);\n            }\n        }\n\n        fn();\n    }\n\n    exitTransition() {\n        this.isAnimating = false;\n        this.trigger('transitionend');\n    }\n\n    // Awaited by CellEdit to make sure that the editor is not moved until row heights have transitioned, to avoid it\n    // ending up misaligned\n    async waitForAnimations() {\n        // If project is calculating, we should await that too. It might lead to transitions\n        if (!this.isEngineReady && this.project) {\n            await this.project.await('dataReady', false);\n        }\n\n        await super.waitForAnimations();\n    }\n\n    /**\n     * Refreshes the grid with transitions enabled.\n     */\n    refreshWithTransition(forceLayout, duration) {\n        const me = this;\n\n        // No point in starting a transition if we cant refresh anyway\n        if (!me.refreshSuspended && me.isPainted) {\n            // Since we suspend refresh when loading with CrudManager, rows might not have been initialized yet\n            if (!me.rowManager.topRow) {\n                me.rowManager.reinitialize();\n            }\n            else {\n                me.runWithTransition(() => me.refresh(forceLayout), duration);\n            }\n        }\n    }\n\n    /**\n     * Returns an object representing the visible date range\n     * @property {Object}\n     * @property {Date} visibleDateRange.startDate\n     * @property {Date} visibleDateRange.endDate\n     * @readonly\n     * @category Dates\n     */\n    get visibleDateRange() {\n        return this.currentOrientation.visibleDateRange;\n    }\n\n    // This override will force row selection on timeaxis column selection, effectively disabling cell selection there\n    isRowNumberSelecting(...selectors) {\n        return super.isRowNumberSelecting(...selectors) ||\n            selectors.some(cs => cs.column ? cs.column.isTimeAxisColumn : cs.cell?.closest('.b-timeaxis-cell'));\n    }\n\n    //endregion\n\n    /**\n     * Returns a rounded duration value to be displayed in UI (tooltips, labels etc)\n     * @param {Number} duration The raw duration value\n     * @param {Number} [nbrDecimals] The number of decimals, defaults to {@link #config-durationDisplayPrecision}\n     * @returns {Number} The rounded duration\n     */\n    formatDuration(duration, nbrDecimals = this.durationDisplayPrecision) {\n        const multiplier = Math.pow(10, nbrDecimals);\n\n        return Math.round(duration * multiplier) / multiplier;\n    }\n\n    beginListeningForBatchedUpdates() {\n        this.listenToBatchedUpdates = (this.listenToBatchedUpdates || 0) + 1;\n\n        // Allow live resizing (etc) in all splits\n        this.syncSplits?.(other => other.beginListeningForBatchedUpdates());\n    }\n\n    endListeningForBatchedUpdates() {\n        if (this.listenToBatchedUpdates) {\n            this.listenToBatchedUpdates -= 1;\n        }\n\n        this.syncSplits?.(other => other.endListeningForBatchedUpdates());\n    }\n\n    onConnectedCallback(connected, initialConnect) {\n        if (connected && !initialConnect) {\n            this.timeAxisSubGrid.scrollable.x += 0.5;\n        }\n    }\n\n    updateRtl(rtl) {\n        const\n            me                = this,\n            { isConfiguring } = me;\n\n        let visibleDateRange;\n\n        if (!isConfiguring) {\n            visibleDateRange = me.visibleDateRange;\n        }\n\n        super.updateRtl(rtl);\n\n        if (!isConfiguring) {\n            me.currentOrientation.clearAll();\n            if (me.infiniteScroll) {\n                me.shiftToDate(visibleDateRange.startDate);\n                me.scrollToDate(visibleDateRange.startDate, { block : 'start' });\n            }\n            else {\n                me.timelineScroller.position += 0.5;\n            }\n        }\n    }\n\n    /**\n     * Applies the start and end date to each event store request (formatted in the same way as the start date field,\n     * defined in the EventStore Model class).\n     * @category Data\n     * @private\n     */\n    applyStartEndParameters(params) {\n        const\n            me    = this,\n            field = me.eventStore.modelClass.fieldMap.startDate;\n\n        if (me.passStartEndParameters) {\n            params[me.startParamName] = field.print(me.startDate);\n            params[me.endParamName] = field.print(me.endDate);\n        }\n    }\n}\n\n// Register this widget type with its Factory\nTimelineBase.initClass();\n\n// Has to be here because Gantt extends TimelineBase\nVersionHelper.setVersion('scheduler', '5.5.0');\n","import Base from '../../Core/Base.js';\nimport AbstractCrudManagerMixin from './AbstractCrudManagerMixin.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\n\n/**\n * @module Scheduler/crud/AbstractCrudManager\n */\n\n/**\n * @typedef {Object} CrudManagerStoreDescriptor\n * @property {String} storeId Unique store identifier. Store related requests/responses will be sent under this name.\n * @property {Core.data.Store} store The store itself.\n * @property {String} [phantomIdField] Set this if the store model has a predefined field to keep phantom record identifier.\n * @property {String} [idField] id field name, if it's not specified then class will try to get it from store model.\n * @property {Boolean} [writeAllFields] Set to true to write all fields from modified records\n */\n\n/**\n * This is an abstract class serving as the base for the {@link Scheduler.data.CrudManager} class.\n * It implements basic mechanisms to organize batch communication with a server.\n * Yet it does not contain methods related to _data transfer_ nor _encoding_.\n * These methods are to be provided in sub-classes by consuming the appropriate mixins.\n *\n * For example, this is how the class can be used to implement an JSON encoding system:\n *\n * ```javascript\n * // let's make new CrudManager using AJAX as a transport system and JSON for encoding\n * class MyCrudManager extends JsonEncode(AjaxTransport(AbstractCrudManager)) {\n *\n * }\n * ```\n *\n * ## Data transfer and encoding methods\n *\n * These are methods that must be provided by subclasses of this class:\n *\n * - [#sendRequest](#Scheduler/crud/AbstractCrudManagerMixin#function-sendRequest)\n * - [#cancelRequest](#Scheduler/crud/AbstractCrudManagerMixin#function-cancelRequest)\n * - [#encode](#Scheduler/crud/AbstractCrudManagerMixin#function-encode)\n * - [#decode](#Scheduler/crud/AbstractCrudManagerMixin#function-decode)\n *\n * @extends Core/Base\n * @mixes Scheduler/crud/AbstractCrudManagerMixin\n * @abstract\n */\nexport default class AbstractCrudManager extends Base.mixin(AbstractCrudManagerMixin) {\n    //region Default config\n\n    /**\n     * The server revision stamp.\n     * The _revision stamp_ is a number which should be incremented after each server-side change.\n     * This property reflects the current version of the data retrieved from the server and gets updated after each\n     * {@link Scheduler/crud/AbstractCrudManagerMixin#function-load} and {@link Scheduler/crud/AbstractCrudManagerMixin#function-sync} call.\n     * @property {Number}\n     * @readonly\n     */\n    get revision() {\n        return this.crudRevision;\n    }\n\n    set revision(value) {\n        this.crudRevision = value;\n    }\n\n    /**\n     * Get or set data of {@link #property-crudStores} as a JSON string.\n     *\n     * Get a JSON string:\n     * ```javascript\n     *\n     * const jsonString = scheduler.crudManager.json;\n     *\n     * // returned jsonString:\n     * '{\"eventsData\":[...],\"resourcesData\":[...],...}'\n     *\n     * // object representation of the returned jsonString:\n     * {\n     *     resourcesData    : [...],\n     *     eventsData       : [...],\n     *     assignmentsData  : [...],\n     *     dependenciesData : [...],\n     *     timeRangesData   : [...],\n     *     // data from other stores\n     * }\n     * ```\n     *\n     * Set a JSON string (to populate the CrudManager stores):\n     *\n     * ```javascript\n     * scheduler.crudManager.json = '{\"eventsData\":[...],\"resourcesData\":[...],...}'\n     * ```\n     *\n     * @property {String}\n     */\n    get json() {\n        return StringHelper.safeJsonStringify(this);\n    }\n\n    set json(json) {\n        if (typeof json === 'string') {\n            json = StringHelper.safeJsonParse(json);\n        }\n\n        this.forEachCrudStore(store => {\n            const dataName = `${store.storeId}Data`;\n            if (json[dataName]) {\n                store.data = json[dataName];\n            }\n        });\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Sets the list of stores controlled by the CRUD manager.\n             *\n             * When adding a store to the CrudManager, make sure the server response format is correct for `load` and `sync` requests.\n             * Learn more in the [Working with data](#Scheduler/guides/data/crud_manager.md#loading-data) guide.\n             *\n             * Store can be provided as in instance, using its `storeId` or as an {@link #typedef-CrudManagerStoreDescriptor}\n             * object.\n             * @config {Core.data.Store[]|String[]|CrudManagerStoreDescriptor[]}\n             */\n            stores : null\n\n            /**\n             * Encodes request to the server.\n             * @function encode\n             * @param {Object} request The request to encode.\n             * @returns {String} The encoded request.\n             * @abstract\n             */\n\n            /**\n             * Decodes response from the server.\n             * @function decode\n             * @param {String} response The response to decode.\n             * @returns {Object} The decoded response.\n             * @abstract\n             */\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    construct(config = {}) {\n        if (config.stores) {\n            config.crudStores = config.stores;\n            delete config.stores;\n        }\n\n        super.construct(config);\n    }\n\n    //endregion\n\n    //region inline data\n\n    /**\n     * Returns the data from all CrudManager `crudStores` in a format that can be consumed by `inlineData`.\n     *\n     * Used by JSON.stringify to correctly convert this CrudManager to json.\n     *\n     * The returned data is identical to what {@link Scheduler/crud/AbstractCrudManager#property-inlineData} contains.\n     *\n     * ```javascript\n     *\n     * const json = scheduler.crudManager.toJSON();\n     *\n     * // json:\n     * {\n     *     eventsData : [...],\n     *     resourcesData : [...],\n     *     dependenciesData : [...],\n     *     assignmentsData : [...],\n     *     timeRangesData : [...],\n     *     resourceTimeRangesData : [...],\n     *     // ... other stores data\n     * }\n     * ```\n     *\n     * Output can be consumed by `inlineData`.\n     *\n     * ```javascript\n     * const json = scheduler.crudManager.toJSON();\n     *\n     * // Plug it back in later\n     * scheduler.crudManager.inlineData = json;\n     * ```\n     *\n     * @function toJSON\n     * @returns {Object}\n     * @category JSON\n     */\n    toJSON() {\n        // Collect data from crudStores\n        const result = {};\n        this.forEachCrudStore((store, storeId) => result[`${storeId}Data`] = store.toJSON());\n        return result;\n    }\n\n    /**\n     * Get or set data of CrudManager stores. The returned data is identical to what\n     * {@link Scheduler/crud/AbstractCrudManager#function-toJSON} returns:\n     *\n     * ```javascript\n     *\n     * const data = scheduler.crudManager.inlineData;\n     *\n     * // data:\n     * {\n     *     eventsData : [...],\n     *     resourcesData : [...],\n     *     dependenciesData : [...],\n     *     assignmentsData : [...],\n     *     timeRangesData : [...],\n     *     resourceTimeRangesData : [...],\n     *     ... other stores data\n     * }\n     *\n     *\n     * // Plug it back in later\n     * scheduler.crudManager.inlineData = data;\n     * ```\n     *\n     * @property {Object}\n     */\n    get inlineData() {\n        return this.toJSON();\n    }\n\n    set inlineData(data) {\n        this.json = data;\n    }\n\n    //endregion\n\n    //region Store collection (add, remove, get & iterate)\n\n    set stores(stores) {\n        if (stores !== this.crudStores) {\n            this.crudStores = stores;\n        }\n    }\n\n    /**\n     * A list of registered stores whose server communication will be collected into a single batch.\n     * Each store is represented by a _store descriptor_.\n     * @member {CrudManagerStoreDescriptor[]} stores\n     */\n    get stores() {\n        return this.crudStores;\n    }\n\n    //endregion\n\n    /**\n     * Returns true if the crud manager is currently loading data\n     * @property {Boolean}\n     * @readonly\n     * @category CRUD\n     */\n    get isLoading() {\n        return this.isCrudManagerLoading;\n    }\n\n    /**\n     * Adds a store to the collection.\n     *\n     *```javascript\n     * // append stores to the end of collection\n     * crudManager.addStore([\n     *     store1,\n     *     // storeId\n     *     'bar',\n     *     // store descriptor\n     *     {\n     *         storeId : 'foo',\n     *         store   : store3\n     *     },\n     *     {\n     *         storeId         : 'bar',\n     *         store           : store4,\n     *         // to write all fields of modified records\n     *         writeAllFields  : true\n     *     }\n     * ]);\n     *```\n     *\n     * **Note:** Order in which stores are kept in the collection is very essential sometimes.\n     * Exactly in this order the loaded data will be put into each store.\n     *\n     * When adding a store to the CrudManager, make sure the server response format is correct for `load` and `sync`\n     * requests. Learn more in the [Working with data](#Scheduler/guides/data/crud_manager.md#loading-data) guide.\n     *\n     * @param {Core.data.Store|String|CrudManagerStoreDescriptor|Core.data.Store[]|String[]|CrudManagerStoreDescriptor[]} store\n     * A store or list of stores. Each store might be specified by its instance, `storeId` or _descriptor_.\n     * @param {Number} [position] The relative position of the store. If `fromStore` is specified the position will be\n     * taken relative to it.\n     * If not specified then store(s) will be appended to the end of collection.\n     * Otherwise, it will be an index in stores collection.\n     *\n     * ```javascript\n     * // insert stores store4, store5 to the start of collection\n     * crudManager.addStore([ store4, store5 ], 0);\n     * ```\n     *\n     * @param {String|Core.data.Store|CrudManagerStoreDescriptor} [fromStore] The store relative to which position\n     * should be calculated. Can be defined as a store identifier, instance or descriptor (the result of\n     * {@link Scheduler/crud/AbstractCrudManagerMixin#function-getStoreDescriptor} call).\n     *\n     * ```javascript\n     * // insert store6 just before a store having storeId equal to 'foo'\n     * crudManager.addStore(store6, 0, 'foo');\n     *\n     * // insert store7 just after store3 store\n     * crudManager.addStore(store7, 1, store3);\n     * ```\n     */\n    addStore(...args) {\n        return this.addCrudStore(...args);\n    }\n\n    removeStore(...args) {\n        return this.removeCrudStore(...args);\n    }\n\n    getStore(...args) {\n        return this.getCrudStore(...args);\n    }\n\n    hasChanges(...args) {\n        return this.crudStoreHasChanges(...args);\n    }\n\n    loadData(...args) {\n        return this.loadCrudManagerData(...args);\n    }\n}\n","import ResourceStore from './ResourceStore.js';\nimport EventStore from './EventStore.js';\nimport AssignmentStore from './AssignmentStore.js';\nimport DependencyStore from './DependencyStore.js';\nimport Store from '../../Core/data/Store.js';\nimport ProjectCrudManager from './mixin/ProjectCrudManager.js';\nimport AbstractCrudManager from '../crud/AbstractCrudManager.js';\nimport AjaxTransport from '../crud/transport/AjaxTransport.js';\nimport JsonEncoder from '../crud/encoder/JsonEncoder.js';\nimport ProjectModel from '../model/ProjectModel.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Scheduler/data/CrudManager\n */\n\n/**\n * The Crud Manager (or \"CM\") is a class implementing centralized loading and saving of data in multiple stores.\n * Loading the stores and saving all changes is done using a single request. The stores managed by CRUD manager should\n * not be configured with their own CRUD URLs or use {@link Core/data/AjaxStore#config-autoLoad}/{@link Core/data/AjaxStore#config-autoCommit}.\n *\n * This class uses JSON as its data encoding format.\n *\n * ## Scheduler stores\n *\n * The class supports Scheduler specific stores (namely: resource, event, assignment and dependency stores).\n * For these stores, the CM has separate configs ({@link #config-resourceStore}, {@link #config-eventStore},\n * {@link #config-assignmentStore}) to register them.\n *\n * ```javascript\n * const crudManager = new CrudManager({\n *     autoLoad        : true,\n *     resourceStore   : resourceStore,\n *     eventStore      : eventStore,\n *     assignmentStore : assignmentStore,\n *     transport       : {\n *         load : {\n *             url : 'php/read.php'\n *         },\n *         sync : {\n *             url : 'php/save.php'\n *         }\n *     }\n * });\n * ```\n *\n * ## AJAX request configuration\n *\n * To configure AJAX request parameters please take a look at the\n * {@link Scheduler/crud/transport/AjaxTransport} docs.\n *\n * ```javascript\n * const crudManager = new CrudManager({\n *     autoLoad        : true,\n *     resourceStore,\n *     eventStore,\n *     assignmentStore,\n *     transport       : {\n *         load    : {\n *             url         : 'php/read.php',\n *             // use GET request\n *             method      : 'GET',\n *             // pass request JSON in \"rq\" parameter\n *             paramName   : 'rq',\n *             // extra HTTP request parameters\n *             params      : {\n *                 foo     : 'bar'\n *             },\n *             // pass some extra Fetch API option\n *             credentials : 'include'\n *         },\n *         sync : {\n *             url : 'php/save.php'\n *         }\n *     }\n * });\n * ```\n *\n * ## Using inline data\n *\n * The CrudManager provides settable property {@link #property-inlineData} that can\n * be used to get data from all {@link #property-crudStores} at once and to set this\n * data as well. Populating the stores this way can be useful if you cannot or you do not want to use CrudManager for\n * server requests but you pull the data by other means and have it ready outside CrudManager. Also, the data from all\n * stores is available in a single assignment statement.\n *\n * ### Getting data\n * ```javascript\n * const data = scheduler.crudManager.inlineData;\n *\n * // use the data in your application\n * ```\n *\n * ### Setting data\n * ```javascript\n * const data = // your function to pull server data\n *\n * scheduler.crudManager.inlineData = data;\n * ```\n *\n * ## Load order\n *\n * The CM is aware of the proper load order for Scheduler specific stores so you don't need to worry about it.\n * If you provide any extra stores (using {@link #config-stores} config) they will be\n * added to the start of collection before the Scheduler specific stores.\n * If you need a different loading order, you should use {@link #function-addStore} method to\n * register your store:\n *\n * ```javascript\n * const crudManager = new CrudManager({\n *     resourceStore   : resourceStore,\n *     eventStore      : eventStore,\n *     assignmentStore : assignmentStore,\n *     // extra user defined stores will get to the start of collection\n *     // so they will be loaded first\n *     stores          : [ store1, store2 ],\n *     transport       : {\n *         load : {\n *             url : 'php/read.php'\n *         },\n *         sync : {\n *             url : 'php/save.php'\n *         }\n *     }\n * });\n *\n * // append store3 to the end so it will be loaded last\n * crudManager.addStore(store3);\n *\n * // now when we registered all the stores let's load them\n * crudManager.load();\n * ```\n *\n * ## Assignment store\n *\n * The Crud Manager is designed to use {@link Scheduler/data/AssignmentStore} for assigning events to one or multiple resources.\n * However if server provides `resourceId` for any of the `events` then the Crud Manager enables backward compatible mode when\n * an event could have a single assignment only. This also disables multiple assignments in Scheduler UI.\n * In order to use multiple assignments server backend should be able to receive/send `assignments` for `load` and `sync` requests.\n *\n * ## Project\n *\n * The Crud Manager automatically consumes stores of the provided project (namely its {@link Scheduler/model/ProjectModel#property-eventStore},\n * {@link Scheduler/model/ProjectModel#property-resourceStore}, {@link Scheduler/model/ProjectModel#property-assignmentStore},\n * {@link Scheduler/model/ProjectModel#property-dependencyStore}, {@link Scheduler/model/ProjectModel#property-timeRangeStore} and\n * {@link Scheduler/model/ProjectModel#property-resourceTimeRangeStore}):\n *\n * ```javascript\n * const crudManager = new CrudManager({\n *     // crud manager will get stores from myAppProject project\n *     project   : myAppProject,\n *     transport : {\n *         load : {\n *             url : 'php/read.php'\n *         },\n *         sync : {\n *             url : 'php/save.php'\n *         }\n *     }\n * });\n * ```\n *\n * @mixes Scheduler/data/mixin/ProjectCrudManager\n * @mixes Scheduler/crud/encoder/JsonEncoder\n * @mixes Scheduler/crud/transport/AjaxTransport\n * @extends Scheduler/crud/AbstractCrudManager\n */\n\nexport default class CrudManager extends AbstractCrudManager.mixin(ProjectCrudManager, AjaxTransport, JsonEncoder) {\n\n    static $name = 'CrudManager';\n\n    //region Config\n\n    static get defaultConfig() {\n        return {\n            projectClass         : ProjectModel,\n            resourceStoreClass   : ResourceStore,\n            eventStoreClass      : EventStore,\n            assignmentStoreClass : AssignmentStore,\n            dependencyStoreClass : DependencyStore,\n\n            /**\n             * A store with resources (or a config object).\n             * @config {Scheduler.data.ResourceStore|ResourceStoreConfig}\n             */\n            resourceStore : {},\n\n            /**\n             * A store with events (or a config object).\n             *\n             * ```\n             * crudManager : {\n             *      eventStore {\n             *          storeClass : MyEventStore\n             *      }\n             * }\n             * ```\n             * @config {Scheduler.data.EventStore|EventStoreConfig}\n             */\n            eventStore : {},\n\n            /**\n             * A store with assignments (or a config object).\n             * @config {Scheduler.data.AssignmentStore|AssignmentStoreConfig}\n             */\n            assignmentStore : {},\n\n            /**\n             * A store with dependencies(or a config object).\n             * @config {Scheduler.data.DependencyStore|DependencyStoreConfig}\n             */\n            dependencyStore : {},\n\n            /**\n             * A project that holds and links stores\n             * @config {Scheduler.model.ProjectModel}\n             */\n            project : null\n        };\n    }\n\n    //endregion\n\n    buildProject() {\n        return new this.projectClass(this.buildProjectConfig());\n    }\n\n    buildProjectConfig() {\n        return ObjectHelper.cleanupProperties({\n            eventStore             : this.eventStore,\n            resourceStore          : this.resourceStore,\n            assignmentStore        : this.assignmentStore,\n            dependencyStore        : this.dependencyStore,\n            resourceTimeRangeStore : this.resourceTimeRangeStore\n        });\n    }\n\n    //region Stores\n\n    set project(project) {\n        const me = this;\n\n        if (project !== me._project) {\n            me.detachListeners('beforeDataReady');\n            me.detachListeners('afterDataReady');\n\n            me._project = project;\n\n            if (project) {\n                me.eventStore             = project.eventStore;\n                me.resourceStore          = project.resourceStore;\n                me.assignmentStore        = project.assignmentStore;\n                me.dependencyStore        = project.dependencyStore;\n                me.timeRangeStore         = project.timeRangeStore;\n                me.resourceTimeRangeStore = project.resourceTimeRangeStore;\n\n                // When adding multiple events to the store it will trigger multiple change events each of which will\n                // call crudManager.hasChanges, which will try to actually get the changeset package. It takes some time\n                // and we better skip that part for the dataready event, suspending changes tracking.\n                project.ion({\n                    name      : 'beforeDataReady',\n                    dataReady : () => me.suspendChangesTracking(),\n                    prio      : 100,\n                    thisObj   : me\n                });\n\n                project.ion({\n                    name      : 'afterDataReady',\n                    dataReady : () => me.resumeChangesTracking(),\n                    prio      : -100,\n                    thisObj   : me\n                });\n            }\n\n            if (!me.eventStore) {\n                me.eventStore = {};\n            }\n            if (!me.resourceStore) {\n                me.resourceStore = {};\n            }\n            if (!me.assignmentStore) {\n                me.assignmentStore = {};\n            }\n            if (!me.dependencyStore) {\n                me.dependencyStore = {};\n            }\n        }\n    }\n\n    get project() {\n        return this._project;\n    }\n\n    /**\n     * Store for {@link Scheduler/feature/TimeRanges timeRanges} feature.\n     * @property {Core.data.Store}\n     */\n    get timeRangeStore() {\n        return this._timeRangeStore?.store;\n    }\n\n    set timeRangeStore(store) {\n        this.setFeaturedStore('_timeRangeStore', store, this.project?.timeRangeStoreClass);\n    }\n\n    /**\n     * Store for {@link Scheduler/feature/ResourceTimeRanges resourceTimeRanges} feature.\n     * @property {Core.data.Store}\n     */\n    get resourceTimeRangeStore() {\n        return this._resourceTimeRangeStore?.store;\n    }\n\n    set resourceTimeRangeStore(store) {\n        this.setFeaturedStore('_resourceTimeRangeStore', store, this.project?.resourceTimeRangeStoreClass);\n    }\n\n    /**\n     * Get/set the resource store bound to the CRUD manager.\n     * @property {Scheduler.data.ResourceStore}\n     */\n    get resourceStore() {\n        return this._resourceStore?.store;\n    }\n\n    set resourceStore(store) {\n        const me = this;\n\n        me.setFeaturedStore('_resourceStore', store, me.resourceStoreClass);\n    }\n\n    /**\n     * Get/set the event store bound to the CRUD manager.\n     * @property {Scheduler.data.EventStore}\n     */\n    get eventStore() {\n        return this._eventStore?.store;\n    }\n\n    set eventStore(store) {\n        const me = this;\n\n        me.setFeaturedStore('_eventStore', store, me.eventStoreClass);\n    }\n\n    /**\n     * Get/set the assignment store bound to the CRUD manager.\n     * @property {Scheduler.data.AssignmentStore}\n     */\n    get assignmentStore() {\n        return this._assignmentStore?.store;\n    }\n\n    set assignmentStore(store) {\n        this.setFeaturedStore('_assignmentStore', store, this.assignmentStoreClass);\n    }\n\n    /**\n     * Get/set the dependency store bound to the CRUD manager.\n     * @property {Scheduler.data.DependencyStore}\n     */\n    get dependencyStore() {\n        return this._dependencyStore?.store;\n    }\n\n    set dependencyStore(store) {\n        this.setFeaturedStore('_dependencyStore', store, this.dependencyStoreClass);\n    }\n\n    setFeaturedStore(property, store, storeClass) {\n        const\n            me       = this,\n            oldStore = me[property]?.store;\n\n        // if not the same store\n        if (oldStore !== store) {\n            // normalize store value (turn it into a storeClass instance if needed)\n            store = Store.getStore(store, store?.storeClass || storeClass);\n\n            if (oldStore) {\n                me.removeStore(oldStore);\n            }\n\n            me[property] = store && { store } || null;\n\n            // Adds configured scheduler stores to the store collection ensuring correct order\n            // unless they're already registered.\n            me.addPrioritizedStore(me[property]);\n        }\n\n        return me[property];\n    }\n\n    getChangesetPackage() {\n        const pack = super.getChangesetPackage();\n\n        // Remove assignments from changes if using single assignment mode (resourceId) or resourceIds\n        if (pack && (this.eventStore.usesSingleAssignment || this.eventStore.modelClass.fieldMap?.resourceIds?.persist)) {\n            delete pack[this.assignmentStore.storeId];\n            // No other changes?\n            if (!this.crudStores.some(storeInfo => pack[storeInfo.storeId])) {\n                return null;\n            }\n        }\n\n        return pack;\n    }\n\n    //endregion\n\n    get crudLoadValidationMandatoryStores() {\n        return [this._eventStore.storeId, this._resourceStore.storeId];\n    }\n\n};\n","/**\n * @module Scheduler/view/mixin/CurrentConfig\n */\n\nconst\n    stores = [\n        'eventStore',\n        'taskStore',\n        'assignmentStore',\n        'resourceStore',\n        'dependencyStore',\n        'timeRangeStore',\n        'resourceTimeRangeStore'\n    ],\n    inlineProperties = [\n        'events',\n        'tasks',\n        'resources',\n        'assignments',\n        'dependencies',\n        'timeRanges',\n        'resourceTimeRanges'\n    ];\n\n/**\n * Mixin that makes sure inline data & crud manager data are removed from current config for products using a project.\n * The data is instead inlined in the project (by ProjectModel.js)\n *\n * @mixin\n * @private\n */\nexport default Target => class CurrentConfig extends Target {\n\n    static get $name() {\n        return 'CurrentConfig';\n    }\n\n    preProcessCurrentConfigs(configs) {\n        // Remove inline data on the component\n        for (const prop of inlineProperties) {\n            delete configs[prop];\n        }\n\n        super.preProcessCurrentConfigs(configs);\n    }\n\n    // This function is not meant to be called by any code other than Base#getCurrentConfig().\n    getCurrentConfig(options) {\n        const\n            project = this.project.getCurrentConfig(options),\n            result = super.getCurrentConfig(options);\n\n        // Force project with inline data\n        if (project) {\n            result.project = project;\n\n            const { crudManager } = result;\n\n            // Transfer crud store configs to project (mainly fields)\n            if (crudManager) {\n                for (const store of stores) {\n                    if (crudManager[store]) {\n                        project[store] = crudManager[store];\n                    }\n                }\n            }\n\n            if (Object.keys(project).length === 0) {\n                delete result.project;\n            }\n        }\n\n        // Store (resource store) data is included in project\n        delete result.data;\n\n        // Remove CrudManager, since data will be placed inline\n        delete result.crudManager;\n\n        return result;\n    }\n\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\n\n/**\n * @module Scheduler/view/mixin/Describable\n */\n\nconst\n    arrayify = format => (!format || Array.isArray(format)) ? format : [format],\n    pickFormat = (formats, index, defaultFormat) => (formats && formats[index] !== true) ? formats[index] : defaultFormat;\n\n/**\n * Mixin that provides a consistent method for describing the ranges of time presented by a view. This is currently\n * consumed only by the Calendar widget for describing its child views. This mixin is defined here to facilitate using\n * a Scheduler as a child view of a Calendar.\n *\n * @mixin\n */\nexport default Target => class Describable extends (Target || Base) {\n    static $name = 'Describable';\n\n    static configurable = {\n        /**\n         * A {@link Core.helper.DateHelper} format string to use to create date output for view descriptions.\n         * @config {String}\n         * @default\n         */\n        dateFormat : 'MMMM d, YYYY',\n\n        /**\n         * A string used to separate start and end dates in the {@link #config-descriptionFormat}.\n         * @prp {String}\n         * @default\n         */\n        dateSeparator : ' - ',\n\n        /**\n         * The date format used by the default {@link #config-descriptionRenderer} for rendering the view's description.\n         * If this value is `null`, the {@link #config-dateFormat} (and potentially {@link #config-dateSeparator}) will\n         * be used.\n         *\n         * For views that can span a range of dates, this can be a 2-item array with the following interpretation:\n         *\n         * - `descriptionFormat[0]` is either a date format string or `true` (to use {@link #config-dateFormat}). The\n         *   result of formatting the `startDate` with this format specification is used when the formatting both the\n         *   `startDate` and `endDate` with this specification produces the same result. For example, a week view\n         *   displays only the month and year components of the date, so this will be used unless the end of the week\n         *   crosses into the next month.\n         *\n         * - `descriptionFormat[1]` is used with {@link Core.helper.DateHelper#function-formatRange-static} when the\n         *  `startDate` and `endDate` format differently using `descriptionFormat[0]` (as described above). This one\n         *  format string produces a result for both dates. If this value is `true`, the {@link #config-dateFormat} and\n         *  {@link #config-dateSeparator} are combined to produce the range format.\n         *\n         * @prp {String|String[]|Boolean[]}\n         * @default\n         */\n        descriptionFormat : null,\n\n        /**\n         * A function that provides the textual description for this view. If provided, this function overrides the\n         * {@link #config-descriptionFormat}.\n         *\n         * ```javascript\n         *  descriptionRenderer() {\n         *      const\n         *          eventsInView = this.eventStore.records.filter(\n         *              eventRec => DateHelper.intersectSpans(\n         *                  this.startDate, this.endDate,\n         *                  eventRec.startDate, eventRec.endDate)).length,\n         *          sd = DateHelper.format(this.startDate, 'DD/MM/YYY'),\n         *          ed = DateHelper.format(this.endDate, 'DD/MM/YYY');\n         *\n         *     return `${sd} - ${ed}, ${eventsInView} event${eventsInView === 1 ? '' : 's'}`;\n         * }\n         * ```\n         * @config {Function} descriptionRenderer\n         * @param {Core.widget.Widget} view The active view in case the function is in another scope.\n         */\n        descriptionRenderer : null\n    };\n\n    /**\n     * Returns the date or ranges of included dates as an array. If there is only one significant date, the array will\n     * have only one element. Otherwise, a range of dates is returned as a two-element array with `[0]` being the\n     * `startDate` and `[1]` the `lastDate`.\n     * @member {Date[]}\n     * @internal\n     */\n    get dateBounds() {\n        return [this.date];\n    }\n\n    /**\n     * The textual description generated by the {@link #config-descriptionRenderer} if present, or by the\n     * view's date (or date *range* if it has a range) and the {@link #config-descriptionFormat}.\n     * @property {String}\n     * @readonly\n     */\n    get description() {\n        const\n            me = this,\n            { descriptionRenderer } = me;\n\n        return descriptionRenderer ? me.callback(descriptionRenderer, me, [me]) : me.formattedDescription;\n    }\n\n    get formattedDescription() {\n        const\n            me = this,\n            { dateBounds, dateFormat } = me,\n            descriptionFormat = me.descriptionFormat ?? arrayify(me.defaultDescriptionFormat),\n            format0 = pickFormat(descriptionFormat, 0, dateFormat),\n            end = dateBounds.length > 1 && descriptionFormat?.length > 1 && (\n                DateHelper.format(dateBounds[0], format0) !== DateHelper.format(dateBounds[1], format0)\n            );\n\n        // Format the startDate and endDate using the first format\n        let ret = DateHelper.format(dateBounds[0], format0);\n\n        if (end) {\n            // The endDate renders a different description, and we have a range format.\n            ret = DateHelper.formatRange(dateBounds,\n                pickFormat(descriptionFormat, 1, `S${dateFormat}${me.dateSeparator}E${dateFormat}`));\n        }\n\n        return ret;\n    }\n\n    changeDescriptionFormat(format) {\n        return arrayify(format);\n    }\n\n    get widgetClass() {}  // no b-describable class\n};\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Scheduler/view/mixin/SchedulerDom\n */\n\n/**\n * Mixin with EventModel and ResourceModel <-> HTMLElement mapping functions\n *\n * @mixin\n */\nexport default Target => class SchedulerDom extends (Target || Base) {\n    static get $name() {\n        return 'SchedulerDom';\n    }\n\n    //region Get\n\n    /**\n     * Returns a single HTMLElement representing an event record assigned to a specific resource.\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord An assignment record\n     * @returns {HTMLElement} The element representing the event record\n     * @category DOM\n     */\n    getElementFromAssignmentRecord(assignmentRecord, returnWrapper = false) {\n        if (this.isPainted && assignmentRecord) {\n            let wrapper = this.foregroundCanvas.syncIdMap?.[assignmentRecord.id];\n\n            // When using links, the original might not be rendered but a link might\n            if (!wrapper && assignmentRecord.resource.hasLinks) {\n                for (const link of assignmentRecord.resource.$links) {\n                    wrapper = this.foregroundCanvas.syncIdMap?.[`${assignmentRecord.id}_${link.id}`];\n\n                    if (wrapper) {\n                        break;\n                    }\n                }\n            }\n\n            // Wrapper won't have syncIdMap when saving dragcreated event from editor\n            return returnWrapper ? wrapper : wrapper?.syncIdMap?.event;\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns a single HTMLElement representing an event record assigned to a specific resource.\n     * @param {Scheduler.model.EventModel} eventRecord An event record\n     * @param {Scheduler.model.ResourceModel} resourceRecord A resource record\n     * @returns {HTMLElement} The element representing the event record\n     * @category DOM\n     */\n    getElementFromEventRecord(eventRecord, resourceRecord = eventRecord.resources?.[0], returnWrapper = false) {\n        if (eventRecord.isResourceTimeRange) {\n            const wrapper = this.foregroundCanvas.syncIdMap?.[eventRecord.domId];\n\n            return returnWrapper ? wrapper : wrapper?.syncIdMap.event;\n        }\n\n        const assignmentRecord = this.assignmentStore.getAssignmentForEventAndResource(eventRecord, resourceRecord);\n        return this.getElementFromAssignmentRecord(assignmentRecord, returnWrapper);\n    }\n\n    /**\n     * Returns all the HTMLElements representing an event record.\n     *\n     * @param {Scheduler.model.EventModel} eventRecord An event record\n     * @param {Scheduler.model.ResourceModel} [resourceRecord] A resource record\n     *\n     * @returns {HTMLElement[]} The element(s) representing the event record\n     * @category DOM\n     */\n    getElementsFromEventRecord(eventRecord, resourceRecord, returnWrapper = false) {\n        // Single event instance, as array\n        if (resourceRecord) {\n            return [this.getElementFromEventRecord(eventRecord, resourceRecord, returnWrapper)];\n        }\n        // All instances\n        else {\n            return eventRecord.resources.reduce((result, resourceRecord) => {\n                const el = this.getElementFromEventRecord(eventRecord, resourceRecord, returnWrapper);\n\n                el && result.push(el);\n\n                return result;\n            }, []);\n        }\n    }\n\n    //endregion\n\n    //region Resolve\n\n    /**\n     * Resolves the resource based on a dom element or event. In vertical mode, if resolving from an element higher up in\n     * the hierarchy than event elements, then it is required to supply an coordinates since resources are virtual\n     * columns.\n     * @param {HTMLElement|Event} elementOrEvent The HTML element or DOM event to resolve a resource from\n     * @param {Number[]} [xy] X and Y coordinates, required in some cases in vertical mode, disregarded in horizontal\n     * @returns {Scheduler.model.ResourceModel} The resource corresponding to the element, or null if not found.\n     * @category DOM\n     */\n    resolveResourceRecord(elementOrEvent, xy) {\n        return this.currentOrientation.resolveRowRecord(elementOrEvent, xy);\n    }\n\n    /**\n     * Product agnostic method which yields the {@link Scheduler.model.ResourceModel} record which underpins the row which\n     * encapsulates the passed element. The element can be a grid cell, or an event element, and the result\n     * will be a {@link Scheduler.model.ResourceModel}\n     * @param {HTMLElement|Event} elementOrEvent The HTML element or DOM event to resolve a record from\n     * @returns {Scheduler.model.ResourceModel} The resource corresponding to the element, or null if not found.\n     * @category DOM\n     */\n    resolveRowRecord(elementOrEvent) {\n        return this.resolveResourceRecord(elementOrEvent);\n    }\n\n    /**\n     * Returns the event record for a DOM element\n     * @param {HTMLElement|Event} elementOrEvent The DOM node to lookup\n     * @returns {Scheduler.model.EventModel} The event record\n     * @category DOM\n     */\n    resolveEventRecord(elementOrEvent) {\n        if (elementOrEvent instanceof Event) {\n            elementOrEvent = elementOrEvent.target;\n        }\n\n        const element = elementOrEvent?.closest(this.eventSelector);\n\n        if (element) {\n            if (element.dataset.eventId) {\n                return this.eventStore.getById(element.dataset.eventId);\n            }\n\n            if (element.dataset.assignmentId) {\n                return this.assignmentStore.getById(element.dataset.assignmentId).event;\n            }\n        }\n\n        return null;\n    }\n\n    // Used by shared features to resolve an event or task\n    resolveTimeSpanRecord(element) {\n        return this.resolveEventRecord(element);\n    }\n\n    /**\n     * Returns an assignment record for a DOM element\n     * @param {HTMLElement} element The DOM node to lookup\n     * @returns {Scheduler.model.AssignmentModel} The assignment record\n     * @category DOM\n     */\n    resolveAssignmentRecord(element) {\n        const\n            eventElement     = element.closest(this.eventSelector),\n            assignmentRecord = eventElement && this.assignmentStore.getById(eventElement.dataset.assignmentId),\n            eventRecord      = eventElement && this.eventStore.getById(eventElement.dataset.eventId);\n\n        // When resolving a recurring event, we might be resolving an occurrence\n        return this.assignmentStore.getOccurrence(assignmentRecord, eventRecord);\n    }\n\n    //endregion\n\n    // Decide if a record is inside a collapsed tree node, or inside a collapsed group (using grouping feature)\n    isRowVisible(resourceRecord) {\n        // records in collapsed groups/branches etc. are removed from processedRecords\n        return this.store.indexOf(resourceRecord) >= 0;\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Scheduler/view/mixin/SchedulerDomEvents\n */\n\n/**\n * Mixin that handles dom events (click etc) for scheduler and rendered events.\n *\n * @mixin\n */\nexport default Target => class SchedulerDomEvents extends (Target || Base) {\n    static get $name() {\n        return 'SchedulerDomEvents';\n    }\n\n    //region Events\n\n    /**\n     * Triggered when user mousedowns over an empty area in the schedule.\n     * @event scheduleMouseDown\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Date} date Date at mouse position\n     * @param {Date} tickStartDate The start date of the current time axis tick\n     * @param {Date} tickEndDate The end date of the current time axis tick\n     * @param {Grid.row.Row} row Row under the mouse (in horizontal mode only)\n     * @param {Number} index Resource index\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when mouse enters an empty area in the schedule.\n     * @event scheduleMouseEnter\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Date} date Date at mouse position\n     * @param {Date} tickStartDate The start date of the current time axis tick\n     * @param {Date} tickEndDate The end date of the current time axis tick\n     * @param {Grid.row.Row} row Row under the mouse (in horizontal mode only)\n     * @param {Number} index Resource index\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when mouse leaves an empty area in the schedule.\n     * @event scheduleMouseLeave\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when user mouseups over an empty area in the schedule.\n     * @event scheduleMouseUp\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Date} date Date at mouse position\n     * @param {Date} tickStartDate The start date of the current time axis tick\n     * @param {Date} tickEndDate The end date of the current time axis tick\n     * @param {Grid.row.Row} row Row under the mouse (in horizontal mode only)\n     * @param {Number} index Resource index\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when user moves mouse over an empty area in the schedule.\n     * @event scheduleMouseMove\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Date} date Date at mouse position\n     * @param {Scheduler.model.TimeSpan} tick A record which encapsulates the time axis tick clicked on.\n     * @param {Number} tickIndex The index of the time axis tick clicked on.\n     * @param {Date} tickStartDate The start date of the current time axis tick\n     * @param {Date} tickEndDate The end date of the current time axis tick\n     * @param {Grid.row.Row} row Row under the mouse (in horizontal mode only)\n     * @param {Number} index Resource index\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when user clicks an empty area in the schedule.\n     * @event scheduleClick\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Date} date Date at mouse position\n     * @param {Scheduler.model.TimeSpan} tick A record which encapsulates the time axis tick clicked on.\n     * @param {Number} tickIndex The index of the time axis tick clicked on.\n     * @param {Date} tickStartDate The start date of the current time axis tick\n     * @param {Date} tickEndDate The end date of the current time axis tick\n     * @param {Grid.row.Row} row Row under the mouse (in horizontal mode only)\n     * @param {Number} index Resource index\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when user double-clicks an empty area in the schedule.\n     * @event scheduleDblClick\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Date} date Date at mouse position\n     * @param {Scheduler.model.TimeSpan} tick A record which encapsulates the time axis tick clicked on.\n     * @param {Number} tickIndex The index of the time axis tick clicked on.\n     * @param {Date} tickStartDate The start date of the current time axis tick\n     * @param {Date} tickEndDate The end date of the current time axis tick\n     * @param {Grid.row.Row} row Row under the mouse (in horizontal mode only)\n     * @param {Number} index Index of double-clicked resource\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when user right-clicks an empty area in the schedule.\n     * @event scheduleContextMenu\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Date} date Date at mouse position\n     * @param {Scheduler.model.TimeSpan} tick A record which encapsulates the time axis tick clicked on.\n     * @param {Number} tickIndex The index of the time axis tick clicked on.\n     * @param {Date} tickStartDate The start date of the current time axis tick\n     * @param {Date} tickEndDate The end date of the current time axis tick\n     * @param {Grid.row.Row} row Row under the mouse (in horizontal mode only)\n     * @param {Number} index Resource index\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered for mouse down on an event.\n     * @event eventMouseDown\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered for mouse up on an event.\n     * @event eventMouseUp\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered for click on an event.\n     * @event eventClick\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered for double-click on an event.\n     * @event eventDblClick\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered for right-click on an event.\n     * @event eventContextMenu\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when the mouse enters an event bar.\n     * @event eventMouseEnter\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when the mouse leaves an event bar.\n     * @event eventMouseLeave\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered for mouse over events when moving into and within an event bar.\n     *\n     * Note that `mouseover` events bubble, therefore this event will fire while moving from\n     * element to element *within* an event bar.\n     *\n     * _If only an event when moving into the event bar is required, use the {@link #event-eventMouseEnter} event._\n     * @event eventMouseOver\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered for mouse out events within and when moving out of an event bar.\n     *\n     * Note that `mouseout` events bubble, therefore this event will fire while moving from\n     * element to element *within* an event bar.\n     *\n     * _If only an event when moving out of the event bar is required, use the {@link #event-eventMouseLeave} event._\n     * @event eventMouseOut\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    //endregion\n\n    //region Event handling\n\n    getTimeSpanMouseEventParams(eventElement, event) {\n        // May have hovered a record being removed / faded out\n        const eventRecord = this.resolveEventRecord(eventElement);\n\n        return eventRecord && {\n            eventRecord,\n            resourceRecord   : this.resolveResourceRecord(eventElement),\n            assignmentRecord : this.resolveAssignmentRecord(eventElement),\n            eventElement,\n            event\n        };\n    }\n\n    getScheduleMouseEventParams(cellData, event) {\n        const resourceRecord = this.isVertical ? this.resolveResourceRecord(event) : this.store.getById(cellData.id);\n\n        return { resourceRecord };\n    }\n\n    /**\n     * Relays keydown events as eventkeydown if we have a selected task.\n     * @private\n     */\n    onElementKeyDown(event) {\n        const\n            result = super.onElementKeyDown(event),\n            me     = this;\n\n        if (me.selectedEvents.length) {\n            me.trigger(me.scheduledEventName + 'KeyDown', {\n                eventRecords      : me.selectedEvents,\n                assignmentRecords : me.selectedAssignments,\n                event,\n                // <remove-on-release>\n                // TODO: Remove for 6.0\n                // </remove-on-release>\n                eventRecord       : me.selectedEvents,\n                assignmentRecord  : me.selectedAssignments\n            });\n        }\n\n        return result;\n    }\n\n    /**\n     * Relays keyup events as eventkeyup if we have a selected task.\n     * @private\n     */\n    onElementKeyUp(event) {\n        super.onElementKeyUp(event);\n\n        const me = this;\n\n        if (me.selectedEvents.length) {\n            me.trigger(me.scheduledEventName + 'KeyUp', {\n                eventRecords      : me.selectedEvents,\n                assignmentRecords : me.selectedAssignments,\n                event,\n\n                // <remove-on-release>\n                // TODO: Remove for 6.0\n                // </remove-on-release>\n                eventRecord      : me.selectedEvents,\n                assignmentRecord : me.selectedAssignments\n            });\n        }\n    }\n\n    //endregion\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../Core/Base.js';\n\n/**\n * @module Scheduler/eventlayout/HorizontalLayout\n */\n\n/**\n * Base class for horizontal layouts (HorizontalLayoutPack and HorizontalLayoutStack). Should not be used directly,\n * instead specify {@link Scheduler.view.mixin.SchedulerEventRendering#config-eventLayout} in Scheduler config (stack,\n * pack or none):\n *\n * @example\n * let scheduler = new Scheduler({\n *   eventLayout: 'stack'\n * });\n *\n * @abstract\n * @private\n */\nexport default class HorizontalLayout extends Base {\n    static get defaultConfig() {\n        return {\n            nbrOfBandsByResource        : {},\n            bandIndexToPxConvertFn      : null,\n            bandIndexToPxConvertThisObj : null\n        };\n    }\n\n    clearCache(resource) {\n        if (resource) {\n            delete this.nbrOfBandsByResource[resource.id];\n        }\n        else {\n            this.nbrOfBandsByResource = {};\n        }\n    }\n\n    /**\n     * This method performs layout on an array of event render data and returns amount of _bands_. Band is a multiplier of a\n     * configured {@link Scheduler.view.Scheduler#config-rowHeight} to calculate total row height required to fit all\n     * events.\n     * This method should not be used directly, it is called by the Scheduler during the row rendering process.\n     * @param {EventRenderData[]} events Unordered array of event render data, sorting may be required\n     * @param {Scheduler.model.ResourceModel} resource The resource for which the events are being laid out.\n     * @returns {Number}\n     */\n    applyLayout(events, resource) {\n        // Return number of bands required\n        return this.nbrOfBandsByResource[resource.id] = this.layoutEventsInBands(events, resource);\n    }\n\n    /**\n     * This method iterates over events and calculates top position for each of them. Default layouts calculate\n     * positions to avoid events overlapping horizontally (except for the 'none' layout). Pack layout will squeeze events to a single\n     * row by reducing their height, Stack layout will increase the row height and keep event height intact.\n     * This method should not be used directly, it is called by the Scheduler during the row rendering process.\n     * @param {EventRenderData[]} events Unordered array of event render data, sorting may be required\n     * @param {Scheduler.model.ResourceModel} resource The resource for which the events are being laid out.\n     */\n    layoutEventsInBands(events, resource) {\n        throw new Error('Implement in subclass');\n    }\n}\n","import HorizontalLayout from './HorizontalLayout.js';\n\n/**\n * @module Scheduler/eventlayout/HorizontalLayoutStack\n */\n\n/**\n * Handles layout of events within a row (resource) in horizontal mode. Stacks events, increasing row height when to fit\n * all overlapping events.\n *\n * This layout is used by default in horizontal mode.\n *\n * @extends Scheduler/eventlayout/HorizontalLayout\n * @private\n */\nexport default class HorizontalLayoutStack extends HorizontalLayout {\n    static get $name() {\n        return 'HorizontalLayoutStack';\n    }\n\n    static get configurable() {\n        return {\n            type : 'stack'\n        };\n    }\n\n    // Input: Array of event layout data\n    // heightRun is used when pre-calculating row heights, taking a cheaper path\n    layoutEventsInBands(events, resource, heightRun = false) {\n        let verticalPosition = 0;\n\n        do {\n            let eventIndex = 0,\n                event      = events[0];\n\n            while (event) {\n                if (!heightRun) {\n                    // Apply band height to the event cfg\n                    event.top = this.bandIndexToPxConvertFn.call(\n                        this.bandIndexToPxConvertThisObj || this,\n                        verticalPosition,\n                        event.eventRecord,\n                        event.resourceRecord\n                    );\n                }\n\n                // Remove it from the array and continue searching\n                events.splice(eventIndex, 1);\n\n                eventIndex = this.findClosestSuccessor(event, events);\n                event = events[eventIndex];\n            }\n\n            verticalPosition++;\n        } while (events.length > 0);\n\n        // Done!\n        return verticalPosition;\n    }\n\n    // <remove-on-release>\n    // TODO: optimize this for better performance with many events per resource\n    // </remove-on-release>\n    findClosestSuccessor(eventRenderData, events) {\n        const\n            { endMS, group } = eventRenderData,\n            isMilestone      = eventRenderData.eventRecord && eventRenderData.eventRecord.duration === 0;\n\n        let minGap      = Infinity,\n            closest,\n            gap,\n            event;\n\n        for (let i = 0, l = events.length; i < l; i++) {\n            event = events[i];\n            gap = event.startMS - endMS;\n\n            if (\n                gap >= 0 && gap < minGap &&\n                // Two milestones should not overlap\n                (gap > 0 || event.endMS - event.startMS > 0 || !isMilestone)\n            ) {\n                // Events are sorted by group, so when we find first event with a different group, we can stop iteration\n                if (this.grouped && group !== event.group) {\n                    break;\n                }\n                closest = i;\n                minGap  = gap;\n            }\n        }\n\n        return closest;\n    }\n}\n","import Base from '../../Core/Base.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\n\n/**\n * @module Scheduler/eventlayout/PackMixin\n */\n\n/**\n * Mixin holding functionality shared between HorizontalLayoutPack and VerticalLayout.\n *\n * @mixin\n * @private\n */\nexport default Target => class PackMixin extends (Target || Base) {\n    static get $name() {\n        return 'PackMixin';\n    }\n\n    static get defaultConfig() {\n        return {\n            coordProp       : 'top',\n            sizeProp        : 'height',\n            inBandCoordProp : 'inBandTop',\n            inBandSizeProp  : 'inBandHeight'\n        };\n    }\n\n    isSameGroup(a, b) {\n        return this.grouped ? a.group === b.group : true;\n    }\n\n    // Packs the events to consume as little space as possible\n    packEventsInBands(events, applyClusterFn) {\n        const\n            me                      = this,\n            { coordProp, sizeProp } = me;\n\n        let slot,\n            firstInCluster,\n            cluster,\n            j;\n\n        for (let i = 0, l = events.length; i < l; i++) {\n            firstInCluster = events[i];\n\n            slot = me.findStartSlot(events, firstInCluster);\n\n            cluster = me.getCluster(events, i);\n\n            if (cluster.length > 1) {\n                firstInCluster[coordProp] = slot.start;\n                firstInCluster[sizeProp]  = slot.end - slot.start;\n\n                // If there are multiple slots, and events in the cluster have multiple start dates, group all same-start events into first slot\n                j = 1;\n\n                while (j < (cluster.length - 1) && cluster[j + 1].start - firstInCluster.start === 0) {\n                    j++;\n                }\n\n                // See if there's more than 1 slot available for this cluster, if so - first group in cluster consumes the entire first slot\n                const nextSlot = me.findStartSlot(events, cluster[j]);\n\n                if (nextSlot && nextSlot.start < 0.8) {\n                    cluster.length = j;\n                }\n            }\n\n            const\n                clusterSize = cluster.length,\n                slotSize    = (slot.end - slot.start) / clusterSize;\n\n            // Apply fraction values\n            for (j = 0; j < clusterSize; j++) {\n                applyClusterFn(cluster[j], j, slot, slotSize);\n            }\n\n            i += clusterSize - 1;\n        }\n\n        return 1;\n    }\n\n    findStartSlot(events, event) {\n        const\n            {\n                inBandSizeProp,\n                inBandCoordProp,\n                coordProp,\n                sizeProp\n            }                = this,\n            priorOverlappers = this.getPriorOverlappingEvents(events, event);\n\n        let i;\n\n        if (priorOverlappers.length === 0) {\n            return {\n                start : 0,\n                end   : 1\n            };\n        }\n\n        for (i = 0; i < priorOverlappers.length; i++) {\n            const\n                item       = priorOverlappers[i],\n                COORD_PROP = inBandCoordProp in item ? inBandCoordProp : coordProp,\n                SIZE_PROP  = inBandSizeProp in item ? inBandSizeProp : sizeProp;\n\n            if (i === 0 && item[COORD_PROP] > 0) {\n                return {\n                    start : 0,\n                    end   : item[COORD_PROP]\n                };\n            }\n            else {\n                if (item[COORD_PROP] + item[SIZE_PROP] < (i < priorOverlappers.length - 1 ? priorOverlappers[i + 1][COORD_PROP] : 1)) {\n                    return {\n                        start : item[COORD_PROP] + item[SIZE_PROP],\n                        end   : i < priorOverlappers.length - 1 ? priorOverlappers[i + 1][COORD_PROP] : 1\n                    };\n                }\n            }\n        }\n\n        return false;\n    }\n\n    getPriorOverlappingEvents(events, event) {\n        const\n            start       = event.start,\n            end         = event.end,\n            overlappers = [];\n\n        for (let i = 0, l = events.indexOf(event); i < l; i++) {\n            const item = events[i];\n\n            if (this.isSameGroup(item, event) && DateHelper.intersectSpans(start, end, item.start, item.end)) {\n                overlappers.push(item);\n            }\n        }\n\n        overlappers.sort(this.sortOverlappers.bind(this));\n\n        return overlappers;\n    }\n\n    sortOverlappers(e1, e2) {\n        const { coordProp } = this;\n\n        return e1[coordProp] - e2[coordProp];\n    }\n\n    getCluster(events, startIndex) {\n        const\n            startEvent = events[startIndex],\n            result     = [startEvent];\n\n        if (startIndex >= events.length - 1) {\n            return result;\n        }\n\n        let { start, end } = startEvent;\n\n        for (let i = startIndex + 1, l = events.length; i < l; i++) {\n            const item = events[i];\n\n            if (!this.isSameGroup(item, startEvent) || !DateHelper.intersectSpans(start, end, item.start, item.end)) {\n                break;\n            }\n\n            result.push(item);\n            start = DateHelper.max(start, item.start);\n            end   = DateHelper.min(item.end, end);\n        }\n\n        return result;\n    }\n};\n","import HorizontalLayout from './HorizontalLayout.js';\nimport PackMixin from './PackMixin.js';\n\n/**\n * @module Scheduler/eventlayout/HorizontalLayoutPack\n */\n\n/**\n * Handles layout of events within a row (resource) in horizontal mode. Packs events (adjusts their height) to fit\n * available row height\n *\n * @extends Scheduler/eventlayout/HorizontalLayout\n * @mixes Scheduler/eventlayout/PackMixin\n * @private\n */\nexport default class HorizontalLayoutPack extends HorizontalLayout.mixin(PackMixin) {\n    static get $name() {\n        return 'HorizontalLayoutPack';\n    }\n\n    static get configurable() {\n        return {\n            type : 'pack'\n        };\n    }\n\n    // Packs the events to consume as little space as possible\n    layoutEventsInBands(events) {\n        const result = this.packEventsInBands(events, (event, j, slot, slotSize) => {\n            event.height = slotSize;\n            event.top    = slot.start + (j * slotSize);\n        });\n\n        events.forEach(event => {\n            Object.assign(\n                event,\n                this.bandIndexToPxConvertFn.call(\n                    this.bandIndexToPxConvertThisObj || this,\n                    event.top,\n                    event.height,\n                    event.eventRecord,\n                    event.resourceRecord\n                )\n            );\n        });\n\n        return result;\n    }\n}\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Scheduler/view/mixin/SchedulerResourceRendering\n */\n\n/**\n * Configs and functions used for resource rendering\n * and by the {@link Scheduler/column/ResourceInfoColumn} class.\n *\n * @mixin\n */\nexport default Target => class SchedulerResourceRendering extends (Target || Base) {\n\n    static $name = 'SchedulerResourceRendering';\n\n    //region Default config\n\n    static configurable = {\n\n        /**\n         * Control how much space to leave between the first event/last event and the resources edge (top/bottom\n         * margin within the resource row in horizontal mode, left/right margin within the resource column in\n         * vertical mode), in px. Defaults to the value of {@link Scheduler.view.Scheduler#config-barMargin}.\n         *\n         * Can be configured per resource by setting {@link Scheduler.model.ResourceModel#field-resourceMargin\n         * resource.resourceMargin}.\n         *\n         * @prp {Number}\n         * @category Scheduled events\n         */\n        resourceMargin : null,\n\n        /**\n         * A config object used to configure the resource columns in vertical mode.\n         * See {@link Scheduler.view.ResourceHeader} for more details on available properties.\n         *\n         * ```javascript\n         * new Scheduler({\n         *     resourceColumns : {\n         *         columnWidth    : 100,\n         *         headerRenderer : ({ resourceRecord }) => `${resourceRecord.id} - ${resourceRecord.name}`\n         *     }\n         * })\n         * ```\n         * @config {ResourceHeaderConfig}\n         * @category Resources\n         */\n        resourceColumns : null,\n\n        /**\n         * Path to load resource images from. Used by the resource header in vertical mode and the\n         * {@link Scheduler.column.ResourceInfoColumn} in horizontal mode. Set this to display miniature\n         * images for each resource using their `image` or `imageUrl` fields.\n         *\n         * * `image` represents image name inside the specified `resourceImagePath`,\n         * * `imageUrl` represents fully qualified image URL.\n         *\n         *  If set and a resource has no `imageUrl` or `image` specified it will try show miniature using\n         *  the resource's name with {@link #config-resourceImageExtension} appended.\n         *\n         * **NOTE**: The path should end with a `/`:\n         *\n         * ```\n         * new Scheduler({\n         *   resourceImagePath : 'images/resources/'\n         * });\n         * ```\n         * @config {String}\n         * @category Resources\n         */\n        resourceImagePath : null,\n\n        /**\n         * Generic resource image, used when provided `imageUrl` or `image` fields or path calculated from resource\n         * name are all invalid. If left blank, resource name initials will be shown when no image can be loaded.\n         * @default\n         * @config {String}\n         * @category Resources\n         */\n        defaultResourceImageName : null,\n\n        /**\n         * Resource image extension, used when creating image path from resource name.\n         * @default\n         * @config {String}\n         * @category Resources\n         */\n        resourceImageExtension : '.jpg'\n    };\n\n    //endregion\n\n    //region Resource header/columns\n\n    // NOTE: The configs below are initially applied to the resource header in `TimeAxisColumn#set mode`\n\n    /**\n     * Use it to manipulate resource column properties at runtime.\n     * @property {Scheduler.view.ResourceHeader}\n     * @readonly\n     */\n    get resourceColumns() {\n        return this.timeAxisColumn?.resourceColumns || this._resourceColumns;\n    }\n\n    /**\n     * Get resource column width. Only applies to vertical mode. To set it, assign to\n     * `scheduler.resourceColumns.columnWidth`.\n     * @property {Number}\n     * @readonly\n     */\n    get resourceColumnWidth() {\n        return this.resourceColumns?.columnWidth || null;\n    }\n\n    //endregion\n\n    //region Event rendering\n\n    // Returns a resource specific resourceMargin, falling back to Schedulers setting\n    // This fn could be made public to allow hooking it as an alternative to only setting this in data\n    getResourceMargin(resourceRecord) {\n        return resourceRecord?.resourceMargin ?? this.resourceMargin;\n    }\n\n    // Returns a resource specific barMargin, falling back to Schedulers setting\n    // This fn could be made public to allow hooking it as an alternative to only setting this in data\n    getBarMargin(resourceRecord) {\n        return resourceRecord?.barMargin ?? this.barMargin;\n    }\n\n    // Returns a resource specific rowHeight, falling back to Schedulers setting\n    // Prio order: Height from record, configured height\n    // This fn could be made public to allow hooking it as an alternative to only setting this in data\n    getResourceHeight(resourceRecord) {\n        return resourceRecord.rowHeight ?? (this.isHorizontal ? this.rowHeight : this.getResourceWidth(resourceRecord));\n    }\n\n    getResourceWidth(resourceRecord) {\n        return resourceRecord.columnWidth ?? this.resourceColumnWidth;\n    }\n\n    // Similar to getResourceHeight(), but for usage later in the process to take height set by renderers into account.\n    // Cant be used earlier in the process because then the row will grow\n    // Prio order: Height requested by renderer, height from record, configured height\n    getAppliedResourceHeight(resourceRecord) {\n        const row = this.getRowById(resourceRecord);\n\n        return row?.maxRequestedHeight ?? this.getResourceHeight(resourceRecord);\n    }\n\n    // Combined convenience getter for destructuring on calling side\n    // Second arg only passed for nested events, handled by NestedEvent feature\n    getResourceLayoutSettings(resourceRecord, parentEventRecord = null) {\n        const\n            resourceMargin = this.getResourceMargin(resourceRecord, parentEventRecord),\n            rowHeight      = this.getAppliedResourceHeight(resourceRecord, parentEventRecord);\n\n        return {\n            barMargin     : this.getBarMargin(resourceRecord, parentEventRecord),\n            contentHeight : Math.max(rowHeight - resourceMargin * 2, 1),\n            rowHeight,\n            resourceMargin\n        };\n    }\n\n    //endregion\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport DomClassList from '../../../Core/helper/util/DomClassList.js';\nimport HorizontalLayoutStack from '../../eventlayout/HorizontalLayoutStack.js';\nimport HorizontalLayoutPack from '../../eventlayout/HorizontalLayoutPack.js';\nimport BrowserHelper from '../../../Core/helper/BrowserHelper.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\nimport EventHelper from '../../../Core/helper/EventHelper.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\nimport StringHelper from '../../../Core/helper/StringHelper.js';\nimport VersionHelper from '../../../Core/helper/VersionHelper.js';\nimport Rectangle from '../../../Core/helper/util/Rectangle.js';\nimport SchedulerResourceRendering from './SchedulerResourceRendering.js';\n\n/**\n * @module Scheduler/view/mixin/SchedulerEventRendering\n */\n\n/**\n * Layout data object used to lay out an event record.\n * @typedef {Object} EventRenderData\n * @property {Scheduler.model.EventModel} eventRecord Event instance\n * @property {Scheduler.model.ResourceModel} resourceRecord Assigned resource\n * @property {Scheduler.model.AssignmentModel} assignmentRecord Assignment instance\n * @property {Number} startMS Event start date time in milliseconds\n * @property {Number} endMS Event end date in milliseconds\n * @property {Number} height Calculated event element height\n * @property {Number} width Calculated event element width\n * @property {Number} top Calculated event element top position in the row (or column)\n * @property {Number} left Calculated event element left position in the row (or column)\n */\n\n/**\n * Functions to handle event rendering (EventModel -> dom elements).\n *\n * @mixes Scheduler/view/mixin/SchedulerResourceRendering\n * @mixin\n */\nexport default Target => class SchedulerEventRendering extends SchedulerResourceRendering(Target || Base) {\n    static get $name() {\n        return 'SchedulerEventRendering';\n    }\n\n    //region Default config\n\n    static get configurable() {\n        return {\n            /**\n             * Position of the milestone text:\n             * * 'inside' - for short 1-char text displayed inside the diamond, not applicable when using\n             *   {@link #config-milestoneLayoutMode})\n             * * 'outside' - for longer text displayed outside the diamond, but inside it when using\n             *   {@link #config-milestoneLayoutMode}\n             * * 'always-outside' - outside even when combined with {@link #config-milestoneLayoutMode}\n             *\n             * @prp {'inside'|'outside'|'always-outside'}\n             * @default\n             * @category Milestones\n             */\n            milestoneTextPosition : 'outside',\n\n            /**\n             * How to align milestones in relation to their startDate. Only applies when using a `milestoneLayoutMode`\n             * other than `default`. Valid values are:\n             * * start\n             * * center (default)\n             * * end\n             * @prp {'start'|'center'|'end'}\n             * @default\n             * @category Milestones\n             */\n            milestoneAlign : 'center',\n\n            /**\n             * Factor representing the average char width in pixels used to determine milestone width when configured\n             * with `milestoneLayoutMode: 'estimate'`.\n             * @prp {Number}\n             * @default\n             * @category Milestones\n             */\n            milestoneCharWidth : 10,\n\n            /**\n             * How to handle milestones during event layout. How the milestones are displayed when part of the layout\n             * are controlled using {@link #config-milestoneTextPosition}.\n             *\n             * Options are:\n             * * default - Milestones do not affect event layout\n             * * estimate - Milestone width is estimated by multiplying text length with Scheduler#milestoneCharWidth\n             * * data - Milestone width is determined by checking EventModel#milestoneWidth\n             * * measure - Milestone width is determined by measuring label width\n             * Please note that currently text width is always determined using EventModel#name.\n             * Also note that only 'default' is supported by eventStyles line, dashed and minimal.\n             * @prp {'default'|'estimate'|'data'|'measure'}\n             * @default\n             * @category Milestones\n             */\n            milestoneLayoutMode : 'default',\n\n            /**\n             * Defines how to handle overlapping events. Valid values are:\n             * - `stack`, adjusts row height (only horizontal)\n             * - `pack`, adjusts event height\n             * - `mixed`, allows two events to overlap, more packs (only vertical)\n             * - `none`, allows events to overlap\n             *\n             * This config can also accept an object:\n             *\n             * ```javascript\n             * new Scheduler({\n             *     eventLayout : { type : 'stack' }\n             * })\n             * ```\n             *\n             * @prp {'stack'|'pack'|'mixed'|'none'|Object}\n             * @default\n             * @category Scheduled events\n             */\n            eventLayout : 'stack',\n\n            /**\n             * Override this method to provide a custom sort function to sort any overlapping events. See {@link\n             * #config-overlappingEventSorter} for more details.\n             *\n             * @param  {Scheduler.model.EventModel} a First event\n             * @param  {Scheduler.model.EventModel} b Second event\n             * @returns {Number} Return -1 to display `a` above `b`, 1 for `b` above `a`\n             * @member {Function} overlappingEventSorter\n             * @category Misc\n             */\n            /**\n             * Override this method to provide a custom sort function to sort any overlapping events. This only applies\n             * to the horizontal mode, where the order the events are sorted in determines their vertical placement\n             * within a resource.\n             *\n             * By default, overlapping events are laid out based on the start date. If the start date is equal, events\n             * with earlier end date go first. And lastly the name of events is taken into account.\n             *\n             * Here's a sample sort function, sorting on start- and end date. If this function returns -1, then event\n             * `a` is placed above event `b`:\n             *\n             * ```javascript\n             * overlappingEventSorter(a, b) {\n             *\n             *   const startA = a.startDate, endA = a.endDate;\n             *   const startB = b.startDate, endB = b.endDate;\n             *\n             *   const sameStart = (startA - startB === 0);\n             *\n             *   if (sameStart) {\n             *     return endA > endB ? -1 : 1;\n             *   } else {\n             *     return (startA < startB) ? -1 : 1;\n             *   }\n             * }\n             * ```\n             *\n             * NOTE: The algorithms (stack, pack) that lay the events out expects them to be served in chronological\n             * order, be sure to first sort by `startDate` to get predictable results.\n             *\n             * @param  {Scheduler.model.EventModel} a First event\n             * @param  {Scheduler.model.EventModel} b Second event\n             * @returns {Number} Return -1 to display `a` above `b`, 1 for `b` above `a`\n             * @config {Function}\n             * @category Misc\n             */\n            overlappingEventSorter : null,\n\n            /**\n             * Deprecated, to be removed in version 6.0. Replaced by {@link #config-overlappingEventSorter}.\n             * @deprecated Since 5.0. Use {@link #config-overlappingEventSorter} instead.\n             * @config {Function}\n             * @category Misc\n             */\n            horizontalEventSorterFn : null,\n\n            /**\n             * Control how much space to leave between the first event/last event and the resources edge (top/bottom\n             * margin within the resource row in horizontal mode, left/right margin within the resource column in\n             * vertical mode), in px. Defaults to the value of {@link Scheduler.view.Scheduler#config-barMargin}.\n             *\n             * Can be configured per resource by setting {@link Scheduler.model.ResourceModel#field-resourceMargin\n             * resource.resourceMargin}.\n             *\n             * @prp {Number}\n             * @category Scheduled events\n             */\n            resourceMargin : null,\n\n            /**\n             * By default, scheduler fade events in on load. Specify `false` to prevent this animation or specify one\n             * of the available animation types to use it (`true` equals `'fade-in'`):\n             * * fade-in (default)\n             * * slide-from-left\n             * * slide-from-top\n             * ```\n             * // Slide events in from the left on load\n             * scheduler = new Scheduler({\n             *     useInitialAnimation : 'slide-from-left'\n             * });\n             * ```\n             * @prp {Boolean|String}\n             * @default\n             * @category Misc\n             */\n            useInitialAnimation : true,\n\n            /**\n             * An empty function by default, but provided so that you can override it. This function is called each time\n             * an event is rendered into the schedule to render the contents of the event. It's called with the event,\n             * its resource and a `renderData` object which allows you to populate data placeholders inside the event\n             * template. **IMPORTANT** You should never modify any data on the EventModel inside this method.\n             *\n             * By default, the DOM markup of an event bar includes placeholders for 'cls' and 'style'. The cls property\n             * is a {@link Core.helper.util.DomClassList} which will be added to the event element. The style property\n             * is an inline style declaration for the event element.\n             *\n             * IMPORTANT: When returning content, be sure to consider how that content should be encoded to avoid XSS\n             * (Cross-Site Scripting) attacks. This is especially important when including user-controlled data such as\n             * the event's `name`. The function {@link Core.helper.StringHelper#function-encodeHtml-static} as well as\n             * {@link Core.helper.StringHelper#function-xss-static} can be helpful in these cases.\n             *\n             * ```javascript\n             *  eventRenderer({ eventRecord, resourceRecord, renderData }) {\n             *      renderData.style = 'color:white';                 // You can use inline styles too.\n             *\n             *      // Property names with truthy values are added to the resulting elements CSS class.\n             *      renderData.cls.isImportant = this.isImportant(eventRecord);\n             *      renderData.cls.isModified = eventRecord.isModified;\n             *\n             *      // Remove a class name by setting the property to false\n             *      renderData.cls[scheduler.generatedIdCls] = false;\n             *\n             *      // Or, you can treat it as a string, but this is less efficient, especially\n             *      // if your renderer wants to *remove* classes that may be there.\n             *      renderData.cls += ' extra-class';\n             *\n             *      return StringHelper.xss`${DateHelper.format(eventRecord.startDate, 'YYYY-MM-DD')}: ${eventRecord.name}`;\n             *  }\n             * ```\n             *\n             * @param {Object} detail An object containing the information needed to render an Event.\n             * @param {Scheduler.model.EventModel} detail.eventRecord The event record.\n             * @param {Scheduler.model.ResourceModel} detail.resourceRecord The resource record.\n             * @param {Scheduler.model.AssignmentModel} detail.assignmentRecord The assignment record.\n             * @param {Object} detail.renderData An object containing details about the event rendering.\n             * @param {Scheduler.model.EventModel} detail.renderData.event The event record.\n             * @param {Core.helper.util.DomClassList|String} detail.renderData.cls An object whose property names\n             * represent the CSS class names to be added to the event bar element. Set a property's value to truthy or\n             * falsy to add or remove the class name based on the property name. Using this technique, you do not have\n             * to know whether the class is already there, or deal with concatenation.\n             * @param {Core.helper.util.DomClassList|String} detail.renderData.wrapperCls An object whose property names\n             * represent the CSS class names to be added to the event wrapper element. Set a property's value to truthy\n             * or falsy to add or remove the class name based on the property name. Using this technique, you do not\n             * have to know whether the class is already there, or deal with concatenation.\n             * @param {Core.helper.util.DomClassList|String} detail.renderData.iconCls An object whose property names\n             * represent the CSS class names to be added to an event icon element.\n             *\n             * Note that an element carrying this icon class is injected into the event element *after*\n             * the renderer completes, *before* the renderer's created content.\n             *\n             * To disable this if the renderer takes full control and creates content using the iconCls,\n             * you can set `renderData.iconCls = null`.\n             * @param {Number} detail.renderData.left Vertical offset position (in pixels) on the time axis.\n             * @param {Number} detail.renderData.width Width in pixels of the event element.\n             * @param {Number} detail.renderData.height Height in pixels of the event element.\n             * @param {String|Object<String,String>} detail.renderData.style Inline styles for the event bar DOM element.\n             * Use either 'border: 1px solid black' or `{ border: '1px solid black' }`\n             * @param {String|Object<String,String>} detail.renderData.wrapperStyle Inline styles for wrapper of the\n             * event bar DOM element. Use either 'border: 1px solid green' or `{ border: '1px solid green' }`\n             * @param {String} detail.renderData.eventStyle The `eventStyle` of the event. Use this to apply custom\n             * styles to the event DOM element\n             * @param {String} detail.renderData.eventColor The `eventColor` of the event. Use this to set a custom\n             * color for the rendered event\n             * @param {DomConfig[]} detail.renderData.children An array of DOM configs used as children to the\n             * `b-sch-event` element. Can be populated with additional DOM configs to have more control over contents.\n             * @returns {String|Object} A simple string, or a custom object which will be applied to the\n             * {@link #config-eventBodyTemplate}, creating the actual HTML\n             * @config {Function}\n             * @category Scheduled events\n             */\n            eventRenderer : null,\n\n            /**\n             * `this` reference for the {@link #config-eventRenderer} function\n             * @config {Object}\n             * @category Scheduled events\n             */\n            eventRendererThisObj : null,\n\n            /**\n             * Field from EventModel displayed as text in the bar when rendering\n             * @config {String}\n             * @default\n             * @category Scheduled events\n             */\n            eventBarTextField : 'name',\n\n            /**\n             * The template used to generate the markup of your events in the scheduler. To 'populate' the\n             * eventBodyTemplate with data, use the {@link #config-eventRenderer} method.\n             * @config {Function}\n             * @category Scheduled events\n             */\n            eventBodyTemplate : null,\n\n            /**\n             * The class responsible for the packing horizontal event layout process.\n             * Override this to take control over the layout process.\n             * @config {Scheduler.eventlayout.HorizontalLayout}\n             * @typings {typeof HorizontalLayout}\n             * @default\n             * @private\n             * @category Misc\n             */\n            horizontalLayoutPackClass : HorizontalLayoutPack,\n\n            /**\n             * The class name responsible for the stacking horizontal event layout process.\n             * Override this to take control over the layout process.\n             * @config {Scheduler.eventlayout.HorizontalLayout}\n             * @typings {typeof HorizontalLayout}\n             * @default\n             * @private\n             * @category Misc\n             */\n            horizontalLayoutStackClass : HorizontalLayoutStack,\n\n            /**\n             * Controls how much space to leave between stacked event bars in px.\n             *\n             * Can be configured per resource by setting {@link Scheduler.model.ResourceModel#field-barMargin\n             * resource.barMargin}.\n             *\n             * @config {Number} barMargin\n             * @default\n             * @category Scheduled events\n             */\n\n            // Used to animate events on first render\n            isFirstRender : true,\n\n            initialAnimationDuration : 2000,\n\n            /**\n             * When an event bar has a width less than this value, it gets the CSS class `b-sch-event-narrow`\n             * added. You may apply custom CSS rules using this class.\n             *\n             * In vertical mode, this class causes the text to be rotated so that it runs vertically.\n             * @default\n             * @config {Number}\n             * @category Scheduled events\n             */\n            narrowEventWidth : 10,\n\n            internalEventLayout : null,\n            eventPositionMode   : 'translate',\n            eventScrollMode     : 'move'\n        };\n    }\n\n    //endregion\n\n    //region Settings\n\n    changeEventLayout(eventLayout) {\n        // Pass layout config to internal config to normalize its form\n        this.internalEventLayout = eventLayout;\n\n        // Return normalized string type\n        return this.internalEventLayout.type;\n    }\n\n    changeInternalEventLayout(eventLayout) {\n        return this.getEventLayout(eventLayout);\n    }\n\n    updateInternalEventLayout(eventLayout, oldEventLayout) {\n        const me = this;\n\n        if (oldEventLayout) {\n            me.element.classList.remove(`b-eventlayout-${oldEventLayout.type}`);\n        }\n\n        me.element.classList.add(`b-eventlayout-${eventLayout.type}`);\n\n        if (!me.isConfiguring) {\n            me.refreshWithTransition();\n\n            me.trigger('stateChange');\n        }\n    }\n\n    changeHorizontalEventSorterFn(fn) {\n        VersionHelper.deprecate('Scheduler', '6.0.0', 'Replaced by overlappingEventSorter()');\n        this.overlappingEventSorter = fn;\n    }\n\n    updateOverlappingEventSorter(fn) {\n        if (!this.isConfiguring) {\n            this.refreshWithTransition();\n        }\n    }\n\n    //endregion\n\n    //region Layout helpers\n\n    // Wraps string config to object with type\n    getEventLayout(value) {\n        if (value?.isModel) {\n            value = value.eventLayout || this.internalEventLayout;\n        }\n\n        if (typeof value === 'string') {\n            value = { type : value };\n        }\n\n        return value;\n    }\n\n    /**\n     * Get event layout handler. The handler decides the vertical placement of events within a resource.\n     * Returns null if no eventLayout is used (if {@link #config-eventLayout} is set to \"none\")\n     * @internal\n     * @returns {Scheduler.eventlayout.HorizontalLayout}\n     * @readonly\n     * @category Scheduled events\n     */\n    getEventLayoutHandler(eventLayout) {\n        const me = this;\n\n        if (!me.isHorizontal) {\n            return null;\n        }\n\n        const\n            { timeAxisViewModel, horizontal } = me,\n            { type }                          = eventLayout;\n\n        if (!me.layouts) {\n            me.layouts = {};\n        }\n\n        switch (type) {\n            // stack, adjust row height to fit all events\n            case 'stack': {\n                if (!me.layouts.horizontalStack) {\n                    me.layouts.horizontalStack = new me.horizontalLayoutStackClass(ObjectHelper.assign({\n                        scheduler                   : me,\n                        timeAxisViewModel,\n                        bandIndexToPxConvertFn      : horizontal.layoutEventVerticallyStack,\n                        bandIndexToPxConvertThisObj : horizontal\n                    }, eventLayout));\n                }\n\n                return me.layouts.horizontalStack;\n            }\n            // pack, fit all events in available height by adjusting their height\n            case 'pack': {\n                if (!me.layouts.horizontalPack) {\n                    me.layouts.horizontalPack = new me.horizontalLayoutPackClass(ObjectHelper.assign({\n                        scheduler                   : me,\n                        timeAxisViewModel,\n                        bandIndexToPxConvertFn      : horizontal.layoutEventVerticallyPack,\n                        bandIndexToPxConvertThisObj : horizontal\n                    }, eventLayout));\n                }\n\n                return me.layouts.horizontalPack;\n            }\n            default:\n                return null;\n        }\n    }\n\n    //endregion\n\n    //region Event rendering\n\n    // Chainable function called with the events to render for a specific resource. Allows features to add/remove.\n    // Chained by ResourceTimeRanges\n    getEventsToRender(resource, events) {\n        return events;\n    }\n\n    /**\n     * Rerenders events for specified resource (by rerendering the entire row).\n     * @param {Scheduler.model.ResourceModel} resourceRecord\n     * @category Rendering\n     */\n    repaintEventsForResource(resourceRecord) {\n        this.currentOrientation.repaintEventsForResource(resourceRecord);\n    }\n\n    /**\n     * Rerenders the events for all resources connected to the specified event\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @private\n     */\n    repaintEvent(eventRecord) {\n        const resources = this.eventStore.getResourcesForEvent(eventRecord);\n        resources.forEach(resourceRecord => this.repaintEventsForResource(resourceRecord));\n    }\n\n    getEventStyle(eventRecord, resourceRecord) {\n        return eventRecord.eventStyle || resourceRecord.eventStyle || this.eventStyle;\n    }\n\n    getEventColor(eventRecord, resourceRecord) {\n        return eventRecord.eventColor || eventRecord.event?.eventColor || eventRecord.parent?.eventColor || resourceRecord.eventColor || this.eventColor;\n    }\n\n    //endregion\n\n    //region Template\n\n    /**\n     * Generates data used in the template when rendering an event. For example which css classes to use. Also applies\n     * #eventBodyTemplate and calls the {@link #config-eventRenderer}.\n     * @private\n     * @param {Scheduler.model.EventModel} eventRecord Event to generate data for\n     * @param {Scheduler.model.ResourceModel} resourceRecord Events resource\n     * @param {Boolean|Object} includeOutside Specify true to get boxes for timespans outside the rendered zone in both\n     * dimensions. This option is used when calculating dependency lines, and we need to include routes from timespans\n     * which may be outside the rendered zone.\n     * @param {Boolean} includeOutside.timeAxis Pass as `true` to include timespans outside the TimeAxis's bounds\n     * @param {Boolean} includeOutside.viewport Pass as `true` to include timespans outside the vertical timespan viewport's bounds.\n     * @returns {Object} Data to use in event template, or `undefined` if the event is outside the rendered zone.\n     */\n    generateRenderData(eventRecord, resourceRecord, includeOutside = { viewport : true }) {\n        // <remove-on-release>\n        // TODO: Change this fn to accept an assignment instead of event + resource\n        // </remove-on-release>\n        const\n            me               = this,\n            // generateRenderData calculates layout for events which are outside the vertical viewport\n            // because the RowManager needs to know a row height.\n            renderData       = me.currentOrientation.getTimeSpanRenderData(eventRecord, resourceRecord, includeOutside),\n            { isEvent }      = eventRecord,\n            { eventResize }  = me.features,\n            // Don't want events drag created to zero duration to render as milestones\n            isMilestone      = !eventRecord.meta.isDragCreating && eventRecord.isMilestone,\n            // $originalId allows lookup to yield same result for original resources and linked resources\n            assignmentRecord = isEvent && eventRecord.assignments.find(a => a.resourceId === resourceRecord.$originalId),\n            // Events inner element, will be populated by renderer and/or eventBodyTemplate\n            eventContent     = {\n                className : 'b-sch-event-content',\n                role      : 'presentation',\n                dataset   : {\n                    taskBarFeature : 'content'\n                }\n            };\n\n        if (renderData) {\n            renderData.tabIndex = '0';\n\n            let resizable = eventRecord.isResizable;\n\n            if (eventResize && resizable) {\n                if (renderData.startsOutsideView) {\n                    if (resizable === true) {\n                        resizable = 'end';\n                    }\n                    else if (resizable === 'start') {\n                        resizable = false;\n                    }\n                }\n                if (renderData.endsOutsideView) {\n                    if (resizable === true) {\n                        resizable = 'start';\n                    }\n                    else if (resizable === 'end') {\n                        resizable = false;\n                    }\n                }\n\n                // Let the feature veto start/end handles\n                if (resizable) {\n                    if (me.isHorizontal) {\n                        if ((!me.rtl && !eventResize.leftHandle) || (me.rtl && !eventResize.rightHandle)) {\n                            resizable = resizable === 'start' ? false : 'end';\n                        }\n                        else if ((!me.rtl && !eventResize.rightHandle) || (me.rtl && !eventResize.leftHandle)) {\n                            resizable = resizable === 'end' ? false : 'start';\n                        }\n                    }\n                    else {\n                        if (!eventResize.topHandle) {\n                            resizable = resizable === 'start' ? false : 'end';\n                        }\n                        else if (!eventResize.bottomHandle) {\n                            resizable = resizable === 'end' ? false : 'start';\n                        }\n                    }\n                }\n            }\n\n            // Event record cls properties are now DomClassList instances, so clone them\n            // so that they can be manipulated here and by renderers.\n            // Truthy value means the key will be added as a class name.\n            // ResourceTimeRanges applies custom cls to wrapper.\n            const\n                // Boolean needed here, otherwise DomSync will dig into comparing the modifications\n                isDirty           = Boolean(\n                    eventRecord.hasPersistableChanges || assignmentRecord?.hasPersistableChanges\n                ),\n                clsListObj        = {\n                    [resourceRecord.cls]      : resourceRecord.cls,\n                    [me.generatedIdCls]       : !eventRecord.isOccurrence && eventRecord.hasGeneratedId,\n                    [me.dirtyCls]             : isDirty,\n                    [me.committingCls]        : eventRecord.isCommitting,\n                    [me.endsOutsideViewCls]   : renderData.endsOutsideView,\n                    [me.startsOutsideViewCls] : renderData.startsOutsideView,\n                    'b-clipped-start'         : renderData.clippedStart,\n                    'b-clipped-end'           : renderData.clippedEnd,\n                    'b-iscreating'            : eventRecord.isCreating,\n                    'b-rtl'                   : me.rtl\n                },\n                wrapperClsListObj = {\n                    [`${me.eventCls}-parent`] : resourceRecord.isParent,\n                    'b-readonly'              : eventRecord.readOnly || assignmentRecord?.readOnly,\n                    'b-linked-resource'       : resourceRecord.isLinked,\n                    'b-original-resource'     : resourceRecord.hasLinks\n                },\n                clsList           = eventRecord.isResourceTimeRange ? new DomClassList() : eventRecord.internalCls.clone(),\n                wrapperClsList    = eventRecord.isResourceTimeRange ? eventRecord.internalCls.clone() : new DomClassList();\n\n            renderData.wrapperStyle = '';\n\n            // mark as wrapper to make sure fire render events for this level only\n            renderData.isWrap = true;\n\n            // Event specifics, things that do not apply to ResourceTimeRanges\n            if (isEvent) {\n                const selected = assignmentRecord && me.isAssignmentSelected(assignmentRecord);\n\n                ObjectHelper.assign(clsListObj, {\n                    [me.eventCls]                          : 1,\n                    'b-milestone'                          : isMilestone,\n                    'b-sch-event-narrow'                   : !isMilestone && renderData.width < me.narrowEventWidth,\n                    [me.fixedEventCls]                     : eventRecord.isDraggable === false,\n                    [`b-sch-event-resizable-${resizable}`] : Boolean(eventResize && !eventRecord.readOnly),\n                    [me.eventSelectedCls]                  : selected,\n                    [me.eventAssignHighlightCls]           : me.eventAssignHighlightCls && !selected && me.isEventSelected(eventRecord),\n                    'b-recurring'                          : eventRecord.isRecurring,\n                    'b-occurrence'                         : eventRecord.isOccurrence,\n                    'b-inactive'                           : eventRecord.inactive\n                });\n\n                renderData.eventId  = eventRecord.id;\n\n                const\n                    eventStyle   = me.getEventStyle(eventRecord, resourceRecord),\n                    eventColor   = me.getEventColor(eventRecord, resourceRecord),\n                    hasAnimation = me.isFirstRender && me.useInitialAnimation && globalThis.bryntum.noAnimations !== true;\n\n                ObjectHelper.assign(wrapperClsListObj, {\n                    [`${me.eventCls}-wrap`] : 1,\n                    'b-milestone-wrap'      : isMilestone\n                });\n\n                if (hasAnimation) {\n                    const\n                        index   = renderData.row ? renderData.row.index : (renderData.top - me.scrollTop) / me.tickSize,\n                        delayMS = index / 20 * 1000;\n\n                    renderData.wrapperStyle = `animation-delay: ${delayMS}ms;`;\n                    me.maxDelay = Math.max(me.maxDelay || 0, delayMS);\n\n                    // Add an extra delay to wait for the most delayed animation to finish\n                    // before we call stopInitialAnimation. In this way, we allow them all to finish\n                    // before we remove the b-initial-${me._useInitialAnimation} class.\n                    if (!me.initialAnimationDetacher) {\n                        me.initialAnimationDetacher = EventHelper.on({\n                            element  : me.foregroundCanvas,\n                            delegate : me.eventSelector,\n\n                            // Just listen for the first animation end fired by our event els\n                            once         : true,\n                            animationend : () => me.setTimeout({\n                                fn                : 'stopInitialAnimation',\n                                delay             : me.maxDelay,\n                                cancelOutstanding : true\n                            }),\n                            // Fallback in case animation is interrupted\n                            expires : {\n                                alt   : 'stopInitialAnimation',\n                                delay : me.initialAnimationDuration + me.maxDelay\n                            },\n                            thisObj : me\n                        });\n                    }\n                }\n\n                renderData.eventColor = eventColor;\n                renderData.eventStyle = eventStyle;\n\n                // <remove-on-release>\n                // TODO: Deprecate assignment, use assignmentRecord\n                // </remove-on-release>\n                renderData.assignmentRecord = renderData.assignment = assignmentRecord;\n            }\n\n            // If not using a wrapping div, this cls will be added to event div for correct rendering\n            renderData.wrapperCls = ObjectHelper.assign(wrapperClsList, wrapperClsListObj);\n\n            renderData.cls = ObjectHelper.assign(clsList, clsListObj);\n            renderData.iconCls = new DomClassList(eventRecord.getValue(me.eventBarIconClsField) || eventRecord.iconCls);\n\n            // ResourceTimeRanges applies custom style to the wrapper\n            if (eventRecord.isResourceTimeRange) {\n                renderData.style = '';\n                renderData.wrapperStyle += eventRecord.style || '';\n            }\n            // Others to inner\n            else {\n                renderData.style = eventRecord.style || '';\n            }\n\n            // <remove-on-release>\n            // TODO: Deprecate resource in favor of resourceRecord\n            // </remove-on-release>\n            renderData.resource = renderData.resourceRecord = resourceRecord;\n            renderData.resourceId = renderData.rowId;\n\n            if (isEvent) {\n                let childContent = null,\n                    milestoneLabelConfig = null,\n                    value;\n\n                if (me.eventRenderer) {\n                    // User has specified a renderer fn, either to return a simple string, or an object intended for the eventBodyTemplate\n                    const\n                        rendererValue = me.eventRenderer.call(me.eventRendererThisObj || me, {\n                            eventRecord,\n                            resourceRecord,\n                            assignmentRecord : renderData.assignmentRecord,\n                            renderData\n                        });\n\n                    // If the user's renderer coerced it into a string, recreate a DomClassList.\n                    if (typeof renderData.cls === 'string') {\n                        renderData.cls = new DomClassList(renderData.cls);\n                    }\n\n                    if (typeof renderData.wrapperCls === 'string') {\n                        renderData.wrapperCls = new DomClassList(renderData.wrapperCls);\n                    }\n\n                    // Same goes for iconCls\n                    if (typeof renderData.iconCls === 'string') {\n                        renderData.iconCls = new DomClassList(renderData.iconCls);\n                    }\n\n                    if (me.eventBodyTemplate) {\n                        value = me.eventBodyTemplate(rendererValue);\n                    }\n                    else {\n                        value = rendererValue;\n                    }\n                }\n                else if (me.eventBodyTemplate) {\n                    // User has specified an eventBodyTemplate, but no renderer - just apply the entire event record data.\n                    value = me.eventBodyTemplate(eventRecord);\n                }\n                else if (me.eventBarTextField) {\n                    // User has specified a field in the data model to read from\n                    value = StringHelper.encodeHtml(eventRecord.getValue(me.eventBarTextField) || '');\n                }\n\n                if (!me.eventBodyTemplate || Array.isArray(value)) {\n                    eventContent.children = [];\n\n                    // Give milestone a dedicated label element so we can use padding\n                    if (isMilestone && (me.milestoneLayoutMode === 'default' || me.milestoneTextPosition === 'always-outside') && value != null && value !== '') {\n                        eventContent.children.unshift(milestoneLabelConfig = {\n                            tag      : 'label',\n                            children : []\n                        });\n                    }\n\n                    if (renderData.iconCls?.length) {\n                        eventContent.children.unshift({\n                            tag       : 'i',\n                            className : renderData.iconCls\n                        });\n                    }\n\n                    // Array, assumed to contain DOM configs for eventContent children (or milestone label)\n                    if (Array.isArray(value)) {\n                        (milestoneLabelConfig || eventContent).children.push(...value);\n                    }\n                    // Likely HTML content\n                    else if (StringHelper.isHtml(value)) {\n                        if (eventContent.children.length) {\n                            childContent = {\n                                tag   : 'span',\n                                class : 'b-event-text-wrap',\n                                html  : value\n                            };\n                        }\n                        else {\n                            eventContent.children = null;\n                            eventContent.html = value;\n                        }\n                    }\n                    // DOM config or plain string can be used as is\n                    else if (typeof value === 'string' || typeof value === 'object') {\n                        childContent = value;\n                    }\n                    // Other, use string\n                    else if (value != null) {\n                        childContent = String(value);\n                    }\n\n                    // Must allow empty string as valid content\n                    if (childContent != null) {\n                        // Milestones have content in their label, other events in their \"body\"\n                        (milestoneLabelConfig || eventContent).children.push(childContent);\n                        renderData.cls.add('b-has-content');\n                    }\n\n                    if (eventContent.html != null || eventContent.children.length) {\n                        renderData.children.push(eventContent);\n                    }\n                }\n                else {\n                    eventContent.html = value;\n                    renderData.children.push(eventContent);\n                }\n            }\n\n            const { eventStyle, eventColor, wrapperCls } = renderData;\n\n            // Renderers have last say on style & color\n            wrapperCls[`b-sch-style-${eventStyle || 'none'}`] = 1;\n\n            // Named colors are applied as a class to the wrapper\n            if (DomHelper.isNamedColor(eventColor)) {\n                wrapperCls[`b-sch-color-${eventColor}`] = eventColor;\n            }\n            else if (eventColor) {\n                const\n                    colorProp = eventStyle ? 'color' : 'background-color',\n                    style     = `${colorProp}:${eventColor};`;\n\n                renderData.style = style + renderData.style;\n                wrapperCls['b-sch-custom-color'] = 1;\n                renderData._customColorStyle = style; // Saves the styling string to be able to remove it if needed\n            }\n            else {\n                wrapperCls[`b-sch-color-none`] = 1;\n            }\n\n            // Milestones has to apply styling to b-sch-event-content\n            if (renderData.style && isMilestone && eventContent) {\n                eventContent.style = renderData.style;\n                delete renderData.style;\n            }\n\n            // If there are any iconCls entries...\n            renderData.cls['b-sch-event-withicon'] = renderData.iconCls?.length;\n\n            // For comparison in sync, cheaper than comparing DocumentFragments\n            renderData.eventContent = eventContent;\n\n            renderData.wrapperChildren = [];\n\n            // Method which features may chain in to\n            me.onEventDataGenerated(renderData);\n        }\n\n        return renderData;\n    }\n\n    /**\n     * A method which may be chained by features. It is called when an event's render\n     * data is calculated so that features may update the style, class list or body.\n     * @param {Object} eventData\n     * @internal\n     */\n    onEventDataGenerated(eventData) {}\n\n    //endregion\n\n    //region Initial animation\n\n    changeUseInitialAnimation(name) {\n        return name === true ? 'fade-in' : name;\n    }\n\n    updateUseInitialAnimation(name, old) {\n        const { classList } = this.element;\n\n        if (old) {\n            classList.remove(`b-initial-${old}`);\n        }\n\n        if (name) {\n            classList.add(`b-initial-${name}`);\n\n            // Transition block for FF, to not interfere with animations\n            if (BrowserHelper.isFirefox) {\n                classList.add('b-prevent-event-transitions');\n            }\n        }\n    }\n\n    /**\n     * Restarts initial events animation with new value {@link #config-useInitialAnimation}.\n     * @param {Boolean|String} initialAnimation new initial animation value\n     * @category Misc\n     */\n    restartInitialAnimation(initialAnimation) {\n        const me = this;\n\n        me.initialAnimationDetacher?.();\n        me.initialAnimationDetacher = null;\n\n        me.useInitialAnimation = initialAnimation;\n        me.isFirstRender = true;\n        me.refresh();\n    }\n\n    stopInitialAnimation() {\n        const me = this;\n\n        me.initialAnimationDetacher();\n        me.isFirstRender = false;\n\n        // Prevent any further initial animations\n        me.useInitialAnimation = false;\n\n        // Remove transition block for FF a bit later, to not interfere with animations\n        if (BrowserHelper.isFirefox) {\n            me.setTimeout(() => me.element.classList.remove('b-prevent-event-transitions'), 100);\n        }\n    }\n\n    //endregion\n\n    //region Milestones\n\n    /**\n     * Determines width of a milestones label. How width is determined is decided by configuring\n     * {@link #config-milestoneLayoutMode}. Please note that text width is always determined using the events\n     * {@link Scheduler/model/EventModel#field-name}.\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @param {Scheduler.model.ResourceModel} resourceRecord\n     * @returns {Number}\n     * @category Milestones\n     */\n    getMilestoneLabelWidth(eventRecord, resourceRecord) {\n        const\n            me   = this,\n            mode = me.milestoneLayoutMode,\n            size = me.getResourceLayoutSettings(resourceRecord).contentHeight;\n\n        if (mode === 'measure') {\n            const\n                html    = StringHelper.encodeHtml(eventRecord.name),\n                color   = me.getEventColor(eventRecord, resourceRecord),\n                style   = me.getEventStyle(eventRecord, resourceRecord),\n                element = me.milestoneMeasureElement || (me.milestoneMeasureElement = DomHelper.createElement({\n                    className : {\n                        'b-sch-event-wrap'       : 1,\n                        'b-milestone-wrap'       : 1,\n                        'b-measure'              : 1,\n                        [`b-sch-color-${color}`] : color,\n                        [`b-sch-style-${style}`] : style\n                    },\n                    children : [\n                        {\n                            className : 'b-sch-event b-milestone',\n                            children  : [\n                                {\n                                    className : 'b-sch-event-content',\n                                    children  : [\n                                        { tag : 'label' }\n                                    ]\n                                }\n                            ]\n                        }\n                    ],\n                    parent : me.foregroundCanvas\n                }));\n\n            // DomSync should not touch\n            element.retainElement = true;\n\n            element.style.fontSize = `${size}px`;\n\n            if (me.milestoneTextPosition === 'always-outside') {\n                const label = element.firstElementChild.firstElementChild.firstElementChild;\n\n                label.innerHTML = html;\n\n                const bounds = Rectangle.from(label, label.parentElement);\n\n                // +2 for a little margin\n                return bounds.left + bounds.width + 2;\n            }\n            else {\n                // b-sch-event-content\n                element.firstElementChild.firstElementChild.innerHTML = `<label></label>${html}`;\n\n                return element.firstElementChild.offsetWidth;\n            }\n        }\n\n        if (mode === 'estimate') {\n            return eventRecord.name.length * me.milestoneCharWidth + (me.milestoneTextPosition === 'always-outside' ? size : 0);\n        }\n\n        if (mode === 'data') {\n            return eventRecord.milestoneWidth;\n        }\n\n        return 0;\n    }\n\n    updateMilestoneLayoutMode(mode) {\n        const\n            me            = this,\n            alwaysOutside = me.milestoneTextPosition === 'always-outside';\n\n        me.element.classList.toggle('b-sch-layout-milestones', mode !== 'default' && !alwaysOutside);\n        me.element.classList.toggle('b-sch-layout-milestone-labels', mode !== 'default' && alwaysOutside);\n\n        if (!me.isConfiguring) {\n            me.refreshWithTransition();\n        }\n    }\n\n    updateMilestoneTextPosition(position) {\n        this.element.classList.toggle('b-sch-layout-milestone-text-position-inside', position === 'inside');\n\n        this.updateMilestoneLayoutMode(this.milestoneLayoutMode);\n    }\n\n    updateMilestoneAlign() {\n        if (!this.isConfiguring) {\n            this.refreshWithTransition();\n        }\n    }\n\n    updateMilestoneCharWidth() {\n        if (!this.isConfiguring) {\n            this.refreshWithTransition();\n        }\n    }\n\n    // endregion\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport ProjectModel from '../../model/ProjectModel.js';\nimport StringHelper from '../../../Core/helper/StringHelper.js';\nimport TimeZoneHelper from '../../../Core/helper/TimeZoneHelper.js';\n\n/**\n * @module Scheduler/data/mixin/ProjectConsumer\n */\n\nconst engineStoreNames = [\n    'assignmentStore',\n    'dependencyStore',\n    'eventStore',\n    'resourceStore'\n];\n\n/**\n * Creates a Project using any configured stores, and sets the stores configured into the project into\n * the host object.\n *\n * @mixin\n */\nexport default Target => class ProjectConsumer extends (Target || Base) {\n    static get $name() {\n        return 'ProjectConsumer';\n    }\n\n    //region Default config\n\n    static get declarable() {\n        return ['projectStores'];\n    }\n\n    static get configurable() {\n        return {\n            projectModelClass : ProjectModel,\n\n            // <remove-on-release>\n            //TODO: move to SchedulerProBase and SchedulerBase to specify different types\n            // </remove-on-release>\n            /**\n             * The {@link Scheduler.model.ProjectModel} instance, containing the data visualized by the Scheduler.\n             *\n             * **Note:** In SchedulerPro the project is instance of SchedulerPro.model.ProjectModel class.\n             * @member {Scheduler.model.ProjectModel} project\n             * @typings {ProjectModel}\n             * @category Data\n             */\n            /**\n             * A {@link Scheduler.model.ProjectModel} instance or a config object. The project holds all Scheduler data.\n             * Can be omitted in favor of individual store configs or {@link Scheduler.view.mixin.SchedulerStores#config-crudManager} config.\n             *\n             * **Note:** This config is **mandatory** in SchedulerPro. See SchedulerPro.model.ProjectModel class.\n             * @config {Scheduler.model.ProjectModel|ProjectModelConfig} project\n             * @category Data\n             */\n            project : {},\n\n            /**\n             * Configure as `true` to destroy the Project and stores when `this` is destroyed.\n             * @config {Boolean}\n             * @category Data\n             */\n            destroyStores : null,\n\n            // Will be populated by AttachToProjectMixin which features mix in\n            projectSubscribers : []\n        };\n    }\n\n    #suspendedByRestore;\n\n    //endregion\n\n    startConfigure(config) {\n        // process the project first which ingests any configured data sources,\n        this.getConfig('project');\n\n        super.startConfigure(config);\n    }\n\n    //region Project\n\n    // This is where all the ingestion happens.\n    // At config time, the changers inject incoming values into the project config object\n    // that we are building. At the end we instantiate the project with all incoming\n    // config values filled in.\n    changeProject(project, oldProject) {\n        const\n            me = this,\n            {\n                projectStoreNames,\n                projectDataNames\n            }  = me.constructor;\n\n        me.projectCallbacks = new Set();\n\n        if (project) {\n            // Flag for changes to know what stage we are at\n            me.buildingProjectConfig = true;\n\n            if (!project.isModel) {\n                // When configuring, prio order:\n                // 1. If using an already existing CrudManager, it is assumed to already have the stores we should use,\n                //    adopt them as ours.\n                // 2. If a supplied store already has a project, it is assumed to be shared with another scheduler and\n                //    that project is adopted as ours. Unless we are given some store not part of that project,\n                //    in which case we create a new project.\n                // 3. Use stores from a supplied project config.\n                // 4. Use stores configured on scheduler.\n                // + Pass on inline data (events, resources, dependencies, assignments -> xxData on the project config)\n                //\n                // What happens during project initialization is this:\n                // this._project is the project *config* object.\n                // changeXxxx methods put incoming values directly into it through this.project\n                // to be used as its configuration.\n                // So when it is instantiated, it has had all configs injected.\n                if (me.isConfiguring) {\n                    // Set property for changers to put incoming values into\n                    me._project = project;\n\n                    // crudManager will be a clone of the raw config if it is a raw config.\n                    const { crudManager } = me;\n\n                    // Pull in stores from the crudManager config first\n                    if (crudManager) {\n                        const { isCrudManager } = crudManager;\n\n                        for (const storeName of projectStoreNames) {\n                            if (crudManager[storeName]) {\n\n                                // We configure the project with the stores, and *not* the CrudManager.\n                                // The CrudManager ends up having its project set and thereby adopting ours.\n                                me[storeName] = crudManager[storeName];\n\n                                // If it's just a config, take the stores out.\n                                // We will *configure* it with this project and it will ingest\n                                // its stores from there.\n                                if (!isCrudManager) {\n                                    delete crudManager[storeName];\n                                }\n                            }\n                        }\n                    }\n\n                    // Pull in all our configured stores into the project config object.\n                    // That also extracts any project into this._sharedProject\n                    me.getConfig('projectStores');\n\n                    // Referencing these data configs causes them to be pulled into\n                    // the _project.xxxData config property if they are present.\n                    for (const dataName of projectDataNames) {\n                        me.getConfig(dataName);\n                    }\n                }\n\n                const { eventStore } = project;\n                let { _sharedProject : sharedProject } = me;\n\n                // Delay autoLoading until listeners are set up, to be able to inject params\n                if (eventStore && !eventStore.isEventStoreMixin && eventStore.autoLoad && !eventStore.count) {\n                    eventStore.autoLoad = false;\n                    me.delayAutoLoad = true;\n                }\n\n                // We should not adopt a project from a store if we are given any store not part of that project\n                if (sharedProject && engineStoreNames.some(store => project[store] && project[store] !== sharedProject[store])) {\n                    // We have to chain any store used by the other project, they can only belong to one\n                    for (const store of engineStoreNames) {\n                        if (project[store] && project[store] === sharedProject[store]) {\n                            project[store] = project[store].chain();\n                        }\n                    }\n\n                    sharedProject = null;\n                }\n\n                // Use sharedProject if found, else instantiate our config.\n                project = sharedProject || new me.projectModelClass(project);\n\n                // Clear the property so that the updater is called.\n                delete me._project;\n            }\n\n            // In the updater, configs are live\n            me.buildingProjectConfig = false;\n        }\n\n        return project;\n    }\n\n    /**\n     * Implement in subclass to take action when project is replaced.\n     *\n     * __`super.updateProject(...arguments)` must be called first.__\n     *\n     * @param {Scheduler.model.ProjectModel} project\n     * @category Data\n     */\n    updateProject(project, oldProject) {\n        const\n            me = this,\n            {\n                projectListeners,\n                crudManager\n            }  = me;\n\n        me.detachListeners('projectConsumer');\n\n        // When we set the crudManager now, it will go through to the CrudManagerVIew\n        delete me._crudManager;\n\n        if (project) {\n            projectListeners.thisObj = me;\n            project.ion(projectListeners);\n\n            // If the project is a CrudManager, use it as such.\n            if (project.isCrudManager) {\n                me.crudManager = project;\n            }\n            // Apply the project to CrudManager, making sure the same stores are used there and here\n            else if (crudManager) {\n                crudManager.project = project;\n\n                // CrudManager goes through the changer as usual and is initialized\n                // from the Project, not any stores it was originally configured with.\n                me.crudManager = crudManager;\n            }\n\n            // Notifies classes that mix AttachToProjectMixin that we have a new project\n            me.projectSubscribers.forEach(subscriber => {\n                subscriber.detachFromProject(oldProject);\n                subscriber.attachToProject(project);\n            });\n\n            // Sets the project's stores into the host object\n            for (const storeName of me.constructor.projectStoreNames) {\n                me[storeName] = project[storeName];\n            }\n\n            // Listeners are set up, if EventStore was configured with autoLoad now is the time to load\n            if (me.delayAutoLoad) {\n                // Restore the flag, not needed but to look good on inspection\n                project.eventStore.autoLoad = true;\n                project.eventStore.load();\n            }\n\n            project.stm?.ion({\n                name           : 'projectConsumer',\n                restoringStart : 'onProjectRestoringStart',\n                restoringStop  : 'onProjectRestoringStop',\n                thisObj        : me\n            });\n\n        }\n\n        me.trigger('projectChange', { project });\n    }\n\n    // Implementation here because we need to get first look at it to adopt its stores\n    changeCrudManager(crudManager) {\n        // Set the property to be scanned for incoming stores.\n        // If it's a config, it will be stripped of those stores prior to construction.\n        if (this.buildingProjectConfig) {\n            this._crudManager = crudManager.isCrudManager ? crudManager : Object.assign({}, crudManager);\n        }\n        else {\n            return super.changeCrudManager(crudManager);\n        }\n    }\n\n    // Called when project changes are committed, after data is written back to records\n    onProjectDataReady() {\n        const me = this;\n\n        // Only update the UI when we are visible\n        me.whenVisible(() => {\n            if (me.projectCallbacks.size) {\n                me.projectCallbacks.forEach(callback => callback());\n                me.projectCallbacks.clear();\n            }\n        }, null, null, 'onProjectDataReady');\n    }\n\n    onProjectRestoringStart({ stm }) {\n        const { rawQueue } = stm;\n        // Suspend refresh if undo/redo potentially leads to multiple refreshes\n        if (rawQueue.length && rawQueue[rawQueue.length - 1].length > 1) {\n            this.#suspendedByRestore = true;\n            this.suspendRefresh();\n        }\n    }\n\n    onProjectRestoringStop() {\n        if (this.#suspendedByRestore) {\n            this.#suspendedByRestore = false;\n            this.resumeRefresh(true);\n        }\n    }\n\n    // Overridden in CalendarStores.js\n    onBeforeTimeZoneChange() {}\n\n    // When project changes time zone, change start and end dates\n    onTimeZoneChange({ timeZone, oldTimeZone }) {\n        const me = this;\n\n        // The timeAxis timeZone could be equal to timeZone if we are a partnered scheduler\n        if (me.startDate && me.timeAxis.timeZone !== timeZone) {\n            const startDate = oldTimeZone != null ? TimeZoneHelper.fromTimeZone(me.startDate, oldTimeZone) : me.startDate;\n            me.startDate = timeZone != null ? TimeZoneHelper.toTimeZone(startDate, timeZone) : startDate;\n\n            // Saves the timeZone on the timeAxis as it is shared between partnered schedulers\n            me.timeAxis.timeZone = timeZone;\n        }\n    }\n\n    onStartApplyChangeset() {\n        this.suspendRefresh();\n    }\n\n    onEndApplyChangeset() {\n        this.resumeRefresh(true);\n    }\n\n    /**\n     * Accepts a callback that will be called when the underlying project is ready (no commit pending and current commit\n     * finalized)\n     * @param {Function} callback\n     * @category Data\n     */\n    whenProjectReady(callback) {\n        // Might already be ready, call directly\n        if (this.isEngineReady) {\n            callback();\n        }\n        else {\n            this.projectCallbacks.add(callback);\n        }\n    }\n\n    /**\n     * Returns `true` if engine is in a stable calculated state, `false` otherwise.\n     * @property {Boolean}\n     * @category Misc\n     */\n    get isEngineReady() {\n        // NonWorkingTime calls this during destruction, hence the ?.\n        return Boolean(this.project.isEngineReady?.());\n    }\n\n    //endregion\n\n    //region Destroy\n\n    // Cleanup, destroys stores if this.destroyStores is true.\n    doDestroy() {\n        super.doDestroy();\n\n        if (this.destroyStores) {\n            // Shared project might already be destroyed\n            !this.project.isDestroyed && this.project.destroy();\n        }\n    }\n\n    //endregion\n\n    get projectStores() {\n        const { projectStoreNames } = this.constructor;\n\n        return projectStoreNames.map(storeName => this[storeName]);\n    }\n\n    static get projectStoreNames() {\n        return Object.keys(this.projectStores);\n    }\n\n    static get projectDataNames() {\n        return this.projectStoreNames.reduce((result, storeName) => {\n            const { dataName } = this.projectStores[storeName];\n\n            if (dataName) {\n                result.push(dataName);\n            }\n            return result;\n        }, []);\n    }\n\n    static setupProjectStores(cls, meta) {\n        const { projectStores } = cls;\n\n        if (projectStores) {\n            const\n                projectListeners  = {\n                    name                 : 'projectConsumer',\n                    dataReady            : 'onProjectDataReady',\n                    change               : 'relayProjectDataChange',\n                    beforeTimeZoneChange : 'onBeforeTimeZoneChange',\n                    timeZoneChange       : 'onTimeZoneChange',\n                    startApplyChangeset  : 'onStartApplyChangeset',\n                    endApplyChangeset    : 'onEndApplyChangeset'\n                },\n                storeConfigs      = {\n                    projectListeners\n                };\n\n            let previousDataName;\n\n            // Create a property and updater for each dataName and a changer for each store\n            for (const storeName in projectStores) {\n                const { dataName } = projectStores[storeName];\n\n                // Define \"eventStore\" and \"events\" configs\n                storeConfigs[storeName] = storeConfigs[dataName] = null;\n\n                // Define up the \"events\" property\n                if (dataName) {\n                    // Getter to return store data\n                    Object.defineProperty(meta.class.prototype, dataName, {\n                        configurable : true, // So that Config can add its setter.\n                        get() {\n                            // get events() { return this.project.eventStore.records; }\n                            return this.project[storeName]?.records;\n                        }\n                    });\n\n                    // Create an updater for the data name;\n                    this.createDataUpdater(storeName, dataName, previousDataName, meta);\n                }\n\n                this.createStoreDescriptor(meta, storeName, projectStores[storeName], projectListeners);\n\n                // The next data updater must reference this data name\n                previousDataName = dataName;\n            }\n\n            // Create the projectListeners config.\n            this.setupConfigs(meta, storeConfigs);\n        }\n    }\n\n    static createDataUpdater(storeName, dataName, previousDataName, meta) {\n        // Create eg \"updateEvents(data)\".\n        // We need it to call this.getConfig('resources') so that ordering of\n        // data ingestion is corrected.\n        meta.class.prototype[`update${StringHelper.capitalize(dataName)}`] = function(data) {\n            const { project } = this;\n\n            // Ensure a dataName that we depend on is called in.\n            // For example dependencies must load in order after the events.\n            previousDataName && this.getConfig(previousDataName);\n\n            if (this.buildingProjectConfig) {\n                // Set the property in the project config object.\n                // eg project.eventsData = [...]\n                project[`${dataName}Data`] = data;\n            }\n            else {\n                // Live update the project when in use.\n                project[storeName].data = data;\n            }\n        };\n    }\n\n    // eslint-disable-next-line bryntum/no-listeners-in-lib\n    static createStoreDescriptor(meta, storeName, { listeners }, projectListeners) {\n        const\n            { prototype : clsProto } = meta.class,\n            storeNameCap             = StringHelper.capitalize(storeName);\n\n        // Set up onProjectEventStoreChange to set this.eventStore\n        projectListeners[`${storeName}Change`] = function({ store }) {\n            this[storeName] = store;\n        };\n\n        // create changeEventStore\n        clsProto[`change${storeNameCap}`] = function(store, oldStore) {\n            const\n                me           = this,\n                { project }  = me,\n                storeProject = store?.project;\n\n            if (me.buildingProjectConfig) {\n                // Capture any project found at project config time\n                // to use as our shared project\n                if (storeProject?.isProjectModel) {\n                    me._sharedProject = storeProject;\n                }\n\n                // Set the property in the project config object.\n                // Must not go through the updater. It's too early to\n                // inform host of store change.\n                project[storeName] = store;\n                return;\n            }\n\n            // Live update the project when in use.\n            if (!me.initializingProject) {\n                if (project[storeName] !== store) {\n                    project[`set${storeNameCap}`](store);\n                    store = project[storeName];\n                }\n            }\n\n            // Implement processing here instead of creating a separate updater.\n            // Subclasses can implement updaters.\n            if (store !== oldStore) {\n                if (listeners) {\n                    listeners.thisObj = me;\n                    listeners.name = `${storeName}Listeners`;\n\n                    me.detachListeners(listeners.name);\n\n                    store.ion(listeners);\n                }\n\n                // Set backing var temporarily, so it can be accessed from AttachToProjectMixin subscribers\n                me[`_${storeName}`] = store;\n\n                // Notifies classes that mix AttachToProjectMixin that we have a new XxxxxStore\n                me.projectSubscribers.forEach(subscriber => {\n                    subscriber[`attachTo${storeNameCap}`]?.(store);\n                });\n\n                me[`_${storeName}`] = null;\n            }\n            return store;\n        };\n    }\n\n    relayProjectDataChange(event) {\n        // Don't trigger change event for tree node collapse/expand\n        if ((event.isExpand || event.isCollapse) && !event.records[0].fieldMap.expanded.persist) {\n            return;\n        }\n\n        /**\n         * Fired when data in any of the projects stores changes.\n         *\n         * Basically a relayed version of each store's own change event, decorated with which store it originates from.\n         * See the {@link Core.data.Store#event-change store change event} documentation for more information.\n         *\n         * @event dataChange\n         * @param {Scheduler.data.mixin.ProjectConsumer} source Owning component\n         * @param {Scheduler.model.mixin.ProjectModelMixin} project Project model\n         * @param {Core.data.Store} store Affected store\n         * @param {'remove'|'removeAll'|'add'|'updatemultiple'|'clearchanges'|'filter'|'update'|'dataset'|'replace'} action\n         * Name of action which triggered the change. May be one of:\n         * * `'remove'`\n         * * `'removeAll'`\n         * * `'add'`\n         * * `'updatemultiple'`\n         * * `'clearchanges'`\n         * * `'filter'`\n         * * `'update'`\n         * * `'dataset'`\n         * * `'replace'`\n         * @param {Core.data.Model} record Changed record, for actions that affects exactly one record (`'update'`)\n         * @param {Core.data.Model[]} records Changed records, passed for all actions except `'removeAll'`\n         * @param {Object} changes Passed for the `'update'` action, info on which record fields changed\n         */\n        return this.trigger('dataChange', { project : event.source, ...event, source : this });\n    }\n\n    //region WidgetClass\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n\n    //endregion\n};\n","import Base from '../../../Core/Base.js';\nimport Store from '../../../Core/data/Store.js';\nimport GlobalEvents from '../../../Core/GlobalEvents.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\nimport VersionHelper from '../../../Core/helper/VersionHelper.js';\nimport ProjectConsumer from '../../data/mixin/ProjectConsumer.js';\n\n/**\n * @module Scheduler/view/mixin/SchedulerStores\n */\n\n/**\n * Functions for store assignment and store event listeners.\n *\n * @mixin\n * @extends Scheduler/data/mixin/ProjectConsumer\n */\nexport default Target => class SchedulerStores extends ProjectConsumer(Target || Base) {\n    static get $name() {\n        return 'SchedulerStores';\n    }\n\n    //region Default config\n\n    // This is the static definition of the Stores we consume from the project, and\n    // which we must provide *TO* the project if we or our CrudManager is configured\n    // with them.\n    // The property name is the store name, and within that there is the dataName which\n    // is the property which provides static data definition. And there is a listeners\n    // definition which specifies the listeners *on this object* for each store.\n    //\n    // To process incoming stores, implement an updateXxxxxStore method such\n    // as `updateEventStore(eventStore)`.\n    //\n    // To process an incoming Project implement `updateProject`. __Note that\n    // `super.updateProject(...arguments)` must be called first.__\n    static get projectStores() {\n        return {\n            resourceStore : {\n                dataName : 'resources'\n            },\n\n            eventStore : {\n                dataName  : 'events',\n                // eslint-disable-next-line bryntum/no-listeners-in-lib\n                listeners : {\n                    batchedUpdate   : 'onEventStoreBatchedUpdate',\n                    changePreCommit : 'onInternalEventStoreChange',\n                    commitStart     : 'onEventCommitStart',\n                    commit          : 'onEventCommit',\n                    exception       : 'onEventException',\n                    idchange        : 'onEventIdChange',\n                    beforeLoad      : 'onBeforeLoad'\n                }\n            },\n\n            assignmentStore : {\n                dataName  : 'assignments',\n                // eslint-disable-next-line bryntum/no-listeners-in-lib\n                listeners : {\n                    changePreCommit : 'onAssignmentChange', // In EventSelection.js\n                    commitStart     : 'onAssignmentCommitStart',\n                    commit          : 'onAssignmentCommit',\n                    exception       : 'onAssignmentException',\n                    beforeRemove    : {\n                        fn   : 'onAssignmentBeforeRemove',\n                        // We must go last in case an app vetoes a remove\n                        // by returning false from a handler.\n                        prio : -1000\n                    }\n                }\n            },\n\n            dependencyStore : {\n                dataName : 'dependencies'\n            },\n\n            calendarManagerStore   : {},\n            timeRangeStore         : {},\n            resourceTimeRangeStore : {}\n        };\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Overridden to *not* auto create a store at the Scheduler level.\n             * The store is the {@link Scheduler.data.ResourceStore} of the backing project\n             * @config {Core.data.Store}\n             * @private\n             */\n            store : null,\n\n            /**\n             * The name of the start date parameter that will be passed to in every `eventStore` load request.\n             * @config {String}\n             * @category Data\n             */\n            startParamName : 'startDate',\n\n            /**\n             * The name of the end date parameter that will be passed to in every `eventStore` load request.\n             * @config {String}\n             * @category Data\n             */\n            endParamName : 'endDate',\n\n            /**\n             * Set to true to include `startDate` and `endDate` params indicating the currently viewed date range.\n             * Dates are formatted using the same format as the `startDate` field on the EventModel\n             * (e.g. 2023-03-08T00:00:00+01:00).\n             *\n             * Enabled by default in version 6.0 and above.\n             *\n             * @config {Boolean}\n             */\n            passStartEndParameters : VersionHelper.checkVersion('core', '6.0', '>='),\n\n            /**\n             * Class that should be used to instantiate a CrudManager in case it's provided as a simple object to\n             * {@link #config-crudManager} config.\n             * @config {Scheduler.data.CrudManager}\n             * @typings {typeof CrudManager}\n             * @category Data\n             */\n            crudManagerClass : null,\n\n            /**\n             * Get/set the CrudManager instance\n             * @member {Scheduler.data.CrudManager} crudManager\n             * @category Data\n             */\n            /**\n             * Supply a {@link Scheduler.data.CrudManager} instance or a config object if you want to use\n             * CrudManager for handling data.\n             * @config {CrudManagerConfig|Scheduler.data.CrudManager}\n             * @category Data\n             */\n            crudManager : null\n        };\n    }\n\n    //endregion\n\n    //region Project\n\n    updateProject(project, oldProject) {\n        super.updateProject(project, oldProject);\n\n        this.detachListeners('schedulerStores');\n\n        project.ion({\n            name    : 'schedulerStores',\n            refresh : 'onProjectRefresh',\n            thisObj : this\n        });\n    }\n\n    // Called when project changes are committed, before data is written back to records (but still ready to render\n    // since data is fetched from engine)\n    onProjectRefresh({ isInitialCommit }) {\n        const me = this;\n\n        // Only update the UI immediately if we are visible\n        if (me.isVisible) {\n            if (isInitialCommit) {\n                if (me.isVertical) {\n                    me.refreshAfterProjectRefresh = false;\n                    me.refreshWithTransition();\n                }\n            }\n\n            if (me.navigateToAfterRefresh) {\n                me.navigateTo(me.navigateToAfterRefresh);\n                me.navigateToAfterRefresh = null;\n            }\n\n            if (me.refreshAfterProjectRefresh) {\n                me.refreshWithTransition(false, !isInitialCommit);\n                me.refreshAfterProjectRefresh = false;\n            }\n        }\n        // Otherwise wait till next time we get painted (shown, or a hidden ancestor shown)\n        else {\n            me.whenVisible('refresh', me, [true]);\n        }\n    }\n\n    //endregion\n\n    //region CrudManager\n\n    changeCrudManager(crudManager) {\n        const me = this;\n\n        if (crudManager && !crudManager.isCrudManager) {\n            //<debug>\n            if (!me.crudManagerClass) {\n                throw new Error('No CrudManager class configured on CrudManager\\'s View');\n            }\n            //</debug>\n\n            // CrudManager injects itself into is Scheduler's _crudManager property\n            // because code it triggers needs to access it through its getter.\n            crudManager = me.crudManagerClass.new({\n                scheduler : me\n            }, crudManager);\n        }\n        // config setter will veto because of above described behaviour\n        // of setting the property early on creation\n        me._crudManager = crudManager;\n\n        me.bindCrudManager(crudManager);\n    }\n\n    //endregion\n\n    //region Row store\n\n    get store() {\n        // Vertical uses a dummy store\n        if (!this._store && this.isVertical) {\n            // <remove-on-release>\n            // TODO: Make this store readonly, since we are using single cell approach\n            // </remove-on-release>\n            this._store = new Store({\n                data : [\n                    {\n                        id  : 'verticalTimeAxisRow', // no-sanity\n                        cls : 'b-verticaltimeaxis-row'\n                    }\n                ]\n            });\n        }\n\n        return super.store;\n    }\n\n    set store(store) {\n        super.store = store;\n    }\n\n    // Wrap w/ transition refreshFromRowOnStoreAdd() inherited from Grid\n    refreshFromRowOnStoreAdd(row, { isExpand, records }) {\n        const args = arguments;\n\n        this.runWithTransition(() => {\n            // Postpone drawing of events for a new resource until the following project refresh. Previously the draw\n            // would not happen because engine was not ready, but now when we allow commits and can read values during\n            // commit that block is no longer there\n            this.currentOrientation.suspended = !isExpand && !records.some(r => r.isLinked);\n\n            super.refreshFromRowOnStoreAdd(row, ...args);\n\n            this.currentOrientation.suspended = false;\n        }, !isExpand);\n    }\n\n    onStoreAdd(event) {\n        super.onStoreAdd(event);\n\n        if (this.isPainted) {\n            this.calculateRowHeights(event.records);\n        }\n    }\n\n    onStoreUpdateRecord({ source : store, record, changes }) {\n        // Ignore engine changes that do not affect row rendering\n        let ignoreCount = 0;\n\n        if ('assigned' in changes) {\n            ignoreCount++;\n        }\n\n        if ('calendar' in changes) {\n            ignoreCount++;\n        }\n\n        if (ignoreCount !== Object.keys(changes).length) {\n            super.onStoreUpdateRecord(...arguments);\n        }\n    }\n\n    //endregion\n\n    //region ResourceStore\n\n    updateResourceStore(resourceStore) {\n        // Reconfigure grid if resourceStore is backing the rows\n        if (resourceStore && this.isHorizontal) {\n            resourceStore.metaMapId = this.id;\n            this.store = resourceStore;\n        }\n    }\n\n    get usesDisplayStore() {\n        return this.store !== this.resourceStore;\n    }\n\n    //endregion\n\n    //region Events\n\n    onEventIdChange(params) {\n        this.currentOrientation.onEventStoreIdChange && this.currentOrientation.onEventStoreIdChange(params);\n    }\n\n    /**\n     * Listener to the batchedUpdate event which fires when a field is changed on a record which\n     * is batch updating. Occasionally UIs must keep in sync with batched changes.\n     * For example, the EventResize feature performs batched updating of the startDate/endDate\n     * and it tells its client to listen to batchedUpdate.\n     * @private\n     */\n    onEventStoreBatchedUpdate(event) {\n        if (this.listenToBatchedUpdates) {\n            return this.onInternalEventStoreChange(event);\n        }\n    }\n\n    /**\n     * Calls appropriate functions for current event layout when the event store is modified.\n     * @private\n     */\n    // Named as Internal to avoid naming collision with wrappers that relay events\n    onInternalEventStoreChange(params) {\n        // Too early, bail out\n        // Also bail out if this is a reassign using resourceId, any updates will be handled by AssignmentStore instead\n        if (!this.isPainted || !this._mode || params.isAssign || this.assignmentStore.isRemovingAssignment) {\n            return;\n        }\n\n        // Only respond if we are visible. If not, defer until we are shown\n        if (this.isVisible) {\n            this.currentOrientation.onEventStoreChange(params);\n        }\n        else {\n            this.whenVisible(this.onInternalEventStoreChange, this, [params]);\n        }\n    }\n\n    /**\n     * Refreshes committed events, to remove dirty/committing flag.\n     * CSS is added\n     * @private\n     */\n    onEventCommit({ changes }) {\n        let resourcesToRepaint = [...changes.added, ...changes.modified].map(\n            eventRecord => this.eventStore.getResourcesForEvent(eventRecord)\n        );\n\n        // getResourcesForEvent returns an array, so need to flatten resourcesToRepaint\n        resourcesToRepaint = Array.prototype.concat.apply([], resourcesToRepaint);\n\n        // repaint relevant resource rows\n        new Set(resourcesToRepaint).forEach(\n            resourceRecord => this.repaintEventsForResource(resourceRecord)\n        );\n    }\n\n    /**\n     * Adds the committing flag to changed events before commit.\n     * @private\n     */\n    onEventCommitStart({ changes }) {\n        const { currentOrientation, committingCls } = this;\n        // Committing sets a flag in meta that during event rendering applies a CSS class. But to not mess up drag and\n        // drop between resources no redraw is performed before committing, so class is never applied to the element(s).\n        // Applying here instead\n        [...changes.added, ...changes.modified].forEach(eventRecord =>\n            eventRecord.assignments.forEach(\n                assignmentRecord => currentOrientation.toggleCls(assignmentRecord, committingCls, true)\n            )\n        );\n    }\n\n    // Clear committing flag\n    onEventException({ action }) {\n        if (action === 'commit') {\n            const { changes } = this.eventStore;\n\n            [...changes.added, ...changes.modified, ...changes.removed].forEach(eventRecord =>\n                this.repaintEvent(eventRecord)\n            );\n        }\n    }\n\n    onAssignmentCommit({ changes }) {\n        this.repaintEventsForAssignmentChanges(changes);\n    }\n\n    onAssignmentCommitStart({ changes }) {\n        const { currentOrientation, committingCls } = this;\n\n        [...changes.added, ...changes.modified].forEach(assignmentRecord => {\n            currentOrientation.toggleCls(assignmentRecord, committingCls, true);\n        });\n    }\n\n    // Clear committing flag\n    onAssignmentException({ action }) {\n        if (action === 'commit') {\n            this.repaintEventsForAssignmentChanges(this.assignmentStore.changes);\n        }\n    }\n\n    repaintEventsForAssignmentChanges(changes) {\n        const resourcesToRepaint = [...changes.added, ...changes.modified, ...changes.removed].map(\n            assignmentRecord => assignmentRecord.getResource()\n        );\n\n        // repaint relevant resource rows\n        new Set(resourcesToRepaint).forEach(\n            resourceRecord => this.repaintEventsForResource(resourceRecord)\n        );\n    }\n\n    onAssignmentBeforeRemove({ records, removingAll }) {\n        if (removingAll) {\n            return;\n        }\n\n        const me = this;\n\n        let moveTo;\n\n        // Deassigning the active assignment\n        if (!me.isConfiguring &&\n            // If we have current active assignment or we scheduled navigating to an assignment, we should check\n            // if we're removing that assignment in order to avoid navigating to it\n            (me.navigateToAfterRefresh || me.activeAssignment && records.includes(me.activeAssignment))\n        ) {\n            // If next navigation target is removed, clean up the flag\n            if (records.includes(me.navigateToAfterRefresh)) {\n                me.navigateToAfterRefresh = null;\n            }\n            // If being done by a keyboard gesture then look for a close target until we find an existing record, not\n            // scheduled for removal. Otherwise, push focus outside of the Scheduler.\n            // This condition will react not only on meaningful keyboard action - like pressing DELETE key on selected\n            // event - but also in case user started dragging and pressed CTRL (or any other key) in process.\n            // https://github.com/bryntum/support/issues/3479\n            if (GlobalEvents.lastInteractionType === 'key') {\n                // Look for a close target until we find an existing record, not scheduled for removal. Provided\n                // assignment position in store is arbitrary as well as order of removed records, it does not make much\n                // sense trying to apply any specific order to them. Existing assignment next to any removed one is as\n                // good as any.\n                for (let i = 0, l = records.length; i < l && !moveTo; i++) {\n                    const assignment = records[i];\n\n                    if (assignment.resource && assignment.resource.isModel) {\n                        // Find next record\n                        let next = me.getNext(assignment);\n\n                        // If next record is not found or also removed, look for previous. This should not become a\n                        // performance bottleneck because we only can get to this code if project is committing, if\n                        // records are removed on a dragdrop listener and user pressed any key after mousedown, or if\n                        // user is operating with a keyboard and pressed [DELETE] to remove multiple records.\n                        if (!next || records.includes(next)) {\n                            next = me.getPrevious(assignment);\n                        }\n\n                        if (next && !records.includes(next)) {\n                            moveTo = next;\n                        }\n                    }\n                }\n            }\n\n            // Move focus away from the element which will soon have no backing data.\n            if (moveTo) {\n                // Although removing records from assignment store will trigger project commit and consequently\n                // `refresh` event on the project which will use this record to navigate to, some tests expect\n                // immediate navigation\n                me.navigateTo(moveTo);\n                me.navigateToAfterRefresh = moveTo;\n            }\n            // Focus must exit the Scheduler's subgrid, otherwise, if a navigation\n            // key gesture is delivered before the outgoing event's element has faded\n            // out and been removed, navigation will be attempted from a deleted\n            // event. Animated hiding is problematic.\n            //\n            // We cannot just revertFocus() because that might move focus back to an\n            // element in a floating EventEditor which is not yet faded out and\n            // been removed. Animated hiding is problematic.\n            //\n            // We cannot focus scheduler.timeAxisColumn.element because the browser\n            // would scroll it in some way if we have horizontal overflow.\n            //\n            // The only thing we can know about to focus here is the Scheduler itself.\n            else {\n                DomHelper.focusWithoutScrolling(me.focusElement);\n            }\n        }\n    }\n\n    //endregion\n\n    //region TimeRangeStore & TimeRanges\n\n    /**\n     * Inline time ranges, will be loaded into an internally created store if {@link Scheduler.feature.TimeRanges}\n     * is enabled.\n     * @config {Scheduler.model.TimeSpan[]|TimeSpanConfig[]} timeRanges\n     * @category Data\n     */\n\n    /**\n     * Get/set time ranges, applies to the backing project's TimeRangeStore.\n     * @member {Scheduler.model.TimeSpan[]} timeRanges\n     * @accepts {Scheduler.model.TimeSpan[]|TimeSpanConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the time ranges store instance or config object for {@link Scheduler.feature.TimeRanges} feature.\n     * @member {Core.data.Store} timeRangeStore\n     * @accepts {Core.data.Store|StoreConfig}\n     * @category Data\n     */\n\n    /**\n     * The time ranges store instance for {@link Scheduler.feature.TimeRanges} feature.\n     * @config {Core.data.Store|StoreConfig} timeRangeStore\n     * @category Data\n     */\n\n    set timeRanges(timeRanges) {\n        this.project.timeRanges = timeRanges;\n    }\n\n    get timeRanges() {\n        return this.project.timeRanges;\n    }\n\n    //endregion\n\n    //region ResourceTimeRangeStore\n\n    /**\n     * Inline resource time ranges, will be loaded into an internally created store if\n     * {@link Scheduler.feature.ResourceTimeRanges} is enabled.\n     * @prp {Scheduler.model.ResourceTimeRangeModel[]} resourceTimeRanges\n     * @accepts {Scheduler.model.ResourceTimeRangeModel[]|ResourceTimeRangeModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the resource time ranges store instance for {@link Scheduler.feature.ResourceTimeRanges} feature.\n     * @member {Scheduler.data.ResourceTimeRangeStore} resourceTimeRangeStore\n     * @accepts {Scheduler.data.ResourceTimeRangeStore|ResourceTimeRangeStoreConfig}\n     * @category Data\n     */\n\n    /**\n     * Resource time ranges store instance or config object for {@link Scheduler.feature.ResourceTimeRanges} feature.\n     * @config {Scheduler.data.ResourceTimeRangeStore|ResourceTimeRangeStoreConfig} resourceTimeRangeStore\n     * @category Data\n     */\n\n    set resourceTimeRanges(resourceTimeRanges) {\n        this.project.resourceTimeRanges = resourceTimeRanges;\n    }\n\n    get resourceTimeRanges() {\n        return this.project.resourceTimeRanges;\n    }\n\n    //endregion\n\n    //region Other functions\n\n    onBeforeLoad({ params }) {\n        this.applyStartEndParameters(params);\n    }\n\n    /**\n     * Get events grouped by timeAxis ticks from resources array\n     * @category Data\n     * @param {Scheduler.model.ResourceModel[]} resources An array of resources to process. If not passed, all resources\n     * will be used.\n     * @param {Function} filterFn filter function to filter events if required. Optional.\n     * @private\n     */\n    getResourcesEventsPerTick(resources, filterFn) {\n        const\n            { timeAxis, resourceStore } = this,\n            eventsByTick                = [];\n\n        resources = resources || resourceStore.records;\n        resources.forEach(resource => {\n            resource.events.forEach(event => {\n                if (!timeAxis.isTimeSpanInAxis(event) || (filterFn && !filterFn.call(this, { resource, event }))) {\n                    return;\n                }\n                // getTickFromDate may return float if event starts/ends in a middle of a tick\n                let startTick = Math.floor(timeAxis.getTickFromDate(event.startDate)),\n                    endTick = Math.ceil(timeAxis.getTickFromDate(event.endDate));\n\n                // if startDate/endDate of the event is out of timeAxis' bounds, use first/last tick id instead\n                if (startTick == -1) {\n                    startTick = 0;\n                }\n\n                if (endTick === -1) {\n                    endTick = timeAxis.ticks.length;\n                }\n\n                do {\n                    if (!eventsByTick[startTick]) {\n                        eventsByTick[startTick] = [event];\n                    }\n                    else {\n                        eventsByTick[startTick].push(event);\n                    }\n                } while (++startTick < endTick);\n            });\n        });\n\n        return eventsByTick;\n    }\n\n    //endregion\n\n    //region WidgetClass\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n\n    //endregion\n};\n","import Base from '../../../Core/Base.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\n\n/**\n * @module Scheduler/view/mixin/SchedulerScroll\n */\n\nconst\n    defaultScrollOptions = {\n        block      : 'nearest',\n        edgeOffset : 20\n    },\n    unrenderedScrollOptions = {\n        highlight : false,\n        focus     : false\n    };\n\n/**\n * Functions for scrolling to events, dates etc.\n *\n * @mixin\n */\nexport default Target => class SchedulerScroll extends (Target || Base) {\n    static get $name() {\n        return 'SchedulerScroll';\n    }\n\n    //region Scroll to event\n\n    /**\n     * Scrolls an event record into the viewport.\n     * If the resource store is a tree store, this method will also expand all relevant parent nodes to locate the event.\n     *\n     * This function is not applicable for events with multiple assignments, please use #scrollResourceEventIntoView instead.\n     *\n     * @param {Scheduler.model.EventModel} eventRecord the event record to scroll into view\n     * @param {ScrollOptions} [options] How to scroll.\n     * @returns {Promise} A Promise which resolves when the scrolling is complete.\n     * @async\n     * @category Scrolling\n     */\n    async scrollEventIntoView(eventRecord, options = defaultScrollOptions) {\n        const\n            me        = this,\n            resources = eventRecord.resources || [eventRecord];\n\n        if (resources.length > 1) {\n            throw new Error('scrollEventIntoView() is not applicable for events with multiple assignments, please use scrollResourceEventIntoView() instead.');\n        }\n\n        if (!resources.length) {\n            console.warn('You have asked to scroll to an event which is not assigned to a resource');\n        }\n\n        await me.scrollResourceEventIntoView(resources[0], eventRecord, options);\n    }\n\n    /**\n     * Scrolls an assignment record into the viewport.\n     *\n     * If the resource store is a tree store, this method will also expand all relevant parent nodes\n     * to locate the event.\n     *\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord A resource record an event record is assigned to\n     * @param {ScrollOptions} [options] How to scroll.\n     * @returns {Promise} A Promise which resolves when the scrolling is complete.\n     * @category Scrolling\n     */\n    scrollAssignmentIntoView(assignmentRecord, ...args) {\n        return this.scrollResourceEventIntoView(assignmentRecord.resource, assignmentRecord.event, ...args);\n    }\n\n    /**\n     * Scrolls a resource event record into the viewport.\n     *\n     * If the resource store is a tree store, this method will also expand all relevant parent nodes\n     * to locate the event.\n     *\n     * @param {Scheduler.model.ResourceModel} resourceRecord A resource record an event record is assigned to\n     * @param {Scheduler.model.EventModel} eventRecord An event record to scroll into view\n     * @param {ScrollOptions} [options] How to scroll.\n     * @returns {Promise} A Promise which resolves when the scrolling is complete.\n     * @category Scrolling\n     * @async\n     */\n    async scrollResourceEventIntoView(resourceRecord, eventRecord, options = defaultScrollOptions) {\n        const\n            me             = this,\n            eventStart     = eventRecord.startDate,\n            eventEnd       = eventRecord.endDate,\n            eventIsOutside = eventRecord.isScheduled && eventStart < me.timeAxis.startDate | ((eventEnd > me.timeAxis.endDate) << 1);\n\n        // <remove-on-release>\n        // TODO: Remove in 6.0\n        // </remove-on-release>\n        if (arguments.length > 3) {\n            options = arguments[3];\n        }\n\n        let el;\n\n        if (options.edgeOffset == null) {\n            options.edgeOffset = 20;\n        }\n\n        // Make sure event is within TimeAxis time span unless extendTimeAxis passed as false.\n        // The EventEdit feature passes false because it must not mutate the TimeAxis.\n        // Bitwise flag:\n        //  1 === start is before TimeAxis start.\n        //  2 === end is after TimeAxis end.\n        if (eventIsOutside && options.extendTimeAxis !== false) {\n            const currentTimeSpanRange = me.timeAxis.endDate - me.timeAxis.startDate;\n\n            // Event is too wide, expand the range to encompass it.\n            if (eventIsOutside === 3) {\n                await me.setTimeSpan(\n                    new Date(eventStart.valueOf() - currentTimeSpanRange / 2),\n                    new Date(eventEnd.valueOf()  + currentTimeSpanRange / 2)\n                );\n            }\n            else if (me.infiniteScroll) {\n                const\n                    { visibleDateRange } = me,\n                    visibleMS = visibleDateRange.endMS - visibleDateRange.startMS,\n                    // If event starts before time axis, scroll to a date one full viewport after target date\n                    // (reverse for an event starting after time axis), to allow a scroll animation\n                    sign = eventIsOutside & 1 ? 1 : -1;\n\n                await me.setTimeSpan(\n                    new Date(eventStart.valueOf()  - currentTimeSpanRange / 2),\n                    new Date(eventStart.valueOf() + currentTimeSpanRange / 2),\n                    {\n                        visibleDate : new Date(eventEnd.valueOf() + (sign * visibleMS))\n                    }\n                );\n            }\n            // Event is partially or wholly outside but will fit.\n            // Move the TimeAxis to include it. That will maintain visual position.\n            else {\n                // Event starts before\n                if (eventIsOutside & 1) {\n                    await me.setTimeSpan(\n                        new Date(eventStart),\n                        new Date(eventStart.valueOf() + currentTimeSpanRange)\n                    );\n                }\n                // Event ends after\n                else {\n                    await me.setTimeSpan(\n                        new Date(eventEnd.valueOf() - currentTimeSpanRange),\n                        new Date(eventEnd)\n                    );\n                }\n            }\n        }\n\n        if (me.store.tree) {\n            // If we're a tree, ensure parents are expanded first\n            await me.expandTo?.(resourceRecord);\n        }\n\n        // Handle nested events too\n        if (eventRecord.parent && !eventRecord.parent.isRoot) {\n            await this.scrollEventIntoView(eventRecord.parent);\n        }\n\n        // Establishing element to scroll to\n        el = me.getElementFromEventRecord(eventRecord, resourceRecord);\n\n        if (el) {\n            // It's usually the event wrapper that holds focus\n            if (!DomHelper.isFocusable(el)) {\n                el = el.parentNode;\n            }\n\n            const scroller = me.timeAxisSubGrid.scrollable;\n\n            // Scroll into view with animation and highlighting if needed.\n            await scroller.scrollIntoView(el, options);\n        }\n        // If event is fully outside the range, and we are not allowed to extend\n        // the range, then we cannot perform the operation.\n        else if (eventIsOutside === 3 && options.extendTimeAxis === false) {\n            console.warn('You have asked to scroll to an event which is outside the current view and extending timeaxis is disabled');\n        }\n        else if (!eventRecord.isOccurrence && !me.eventStore.isAvailable(eventRecord)) {\n            console.warn('You have asked to scroll to an event which is not available');\n        }\n        else if (eventRecord.isScheduled) {\n            // Event scheduled but not rendered, scroll to calculated location\n            await me.scrollUnrenderedEventIntoView(resourceRecord, eventRecord, options);\n        }\n        else {\n            // Event not scheduled, just scroll resource row into view\n            await me.scrollResourceIntoView(resourceRecord, options);\n        }\n    }\n\n    /**\n     * Scrolls an unrendered event into view. Internal function used from #scrollResourceEventIntoView.\n     * @private\n     * @category Scrolling\n     */\n    scrollUnrenderedEventIntoView(resourceRec, eventRec, options = defaultScrollOptions) {\n        // We must only resolve when the event's element has been painted\n        // *and* the scroll has fully completed.\n        return new Promise(resolve => {\n            const\n                me               = this,\n                // Knock out highlight and focus options. They must be applied after the scroll\n                // has fully completed and we have an element. Use a default edgeOffset of 20.\n                modifiedOptions  = Object.assign({ edgeOffset : 20 }, options, unrenderedScrollOptions),\n                scroller         = me.timeAxisSubGrid.scrollable,\n                box              = me.getResourceEventBox(eventRec, resourceRec),\n                scrollerViewport = scroller.viewport;\n\n            // Event may fall on a time not included by workingTime settings\n            if (!scrollerViewport || !box) {\n                resolve();\n                return;\n            }\n\n            // In case of subPixel position, scroll the whole pixel into view\n            box.x = Math.ceil(box.x);\n            box.y = Math.ceil(box.y);\n\n            if (me.rtl) {\n                // RTL scrolls in negative direction but coordinates are still LTR\n                box.translate(-me.timeAxisViewModel.totalSize + scrollerViewport.width, 0);\n            }\n\n            // Note use of scroller.scrollLeft here. We need the natural DOM scrollLeft value\n            // not the +ve X position along the scrolling axis.\n            box.translate(scrollerViewport.x - scroller.scrollLeft, scrollerViewport.y - scroller.y);\n\n            const\n                // delta         = scroller.getDeltaTo(box, modifiedOptions)[me.isHorizontal ? 'xDelta' : 'yDelta'],\n                onEventRender = async({ eventRecord, element, targetElement }) => {\n                    if (eventRecord === eventRec) {\n                        // Vertical's renderEvent is different to horizontal's\n                        const el = element || targetElement;\n\n                        detacher();\n\n                        // Don't resolve until the scroll has fully completed.\n                        await initialScrollPromise;\n\n                        options.highlight && DomHelper.highlight(el);\n                        options.focus && el.focus();\n\n                        resolve();\n                    }\n                },\n                // On either paint or repaint of the event, resolve the scroll promise and detach the listeners.\n                detacher = me.ion({\n                    renderEvent : onEventRender\n                }),\n                initialScrollPromise = scroller.scrollIntoView(box, modifiedOptions);\n\n            initialScrollPromise.then(() => {\n                if (initialScrollPromise.cancelled) {\n                    resolve();\n                }\n            });\n        });\n    }\n\n    /**\n     * Scrolls the specified resource into view, works for both horizontal and vertical modes.\n     * @param {Scheduler.model.ResourceModel} resourceRecord A resource record an event record is assigned to\n     * @param {ScrollOptions} [options] How to scroll.\n     * @returns {Promise} A promise which is resolved when the scrolling has finished.\n     * @category Scrolling\n     */\n    scrollResourceIntoView(resourceRecord, options = defaultScrollOptions) {\n        if (this.isVertical) {\n            return this.currentOrientation.scrollResourceIntoView(resourceRecord, options);\n        }\n        return this.scrollRowIntoView(resourceRecord, options);\n    }\n\n    //endregion\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Scheduler/view/mixin/SchedulerRegions\n */\n\n/**\n * Functions to get regions (bounding boxes) for scheduler, events etc.\n *\n * @mixin\n */\nexport default Target => class SchedulerRegions extends (Target || Base) {\n    static get $name() {\n        return 'SchedulerRegions';\n    }\n\n    //region Orientation dependent regions\n\n    /**\n     * Gets the region represented by the schedule and optionally only for a single resource. The view will ask the\n     * scheduler for the resource availability by calling getResourceAvailability. By overriding that method you can\n     * constrain events differently for different resources.\n     * @param {Scheduler.model.ResourceModel} resourceRecord (optional) The resource record\n     * @param {Scheduler.model.EventModel} eventRecord (optional) The event record\n     * @returns {Core.helper.util.Rectangle} The region of the schedule\n     */\n    getScheduleRegion(resourceRecord, eventRecord, local = true, dateConstraints) {\n        return this.currentOrientation.getScheduleRegion(...arguments);\n    }\n\n    /**\n     * Gets the region, relative to the timeline view element, representing the passed resource and optionally just for a certain date interval.\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource record\n     * @param {Date} startDate A start date constraining the region\n     * @param {Date} endDate An end date constraining the region\n     * @returns {Core.helper.util.Rectangle} A Rectangle which encapsulates the resource time span\n     */\n    getResourceRegion(resourceRecord, startDate, endDate) {\n        return this.currentOrientation.getRowRegion(...arguments);\n    }\n\n    //endregion\n\n    //region ResourceEventBox\n\n    getAssignmentEventBox(assignmentRecord, includesOutside) {\n        return this.getResourceEventBox(assignmentRecord.event, assignmentRecord.resource, includesOutside);\n    }\n\n    /**\n     * Get the region for a specified resources specified event.\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @param {Scheduler.model.ResourceModel} resourceRecord\n     * @param {Boolean} includeOutside Specify true to get boxes for events outside of the rendered zone in both\n     *   dimensions. This option is used when calculating dependency lines, and we need to include routes from events\n     *   which may be outside the rendered zone.\n     * @returns {Core.helper.util.Rectangle}\n     */\n    getResourceEventBox(eventRecord, resourceRecord, includeOutside = false, roughly = false) {\n        return this.currentOrientation.getResourceEventBox(...arguments);\n    }\n\n    //endregion\n\n    //region Item box\n\n    /**\n     * Gets box for displayed item designated by the record. If several boxes are displayed for the given item\n     * then the method returns all of them. Box coordinates are in view coordinate system.\n     *\n     * Boxes outside scheduling view timeaxis timespan and inside collapsed rows (if row defining store is a tree store)\n     * will not be returned. Boxes outside scheduling view vertical visible area (i.e. boxes above currently visible\n     * top row or below currently visible bottom row) will be calculated approximately.\n     *\n     * @param {Scheduler.model.EventModel} event\n     * @returns {Object|Object[]}\n     * @returns {Boolean} return.isPainted Whether the box was calculated for the rendered scheduled record or was\n     *    approximately calculated for the scheduled record outside of the current vertical view area.\n     * @returns {Number} return.top\n     * @returns {Number} return.bottom\n     * @returns {Number} return.start\n     * @returns {Number} return.end\n     * @returns {'before'|'after'} return.relPos if the item is not rendered then provides a view relative\n     * position one of 'before', 'after'\n     * @internal\n     */\n    getItemBox(event, includeOutside = false) {\n        return event.resources.map(resource => this.getResourceEventBox(event, resource, includeOutside));\n    }\n\n    //endregion\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Scheduler/view/mixin/SchedulerState\n */\n\nconst copyProperties = [\n    'eventLayout',\n    'mode',\n    'eventColor',\n    'eventStyle',\n    'tickSize',\n    'fillTicks'\n];\n\n/**\n * A Mixin for Scheduler that handles state. It serializes the following scheduler properties, in addition to what\n * is already stored by its superclass {@link Grid/view/mixin/GridState}:\n *\n * * eventLayout\n * * barMargin\n * * mode\n * * tickSize\n * * zoomLevel\n * * eventColor\n * * eventStyle\n *\n * See {@link Grid.view.mixin.GridState} and {@link Core.mixin.State} for more information on state.\n *\n * @mixin\n */\nexport default Target => class SchedulerState extends (Target || Base) {\n    static get $name() {\n        return 'SchedulerState';\n    }\n\n    /**\n     * Gets or sets scheduler's state. Check out {@link Scheduler.view.mixin.SchedulerState} mixin\n     * and {@link Grid.view.mixin.GridState} for more details.\n     * @member {Object} state\n     * @property {String} state.eventLayout\n     * @property {String} state.eventStyle\n     * @property {String} state.eventColor\n     * @property {Number} state.barMargin\n     * @property {Number} state.tickSize\n     * @property {Boolean} state.fillTicks\n     * @property {Number} state.zoomLevel\n     * @property {'horizontal'|'vertical'} state.mode\n     * @property {Object[]} state.columns\n     * @property {Boolean} state.readOnly\n     * @property {Number} state.rowHeight\n     * @property {Object} state.scroll\n     * @property {Number} state.scroll.scrollLeft\n     * @property {Number} state.scroll.scrollTop\n     * @property {Array} state.selectedRecords\n     * @property {String} state.selectedCell\n     * @property {String} state.style\n     * @property {Object} state.subGrids\n     * @property {Object} state.store\n     * @property {Object} state.store.sorters\n     * @property {Object} state.store.groupers\n     * @property {Object} state.store.filters\n     * @category State\n     */\n\n    /**\n     * Get scheduler's current state for serialization. State includes rowHeight, headerHeight, readOnly, selectedCell,\n     * selectedRecordId, column states and store state etc.\n     * @returns {Object} State object to be serialized\n     * @private\n     */\n    getState() {\n        return ObjectHelper.copyProperties(super.getState(), this, copyProperties);\n    }\n\n    /**\n     * Apply previously stored state.\n     * @param {Object} state\n     * @private\n     */\n    applyState(state) {\n        this.suspendRefresh();\n\n        let propsToCopy = copyProperties.slice();\n\n        if (state?.eventLayout === 'layoutFn') {\n            delete state.eventLayout;\n            propsToCopy.splice(propsToCopy.indexOf('eventLayout'), 1);\n        }\n\n        // Zoom level will set tick size, no need to update model additionally\n        if (state?.zoomLevelOptions?.width) {\n            propsToCopy = propsToCopy.filter(p => p !== 'tickSize');\n        }\n\n        ObjectHelper.copyProperties(this, state, propsToCopy);\n\n        super.applyState(state);\n\n        this.resumeRefresh(true);\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport Collection from '../../../Core/util/Collection.js';\nimport ArrayHelper from '../../../Core/helper/ArrayHelper.js';\n\n/**\n * @module Scheduler/view/mixin/EventSelection\n */\n\n/**\n * Mixin that tracks event or assignment selection by clicking on one or more events in the scheduler.\n * @mixin\n */\nexport default Target => class EventSelection extends (Target || Base) {\n    static get $name() {\n        return 'EventSelection';\n    }\n\n    //region Default config\n\n    static get configurable() {\n        return {\n            /**\n             * Configure as `true`, or set property to `true` to highlight dependent events as well when selecting an event.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            highlightPredecessors : false,\n\n            /**\n             * Configure as `true`, or set property to `true` to highlight dependent events as well when selecting an event.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            highlightSuccessors : false,\n\n            /**\n             * Configure as `true` to deselect a selected event upon click.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            deselectOnClick : false,\n\n            /**\n             * Configure as `false` to preserve selection when clicking the empty schedule area.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            deselectAllOnScheduleClick : true,\n\n            /**\n             * Collection to store selection.\n             * @config {Core.util.Collection}\n             * @private\n             */\n            selectedCollection : {}\n        };\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Configure as `true` to allow `CTRL+click` to select multiple events in the scheduler.\n             * @config {Boolean}\n             * @category Selection\n             */\n            multiEventSelect : false,\n\n            /**\n             * Configure as `true`, or set property to `true` to disable event selection.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            eventSelectionDisabled : false,\n\n            /**\n             * CSS class to add to selected events.\n             * @config {String}\n             * @default\n             * @category CSS\n             * @private\n             */\n            eventSelectedCls : 'b-sch-event-selected',\n\n            /**\n             * Configure as `true` to trigger `selectionChange` when removing a selected event/assignment.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            triggerSelectionChangeOnRemove : false,\n\n            /**\n             * This flag controls whether Scheduler should preserve its selection of events when loading a new dataset\n             * (if selected event ids are included in the newly loaded dataset).\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            maintainSelectionOnDatasetChange : true,\n\n            /**\n             * CSS class to add to other instances of a selected event, to highlight them.\n             * @config {String}\n             * @default\n             * @category CSS\n             * @private\n             */\n            eventAssignHighlightCls : 'b-sch-event-assign-selected'\n        };\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fired any time there is a change to the events selected in the Scheduler.\n     * @event eventSelectionChange\n     * @param {'select'|'deselect'|'update'|'clear'} action One of the actions 'select', 'deselect', 'update',\n     * 'clear'\n     * @param {Scheduler.model.EventModel[]} selected An array of the Events added to the selection.\n     * @param {Scheduler.model.EventModel[]} deselected An array of the Event removed from the selection.\n     * @param {Scheduler.model.EventModel[]} selection The new selection.\n     */\n\n    /**\n     * Fired any time there is going to be a change to the events selected in the Scheduler.\n     * Returning `false` prevents the change\n     * @event beforeEventSelectionChange\n     * @preventable\n     * @param {String} action One of the actions 'select', 'deselect', 'update', 'clear'\n     * @param {Scheduler.model.EventModel[]} selected An array of events that will be added to the selection.\n     * @param {Scheduler.model.EventModel[]} deselected An array of events that will be removed from the selection.\n     * @param {Scheduler.model.EventModel[]} selection The currently selected events, before applying `selected` and `deselected`.\n     */\n\n    /**\n     * Fired any time there is a change to the assignments selected in the Scheduler.\n     * @event assignmentSelectionChange\n     * @param {'select'|'deselect'|'update'|'clear'} action One of the actions 'select', 'deselect', 'update',\n     * 'clear'\n     * @param {Scheduler.model.AssignmentModel[]} selected An array of the Assignments added to the selection.\n     * @param {Scheduler.model.AssignmentModel[]} deselected An array of the Assignments removed from the selection.\n     * @param {Scheduler.model.AssignmentModel[]} selection The new selection.\n     */\n\n    /**\n     * Fired any time there is going to be a change to the assignments selected in the Scheduler.\n     * Returning `false` prevents the change\n     * @event beforeAssignmentSelectionChange\n     * @preventable\n     * @param {String} action One of the actions 'select', 'deselect', 'update', 'clear'\n     * @param {Scheduler.model.EventModel[]} selected An array of assignments that will be added to the selection.\n     * @param {Scheduler.model.EventModel[]} deselected An array of assignments that will be removed from the selection.\n     * @param {Scheduler.model.EventModel[]} selection The currently selected assignments, before applying `selected` and `deselected`.\n     */\n\n    //endregion\n\n    //region Init\n\n    afterConstruct() {\n        super.afterConstruct();\n\n        this.navigator?.ion({\n            navigate : 'onEventNavigate',\n            thisObj  : this\n        });\n    }\n\n    //endregion\n\n    //region Selected Collection\n\n    changeSelectedCollection(selectedCollection) {\n        if (!selectedCollection.isCollection) {\n            selectedCollection = new Collection(selectedCollection);\n        }\n\n        return selectedCollection;\n    }\n\n    updateSelectedCollection(selectedCollection) {\n        const me = this;\n\n        // When sharing collection, only the owner should destroy it\n        if (!selectedCollection.owner) {\n            selectedCollection.owner = me;\n        }\n\n        // Fire row change events from onSelectedCollectionChange\n        selectedCollection.ion({\n            change : (...args) => me.project.deferUntilRepopulationIfNeeded(\n                'onSelectedCollectionChange',\n                (...args) => !me.isDestroying && me.onSelectedCollectionChange(...args),\n                args\n            ),\n            // deferring this handler breaks the UI\n            beforeSplice : 'onBeforeSelectedCollectionSplice',\n            thisObj      : me\n        });\n    }\n\n    get selectedCollection() {\n        return this._selectedCollection;\n    }\n\n    getActionType(selection, selected, deselected) {\n        return (selection.length > 0)\n            ? ((selected.length > 0 && deselected.length > 0)\n                ? 'update'\n                : (selected.length > 0\n                    ? 'select'\n                    : 'deselect'))\n            : 'clear';\n    }\n\n    //endregion\n\n    //region Modify selection\n\n    getEventsFromAssignments(assignments) {\n        return ArrayHelper.unique(assignments.map(assignment => assignment.event));\n    }\n\n    /**\n     * The {@link Scheduler.model.EventModel events} which are selected.\n     * @property {Scheduler.model.EventModel[]}\n     * @category Selection\n     */\n    get selectedEvents() {\n        return this.getEventsFromAssignments(this.selectedCollection.values);\n    }\n\n    set selectedEvents(events) {\n        // Select all assignments\n        const assignments = [];\n\n        events = ArrayHelper.asArray(events);\n\n        events?.forEach(event => {\n            if (this.isEventSelectable(event) !== false) {\n                if (event.isOccurrence) {\n                    event.assignments.forEach(as => {\n                        assignments.push(this.assignmentStore.getOccurrence(as, event));\n                    });\n                }\n                else {\n                    assignments.push(...event.assignments);\n                }\n            }\n        });\n\n        // Replace the entire selected collection with the new record set\n        this.selectedCollection.splice(0, this.selectedCollection.count, assignments);\n    }\n\n    /**\n     * The {@link Scheduler.model.AssignmentModel events} which are selected.\n     * @property {Scheduler.model.AssignmentModel[]}\n     * @category Selection\n     */\n    get selectedAssignments() {\n        return this.selectedCollection.values;\n    }\n\n    set selectedAssignments(assignments) {\n        // Replace the entire selected collection with the new record set\n        this.selectedCollection.splice(0, this.selectedCollection.count, assignments || []);\n    }\n\n    /**\n     * Returns `true` if the {@link Scheduler.model.EventModel event} is selected.\n     * @param {Scheduler.model.EventModel} event The event\n     * @returns {Boolean} Returns `true` if the event is selected\n     * @category Selection\n     */\n    isEventSelected(event) {\n        const { selectedCollection } = this;\n\n        return Boolean(selectedCollection.count && selectedCollection.includes(event.assignments));\n    }\n\n    /**\n     * A template method (empty by default) allowing you to control if an event can be selected or not.\n     *\n     * ```javascript\n     * new Scheduler({\n     *     isEventSelectable(event) {\n     *         return event.startDate >= Date.now();\n     *     }\n     * })\n     * ```\n     *\n     * This selection process is applicable to calendar too:\n     *\n     * ```javascript\n     * new Calendar({\n     *     isEventSelectable(event) {\n     *         return event.startDate >= Date.now();\n     *     }\n     * })\n     * ```\n     *\n     * @param {Scheduler.model.EventModel} event The event record\n     * @returns {Boolean} true if event can be selected, otherwise false\n     * @prp {Function}\n     * @category Selection\n     */\n    isEventSelectable(event) {}\n\n    /**\n     * Returns `true` if the {@link Scheduler.model.AssignmentModel assignment} is selected.\n     * @param {Scheduler.model.AssignmentModel} assignment The assignment\n     * @returns {Boolean} Returns `true` if the assignment is selected\n     * @category Selection\n     */\n    isAssignmentSelected(assignment) {\n        return this.selectedCollection.includes(assignment);\n    }\n\n    /**\n     * Selects the passed {@link Scheduler.model.EventModel event} or {@link Scheduler.model.AssignmentModel assignment}\n     * *if it is not selected*. Selecting events results in all their assignments being selected.\n     * @param {Scheduler.model.EventModel|Scheduler.model.AssignmentModel} eventOrAssignment The event or assignment to select\n     * @param {Boolean} [preserveSelection] Pass `true` to preserve any other selected events or assignments\n     * @category Selection\n     */\n    select(eventOrAssignment, preserveSelection = false) {\n        if (eventOrAssignment.isAssignment) {\n            this.selectAssignment(eventOrAssignment, preserveSelection);\n        }\n        else {\n            this.selectEvent(eventOrAssignment, preserveSelection);\n        }\n    }\n\n    /**\n     * Selects the passed {@link Scheduler.model.EventModel event} *if it is not selected*. Selecting an event will\n     * select all its assignments.\n     * @param {Scheduler.model.EventModel} event The event to select\n     * @param {Boolean} [preserveSelection] Pass `true` to preserve any other selected events\n     * @category Selection\n     */\n    selectEvent(event, preserveSelection = false) {\n        // If the event is already selected, this is a no-op.\n        // In this case, selection must not be cleared even in the absence of preserveSelection\n        if (!this.isEventSelected(event)) {\n            this.selectEvents([event], preserveSelection);\n        }\n    }\n\n    /**\n     * Selects the passed {@link Scheduler.model.AssignmentModel assignment} *if it is not selected*.\n     * @param {Scheduler.model.AssignmentModel} assignment The assignment to select\n     * @param {Boolean} [preserveSelection] Pass `true` to preserve any other selected assignments\n     * @param {Event} [event] If this method was invoked as a result of a user action, this is the DOM event that triggered it\n     * @category Selection\n     */\n    selectAssignment(assignment, preserveSelection = false, event) {\n        // If the event is already selected, this is a no-op.\n        // In this case, selection must not be cleared even in the absence of preserveSelection\n        if (!this.isAssignmentSelected(assignment)) {\n            preserveSelection ? this.selectedCollection.add(assignment) : this.selectedAssignments = assignment;\n        }\n    }\n\n    /**\n     * Deselects the passed {@link Scheduler.model.EventModel event} or {@link Scheduler.model.AssignmentModel assignment}\n     * *if it is selected*.\n     * @param {Scheduler.model.EventModel|Scheduler.model.AssignmentModel} eventOrAssignment The event or assignment to deselect.\n     * @category Selection\n     */\n    deselect(eventOrAssignment) {\n        if (eventOrAssignment.isAssignment) {\n            this.deselectAssignment(eventOrAssignment);\n        }\n        else {\n            this.deselectEvent(eventOrAssignment);\n        }\n    }\n\n    /**\n     * Deselects the passed {@link Scheduler.model.EventModel event} *if it is selected*.\n     * @param {Scheduler.model.EventModel} event The event to deselect.\n     * @category Selection\n     */\n    deselectEvent(event) {\n        if (this.isEventSelected(event)) {\n            this.selectedCollection.remove(...event.assignments);\n        }\n    }\n\n    /**\n     * Deselects the passed {@link Scheduler.model.AssignmentModel assignment} *if it is selected*.\n     * @param {Scheduler.model.AssignmentModel} assignment The assignment to deselect\n     * @param {Event} [event] If this method was invoked as a result of a user action, this is the DOM event that triggered it\n     * @category Selection\n     */\n    deselectAssignment(assignment) {\n        if (this.isAssignmentSelected(assignment)) {\n            this.selectedCollection.remove(assignment);\n        }\n    }\n\n    /**\n     * Adds {@link Scheduler.model.EventModel events} to the selection.\n     * @param {Scheduler.model.EventModel[]} events Events to be selected\n     * @param {Boolean} [preserveSelection] Pass `true` to preserve any other selected events\n     * @category Selection\n     */\n    selectEvents(events, preserveSelection = false) {\n        if (preserveSelection) {\n            const assignments = (events.reduce((assignments, event) => {\n                if (this.isEventSelectable(event) !== false) {\n                    assignments.push(...event.assignments);\n                }\n                return assignments;\n            }, []));\n\n            this.selectedCollection.add(assignments);\n        }\n        else {\n            this.selectedEvents = events;\n        }\n    }\n\n    /**\n     * Removes {@link Scheduler.model.EventModel events} from the selection.\n     * @param {Scheduler.model.EventModel[]} events Events or assignments  to be deselected\n     * @category Selection\n     */\n    deselectEvents(events) {\n        this.selectedCollection.remove(events.reduce((assignments, event) => {\n            assignments.push(...event.assignments);\n            return assignments;\n        }, []));\n    }\n\n    /**\n     * Adds {@link Scheduler.model.AssignmentModel assignments} to the selection.\n     * @param {Scheduler.model.AssignmentModel[]} assignments Assignments to be selected\n     * @category Selection\n     */\n    selectAssignments(assignments) {\n        this.selectedCollection.add(assignments);\n    }\n\n    /**\n     * Removes {@link Scheduler.model.AssignmentModel assignments} from the selection.\n     * @param {Scheduler.model.AssignmentModel[]} assignments Assignments  to be deselected\n     * @category Selection\n     */\n    deselectAssignments(assignments) {\n        this.selectedCollection.remove(assignments);\n    }\n\n    /**\n     * Deselects all {@link Scheduler.model.EventModel events} and {@link Scheduler.model.AssignmentModel assignments}.\n     * @category Selection\n     */\n    clearEventSelection() {\n        this.selectedAssignments = [];\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Responds to mutations of the underlying selection Collection.\n     * Keeps the UI synced, eventSelectionChange and assignmentSelectionChange event is fired when `me.silent` is falsy.\n     * @private\n     */\n\n    onBeforeSelectedCollectionSplice({ toAdd, toRemove, index }) {\n        const\n            me = this,\n            selection = me._selectedCollection.values,\n            selected = toAdd,\n            deselected = toRemove > 0 ? selected.slice(index, toRemove + index) : [],\n            action = me.getActionType(selection, selected, deselected);\n\n        if (me.trigger('beforeEventSelectionChange', {\n            action,\n            selection  : me.getEventsFromAssignments(selection) || [],\n            selected   : me.getEventsFromAssignments(selected) || [],\n            deselected : me.getEventsFromAssignments(deselected) || []\n        }) === false) {\n            return false;\n        }\n\n        if (me.trigger('beforeAssignmentSelectionChange', {\n            action,\n            selection,\n            selected,\n            deselected\n        }) === false) {\n            return false;\n        }\n    }\n\n    onSelectedCollectionChange({ added, removed }) {\n        const\n            me         = this,\n            selection  = me.selectedAssignments,\n            selected   = added || [],\n            deselected = removed || [];\n\n        function updateSelection(assignmentRecord, select) {\n            const eventRecord    = assignmentRecord.event;\n\n            if (eventRecord) {\n                const\n                    { eventAssignHighlightCls } = me,\n                    element                     = me.getElementFromAssignmentRecord(assignmentRecord);\n\n                me.currentOrientation.toggleCls(assignmentRecord, me.eventSelectedCls, select);\n\n                eventAssignHighlightCls && me.getElementsFromEventRecord(eventRecord).forEach(el => {\n                    if (el !== element) {\n                        const otherAssignmentRecord = me.resolveAssignmentRecord(el);\n\n                        me.currentOrientation.toggleCls(otherAssignmentRecord, eventAssignHighlightCls, select);\n\n                        if (select) {\n                            // Need to force a reflow to get the highlightning animation triggered\n                            el.style.animation = 'none';\n                            el.offsetHeight;\n                            el.style.animation = '';\n                        }\n                        el.classList.toggle(eventAssignHighlightCls, select);\n                    }\n                });\n            }\n        }\n\n        deselected.forEach(record => updateSelection(record, false));\n        selected.forEach(record => updateSelection(record, true));\n\n        if (me.highlightSuccessors || me.highlightPredecessors) {\n            me.highlightLinkedEvents(me.selectedEvents);\n        }\n\n        // To be able to restore selection after reloading resources (which might lead to regenerated assignments in\n        // the single assignment scenario, so cannot rely on records or ids)\n        me.$selectedAssignments = selection.map(assignment => ({\n            eventId    : assignment.eventId,\n            resourceId : assignment.resourceId\n        }));\n\n        if (!me.silent) {\n            const action = this.getActionType(selection, selected, deselected);\n\n            me.trigger('assignmentSelectionChange', {\n                action,\n                selection,\n                selected,\n                deselected\n            });\n\n            me.trigger('eventSelectionChange', {\n                action,\n                selection  : me.selectedEvents,\n                selected   : me.getEventsFromAssignments(selected),\n                deselected : me.getEventsFromAssignments(deselected)\n            });\n        }\n    }\n\n    /**\n     * Assignment change listener to remove events from selection which are no longer in the assignments.\n     * @private\n     */\n    onAssignmentChange(event) {\n        super.onAssignmentChange(event);\n\n        const\n            me = this,\n            { action, records : assignments } = event;\n\n        me.silent = !me.triggerSelectionChangeOnRemove;\n\n        if (action === 'remove') {\n            me.deselectAssignments(assignments);\n        }\n        else if (action === 'removeall' && !me.eventStore.isSettingData) {\n            me.clearEventSelection();\n        }\n        else if (action === 'dataset' && me.$selectedAssignments) {\n            if (!me.maintainSelectionOnDatasetChange) {\n                me.clearEventSelection();\n            }\n            else {\n                const newAssignments = me.$selectedAssignments.map(selector =>\n                    assignments.find(a =>\n                        a.eventId === selector.eventId &&\n                        a.resourceId === selector.resourceId\n                    )\n                );\n\n                me.selectedAssignments = ArrayHelper.clean(newAssignments);\n            }\n        }\n\n        me.silent = false;\n    }\n\n    onInternalEventStoreChange({ source, action, records }) {\n        // Setting empty event dataset cannot be handled in onAssignmentChange above, no assignments might be affected\n        if (!source.isResourceTimeRangeStore && action === 'dataset' && !records.length) {\n            this.clearEventSelection();\n        }\n\n        super.onInternalEventStoreChange(...arguments);\n    }\n\n    /**\n     * Mouse listener to update selection.\n     * @private\n     */\n    onAssignmentSelectionClick(event, clickedRecord) {\n        const me = this;\n\n        // Multi selection: CTRL means preserve selection, just add or remove the event.\n        // Single selection: CTRL deselects already selected event\n        if (me.isAssignmentSelected(clickedRecord)) {\n            if (me.deselectOnClick || event.ctrlKey) {\n                me.deselectAssignment(clickedRecord, me.multiEventSelect, event);\n            }\n        }\n        else if (this.isEventSelectable(clickedRecord.event) !== false) {\n            me.selectAssignment(clickedRecord, event.ctrlKey && me.multiEventSelect, event);\n        }\n    }\n\n    /**\n     * Navigation listener to update selection.\n     * @private\n     */\n    onEventNavigate({ event, item }) {\n        if (!this.eventSelectionDisabled) {\n            const assignment = item && (item.nodeType === Element.ELEMENT_NODE ? this.resolveAssignmentRecord(item) : item);\n\n            if (assignment) {\n                this.onAssignmentSelectionClick(event, assignment);\n            }\n            // The click was not an event or assignment\n            else if (this.deselectAllOnScheduleClick) {\n                this.clearEventSelection();\n            }\n        }\n    }\n\n    changeHighlightSuccessors(value) {\n        return this.changeLinkedEvents(value);\n    }\n\n    changeHighlightPredecessors(value) {\n        return this.changeLinkedEvents(value);\n    }\n\n    changeLinkedEvents(value) {\n        const me = this;\n\n        if (value) {\n            me.highlighted = me.highlighted || new Set();\n\n            me.highlightLinkedEvents(me.selectedEvents);\n        }\n        else if (me.highlighted) {\n            me.highlightLinkedEvents();\n        }\n\n        return value;\n    }\n\n    // Function that highlights/unhighlights events in a dependency chain\n    highlightLinkedEvents(eventRecords = []) {\n        const\n            me                  = this,\n            {\n                highlighted,\n                eventStore\n            }                   = me,\n            dependenciesFeature = me.features.dependencies;\n\n        // Unhighlight previously highlighted records\n        highlighted.forEach(eventRecord => {\n            if (!eventRecords.includes(eventRecord)) {\n                eventRecord.meta.highlight = false;\n                highlighted.delete(eventRecord);\n\n                if (eventStore.includes(eventRecord)) {\n                    eventRecord.dependencies.forEach(dep => dependenciesFeature.unhighlight(dep, 'b-highlight'));\n                }\n            }\n        });\n\n        eventRecords.forEach(eventRecord => {\n            const toWalk = [eventRecord];\n\n            // Collect all events along the dependency chain\n            while (toWalk.length) {\n                const record = toWalk.pop();\n\n                highlighted.add(record);\n\n                if (me.highlightSuccessors) {\n                    record.outgoingDeps.forEach(outgoing => {\n                        dependenciesFeature.highlight(outgoing, 'b-highlight');\n                        !highlighted.has(outgoing.toEvent) && toWalk.push(outgoing.toEvent);\n                    });\n                }\n                if (me.highlightPredecessors) {\n                    record.incomingDeps.forEach(incoming => {\n                        dependenciesFeature.highlight(incoming, 'b-highlight');\n                        !highlighted.has(incoming.fromEvent) && toWalk.push(incoming.fromEvent);\n                    });\n                }\n            }\n\n            // Highlight them\n            highlighted.forEach(record => record.meta.highlight = true);\n        });\n\n        // Toggle flag on schedulers element, to fade others in or out\n        me.element.classList.toggle('b-highlighting', eventRecords.length > 0);\n\n        me.refreshWithTransition();\n    }\n\n    onEventDataGenerated(renderData) {\n        if (this.highlightSuccessors || this.highlightPredecessors) {\n            renderData.cls['b-highlight'] = renderData.eventRecord.meta.highlight;\n        }\n        super.onEventDataGenerated(renderData);\n    }\n\n    updateProject(project, old) {\n        // Clear selection when the whole world shifts :)\n        this.clearEventSelection();\n\n        super.updateProject(project, old);\n    }\n\n    //endregion\n\n    doDestroy() {\n        this._selectedCollection?.owner === this && this._selectedCollection.destroy();\n\n        super.doDestroy();\n    }\n\n    //region Getters/Setters\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n\n    //endregion\n};\n","import Base from '../../../Core/Base.js';\nimport Navigator from '../../../Core/helper/util/Navigator.js';\nimport Delayable from '../../../Core/mixin/Delayable.js';\nimport Location from '../../../Grid/util/Location.js';\n\n/**\n * @module Scheduler/view/mixin/EventNavigation\n */\n\nconst\n    preventDefault  = e => e.preventDefault(),\n    isArrowKey = {\n        ArrowRight : 1,\n        ArrowLeft  : 1,\n        ArrowUp    : 1,\n        ArrowDown  : 1\n    },\n    animate100 = {\n        animate : 100\n    },\n    emptyObject = Object.freeze({});\n\n/**\n * Mixin that tracks event or assignment selection by clicking on one or more events in the scheduler.\n * @mixin\n */\nexport default Target => class EventNavigation extends Delayable(Target || Base) {\n    static get $name() {\n        return 'EventNavigation';\n    }\n\n    //region Default config\n\n    static get configurable() {\n        return {\n            /**\n             * A config object to use when creating the {@link Core.helper.util.Navigator}\n             * to use to perform keyboard navigation in the timeline.\n             * @config {NavigatorConfig}\n             * @default\n             * @category Misc\n             * @internal\n             */\n            navigator : {\n                allowCtrlKey   : true,\n                scrollSilently : true,\n                keys           : {\n                    Space     : 'onEventSpaceKey',\n                    Enter     : 'onEventEnterKey',\n                    Delete    : 'onDeleteKey',\n                    Backspace : 'onDeleteKey',\n                    ArrowUp   : 'onArrowUpKey',\n                    ArrowDown : 'onArrowDownKey',\n                    Escape    : 'onEscapeKey',\n\n                    // These are processed by GridNavigation's handlers\n                    Tab         : 'onTab',\n                    'SHIFT+Tab' : 'onShiftTab'\n                }\n            },\n\n            isNavigationKey : {\n                ArrowDown  : 1,\n                ArrowUp    : 1,\n                ArrowLeft  : 1,\n                ArrowRight : 1\n            }\n        };\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * A CSS class name to add to focused events.\n             * @config {String}\n             * @default\n             * @category CSS\n             * @private\n             */\n            focusCls : 'b-active',\n\n            /**\n             * Allow using [Delete] and [Backspace] to remove events/assignments\n             * @config {Boolean}\n             * @default\n             * @category Misc\n             */\n            enableDeleteKey : true,\n\n            // Number in milliseconds to buffer handlers execution. See `Delayable.throttle` function docs.\n            onDeleteKeyBuffer      : 500,\n            navigatePreviousBuffer : 200,\n            navigateNextBuffer     : 200,\n\n            testConfig : {\n                onDeleteKeyBuffer : 1\n            }\n        };\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fired when a user gesture causes the active item to change.\n     * @event navigate\n     * @param {Event} event The browser event which instigated navigation. May be a click or key or focus event.\n     * @param {HTMLElement|null} item The newly active item, or `null` if focus moved out.\n     * @param {HTMLElement|null} oldItem The previously active item, or `null` if focus is moving in.\n     */\n\n    //endregion\n\n    construct(config) {\n        const me = this;\n\n        me.isInTimeAxis = me.isInTimeAxis.bind(me);\n        me.onDeleteKey = me.throttle(me.onDeleteKey, me.onDeleteKeyBuffer, me);\n\n        super.construct(config);\n    }\n\n    changeNavigator(navigator) {\n        const me = this;\n\n        me.getConfig('subGridConfigs');\n\n        return new Navigator(me.constructor.mergeConfigs({\n            ownerCmp         : me,\n            target           : me.timeAxisSubGridElement,\n            processEvent     : me.processEvent,\n            itemSelector     : `.${me.eventCls}-wrap`,\n            focusCls         : me.focusCls,\n            navigatePrevious : me.throttle(me.navigatePrevious, { delay : me.navigatePreviousBuffer, throttled : preventDefault }),\n            navigateNext     : me.throttle(me.navigateNext, { delay : me.navigateNextBuffer, throttled : preventDefault })\n        }, navigator));\n    }\n\n    doDestroy() {\n        this.navigator.destroy();\n        super.doDestroy();\n    }\n\n    isInTimeAxis(record) {\n        // If event is hidden by workingTime configs, horizontal mapper would raise a flag on instance meta\n        // We still need to check if time span is included in axis\n        return !record.instanceMeta(this).excluded && this.timeAxis.isTimeSpanInAxis(record);\n    }\n\n    onElementKeyDown(keyEvent) {\n        const\n            me              = this,\n            { navigator }   = me;\n\n        // If we're focused in the time axis, and *not* on an event, then ENTER means\n        // jump down into the first visible assignment in the cell.\n        if (me.focusedCell?.rowIndex !== -1 && me.focusedCell?.column === me.timeAxisColumn && !keyEvent.target.closest(navigator.itemSelector) && keyEvent.key === 'Enter') {\n            const firstAssignment = me.getFirstVisibleAssignment();\n            if (firstAssignment) {\n                me.navigateTo(firstAssignment, {\n                    uiEvent : keyEvent\n                });\n                return false;\n            }\n        }\n        else {\n            super.onElementKeyDown?.(keyEvent);\n        }\n    }\n\n    getFirstVisibleAssignment(location = this.focusedCell) {\n        const\n            me = this,\n            {\n                currentOrientation,\n                rowManager,\n                eventStore\n            } = me;\n\n        if (me.isHorizontal) {\n            let renderedEvents = currentOrientation.rowMap.get(rowManager.getRow(location.rowIndex));\n\n            if (renderedEvents?.length) {\n                return renderedEvents[0]?.elementData.assignmentRecord;\n            }\n            else {\n                renderedEvents = currentOrientation.resourceMap.get(location.id)?.eventsData;\n                if (renderedEvents?.length) {\n                    // When events are gathered from resource, we need to check they're available\n                    return renderedEvents.filter(e => eventStore.isAvailable(e.eventRecord))[0]?.assignmentRecord;\n                }\n            }\n        }\n        else {\n            const\n                firstResource = [...currentOrientation.resourceMap.values()][0],\n                renderedEvents = firstResource && Object.values(firstResource);\n\n            if (renderedEvents?.length) {\n                return renderedEvents.filter(e => eventStore.isAvailable(e.renderData.eventRecord))[0].renderData.assignmentRecord;\n            }\n        }\n    }\n\n    onGridBodyFocusIn(focusEvent) {\n        const isGridCellFocus = focusEvent.target.closest(this.focusableSelector);\n\n        // Event navigation only has a say when navigation is inside the TimeAxisSubGrid\n        if (this.timeAxisSubGridElement.contains(focusEvent.target)) {\n            const\n                me                  = this,\n                { navigationEvent } = me,\n                { target }          = focusEvent,\n                eventFocus          = target.closest(me.navigator.itemSelector),\n                destinationCell     = eventFocus ? me.normalizeCellContext({\n                    rowIndex : me.isVertical ? 0\n                        : me.resourceStore.indexOf(me.resolveResourceRecord(target)),\n                    column : me.timeAxisColumn,\n                    target\n                }) : new Location(target);\n\n            // Don't take over what the event navigator does if it's doing event navigation.\n            // Just silently cache our actionable location.\n            if (eventFocus) {\n                const { _focusedCell } = me;\n\n                me._focusedCell = destinationCell;\n                me.onCellNavigate?.(me, _focusedCell, destinationCell, navigationEvent, true);\n                return;\n            }\n\n            // Depending on how we got here, try to focus the first event in the cell *if we're in a cell*.\n            if (isGridCellFocus && (!navigationEvent || isArrowKey[navigationEvent.key])) {\n                const firstAssignment = me.getFirstVisibleAssignment(destinationCell);\n                if (firstAssignment) {\n                    me.navigateTo(firstAssignment, {\n                        // Only change scroll if focus came from key press\n                        scrollIntoView : Boolean(navigationEvent && navigationEvent.type !== 'mousedown'),\n                        uiEvent        : navigationEvent || focusEvent\n                    });\n                    return;\n                }\n            }\n        }\n\n        // Grid-level focus movement, let superclass handle it.\n        if (isGridCellFocus) {\n            super.onGridBodyFocusIn(focusEvent);\n        }\n    }\n\n    /*\n     * Override of GridNavigation#focusCell method to handle the TimeAxisColumn.\n     * Not needed until we implement full keyboard accessibility.\n     */\n    accessibleFocusCell(cellSelector, options) {\n        const me                     = this;\n\n        cellSelector = me.normalizeCellContext(cellSelector);\n\n        if (cellSelector.columnId === me.timeAxisColumn.id) {\n            // <remove-on-release>\n\n            // const lastFocusedCell        = me.lastFocusedCell = me._focusedCell,\n            //     lastFocusedCellElement = lastFocusedCell && me.getCell(lastFocusedCell),\n            //     newCell = me.getCell(cellSelector),\n            //     // Flag if the lastFocusedCellElement is DOCUMENT_POSITION_FOLLOWING newCell\n            //     backwards = !!(lastFocusedCellElement && (newCell.compareDocumentPosition(lastFocusedCellElement) & 4));\n\n            // // Navigating into the Scheduler, need to enable this back (for situations where we know focus was requested as a result of a keyboard input)...\n            // let newEvent = me.getRecordFromElement(newCell);\n\n            // me._focusedCell = cellSelector;\n\n            // // Scheduler where row is a Resource which might have many events\n            // // TODO: https://app.assembla.com/spaces/bryntum/tickets/6526 this class should\n            // // not know about Gantt.\n            // if (!newEvent.isTask) {\n            //     const resourceEvents = newEvent.getEvents().filter(me.isInTimeAxis).sort(sortByStartDate);\n            //     newEvent = resourceEvents[backwards ? resourceEvents.length - 1 : 0];\n            // }\n\n            // options.event.eventRecord = newEvent;\n\n            // if (newEvent && me.activeEvent !== newEvent) {\n            //     lastFocusedCellElement && lastFocusedCellElement.classList.remove('b-focused');\n            //     me.scrollResourceEventIntoView(me.store.getById(cellSelector.id), newEvent, {\n            //         animate : 100\n            //     }).then(() => {\n            //         me.activeEvent = newEvent;\n            //     });\n            // }\n\n            // </remove-on-release>\n        }\n        else {\n            return super.focusCell(cellSelector, options);\n        }\n    }\n\n    // Interface method to extract the navigated to record from a populated 'navigate' event.\n    // Gantt, Scheduler and Calendar handle event differently, adding different properties to it.\n    // This method is meant to be overridden to return correct target from event\n    normalizeTarget(event) {\n        return event.assignmentRecord;\n    }\n\n    getPrevious(assignmentRecord, isDelete) {\n        const\n            me                     = this,\n            { resourceStore }      = me,\n            { eventSorter }        = me.currentOrientation,\n            // start/end dates are required to limit time span to look at in case recurrence feature is enabled\n            { startDate, endDate } = me.timeAxis,\n            eventRecord            = assignmentRecord.event,\n            resourceEvents         = me.eventStore\n                .getEvents({\n                    resourceRecord : assignmentRecord.resource,\n                    startDate,\n                    endDate\n                })\n                .filter(this.isInTimeAxis)\n                .sort(eventSorter);\n\n        let resourceRecord = assignmentRecord.resource,\n            previousEvent  = resourceEvents[resourceEvents.indexOf(eventRecord) - 1];\n\n        // At first event for resource, traverse up the resource store.\n        if (!previousEvent) {\n            // If we are deleting an event, skip other instances of the event which we may encounter\n            // due to multi-assignment.\n            for (\n                let rowIdx = resourceStore.indexOf(resourceRecord) - 1;\n                (!previousEvent || (isDelete && previousEvent === eventRecord)) && rowIdx >= 0;\n                rowIdx--\n            ) {\n                resourceRecord = resourceStore.getAt(rowIdx);\n                const events = me.eventStore\n                    .getEvents({\n                        resourceRecord,\n                        startDate,\n                        endDate\n                    })\n                    .filter(me.isInTimeAxis)\n                    .sort(eventSorter);\n\n                previousEvent = events.length && events[events.length - 1];\n            }\n        }\n\n        return me.assignmentStore.getAssignmentForEventAndResource(previousEvent, resourceRecord);\n    }\n\n    navigatePrevious(keyEvent) {\n        const\n            me                 = this,\n            previousAssignment = me.getPrevious(me.normalizeTarget(keyEvent));\n\n        keyEvent.preventDefault();\n        if (previousAssignment) {\n            if (!keyEvent.ctrlKey) {\n                me.clearEventSelection();\n            }\n            return me.navigateTo(previousAssignment, {\n                uiEvent : keyEvent\n            });\n        }\n\n        // No previous event/task, fall back to Grid's handling of this gesture\n        return me.doGridNavigation(keyEvent);\n    }\n\n    getNext(assignmentRecord, isDelete) {\n        const\n            me                     = this,\n            { resourceStore }      = me,\n            { eventSorter }        = me.currentOrientation,\n            // start/end dates are required to limit time span to look at in case recurrence feature is enabled\n            { startDate, endDate } = me.timeAxis,\n            eventRecord            = assignmentRecord.event,\n            resourceEvents         = me.eventStore\n                .getEvents({\n                    resourceRecord : assignmentRecord.resource,\n                    // start/end are required to limit time\n                    startDate,\n                    endDate\n                })\n                .filter(this.isInTimeAxis)\n                .sort(eventSorter);\n\n        let resourceRecord = assignmentRecord.resource,\n            nextEvent      = resourceEvents[resourceEvents.indexOf(eventRecord) + 1];\n\n        // At last event for resource, traverse down the resource store\n        if (!nextEvent) {\n            // If we are deleting an event, skip other instances of the event which we may encounter\n            // due to multi-assignment.\n            for (let rowIdx = resourceStore.indexOf(resourceRecord) + 1; (!nextEvent || (isDelete && nextEvent === eventRecord)) && rowIdx < resourceStore.count; rowIdx++) {\n                resourceRecord = resourceStore.getAt(rowIdx);\n                const events = me.eventStore\n                    .getEvents({\n                        resourceRecord,\n                        startDate,\n                        endDate\n                    })\n                    .filter(me.isInTimeAxis)\n                    .sort(eventSorter);\n\n                nextEvent = events[0];\n            }\n        }\n\n        return me.assignmentStore.getAssignmentForEventAndResource(nextEvent, resourceRecord);\n    }\n\n    navigateNext(keyEvent) {\n        const\n            me             = this,\n            nextAssignment = me.getNext(me.normalizeTarget(keyEvent));\n\n        keyEvent.preventDefault();\n        if (nextAssignment) {\n            if (!keyEvent.ctrlKey) {\n                me.clearEventSelection();\n            }\n            return me.navigateTo(nextAssignment, {\n                uiEvent : keyEvent\n            });\n        }\n\n        // No next event/task, fall back to Grid's handling of this gesture\n        return me.doGridNavigation(keyEvent);\n    }\n\n    doGridNavigation(keyEvent) {\n        if (!keyEvent.handled && keyEvent.key.indexOf('Arrow') === 0) {\n            this[`navigate${keyEvent.key.substring(5)}ByKey`](keyEvent);\n        }\n    }\n\n    async navigateTo(targetAssignment, {\n        scrollIntoView = true,\n        uiEvent        = {}\n    } = emptyObject) {\n        const\n            me                      = this,\n            { navigator }           = me,\n            { skipScrollIntoView }  = navigator;\n\n        if (targetAssignment) {\n            if (scrollIntoView) {\n                // No key processing during scroll\n                navigator.disabled = true;\n                await me.scrollAssignmentIntoView(targetAssignment, animate100);\n                navigator.disabled = false;\n            }\n            else {\n                navigator.skipScrollIntoView = true;\n            }\n\n            // Panel can be destroyed before promise is resolved\n            // Perform a sanity check to make sure element is still in the DOM (syncIdMap actually).\n            if (!me.isDestroyed && this.getElementFromAssignmentRecord(targetAssignment)) {\n                me.activeAssignment = targetAssignment;\n                navigator.skipScrollIntoView = skipScrollIntoView;\n                navigator.trigger('navigate', {\n                    event : uiEvent,\n                    item  : me.getElementFromAssignmentRecord(targetAssignment).closest(navigator.itemSelector)\n                });\n            }\n        }\n    }\n\n    set activeAssignment(assignmentRecord) {\n        const assignmentEl = this.getElementFromAssignmentRecord(assignmentRecord, true);\n\n        if (assignmentEl) {\n            this.navigator.activeItem = assignmentEl;\n        }\n    }\n\n    get activeAssignment() {\n        const { activeItem } = this.navigator;\n\n        if (activeItem) {\n            return this.resolveAssignmentRecord(activeItem);\n        }\n    }\n\n    get previousActiveEvent() {\n        const { previousActiveItem } = this.navigator;\n\n        if (previousActiveItem) {\n            return this.resolveEventRecord(previousActiveItem);\n        }\n    }\n\n    processEvent(keyEvent) {\n        const\n            me           = this,\n            eventElement = keyEvent.target.closest(me.eventSelector);\n\n        if (!me.navigator.disabled && eventElement) {\n            keyEvent.assignmentRecord = me.resolveAssignmentRecord(eventElement);\n            keyEvent.eventRecord = me.resolveEventRecord(eventElement);\n            keyEvent.resourceRecord = me.resolveResourceRecord(eventElement);\n        }\n\n        return keyEvent;\n    }\n\n    onDeleteKey(keyEvent) {\n        const me = this;\n        if (!me.readOnly && me.enableDeleteKey) {\n            const records = me.eventStore.usesSingleAssignment ? me.selectedEvents : me.selectedAssignments;\n\n            me.removeEvents(records.filter(r => !r.readOnly));\n        }\n    }\n\n    onArrowUpKey(keyEvent) {\n        this.focusCell({\n            rowIndex : this.focusedCell.rowIndex - 1,\n            column   : this.timeAxisColumn\n        });\n        keyEvent.handled = true;\n    }\n\n    onArrowDownKey(keyEvent) {\n        if (this.focusedCell.rowIndex < this.resourceStore.count - 1) {\n            this.focusCell({\n                rowIndex : this.focusedCell.rowIndex + 1,\n                column   : this.timeAxisColumn\n            });\n            keyEvent.handled = true;\n        }\n    }\n\n    onEscapeKey(keyEvent) {\n        if (!keyEvent.target.closest('.b-dragging')) {\n            this.focusCell({\n                rowIndex : this.focusedCell.rowIndex,\n                column   : this.timeAxisColumn\n            });\n            keyEvent.handled = true;\n        }\n    }\n\n    onEventSpaceKey(keyEvent) {\n        // Empty, to be chained by features\n    }\n\n    onEventEnterKey(keyEvent) {\n        // Empty, to be chained by features\n    }\n\n    get isActionableLocation() {\n        // Override from grid if the Navigator's location is an event (or task if we're in Gantt)\n        // Being focused on a task/event means that it's *not* actionable. It's not valid to report\n        // that we're \"inside\" the cell in a TimeLine, so ESC must not attempt to focus the cell.\n        if (!this.navigator.activeItem) {\n            return super.isActionableLocation;\n        }\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","/**\n * @module Scheduler/view/mixin/TransactionalFeatureMixin\n */\n\n/**\n * This mixin declares a common config to disable feature transactions in components which support scheduling engine:\n * SchedulerPro and Gantt.\n * @mixin\n */\nexport default Target => class TransactionalFeatureMixin extends Target {\n    static get $name() {\n        return 'TransactionalFeatureMixin';\n    }\n\n    static configurable = {\n        /**\n         * When true, some features will start a project transaction, blocking the project queue, suspending\n         * store events and preventing UI from updates. It behaves similar to\n         * {@link Grid.column.Column#config-instantUpdate} set to `false`.\n         * Set `false` to not use project queue.\n         * @config {Boolean}\n         * @internal\n         * @default\n         */\n        enableTransactionalFeatures : false,\n\n        testConfig : {\n            enableTransactionalFeatures : false\n        }\n    };\n\n    get widgetClass() {}\n\n    /**\n     * Returns `true` if queue is supported and enabled\n     * @member {Boolean}\n     * @internal\n     * @readonly\n     */\n    get transactionalFeaturesEnabled() {\n        return this.enableTransactionalFeatures && this.project?.queue;\n    }\n};\n","/**\n * @module Scheduler/data/mixin/AttachToProjectMixin\n */\n\n/**\n * Mixin that calls the target class `attachToProject()` function when a new project is assigned to Scheduler/Gantt.\n *\n * @mixin\n */\nexport default Target => class AttachToProjectMixin extends Target {\n    static get $name() {\n        return 'AttachToProjectMixin';\n    }\n\n    async afterConstruct() {\n        super.afterConstruct();\n\n        const\n            me            = this,\n            projectHolder = (me.client || me.grid),\n            { project }   = projectHolder;\n\n        projectHolder.projectSubscribers?.push(me);\n\n        // Attach to already existing stores\n        if (project) {\n            me.attachToProject(project);\n            me.attachToResourceStore(project.resourceStore);\n            me.attachToEventStore(project.eventStore);\n            me.attachToAssignmentStore(project.assignmentStore);\n            me.attachToDependencyStore(project.dependencyStore);\n            me.attachToCalendarManagerStore(project.calendarManagerStore);\n        }\n    }\n\n    /**\n     * Override to take action when the project instance is replaced.\n     *\n     * @param {Scheduler.model.ProjectModel} project\n     */\n    attachToProject(project) {\n        this.detachListeners('project');\n\n        this._project = project;\n\n        super.attachToProject?.(project);\n    }\n\n    detachFromProject(project) {\n        super.detachFromProject?.(project);\n    }\n\n    /**\n     * Override to take action when the EventStore instance is replaced, either from being replaced on the project or\n     * from assigning a new project.\n     *\n     * @param {Scheduler.data.EventStore} store\n     */\n    attachToEventStore(store) {\n        this.detachListeners('eventStore');\n\n        super.attachToEventStore?.(store);\n    }\n\n    /**\n     * Override to take action when the ResourceStore instance is replaced, either from being replaced on the project\n     * or from assigning a new project.\n     *\n     * @param {Scheduler.data.ResourceStore} store\n     */\n    attachToResourceStore(store) {\n        this.detachListeners('resourceStore');\n\n        super.attachToResourceStore?.(store);\n    }\n\n    /**\n     * Override to take action when the AssignmentStore instance is replaced, either from being replaced on the project\n     * or from assigning a new project.\n     *\n     * @param {Scheduler.data.AssignmentStore} store\n     */\n    attachToAssignmentStore(store) {\n        this.detachListeners('assignmentStore');\n\n        super.attachToAssignmentStore?.(store);\n    }\n\n    /**\n     * Override to take action when the DependencyStore instance is replaced, either from being replaced on the project\n     * or from assigning a new project.\n     *\n     * @param {Scheduler.data.DependencyStore} store\n     */\n    attachToDependencyStore(store) {\n        this.detachListeners('dependencyStore');\n\n        super.attachToDependencyStore?.(store);\n    }\n\n    // <remove-on-release>\n    // TODO: Move attachToCalendarMangerStore to Pro somehow\n    // </remove-on-release>\n\n    /**\n     * Override to take action when the CalendarManagerStore instance is replaced, either from being replaced on the\n     * project or from assigning a new project.\n     *\n     * @param {Core.data.Store} store\n     */\n    attachToCalendarManagerStore(store) {\n        this.detachListeners('calendarManagerStore');\n\n        super.attachToCalendarManagerStore?.(store);\n    }\n\n    get project() {\n        return this._project;\n    }\n\n    get calendarManagerStore() {\n        return this.project.calendarManagerStore;\n    }\n\n    get assignmentStore() {\n        return this.project.assignmentStore;\n    }\n\n    get resourceStore() {\n        return this.project.resourceStore;\n    }\n\n    get eventStore() {\n        return this.project.eventStore;\n    }\n\n    get dependencyStore() {\n        return this.project.dependencyStore;\n    }\n};\n","import BrowserHelper from '../../../Core/helper/BrowserHelper.js';\nimport DomSync from '../../../Core/helper/DomSync.js';\nimport Base from '../../../Core/Base.js';\nimport Model from '../../../Core/data/Model.js';\nimport ArrayHelper from '../../../Core/helper/ArrayHelper.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\nimport Rectangle from '../../../Core/helper/util/Rectangle.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\nimport AttachToProjectMixin from '../../data/mixin/AttachToProjectMixin.js';\n\n/**\n * @module Scheduler/view/orientation/HorizontalRendering\n */\n\n/**\n * @typedef HorizontalRenderData\n * @property {Scheduler.model.EventModel} eventRecord\n * @property {Date} start Span start\n * @property {Date} end Span end\n * @property {String} rowId Id of the resource row\n * @property {DomConfig[]} children Child elements\n * @property {Number} startMS Wrap element start in milliseconds\n * @property {Number} endMS Span Wrap element end in milliseconds\n * @property {Number} durationMS Wrap duration in milliseconds (not just a difference between start and end)\n * @property {Number} innerStartMS Actual event start in milliseconds\n * @property {Number} innerEndMS Actual event end in milliseconds\n * @property {Number} innerDurationMS Actual event duration in milliseconds\n * @property {Boolean} startsOutsideView True if span starts before time axis start\n * @property {Boolean} endsOutsideView True if span ends after time axis end\n * @property {Number} left Absolute left coordinate of the wrap element\n * @property {Number} width\n * @property {Number} top Absolute top coordinate of the wrap element (can be changed by layout)\n * @property {Number} height\n * @property {Boolean} clippedStart True if start is clipped\n * @property {Boolean} clippedEnd True if end is clipped\n * @private\n */\n\nconst\n    releaseEventActions = {\n        releaseElement : 1, // Not used at all at the moment\n        reuseElement   : 1  // Used by some other element\n    },\n    renderEventActions  = {\n        newElement      : 1,\n        reuseOwnElement : 1,\n        reuseElement    : 1\n    },\n    MAX_WIDTH           = 9999999,\n    heightEventSorter   = ({ startDateMS : lhs }, { startDateMS : rhs }) => lhs - rhs,\n    chronoFields        = {\n        startDate : 1,\n        endDate   : 1,\n        duration  : 1\n    };\n\nfunction getStartEnd(scheduler, eventRecord, useEnd, fieldName, useEventBuffer) {\n    // Must use Model.get in order to get latest values in case we are inside a batch.\n    // EventResize changes the endDate using batching to enable a tentative change\n    // via the batchedUpdate event which is triggered when changing a field in a batch.\n    // Fall back to accessor if propagation has not populated date fields.\n    const\n        { timeAxis }     = scheduler,\n        date             = eventRecord.isBatchUpdating && !useEventBuffer ? eventRecord.get(fieldName) : eventRecord[fieldName],\n        hasBatchedChange = eventRecord.hasBatchedChange?.(fieldName),\n        // fillTicks shouldn't be used during resizing for changing date for smooth animation.\n        // correct date will be applied after resize, when `isResizing` will be falsy\n        useTickDates     = scheduler.fillTicks && (!eventRecord.meta?.isResizing || !hasBatchedChange);\n\n    if (useTickDates) {\n        let tick = timeAxis.getTickFromDate(date);\n\n        if (tick >= 0) {\n            // If date matches a tick start/end, use the earlier tick\n            if (useEnd && tick === Math.round(tick) && tick > 0) {\n                tick--;\n            }\n\n            const\n                tickIndex  = Math.floor(tick),\n                tickRecord = timeAxis.getAt(tickIndex);\n\n            return tickRecord[fieldName].getTime();\n        }\n    }\n\n    return date?.getTime();\n}\n\n/**\n * Handles event rendering in Schedulers horizontal mode. Reacts to project/store changes to keep the UI up to date.\n *\n * @internal\n */\nexport default class HorizontalRendering extends Base.mixin(AttachToProjectMixin) {\n    //region Config & Init\n\n    static $name = 'HorizontalRendering';\n\n    static get configurable() {\n        return {\n            /**\n             * Amount of pixels to extend the current visible range at both ends with when deciding which events to\n             * render. Only applies when using labels or for milestones\n             * @config {Number}\n             * @default\n             */\n            bufferSize : 150,\n\n            verticalBufferSize : 150\n        };\n    }\n\n    static get properties() {\n        return {\n            // Map with event DOM configs, keyed by resource id\n            resourceMap            : new Map(),\n            // Map with visible events DOM configs, keyed by row instance\n            rowMap                 : new Map(),\n            eventConfigs           : [],\n            // Flag to avoid transitioning on first refresh\n            isFirstRefresh         : true,\n            toDrawOnProjectRefresh : new Set(),\n            toDrawOnDataReady      : new Set()\n        };\n    }\n\n    construct(scheduler) {\n        const me = this;\n\n        me.client = me.scheduler = scheduler;\n        me.eventSorter = me.eventSorter.bind(scheduler);\n        me.scrollBuffer = scheduler.scrollBuffer;\n\n        // Catch scroll before renderers are called\n        scheduler.scrollable.ion({\n            scroll  : 'onEarlyScroll',\n            prio    : 1,\n            thisObj : me\n        });\n\n        scheduler.rowManager.ion({\n            name            : 'rowManager',\n            renderDone      : 'onRenderDone',\n            removeRows      : 'onRemoveRows',\n            translateRow    : 'onTranslateRow',\n            offsetRows      : 'onOffsetRows',\n            beforeRowHeight : 'onBeforeRowHeightChange',\n            thisObj         : me\n        });\n\n        super.construct({});\n    }\n\n    init() {}\n\n    updateVerticalBufferSize() {\n        const { rowManager } = this.scheduler;\n\n        if (this.scheduler.isPainted) {\n            // Refresh rows when vertical buffer size changes to trigger event repaint. Required for the export feature.\n            rowManager.renderRows(rowManager.rows);\n        }\n    }\n\n    //endregion\n\n    //region Region, dates & coordinates\n\n    get visibleDateRange() {\n        return this._visibleDateRange;\n    }\n\n    getDateFromXY(xy, roundingMethod, local, allowOutOfRange = false) {\n        const { scheduler } = this;\n\n        let coord = xy[0];\n\n        if (!local) {\n            coord = this.translateToScheduleCoordinate(coord);\n        }\n\n        coord = scheduler.getRtlX(coord);\n\n        return scheduler.timeAxisViewModel.getDateFromPosition(coord, roundingMethod, allowOutOfRange);\n    }\n\n    translateToScheduleCoordinate(x) {\n        const\n            { scheduler } = this,\n            { scrollable } = scheduler.timeAxisSubGrid;\n\n        let result = x - scheduler.timeAxisSubGridElement.getBoundingClientRect().left - globalThis.scrollX;\n\n        // Because we use getBoundingClientRect's left, we have to adjust for page scroll.\n        // The vertical counterpart uses the _bodyRectangle which was created with that adjustment.\n\n        if (scheduler.rtl) {\n            result += scrollable.maxX - Math.abs(scheduler.scrollLeft);\n        }\n        else {\n            result += scheduler.scrollLeft;\n        }\n\n        return result;\n    }\n\n    translateToPageCoordinate(x) {\n        const\n            { scheduler } = this,\n            { scrollable } = scheduler.timeAxisSubGrid;\n\n        let result = x + scheduler.timeAxisSubGridElement.getBoundingClientRect().left;\n\n        if (scheduler.rtl) {\n            result -= scrollable.maxX - Math.abs(scheduler.scrollLeft);\n        }\n        else {\n            result -= scheduler.scrollLeft;\n        }\n\n        return result;\n    }\n\n    /**\n     * Gets the region, relative to the page, represented by the schedule and optionally only for a single resource.\n     * This method will call getDateConstraints to allow for additional resource/event based constraints. By overriding\n     * that method you can constrain events differently for different resources.\n     * @param {Scheduler.model.ResourceModel} [resourceRecord] (optional) The row record\n     * @param {Scheduler.model.EventModel} [eventRecord] (optional) The event record\n     * @returns {Core.helper.util.Rectangle} The region of the schedule\n     */\n    getScheduleRegion(resourceRecord, eventRecord, local = true, dateConstraints, stretch = false) {\n        const\n            me                                   = this,\n            { scheduler }                        = me,\n            { timeAxisSubGridElement, timeAxis } = scheduler,\n            resourceMargin                       = (!stretch || resourceRecord) && scheduler.getResourceMargin(resourceRecord) || 0;\n\n        let region;\n\n        if (resourceRecord) {\n            const eventElement = eventRecord && scheduler.getElementsFromEventRecord(eventRecord, resourceRecord)[0];\n\n            region = Rectangle.from(scheduler.getRowById(resourceRecord.id).getElement('normal'), timeAxisSubGridElement);\n\n            if (eventElement) {\n                const eventRegion = Rectangle.from(eventElement, timeAxisSubGridElement);\n\n                region.y = eventRegion.y;\n                region.bottom = eventRegion.bottom;\n            }\n            else {\n                region.y = region.y + resourceMargin;\n                region.bottom = region.bottom - resourceMargin;\n            }\n        }\n        else {\n            // <remove-on-release>\n            // TODO: This is what the function that was removed here did.\n            // </remove-on-release>\n            // The coordinate space needs to be sorted out here!\n            region = Rectangle.from(timeAxisSubGridElement).moveTo(null, 0);\n            region.width = timeAxisSubGridElement.scrollWidth;\n\n            region.y = region.y + resourceMargin;\n            region.bottom = region.bottom - resourceMargin;\n        }\n\n        const\n            taStart         = timeAxis.startDate,\n            taEnd           = timeAxis.endDate;\n\n        dateConstraints = (dateConstraints?.start && dateConstraints) || scheduler.getDateConstraints?.(resourceRecord, eventRecord) || {\n            start : taStart,\n            end   : taEnd\n        };\n\n        let startX          = scheduler.getCoordinateFromDate(dateConstraints.start ? DateHelper.max(taStart, dateConstraints.start) : taStart),\n            endX            = scheduler.getCoordinateFromDate(dateConstraints.end ? DateHelper.min(taEnd, dateConstraints.end) : taEnd);\n\n        if (!local) {\n            startX = me.translateToPageCoordinate(startX);\n            endX = me.translateToPageCoordinate(endX);\n        }\n\n        region.left = Math.min(startX, endX);\n        region.right = Math.max(startX, endX);\n\n        return region;\n    }\n\n    /**\n     * Gets the Region, relative to the timeline view element, representing the passed row and optionally just for a\n     * certain date interval.\n     * @param {Core.data.Model} rowRecord The row record\n     * @param {Date} startDate A start date constraining the region\n     * @param {Date} endDate An end date constraining the region\n     * @returns {Core.helper.util.Rectangle} The Rectangle which encapsulates the row\n     */\n    getRowRegion(rowRecord, startDate, endDate) {\n        const\n            { scheduler } = this,\n            { timeAxis }  = scheduler,\n            row           = scheduler.getRowById(rowRecord.id);\n\n        // might not be rendered\n        if (!row) {\n            return null;\n        }\n\n        const\n            taStart    = timeAxis.startDate,\n            taEnd      = timeAxis.endDate,\n            start      = startDate ? DateHelper.max(taStart, startDate) : taStart,\n            end        = endDate ? DateHelper.min(taEnd, endDate) : taEnd,\n            startX     = scheduler.getCoordinateFromDate(start),\n            endX       = scheduler.getCoordinateFromDate(end, true, true),\n            y          = row.top,\n            x          = Math.min(startX, endX),\n            bottom     = y + row.offsetHeight;\n\n        return new Rectangle(x, y, Math.max(startX, endX) - x, bottom - y);\n    }\n\n    getResourceEventBox(eventRecord, resourceRecord, includeOutside, roughly = false) {\n        const resourceData = this.resourceMap.get(resourceRecord.id);\n\n        let eventLayout  = null,\n            approx       = false;\n\n        if (resourceData) {\n            eventLayout = resourceData.eventsData.find(d => d.eventRecord === eventRecord);\n        }\n\n        // Outside of view, layout now if supposed to be included\n        if (!eventLayout) {\n            eventLayout = this.getTimeSpanRenderData(\n                eventRecord,\n                resourceRecord,\n                { viewport : true, timeAxis : includeOutside }\n            );\n\n            approx = true;\n        }\n\n        if (eventLayout) {\n            // Event layout is relative to row, need to make to absolute before returning\n            const\n                rowBox      = this.scheduler.rowManager.getRecordCoords(resourceRecord, true, roughly),\n                absoluteTop = eventLayout.top + rowBox.top,\n                box         = new Rectangle(eventLayout.left, absoluteTop, eventLayout.width, eventLayout.height);\n\n            // Flag informing other parts of the code that this box is approximated\n            box.layout = !approx;\n            box.rowTop = rowBox.top;\n            box.rowBottom = rowBox.bottom;\n\n            box.resourceId = resourceRecord.id;\n\n            return box;\n        }\n\n        return null;\n    }\n\n    //endregion\n\n    //region Element <-> Record mapping\n\n    resolveRowRecord(elementOrEvent) {\n        const\n            me             = this,\n            { scheduler }  = me,\n            element        = elementOrEvent.nodeType ? elementOrEvent : elementOrEvent.target,\n            // Fix for FF on Linux having text nodes as event.target\n            el             = element.nodeType === Element.TEXT_NODE ? element.parentElement : element,\n            eventNode      = el.closest(scheduler.eventSelector);\n\n        if (eventNode) {\n            return me.resourceStore.getById(eventNode.dataset.resourceId);\n        }\n\n        // When resourceNonWorkingTime.enableMouseEvents is set to true, and the current element is a resource non working time range,\n        // in order to get the corresponding resource row, we need to read from data-resource-id attribute.\n        // That's because element has not a .b-grid-row as parent when enableMouseEvents is set to true.\n        if (!el.closest('.b-grid-row') && el.dataset.resourceId) {\n            return me.resourceStore.getById(el.dataset.resourceId);\n        }\n\n        return scheduler.getRecordFromElement(el);\n    }\n\n    //endregion\n\n    //region Project\n\n    attachToProject(project) {\n        super.attachToProject(project);\n\n        this.refreshAllWhenReady = true;\n\n        // Perform a full clear when replacing the project, to not leave any references to old project in DOM\n        if (!this.scheduler.isConfiguring) {\n            this.clearAll({ clearDom : true });\n        }\n\n        project?.ion({\n            name            : 'project',\n            refresh         : 'onProjectRefresh',\n            commitFinalized : 'onProjectCommitFinalized',\n            thisObj         : this\n        });\n    }\n\n    onProjectCommitFinalized() {\n        const { scheduler, toDrawOnDataReady, project } = this;\n\n        // Only update the UI immediately if we are visible\n        if (scheduler.isVisible) {\n            if (scheduler.isPainted && !scheduler.refreshSuspended) {\n                // If this is a timezone commit, we got here from a store dataset\n                // We need to do a full refresh\n                if (!toDrawOnDataReady.size && project.timeZone != null && project.ignoreRecordChanges) {\n                    project.resourceStore.forEach(r => toDrawOnDataReady.add(r.id));\n                }\n                if (toDrawOnDataReady.size) {\n                    this.clearResources(toDrawOnDataReady);\n                    this.refreshResources(toDrawOnDataReady);\n                }\n\n                toDrawOnDataReady.clear();\n            }\n        }\n        // Otherwise wait till next time we get painted (shown, or a hidden ancestor shown)\n        else {\n            scheduler.whenVisible('refreshRows');\n        }\n    }\n\n    onProjectRefresh({ isCalculated, isInitialCommit }) {\n        const\n            me                                    = this,\n            { scheduler, toDrawOnProjectRefresh } = me;\n\n        // Only update the UI immediately if we are visible\n        if (scheduler.isVisible) {\n            if (scheduler.isPainted && !scheduler.isConfiguring && !scheduler.refreshSuspended) {\n                // Either refresh all rows (on for example dataset or when delayed calculations are finished)\n                if (me.refreshAllWhenReady || (isInitialCommit && isCalculated)) {\n                    scheduler.calculateAllRowHeights(true);\n                    const { rowManager } = scheduler;\n\n                    // Rows rendered? Refresh\n                    if (rowManager.topRow) {\n                        me.clearAll();\n\n                        // Refresh only if it won't be refreshed elsewhere (SchedulerStore#onProjectRefresh())\n                        if (!scheduler.refreshAfterProjectRefresh) {\n                            // If refresh was suspended when replacing the dataset in a scrolled view we might end up with a\n                            // topRow outside of available range -> reset it. Call renderRows() to mimic what normally happens\n                            // when refresh is not suspended\n                            if (rowManager.topRow.dataIndex >= scheduler.store.count) {\n                                scheduler.renderRows(false);\n                            }\n                            else {\n                                // Don't transition first refresh / early render\n                                scheduler.refreshWithTransition(false, !me.isFirstRefresh && isCalculated && !isInitialCommit);\n                            }\n                        }\n\n                        me.isFirstRefresh = false;\n                    }\n                    // No rows yet, reinitialize (happens if initial project empty and then non empty project assigned)\n                    else {\n                        rowManager.reinitialize();\n                    }\n\n                    me.refreshAllWhenReady = false;\n                }\n                // Or only affected rows (if any)\n                else if (toDrawOnProjectRefresh.size) {\n                    me.refreshResources(toDrawOnProjectRefresh);\n                }\n\n                toDrawOnProjectRefresh.clear();\n            }\n        }\n        // Otherwise wait till next time we get painted (shown, or a hidden ancestor shown)\n        else {\n            scheduler.whenVisible('refresh', scheduler, [true]);\n        }\n    }\n\n    //endregion\n\n    //region AssignmentStore\n\n    attachToAssignmentStore(assignmentStore) {\n        this.refreshAllWhenReady = true;\n\n        super.attachToAssignmentStore(assignmentStore);\n\n        if (assignmentStore) {\n            assignmentStore.ion({\n                name             : 'assignmentStore',\n                changePreCommit  : 'onAssignmentStoreChange',\n                refreshPreCommit : 'onAssignmentStoreRefresh',\n                thisObj          : this\n            });\n        }\n    }\n\n    onAssignmentStoreChange({ source, action, records : assignmentRecords = [], replaced, changes }) {\n        const\n            me                = this,\n            { scheduler }     = me,\n            resourceIds       = new Set(assignmentRecords.flatMap(assignmentRecord => ([\n                assignmentRecord.resourceId,\n                // Also include any linked resources (?. twice since resource might not be resolved and point to id)\n                ...assignmentRecord.resource?.$links?.map(link => link.id) ?? []\n            ])));\n\n        // Ignore assignment changes caused by removing resources, the remove will redraw things anyway\n        // Also ignore case when resource id is changed. In this case row will be refreshed by the grid\n        if (me.resourceStore.isRemoving || me.resourceStore.isChangingId) {\n            return;\n        }\n\n        switch (action) {\n            // These operations will invalidate the graph, need to draw later\n            case 'dataset': {\n                // Ignore dataset when using single assignment mode\n                if (!me.eventStore.usesSingleAssignment) {\n                    if (resourceIds.size) {\n                        me.refreshResourcesWhenReady(resourceIds);\n                    }\n                    else {\n                        me.clearAll();\n                        scheduler.refreshWithTransition();\n                    }\n                }\n                return;\n            }\n\n            // <remove-on-release>\n            // TODO: Don't think updateMultiple below is covered by any test...\n            // </remove-on-release>\n\n            case 'add':\n            case 'remove':\n            case 'updateMultiple':\n                me.refreshResourcesWhenReady(resourceIds);\n                return;\n\n            case 'removeall':\n                me.refreshAllWhenReady = true;\n                return;\n\n            case 'replace':\n                // Gather resources from both the old record and the new one\n                replaced.forEach(([oldAssignment, newAssignment]) => {\n                    resourceIds.add(oldAssignment.resourceId);\n                    resourceIds.add(newAssignment.resourceId);\n                });\n                // And refresh them\n                me.refreshResourcesWhenReady(resourceIds);\n                return;\n\n            // These operations won't invalidate the graph, redraw now\n            case 'filter':\n                me.clearAll();\n                scheduler.calculateAllRowHeights(true);\n                scheduler.refreshWithTransition();\n                return;\n\n            case 'update': {\n                if ('eventId' in changes || 'resourceId' in changes || 'id' in changes) {\n                    // When reassigning, clear old resource also\n                    if ('resourceId' in changes) {\n                        resourceIds.add(changes.resourceId.oldValue);\n                    }\n\n                    // When chaining stores in single assignment mode, we might not be the project store\n                    if (source === scheduler.project.assignmentStore) {\n                        me.refreshResourcesOnDataReady(resourceIds);\n                    }\n                    // Refresh directly when we are not\n                    else {\n                        me.refreshResources(resourceIds);\n                    }\n                }\n                break;\n            }\n\n            case 'clearchanges': {\n                const { added, modified, removed } = changes;\n\n                // If modified records appear in the clearchanges action we need to refresh entire view\n                // because we have not enough information about previously assigned resource\n                if (modified.length) {\n                    scheduler.refreshWithTransition();\n                }\n                else {\n                    added.forEach(r => resourceIds.add(r.resourceId));\n                    removed.forEach(r => resourceIds.add(r.resourceId));\n\n                    me.refreshResourcesOnDataReady(resourceIds);\n                }\n            }\n        }\n    }\n\n    onAssignmentStoreRefresh({ action, records }) {\n        if (action === 'batch') {\n            this.clearAll();\n            this.scheduler.refreshWithTransition();\n        }\n    }\n\n    //endregion\n\n    //region EventStore\n\n    attachToEventStore(eventStore) {\n        this.refreshAllWhenReady = true;\n\n        super.attachToEventStore(eventStore);\n\n        if (eventStore) {\n            eventStore.ion({\n                name             : 'eventStore',\n                addConfirmed     : 'onEventStoreAddConfirmed',\n                refreshPreCommit : 'onEventStoreRefresh',\n                thisObj          : this\n            });\n        }\n    }\n\n    onEventStoreAddConfirmed({ record }) {\n        for (const element of this.client.getElementsFromEventRecord(record)) {\n            element.classList.remove('b-iscreating');\n        }\n    }\n\n    onEventStoreRefresh({ action }) {\n        if (action === 'batch') {\n            const { scheduler } = this;\n            if (scheduler.isEngineReady && scheduler.isPainted) {\n                this.clearAll();\n                scheduler.refreshWithTransition();\n            }\n        }\n    }\n\n    onEventStoreChange({ action, records : eventRecords = [], record, replaced, changes, source }) {\n        const\n            me                  = this,\n            { scheduler }       = me,\n            isResourceTimeRange = source.isResourceTimeRangeStore,\n            resourceIds         = new Set();\n\n        if (!scheduler.isPainted) {\n            return;\n        }\n\n        eventRecords.forEach(eventRecord => {\n            // Update all resource rows to which this event is assigned *if* the resourceStore\n            // contains that resource (We could have filtered the resourceStore)\n            const renderedEventResources = eventRecord.$linkedResources?.filter(r => me.resourceStore.includes(r));\n\n            // When rendering a Gantt project, the project model also passes through here -> no `resources`\n            renderedEventResources?.forEach(resourceRecord => resourceIds.add(resourceRecord.id));\n        });\n\n        if (isResourceTimeRange) {\n            switch (action) {\n                // - dataset cant pass through same path as events, which relies on project being invalidated. and\n                // resource time ranges does not pass through engine\n                // - removeall also needs special path, since no resources to redraw will be collected\n                case 'removeall':\n                case 'dataset':\n                    me.clearAll();\n                    scheduler.refreshWithTransition();\n                    return;\n            }\n\n            me.refreshResources(resourceIds);\n        }\n        else {\n            switch (action) {\n                // No-ops\n                case 'batch': // Handled elsewhere, don't want it to clear again\n                case 'sort':  // Order in EventStore does not matter, so these actions are no-ops\n                case 'group':\n                case 'move':\n                    return;\n\n                case 'remove':\n                    // Remove is a no-op since assignment will also be removed\n                    return;\n\n                case 'clearchanges':\n                    me.clearAll();\n                    scheduler.refreshWithTransition();\n                    return;\n\n                case 'dataset': {\n                    me.clearAll();\n                    // This is mainly for chained stores, where data is set from main store without project being\n                    // invalidated. Nothing to wait for, refresh now\n                    if (scheduler.isEngineReady) {\n                        scheduler.refreshWithTransition();\n                    }\n                    else {\n                        me.refreshAllWhenReady = true;\n                    }\n                    return;\n                }\n\n                case 'add':\n                case 'updateMultiple':\n                    // Just refresh below\n                    break;\n\n                case 'replace':\n                    // Gather resources from both the old record and the new one\n                    replaced.forEach(([, newEvent]) => {\n                        // Old cleared by changed assignment\n                        newEvent.resources.map(resourceRecord => resourceIds.add(resourceRecord.id));\n                    });\n                    break;\n\n                case 'removeall':\n                case 'filter':\n                    // Filter might be caused by add retriggering filters, in which case we need to refresh later\n                    if (!scheduler.isEngineReady) {\n                        me.refreshAllWhenReady = true;\n                        return;\n                    }\n\n                    // Clear all when filtering for simplicity. If that turns out to give bad performance, one would need to\n                    // figure out which events was filtered out and only clear their resources.\n                    me.clearAll();\n                    scheduler.calculateAllRowHeights(true);\n                    scheduler.refreshWithTransition();\n                    return;\n\n                case 'update': {\n                    // Check if changes are graph related or not\n                    const allChrono = record.$entity\n                        ? !Object.keys(changes).some(name => !record.$entity.getField(name))\n                        : !Object.keys(changes).some(name => !chronoFields[name]);\n\n                    let dateChanges = 0;\n                    'startDate' in changes && dateChanges++;\n                    'endDate' in changes && dateChanges++;\n                    'duration' in changes && dateChanges++;\n\n                    if ('resourceId' in changes) {\n                        resourceIds.add(changes.resourceId.oldValue);\n                    }\n\n                    // If we have a set of resources to update, refresh them.\n                    // Always redraw non chrono changes (name etc) and chrono changes that can affect appearance\n                    if (\n                        resourceIds.size && (\n                            !allChrono ||\n                            // skip case when changed \"duration\" only (w/o start/end affected)\n                            dateChanges && !('duration' in changes && dateChanges === 1) ||\n                            'percentDone' in changes ||\n                            'inactive' in changes ||\n                            'constraintDate' in changes ||\n                            'constraintType' in changes ||\n                            'segments' in changes\n                        )\n                    ) {\n                        // if we are finalizing data loading let's delay the resources refresh till all the\n                        // propagation results get into stores\n                        if (me.project?.propagatingLoadChanges || me.project?.isWritingData) {\n                            me.refreshResourcesOnDataReady(resourceIds);\n                        }\n                        else {\n                            me.refreshResources(resourceIds);\n                        }\n                    }\n                    return;\n                }\n            }\n\n            me.refreshResourcesWhenReady(resourceIds);\n        }\n    }\n\n    //endregion\n\n    //region ResourceStore\n\n    attachToResourceStore(resourceStore) {\n\n        this.refreshAllWhenReady = true;\n\n        super.attachToResourceStore(resourceStore);\n\n        if (resourceStore) {\n            this.clearAll({ clearLayoutCache : true });\n\n            resourceStore.ion({\n                name            : 'resourceStore',\n                changePreCommit : 'onResourceStoreChange',\n                thisObj         : this\n            });\n        }\n    }\n\n    get resourceStore() {\n        return this.client.store;\n    }\n\n    onResourceStoreChange({ action, isExpand, records, changes }) {\n        const\n            me          = this,\n            // Update link + original when asked for link\n            resourceIds = records?.flatMap(r => r.isLinked ? [r.id, r.$originalId] : [r.id]);\n\n        if (!me.scheduler.isPainted) {\n            return;\n        }\n\n        switch (action) {\n            case 'add':\n                // #635 Events disappear when toggling other node\n                // If we are expanding project won't fire refresh event\n                if (!isExpand) {\n                    // Links won't cause calculations, refresh now\n                    if (records.every(r => r.isLinked)) {\n                        me.refreshResources(resourceIds);\n                    }\n                    // Otherwise refresh when project is ready\n                    else {\n                        me.refreshResourcesWhenReady(resourceIds);\n                    }\n                }\n                return;\n            case 'update': {\n                // Ignore changes from project commit, if they affect events they will be redrawn anyway\n                // Also ignore explicit transformation of leaf <-> parent\n                if (!me.project.isBatchingChanges && !changes.isLeaf) {\n                    // Resource changes might affect events, refresh\n                    me.refreshResources(resourceIds);\n                }\n                return;\n            }\n            case 'filter':\n                // Bail out on filter action. Map was already updated on `refresh` event triggered before this `change`\n                // one. And extra records are removed from rowMap by `onRemoveRows`\n                return;\n            case 'removeall':\n                me.clearAll({ clearLayoutCache : true });\n                return;\n\n                // We must not clear all resources when whole dataset changes\n                // https://github.com/bryntum/support/issues/3292\n            case 'dataset':\n                return;\n        }\n\n        resourceIds && me.clearResources(resourceIds);\n    }\n\n    //endregion\n\n    //region RowManager\n\n    onTranslateRow({ row }) {\n        // Newly added rows are translated prior to having an id, rule those out since they will be rendered later\n        if (row.id != null) {\n            // Event layouts are stored relative to the resource, only need to rerender the row to have its absolute\n            // position updated to match new translation\n            this.refreshEventsForResource(row, false);\n        }\n    }\n\n    // RowManager error correction, cached layouts will no longer match.\n    // Redraw to have events correctly positioned for dependency feature to draw to their elements\n    onOffsetRows() {\n        this.clearAll();\n        this.doUpdateTimeView();\n    }\n\n    // Used to pre-calculate row heights\n    calculateRowHeight(resourceRecord) {\n        const\n            { scheduler } = this,\n            rowHeight     = scheduler.getResourceHeight(resourceRecord),\n            eventLayout   = scheduler.getEventLayout(resourceRecord),\n            layoutType    = eventLayout.type;\n\n        if (\n            layoutType === 'stack' &&\n            scheduler.isEngineReady &&\n            !resourceRecord.isSpecialRow &&\n            // Generated parents when TreeGrouping do not have assigned bucket\n            resourceRecord.assigned?.size > 1\n        ) {\n            const\n                {\n                    assignmentStore,\n                    eventStore,\n                    timeAxis\n                }               = scheduler,\n                {\n                    barMargin,\n                    resourceMargin,\n                    contentHeight\n                }               = scheduler.getResourceLayoutSettings(resourceRecord),\n                // When using an AssignmentStore we will get all events for the resource even if the EventStore is\n                // filtered\n                eventFilter     = (eventStore.isFiltered || assignmentStore.isFiltered) && (eventRecord =>\n                    eventRecord.assignments.some(a => a.resource === resourceRecord.$original && assignmentStore.includes(a))),\n                events          = eventStore\n                    .getEvents({\n                        resourceRecord,\n                        includeOccurrences : scheduler.enableRecurringEvents,\n                        startDate          : timeAxis.startDate,\n                        endDate            : timeAxis.endDate,\n                        filter             : eventFilter\n                    })\n                    .sort(heightEventSorter)\n                    .map(eventRecord => {\n                        const\n                            // Must use Model.get in order to get latest values in case we are inside a batch.\n                            // EventResize changes the endDate using batching to enable a tentative change\n                            // via the batchedUpdate event which is triggered when changing a field in a batch.\n                            // Fall back to accessor if propagation has not populated date fields.\n                            startDate = eventRecord.isBatchUpdating ? eventRecord.get('startDate') : eventRecord.startDate,\n                            endDate   = eventRecord.isBatchUpdating ? eventRecord.get('endDate') : eventRecord.endDate || startDate;\n\n                        return {\n                            eventRecord,\n                            resourceRecord,\n                            startMS : startDate.getTime(),\n                            endMS   : endDate.getTime()\n                        };\n                    }),\n                layoutHandler = scheduler.getEventLayoutHandler(eventLayout),\n                nbrOfBandsRequired = layoutHandler.layoutEventsInBands(events, resourceRecord, true);\n\n            if (layoutHandler.type === 'layoutFn') {\n                return nbrOfBandsRequired;\n            }\n\n            return (nbrOfBandsRequired * contentHeight) + ((nbrOfBandsRequired - 1) * barMargin) + resourceMargin * 2;\n        }\n\n        return rowHeight;\n    }\n\n    //endregion\n\n    //region TimeAxis\n\n    doUpdateTimeView() {\n        const { scrollable } = this.scheduler.timeAxisSubGrid;\n\n        // scrollLeft is the DOM's concept which is -ve in RTL mode.\n        // scrollX is always the +ve scroll offset from the origin.\n        // Both may be needed for different calculations.\n        this.updateFromHorizontalScroll(scrollable.x, true);\n    }\n\n    onTimeAxisViewModelUpdate() {\n        const\n            me            = this,\n            { scheduler } = me;\n\n        me.clearAll();\n\n        // If refresh is suspended, update timeView as soon as refresh gets unsuspended\n        if (scheduler.refreshSuspended) {\n            me.detachListeners('renderingSuspend');\n\n            scheduler.ion({\n                name : 'renderingSuspend',\n                resumeRefresh({ trigger }) {\n                    // This code will try to refresh rows, but resumeRefresh event doesn't guarantee rowManager rows are\n                    // in actual state. e.g. if resources were removed during a suspended refresh rowManager won't get a\n                    // chance to update them until `refresh` event from the project. We can safely update the view only\n                    // if engine in ready (not committing), otherwise we leave refresh a liability of normal project refresh\n                    // logic. Covered by SchedulerRendering.t.js\n                    // https://github.com/bryntum/support/issues/1462\n                    if (scheduler.isEngineReady && trigger) {\n                        me.doUpdateTimeView();\n                    }\n                },\n                thisObj : me,\n                once    : true\n            });\n        }\n\n        // Call update anyway. If refresh is suspended this call will only update visible date range and will not redraw rows\n        me.doUpdateTimeView();\n    }\n\n    //endregion\n\n    //region Dependency connectors\n\n    /**\n     * Gets displaying item start side\n     *\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @returns {'start'|'end'|'top'|'bottom'} 'start' / 'end' / 'top' / 'bottom'\n     */\n    getConnectorStartSide(eventRecord) {\n        return 'start';\n    }\n\n    /**\n     * Gets displaying item end side\n     *\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @returns {'start'|'end'|'top'|'bottom'} 'start' / 'end' / 'top' / 'bottom'\n     */\n    getConnectorEndSide(eventRecord) {\n        return 'end';\n    }\n\n    //endregion\n\n    //region Scheduler hooks\n\n    refreshRows(reLayoutEvents) {\n        if (reLayoutEvents) {\n            this.clearAll();\n        }\n    }\n\n    // Clear events in case they use date as part of displayed info\n    onLocaleChange() {\n        this.clearAll();\n    }\n\n    // Called when viewport size changes\n    onViewportResize(width, height, oldWidth, oldHeight) {\n        // We don't draw events for all rendered rows, \"refresh\" when height changes to make sure events in previously\n        // invisible rows gets displayed\n        if (height > oldHeight) {\n            this.onRenderDone();\n        }\n    }\n\n    // Called from EventDrag\n    onDragAbort({ context, dragData }) {\n        // Aborted a drag in a scrolled scheduler, with origin now out of view. Element is no longer needed\n        if (this.resourceStore.indexOf(dragData.record.resource) < this.scheduler.topRow.dataIndex) {\n            context.element.remove();\n        }\n    }\n\n    // Called from EventSelection\n    toggleCls(assignmentRecord, cls, add = true, useWrapper = false) {\n        const\n            element      = this.client.getElementFromAssignmentRecord(assignmentRecord, useWrapper),\n            // <remove-on-release>\n            // TODO: Should be assignmentRecord.resourceId, but breaks engine. Hoping https://github.com/bryntum/bryntum-suite/pull/1252 will fix it\n            // </remove-on-release>\n            resourceData = this.resourceMap.get(assignmentRecord.isModel ? assignmentRecord.get('resourceId') : assignmentRecord.resourceId),\n            eventData    = resourceData?.eventsData.find(d => d.eventId === assignmentRecord.eventId);\n\n        // Update cached config\n        if (eventData) {\n            eventData[useWrapper ? 'wrapperCls' : 'cls'][cls] = add;\n        }\n\n        // Live update element\n        if (element) {\n            // Update element\n            element.classList[add ? 'add' : 'remove'](cls);\n            // And its DOM config\n            element.lastDomConfig.className[cls] = add;\n        }\n    }\n\n    // React to rows being removed, refreshes view without any relayouting needed since layout is cached relative to row\n    onRemoveRows({ rows }) {\n        rows.forEach(row => this.rowMap.delete(row));\n        this.onRenderDone();\n    }\n\n    // Reset renderer flag before any renderers are called\n    onEarlyScroll() {\n        this.rendererCalled = false;\n    }\n\n    // If vertical scroll did not cause a renderer to be called we still want to update since we only draw events in\n    // view, \"independent\" from their rows\n    updateFromVerticalScroll() {\n        this.fromScroll = true;\n        if (!this.rendererCalled) {\n            this.onRenderDone();\n        }\n    }\n\n    // Update header range on horizontal scroll. No need to draw any tasks, Gantt only cares about vertical scroll\n    updateFromHorizontalScroll(scrollX, force) {\n        const\n            me            = this,\n            {\n                scheduler,\n                scrollBuffer\n            } = me,\n            renderAll     = scrollBuffer === -1,\n            {\n                timeAxisSubGrid,\n                timeAxis,\n                rtl\n            }             = scheduler,\n            { width }     = timeAxisSubGrid,\n            { totalSize } = scheduler.timeAxisViewModel,\n            start         = scrollX,\n            // If there are few pixels left from the right most position then just render all remaining ticks,\n            // there wouldn't be many. It makes end date reachable with more page zoom levels while not having any poor\n            // implications.\n            // 5px to make TimeViewRangePageZoom test stable in puppeteer.\n            returnEnd     = timeAxisSubGrid.scrollable.maxX !== 0 && Math.abs(timeAxisSubGrid.scrollable.maxX) <= Math.round(start) + 5,\n            startDate     = renderAll ? timeAxis.startDate : scheduler.getDateFromCoord({ coord : Math.max(0, start - scrollBuffer), ignoreRTL : true }),\n            endDate       = returnEnd || renderAll ? timeAxis.endDate : (scheduler.getDateFromCoord({ coord : start + width + scrollBuffer, ignoreRTL : true }) || timeAxis.endDate);\n\n        if (\n            startDate && !scheduler._viewPresetChanging &&\n            // If rendering all, no action needed if scrolling horizontally unless start/end/tick size etc changes\n            (!renderAll || force || (startDate - (me._visibleDateRange?.startDate || 0)) || (endDate - (me._visibleDateRange?.endDate || 0)))\n        ) {\n            me._visibleDateRange = { startDate, endDate, startMS : startDate.getTime(), endMS : endDate.getTime() };\n            me.viewportCoords  = renderAll ? { left : 0, right : totalSize } : rtl\n                // RTL starts all the way to the right (and goes in opposite direction)\n                ? { left : totalSize - scrollX - width + scrollBuffer, right : totalSize - scrollX - scrollBuffer }\n                // LTR all the way to the left\n                : { left : scrollX - scrollBuffer, right : scrollX + width + scrollBuffer };\n\n            // Update timeaxis header making it display the new dates\n            const range = scheduler.timeView.range = { startDate, endDate };\n\n            scheduler.onVisibleDateRangeChange(range);\n\n            // If refresh is suspended, someone else is responsible for updating the UI later\n            if (!scheduler.refreshSuspended && scheduler.rowManager.rows.length) {\n                // Gets here too early in Safari for ResourceHistogram. ResizeObserver triggers a scroll before rows are\n                // rendered first time. Could not track down why, bailing out\n                if (scheduler.rowManager.rows[0].id === null) {\n                    return;\n                }\n\n                me.fromScroll = true;\n                scheduler.rowManager.rows.forEach(row => me.refreshEventsForResource(row, false, false));\n\n                me.onRenderDone();\n            }\n        }\n    }\n\n    // Called from SchedulerEventRendering\n    repaintEventsForResource(resourceRecord) {\n        this.refreshResources([resourceRecord.id]);\n    }\n\n    onBeforeRowHeightChange() {\n        // Row height is cached per resource, all have to be re-laid out\n        this.clearAll();\n    }\n\n    //endregion\n\n    //region Refresh resources\n\n    refreshResourcesOnDataReady(resourceIds) {\n        resourceIds.forEach(id => this.toDrawOnDataReady.add(id));\n    }\n\n    /**\n     * Clears resources directly and redraws them on next project refresh\n     * @param {Number[]|String[]} resourceIds\n     * @private\n     */\n    refreshResourcesWhenReady(resourceIds) {\n        this.clearResources(resourceIds);\n        resourceIds.forEach(id => this.toDrawOnProjectRefresh.add(id));\n    }\n\n    /**\n     * Clears and redraws resources directly. Respects schedulers refresh suspension\n     * @param {Number[]|String[]} ids Resource ids\n     * @param {Boolean} [transition] Use transition or not\n     * @private\n     */\n    refreshResources(ids, transition = true) {\n        const\n            me            = this,\n            { scheduler } = me,\n            rows          = [],\n            noRows        = [];\n\n        me.clearResources(ids);\n\n        if (!scheduler.refreshSuspended) {\n            ids.forEach(id => {\n                const row = scheduler.getRowById(id);\n                if (row) {\n                    rows.push(row);\n                }\n                else {\n                    noRows.push(row);\n                }\n            });\n\n            scheduler.runWithTransition(() => {\n                // Rendering rows populates row heights, but not all resources might have a row in view\n                scheduler.calculateRowHeights(noRows.map(id => this.resourceStore.getById(id)), true);\n\n                // Render those that do\n                scheduler.rowManager.renderRows(rows);\n            }, transition);\n        }\n    }\n\n    //endregion\n\n    //region Stack & pack\n\n    layoutEventVerticallyStack(bandIndex, eventRecord, resourceRecord) {\n        const { barMargin, resourceMargin, contentHeight } = this.scheduler.getResourceLayoutSettings(resourceRecord, eventRecord.parent);\n\n        return bandIndex === 0\n            ? resourceMargin\n            : resourceMargin + bandIndex * contentHeight + bandIndex * barMargin;\n    }\n\n    layoutEventVerticallyPack(topFraction, heightFraction, eventRecord, resourceRecord) {\n        const\n            {\n                barMargin,\n                resourceMargin,\n                contentHeight\n            }               = this.scheduler.getResourceLayoutSettings(resourceRecord, eventRecord.parent),\n            count           = 1 / heightFraction,\n            bandIndex       = topFraction * count, // \"y\" within row\n            height          = (contentHeight - ((count - 1) * barMargin)) * heightFraction,\n            top             = resourceMargin + bandIndex * height + bandIndex * barMargin;\n\n        return {\n            top, height\n        };\n    }\n\n    //endregion\n\n    //region Render\n\n    /**\n     * Used by event drag features to bring into existence event elements that are outside of the rendered block.\n     * @param {Scheduler.model.TimeSpan} eventRecord The event to render\n     * @param {Scheduler.model.ResourceModel} [resourceRecord] The event to render\n     * @private\n     */\n    addTemporaryDragElement(eventRecord, resourceRecord = eventRecord.resource) {\n        const\n            { scheduler } = this,\n            renderData    = scheduler.generateRenderData(eventRecord, resourceRecord, { timeAxis : true, viewport : true });\n\n        renderData.absoluteTop = renderData.row\n            ? (renderData.top + renderData.row.top)\n            : scheduler.getResourceEventBox(eventRecord, resourceRecord, true).top;\n\n        const\n            domConfig = this.renderEvent(renderData),\n            { dataset } = domConfig;\n\n        delete domConfig.tabIndex;\n        delete dataset.eventId;\n        delete dataset.resourceId;\n        delete dataset.assignmentId;\n        delete dataset.syncId;\n        dataset.transient = true;\n        domConfig.parent = this.scheduler.foregroundCanvas;\n\n        // So that the regular DomSyncing which may happen during scroll does not\n        // sweep up and reuse the temporary element.\n        domConfig.retainElement = true;\n\n        const result = DomHelper.createElement(domConfig);\n\n        result.innerElement = result.firstChild;\n\n        eventRecord.instanceMeta(scheduler).hasTemporaryDragElement = true;\n\n        return result;\n    }\n\n    // Earlier start dates are above later tasks\n    // If same start date, longer tasks float to top\n    // If same start + duration, sort by name\n    // Fn can be called with layout date or event records (from EventNavigation)\n    eventSorter(a, b) {\n        if (this.overlappingEventSorter) {\n            return this.overlappingEventSorter(a.eventRecord || a, b.eventRecord || b);\n        }\n\n        const\n            // <remove-on-release>\n            // TODO: Rename startMS -> startDateMS to not have to have isModel check here (and to be consistent)\n            // </remove-on-release>\n            startA    = a.isModel ? a.startDateMS : a.dataStartMS || a.startMS, // dataXX are used if configured with fillTicks\n            endA      = a.isModel ? a.endDateMS : a.dataEndMS || a.endMS,\n            startB    = b.isModel ? b.startDateMS : b.dataStartMS || b.startMS,\n            endB      = b.isModel ? b.endDateMS :  b.dataEndMS || b.endMS,\n            nameA     = a.isModel ? a.name : a.eventRecord.name,\n            nameB     = b.isModel ? b.name : b.eventRecord.name;\n\n        return startA - startB || endB - endA || (nameA < nameB ? -1 : nameA == nameB ? 0 : 1);\n    }\n\n    /**\n     * Converts a start/endDate into a MS value used when rendering the event. If scheduler is configured with\n     * `fillTicks: true` the value returned will be snapped to tick start/end.\n     * @private\n     * @param {Scheduler.model.TimeSpan} eventRecord\n     * @param {String} startDateField\n     * @param {String} endDateField\n     * @param {Boolean} useEventBuffer\n     * @param {Scheduler.model.ResourceModel} resourceRecord\n     * @returns {Object} Object of format { startMS, endMS, durationMS }\n     */\n    calculateMS(eventRecord, startDateField, endDateField, useEventBuffer, resourceRecord) {\n        const\n            me                    = this,\n            { scheduler }         = me,\n            { timeAxisViewModel } = scheduler;\n\n        let startMS    = getStartEnd(scheduler, eventRecord, false, startDateField, useEventBuffer),\n            endMS      = getStartEnd(scheduler, eventRecord, true, endDateField, useEventBuffer),\n            durationMS = endMS - startMS;\n\n        if (scheduler.milestoneLayoutMode !== 'default' && durationMS === 0) {\n            const\n                pxPerMinute = timeAxisViewModel.getSingleUnitInPixels('minute'),\n                lengthInPx  = scheduler.getMilestoneLabelWidth(eventRecord, resourceRecord),\n                duration    = lengthInPx * (1 / pxPerMinute);\n\n            durationMS = duration * 60 * 1000;\n\n            if (scheduler.milestoneTextPosition === 'always-outside') {\n                // Milestone is offset half a diamond to the left (compensated in CSS with padding) for the layout pass,\n                // to take diamond corner into account\n                const\n                    diamondSize = scheduler.getResourceLayoutSettings(resourceRecord, eventRecord.parent).contentHeight,\n                    diamondMS   = diamondSize * (1 / pxPerMinute) * 60 * 1000;\n                startMS -= diamondMS / 2;\n                endMS = startMS + durationMS;\n            }\n            else {\n                switch (scheduler.milestoneAlign) {\n                    case 'start':\n                    case 'left':\n                        endMS = startMS + durationMS;\n                        break;\n                    case 'end':\n                    case 'right':\n                        endMS = startMS;\n                        startMS = endMS - durationMS;\n                        break;\n                    default: // using center as default\n                        endMS = startMS + durationMS / 2;\n                        startMS = endMS - durationMS;\n                        break;\n                }\n            }\n        }\n\n        return {\n            startMS,\n            endMS,\n            durationMS\n        };\n    }\n\n    /**\n     * Returns event render data except actual position information.\n     * @param timeSpan\n     * @param rowRecord\n     * @returns {HorizontalRenderData}\n     * @private\n     */\n    setupRenderData(timeSpan, rowRecord) {\n        const\n            me                             = this,\n            { scheduler }                  = me,\n            {\n                timeAxis,\n                timeAxisViewModel\n            }                              = scheduler,\n            {\n                preamble,\n                postamble\n            }                              = timeSpan,\n            useEventBuffer                 = me.isProHorizontalRendering && scheduler.features.eventBuffer?.enabled &&\n                (preamble || postamble) && !timeSpan.isMilestone,\n            pxPerMinute                    = timeAxisViewModel.getSingleUnitInPixels('minute'),\n            { isBatchUpdating }            = timeSpan,\n            startDateField                 = useEventBuffer ? 'wrapStartDate' : 'startDate',\n            endDateField                   = useEventBuffer ? 'wrapEndDate' : 'endDate',\n            // Must use Model.get in order to get latest values in case we are inside a batch.\n            // EventResize changes the endDate using batching to enable a tentative change\n            // via the batchedUpdate event which is triggered when changing a field in a batch.\n            // Fall back to accessor if propagation has not populated date fields.\n            // Use endDate accessor if duration has not been propagated to create endDate\n            timespanStart                  = isBatchUpdating && !useEventBuffer ? timeSpan.get(startDateField) : timeSpan[startDateField],\n            // Allow timespans to be rendered even when they are missing an end date\n            timespanEnd                    = isBatchUpdating && !useEventBuffer ? timeSpan.get(endDateField) : timeSpan[endDateField] || timespanStart,\n            viewStartMS                    = timeAxis.startMS,\n            viewEndMS                      = timeAxis.endMS,\n            { startMS, endMS, durationMS } = me.calculateMS(timeSpan, startDateField, endDateField, useEventBuffer, rowRecord),\n            // These flags have two components because includeOutsideViewport\n            // means that we can be calculating data for events either side of\n            // the TimeAxis.\n            // The start is outside of the view if it's before *or after* the TimeAxis range.\n            // 1 set means the start is before the TimeAxis\n            // 2 set means the start is after the TimeAxis\n            // Either way, a truthy value means that the start is outside of the TimeAxis.\n            startsOutsideView              = startMS < viewStartMS | ((startMS > viewEndMS) << 1),\n            // The end is outside of the view if it's before *or after* the TimeAxis range.\n            // 1 set means the end is after the TimeAxis\n            // 2 set means the end is before the TimeAxis\n            // Either way, a truthy value means that the end is outside of the TimeAxis.\n            endsOutsideView                = endMS > viewEndMS | ((endMS <= viewStartMS) << 1),\n            durationMinutes                = durationMS / (1000 * 60),\n            width                          = endsOutsideView ? pxPerMinute * durationMinutes : null,\n            row                            = scheduler.getRowById(rowRecord);\n\n        return {\n            eventRecord : timeSpan,\n            taskRecord  : timeSpan, // Helps with using Gantt projects in Scheduler Pro\n            start       : timespanStart,\n            end         : timespanEnd,\n            rowId       : rowRecord.id,\n            children    : [],\n            startMS,\n            endMS,\n            durationMS,\n            startsOutsideView,\n            endsOutsideView,\n            width,\n            row,\n            useEventBuffer\n        };\n    }\n\n    /**\n     * Populates render data with information about width and horizontal position of the wrap.\n     * @param {HorizontalRenderData} renderData\n     * @returns {Boolean}\n     * @private\n     */\n    fillTimeSpanHorizontalPosition(renderData) {\n        const\n            { startMS, endMS, durationMS } = renderData,\n            // With delayed calculation there is no guarantee data is normalized, might be missing a crucial component\n            result = startMS != null && endMS != null && this.calculateHorizontalPosition(renderData, startMS, endMS, durationMS);\n\n        if (result) {\n            Object.assign(renderData, result);\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Fills render data with `left` and `width` properties\n     * @param {HorizontalRenderData} renderData\n     * @param {Number} startMS\n     * @param {Number} endMS\n     * @param {Number} durationMS\n     * @returns {{left: number, width: number, clippedStart: boolean, clippedEnd: boolean}|null}\n     * @private\n     */\n    calculateHorizontalPosition(renderData, startMS, endMS, durationMS) {\n        const\n            { scheduler }   = this,\n            {\n                timeAxis,\n                timeAxisViewModel\n            }               = scheduler,\n            {\n                startsOutsideView,\n                endsOutsideView,\n                eventRecord\n            }               = renderData,\n            viewStartMS     = timeAxis.startMS,\n            pxPerMinute     = timeAxisViewModel.getSingleUnitInPixels('minute'),\n            durationMinutes = durationMS / (1000 * 60),\n            width           = endsOutsideView ? pxPerMinute * durationMinutes : null;\n\n        let endX = scheduler.getCoordinateFromDate(endMS, {\n                local            : true,\n                respectExclusion : true,\n                isEnd            : true\n            }), startX, clippedStart = false, clippedEnd = false;\n\n        // If event starts outside of view, estimate where.\n        if (startsOutsideView) {\n            startX = (startMS - viewStartMS) / (1000 * 60) * pxPerMinute;\n\n            // Flip -ve startX to being to the right of the viewport end\n            if (scheduler.rtl) {\n                startX = scheduler.timeAxisSubGrid.scrollable.scrollWidth - startX;\n            }\n        }\n        // Starts in view, calculate exactly\n        else {\n            // If end date is included in time axis but start date is not (when using time axis exclusions), snap start date to next included data\n            startX = scheduler.getCoordinateFromDate(startMS, {\n                local              : true,\n                respectExclusion   : true,\n                isEnd              : false,\n                snapToNextIncluded : endX !== -1\n            });\n\n            clippedStart = startX === -1;\n        }\n\n        if (endsOutsideView) {\n            // Have to clip the events in Safari when using stickyEvents, it does not support `overflow: clip`\n            if (BrowserHelper.isSafari && scheduler.features.stickyEvents && timeAxis.endMS  || (endX === -1 && !timeAxis.continuous)) {\n                endX = scheduler.getCoordinateFromDate(timeAxis.endMS);\n            }\n            else {\n                // Parentheses needed\n                endX = startX + width * (scheduler.rtl ? -1 : 1);\n            }\n        }\n        else {\n            clippedEnd = endX === -1;\n        }\n\n        if (clippedEnd && !clippedStart) {\n            // We know where to start but not where to end, snap it (the opposite is already handled by the\n            // snapToNextIncluded flag when calculating startX above)\n            endX = scheduler.getCoordinateFromDate(endMS, {\n                local              : true,\n                respectExclusion   : true,\n                isEnd              : true,\n                snapToNextIncluded : true\n            });\n        }\n\n        // If the element is very wide there's no point in displaying it all.\n        // Indeed the element may not be displayable at extremely large widths.\n        if (width > MAX_WIDTH) {\n            // The start is before the TimeAxis start\n            if (startsOutsideView === 1) {\n                // Both ends outside - spans TimeAxis\n                if (endsOutsideView === 1) {\n                    startX = -100;\n                    endX = scheduler.timeAxisColumn.width + 100;\n                }\n                // End is in view\n                else {\n                    startX = endX - MAX_WIDTH;\n                }\n            }\n            // The end is after, but the start is in view\n            else if (endsOutsideView === 1) {\n                endX = startX + MAX_WIDTH;\n            }\n        }\n\n        if (clippedStart && clippedEnd) {\n            // Both ends excluded, but there might be some part in between that should be displayed...\n            startX = scheduler.getCoordinateFromDate(startMS, {\n                local              : true,\n                respectExclusion   : true,\n                isEnd              : false,\n                snapToNextIncluded : true,\n                max                : endMS\n            });\n\n            endX = scheduler.getCoordinateFromDate(endMS, {\n                local              : true,\n                respectExclusion   : true,\n                isEnd              : true,\n                snapToNextIncluded : true,\n                min                : startMS\n            });\n\n            if (startX === endX) {\n                // Raise flag on instance meta to avoid duplicating this logic\n                eventRecord.instanceMeta(scheduler).excluded = true;\n                // Excluded by time axis exclusion rules, render nothing\n                return null;\n            }\n        }\n\n        return {\n            left  : Math.min(startX, endX),\n            // Use min width 5 for normal events, 0 for milestones (won't have width specified at all in the\n            // end). During drag create a normal event can get 0 duration, in this case we still want it to\n            // get a min width of 5 (6px for wrapper, -1 px for event element\n            width : Math.abs(endX - startX) || (eventRecord.isMilestone && !eventRecord.meta.isDragCreating ? 0 : 6),\n            clippedStart,\n            clippedEnd\n        };\n    }\n\n    fillTimeSpanVerticalPosition(renderData, rowRecord) {\n        const\n            { scheduler }  = this,\n            { start, end } = renderData,\n            {\n                resourceMargin,\n                contentHeight\n            }              = scheduler.getResourceLayoutSettings(rowRecord);\n\n        // If filling ticks we need to also keep data's MS values, since they are used for sorting timespans\n        if (scheduler.fillTicks) {\n            renderData.dataStartMS = start.getTime();\n            renderData.dataEndMS = end.getTime();\n        }\n\n        renderData.top = Math.max(0, resourceMargin);\n\n        if (scheduler.managedEventSizing) {\n            // Timespan height should be at least 1px\n            renderData.height = contentHeight;\n        }\n    }\n\n    /**\n     * Gets timespan coordinates etc. Relative to containing row. If the timespan is outside of the zone in\n     * which timespans are rendered, that is outside of the TimeAxis, or outside of the vertical zone in which timespans\n     * are rendered, then `undefined` is returned.\n     * @private\n     * @param {Scheduler.model.TimeSpan} timeSpan TimeSpan record\n     * @param {Core.data.Model} rowRecord Row record\n     * @param {Boolean|Object} includeOutside Specify true to get boxes for timespans outside of the rendered zone in both\n     * dimensions. This option is used when calculating dependency lines, and we need to include routes from timespans\n     * which may be outside the rendered zone.\n     * @param {Boolean} includeOutside.timeAxis Pass as `true` to include timespans outside of the TimeAxis's bounds\n     * @param {Boolean} includeOutside.viewport Pass as `true` to include timespans outside of the vertical timespan viewport's bounds.\n     * @returns {{event/task: *, left: number, width: number, start: (Date), end: (Date), startMS: number, endMS: number, startsOutsideView: boolean, endsOutsideView: boolean}}\n     */\n    getTimeSpanRenderData(timeSpan, rowRecord, includeOutside = false) {\n        const\n            me                     = this,\n            { scheduler }          = me,\n            { timeAxis }           = scheduler,\n            includeOutsideTimeAxis = includeOutside === true || includeOutside.timeAxis,\n            includeOutsideViewport = includeOutside === true || includeOutside.viewport;\n\n        // If timespan is outside the TimeAxis, give up trying to calculate a layout (Unless we're including timespans\n        // outside our zone)\n        if (includeOutsideTimeAxis || timeAxis.isTimeSpanInAxis(timeSpan)) {\n            const row = scheduler.getRowById(rowRecord);\n\n            if (row || includeOutsideViewport) {\n                const data = me.setupRenderData(timeSpan, rowRecord);\n\n                if (!me.fillTimeSpanHorizontalPosition(data)) {\n                    return null;\n                }\n\n                me.fillTimeSpanVerticalPosition(data, rowRecord);\n\n                return data;\n            }\n        }\n    }\n\n    // Layout a set of events, code shared by normal event render path and nested events\n    layoutEvents(resourceRecord, allEvents, includeOutside = false, parentEventRecord, eventSorter) {\n        const\n            me                   = this,\n            { scheduler }        = me,\n            { timeAxis }         = scheduler,\n            // Generate layout data\n            eventsData           = allEvents.reduce((result, eventRecord) => {\n                // Only those in time axis (by default)\n                if ((includeOutside || timeAxis.isTimeSpanInAxis(eventRecord))) {\n                    const eventBox = scheduler.generateRenderData(eventRecord, resourceRecord, false);\n\n                    // Collect layouts of visible events\n                    if (eventBox) {\n                        result.push(eventBox);\n                    }\n                }\n\n                return result;\n            }, []);\n\n        // Ensure the events are rendered in natural order so that navigation works.\n        eventsData.sort(eventSorter ?? me.eventSorter);\n\n        let rowHeight = scheduler.getAppliedResourceHeight(resourceRecord, parentEventRecord);\n\n        const\n            // Only events and tasks should be considered during layout (not resource time ranges if any, or events\n            // being drag created when configured with lockLayout)\n            layoutEventData = eventsData.filter(({ eventRecord }) => eventRecord.isEvent && !eventRecord.meta.excludeFromLayout),\n            eventLayout     = scheduler.getEventLayout(resourceRecord, parentEventRecord),\n            layoutHandler   = scheduler.getEventLayoutHandler(eventLayout);\n\n        if (layoutHandler) {\n            const\n                {\n                    barMargin,\n                    resourceMargin,\n                    contentHeight\n                }              = scheduler.getResourceLayoutSettings(resourceRecord, parentEventRecord),\n                bandsRequired  = layoutHandler.applyLayout(layoutEventData, resourceRecord) || 1;\n\n            if (layoutHandler.type === 'layoutFn') {\n                rowHeight = bandsRequired;\n            }\n            else {\n                rowHeight = (bandsRequired * contentHeight) + ((bandsRequired - 1) * barMargin) + resourceMargin * 2;\n            }\n        }\n        // Apply z-index when event elements might overlap, to keep \"overlap order\" consistent\n        else if (layoutEventData.length > 0) {\n            for (let i = 0; i < layoutEventData.length; i++) {\n                const data = layoutEventData[i];\n                // $event-zindex scss var is 5\n                data.wrapperStyle += `;z-index:${i + 5}`;\n            }\n        }\n\n        return { rowHeight, eventsData };\n    }\n\n    // Lay out events within a resource, relative to the resource\n    layoutResourceEvents(resourceRecord, includeOutside = false) {\n        const\n            me                   = this,\n            { scheduler }        = me,\n            {\n                eventStore,\n                assignmentStore,\n                timeAxis\n            }                    = scheduler,\n            // Events for this resource\n            resourceEvents = eventStore.getEvents({\n                includeOccurrences : scheduler.enableRecurringEvents,\n                resourceRecord,\n                startDate          : timeAxis.startDate,\n                endDate            : timeAxis.endDate,\n                filter             : (assignmentStore.isFiltered || eventStore.isFiltered) && (eventRecord =>\n                    eventRecord.assignments.some(a => a.resource === resourceRecord.$original && assignmentStore.includes(a)))\n            }),\n            // Call a chainable template function on scheduler to allow features to add additional \"events\" to render\n            // Currently used by ResourceTimeRanges, CalendarHighlight & NestedEvents\n            allEvents            = scheduler.getEventsToRender(resourceRecord, resourceEvents) || [];\n\n        return me.layoutEvents(resourceRecord, allEvents, includeOutside);\n    }\n\n    // Generates a DOMConfig for an EventRecord\n    renderEvent(data, rowHeight) {\n        const\n            { scheduler }                                     = this,\n            { resourceRecord, assignmentRecord, eventRecord } = data,\n            {\n                milestoneLayoutMode    : layoutMode,\n                milestoneTextPosition  : textPosition\n            }    = scheduler,\n            // Sync using assignment id for events and event id for ResourceTimeRanges. Add eventId for occurrences to make them unique\n            syncId                                            = assignmentRecord\n                // Assignment, might be an occurrence\n                ? this.assignmentStore.getOccurrence(assignmentRecord, eventRecord).id\n                // Something else, probably a ResourceTimeRange\n                : data.eventId,\n            eventElementConfig = {\n                className : data.cls,\n                style     : data.style || '',\n                children  : data.children,\n                role      : 'presentation',\n                dataset   : {\n                    // Each feature putting contents in the event wrap should have this to simplify syncing and\n                    // element retrieval after sync\n                    taskFeature : 'event'\n                },\n                syncOptions : {\n                    syncIdField : 'taskBarFeature'\n                }\n            },\n            // Event element config, applied to existing element or used to create a new one below\n            elementConfig                        = {\n                className : data.wrapperCls,\n                tabIndex  : ('tabIndex' in data) ? data.tabIndex : -1,\n                children  : [\n                    eventElementConfig,\n                    ...data.wrapperChildren\n                ],\n                style : {\n                    top    : data.absoluteTop,\n                    left   : data.left,\n                    // ResourceTimeRanges fill row height, cannot be done earlier than this since row height is not\n                    // known initially\n                    height : data.fillSize ? rowHeight : data.height,\n                    // DomHelper appends px to dimensions when using numbers.\n                    // Do not ignore width for normal milestones, use height value. It is required to properly center\n                    // pseudo element with top/bottom labels.\n                    // Milestone part of layout that contain the label gets a width\n                    width  : (eventRecord.isMilestone && !eventRecord.meta.isDragCreating) &&\n                             ((layoutMode === 'default' && (textPosition === 'outside' || (textPosition === 'inside' && !data.width))) ||\n                                 textPosition === 'always-outside') ? data.height : data.width,\n                    style    : data.wrapperStyle,\n                    fontSize : data.height + 'px'\n                },\n                dataset : {\n                    // assignmentId is set in this function conditionally\n                    resourceId : resourceRecord.id,\n                    eventId    : data.eventId, // Not using eventRecord.id to distinguish between Event and ResourceTimeRange\n                    syncId     : resourceRecord.isLinked ? `${syncId}_${resourceRecord.id}` : syncId\n                },\n                // Will not be part of DOM, but attached to the element\n                elementData   : data,\n                // Dragging etc. flags element as retained, to not reuse/release it during that operation. Events\n                // always use assignments, but ResourceTimeRanges does not\n                retainElement : assignmentRecord?.instanceMeta(scheduler).retainElement || eventRecord.instanceMeta(scheduler).retainElement,\n                // Options for this level of sync, lower levels can have their own\n                syncOptions   : {\n                    syncIdField      : 'taskFeature',\n                    // Remove instead of release when a feature is disabled\n                    releaseThreshold : 0\n                }\n            };\n\n        // Write back the correct height for elements filling the row, to not derender them later based on wrong height\n        if (data.fillSize) {\n            data.height = rowHeight;\n        }\n\n        // Some browsers throw warnings on zIndex = ''\n        if (data.zIndex) {\n            elementConfig.zIndex = data.zIndex;\n        }\n\n        // Do not want to spam dataset with empty prop when not using assignments (ResourceTimeRanges)\n        if (assignmentRecord) {\n            elementConfig.dataset.assignmentId = assignmentRecord.id;\n        }\n\n        data.elementConfig = elementConfig;\n\n        scheduler.afterRenderEvent({ renderData : data, rowHeight, domConfig : elementConfig });\n\n        return elementConfig;\n    }\n\n    /**\n     * Refresh events for resource record (or Row), clearing its cache and forcing DOM refresh.\n     * @param {Scheduler.model.ResourceModel} recordOrRow Record or row to refresh\n     * @param {Boolean} [force] Specify `false` to prevent clearing cache and forcing DOM refresh\n     * @internal\n     */\n    refreshEventsForResource(recordOrRow, force = true, draw = true) {\n        const\n            me     = this,\n            record = me.scheduler.store.getById(recordOrRow.isRow ? recordOrRow.id : recordOrRow),\n            row    = me.scheduler.rowManager.getRowFor(record);\n\n        if (force) {\n            me.clearResources([record]);\n        }\n\n        if (row && record) {\n            me.renderer({ row, record });\n\n            if (force && draw) {\n                me.onRenderDone();\n            }\n        }\n    }\n\n    // Returns layout for the current resource. Used by the renderer and exporter\n    getResourceLayout(resourceRecord) {\n        const me = this;\n\n        // Use cached layout if available\n        let resourceLayout = me.resourceMap.get(resourceRecord.id);\n\n        if (!resourceLayout || resourceLayout.invalid) {\n            // Previously we would bail out here if engine wasn't ready. Now we instead allow drawing in most cases,\n            // since data can be read and written during commit (previously it could not)\n            if (me.suspended) {\n                return;\n            }\n\n            resourceLayout = me.layoutResourceEvents(resourceRecord, false);\n            me.resourceMap.set(resourceRecord.id, resourceLayout);\n        }\n\n        return resourceLayout;\n    }\n\n    getEventDOMConfigForCurrentView(resourceLayout, row, left, right) {\n        const\n            me                        = this,\n            { bufferSize, scheduler } = me,\n            { labels, eventBuffer }   = scheduler.features,\n            // Left/right labels and event buffer elements require using a buffer to not derender too early\n            usesLabels                = eventBuffer?.enabled || (labels?.enabled && (labels.left || labels.right || labels.before || labels.after)),\n            { eventsData }            = resourceLayout,\n            // When scrolling, layout will be reused and any events that are still in view can reuse their DOM configs\n            reusableDOMConfigs        = me.fromScroll ? me.rowMap.get(row) : null,\n            eventDOMConfigs           = [];\n\n        let useLeft, useRight;\n\n        // Only collect configs for those actually in view\n        for (let i = 0; i < eventsData.length; i++) {\n            const layout = eventsData[i];\n\n            useLeft = left;\n            useRight = right;\n\n            // Labels/milestones requires keeping events rendered longer\n            if (usesLabels || layout.width === 0) {\n                useLeft -= bufferSize;\n                useRight += bufferSize;\n            }\n\n            if ((layout.left + layout.width) >= useLeft && layout.left <= useRight) {\n                layout.absoluteTop = layout.top + row.top;\n                // <remove-on-release>\n                // TODO: Consider using a map of maps instead of having to find() here. But it is anyhow much faster\n                //  than not reusing dom configs\n                // </remove-on-release>\n                const prevDomConfig = reusableDOMConfigs?.find(config => config.elementData.eventId === layout.eventId &&\n                    config.elementData.resourceId === layout.resourceId);\n                eventDOMConfigs.push(prevDomConfig ?? me.renderEvent(layout, resourceLayout.rowHeight));\n            }\n        }\n\n        return eventDOMConfigs;\n    }\n\n    // Called per row in \"view\", collect configs\n    renderer({ row, record : resourceRecord, size = {} }) {\n        const me = this;\n\n        // Bail out for group headers/footers\n        if (resourceRecord.isSpecialRow) {\n            // Clear any cached layout for row retooled to special row, and bail out\n            me.rowMap.delete(row);\n            return;\n        }\n\n        const\n            { left, right } = me.viewportCoords,\n            resourceLayout  = me.getResourceLayout(resourceRecord);\n\n        // Layout is suspended\n        if (!resourceLayout) {\n            return;\n        }\n\n        // Size row to fit events\n        size.height = resourceLayout.rowHeight;\n        // Avoid storing our calculated height as the rows max height, to not affect next round of calculations\n        size.transient = true;\n\n        const eventDOMConfigs = me.getEventDOMConfigForCurrentView(resourceLayout, row, left, right);\n\n        me.rowMap.set(row, eventDOMConfigs);\n\n        // Keep track if we need to draw on vertical scroll or not, to not get multiple onRenderDone() calls\n        me.rendererCalled = true;\n    }\n\n    // Called when the current row rendering \"pass\" is complete, sync collected configs to DOM\n    onRenderDone() {\n        const\n            { scheduler, rowMap, verticalBufferSize }  = this,\n            visibleEventDOMConfigs                     = [],\n            bodyTop                                    = scheduler._scrollTop ?? 0,\n            viewTop                                    = bodyTop - verticalBufferSize,\n            viewBottom                                 = bodyTop + scheduler._bodyRectangle.height + verticalBufferSize,\n            unbuffered                                 = verticalBufferSize < 0,\n            unmanagedSize                              = !scheduler.managedEventSizing;\n\n        // Event configs are collected when rows are rendered, but we do not want to waste resources on rendering\n        // events far out of view. Especially with many events per row giving large row heights, rows in the RowManagers\n        // buffer might far away -> collect events for rows within viewport + small vertical buffer\n        rowMap.forEach((eventDOMConfigs, row) => {\n            // Render events \"in view\". Export specifies a negative verticalBufferSize to disable it\n            if (unbuffered || (row.bottom > viewTop && row.top < viewBottom)) {\n                for (let i = 0; i < eventDOMConfigs.length; i++) {\n                    const\n                        config = eventDOMConfigs[i],\n                        data   = config.elementData,\n                        {\n                            absoluteTop,\n                            eventRecord\n                        } = data;\n\n                    // Conditions under which event bars are included in the DOM:\n                    //   If bufferSize is -ve, meaning render all events.\n                    //   scheduler.managedEventSizing is false.\n                    //   The event is beig drag-created or drag-resized\n                    //   The event is within the bounds of the rendered region.\n                    if (unbuffered || unmanagedSize || eventRecord.meta.isDragCreating || eventRecord.meta.isResizing || (absoluteTop + data.height > viewTop && absoluteTop < viewBottom)) {\n                        visibleEventDOMConfigs.push(config);\n                    }\n                }\n            }\n\n            // We are using cached DomConfigs. When DomSync releases an element, it also flags the config as released.\n            // Next time we pass it that very same config, it says it is released and nothing shows up.\n            //\n            // We are breaching the DomSync contract a bit with the cached approach. DomSync expects new configs on each\n            // call, so to facilitate that we clone the configs shallowly (nothing deep is affected by sync releasing).\n            // That way we can always pass it fresh unreleased configs.\n            for (let i = 0; i < eventDOMConfigs.length; i++) {\n                eventDOMConfigs[i] = { ...eventDOMConfigs[i] };\n            }\n        });\n\n        this.fromScroll = false;\n        this.visibleEventDOMConfigs = visibleEventDOMConfigs;\n\n        DomSync.sync({\n            domConfig : {\n                onlyChildren : true,\n                children     : visibleEventDOMConfigs\n            },\n            targetElement : scheduler.foregroundCanvas,\n            syncIdField   : 'syncId',\n\n            // Called by DomSync when it creates, releases or reuses elements\n            callback({ action, domConfig, lastDomConfig, targetElement, jsx }) {\n                const\n                    { reactComponent } = scheduler,\n                    // Some actions are considered first a release and then a render (reusing another element).\n                    // This gives clients code a chance to clean up before reusing an element\n                    isRelease          = releaseEventActions[action],\n                    isRender           = renderEventActions[action];\n\n                !isRelease && scheduler.processEventContent?.({\n                    jsx,\n                    action,\n                    domConfig,\n                    targetElement,\n                    isRelease,\n                    reactComponent\n                });\n\n                if (action === 'none' || !domConfig?.elementData?.isWrap) {\n                    return;\n                }\n\n                // Trigger release for events (it might be a proxy element, skip those)\n                if (isRelease && lastDomConfig?.elementData) {\n                    const\n                        { eventRecord, resourceRecord, assignmentRecord } = lastDomConfig.elementData,\n                        event = {\n                            renderData : lastDomConfig.elementData,\n                            element    : targetElement,\n                            eventRecord,\n                            resourceRecord,\n                            assignmentRecord\n                        };\n\n                    // Process event necessary in the case of release\n                    scheduler.processEventContent?.({\n                        isRelease,\n                        targetElement,\n                        reactComponent,\n                        assignmentRecord\n                    });\n\n                    // Some browsers do not blur on set to display:none, so releasing the active element\n                    // must *explicitly* move focus outwards to the view.\n                    if (targetElement === DomHelper.getActiveElement(targetElement)) {\n                        scheduler.focusElement.focus();\n                    }\n\n                    // This event is documented on Scheduler\n                    scheduler.trigger('releaseEvent', event);\n                }\n\n                if (isRender) {\n                    const\n                        { eventRecord, resourceRecord, assignmentRecord } = domConfig.elementData,\n                        event = {\n                            renderData       : domConfig.elementData,\n                            element          : targetElement,\n                            isReusingElement : action === 'reuseElement',\n                            isRepaint        : action === 'reuseOwnElement',\n                            eventRecord,\n                            resourceRecord,\n                            assignmentRecord\n                        };\n\n                    // Prevent transitions when reusing some other events element\n                    if (action === 'reuseElement' && scheduler.isAnimating) {\n                        DomHelper.addTemporaryClass(targetElement, 'b-reusing-own', 50, scheduler);\n                    }\n\n                    // This event is documented on Scheduler\n                    scheduler.trigger('renderEvent', event);\n                }\n            }\n        });\n    }\n\n    //endregion\n\n    //region Cache\n\n    // Clears cached resource layout\n    clearResources(recordsOrIds) {\n        recordsOrIds = ArrayHelper.asArray(recordsOrIds);\n\n        const resourceIds = recordsOrIds.map(Model.asId);\n\n        //<debug>\n        if (globalThis.DEBUG) {\n            console.log('%Clearing resources ' + Array.from(resourceIds).join(','), 'color: #770000');\n        }\n        //</debug>\n\n        resourceIds.forEach(resourceId => {\n            // Invalidate resourceLayout, keeping it around in case we need it before next refresh\n            const cached = this.resourceMap.get(resourceId);\n            if (cached) {\n                cached.invalid = true;\n            }\n\n            const row = this.scheduler.getRowById(resourceId);\n            row && this.rowMap.delete(row);\n        });\n    }\n\n    clearAll({ clearDom = false, clearLayoutCache = false } = {}) {\n        const\n            me                            = this,\n            { layouts, foregroundCanvas } = me.scheduler;\n\n        //<debug>\n        if (globalThis.DEBUG) {\n            console.log('%Clearing all', 'color: #770000');\n        }\n        //</debug>\n\n        if (clearLayoutCache && layouts) {\n            for (const layout in layouts) {\n                layouts[layout].clearCache();\n            }\n        }\n\n        // it seems `foregroundCanvas` can be missing at this point\n        // for example if scheduler instance is created w/o of `appendTo` config\n        if (foregroundCanvas && clearDom) {\n            // Start from scratch when replacing the project, to not retain anything in maps or released elements\n            foregroundCanvas.syncIdMap = foregroundCanvas.lastDomConfig = null;\n\n            for (const child of foregroundCanvas.children) {\n                child.lastDomConfig = child.elementData = null;\n            }\n        }\n\n        me.resourceMap.clear();\n        me.rowMap.clear();\n    }\n\n    //endregion\n}\n","import PackMixin from './PackMixin.js';\n\n/**\n * @module Scheduler/eventlayout/VerticalLayout\n */\n\n/**\n * Assists with event layout in vertical mode, handles `eventLayout: none|pack|mixed`\n * @private\n * @mixes Scheduler/eventlayout/PackMixin\n */\nexport default class VerticalLayout extends PackMixin() {\n\n    static get defaultConfig() {\n        return {\n            coordProp : 'leftFactor',\n            sizeProp  : 'widthFactor'\n        };\n    }\n\n    // Try to pack the events to consume as little space as possible\n    applyLayout(events, columnWidth, resourceMargin, barMargin, columnIndex, eventLayout) {\n        const\n            me         = this,\n            layoutType = eventLayout.type;\n\n        return me.packEventsInBands(events, (tplData, clusterIndex, slot, slotSize) => {\n            // Stretch events to fill available width\n            if (layoutType === 'none') {\n                tplData.width = columnWidth - resourceMargin * 2;\n                tplData.left += resourceMargin;\n            }\n            else {\n                // Fractions of resource column\n                tplData.widthFactor = slotSize;\n\n                const\n                    leftFactor      = tplData.leftFactor = slot.start + (clusterIndex * slotSize),\n                    // Number of \"columns\" in the current slot\n                    packColumnCount = Math.round(1 / slotSize),\n                    // Index among those columns for current event\n                    packColumnIndex = leftFactor / slotSize,\n                    // Width with all bar margins subtracted\n                    availableWidth  = columnWidth - resourceMargin * 2 - barMargin * (packColumnCount - 1);\n\n                // Allowing two events to overlap? Slightly offset the second\n                if (layoutType === 'mixed' && packColumnCount === 2) {\n                    tplData.left += leftFactor * columnWidth / 5 + barMargin;\n                    tplData.width = columnWidth - leftFactor * columnWidth / 5 - barMargin * 2;\n                    tplData.zIndex = 5 + packColumnIndex;\n                }\n                // Pack by default\n                else {\n                    // Fractional width\n                    tplData.width = slotSize * availableWidth;\n                    // Translate to absolute position\n                    tplData.left += leftFactor * availableWidth + resourceMargin + barMargin * packColumnIndex;\n                }\n            }\n            tplData.cls['b-sch-event-narrow'] = tplData.width < me.scheduler.narrowEventWidth;\n        });\n    }\n}\n","import Base from '../../../Core/Base.js';\nimport Delayable from '../../../Core/mixin/Delayable.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\nimport DomSync from '../../../Core/helper/DomSync.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\nimport VerticalLayout from '../../eventlayout/VerticalLayout.js';\nimport Rectangle from '../../../Core/helper/util/Rectangle.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\nimport AttachToProjectMixin from '../../data/mixin/AttachToProjectMixin.js';\n\n/**\n * @module Scheduler/view/orientation/VerticalRendering\n */\n\nconst\n    releaseEventActions = {\n        releaseElement : 1, // Not used at all at the moment\n        reuseElement   : 1  // Used by some other element\n    },\n    renderEventActions  = {\n        newElement      : 1,\n        reuseOwnElement : 1,\n        reuseElement    : 1\n    },\n    chronoFields        = {\n        startDate : 1,\n        endDate   : 1,\n        duration  : 1\n    },\n    emptyObject        = Object.freeze({});\n\n/**\n * Handles event rendering in Schedulers vertical mode. Reacts to project/store changes to keep the UI up to date.\n *\n * @internal\n */\nexport default class VerticalRendering extends Base.mixin(Delayable, AttachToProjectMixin) {\n\n    //region Config & Init\n\n    static get properties() {\n        return {\n            eventMap               : new Map(),\n            resourceMap            : new Map(),\n            releasedElements       : {},\n            toDrawOnProjectRefresh : new Set(),\n            resourceBufferSize     : 1\n        };\n    }\n\n    construct(scheduler) {\n        this.client         = this.scheduler = scheduler;\n        this.verticalLayout = new VerticalLayout({ scheduler });\n\n        super.construct({});\n    }\n\n    init() {\n        const\n            me                             = this,\n            { scheduler, resourceColumns } = me;\n\n        // Resource header/columns\n        resourceColumns.resourceStore = me.resourceStore;\n\n        resourceColumns.ion({\n            name              : 'resourceColumns',\n            columnWidthChange : 'onResourceColumnWidthChange',\n            thisObj           : me\n        });\n\n        me.initialized = true;\n\n        if (scheduler.isPainted) {\n            me.renderer();\n        }\n\n        resourceColumns.availableWidth = scheduler.timeAxisSubGridElement.offsetWidth;\n    }\n\n    //endregion\n\n    //region Elements <-> Records\n\n    resolveRowRecord(elementOrEvent, xy) {\n        const\n            me            = this,\n            { scheduler } = me,\n            event         = elementOrEvent.nodeType ? null : elementOrEvent,\n            element       = event ? event.target : elementOrEvent,\n            coords        = event ? [event.borderOffsetX, event.borderOffsetY] : xy,\n            // Fix for FF on Linux having text nodes as event.target\n            el            = element.nodeType === Element.TEXT_NODE ? element.parentElement : element,\n            eventElement  = el.closest(scheduler.eventSelector);\n\n        if (eventElement) {\n            return scheduler.resourceStore.getById(eventElement.dataset.resourceId);\n        }\n\n        // Need to be inside schedule at least\n        if (!element.closest('.b-sch-timeaxis-cell')) {\n            return null;\n        }\n\n        if (!coords) {\n            throw new Error(`Vertical mode needs coordinates to resolve this element. Can also be called with a browser\n                event instead of element to extract element and coordinates from`);\n        }\n\n        if (scheduler.variableColumnWidths || scheduler.resourceStore.isGrouped) {\n            let totalWidth = 0;\n\n            for (const col of me.resourceStore) {\n                if (!col.isSpecialRow) {\n                    totalWidth += col.columnWidth || me.resourceColumns.columnWidth;\n                }\n                if (totalWidth >= coords[0]) {\n                    return col;\n                }\n            }\n\n            return null;\n        }\n\n        const index = Math.floor(coords[0] / me.resourceColumns.columnWidth);\n\n        return me.allResourceRecords[index];\n    }\n\n    toggleCls(assignmentRecord, cls, add = true, useWrapper = false) {\n        const eventData = this.eventMap.get(assignmentRecord.eventId)?.[assignmentRecord.resourceId];\n\n        if (eventData) {\n            eventData.renderData[useWrapper ? 'wrapperCls' : 'cls'][cls] = add;\n            // Element from the map cannot be trusted, might be reused in which case map is not updated to reflect that.\n            // To be safe, retrieve using `getElementFromAssignmentRecord`\n            const element = this.client.getElementFromAssignmentRecord(assignmentRecord, useWrapper);\n\n            if (element) {\n                element.classList[add ? 'add' : 'remove'](cls);\n            }\n        }\n    }\n\n    //endregion\n\n    //region Coordinate <-> Date\n\n    getDateFromXY(xy, roundingMethod, local, allowOutOfRange = false) {\n        let coord = xy[1];\n\n        if (!local) {\n            coord = this.translateToScheduleCoordinate(coord);\n        }\n\n        return this.scheduler.timeAxisViewModel.getDateFromPosition(coord, roundingMethod, allowOutOfRange);\n    }\n\n    translateToScheduleCoordinate(y) {\n        return y - this.scheduler.timeAxisSubGridElement.getBoundingClientRect().top - globalThis.scrollY;\n    }\n\n    translateToPageCoordinate(y) {\n        return y + this.scheduler.timeAxisSubGridElement.getBoundingClientRect().top + globalThis.scrollY;\n    }\n\n    //endregion\n\n    //region Regions\n\n    getResourceEventBox(event, resource) {\n        const\n            eventId    = event.id,\n            resourceId = resource.id;\n\n        let { renderData } = this.eventMap.get(eventId)?.[resourceId] || emptyObject;\n\n        if (!renderData) {\n            // Never been in view, lay it out\n            this.layoutResourceEvents(this.scheduler.resourceStore.getById(resourceId));\n\n            // Have another go at getting the layout data\n            renderData = this.eventMap.get(eventId)?.[resourceId]?.renderData;\n        }\n\n        return renderData\n            ? new Rectangle(renderData.left, renderData.top, renderData.width, renderData.bottom - renderData.top)\n            : null;\n    }\n\n    getScheduleRegion(resourceRecord, eventRecord, local) {\n        const\n            me            = this,\n            { scheduler } = me,\n            // Only interested in width / height (in \"local\" coordinates)\n            region        = Rectangle.from(scheduler.timeAxisSubGridElement, scheduler.timeAxisSubGridElement);\n\n        if (resourceRecord) {\n            // <remove-on-release>\n            // TODO: How to account for eventRecord here?\n            // </remove-on-release>\n            region.left  = me.allResourceRecords.indexOf(resourceRecord) * scheduler.resourceColumnWidth;\n            region.right = region.left + scheduler.resourceColumnWidth;\n        }\n\n        const\n            start           = scheduler.timeAxis.startDate,\n            end             = scheduler.timeAxis.endDate,\n            dateConstraints = scheduler.getDateConstraints?.(resourceRecord, eventRecord) || {\n                start,\n                end\n            },\n            startY          = scheduler.getCoordinateFromDate(DateHelper.max(start, dateConstraints.start)),\n            endY            = scheduler.getCoordinateFromDate(DateHelper.min(end, dateConstraints.end));\n\n        if (!local) {\n            region.top    = me.translateToPageCoordinate(startY);\n            region.bottom = me.translateToPageCoordinate(endY);\n        }\n        else {\n            region.top    = startY;\n            region.bottom = endY;\n        }\n\n        return region;\n    }\n\n    getRowRegion(resourceRecord, startDate, endDate) {\n        const\n            me            = this,\n            { scheduler } = me,\n            x             = me.allResourceRecords.indexOf(resourceRecord) * scheduler.resourceColumnWidth,\n            taStart       = scheduler.timeAxis.startDate,\n            taEnd         = scheduler.timeAxis.endDate,\n            start         = startDate ? DateHelper.max(taStart, startDate) : taStart,\n            end           = endDate ? DateHelper.min(taEnd, endDate) : taEnd,\n            startY        = scheduler.getCoordinateFromDate(start),\n            endY          = scheduler.getCoordinateFromDate(end, true, true),\n            y             = Math.min(startY, endY),\n            height        = Math.abs(startY - endY);\n\n        return new Rectangle(x, y, scheduler.resourceColumnWidth, height);\n    }\n\n    get visibleDateRange() {\n        const\n            scheduler = this.scheduler,\n            scrollPos = scheduler.scrollable.y,\n            height    = scheduler.scrollable.clientHeight,\n            startDate = scheduler.getDateFromCoordinate(scrollPos) || scheduler.timeAxis.startDate,\n            endDate   = scheduler.getDateFromCoordinate(scrollPos + height) || scheduler.timeAxis.endDate;\n\n        return {\n            startDate,\n            endDate,\n            startMS : startDate.getTime(),\n            endMS   : endDate.getTime()\n        };\n    }\n\n    //endregion\n\n    //region Events\n\n    // Column width changed, rerender fully\n    onResourceColumnWidthChange({ width, oldWidth }) {\n        const\n            me            = this,\n            { scheduler } = me;\n\n        // Fix width of column & header\n        me.resourceColumns.width = scheduler.timeAxisColumn.width = me.allResourceRecords.length * width;\n        me.clearAll();\n\n        // Only transition large changes, otherwise it is janky when dragging slider in demo\n        me.refresh(Math.abs(width - oldWidth) > 30);\n\n        // Not detected by resizeobserver? Need to call this for virtual scrolling to react to update\n        //        scheduler.callEachSubGrid('refreshFakeScroll');\n        //        scheduler.refreshVirtualScrollbars();\n    }\n\n    //endregion\n\n    //region Project\n\n    attachToProject(project) {\n        super.attachToProject(project);\n\n        if (project) {\n            project.ion({\n                name    : 'project',\n                refresh : 'onProjectRefresh',\n                thisObj : this\n            });\n        }\n    }\n\n    onProjectRefresh() {\n        const\n            me                                    = this,\n            { scheduler, toDrawOnProjectRefresh } = me;\n\n        // Only update the UI immediately if we are visible\n        if (scheduler.isVisible) {\n            if (scheduler.rendered && !scheduler.refreshSuspended) {\n                // Either refresh all rows (on for example dataset)\n                if (me.refreshAllWhenReady) {\n                    me.clearAll();\n                    //scheduler.refreshWithTransition();\n                    me.refresh();\n                    me.refreshAllWhenReady = false;\n                }\n                // Or only affected rows (if any)\n                else if (toDrawOnProjectRefresh.size) {\n                    me.refresh();\n                }\n\n                toDrawOnProjectRefresh.clear();\n            }\n        }\n        // Otherwise wait till next time we get painted (shown, or a hidden ancestor shown)\n        else {\n            scheduler.whenVisible('refresh', scheduler, [true]);\n        }\n    }\n\n    //endregion\n\n    //region EventStore\n\n    attachToEventStore(eventStore) {\n        super.attachToEventStore(eventStore);\n\n        this.refreshAllWhenReady = true;\n\n        if (eventStore) {\n            eventStore.ion({\n                name             : 'eventStore',\n                addConfirmed     : 'onEventStoreAddConfirmed',\n                refreshPreCommit : 'onEventStoreRefresh',\n                thisObj          : this\n            });\n        }\n    }\n\n    onEventStoreAddConfirmed({ record }) {\n        for (const element of this.client.getElementsFromEventRecord(record)) {\n            element.classList.remove('b-iscreating');\n        }\n    }\n\n    onEventStoreRefresh({ action }) {\n        if (action === 'batch') {\n            this.refreshAllWhenReady = true;\n        }\n    }\n\n    onEventStoreChange({ action, records : eventRecords = [], record, replaced, changes, isAssign }) {\n        const\n            me          = this,\n            resourceIds = new Set();\n\n        eventRecords.forEach(eventRecord => {\n            // Update all resource rows to which this event is assigned *if* the resourceStore\n            // contains that resource (We could have filtered the resourceStore)\n            const renderedEventResources = eventRecord.$linkedResources?.filter(r => me.resourceStore.includes(r));\n\n            renderedEventResources?.forEach(resourceRecord => resourceIds.add(resourceRecord.id));\n        });\n\n        switch (action) {\n            // No-ops\n            case 'sort':  // Order in EventStore does not matter, so these actions are no-ops\n            case 'group':\n            case 'move':\n            case 'remove': // Remove is a no-op since assignment will also be removed\n                return;\n\n            case 'dataset':\n                me.refreshAllResourcesWhenReady();\n                return;\n\n            case 'add':\n            case 'updateMultiple':\n                // Just refresh below\n                break;\n\n            case 'replace':\n                // Gather resources from both the old record and the new one\n                replaced.forEach(([, newEvent]) => {\n                    // Old cleared by changed assignment\n                    newEvent.resources.map(resourceRecord => resourceIds.add(resourceRecord.id));\n                });\n                // And clear them\n                me.clearResources(resourceIds);\n                break;\n\n            case 'removeall':\n            case 'filter':\n                // Clear all when filtering for simplicity. If that turns out to give bad performance, one would need to\n                // figure out which events was filtered out and only clear their resources.\n                me.clearAll();\n                me.refresh();\n                return;\n\n            case 'update': {\n                // Check if changes are graph related or not\n                const allChrono = record.$entity\n                    ? !Object.keys(changes).some(name => !record.$entity.getField(name))\n                    : !Object.keys(changes).some(name => !chronoFields[name]);\n\n                // If any one of these in changes, it will affect visuals\n                let changeCount = 0;\n                if ('startDate' in changes) changeCount++;\n                if ('endDate' in changes) changeCount++;\n                if ('duration' in changes) changeCount++;\n\n                // Always redraw non chrono changes (name etc)\n                if (!allChrono || changeCount || 'percentDone' in changes || 'inactive' in changes || 'segments' in changes) {\n                    if (me.shouldWaitForInitializeAndEngineReady) {\n                        me.refreshResourcesWhenReady(resourceIds);\n                    }\n                    else {\n                        me.clearResources(resourceIds);\n                        me.refresh();\n                    }\n                }\n                return;\n            }\n        }\n\n        me.refreshResourcesWhenReady(resourceIds);\n    }\n\n    //endregion\n\n    //region ResourceStore\n\n    attachToResourceStore(resourceStore) {\n        const me = this;\n\n        super.attachToResourceStore(resourceStore);\n\n        me.refreshAllWhenReady = true;\n\n        if (me.resourceColumns) {\n            me.resourceColumns.resourceStore = resourceStore;\n        }\n\n        resourceStore.ion({\n            name             : 'resourceStore',\n            changePreCommit  : 'onResourceStoreChange',\n            refreshPreCommit : 'onResourceStoreRefresh',\n            // In vertical, resource store is not the row store but should toggle the load mask\n            load             : () => me.scheduler.unmaskBody(),\n            thisObj          : me,\n            prio             : 1 // Call before others to clear cache before redraw\n        });\n\n        if (me.initialized && me.scheduler.isPainted) {\n            // Invalidate resource range and events\n            me.firstResource = me.lastResource = null;\n            me.clearAll();\n\n            me.renderer();\n        }\n    }\n\n    onResourceStoreChange({ source : resourceStore, action, records = [], record, replaced, changes }) {\n        const\n            me              = this,\n            // records for add, record for update, replaced [[old, new]] for replace\n            resourceRecords = replaced ? replaced.map(r => r[1]) : records,\n            resourceIds     = new Set(resourceRecords.map(resourceRecord => resourceRecord.id));\n\n        // Invalidate resource range\n        me.firstResource                  = me.lastResource = null;\n        resourceStore._allResourceRecords = null;\n\n        const { allResourceRecords } = resourceStore;\n\n        // Operation that did not invalidate engine, refresh directly\n        if (me.scheduler.isEngineReady) {\n            switch (action) {\n                case 'update':\n                    if (changes?.id) {\n                        me.clearResources([changes.id.oldValue, changes.id.value]);\n                    }\n                    else {\n                        me.clearResources([record.id]);\n                    }\n                    // Only the invalidation above needed\n                    break;\n\n                case 'filter':\n                    // All filtered out resources needs clearing and so does those not filtered out since they might have\n                    // moved horizontally when others hide\n                    me.clearAll();\n                    break;\n            }\n\n            // Changing a column width means columns after that will have to be recalculated\n            // so clear all cached layouts.\n            if (changes && ('columnWidth' in changes)) {\n                me.clearAll();\n            }\n            me.refresh(true);\n        }\n        // Operation that did invalidate project, update on project refresh\n        else {\n            switch (action) {\n                case 'dataset':\n                case 'remove': // Cannot tell from which index it was removed\n                case 'removeall':\n                    me.refreshAllResourcesWhenReady();\n                    return;\n\n                case 'replace':\n                case 'add': {\n                    if (!resourceStore.isGrouped) {\n                        // Make sure all existing events following added resources are offset correctly\n                        const\n                            firstIndex = resourceRecords.reduce(\n                                (index, record) => Math.min(index, allResourceRecords.indexOf(record)),\n                                allResourceRecords.length\n                            );\n\n                        for (let i = firstIndex; i < allResourceRecords.length; i++) {\n                            resourceIds.add(allResourceRecords[i].id);\n                        }\n                    }\n                }\n            }\n\n            me.refreshResourcesWhenReady(resourceIds);\n        }\n    }\n\n    onResourceStoreRefresh({ action }) {\n        const me = this;\n\n        if (action === 'sort' || action === 'group') {\n            // Invalidate resource range & cache\n            me.firstResource = me.lastResource = me.resourceStore._allResourceRecords = null;\n            me.clearAll();\n            me.refresh();\n        }\n    }\n\n    //endregion\n\n    //region AssignmentStore\n\n    attachToAssignmentStore(assignmentStore) {\n        super.attachToAssignmentStore(assignmentStore);\n\n        this.refreshAllWhenReady = true;\n\n        if (assignmentStore) {\n            assignmentStore.ion({\n                name             : 'assignmentStore',\n                changePreCommit  : 'onAssignmentStoreChange',\n                refreshPreCommit : 'onAssignmentStoreRefresh',\n                thisObj          : this\n            });\n        }\n    }\n\n    onAssignmentStoreChange({ action, records : assignmentRecords = [], replaced, changes }) {\n        const\n            me          = this,\n            resourceIds = new Set(assignmentRecords.map(assignmentRecord => assignmentRecord.resourceId));\n\n        // Operation that did not invalidate engine, refresh directly\n        if (me.scheduler.isEngineReady) {\n            switch (action) {\n                case 'remove':\n                    me.clearResources(resourceIds);\n                    break;\n\n                case 'filter':\n                    me.clearAll();\n                    break;\n\n                case 'update': {\n                    // When reassigning, clear old resource also\n                    if ('resourceId' in changes) {\n                        resourceIds.add(changes.resourceId.oldValue);\n                    }\n\n                    // Ignore engine resolving resourceId -> resource, eventId -> event\n                    if (!Object.keys(changes).filter(field => field !== 'resource' && field !== 'event').length) {\n                        return;\n                    }\n\n                    me.clearResources(resourceIds);\n                }\n            }\n\n            me.refresh(true);\n        }\n        // Operation that did invalidate project, update on project refresh\n        else {\n            if (changes && 'resourceId' in changes) {\n                resourceIds.add(changes.resourceId.oldValue);\n            }\n\n            switch (action) {\n                case 'removeall':\n                    me.refreshAllResourcesWhenReady();\n                    return;\n\n                case 'replace':\n                    // Gather resources from both the old record and the new one\n                    replaced.forEach(([oldAssignment, newAssignment]) => {\n                        resourceIds.add(oldAssignment.resourceId);\n                        resourceIds.add(newAssignment.resourceId);\n                    });\n            }\n\n            me.refreshResourcesWhenReady(resourceIds);\n        }\n    }\n\n    onAssignmentStoreRefresh({ action, records }) {\n        if (action === 'batch') {\n            this.clearAll();\n            this.refreshAllResourcesWhenReady();\n        }\n    }\n\n    //endregion\n\n    //region View hooks\n\n    refreshRows(reLayoutEvents) {\n        if (reLayoutEvents) {\n            this.clearAll();\n            this.scheduler.refreshFromRerender = false;\n        }\n    }\n\n    // Called from SchedulerEventRendering\n    repaintEventsForResource(resourceRecord) {\n        this.renderResource(resourceRecord);\n    }\n\n    updateFromHorizontalScroll(scrollX) {\n        if (scrollX !== this.prevScrollX) {\n            this.renderer();\n            this.prevScrollX = scrollX;\n        }\n    }\n\n    updateFromVerticalScroll() {\n        this.renderer();\n    }\n\n    scrollResourceIntoView(resourceRecord, options) {\n        const\n            { scheduler } = this,\n            x             = this.allResourceRecords.indexOf(resourceRecord) * scheduler.resourceColumnWidth;\n\n        return scheduler.scrollHorizontallyTo(x, options);\n    }\n\n    get allResourceRecords() {\n        return this.scheduler.resourceStore.allResourceRecords;\n    }\n\n    // Called when viewport size changes\n    onViewportResize(width) {\n        this.resourceColumns.availableWidth = width;\n        this.renderer();\n    }\n\n    get resourceColumns() {\n        return this.scheduler.timeAxisColumn?.resourceColumns;\n    }\n\n    // Clear events in case they use date as part of displayed info\n    onLocaleChange() {\n        this.clearAll();\n    }\n\n    // No need to do anything special\n    onDragAbort() {}\n\n    onBeforeRowHeightChange() {}\n\n    onTimeAxisViewModelUpdate() {}\n\n    updateElementId() {}\n\n    releaseTimeSpanDiv() {}\n\n    //endregion\n\n    //region Dependency connectors\n\n    /**\n     * Gets displaying item start side\n     *\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @returns {'top'|'left'|'bottom'|'right'} 'left' / 'right' / 'top' / 'bottom'\n     */\n    getConnectorStartSide(eventRecord) {\n        return 'top';\n    }\n\n    /**\n     * Gets displaying item end side\n     *\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @returns {'top'|'left'|'bottom'|'right'} 'left' / 'right' / 'top' / 'bottom'\n     */\n    getConnectorEndSide(eventRecord) {\n        return 'bottom';\n    }\n\n    //endregion\n\n    //region Refresh resources\n\n    /**\n     * Clears resources directly and redraws them on next project refresh\n     * @param {Number[]|String[]} resourceIds\n     * @private\n     */\n    refreshResourcesWhenReady(resourceIds) {\n        this.clearResources(resourceIds);\n        resourceIds.forEach(id => this.toDrawOnProjectRefresh.add(id));\n    }\n\n    /**\n     * Clears all resources directly and redraws them on next project refresh\n     * @private\n     */\n    refreshAllResourcesWhenReady() {\n        this.clearAll();\n        this.refreshAllWhenReady = true;\n    }\n\n    //region Rendering\n\n    // Resources in view + buffer\n    get resourceRange() {\n        return this.getResourceRange(true);\n    }\n\n    // Resources strictly in view\n    get visibleResources() {\n        const { first, last } = this.getResourceRange();\n\n        return {\n            first : this.allResourceRecords[first],\n            last  : this.allResourceRecords[last]\n        };\n    }\n\n    getResourceRange(withBuffer) {\n        const\n            {\n                scheduler,\n                resourceStore\n            }                  = this,\n            {\n                resourceColumnWidth,\n                scrollX\n            }                  = scheduler,\n            {\n                scrollWidth\n            }                  = scheduler.timeAxisSubGrid.scrollable,\n            resourceBufferSize = withBuffer ? this.resourceBufferSize : 0,\n            viewportStart      = scrollX - resourceBufferSize,\n            viewportEnd        = scrollX + scrollWidth + resourceBufferSize;\n        if (!resourceStore?.count) {\n            return { first : -1, last : -1 };\n        }\n\n        // Some resources define their own width\n        if (scheduler.variableColumnWidths) {\n            let first, last = 0, start, end = 0;\n            this.allResourceRecords.forEach((resource, i) => {\n                resource.instanceMeta(scheduler).insetStart = start = end;\n                end                                         = start + resource.columnWidth;\n\n                if (start > viewportEnd) {\n                    return false;\n                }\n                if (end > viewportStart && first == null) {\n                    first = i;\n                }\n                else if (start < viewportEnd) {\n                    last = i;\n                }\n            });\n            return { first, last };\n        }\n        // We are using fixed column widths\n        else {\n            return {\n                first : Math.max(Math.floor(scrollX / resourceColumnWidth) - resourceBufferSize, 0),\n                last  : Math.min(\n                    Math.floor((scrollX + scheduler.timeAxisSubGrid.width) / resourceColumnWidth) + resourceBufferSize,\n                    this.allResourceRecords.length - 1\n                )\n            };\n        }\n    }\n\n    // Dates in view + buffer\n    get dateRange() {\n        const\n            { scheduler } = this;\n\n        let bottomDate = scheduler.getDateFromCoordinate(Math.min(\n            scheduler.scrollTop + scheduler.bodyHeight + scheduler.tickSize - 1,\n            (scheduler.virtualScrollHeight || scheduler.scrollable.scrollHeight) - 1)\n        );\n\n        // Might end up below time axis (out of ticks)\n        // <remove-on-release>\n        // TODO: Change call order on refresh to make sure this is not needed?\n        // </remove-on-release>\n        if (!bottomDate) {\n            bottomDate = scheduler.timeAxis.last.endDate;\n        }\n\n        let topDate = scheduler.getDateFromCoordinate(Math.max(scheduler.scrollTop - scheduler.tickSize, 0));\n\n        // Might end up above time axis when reconfiguring (since this happens as part of rendering)\n        if (!topDate) {\n            topDate    = scheduler.timeAxis.first.startDate;\n            bottomDate = scheduler.getDateFromCoordinate(scheduler.bodyHeight + scheduler.tickSize - 1);\n        }\n\n        return {\n            topDate,\n            bottomDate\n        };\n    }\n\n    getTimeSpanRenderData(eventRecord, resourceRecord, includeOutside = false) {\n        const\n            me             = this,\n            {\n                scheduler\n            }              = me,\n            {\n                preamble,\n                postamble\n            }              = eventRecord,\n            {\n                variableColumnWidths\n            }              = scheduler,\n            useEventBuffer = scheduler.features.eventBuffer?.enabled && me.isProVerticalRendering &&\n                (preamble || postamble) && !eventRecord.isMilestone,\n            startDateField = useEventBuffer ? 'wrapStartDate' : 'startDate',\n            endDateField   = useEventBuffer ? 'wrapEndDate' : 'endDate',\n            // Must use Model.get in order to get latest values in case we are inside a batch.\n            // EventResize changes the endDate using batching to enable a tentative change\n            // via the batchedUpdate event which is triggered when changing a field in a batch.\n            // Fall back to accessor if propagation has not populated date fields.\n            startDate      = eventRecord.isBatchUpdating && eventRecord.hasBatchedChange(startDateField) && !useEventBuffer\n                ? eventRecord.get(startDateField) : eventRecord[startDateField],\n            endDate        = eventRecord.isBatchUpdating && eventRecord.hasBatchedChange(endDateField) && !useEventBuffer\n                ? eventRecord.get(endDateField) : eventRecord[endDateField],\n            resourceMargin = scheduler.getResourceMargin(resourceRecord),\n            top            = scheduler.getCoordinateFromDate(startDate),\n            instanceMeta   = resourceRecord.instanceMeta(scheduler),\n            // Preliminary values for left & width, used for proxy. Will be changed on layout.\n            // The property \"left\" is utilized based on Scheduler's rtl setting.\n            // If RTL, then it's used as the \"right\" style position.\n            left           = variableColumnWidths ? instanceMeta.insetStart : me.allResourceRecords.indexOf(resourceRecord) * scheduler.resourceColumnWidth,\n            resourceWidth  = scheduler.getResourceWidth(resourceRecord),\n            width          = resourceWidth - resourceMargin * 2,\n            startDateMS    = startDate.getTime(),\n            endDateMS      = endDate.getTime();\n\n        let bottom = scheduler.getCoordinateFromDate(endDate),\n            height = bottom - top;\n\n        // Below, estimate height\n        if (bottom === -1) {\n            height = Math.round((endDateMS - startDateMS) * scheduler.timeAxisViewModel.getSingleUnitInPixels('millisecond'));\n            bottom = top + height;\n        }\n\n        return {\n            eventRecord,\n            resourceRecord,\n            left,\n            top,\n            bottom,\n            resourceWidth,\n            width,\n            height,\n            startDate,\n            endDate,\n            startDateMS,\n            endDateMS,\n            useEventBuffer,\n\n            children : [],\n\n            // <remove-on-release>\n            // TODO: should change there to match horizontal\n            // </remove-on-release>\n            start   : startDate,\n            end     : endDate,\n            startMS : startDateMS,\n            endMS   : endDateMS\n        };\n    }\n\n    // Earlier start dates are above later tasks\n    // If same start date, longer tasks float to top\n    // If same start + duration, sort by name\n    eventSorter(a, b) {\n        const\n            startA = a.dataStartMs || a.startDateMS, // dataXX are used if configured with fillTicks\n            endA   = a.dataEndMs || a.endDateMS,\n            startB = b.dataStartMs || b.startDateMS,\n            endB   = b.dataEndMs || b.endDateMS,\n            nameA  = a.isModel ? a.name : a.eventRecord.name,\n            nameB  = b.isModel ? b.name : b.eventRecord.name;\n\n        return startA - startB || endB - endA || (nameA < nameB ? -1 : nameA == nameB ? 0 : 1);\n    }\n\n    layoutEvents(resourceRecord, allEvents, includeOutside = false, parentEventRecord, eventSorter) {\n        const\n            me                  = this,\n            { scheduler }       = me,\n            {\n                variableColumnWidths\n            }                   = scheduler,\n            { id : resourceId } = resourceRecord,\n            instanceMeta        = resourceRecord.instanceMeta(scheduler),\n            cacheKey            = parentEventRecord ? `${resourceId}-${parentEventRecord.id}` : resourceId,\n            // Cache per resource\n            cache               = me.resourceMap.set(cacheKey, {}).get(cacheKey),\n            // Resource \"column\"\n            resourceIndex       = me.allResourceRecords.indexOf(resourceRecord),\n            {\n                barMargin,\n                resourceMargin\n            }                   = scheduler.getResourceLayoutSettings(resourceRecord, parentEventRecord);\n\n        const layoutData = allEvents.reduce((toLayout, eventRecord) => {\n            if (eventRecord.isScheduled) {\n                const\n                    renderData     = scheduler.generateRenderData(eventRecord, resourceRecord, false),\n                    // Elements will be appended to eventData during syncing\n                    eventData      = { renderData },\n                    eventResources = ObjectHelper.getMapPath(me.eventMap, renderData.eventId, {});\n\n                // Cache per event, { e1 : { r1 : { xxx }, r2 : ... }, e2 : ... }\n                // Uses renderData.eventId in favor of eventRecord.id to work with ResourceTimeRanges\n                eventResources[resourceId] = eventData;\n\n                // Cache per resource\n                cache[renderData.eventId] = eventData;\n\n                // Position ResourceTimeRanges directly, they do not affect the layout of others\n                if (renderData.fillSize) {\n                    // The property \"left\" is utilized based on Scheduler's rtl setting.\n                    // If RTL, then it's used as the \"right\" style position.\n                    renderData.left = variableColumnWidths ? instanceMeta.insetStart : resourceIndex * scheduler.resourceColumnWidth;\n\n                    renderData.width = scheduler.getResourceWidth(resourceRecord);\n                }\n                // Anything not flagged with `fillSize` should take part in layout\n                else {\n                    toLayout.push(renderData);\n                }\n            }\n\n            return toLayout;\n        }, []);\n\n        // Ensure the events are rendered in natural order so that navigation works.\n        layoutData.sort(eventSorter ?? me.eventSorter);\n\n        // Apply per resource event layout (pack, overlap or mixed)\n        me.verticalLayout.applyLayout(\n            layoutData,\n            scheduler.getResourceWidth(resourceRecord, parentEventRecord),\n            resourceMargin,\n            barMargin,\n            resourceIndex,\n            scheduler.getEventLayout(resourceRecord, parentEventRecord)\n        );\n\n        return cache;\n    }\n\n    // Calculate the layout for all events assigned to a resource. Since we are never stacking, the layout of one\n    // resource will never affect the others\n    layoutResourceEvents(resourceRecord) {\n        const\n            me                  = this,\n            { scheduler }       = me,\n            // Used in loop, reduce access time a wee bit\n            {\n                assignmentStore,\n                eventStore,\n                timeAxis\n            }                   = scheduler;\n\n        // Events for the resource, minus those that are filtered out by filtering assignments and events\n        let events = eventStore.getEvents({\n            includeOccurrences : scheduler.enableRecurringEvents,\n            resourceRecord,\n            startDate          : timeAxis.startDate,\n            endDate            : timeAxis.endDate,\n            filter             : (assignmentStore.isFiltered || eventStore.isFiltered) && (eventRecord =>\n                eventRecord.assignments.some(a => a.resource === resourceRecord && assignmentStore.includes(a)))\n        });\n\n        // Hook for features to inject additional timespans to render\n        events = scheduler.getEventsToRender(resourceRecord, events);\n\n        return me.layoutEvents(resourceRecord, events);\n    }\n\n    /**\n     * Used by event drag features to bring into existence event elements that are outside of the rendered block.\n     * @param {Scheduler.model.TimeSpan} eventRecord The event to render\n     * @private\n     */\n    addTemporaryDragElement(eventRecord) {\n        const\n            { scheduler } = this,\n            renderData    = scheduler.generateRenderData(\n                eventRecord,\n                eventRecord.resource,\n                { timeAxis : true, viewport : true }\n            );\n\n        renderData.top = renderData.row\n            ? (renderData.top + renderData.row.top)\n            : scheduler.getResourceEventBox(eventRecord, eventRecord.resource, true).top;\n\n        const\n            domConfig   = this.renderEvent({ renderData }),\n            { dataset } = domConfig;\n\n        delete domConfig.tabIndex;\n        delete dataset.eventId;\n        delete dataset.resourceId;\n        delete dataset.assignmentId;\n        delete dataset.syncId;\n        dataset.transient = true;\n        domConfig.parent  = this.scheduler.foregroundCanvas;\n\n        // So that the regular DomSyncing which may happen during scroll does not\n        // sweep up and reuse the temporary element.\n        domConfig.retainElement = true;\n\n        const result = DomHelper.createElement(domConfig);\n\n        result.innerElement = result.firstChild;\n\n        eventRecord.instanceMeta(scheduler).hasTemporaryDragElement = true;\n\n        return result;\n    }\n\n    // <remove-on-release>\n    // TODO: Pretty much identical to HorizontalRendering#renderEvent.\n    //  Make shared base class Render a single event, aborting if already in DOM.\n    // </remove-on-release>\n    // To update an event, first release its element and then render it again.\n    // The element will be reused and updated. Keeps code simpler\n    renderEvent(eventData) {\n        // No point in rendering event that already has an element\n        const\n            { scheduler } = this,\n            data          = eventData.renderData,\n            {\n                resourceRecord,\n                assignmentRecord,\n                eventRecord\n            }             = data,\n            // Event element config, applied to existing element or used to create a new one below\n            elementConfig = {\n                className : data.wrapperCls,\n                tabIndex  : -1,\n                children  : [\n                    {\n                        role      : 'presentation',\n                        className : data.cls,\n                        style     : (data.internalStyle || '') + (data.style || ''),\n                        children  : data.children,\n                        dataset   : {\n                            // Each feature putting contents in the event wrap should have this to simplify syncing and\n                            // element retrieval after sync\n                            taskFeature : 'event'\n                        },\n                        syncOptions : {\n                            syncIdField : 'taskBarFeature'\n                        }\n                    },\n                    ...data.wrapperChildren\n                ],\n                style : {\n                    top                                : data.top,\n                    [scheduler.rtl ? 'right' : 'left'] : data.left,\n                    // DomHelper appends px to dimensions when using numbers\n                    height                             : eventRecord.isMilestone ? '1em' : data.height,\n                    width                              : data.width,\n                    style                              : data.wrapperStyle || '',\n                    fontSize                           : eventRecord.isMilestone ? Math.min(data.width, 40) : null\n                },\n                dataset : {\n                    // assignmentId is set in this function conditionally\n                    resourceId : resourceRecord.id,\n                    eventId    : data.eventId, // Not using eventRecord.id to distinguish between Event and ResourceTimeRange\n                    // Sync using assignment id for events and event id for ResourceTimeRanges\n                    syncId     : assignmentRecord ? this.assignmentStore.getOccurrence(assignmentRecord, eventRecord).id : data.eventId\n\n                },\n                // Will not be part of DOM, but attached to the element\n                elementData   : eventData,\n                // Dragging etc. flags element as retained, to not reuse/release it during that operation. Events\n                // always use assignments, but ResourceTimeRanges does not\n                retainElement : (assignmentRecord || eventRecord).instanceMeta(this.scheduler).retainElement,\n                // Options for this level of sync, lower levels can have their own\n                syncOptions   : {\n                    syncIdField      : 'taskFeature',\n                    // Remove instead of release when a feature is disabled\n                    releaseThreshold : 0\n                }\n            };\n\n        elementConfig.className['b-sch-vertical'] = 1;\n\n        // Some browsers throw warnings on zIndex = ''\n        if (data.zIndex) {\n            elementConfig.zIndex = data.zIndex;\n        }\n\n        // Do not want to spam dataset with empty prop when not using assignments (ResourceTimeRanges)\n        if (assignmentRecord) {\n            elementConfig.dataset.assignmentId = assignmentRecord.id;\n        }\n\n        // Allows access to the used config later, for example to retrieve element\n        data.elementConfig = eventData.elementConfig = elementConfig;\n\n        scheduler.afterRenderEvent({ renderData : data, domConfig : elementConfig });\n\n        return elementConfig;\n    }\n\n    renderResource(resourceRecord) {\n        const\n            me                          = this,\n            // Date at top and bottom for determining which events to include\n            { topDateMS, bottomDateMS } = me,\n            // Will hold element configs\n            eventDOMConfigs             = [];\n\n        let resourceEntry = me.resourceMap.get(resourceRecord.id);\n\n        // Layout all events for the resource unless already done\n        if (!resourceEntry) {\n            resourceEntry = me.layoutResourceEvents(resourceRecord);\n        }\n\n        // Iterate over all events for the resource\n        for (const eventId in resourceEntry) {\n            const\n                eventData                               = resourceEntry[eventId],\n                { endDateMS, startDateMS, eventRecord } = eventData.renderData;\n\n            if (\n                // Only collect configs for those actually in view\n                endDateMS >= topDateMS && startDateMS <= bottomDateMS &&\n                // And not being dragged, those have a temporary element already\n                !eventRecord.instanceMeta(me.scheduler).hasTemporaryDragElement\n            ) {\n                // Reuse DomConfig if available, otherwise render event to create one\n                const domConfig = eventData.elementConfig?.className !== 'b-released' && eventData.elementConfig || me.renderEvent(eventData);\n                eventDOMConfigs.push(domConfig);\n            }\n        }\n\n        return eventDOMConfigs;\n    }\n\n    isEventElement(domConfig) {\n        const className = domConfig && domConfig.className;\n\n        return className && className[this.scheduler.eventCls + '-wrap'];\n    }\n\n    get shouldWaitForInitializeAndEngineReady() {\n        return !this.initialized || (!this.scheduler.isEngineReady && !this.scheduler.isCreating);\n    }\n\n    // Single cell so only one call to this renderer, determine which events are in view and draw them.\n    // Drawing on scroll is triggered by `updateFromVerticalScroll()` and `updateFromHorizontalScroll()`\n    renderer() {\n        const\n            me                                           = this,\n            { scheduler }                                = me,\n            // Determine resource range to draw events for\n            { first : firstResource, last : lastResource } = me.resourceRange,\n            // Date at top and bottom for determining which events to include\n            { topDate, bottomDate }                        = me.dateRange,\n            syncConfigs                                    = [],\n            featureDomConfigs                              = [];\n\n        // If scheduler is creating a new event, the render needs to be synchronous, so\n        // we cannot wait for the engine to normalize - the new event will have correct data set.\n        if (me.shouldWaitForInitializeAndEngineReady) {\n            return;\n        }\n\n        //<debug>\n        if (globalThis.DEBUG) {\n            if (me.firstResource !== firstResource || me.lastResource !== lastResource) {\n                console.log(`Resources in view ${me.allResourceRecords[firstResource].id} -> ${me.allResourceRecords[lastResource].id}`);\n            }\n        }\n        //</debug>\n\n        // Update current time range, reflecting the change on the vertical time axis header\n        if (!DateHelper.isEqual(topDate, me.topDate) || !DateHelper.isEqual(bottomDate, me.bottomDate)) {\n            // Calculated values used by `renderResource()`\n            me.topDate      = topDate;\n            me.bottomDate   = bottomDate;\n            me.topDateMS    = topDate.getTime();\n            me.bottomDateMS = bottomDate.getTime();\n\n            const range = me.timeView.range = { startDate : topDate, endDate : bottomDate };\n\n            scheduler.onVisibleDateRangeChange(range);\n        }\n\n        if (firstResource !== -1 && lastResource !== -1) {\n            // Collect all events for resources in view\n            for (let i = firstResource; i <= lastResource; i++) {\n                syncConfigs.push.apply(syncConfigs, me.renderResource(me.allResourceRecords[i]));\n            }\n        }\n\n        scheduler.getForegroundDomConfigs(featureDomConfigs);\n\n        syncConfigs.push.apply(syncConfigs, featureDomConfigs);\n\n        DomSync.sync({\n            domConfig : {\n                onlyChildren : true,\n                children     : syncConfigs\n            },\n            targetElement : scheduler.foregroundCanvas,\n            syncIdField   : 'syncId',\n\n            // Called by DomHelper when it creates, releases or reuses elements\n            callback({ action, domConfig, lastDomConfig, targetElement, jsx }) {\n                const { reactComponent } = scheduler;\n                // If element is an event wrap, trigger appropriate events\n                if (me.isEventElement(domConfig) || jsx || domConfig?.elementData?.jsx) {\n                    const\n                        // Some actions are considered first a release and then a render (reusing another element).\n                        // This gives clients code a chance to clean up before reusing an element\n                        isRelease = releaseEventActions[action],\n                        isRender  = renderEventActions[action];\n\n                    if (scheduler.processEventContent?.({\n                        action,\n                        domConfig,\n                        isRelease : false,\n                        targetElement,\n                        reactComponent,\n                        jsx\n\n                    })) return;\n\n                    // If we are reusing an element that was previously released we should not trigger again\n                    if (isRelease && me.isEventElement(lastDomConfig) && !lastDomConfig.isReleased) {\n                        const\n                            data  = lastDomConfig.elementData.renderData,\n                            event = {\n                                renderData       : data,\n                                assignmentRecord : data.assignmentRecord,\n                                eventRecord      : data.eventRecord,\n                                resourceRecord   : data.resourceRecord,\n                                element          : targetElement\n                            };\n\n                        // Release any portal in React event content\n                        scheduler.processEventContent?.({\n                            isRelease,\n                            targetElement,\n                            reactComponent,\n                            assignmentRecord : data.assignmentRecord\n                        });\n\n                        // Some browsers do not blur on set to display:none, so releasing the active element\n                        // must *explicitly* move focus outwards to the view.\n                        if (targetElement === DomHelper.getActiveElement(targetElement)) {\n                            scheduler.focusElement.focus();\n                        }\n\n                        // This event is documented on Scheduler\n                        scheduler.trigger('releaseEvent', event);\n                    }\n\n                    if (isRender) {\n                        const\n                            data  = domConfig.elementData.renderData,\n                            event = {\n                                renderData       : data,\n                                assignmentRecord : data.assignmentRecord,\n                                eventRecord      : data.eventRecord,\n                                resourceRecord   : data.resourceRecord,\n                                element          : targetElement,\n                                isReusingElement : action === 'reuseElement',\n                                isRepaint        : action === 'reuseOwnElement'\n                            };\n\n                        event.reusingElement = action === 'reuseElement';\n\n                        // This event is documented on Scheduler\n                        scheduler.trigger('renderEvent', event);\n                    }\n                }\n            }\n        });\n\n        // Change in displayed resources?\n        if (me.firstResource !== firstResource || me.lastResource !== lastResource) {\n            // Update header to match\n            const range = me.resourceColumns.visibleResources = { firstResource, lastResource };\n\n            // Store which resources are currently in view\n            me.firstResource = firstResource;\n            me.lastResource  = lastResource;\n\n            scheduler.onVisibleResourceRangeChange(range);\n            scheduler.trigger('resourceRangeChange', range);\n        }\n    }\n\n    refresh(transition) {\n        this.scheduler.runWithTransition(() => this.renderer(), transition);\n    }\n\n    // To match horizontals API, used from EventDrag\n    refreshResources(resourceIds) {\n        this.clearResources(resourceIds);\n        this.refresh();\n    }\n\n    // To match horizontals API, used from EventDrag\n    refreshEventsForResource(recordOrRow, force = true, draw = true) {\n        this.refreshResources([recordOrRow.id]);\n    }\n\n    onRenderDone() {\n\n    }\n\n    //endregion\n\n    //region Other\n\n    get timeView() {\n        return this.scheduler.timeView;\n    }\n\n    //endregion\n\n    //region Cache\n\n    // Clears cached resource layout\n    clearResources(resourceIds) {\n        const { resourceMap, eventMap } = this;\n\n        //<debug>\n        if (globalThis.DEBUG) console.log('%Clearing resources ' + Array.from(resourceIds).join(','), 'color: #770000');\n        //</debug>\n\n        resourceIds.forEach(resourceId => {\n            if (resourceMap.has(resourceId)) {\n                // The *keys* of an Object are strings, so we must iterate the values\n                // and use the original eventId to look up in the Map which preserves key type.\n                Object.values(resourceMap.get(resourceId)).forEach(({ renderData : { eventId } }) => {\n                    delete eventMap.get(eventId)[resourceId];\n                });\n\n                resourceMap.delete(resourceId);\n            }\n        });\n    }\n\n    clearAll() {\n        //<debug>\n        if (globalThis.DEBUG) console.log('%Clearing all', 'color: #770000');\n        //</debug>\n\n        this.resourceMap.clear();\n        this.eventMap.clear();\n    }\n\n    //endregion\n}\n","import Widget from '../../Core/widget/Widget.js';\nimport DomSync from '../../Core/helper/DomSync.js';\n\n/**\n * @module Scheduler/view/TimeAxisBase\n */\n\nfunction isLastLevel(level, levels) {\n    return level === levels.length - 1;\n}\n\nfunction isLastCell(level, cell) {\n    return cell === level.cells[level.cells.length - 1];\n}\n\n/**\n * Base class for HorizontalTimeAxis and VerticalTimeAxis. Contains shared functionality to only render ticks in view,\n * should not be used directly.\n *\n * @extends Core/widget/Widget\n * @private\n * @abstract\n */\nexport default class TimeAxisBase extends Widget {\n\n    static $name = 'TimeAxisBase';\n\n    //region Config\n\n    static configurable = {\n        /**\n         * The minimum width for a bottom row header cell to be considered 'compact', which adds a special CSS class\n         * to the row (for special styling). Copied from Scheduler/Gantt.\n         * @config {Number}\n         * @default\n         */\n        compactCellWidthThreshold : 15,\n\n        // TimeAxisViewModel\n        model : null,\n\n        cls : null,\n\n        /**\n         * Style property to use as cell size. Either width or height depending on orientation\n         * @config {'width'|'height'}\n         * @private\n         */\n        sizeProperty : null,\n\n        /**\n         * Style property to use as cells position. Either left or top depending on orientation\n         * @config {'left'|'top'}\n         * @private\n         */\n        positionProperty : null\n    };\n\n    startDate = null;\n    endDate   = null;\n    levels    = [];\n    size      = null;\n\n    // Set visible date range\n    set range({ startDate, endDate }) {\n        const me = this;\n\n        // Only process a change\n        if (me.startDate - startDate || me.endDate - endDate) {\n            const { client } = me;\n            me.startDate = startDate;\n            me.endDate = endDate;\n\n            // Avoid refreshing if time axis view is not visible\n            if ((me.sizeProperty === 'width' && client?.hideHeaders) ||\n                (me.sizeProperty === 'height' && client?.verticalTimeAxisColumn?.hidden)) {\n\n                return;\n            }\n            me.refresh();\n        }\n    }\n\n    //endregion\n\n    //region Html & rendering\n\n    // Generates element configs for all levels defined by the current ViewPreset\n    buildCells(start = this.startDate, end = this.endDate) {\n        const\n            me                   = this,\n            { sizeProperty }     = me,\n            {\n                stickyHeaders,\n                isVertical\n            }                    = me.client || {},\n            featureHeaderConfigs = [],\n            { length }           = me.levels;\n\n        const cellConfigs = me.levels.map((level, i) => {\n            const stickyHeader = stickyHeaders && (isVertical || i < length - 1);\n\n            return {\n                className : {\n                    'b-sch-header-row'                     : 1,\n                    [`b-sch-header-row-${level.position}`] : 1,\n                    'b-sch-header-row-main'                : i === me.model.viewPreset.mainHeaderLevel,\n                    'b-lowest'                             : isLastLevel(i, me.levels),\n                    'b-sticky-header'                      : stickyHeader\n                },\n                syncOptions : {\n                    // Keep a maximum of 5 released cells. Might be fine with fewer since ticks are fixed width.\n                    // Prevents an unnecessary amount of cells from sticking around when switching from narrow to\n                    // wide tickSizes\n                    releaseThreshold : 5,\n                    syncIdField      : 'tickIndex'\n                },\n                dataset : {\n                    headerFeature  : `headerRow${i}`,\n                    headerPosition : level.position\n                },\n                // Only include cells in view\n                children : level.cells?.filter(cell => cell.start < end && cell.end > start).map((cell, j) => ({\n                    role      : 'presentation',\n                    className : {\n                        'b-sch-header-timeaxis-cell' : 1,\n                        [cell.headerCellCls]         : cell.headerCellCls,\n                        [`b-align-${cell.align}`]    : cell.align,\n                        'b-last'                     : isLastCell(level, cell)\n                    },\n                    dataset : {\n                        tickIndex : cell.index,\n                        // Used in export tests to resolve dates from tick elements\n                        ...globalThis.DEBUG && { date : cell.start.getTime() }\n                    },\n                    style : {\n                        // DomHelper appends px to numeric dimensions\n                        [me.positionProperty]   : cell.coord,\n                        [sizeProperty]          : cell.width,\n                        [`min-${sizeProperty}`] : cell.width\n                    },\n                    children : [\n                        {\n                            tag       : 'span',\n                            role      : 'presentation',\n                            className : {\n                                'b-sch-header-text' : 1,\n                                'b-sticky-header'   : stickyHeader\n                            },\n                            html : cell.value\n                        }\n                    ]\n                }))\n            };\n        });\n\n        // When tested in isolation there is no client\n        me.client?.getHeaderDomConfigs(featureHeaderConfigs);\n\n        cellConfigs.push(...featureHeaderConfigs);\n\n        // noinspection JSSuspiciousNameCombination\n        return {\n            className   : me.widgetClassList,\n            syncOptions : {\n                // Do not keep entire levels no longer used, for example after switching view preset\n                releaseThreshold : 0\n            },\n            children : cellConfigs\n        };\n    }\n\n    render(targetElement) {\n        super.render(targetElement);\n\n        this.refresh(true);\n    }\n\n    /**\n     * Refresh the UI\n     * @param {Boolean} [rebuild] Specify `true` to force a rebuild of the underlying header level definitions\n     */\n    refresh(rebuild = !this.levels.length) {\n        const\n            me               = this,\n            { columnConfig } = me.model,\n            { levels }       = me,\n            oldLevelsCount   = levels.length;\n\n        if (rebuild) {\n            levels.length = 0;\n\n            columnConfig.forEach((cells, position) => levels[position] = {\n                position,\n                cells\n            });\n\n            me.size = levels[0].cells.reduce((sum, cell) => sum + cell.width, 0);\n\n            const { parentElement } = me.element;\n\n            // Don't mutate a classList unless necessary. Browsers invalidate the style.\n            if (parentElement && (levels.length !== oldLevelsCount || rebuild)) {\n                parentElement.classList.remove(`b-sch-timeaxiscolumn-levels-${oldLevelsCount}`);\n                parentElement.classList.add(`b-sch-timeaxiscolumn-levels-${levels.length}`);\n            }\n        }\n\n        if (!me.startDate || !me.endDate) {\n            return;\n        }\n\n        // Boil down levels to only show what is in view\n        DomSync.sync({\n            domConfig     : me.buildCells(),\n            targetElement : me.element,\n            syncIdField   : 'headerFeature'\n        });\n\n        me.trigger('refresh');\n    }\n\n    //endregion\n\n    // Our widget class doesn't include \"base\".\n    get widgetClass() {\n        return 'b-timeaxis';\n    }\n}\n","import TimeAxisBase from './TimeAxisBase.js';\n\n/**\n * @module Scheduler/view/HorizontalTimeAxis\n */\n\n/**\n * A visual horizontal representation of the time axis described in the\n * {@link Scheduler.preset.ViewPreset#field-headers} field.\n * Normally you should not interact with this class directly.\n *\n * @extends Scheduler/view/TimeAxisBase\n * @private\n */\nexport default class HorizontalTimeAxis extends TimeAxisBase {\n\n    //region Config\n\n    static $name = 'HorizontalTimeAxis';\n\n    static type = 'horizontaltimeaxis';\n\n    static configurable = {\n        model        : null,\n        sizeProperty : 'width'\n    };\n\n    //endregion\n\n    get positionProperty() {\n        return this.owner?.rtl ? 'right' : 'left';\n    }\n\n    get width() {\n        return this.size;\n    }\n\n    onModelUpdate() {\n        // Force rebuild when availableSpace has changed, to recalculate width and maybe apply compact styling\n        // <remove-on-release>\n        // TODO: this.width is the scrollWidth and this.model.availableSpace is the clientWidth\n        //  These are always going to be different (unless forceFit is set on the Gantt), so theres\n        //  no optimization. Likely this should always refresh(true) anyway since we do not know *what*\n        //  changed in the model update.\n        //  Time axis sub grid could also be collapsed (availableSpace === 0)\n        // </remove-on-release>\n\n        if (!this.owner?.hideHeaders && this.model.availableSpace > 0 && this.model.availableSpace !== this.width) {\n            this.refresh(true);\n        }\n    }\n\n    updateModel(timeAxisViewModel) {\n        this.detachListeners('tavm');\n\n        timeAxisViewModel?.ion({\n            name    : 'tavm',\n            update  : 'onModelUpdate',\n            thisObj : this\n        });\n    }\n}\n","import Widget from '../../Core/widget/Widget.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport DomSync from '../../Core/helper/DomSync.js';\nimport EventHelper from '../../Core/helper/EventHelper.js';\nimport DomClassList from '../../Core/helper/util/DomClassList.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport AvatarRendering from '../../Core/widget/util/AvatarRendering.js';\n\n/**\n * @module Scheduler/view/ResourceHeader\n */\n\n/**\n * Header widget that renders resource column headers and acts as the interaction point for resource columns in vertical\n * mode. Note that it uses virtual rendering and element reusage to gain performance, only headers in view are available\n * in DOM. Because of this you should avoid direct element manipulation, any such changes can be discarded at any time.\n *\n * By default, it displays resources `name` and also applies its `iconCls` if any, like this:\n *\n * ```html\n * <i class=\"iconCls\">name</i>\n * ```\n *\n * If Scheduler is configured with a {@link Scheduler.view.Scheduler#config-resourceImagePath} the\n * header will render miniatures for the resources, using {@link Scheduler.model.ResourceModel#field-imageUrl}\n * or {@link Scheduler.model.ResourceModel#field-image} with fallback to\n * {@link Scheduler.model.ResourceModel#field-name} + {@link Scheduler.view.Scheduler#config-resourceImageExtension}\n * for unset values.\n *\n * The contents and styling of the resource cells in the header can be customized using {@link #config-headerRenderer}:\n *\n * ```javascript\n * new Scheduler({\n *     mode            : 'vertical',\n *     resourceColumns : {\n *         headerRenderer : ({ resourceRecord }) => `Hello ${resourceRecord.name}`\n *     }\n * }\n *```\n *\n * The width of the resource columns is determined by the {@link #config-columnWidth} config.\n *\n * @extends Core/widget/Widget\n */\nexport default class ResourceHeader extends Widget {\n\n    //region Config\n\n    static $name = 'ResourceHeader';\n\n    static type = 'resourceheader';\n\n    static configurable = {\n        /**\n         * Resource store used to render resource headers. Assigned from Scheduler.\n         * @config {Scheduler.data.ResourceStore}\n         * @private\n         */\n        resourceStore : null,\n\n        /**\n         * Custom header renderer function. Can be used to manipulate the element config used to create the element\n         * for the header:\n         *\n         * ```javascript\n         * new Scheduler({\n         *   resourceColumns : {\n         *     headerRenderer({ elementConfig, resourceRecord }) {\n         *       elementConfig.dataset.myExtraData = 'extra';\n         *       elementConfig.style.fontWeight = 'bold';\n         *     }\n         *   }\n         * });\n         * ```\n         *\n         * See {@link DomConfig} for more information.\n         * Please take care to not break the default configs :)\n         *\n         * Or as a template by returning HTML from the function:\n         *\n         * ```javascript\n         * new Scheduler({\n         *   resourceColumns : {\n         *     headerRenderer : ({ resourceRecord }) => `\n         *       <div class=\"my-custom-template\">\n         *       ${resourceRecord.firstName} {resourceRecord.surname}\n         *       </div>\n         *     `\n         *   }\n         * });\n         * ```\n         *\n         * NOTE: When using `headerRenderer` no default internal markup is applied to the resource header cell,\n         * `iconCls` and {@link Scheduler.model.ResourceModel#field-imageUrl} or {@link Scheduler.model.ResourceModel#field-image}\n         * will have no effect unless you supply custom markup for them.\n         *\n         * @config {Function}\n         * @param {Object} params Object containing the params below\n         * @param {Scheduler.model.ResourceModel} params.resourceRecord Resource whose header is being rendered\n         * @param {DomConfig} params.elementConfig A config object used to create the element for the resource\n         */\n        headerRenderer : null,\n\n        /**\n         * Set to `false` to render just the resource name, `true` to render an avatar (or initials if no image exists)\n         * @config {Boolean}\n         * @default true\n         */\n        showAvatars : {\n            value : true,\n\n            $config : 'nullify'\n        },\n\n        /**\n         * Assign to toggle resource columns **fill* mode. `true` means they will stretch (grow) to fill viewport, `false`\n         * that they will respect their configured `columnWidth`.\n         *\n         * This is ignored if *any* resources are loaded with {@link Scheduler.model.ResourceModel#field-columnWidth}.\n         * @member {Boolean} fillWidth\n         */\n        /**\n         * Automatically resize resource columns to **fill** available width. Set to `false` to always respect the\n         * configured `columnWidth`.\n         *\n         * This is ignored if *any* resources are loaded with {@link Scheduler.model.ResourceModel#field-columnWidth}.\n         * @config {Boolean}\n         * @default\n         */\n        fillWidth : true,\n\n        /**\n         * Assign to toggle resource columns **fit* mode. `true` means they will grow or shrink to always fit viewport,\n         * `false` that they will respect their configured `columnWidth`.\n         *\n         * This is ignored if *any* resources are loaded with {@link Scheduler.model.ResourceModel#field-columnWidth}.\n         * @member {Boolean} fitWidth\n         */\n        /**\n         * Automatically resize resource columns to always **fit** available width.\n         *\n         * This is ignored if *any* resources are loaded with {@link Scheduler.model.ResourceModel#field-columnWidth}.\n         * @config {Boolean}\n         * @default\n         */\n        fitWidth : false,\n\n        /**\n         * Width for each resource column.\n         *\n         * This is used for resources which are not are loaded with a {@link Scheduler.model.ResourceModel#field-columnWidth}.\n         * @config {Number}\n         */\n        columnWidth : 150,\n\n        // Copied from Scheduler#resourceImagePath on creation in TimeAxisColumn.js\n        imagePath : null,\n\n        // Copied from Scheduler#resourceImageExtension on creation in TimeAxisColumn.js\n        imageExtension : null,\n\n        // Copied from Scheduler#defaultResourceImageName on creation in TimeAxisColumn.js\n        defaultImageName : null,\n\n        availableWidth : null\n    };\n\n    /**\n     * An index of the first visible resource in vertical mode\n     * @property {Number}\n     * @readonly\n     * @private\n     */\n    firstResource = -1;\n    /**\n     * An index of the last visible resource in vertical mode\n     * @property {Number}\n     * @readonly\n     * @private\n     */\n    lastResource  = -1;\n\n    //endregion\n\n    //region Init\n\n    construct(config) {\n        const me = this;\n\n        // Inject this into owning Scheduler early because code further down\n        // can call code which uses scheduler.resourceColumns.\n        config.scheduler._resourceColumns = me;\n\n        super.construct(config);\n\n        if (me.imagePath != null) {\n            // Need to increase height a bit when displaying images\n            me.element.classList.add('b-has-images');\n        }\n\n        EventHelper.on({\n            element     : me.element,\n            delegate    : '.b-resourceheader-cell',\n            capture     : true,\n            click       : 'onResourceMouseEvent',\n            dblclick    : 'onResourceMouseEvent',\n            contextmenu : 'onResourceMouseEvent',\n            thisObj     : me\n        });\n    }\n\n    changeShowAvatars(show) {\n        this.avatarRendering?.destroy();\n\n        if (show) {\n            this.avatarRendering = new AvatarRendering({\n                element : this.element\n            });\n        }\n\n        return show;\n    }\n\n    updateShowAvatars() {\n        if (!this.isConfiguring) {\n            this.refresh();\n        }\n    }\n\n    //endregion\n\n    //region ResourceStore\n\n    updateResourceStore(store) {\n        const me = this;\n\n        me.detachListeners('resourceStore');\n\n        if (store) {\n            store.ion({\n                name            : 'resourceStore',\n                changePreCommit : 'onResourceStoreDataChange',\n                thisObj         : me\n            });\n\n            // Already have data? Update width etc\n            if (store.count) {\n                me.onResourceStoreDataChange({});\n            }\n        }\n    }\n\n    // Redraw resource headers on any data change\n    onResourceStoreDataChange({ action }) {\n        const me    = this;\n\n        // These must be ingested before we assess the source of column widths\n        // so that they can be cleared *after* their values have been cached.\n        me.getConfig('fillWidth');\n        me.getConfig('fitWidth');\n        me.updateWidthCache();\n\n        const\n            {\n                element\n            }     = me,\n            width = me.totalWidth;\n\n        // If we have some defined columnWidths in the resourceStore\n        // we must then bypass configured fitWidth and fillWidth behaviour.\n        if (me.scheduler.variableColumnWidths) {\n            me._fillWidth = me._fitWidth = false;\n        }\n        else {\n            me._fillWidth = me.configuredFillWidth;\n            me._fitWidth = me.configuredFitWidth;\n        }\n\n        if (width !== me.width) {\n            DomHelper.setLength(element, 'width', width);\n            // During setup, silently set the width. It will then render correctly. After setup, let the world know...\n            me.column.set('width', width, me.column.grid.isConfiguring);\n        }\n\n        if (action === 'removeall') {\n            // Keep nothing\n            element.innerHTML = '';\n        }\n\n        if (action === 'remove' || action === 'add' || action === 'filter' || me.fitWidth || me.fillWidth) {\n            me.refreshWidths();\n        }\n\n        me.column.grid.toggleEmptyText();\n    }\n\n    get totalWidth() {\n        return this.updateWidthCache();\n    }\n\n    updateWidthCache() {\n        let result          = 0;\n        const { scheduler } = this;\n\n        // Flag so that VerticalRendering#getResourceRange knows\n        // whether to use fast or slow mode to ascertain visible columns.\n        scheduler.variableColumnWidths = false;\n\n        scheduler.resourceStore.forEach(resource => {\n            // Set the start position for each resource with respect to the widths\n            resource.instanceMeta(scheduler).insetStart = result;\n            resource.instanceMeta(scheduler).insetEnd   = result + (resource.columnWidth || scheduler.resourceColumnWidth);\n\n            if (resource.columnWidth == null) {\n                result += scheduler.resourceColumnWidth;\n            }\n            else {\n                result += resource.columnWidth;\n                scheduler.variableColumnWidths = true;\n            }\n        });\n\n        return result;\n    }\n\n    //endregion\n\n    //region Properties\n\n    changeColumnWidth(columnWidth) {\n        // Cache configured value, because if *all* resources have their own columnWidths\n        // the property will be nulled, but if we ever recieve a new resource with no\n        // columnWidth, or a columnWidth is nulled, we then have to fall back to using this.\n        if (!this.refreshingWidths) {\n            this.configuredColumnWidth = columnWidth;\n        }\n        return columnWidth;\n    }\n\n    updateColumnWidth(width, oldWidth) {\n        const me = this;\n\n        // Flag set in refreshWidths, do not want to create a loop\n        if (!me.refreshingWidths) {\n            me.refreshWidths();\n        }\n\n        if (!me.isConfiguring) {\n            // If resources are grouped, I need to refresh manually the cached width of resource header columns\n            if (me.resourceStore.isGrouped) {\n                me.updateWidthCache();\n            }\n\n            me.refresh();\n            // Cannot trigger with requested width, might have changed because of fit/fill\n            me.trigger('columnWidthChange', { width, oldWidth });\n        }\n    }\n\n    changeFillWidth(fillWidth) {\n        return this.configuredFillWidth = fillWidth;\n    }\n\n    updateFillWidth() {\n        if (!this.isConfiguring) {\n            this.refreshWidths();\n        }\n    }\n\n    changeFitWidth(fitWidth) {\n        return this.configuredFitWidth = fitWidth;\n    }\n\n    updateFitWidth() {\n        if (!this.isConfiguring) {\n            this.refreshWidths();\n        }\n    }\n\n    getImageURL(imageName) {\n        return StringHelper.joinPaths([this.imagePath || '', imageName || '']);\n    }\n\n    updateImagePath() {\n        if (!this.isConfiguring) {\n            this.refresh();\n        }\n    }\n\n    //endregion\n\n    //region Fit to width\n\n    updateAvailableWidth(width) {\n        this.refreshWidths();\n    }\n\n    // Updates the column widths according to fill and fit settings\n    refreshWidths() {\n        const\n            me    = this,\n            {\n                availableWidth,\n                configuredColumnWidth\n            }     = me,\n            count = me.resourceStore?.count;\n\n        // Bail out if availableWidth not yet set or resource store not assigned/loaded\n        // or column widths are defined in the resources.\n        if (!availableWidth || !count || me.scheduler.variableColumnWidths) {\n            return;\n        }\n\n        me.refreshingWidths = true;\n\n        const\n            // Fit width if configured to do so or if configured to fill and used width is less than available width\n            fit           = me.fitWidth || me.fillWidth && configuredColumnWidth * count < availableWidth,\n            useWidth      = fit ? Math.floor(availableWidth / count) : configuredColumnWidth,\n            shouldAnimate = me.column.grid.enableEventAnimations && Math.abs(me._columnWidth - useWidth) > 30;\n\n        DomHelper.addTemporaryClass(me.element, 'b-animating', shouldAnimate ? 300 : 0, me);\n\n        me.columnWidth = useWidth;\n\n        me.refreshingWidths = false;\n    }\n\n    //endregion\n\n    //region Rendering\n\n    // Visual resource range, set by VerticalRendering + its buffer\n    set visibleResources({ firstResource, lastResource }) {\n        this.firstResource = firstResource;\n        this.lastResource = lastResource;\n\n        this.updateWidthCache();\n        this.refresh();\n    }\n\n    /**\n     * Refreshes the visible headers\n     */\n    refresh() {\n        const\n            me         = this,\n            {\n                firstResource,\n                scheduler,\n                resourceStore,\n                lastResource\n            }          = me,\n            {\n                variableColumnWidths\n            }          = scheduler,\n            groupField = resourceStore.isGrouped && resourceStore.groupers[0].field,\n            configs    = [];\n\n        me.element.classList.toggle('b-grouped', Boolean(groupField));\n\n        if (!me.column.grid.isConfiguring && firstResource > -1 && lastResource > -1 && lastResource < resourceStore.count) {\n            let currentGroup;\n            // Gather element configs for resource headers in view\n            for (let i = firstResource; i <= lastResource; i++) {\n                const\n                    resourceRecord = resourceStore.allResourceRecords[i],\n                    groupRecord    = resourceRecord.instanceMeta(resourceStore).groupParent,\n                    groupChildren  = groupRecord?.groupChildren;\n\n                if (groupField && groupRecord.id !== currentGroup?.dataset.resourceId) {\n                    const\n                        groupLeft  = groupChildren[0].instanceMeta(scheduler).insetStart,\n                        groupWidth = groupChildren[groupChildren.length - 1].instanceMeta(scheduler).insetEnd - groupLeft;\n\n                    currentGroup = {\n                        className : 'b-resourceheader-group-cell',\n                        dataset   : {\n                            resourceId : groupRecord.id\n                        },\n                        style : {\n                            left  : groupLeft,\n                            width : groupWidth\n                        },\n                        children : [\n                            {\n                                tag  : 'span',\n                                html : StringHelper.encodeHtml(groupChildren[0][groupField])\n                            },\n                            {\n                                className : 'b-resourceheader-group-children',\n                                children  : []\n                            }\n                        ]\n                    };\n\n                    configs.push(currentGroup);\n                }\n\n                const\n                    instanceMeta  = resourceRecord.instanceMeta(scheduler),\n                    // Possible variable column width taken from the resources, fallback to scheduler's default\n                    width         = resourceRecord.columnWidth || me.columnWidth,\n                    position      = groupField ? instanceMeta.insetStart - currentGroup.style.left //groupChildren[0].instanceMeta(scheduler).insetStart\n                        : variableColumnWidths ? instanceMeta.insetStart : i * me.columnWidth,\n                    elementConfig = {\n                        // Might look like overkill to use DomClassList here, but can be used in headerRenderer\n                        className : new DomClassList({\n                            'b-resourceheader-cell' : 1\n                        }),\n                        dataset : {\n                            resourceId : resourceRecord.id\n                        },\n                        style : {\n                            [scheduler.rtl ? 'right' : 'left'] : position,\n                            width\n                        },\n                        children : []\n                    };\n\n                // Let a configured headerRenderer have a go at it before applying\n                if (me.headerRenderer) {\n                    const value = me.headerRenderer({ elementConfig, resourceRecord });\n\n                    if (value != null) {\n                        elementConfig.html = value;\n                    }\n                }\n                // No headerRenderer, apply default markup\n                else {\n                    let imageUrl;\n\n                    if (resourceRecord.imageUrl) {\n                        imageUrl = resourceRecord.imageUrl;\n                    }\n                    else {\n                        if (me.imagePath != null) {\n                            if (resourceRecord.image !== false) {\n                                const imageName = resourceRecord.image ||\n                                    resourceRecord.name?.toLowerCase() + me.imageExtension;\n                                imageUrl = me.getImageURL(imageName);\n                            }\n                        }\n                    }\n\n                    // By default showing resource name and optionally avatar\n                    elementConfig.children.push(\n                        me.showAvatars && me.avatarRendering.getResourceAvatar({\n                            resourceRecord,\n                            initials        : resourceRecord.initials,\n                            color           : resourceRecord.eventColor,\n                            iconCls         : resourceRecord.iconCls,\n                            defaultImageUrl : me.defaultImageName && me.getImageURL(me.defaultImageName),\n                            imageUrl\n                        }),\n                        {\n                            tag       : 'span',\n                            className : 'b-resource-name',\n                            html      : StringHelper.encodeHtml(resourceRecord.name)\n                        }\n                    );\n                }\n\n                if (groupField) {\n                    currentGroup.children[1].children.push(elementConfig);\n                }\n                else {\n                    configs.push(elementConfig);\n                }\n            }\n        }\n\n        // Sync changes to the header\n        DomSync.sync({\n            domConfig : {\n                onlyChildren : true,\n                children     : configs\n            },\n            targetElement : me.element,\n            syncIdField   : 'resourceId'\n            // <remove-on-release>\n            // TODO: Add callback here to trigger events when rendering/derendering header cells. Sooner or later\n            //  someone is going to ask for a way to render JSX or what not to the header\n            // </remove-on-release>\n        });\n    }\n\n    //endregion\n\n    onResourceMouseEvent(event) {\n        const\n            resourceCell   = event.target.closest('.b-resourceheader-cell'),\n            resourceRecord = this.resourceStore.getById(resourceCell.dataset.resourceId);\n\n        this.trigger('resourceHeader' + StringHelper.capitalize(event.type), {\n            resourceRecord,\n            event\n        });\n    }\n\n    // This function is not meant to be called by any code other than Base#getCurrentConfig().\n    // It extracts the current configs for the header, removing irrelevant ones\n    getCurrentConfig(options) {\n        const result = super.getCurrentConfig(options);\n\n        // Assigned from Scheduler\n        delete result.resourceStore;\n        delete result.column;\n        delete result.type;\n\n        return result;\n    }\n}\n","import WidgetColumn from '../../Grid/column/WidgetColumn.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport Events from '../../Core/mixin/Events.js';\nimport HorizontalTimeAxis from '../view/HorizontalTimeAxis.js';\nimport ResourceHeader from '../view/ResourceHeader.js';\n\n/**\n * @module Scheduler/column/TimeAxisColumn\n */\n\n/**\n * A column containing the timeline \"viewport\", in which events, dependencies etc. are drawn.\n * Normally you do not need to interact with or create this column, it is handled by Scheduler.\n *\n * If you wish to output custom contents inside the time axis row cells, you can provide your custom column configuration\n * using the {@link #config-renderer} like so:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *    appendTo         : document.body\n *    columns          : [\n *       { text : 'Name', field : 'name', width : 130 },\n *       {\n *           type : 'timeAxis',\n *           renderer({ record, cellElement }) {\n *               return '<div class=\"cool-chart\"></div>';\n *           }\n *       }\n *    ]\n * });\n * ```\n *\n * @extends Grid/column/WidgetColumn\n * @column\n */\nexport default class TimeAxisColumn extends Events(WidgetColumn) {\n    //region Config\n\n    static $name = 'TimeAxisColumn';\n\n    static get fields() {\n        return [\n            // Exclude some irrelevant fields from getCurrentConfig()\n            { name : 'locked', persist : false },\n            { name : 'flex', persist : false },\n            { name : 'width', persist : false },\n            { name : 'cellCls', persist : false },\n            { name : 'field', persist : false },\n            'mode'\n        ];\n    }\n\n    static get defaults() {\n        return {\n            /**\n             * Set to false to prevent this column header from being dragged.\n             * @config {Boolean} draggable\n             * @category Interaction\n             * @default false\n             */\n            draggable : false,\n\n            /**\n             * Set to false to prevent grouping by this column.\n             * @config {Boolean} groupable\n             * @category Interaction\n             * @default false\n             */\n            groupable : false,\n\n            /**\n             * Allow column visibility to be toggled through UI.\n             * @config {Boolean} hideable\n             * @default false\n             * @category Interaction\n             */\n            hideable : false,\n\n            /**\n             * Show column picker for the column.\n             * @config {Boolean} showColumnPicker\n             * @default false\n             * @category Menu\n             */\n            showColumnPicker : false,\n\n            /**\n             * Allow filtering data in the column (if Filter feature is enabled)\n             * @config {Boolean} filterable\n             * @default false\n             * @category Interaction\n             */\n            filterable : false,\n\n            /**\n             * Allow sorting of data in the column\n             * @config {Boolean} sortable\n             * @category Interaction\n             * @default false\n             */\n            sortable : false,\n\n            /**\n             * Set to `false` to prevent the column from being drag-resized when the ColumnResize plugin is enabled.\n             * @config {Boolean} resizable\n             * @default false\n             * @category Interaction\n             */\n            resizable : false,\n\n            /**\n             * Allow searching in the column (respected by QuickFind and Search features)\n             * @config {Boolean} searchable\n             * @default false\n             * @category Interaction\n             */\n            searchable : false,\n\n            /**\n             * @config {String} editor\n             * @hide\n             */\n            editor : false,\n\n            /**\n             * Set to `true` to show a context menu on the cell elements in this column\n             * @config {Boolean} enableCellContextMenu\n             * @default false\n             * @category Menu\n             */\n            enableCellContextMenu : false,\n\n            /**\n             * @config {Function|Boolean} tooltipRenderer\n             * @hide\n             */\n            tooltipRenderer : false,\n\n            /**\n             * CSS class added to the header of this column\n             * @config {String} cls\n             * @category Rendering\n             * @default 'b-sch-timeaxiscolumn'\n             */\n            cls : 'b-sch-timeaxiscolumn',\n\n            // needs to have width specified, flex-basis messes measurements up\n            needWidth : true,\n\n            mode       : null,\n            region     : 'normal',\n            exportable : false,\n            htmlEncode : false\n        };\n    }\n\n    static get type() {\n        return 'timeAxis';\n    }\n\n    //region Init\n\n    construct(config) {\n        const me = this;\n\n        super.construct(...arguments);\n\n        me.thisObj = me;\n        me.timeAxisViewModel = me.grid.timeAxisViewModel;\n        // A bit hacky, because mode is a field and not a config\n        // eslint-disable-next-line no-self-assign\n        me.mode = me.mode;\n\n        me.grid.ion({\n            paint   : 'onTimelinePaint',\n            thisObj : me,\n            once    : true\n        });\n    }\n\n    static get autoExposeFields() {\n        return true;\n    }\n\n    // endregion\n\n    doDestroy() {\n        this.resourceColumns?.destroy();\n        this.timeAxisView?.destroy();\n        super.doDestroy();\n    }\n\n    set mode(mode) {\n        const\n            me       = this,\n            { grid } = me;\n\n        me.set('mode', mode);\n\n        // In horizontal mode this column has a time axis header on top, with timeline ticks\n        if (mode === 'horizontal') {\n            me.timeAxisView = new HorizontalTimeAxis({\n                model                     : me.timeAxisViewModel,\n                compactCellWidthThreshold : me.compactCellWidthThreshold,\n                owner                     : grid,\n                client                    : grid\n            });\n        }\n        // In vertical mode, it instead displays resources at top\n        else if (mode === 'vertical') {\n            // <remove-on-release>\n            // TODO: Most other vertical stuff is handled in VerticalRendering, move there?\n            // </remove-on-release>\n            me.resourceColumns = ResourceHeader.new({\n                column           : me,\n                scheduler        : grid,\n                resourceStore    : grid.resourceStore,\n                imagePath        : grid.resourceImagePath,\n                imageExtension   : grid.resourceImageExtension,\n                defaultImageName : grid.defaultResourceImageName\n            }, grid.resourceColumns || {});\n\n            me.relayEvents(me.resourceColumns, [\n                'resourceheaderclick',\n                'resourceheaderdblclick',\n                'resourceheadercontextmenu'\n            ]);\n        }\n    }\n\n    get mode() {\n        return this.get('mode');\n    }\n\n    // <remove-on-release>\n    // TODO: define all configs as fields and set below to false...\n    // </remove-on-release>\n\n    //region Events\n\n    onViewModelUpdate({ source : viewModel }) {\n        const me = this;\n\n        if (me.grid.timeAxisSubGrid.collapsed) {\n            return;\n        }\n\n        if (me.mode === 'horizontal') {\n            // render the time axis view into the column header element\n            me.refreshHeader(true);\n\n            me.width = viewModel.totalSize;\n\n            me.grid.refresh();\n\n            // When width is set above, that ends up on a columnsResized listener, but the refreshing of the fake\n            // scrollers to accommodate the new width is not done in this timeframe, so the upcoming centering related\n            // to preset change cannot work. So we have to refresh the fake scrollers now\n            me.subGrid.refreshFakeScroll();\n        }\n        else if (me.mode === 'vertical') {\n            // Refresh to rerender cells, in the process updating the vertical timeaxis to reflect view model changes\n            me.grid.refreshRows();\n        }\n    }\n\n    // Called on paint. SubGrid has its width so this is the earliest time to configure the TimeAxisViewModel with\n    // correct width\n    onTimelinePaint({ firstPaint }) {\n        const me = this;\n\n        if (!me.subGrid.insertRowsBefore) {\n            return;\n        }\n\n        if (firstPaint) {\n            me.subGridElement.classList.add('b-timeline-subgrid');\n\n            if (me.mode === 'vertical') {\n                me.refreshHeader();\n\n                // The above operation can cause height change.\n                me.grid?.onHeightChange();\n            }\n        }\n    }\n\n    //endregion\n\n    //region Rendering\n\n    /**\n     * Refreshes the columns header contents (which is either a HorizontalTimeAxis or a ResourceHeader). Useful if you\n     * have rendered some extra meta data that depends on external data such as the EventStore or ResourceStore.\n     */\n    refreshHeader(internal) {\n        const\n            me          = this,\n            { element } = me;\n\n        if (element) {\n\n            if (me.mode === 'horizontal') {\n                // Force timeAxisViewModel to regenerate its column config, which calls header renderers etc.\n                !internal && me.timeAxisViewModel.update(undefined, undefined, true);\n\n                if (!me.timeAxisView.rendered) {\n                    // Do not need the normal header markup\n                    element.innerHTML = '';\n\n                    me.timeAxisView.render(element);\n                }\n                else {\n                    // Force rebuild of cells in case external data has changed (cheap since it still syncs to DOM)\n                    me.timeAxisView.refresh(true);\n                }\n            }\n            else if (me.mode === 'vertical') {\n                if (!me.resourceColumns.currentElement) {\n                    // Do not need the normal header markup\n                    element.innerHTML = '';\n                    me.resourceColumns.render(element);\n                }\n                else {\n                    me.resourceColumns.refresh();\n                }\n\n                // Vertical's resourceColumns is redrawn with the events, no need here\n            }\n        }\n    }\n\n    internalRenderer(renderData) {\n        const { grid } = this;\n        // No drawing of events before engines initial commit\n        if (grid.project.isInitialCommitPerformed || grid.project.isDelayingCalculation) {\n            grid.currentOrientation.renderer(renderData);\n\n            return super.internalRenderer(renderData);\n        }\n\n        return '';\n    }\n\n    //endregion\n\n    get timeAxisViewModel() {\n        return this._timeAxisViewModel;\n    }\n\n    set timeAxisViewModel(timeAxisViewModel) {\n        const me = this;\n\n        me.detachListeners('tavm');\n\n        timeAxisViewModel?.ion({\n            name    : 'tavm',\n            update  : 'onViewModelUpdate',\n            prio    : -10000,\n            thisObj : me\n        });\n\n        me._timeAxisViewModel = timeAxisViewModel;\n\n        if (me.timeAxisView) {\n            me.timeAxisView.model = timeAxisViewModel;\n        }\n    }\n\n    // Width of the time axis column is solely determined by the zoom level. We should not keep it part of the state\n    // otherwise restoring the state might break the normal zooming process.\n    // Covered by SchedulerState.t\n    // https://github.com/bryntum/support/issues/5545\n    getState() {\n        const state = super.getState();\n\n        delete state.width;\n        delete state.flex;\n\n        return state;\n    }\n}\n\nColumnStore.registerColumnType(TimeAxisColumn);\n","import TimeAxisBase from './TimeAxisBase.js';\n\n/**\n * @module Scheduler/view/VerticalTimeAxis\n */\n\n/**\n * Widget that renders a vertical time axis. Only renders ticks in view. Used in vertical mode.\n * @extends Core/widget/Widget\n * @private\n */\nexport default class VerticalTimeAxis extends TimeAxisBase {\n\n    static get $name() {\n        return 'VerticalTimeAxis';\n    }\n\n    static get configurable() {\n        return {\n            cls : 'b-verticaltimeaxis',\n\n            sizeProperty : 'height',\n\n            positionProperty : 'top',\n\n            wrapText : true\n        };\n    }\n\n    // All cells overlayed in the same space.\n    // For future use.\n    buildHorizontalCells() {\n        const\n            me                   = this,\n            { client }           = me,\n            stickyHeaders        = client?.stickyHeaders,\n            featureHeaderConfigs = [],\n            cellConfigs          = me.levels.reduce((result, level, i) => {\n                if (level.cells) {\n                    result.push(...level.cells?.filter(cell => cell.start < me.endDate && cell.end > me.startDate).map((cell, j, cells) => ({\n                        role      : 'presentation',\n                        className : {\n                            'b-sch-header-timeaxis-cell' : 1,\n                            [cell.headerCellCls]         : cell.headerCellCls,\n                            [`b-align-${cell.align}`]    : cell.align,\n                            'b-last'                     : j === cells.length - 1,\n                            'b-lowest'                   : i === me.levels.length - 1\n                        },\n                        dataset : {\n                            tickIndex      : cell.index,\n                            cellId         : `${i}-${cell.index}`,\n                            headerPosition : i,\n                            // Used in export tests to resolve dates from tick elements\n                            ...globalThis.DEBUG && { date : cell.start.getTime() }\n                        },\n                        style : {\n                            // DomHelper appends px to numeric dimensions\n                            top       : cell.coord,\n                            height    : cell.width,\n                            minHeight : cell.width\n                        },\n                        children : [\n                            {\n                                role      : 'presentation',\n                                className : {\n                                    'b-sch-header-text' : 1,\n                                    'b-sticky-header'   : stickyHeaders\n                                },\n                                html : cell.value\n                            }\n                        ]\n                    })));\n                }\n                return result;\n            }, []);\n\n        // When tested in isolation there is no client\n        client?.getHeaderDomConfigs(featureHeaderConfigs);\n\n        cellConfigs.push(...featureHeaderConfigs);\n\n        // noinspection JSSuspiciousNameCombination\n        return {\n            className : me.widgetClassList,\n            dataset   : {\n                headerFeature  : `headerRow0`,\n                headerPosition : 0\n            },\n            syncOptions : {\n                // Keep a maximum of 5 released cells. Might be fine with fewer since ticks are fixed width.\n                // Prevents an unnecessary amount of cells from sticking around when switching from narrow to\n                // wide tickSizes\n                releaseThreshold : 5,\n                syncIdField      : 'cellId'\n            },\n            children : cellConfigs\n        };\n    }\n\n    get height() {\n        return this.size;\n    }\n}\n","import Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport VerticalTimeAxis from '../view/VerticalTimeAxis.js';\n\n/**\n * @module Scheduler/column/VerticalTimeAxisColumn\n */\n\n/**\n * A special column containing the time axis labels when the Scheduler is used in vertical mode. You can configure,\n * it using the {@link Scheduler.view.Scheduler#config-verticalTimeAxisColumn} config object.\n *\n * **Note**: this column is sized by flexing to consume full width of its containing {@link Grid.view.SubGrid}. To\n * change width of this column, instead size the subgrid like so:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     mode           : 'vertical',\n *     subGridConfigs : {\n *         locked : {\n *             width : 300\n *         }\n *     }\n * });\n * ```\n *\n * @extends Grid/column/Column\n */\nexport default class VerticalTimeAxisColumn extends Column {\n\n    static $name = 'VerticalTimeAxisColumn';\n\n    static get type() {\n        return 'verticalTimeAxis';\n    }\n\n    static get defaults() {\n        return {\n            /**\n             * @hideconfigs autoWidth, autoHeight\n             */\n\n            /**\n             * Set to false to prevent this column header from being dragged.\n             * @config {Boolean} draggable\n             * @category Interaction\n             * @default false\n             * @hide\n             */\n            draggable : false,\n\n            /**\n             * Set to false to prevent grouping by this column.\n             * @config {Boolean} groupable\n             * @category Interaction\n             * @default false\n             * @hide\n             */\n            groupable : false,\n\n            /**\n             * Allow column visibility to be toggled through UI.\n             * @config {Boolean} hideable\n             * @default false\n             * @category Interaction\n             * @hide\n             */\n            hideable : false,\n\n            /**\n             * Show column picker for the column.\n             * @config {Boolean} showColumnPicker\n             * @default false\n             * @category Menu\n             * @hide\n             */\n            showColumnPicker : false,\n\n            /**\n             * Allow filtering data in the column (if Filter feature is enabled)\n             * @config {Boolean} filterable\n             * @default false\n             * @category Interaction\n             * @hide\n             */\n            filterable : false,\n\n            /**\n             * Allow sorting of data in the column\n             * @config {Boolean} sortable\n             * @category Interaction\n             * @default false\n             * @hide\n             */\n            sortable : false,\n\n            // /**\n            //  * Set to `false` to prevent the column from being drag-resized when the ColumnResize plugin is enabled.\n            //  * @config {Boolean} resizable\n            //  * @default false\n            //  * @category Interaction\n            //  * @hide\n            //  */\n            // resizable : false,\n\n            /**\n             * Allow searching in the column (respected by QuickFind and Search features)\n             * @config {Boolean} searchable\n             * @default false\n             * @category Interaction\n             * @hide\n             */\n            searchable : false,\n\n            /**\n             * Specifies if this column should be editable, and define which editor to use for editing cells in the column (if CellEdit feature is enabled)\n             * @config {String} editor\n             * @default false\n             * @category Interaction\n             * @hide\n             */\n            editor : false,\n\n            /**\n             * Set to `true` to show a context menu on the cell elements in this column\n             * @config {Boolean} enableCellContextMenu\n             * @default false\n             * @category Menu\n             * @hide\n             */\n            enableCellContextMenu : false,\n\n            /**\n             * @config {Function|Boolean} tooltipRenderer\n             * @hide\n             */\n            tooltipRenderer : false,\n\n            /**\n             * Column minimal width. If value is Number then minimal width is in pixels\n             * @config {Number|String} minWidth\n             * @default 0\n             * @category Layout\n             */\n            minWidth : 0,\n\n            resizable : false,\n\n            cellCls : 'b-verticaltimeaxiscolumn',\n            locked  : true,\n\n            flex : 1,\n\n            alwaysClearCell : false\n        };\n    }\n\n    get isFocusable() {\n        return false;\n    }\n\n    construct(data) {\n        super.construct(...arguments);\n\n        this.view = new VerticalTimeAxis({\n            model  : this.grid.timeAxisViewModel,\n            client : this.grid\n        });\n    }\n\n    renderer({ cellElement, size }) {\n        this.view.render(cellElement);\n\n        size.height = this.view.height;\n    }\n\n    // This function is not meant to be called by any code other than Base#getCurrentConfig().\n    // It extracts the current configs (fields) for the column, removing irrelevant ones\n    getCurrentConfig(options) {\n        const result = super.getCurrentConfig(options);\n\n        // Remove irrelevant configs\n        delete result.id;\n        delete result.region;\n        delete result.type;\n        delete result.field;\n        delete result.ariaLabel;\n        delete result.cellAriaLabel;\n\n        return result;\n    }\n}\n\nColumnStore.registerColumnType(VerticalTimeAxisColumn);\n","import TimelineBase from './TimelineBase.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport CrudManager from '../data/CrudManager.js';\nimport DomSync from '../../Core/helper/DomSync.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\nimport '../localization/En.js';\n\nimport CurrentConfig from './mixin/CurrentConfig.js';\nimport Describable from './mixin/Describable.js';\nimport SchedulerDom from './mixin/SchedulerDom.js';\nimport SchedulerDomEvents from './mixin/SchedulerDomEvents.js';\nimport SchedulerEventRendering from './mixin/SchedulerEventRendering.js';\nimport SchedulerStores from './mixin/SchedulerStores.js';\nimport SchedulerScroll from './mixin/SchedulerScroll.js';\nimport SchedulerRegions from './mixin/SchedulerRegions.js';\nimport SchedulerState from './mixin/SchedulerState.js';\nimport EventSelection from './mixin/EventSelection.js';\nimport EventNavigation from './mixin/EventNavigation.js';\nimport TransactionalFeatureMixin from './mixin/TransactionalFeatureMixin.js';\nimport CrudManagerView from '../crud/mixin/CrudManagerView.js';\nimport HorizontalRendering from './orientation/HorizontalRendering.js';\nimport VerticalRendering from './orientation/VerticalRendering.js';\nimport '../column/TimeAxisColumn.js';\nimport '../column/VerticalTimeAxisColumn.js';\n\n// Should always be present in Scheduler\nimport '../../Grid/feature/RegionResize.js';\n\n/**\n * @module Scheduler/view/SchedulerBase\n */\n\nconst\n    descriptionFormats = {\n        month : 'MMMM, YYYY',\n        week  : ['MMMM YYYY (Wp)', 'S{MMM} - E{MMM YYYY} (S{Wp})'],\n        day   : 'MMMM D, YYYY'\n    };\n\n/**\n * A thin base class for {@link Scheduler.view.Scheduler}. Does not include any features by default, allowing smaller\n * custom-built bundles if used in place of {@link Scheduler.view.Scheduler}.\n *\n * **NOTE:** In most scenarios you do probably want to use Scheduler instead of SchedulerBase.\n *\n * @mixes Scheduler/view/mixin/Describable\n * @mixes Scheduler/view/mixin/EventNavigation\n * @mixes Scheduler/view/mixin/EventSelection\n * @mixes Scheduler/view/mixin/SchedulerDom\n * @mixes Scheduler/view/mixin/SchedulerDomEvents\n * @mixes Scheduler/view/mixin/SchedulerEventRendering\n * @mixes Scheduler/view/mixin/SchedulerRegions\n * @mixes Scheduler/view/mixin/SchedulerScroll\n * @mixes Scheduler/view/mixin/SchedulerState\n * @mixes Scheduler/view/mixin/SchedulerStores\n * @mixes Scheduler/view/mixin/TimelineDateMapper\n * @mixes Scheduler/view/mixin/TimelineDomEvents\n * @mixes Scheduler/view/mixin/TimelineEventRendering\n * @mixes Scheduler/view/mixin/TimelineScroll\n * @mixes Scheduler/view/mixin/TimelineViewPresets\n * @mixes Scheduler/view/mixin/TimelineZoomable\n * @mixes Scheduler/view/mixin/TransactionalFeatureMixin\n * @mixes Scheduler/crud/mixin/CrudManagerView\n * @mixes Scheduler/data/mixin/ProjectConsumer\n *\n * @features Scheduler/feature/ColumnLines\n * @features Scheduler/feature/Dependencies\n * @features Scheduler/feature/DependencyEdit\n * @features Scheduler/feature/EventCopyPaste\n * @features Scheduler/feature/EventDrag\n * @features Scheduler/feature/EventDragCreate\n * @features Scheduler/feature/EventDragSelect\n * @features Scheduler/feature/EventEdit\n * @features Scheduler/feature/EventFilter\n * @features Scheduler/feature/EventMenu\n * @features Scheduler/feature/EventNonWorkingTime\n * @features Scheduler/feature/EventResize\n * @features Scheduler/feature/EventTooltip\n * @features Scheduler/feature/GroupSummary\n * @features Scheduler/feature/HeaderZoom\n * @features Scheduler/feature/Labels\n * @features Scheduler/feature/NonWorkingTime\n * @features Scheduler/feature/Pan\n * @features Scheduler/feature/ResourceMenu\n * @features Scheduler/feature/ResourceTimeRanges\n * @features Scheduler/feature/RowReorder\n * @features Scheduler/feature/ScheduleContext\n * @features Scheduler/feature/ScheduleMenu\n * @features Scheduler/feature/ScheduleTooltip\n * @features Scheduler/feature/SimpleEventEdit\n * @features Scheduler/feature/Split\n * @features Scheduler/feature/StickyEvents\n * @features Scheduler/feature/Summary\n * @features Scheduler/feature/TimeAxisHeaderMenu\n * @features Scheduler/feature/TimeRanges\n * @features Scheduler/feature/TimeSelection\n *\n * @features Scheduler/feature/experimental/ExcelExporter\n *\n * @features Scheduler/feature/export/PdfExport\n * @features Scheduler/feature/export/exporter/MultiPageExporter\n * @features Scheduler/feature/export/exporter/MultiPageVerticalExporter\n * @features Scheduler/feature/export/exporter/SinglePageExporter\n *\n * @extends Scheduler/view/TimelineBase\n * @widget\n */\nexport default class SchedulerBase extends TimelineBase.mixin(\n    CrudManagerView,\n    Describable,\n    SchedulerDom,\n    SchedulerDomEvents,\n    SchedulerStores,\n    SchedulerScroll,\n    SchedulerState,\n    SchedulerEventRendering,\n    SchedulerRegions,\n    EventSelection,\n    EventNavigation,\n    CurrentConfig,\n    TransactionalFeatureMixin\n) {\n    //region Config\n\n    static $name = 'SchedulerBase';\n\n    // Factoryable type name\n    static type = 'schedulerbase';\n\n    static configurable = {\n        /**\n         * Get/set the scheduler's read-only state. When set to `true`, any UIs for modifying data are disabled.\n         * @member {Boolean} readOnly\n         * @category Misc\n         */\n        /**\n         * Configure as `true` to make the scheduler read-only, by disabling any UIs for modifying data.\n         *\n         * __Note that checks MUST always also be applied at the server side.__\n         * @config {Boolean} readOnly\n         * @default false\n         * @category Misc\n         */\n\n        /**\n         * The date to display when used as a component of a Calendar.\n         *\n         * This is required by the Calendar Mode Interface.\n         *\n         * @config {Date}\n         * @category Calendar integration\n         */\n        date : {\n            value : null,\n\n            $config : {\n                equal : 'date'\n            }\n        },\n\n        /**\n         * Unit used to control how large steps to take when clicking the previous and next buttons in the Calendar\n         * UI. Only applies when used as a component of a Calendar.\n         *\n         * Suitable units depend on configured {@link #config-range}, a smaller or equal unit is recommended.\n         *\n         * @config {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'}\n         * @default\n         * @category Calendar integration\n         */\n        stepUnit : 'week',\n\n        /**\n         * Unit used to set the length of the time axis when used as a component of a Calendar. Suitable units are\n         * `'month'`, `'week'` and `'day'`.\n         *\n         * @config {'day'|'week'|'month'}\n         * @category Calendar integration\n         * @default\n         */\n        range : 'week',\n\n        /**\n         * When the scheduler is used in a Calendar, this function provides the textual description for the\n         * Calendar's toolbar.\n         *\n         * ```javascript\n         *  descriptionRenderer : scheduler => {\n         *      const\n         *          count = scheduler.eventStore.records.filter(\n         *              eventRec => DateHelper.intersectSpans(\n         *                  scheduler.startDate, scheduler.endDate,\n         *                  eventRec.startDate, eventRec.endDate)).length,\n         *          startDate = DateHelper.format(scheduler.startDate, 'DD/MM/YYY'),\n         *          endData = DateHelper.format(scheduler.endDate, 'DD/MM/YYY');\n         *\n         *      return `${startDate} - ${endData}, ${count} event${count === 1 ? '' : 's'}`;\n         *  }\n         * ```\n         * @config {Function}\n         * @param {Scheduler.view.SchedulerBase} view The active view.\n         * @category Calendar integration\n         */\n\n        /**\n         * A method allowing you to define date boundaries that will constrain resize, create and drag drop\n         * operations. The method will be called with the Resource record, and the Event record.\n         *\n         * ```javascript\n         *  new Scheduler({\n         *      getDateConstraints(resourceRecord, eventRecord) {\n         *          // Assuming you have added these extra fields to your own EventModel subclass\n         *          const { minStartDate, maxEndDate } = eventRecord;\n         *\n         *          return {\n         *              start : minStartDate,\n         *              end   : maxEndDate\n         *          };\n         *      }\n         *  });\n         * ```\n         * @param {Scheduler.model.ResourceModel} [resourceRecord] The resource record\n         * @param {Scheduler.model.EventModel} [eventRecord] The event record\n         * @returns {Object} Constraining object containing `start` and `end` constraints. Omitting either\n         * will mean that end is not constrained. So you can prevent a resize or move from moving *before*\n         * a certain time while not constraining the end date.\n         * @returns {Date} [return.start] Start date\n         * @returns {Date} [return.end] End date\n         * @config {Function}\n         * @category Scheduled events\n         */\n        getDateConstraints : null,\n\n        /**\n         * The time axis column config for vertical {@link Scheduler.view.SchedulerBase#config-mode}.\n         *\n         * Object with {@link Scheduler.column.VerticalTimeAxisColumn} configuration.\n         *\n         * This object will be used to configure the vertical time axis column instance.\n         *\n         * The config allows configuring the `VerticalTimeAxisColumn` instance used in vertical mode with any Column options that apply to it.\n         *\n         * Example:\n         *\n         * ```javascript\n         * new Scheduler({\n         *     mode     : 'vertical',\n         *     features : {\n         *         filterBar : true\n         *     },\n         *     verticalTimeAxisColumn : {\n         *         text  : 'Filter by event name',\n         *         width : 180,\n         *         filterable : {\n         *             // add a filter field to the vertical column access header\n         *             filterField : {\n         *                 type        : 'text',\n         *                 placeholder : 'Type to search',\n         *                 onChange    : ({ value }) => {\n         *                     // filter event by name converting to lowerCase to be equal comparison\n         *                     scheduler.eventStore.filter({\n         *                         filters : event => event.name.toLowerCase().includes(value.toLowerCase()),\n         *                         replace : true\n         *                     });\n         *                 }\n         *             }\n         *         }\n         *     },\n         *     ...\n         * });\n         * ```\n         *\n         * @config {VerticalTimeAxisColumnConfig}\n         * @category Time axis\n         */\n        verticalTimeAxisColumn : {},\n\n        /**\n         * See {@link Scheduler.view.Scheduler#keyboard-shortcuts Keyboard shortcuts} for details\n         * @config {Object<String,String>} keyMap\n         * @category Common\n         */\n\n        /**\n         * If true, a new event will be created when user double-clicks on a time axis cell (if scheduler is not in\n         * read only mode).\n         *\n         * The duration / durationUnit of the new event will be 1 time axis tick (default), or it can be read from\n         * the {@link Scheduler.model.EventModel#field-duration} and\n         * {@link Scheduler.model.EventModel#field-durationUnit} fields.\n         *\n         * Set to `false` to not create events on double click.\n         * @config {Boolean|Object} createEventOnDblClick\n         * @param {Boolean} [createEventOnDblClick.useEventModelDefaults] set to `true` to set default duration\n         * based on the defaults specified by the {@link Scheduler.model.EventModel#field-duration} and\n         * {@link Scheduler.model.EventModel#field-durationUnit} fields.\n         * @default\n         * @category Scheduled events\n         */\n        createEventOnDblClick : true,\n\n        /**\n             * Number of pixels to horizontally extend the visible render zone by, controlling the events that will be\n             * rendered. You can use this to increase or reduce the amount of event rendering happening when scrolling\n             * along a horizontal time axis. This can be useful if you render huge amount of events.\n             *\n             * To force the scheduler to render all events within the TimeAxis start & end dates, set this to -1.\n             * The initial render will take slightly longer but no extra event rendering will take place when scrolling.\n             *\n             * NOTE: This is an experimental API which might change in future releases.\n             * @config {Number}\n             * @default\n             * @internal\n             * @category Experimental\n             */\n        scrollBuffer : 0,\n\n        // A CSS class identifying areas where events can be scheduled using drag-create, double click etc.\n        schedulableAreaSelector : '.b-sch-timeaxis-cell',\n        scheduledEventName      : 'event',\n        sortFeatureStore        : 'resourceStore',\n\n        /**\n         * If set to `true` this will show a color field in the {@link Scheduler.feature.EventEdit} editor and also a\n         * picker in the {@link Scheduler.feature.EventMenu}. Both enables the user to choose a color which will be\n         * applied to the event bar's background. See EventModel's\n         * {@link Scheduler.model.mixin.EventModelMixin#field-eventColor} config.\n         * config.\n         * @config {Boolean}\n         * @default false\n         * @category Misc\n         */\n        showEventColorPickers : null\n    };\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Scheduler mode. Supported values: horizontal, vertical\n             * @config {'horizontal'|'vertical'} mode\n             * @default\n             * @category Common\n             */\n            mode : 'horizontal',\n\n            /**\n             * CSS class to add to rendered events\n             * @config {String}\n             * @category CSS\n             * @private\n             * @default\n             */\n            eventCls : 'b-sch-event',\n\n            /**\n             * CSS class to add to cells in the timeaxis column\n             * @config {String}\n             * @category CSS\n             * @private\n             * @default\n             */\n            timeCellCls : 'b-sch-timeaxis-cell',\n\n            /**\n             * A CSS class to apply to each event in the view on mouseover (defaults to 'b-sch-event-hover').\n             * @config {String}\n             * @default\n             * @category CSS\n             * @private\n             */\n            overScheduledEventClass : 'b-sch-event-hover',\n\n            /**\n             * Set to `false` if you don't want to allow events overlapping times for any one resource (defaults to `true`).\n             * <div class=\"note\">Note that toggling this at runtime won't affect already overlapping events.</div>\n             *\n             * @prp {Boolean}\n             * @default\n             * @category Scheduled events\n             */\n            allowOverlap : true,\n\n            /**\n             * The height in pixels of Scheduler rows.\n             * @config {Number}\n             * @default\n             * @category Common\n             */\n            rowHeight : 60,\n\n            /**\n             * Scheduler overrides Grids default implementation of {@link Grid.view.GridBase#config-getRowHeight} to\n             * pre-calculate row heights based on events in the rows.\n             *\n             * The amount of rows that are pre-calculated is limited for performance reasons. The limit is configurable\n             * by specifying the {@link Scheduler.view.SchedulerBase#config-preCalculateHeightLimit} config.\n             *\n             * The results of the calculation are cached internally.\n             *\n             * @config {Function} getRowHeight\n             * @param {Scheduler.model.ResourceModel} getRowHeight.record Resource record to determine row height for\n             * @returns {Number} Desired row height\n             * @category Layout\n             */\n\n            /**\n             * Maximum number of resources for which height is pre-calculated. If you have many events per\n             * resource you might want to lower this number to gain some initial rendering performance.\n             *\n             * Specify a falsy value to opt out of row height pre-calculation.\n             *\n             * @config {Number}\n             * @default\n             * @category Layout\n             */\n            preCalculateHeightLimit : 10000,\n\n            crudManagerClass : CrudManager,\n\n            testConfig : {\n                loadMaskError : {\n                    autoClose : 10,\n                    showDelay : 0\n                }\n            }\n        };\n    }\n\n    timeCellSelector          = '.b-sch-timeaxis-cell';\n    resourceTimeRangeSelector = '.b-sch-resourcetimerange';\n\n    // <remove-on-release>\n    // Keep this commented out to have easy access to the syntax next time we need to use it\n    // static get deprecatedEvents() {\n    //     return {\n    //         eventContextMenuBeforeShow : {\n    //             product            : 'Scheduler',\n    //             invalidAsOfVersion : '5.0.0',\n    //             message            : '`eventContextMenuBeforeShow` event is deprecated, in favor of `eventMenuBeforeShow` event. Please see https://bryntum.com/products/scheduler/docs/guide/Scheduler/upgrades/3.1.0 for more information.'\n    //         }\n    //     };\n    // }\n    // </remove-on-release>\n\n    //endregion\n\n    //region Store & model docs\n\n    // Documented here instead of in SchedulerStores since SchedulerPro uses different types\n\n    // Configs\n\n    /**\n     * Inline events, will be loaded into an internally created EventStore.\n     * @config {Scheduler.model.EventModel[]|EventModelConfig[]} events\n     * @category Data\n     */\n\n    /**\n     * The {@link Scheduler.data.EventStore} holding the events to be rendered into the scheduler (required).\n     * @config {Scheduler.data.EventStore|EventStoreConfig} eventStore\n     * @category Data\n     */\n\n    /**\n     * Inline resources, will be loaded into an internally created ResourceStore.\n     * @config {Scheduler.model.ResourceModel[]|ResourceModelConfig[]} resources\n     * @category Data\n     */\n\n    /**\n     * The {@link Scheduler.data.ResourceStore} holding the resources to be rendered into the scheduler (required).\n     * @config {Scheduler.data.ResourceStore|ResourceStoreConfig} resourceStore\n     * @category Data\n     */\n\n    /**\n     * Inline assignments, will be loaded into an internally created AssignmentStore.\n     * @config {Scheduler.model.AssignmentModel[]|Object[]} assignments\n     * @category Data\n     */\n\n    /**\n     * The optional {@link Scheduler.data.AssignmentStore}, holding assignments between resources and events.\n     * Required for multi assignments.\n     * @config {Scheduler.data.AssignmentStore|AssignmentStoreConfig} assignmentStore\n     * @category Data\n     */\n\n    /**\n     * Inline dependencies, will be loaded into an internally created DependencyStore.\n     * @config {Scheduler.model.DependencyModel[]|DependencyModelConfig[]} dependencies\n     * @category Data\n     */\n\n    /**\n     * The optional {@link Scheduler.data.DependencyStore}.\n     * @config {Scheduler.data.DependencyStore|DependencyStoreConfig} dependencyStore\n     * @category Data\n     */\n\n    // Properties\n\n    /**\n     * Get/set events, applies to the backing project's EventStore.\n     * @member {Scheduler.model.EventModel[]} events\n     * @accepts {Scheduler.model.EventModel[]|EventModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the event store instance of the backing project.\n     * @member {Scheduler.data.EventStore} eventStore\n     * @category Data\n     */\n\n    /**\n     * Get/set resources, applies to the backing project's ResourceStore.\n     * @member {Scheduler.model.ResourceModel[]} resources\n     * @accepts {Scheduler.model.ResourceModel[]|ResourceModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the resource store instance of the backing project\n     * @member {Scheduler.data.ResourceStore} resourceStore\n     * @category Data\n     */\n\n    /**\n     * Get/set assignments, applies to the backing project's AssignmentStore.\n     * @member {Scheduler.model.AssignmentModel[]} assignments\n     * @accepts {Scheduler.model.AssignmentModel[]|Object[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the event store instance of the backing project.\n     * @member {Scheduler.data.AssignmentStore} assignmentStore\n     * @category Data\n     */\n\n    /**\n     * Get/set dependencies, applies to the backing projects DependencyStore.\n     * @member {Scheduler.model.DependencyModel[]} dependencies\n     * @accepts {Scheduler.model.DependencyModel[]|DependencyModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the dependencies store instance of the backing project.\n     * @member {Scheduler.data.DependencyStore} dependencyStore\n     * @category Data\n     */\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fired after rendering an event, when its element is available in DOM.\n     * @event renderEvent\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord The event record\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord The assignment record\n     * @param {Object} renderData An object containing details about the event rendering, see\n     *   {@link Scheduler.view.mixin.SchedulerEventRendering#config-eventRenderer} for details\n     * @param {Boolean} isRepaint `true` if this render is a repaint of the event, updating its existing element\n     * @param {Boolean} isReusingElement `true` if this render lead to the event reusing a released events element\n     * @param {HTMLElement} element The event bar element\n     */\n\n    /**\n     * Fired after releasing an event, useful to cleanup of custom content added on `renderEvent` or in `eventRenderer`.\n     * @event releaseEvent\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord The event record\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord The assignment record\n     * @param {Object} renderData An object containing details about the event rendering\n     * @param {HTMLElement} element The event bar element\n     */\n\n    /**\n     * Fired when clicking a resource header cell\n     * @event resourceHeaderClick\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource record\n     * @param {Event} event The event\n     */\n\n    /**\n     * Fired when double clicking a resource header cell\n     * @event resourceHeaderDblclick\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource record\n     * @param {Event} event The event\n     */\n\n    /**\n     * Fired when activating context menu on a resource header cell\n     * @event resourceHeaderContextmenu\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource record\n     * @param {Event} event The event\n     */\n\n    /**\n     * Triggered when a keydown event is observed if there are selected events.\n     * @event eventKeyDown\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel[]} eventRecords The selected event records\n     * @param {Scheduler.model.AssignmentModel[]} assignmentRecords The selected assignment records\n     * @param {KeyboardEvent} event Browser event\n     */\n\n    /**\n     * Triggered when a keyup event is observed if there are selected events.\n     * @event eventKeyUp\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel[]} eventRecords The selected event records\n     * @param {Scheduler.model.AssignmentModel[]} assignmentRecords The selected assignment records\n     * @param {KeyboardEvent} event Browser event\n     */\n\n    //endregion\n\n    //region Functions injected by features\n\n    // For documentation & typings purposes\n\n    /**\n     * Opens an editor UI to edit the passed event.\n     *\n     * *NOTE: Only available when the {@link Scheduler/feature/EventEdit EventEdit} feature is enabled.*\n     *\n     * @function editEvent\n     * @param {Scheduler.model.EventModel} eventRecord Event to edit\n     * @param {Scheduler.model.ResourceModel} [resourceRecord] The Resource record for the event.\n     * This parameter is needed if the event is newly created for a resource and has not been assigned, or when using\n     * multi assignment.\n     * @param {HTMLElement} [element] Element to anchor editor to (defaults to events element)\n     * @category Feature shortcuts\n     */\n\n    /**\n     * Returns the dependency record for a DOM element\n     *\n     * *NOTE: Only available when the {@link Scheduler/feature/Dependencies Dependencies} feature is enabled.*\n     *\n     * @function resolveDependencyRecord\n     * @param {HTMLElement} element The dependency line element\n     * @returns {Scheduler.model.DependencyModel} The dependency record\n     * @category Feature shortcuts\n     */\n\n    //endregion\n\n    //region Init\n\n    afterConstruct() {\n        const me = this;\n\n        super.afterConstruct();\n\n        me.ion({ scroll : 'onVerticalScroll', thisObj : me });\n\n        if (me.createEventOnDblClick) {\n            me.ion({ scheduledblclick : me.onTimeAxisCellDblClick });\n        }\n    }\n\n    //endregion\n\n    //region Overrides\n\n    onPaintOverride() {\n        // Internal procedure used for paint method overrides\n        // Not used in onPaint() because it may be chained on instance and Override won't be applied\n    }\n\n    //endregion\n\n    //region Config getters/setters\n\n    // Placeholder getter/setter for mixins, please make any changes needed to SchedulerStores#store instead\n    get store() {\n        return super.store;\n    }\n\n    set store(store) {\n        super.store = store;\n    }\n\n    /**\n     * Returns an object defining the range of visible resources\n     * @property {Object}\n     * @property {Scheduler.model.ResourceModel} visibleResources.first First visible resource\n     * @property {Scheduler.model.ResourceModel} visibleResources.last Last visible resource\n     * @readonly\n     * @category Resources\n     */\n    get visibleResources() {\n        const me = this;\n\n        if (me.isVertical) {\n            return me.currentOrientation.visibleResources;\n        }\n\n        return {\n            first : me.store.getById(me.firstVisibleRow?.id),\n            last  : me.store.getById(me.lastVisibleRow?.id)\n        };\n    }\n\n    //endregion\n\n    //region Event handlers\n\n    onLocaleChange() {\n        this.currentOrientation.onLocaleChange();\n\n        super.onLocaleChange();\n    }\n\n    onTimeAxisCellDblClick({ date : startDate, resourceRecord, row }) {\n        this.createEvent(startDate, resourceRecord, row);\n    }\n\n    onVerticalScroll({ scrollTop }) {\n        this.currentOrientation.updateFromVerticalScroll(scrollTop);\n    }\n\n    /**\n     * Called when new event is created.\n     * Сan be overridden to supply default record values etc.\n     * @param {Scheduler.model.EventModel} eventRecord Newly created event\n     * @category Scheduled events\n     */\n    onEventCreated(eventRecord) {}\n\n    //endregion\n\n    //region Mode\n\n    /**\n     * Checks if scheduler is in horizontal mode\n     * @returns {Boolean}\n     * @readonly\n     * @category Common\n     * @private\n     */\n    get isHorizontal() {\n        return this.mode === 'horizontal';\n    }\n\n    /**\n     * Checks if scheduler is in vertical mode\n     * @returns {Boolean}\n     * @readonly\n     * @category Common\n     * @private\n     */\n    get isVertical() {\n        return this.mode === 'vertical';\n    }\n\n    /**\n     * Get mode (horizontal/vertical)\n     * @property {'horizontal'|'vertical'}\n     * @readonly\n     * @category Common\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    set mode(mode) {\n        const me = this;\n\n        me._mode = mode;\n\n        if (!me[mode]) {\n            me.element.classList.add(`b-sch-${mode}`);\n\n            if (mode === 'horizontal') {\n                me.horizontal = new HorizontalRendering(me);\n                if (me.isPainted) {\n                    me.horizontal.init();\n                }\n            }\n            else if (mode === 'vertical') {\n                me.vertical = new VerticalRendering(me);\n\n                if (me.rendered) {\n                    me.vertical.init();\n                }\n            }\n        }\n    }\n\n    get currentOrientation() {\n        return this[this.mode];\n    }\n\n    //endregion\n\n    //region Dom event dummies\n\n    // this is ugly, but needed since super cannot be called from SchedulerDomEvents mixin...\n\n    onElementKeyDown(event) {\n        return super.onElementKeyDown(event);\n    }\n\n    onElementKeyUp(event) {\n        return super.onElementKeyUp(event);\n    }\n\n    onElementMouseOver(event) {\n        return super.onElementMouseOver(event);\n    }\n\n    onElementMouseOut(event) {\n        return super.onElementMouseOut(event);\n    }\n\n    //endregion\n\n    //region Feature hooks\n\n    // Called for each event during drop\n    processEventDrop() {}\n    processCrossSchedulerEventDrop() {}\n\n    // Called before event drag starts\n    beforeEventDragStart() {}\n\n    // Called after event drag starts\n    afterEventDragStart() {}\n\n    // Called after aborting a drag\n    afterEventDragAbortFinalized() {}\n\n    // Called during event drag validation\n    checkEventDragValidity() {}\n\n    // Called after event resizing starts\n    afterEventResizeStart() {}\n\n    // Called after generating a DomConfig for an event\n    afterRenderEvent() {}\n\n    //endregion\n\n    //region Scheduler specific date mapping functions\n\n    get hasEventEditor() {\n        return Boolean(this.eventEditingFeature);\n    }\n\n    get eventEditingFeature() {\n        const {\n            eventEdit,\n            taskEdit,\n            simpleEventEdit\n        } = this.features;\n\n        return eventEdit?.enabled\n            ? eventEdit\n            : taskEdit?.enabled\n                ? taskEdit\n                : simpleEventEdit?.enabled ? simpleEventEdit : null;\n    }\n\n    // Method is chained by event editing features. Ensure that the event is in the store.\n    editEvent(eventRecord, resourceRecord, element) {\n        const\n            me = this,\n            {\n                eventStore,\n                assignmentStore\n            } = me;\n\n        // Abort the chain if no event editing features available\n        if (!me.hasEventEditor) {\n            return false;\n        }\n\n        if (eventRecord.eventStore !== eventStore) {\n            const\n                { enableEventAnimations } = me,\n                resourceRecords           = [];\n\n            // It's only a provisional event because we are going to edit it which will\n            // allow an opportunity to cancel the add (by removing it).\n            eventRecord.isCreating = true;\n\n            let assignmentRecords = [];\n\n            if (resourceRecord) {\n                resourceRecords.push(resourceRecord);\n                assignmentRecords = assignmentStore.assignEventToResource(eventRecord, resourceRecord);\n            }\n\n            // Vetoable beforeEventAdd allows cancel of this operation\n            if (me.trigger('beforeEventAdd', { eventRecord, resourceRecords, assignmentRecords }) === false) {\n                // Remove any assignment created above, to leave store as it was\n                assignmentStore?.remove(assignmentRecords);\n\n                return false;\n            }\n\n            me.enableEventAnimations = false;\n            eventStore.add(eventRecord);\n            me.project.commitAsync().then(() => me.enableEventAnimations = enableEventAnimations);\n\n            // Element must be created synchronously, not after the project's normalizing delays.\n            me.refreshRows();\n        }\n    }\n\n    /**\n     * Creates an event on the specified date (and scrolls it into view), for the specified resource which conforms to\n     * this scheduler's {@link #config-createEventOnDblClick} setting.\n     *\n     * NOTE: If the scheduler is readonly, or resource type is invalid (group header), or if `allowOverlap` is `false`\n     * and slot is already occupied - no event is created.\n     *\n     * This method may be called programmatically by application code if the `createEventOnDblClick` setting\n     * is `false`, in which case the default values for `createEventOnDblClick` will be used.\n     *\n     * If the {@link Scheduler.feature.EventEdit} feature is active, the new event\n     * will be displayed in the event editor.\n     * @param {Date} date The date to add the event at.\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource to create the event for.\n     * @category Scheduled events\n     */\n    async createEvent(startDate, resourceRecord) {\n        const\n            me                    = this,\n            {\n                enableEventAnimations,\n                eventStore,\n                assignmentStore,\n                hasEventEditor\n            }                     = me,\n            resourceRecords       = [resourceRecord],\n            useEventModelDefaults = me.createEventOnDblClick.useEventModelDefaults,\n            defaultDuration       = useEventModelDefaults ? eventStore.modelClass.defaultValues.duration : 1,\n            defaultDurationUnit   = useEventModelDefaults ? eventStore.modelClass.defaultValues.durationUnit : me.timeAxis.unit,\n            eventRecord           = eventStore.createRecord({\n                startDate,\n                endDate      : DateHelper.add(startDate, defaultDuration, defaultDurationUnit),\n                duration     : defaultDuration,\n                durationUnit : defaultDurationUnit,\n                name         : me.L('L{Object.newEvent}')\n            });\n\n        if (me.readOnly || resourceRecord.isSpecialRow || resourceRecord.readOnly || (!me.allowOverlap && !me.isDateRangeAvailable(\n            eventRecord.startDate,\n            eventRecord.endDate,\n            null,\n            resourceRecord\n        ))) {\n            return;\n        }\n\n        me.eventEditingFeature?.captureStm(true);\n\n        // It's only a provisional event if there is an event edit feature available to\n        // cancel the add (by removing it). Otherwise it's a definite event creation.\n        eventRecord.isCreating = hasEventEditor;\n\n        me.onEventCreated(eventRecord);\n\n        const assignmentRecords = assignmentStore?.assignEventToResource(eventRecord, resourceRecord);\n\n        /**\n         * Fires before an event is added. Can be triggered by schedule double click or drag create action.\n         * @event beforeEventAdd\n         * @param {Scheduler.view.Scheduler} source The Scheduler instance\n         * @param {Scheduler.model.EventModel} eventRecord The record about to be added\n         * @param {Scheduler.model.ResourceModel[]} resourceRecords Resources that the record is assigned to\n         * @param {Scheduler.model.AssignmentModel[]} assignmentRecords The assignment records\n         * @preventable\n         */\n        if (me.trigger('beforeEventAdd', { eventRecord, resourceRecords, assignmentRecords }) === false) {\n            // Remove any assignment created above, to leave store as it was\n            assignmentStore?.remove(assignmentRecords);\n\n            me.eventEditingFeature?.freeStm(false);\n\n            return;\n        }\n\n        me.enableEventAnimations = false;\n        eventStore.add(eventRecord);\n        me.project.commitAsync().then(() => me.enableEventAnimations = enableEventAnimations);\n\n        // Element must be created synchronously, not after the project's normalizing delays.\n        // Overrides the check for isEngineReady in VerticalRendering so that the newly added record\n        // will be rendered when we call refreshRows.\n        me.isCreating = true;\n        me.refreshRows();\n        me.isCreating = false;\n\n        await me.scrollEventIntoView(eventRecord);\n\n        /**\n         * Fired when a double click or drag gesture has created a new event and added it to the event store.\n         * @event eventAutoCreated\n         * @param {Scheduler.view.Scheduler} source This Scheduler.\n         * @param {Scheduler.model.EventModel} eventRecord The new event record.\n         * @param {Scheduler.model.ResourceModel} resourceRecord The resource assigned to the new event.\n         */\n        me.trigger('eventAutoCreated', {\n            eventRecord,\n            resourceRecord\n        });\n\n        if (hasEventEditor) {\n            me.editEvent(eventRecord, resourceRecord, me.getEventElement(eventRecord));\n        }\n    }\n\n    /**\n     * Checks if a date range is allocated or not for a given resource.\n     * @param {Date} start The start date\n     * @param {Date} end The end date\n     * @param {Scheduler.model.EventModel|null} excludeEvent An event to exclude from the check (or null)\n     * @param {Scheduler.model.ResourceModel} resource The resource\n     * @returns {Boolean} True if the timespan is available for the resource\n     * @category Dates\n     */\n    isDateRangeAvailable(start, end, excludeEvent, resource) {\n        return this.eventStore.isDateRangeAvailable(start, end, excludeEvent, resource);\n    }\n    //endregion\n\n    /**\n     * Suspends UI refresh on store operations.\n     *\n     * Multiple calls to `suspendRefresh` stack up, and will require an equal number of `resumeRefresh` calls to\n     * actually resume UI refresh.\n     *\n     * @function suspendRefresh\n     * @category Rendering\n     */\n\n    /**\n     * Resumes UI refresh on store operations.\n     *\n     * Multiple calls to `suspendRefresh` stack up, and will require an equal number of `resumeRefresh` calls to\n     * actually resume UI refresh.\n     *\n     * Specify `true` as the first param to trigger a refresh if this call unblocked the refresh suspension.\n     * If the underlying project is calculating changes, the refresh will be postponed until it is done.\n     *\n     * @param {Boolean} trigger `true` to trigger a refresh, if this resume unblocks suspension\n     * @category Rendering\n     */\n    async resumeRefresh(trigger) {\n        super.resumeRefresh(false);\n\n        const me = this;\n\n        if (!me.refreshSuspended && trigger) {\n            // Do not refresh until project is in a valid state\n            if (!me.isEngineReady) {\n                // Refresh will happen because of the commit, bail out of this one after forcing rendering to consider\n                // next one a full refresh\n                me.currentOrientation.refreshAllWhenReady = true;\n                return me.project.commitAsync();\n            }\n\n            // View could've been destroyed while we waited for engine\n            if (!me.isDestroyed) {\n                // If it already is, refresh now\n                me.refreshWithTransition();\n            }\n        }\n    }\n\n    //region Appearance\n\n    // Overrides grid to take crudManager loading into account\n    toggleEmptyText() {\n        const\n            me = this;\n\n        if (me.bodyContainer) {\n            DomHelper.toggleClasses(me.bodyContainer, 'b-grid-empty', !(me.resourceStore.count > 0 || me.crudManager?.isLoading));\n        }\n    }\n\n    // Overrides Grids base implementation to return a correctly calculated height for the row. Also stores it in\n    // RowManagers height map, which is used to calculate total height etc.\n    getRowHeight(resourceRecord) {\n        if (this.isHorizontal) {\n            const height = this.currentOrientation.calculateRowHeight(resourceRecord);\n            this.rowManager.storeKnownHeight(resourceRecord.id, height);\n            return height;\n        }\n    }\n\n    // Calculates the height for specified rows. Call when changes potentially makes its height invalid\n    calculateRowHeights(resourceRecords, silent = false) {\n        // Array allowed to have nulls in it for easier code when calling this fn\n        resourceRecords.forEach(resourceRecord => resourceRecord && this.getRowHeight(resourceRecord));\n\n        if (!silent) {\n            this.rowManager.estimateTotalHeight(true);\n        }\n    }\n\n    // Calculate heights for all rows (up to the preCalculateHeightLimit)\n    calculateAllRowHeights(silent = false) {\n        const\n            { store, rowManager } = this,\n            count                 = Math.min(store.count, this.preCalculateHeightLimit);\n\n        // Allow opt out by specifying falsy value.\n        if (count) {\n            rowManager.clearKnownHeights();\n\n            for (let i = 0; i < count; i++) {\n                // This will both calculate and store the height\n                this.getRowHeight(store.getAt(i));\n            }\n\n            // Make sure height is reflected on scroller etc.\n            if (!silent) {\n                rowManager.estimateTotalHeight(true);\n            }\n        }\n    }\n\n    //endregion\n\n    //region Calendar Mode Interface\n\n    // These are all internal and match up w/CalendarMixin\n\n    /**\n     * Returns the date or ranges of included dates as an array. If only the {@link #config-startDate} is significant,\n     * the array will have that date as its only element. Otherwise, a range of dates is returned as a two-element\n     * array with `[0]` is the {@link #config-startDate} and `[1]` is the {@link #property-lastDate}.\n     * @member {Date[]}\n     * @internal\n     */\n    get dateBounds() {\n        const\n            me  = this,\n            ret = [me.startDate];\n\n        if (me.range === 'week') {\n            ret.push(me.lastDate);\n        }\n\n        return ret;\n    }\n\n    get defaultDescriptionFormat() {\n        return descriptionFormats[this.range];\n    }\n\n    /**\n     * The last day that is included in the date range. This is different than {@link #config-endDate} since that date\n     * is not inclusive. For example, an `endDate` of 2022-07-21 00:00:00 indicates that the time range ends at that\n     * time, and so 2022-07-21 is _not_ in the range. In this example, `lastDate` would be 2022-07-20 since that is the\n     * last day included in the range.\n     * @member {Date}\n     * @internal\n     */\n    get lastDate() {\n        const lastDate = this.endDate;\n\n        // endDate is \"exclusive\" because it means 00:00:00 of that day, so subtract 1\n        // to keep description consistent with human expectations.\n        return lastDate && DateHelper.add(lastDate, -1, 'day');\n    }\n\n    getEventRecord(target) {\n        target = DomHelper.getEventElement(target);\n\n        return this.resolveEventRecord(target);\n    }\n\n    getEventElement(eventRecord) {\n        return this.getElementFromEventRecord(eventRecord);\n    }\n\n    changeRange(unit) {\n        return DateHelper.normalizeUnit(unit);\n    }\n\n    updateRange(unit) {\n        if (!this.isConfiguring) {\n            const\n                currentDate = this.date,\n                newDate     = this.date = DateHelper.startOf(currentDate, unit);\n\n            // Force a span update if changing the range did not change the date\n            if (currentDate.getTime() === newDate.getTime()) {\n                this.updateDate(newDate);\n            }\n        }\n    }\n\n    changeStepUnit(unit) {\n        return DateHelper.normalizeUnit(unit);\n    }\n\n    updateDate(newDate) {\n        const\n            me    = this,\n            start = DateHelper.startOf(newDate, me.range);\n\n        me.setTimeSpan(start, DateHelper.add(start, 1, me.range));\n\n        // Cant always use newDate here in case timeAxis is filtered\n        me.visibleDate = {\n            date    : DateHelper.max(newDate, me.timeAxis.startDate),\n            block   : 'start',\n            animate : true\n        };\n\n        me.trigger('descriptionChange');\n    }\n\n    updateScrollBuffer(value) {\n        if (!this.isConfiguring) {\n            this.currentOrientation.scrollBuffer = value;\n        }\n    }\n\n    previous() {\n        this.date = DateHelper.add(this.date, -1, this.stepUnit);\n    }\n\n    next() {\n        this.date = DateHelper.add(this.date, 1, this.stepUnit);\n    }\n\n    //endregion\n\n    /**\n     * Assigns and schedules an unassigned event record (+ adds it to this Scheduler's event store unless already in it).\n     * @param {Object} config The config containing data about the event record to schedule\n     * @param {Date} config.startDate The start date\n     * @param {Scheduler.model.EventModel|EventModelConfig} config.eventRecord Event (or data for it) to assign and schedule\n     * @param {Scheduler.model.EventModel} [config.parentEventRecord] Parent event to add the event to (to nest it),\n     * only applies when using the NestedEvents feature\n     * @param {Scheduler.model.ResourceModel} config.resourceRecord Resource to assign the event to\n     * @param {HTMLElement} [config.element] The element if you are dragging an element from outside the scheduler\n     * @category Scheduled events\n     */\n    async scheduleEvent({ startDate, eventRecord, resourceRecord, element }) {\n        const me = this;\n\n        // NestedEvents has an override for this function to handle parentEventRecord\n\n        if (!me.eventStore.includes(eventRecord)) {\n            [eventRecord] = me.eventStore.add(eventRecord);\n        }\n\n        eventRecord.startDate = startDate;\n        eventRecord.assign(resourceRecord);\n\n        if (element) {\n            const eventRect = Rectangle.from(element, me.foregroundCanvas);\n\n            // Clear translate styles used by DragHelper\n            DomHelper.setTranslateXY(element, 0, 0);\n            DomHelper.setTopLeft(element, eventRect.y, eventRect.x);\n\n            DomSync.addChild(me.foregroundCanvas, element, eventRecord.assignments[0].id);\n        }\n\n        await me.project.commitAsync();\n    }\n}\n\n// Register this widget type with its Factory\nSchedulerBase.initClass();\n\n// Scheduler version is specified in TimelineBase because Gantt extends it\n","import ColorPicker from '../../Core/widget/ColorPicker.js';\nimport SchedulerBase from '../view/SchedulerBase.js';\n/**\n * @module Scheduler/widget/EventColorPicker\n */\n\n/**\n * A color picker that displays a list of available event colors which the user can select by using mouse or keyboard.\n * See Schedulers {@link Scheduler.view.mixin.TimelineEventRendering#config-eventColor eventColor config} for default\n * available colors.\n *\n * {@inlineexample Scheduler/widget/EventColorPicker.js}\n *\n * ```javascript\n * new EventColorPicker({\n *    appendTo : 'container',\n *    width    : '10em',\n *    onColorSelected() {\n *        console.log(...arguments);\n *    }\n * });\n * ```\n *\n * @classType colorpicker\n * @extends Core/widget/ColorPicker\n */\nexport default class EventColorPicker extends ColorPicker {\n    static $name = 'EventColorPicker';\n\n    static type = 'eventcolorpicker';\n\n    static configurable = {\n\n        colorClasses : SchedulerBase.eventColors,\n\n        colorClassPrefix : 'b-sch-',\n\n        /**\n         * @hideconfigs colors\n         */\n\n        colors : null,\n\n        /**\n         * Provide a {@link Scheduler.model.EventModel} instance to update it's\n         * {@link Scheduler.model.mixin.EventModelMixin#field-eventColor} field\n         * @config {Scheduler.model.EventModel}\n         */\n        record : null\n    };\n\n    colorSelected({ color }) {\n        if (this.record) {\n            this.record.eventColor = color;\n        }\n    }\n}\n\nEventColorPicker.initClass();\n","import Base from '../../Core/Base.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport BrowserHelper from '../../Core/helper/BrowserHelper.js';\n\n/**\n * @module Scheduler/tooltip/ClockTemplate\n */\n\n/**\n * A template showing a clock, it consumes an object containing a date and a text\n * @private\n */\nexport default class ClockTemplate extends Base {\n    static get defaultConfig() {\n        return {\n            minuteHeight : 8,\n            minuteTop    : 2,\n            hourHeight   : 8,\n            hourTop      : 2,\n            handLeft     : 10,\n            div          : document.createElement('div'),\n            scheduler    : null, // may be passed to the constructor if needed\n            // `b-sch-clock-day` for calendar icon\n            // `b-sch-clock-hour` for clock icon\n            template(data) {\n                return `<div class=\"b-sch-clockwrap b-sch-clock-${data.mode || this.mode} ${data.cls || ''}\">\n                    <div class=\"b-sch-clock\">\n                        <div class=\"b-sch-hour-indicator\">${DateHelper.format(data.date, 'MMM')}</div>\n                        <div class=\"b-sch-minute-indicator\">${DateHelper.format(data.date, 'D')}</div>\n                        <div class=\"b-sch-clock-dot\"></div>\n                    </div>\n                    <span class=\"b-sch-clock-text\">${StringHelper.encodeHtml(data.text)}</span>\n                </div>`;\n            }\n        };\n    }\n\n    generateContent(data) {\n        return this.div.innerHTML = this.template(data);\n    }\n\n    updateDateIndicator(el, date) {\n        const\n            hourIndicatorEl   = el?.querySelector('.b-sch-hour-indicator'),\n            minuteIndicatorEl = el?.querySelector('.b-sch-minute-indicator');\n\n        if (date && hourIndicatorEl && minuteIndicatorEl && BrowserHelper.isBrowserEnv) {\n            if (this.mode === 'hour') {\n                hourIndicatorEl.style.transform   = `rotate(${(date.getHours() % 12) * 30}deg)`;\n                minuteIndicatorEl.style.transform = `rotate(${date.getMinutes() * 6}deg)`;\n            }\n            else {\n                hourIndicatorEl.style.transform   = 'none';\n                minuteIndicatorEl.style.transform = 'none';\n            }\n        }\n    }\n\n    set mode(mode) {\n        this._mode = mode;\n    }\n\n    // `day` mode for calendar icon\n    // `hour` mode for clock icon\n    get mode() {\n        if (this._mode) {\n            return this._mode;\n        }\n\n        //<debug>\n        if (!this.scheduler) {\n            throw new Error('`scheduler` config has to be specified for the clock template');\n        }\n        //</debug>\n\n        const\n            unitLessThanDay        = DateHelper.compareUnits(this.scheduler.timeAxisViewModel.timeResolution.unit, 'day') < 0,\n            formatContainsHourInfo = DateHelper.formatContainsHourInfo(this.scheduler.displayDateFormat);\n\n        return unitLessThanDay && formatContainsHourInfo ? 'hour' : 'day';\n    }\n\n    set template(template) {\n        this._template = template;\n    }\n\n    /**\n     * Get the clock template, which accepts an object of format { date, text }\n     * @property {function(*): string}\n     */\n    get template() {\n        return this._template;\n    }\n}\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Scheduler/feature/mixin/TaskEditStm\n */\n\n/**\n * Mixin adding STM transactable behavior to TaskEdit feature.\n *\n * @mixin\n */\nexport default Target => class TaskEditStm extends (Target || Base) {\n    static get $name() {\n        return 'TaskEditStm';\n    }\n\n    getStmCapture() {\n        return {\n            stmInitiallyAutoRecord : this.stmInitiallyAutoRecord,\n            stmInitiallyDisabled   : this.stmInitiallyDisabled,\n            // this flag indicates whether the STM capture has been transferred to\n            // another feature, which will be responsible for finalizing the STM transaction\n            // (otherwise we'll do it ourselves)\n            transferred            : false\n        };\n    }\n\n    applyStmCapture(stmCapture) {\n        this.stmInitiallyAutoRecord = stmCapture.stmInitiallyAutoRecord;\n        this.stmInitiallyDisabled = stmCapture.stmInitiallyDisabled;\n    }\n\n    captureStm(startTransaction = false) {\n        const\n            me      = this,\n            project = me.project,\n            stm     = project.getStm();\n\n        if (me.hasStmCapture) {\n            return;\n        }\n\n        me.hasStmCapture = true;\n        me.stmInitiallyDisabled = stm.disabled;\n        me.stmInitiallyAutoRecord = stm.autoRecord;\n\n        if (me.stmInitiallyDisabled) {\n            stm.enable();\n            // it seems this branch has never been exercised by tests\n            // but the intention is to stop the auto-recording while\n            // task editor is active (all editing is one manual transaction)\n            stm.autoRecord = false;\n        }\n        else {\n            if (me.stmInitiallyAutoRecord) {\n                stm.autoRecord = false;\n            }\n            if (stm.isRecording) {\n                stm.stopTransaction();\n            }\n        }\n\n        if (startTransaction) {\n            this.startStmTransaction();\n        }\n    }\n\n    startStmTransaction() {\n        this.project.getStm().startTransaction();\n    }\n\n    commitStmTransaction() {\n        const\n            me  = this,\n            stm = me.project.getStm();\n\n        if (!me.hasStmCapture) {\n            throw new Error('Does not have STM capture, no transaction to commit');\n        }\n\n        if (stm.enabled) {\n            stm.stopTransaction();\n\n            if (me.stmInitiallyDisabled) {\n                stm.resetQueue();\n            }\n        }\n    }\n\n    async rejectStmTransaction() {\n        const\n            stm        = this.project.getStm(),\n            { client } = this;\n\n        if (!this.hasStmCapture) {\n            throw new Error('Does not have STM capture, no transaction to reject');\n        }\n\n        if (stm.enabled) {\n            if (stm.transaction?.length) {\n                client.suspendRefresh();\n\n                stm.rejectTransaction();\n\n                await client.resumeRefresh(true);\n            }\n            else {\n                stm.stopTransaction();\n            }\n        }\n    }\n\n    enableStm() {\n        this.project.getStm().enable();\n    }\n\n    disableStm() {\n        this.project.getStm().disable();\n    }\n\n    async freeStm(commitOrReject = null) {\n        const\n            me  = this,\n            stm = me.project.getStm(),\n            {\n                stmInitiallyDisabled,\n                stmInitiallyAutoRecord\n            } = me;\n\n        if (!me.hasStmCapture) {\n            return;\n        }\n\n        let promise;\n\n        me.rejectingStmTransaction = true;\n\n        if (commitOrReject === true) {\n            promise = me.commitStmTransaction();\n        }\n        else if (commitOrReject === false) {\n            // Note - we don't wait for async to complete here\n            promise = me.rejectStmTransaction();\n        }\n\n        await promise;\n\n        if (!stm.isDestroying) {\n            stm.disabled = stmInitiallyDisabled;\n            stm.autoRecord = stmInitiallyAutoRecord;\n        }\n\n        if (!me.isDestroying) {\n            me.rejectingStmTransaction = true;\n            me.hasStmCapture = false;\n        }\n    };\n};\n","import ContextMenuBase from '../../../Core/feature/base/ContextMenuBase.js';\n\n/**\n * @module Scheduler/feature/base/TimeSpanMenuBase\n */\n\n/**\n * Abstract base class used by other context menu features which show the context menu for TimeAxis.\n * Using this class you can make sure the menu expects the target to disappear,\n * since it can be scroll out of the scheduling zone.\n *\n * Features that extend this class are:\n *  * {@link Scheduler/feature/EventMenu};\n *  * {@link Scheduler/feature/ScheduleMenu};\n *  * {@link Scheduler/feature/TimeAxisHeaderMenu};\n *\n * @extends Core/feature/base/ContextMenuBase\n * @abstract\n */\nexport default class TimeSpanMenuBase extends ContextMenuBase {\n}\n","import Combo from '../../../../Core/widget/Combo.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrenceFrequencyCombo\n */\n\n/**\n * A combobox field allowing to pick frequency in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * @extends Core/widget/Combo\n * @classType recurrencefrequencycombo\n */\nexport default class RecurrenceFrequencyCombo extends Combo {\n\n    static $name = 'RecurrenceFrequencyCombo';\n\n    // Factoryable type name\n    static type = 'recurrencefrequencycombo';\n\n    static configurable = {\n        editable              : false,\n        displayField          : 'text',\n        valueField            : 'value',\n        localizeDisplayFields : true,\n        addNone               : false\n    };\n\n    buildItems() {\n        return [\n            ...(this.addNone ? [{ text : 'L{None}', value : 'NONE' }] : []),\n            { value : 'DAILY',   text : 'L{Daily}' },\n            { value : 'WEEKLY',  text : 'L{Weekly}' },\n            { value : 'MONTHLY', text : 'L{Monthly}' },\n            { value : 'YEARLY',  text : 'L{Yearly}' }\n        ];\n    }\n};\n\n// Register this widget type with its Factory\nRecurrenceFrequencyCombo.initClass();\n","import DateHelper from '../../../../Core/helper/DateHelper.js';\nimport Combo from '../../../../Core/widget/Combo.js';\nimport RecurrenceDayRuleEncoder from '../../../data/util/recurrence/RecurrenceDayRuleEncoder.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrenceDaysCombo\n */\n\n/**\n * A combobox field allowing to pick days for the `Monthly` and `Yearly` mode in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * @extends Core/widget/Combo\n * @classType recurrencedayscombo\n */\nexport default class RecurrenceDaysCombo extends Combo {\n\n    static get $name() {\n        return 'RecurrenceDaysCombo';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencedayscombo';\n    }\n\n    static get defaultConfig() {\n        const\n            allDaysValueAsArray = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'],\n            allDaysValue        = allDaysValueAsArray.join(',');\n\n        return {\n            allDaysValue,\n            editable            : false,\n            defaultValue        : allDaysValue,\n            workingDaysValue    : allDaysValueAsArray.filter((day, index) => !DateHelper.nonWorkingDays[index]).join(','),\n            nonWorkingDaysValue : allDaysValueAsArray.filter((day, index) => DateHelper.nonWorkingDays[index]).join(','),\n            splitCls            : 'b-recurrencedays-split',\n            displayField        : 'text',\n            valueField          : 'value'\n        };\n    }\n\n    buildItems() {\n        const me = this;\n\n        me._weekDays = null;\n\n        return me.weekDays.concat([\n            { value : me.allDaysValue,        text : me.L('L{day}'), cls : me.splitCls },\n            { value : me.workingDaysValue,    text : me.L('L{weekday}') },\n            { value : me.nonWorkingDaysValue, text : me.L('L{weekend day}') }\n        ]);\n    }\n\n    get weekDays() {\n        const me = this;\n\n        if (!me._weekDays) {\n            const weekStartDay = DateHelper.weekStartDay;\n\n            const dayNames = DateHelper.getDayNames().map((text, index) => ({ text, value : RecurrenceDayRuleEncoder.encodeDay(index) }));\n\n            // we should start week w/ weekStartDay\n            me._weekDays = dayNames.slice(weekStartDay).concat(dayNames.slice(0, weekStartDay));\n        }\n\n        return me._weekDays;\n    }\n\n    set value(value) {\n        const me = this;\n\n        if (value && Array.isArray(value)) {\n            value = value.join(',');\n        }\n\n        // if the value has no matching option in the store we need to use default value\n        if (!value || !me.store.findRecord('value', value)) {\n            value = me.defaultValue;\n        }\n\n        super.value = value;\n    }\n\n    get value() {\n        let value = super.value;\n\n        if (value && Array.isArray(value)) {\n            value = value.join(',');\n        }\n\n        return value;\n    }\n}\n\n// Register this widget type with its Factory\nRecurrenceDaysCombo.initClass();\n","import DateHelper from '../../../../Core/helper/DateHelper.js';\nimport ButtonGroup from '../../../../Core/widget/ButtonGroup.js';\nimport RecurrenceDayRuleEncoder from '../../../data/util/recurrence/RecurrenceDayRuleEncoder.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrenceDaysButtonGroup\n */\n\n/**\n * A segmented button field allowing to pick days for the \"Weekly\" mode in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * {@inlineexample Scheduler/view/RecurrenceDaysButtonGroup.js}\n *\n * @extends Core/widget/ButtonGroup\n */\nexport default class RecurrenceDaysButtonGroup extends ButtonGroup {\n\n    static get $name() {\n        return 'RecurrenceDaysButtonGroup';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencedaysbuttongroup';\n    }\n\n    static get defaultConfig() {\n        return {\n            defaults : {\n                cls        : 'b-raised',\n                toggleable : true\n            }\n        };\n    }\n\n    construct(config = {}) {\n        const me = this;\n\n        config.columns = 7;\n        config.items   = me.buildItems();\n\n        super.construct(config);\n    }\n\n    updateItemText(item) {\n        const day = RecurrenceDayRuleEncoder.decodeDay(item.value)[0];\n\n        item.text = DateHelper.getDayName(day).substring(0, 3);\n    }\n\n    buildItems() {\n        const me = this;\n\n        if (!me.__items) {\n            const weekStartDay = DateHelper.weekStartDay;\n\n            const dayNames = DateHelper.getDayNames().map((text, index) => ({\n                text  : text.substring(0, 3),\n                value : RecurrenceDayRuleEncoder.encodeDay(index)\n            }));\n\n            // we should start week w/ weekStartDay\n            me.__items = dayNames.slice(weekStartDay).concat(dayNames.slice(0, weekStartDay));\n        }\n\n        return me.__items;\n    }\n\n    set value(value) {\n        if (value && Array.isArray(value)) {\n            value = value.join(',');\n        }\n\n        super.value = value;\n    }\n\n    get value() {\n        let value = super.value;\n\n        if (value && Array.isArray(value)) {\n            value = value.join(',');\n        }\n\n        return value;\n    }\n\n    onLocaleChange() {\n        // update button texts on locale switch\n        this.items.forEach(this.updateItemText, this);\n    }\n\n    updateLocalization() {\n        this.onLocaleChange();\n        super.updateLocalization();\n    }\n\n    get widgetClassList() {\n        const classList = super.widgetClassList;\n        // to look more like a real field\n        classList.push('b-field');\n        return classList;\n    }\n};\n\n// Register this widget type with its Factory\nRecurrenceDaysButtonGroup.initClass();\n","import ButtonGroup from '../../../../Core/widget/ButtonGroup.js';\n\n/**\n * A segmented button field allowing to pick month days for the `Monthly` mode in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * @extends Core/widget/ButtonGroup\n */\nexport default class RecurrenceMonthDaysButtonGroup extends ButtonGroup {\n\n    static get $name() {\n        return 'RecurrenceMonthDaysButtonGroup';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencemonthdaysbuttongroup';\n    }\n\n    static get defaultConfig() {\n        return {\n            defaults : {\n                toggleable : true,\n                cls        : 'b-raised'\n            }\n        };\n    }\n\n    get minValue() {\n        return 1;\n    }\n\n    get maxValue() {\n        return 31;\n    }\n\n    construct(config = {}) {\n        const me = this;\n\n        config.columns = 7;\n        config.items   = me.buildItems();\n\n        super.construct(config);\n    }\n\n    buildItems() {\n        const\n            me    = this,\n            items = [];\n\n        for (let value = me.minValue; value <= me.maxValue; value++) {\n            // button config\n            items.push({\n                text : value + '',\n                value\n            });\n        }\n\n        return items;\n    }\n\n    get widgetClassList() {\n        const classList = super.widgetClassList;\n        // to look more like a real field\n        classList.push('b-field');\n        return classList;\n    }\n\n};\n\n// Register this widget type with its Factory\nRecurrenceMonthDaysButtonGroup.initClass();\n","import DateHelper from '../../../../Core/helper/DateHelper.js';\nimport ButtonGroup from '../../../../Core/widget/ButtonGroup.js';\n\n/**\n * A segmented button field allowing to pick months for the `Yearly` mode in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * @extends Core/widget/ButtonGroup\n */\nexport default class RecurrenceMonthsButtonGroup extends ButtonGroup {\n\n    static get $name() {\n        return 'RecurrenceMonthsButtonGroup';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencemonthsbuttongroup';\n    }\n\n    static get defaultConfig() {\n        return {\n            defaults : {\n                toggleable : true,\n                cls        : 'b-raised'\n            }\n        };\n    }\n\n    construct(config = {}) {\n        const me = this;\n\n        config.columns = 4;\n        config.items   = me.buildItems();\n\n        super.construct(config);\n    }\n\n    buildItems() {\n        return DateHelper.getMonthNames().map((item, index) => ({\n            text  : item.substring(0, 3),\n            value : index + 1 // 1-based\n        }));\n    }\n\n    updateItemText(item) {\n        item.text = DateHelper.getMonthName(item.value - 1).substring(0, 3);\n    }\n\n    onLocaleChange() {\n        // update button texts on locale switch\n        this.items.forEach(this.updateItemText, this);\n    }\n\n    updateLocalization() {\n        this.onLocaleChange();\n        super.updateLocalization();\n    }\n\n    get widgetClassList() {\n        const classList = super.widgetClassList;\n        // to look more like a real field\n        classList.push('b-field');\n        return classList;\n    }\n\n};\n\n// Register this widget type with its Factory\nRecurrenceMonthsButtonGroup.initClass();\n","import Combo from '../../../../Core/widget/Combo.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrenceStopConditionCombo\n */\n\n/**\n * A combobox field allowing to choose stop condition for the recurrence in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * @extends Core/widget/Combo\n * @classType recurrencestopconditioncombo\n */\nexport default class RecurrenceStopConditionCombo extends Combo {\n\n    static get $name() {\n        return 'RecurrenceStopConditionCombo';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencestopconditioncombo';\n    }\n\n    static get defaultConfig() {\n        return {\n            editable     : false,\n            placeholder  : 'Never',\n            displayField : 'text',\n            valueField   : 'value'\n        };\n    }\n\n    buildItems() {\n        return [\n            { value : 'never', text : this.L('L{Never}') },\n            { value : 'count', text : this.L('L{After}') },\n            { value : 'date',  text : this.L('L{On date}') }\n        ];\n    }\n\n    set value(value) {\n        // Use 'never' instead of falsy value\n        value = value || 'never';\n\n        super.value = value;\n    }\n\n    get value() {\n        return super.value;\n    }\n\n    get recurrence() {\n        return this._recurrence;\n    }\n\n    set recurrence(recurrence) {\n        let value = null;\n\n        if (recurrence.endDate) {\n            value = 'date';\n        }\n        else if (recurrence.count) {\n            value = 'count';\n        }\n\n        this._recurrence = recurrence;\n\n        this.value = value;\n    }\n};\n\n// Register this widget type with its Factory\nRecurrenceStopConditionCombo.initClass();\n","import ArrayHelper from '../../../../Core/helper/ArrayHelper.js';\nimport Combo from '../../../../Core/widget/Combo.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrencePositionsCombo\n */\n\n/**\n * A combobox field allowing to specify day positions in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence editor}.\n *\n * @extends Core/widget/Combo\n * @classType recurrencepositionscombo\n */\nexport default class RecurrencePositionsCombo extends Combo {\n\n    // <debug>\n    // region Localization test\n    static localization = [\n        'L{position1}',\n        'L{position2}',\n        'L{position3}',\n        'L{position4}',\n        'L{position5}'\n    ];\n    // endregion\n    // </debug>\n\n    static get $name() {\n        return 'RecurrencePositionsCombo';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencepositionscombo';\n    }\n\n    static get defaultConfig() {\n        return {\n            editable     : false,\n            splitCls     : 'b-sch-recurrencepositions-split',\n            displayField : 'text',\n            valueField   : 'value',\n            defaultValue : 1,\n            maxPosition  : 5\n        };\n    }\n\n    buildItems() {\n        return this.buildDayNumbers().concat([\n            { value : '-1', text : this.L('L{position-1}'), cls : this.splitCls }\n        ]);\n    }\n\n    buildDayNumbers() {\n        return ArrayHelper.populate(this.maxPosition, i => (\n            { value : i + 1, text : this.L(`position${i + 1}`) }\n        ));\n    }\n\n    set value(value) {\n        const me = this;\n\n        if (value && Array.isArray(value)) {\n            value = value.join(',');\n        }\n\n        // if the value has no matching option in the store we need to use default value\n        if (!value || !me.store.findRecord('value', value)) {\n            value = me.defaultValue;\n        }\n\n        super.value = value;\n    }\n\n    get value() {\n        const value = super.value;\n\n        return value ? `${value}`.split(',').map(item => parseInt(item, 10)) : [];\n    }\n\n};\n\n// Register this widget type with its Factory\nRecurrencePositionsCombo.initClass();\n","import RecurrenceDayRuleEncoder from '../../data/util/recurrence/RecurrenceDayRuleEncoder.js';\nimport Panel from '../../../Core/widget/Panel.js';\nimport '../../../Core/widget/Widget.js';\nimport '../../../Core/widget/Button.js';\nimport '../../../Core/widget/Checkbox.js';\nimport '../../../Core/widget/SlideToggle.js';\nimport '../../../Core/widget/DateField.js';\nimport '../../../Core/widget/NumberField.js';\nimport './field/RecurrenceFrequencyCombo.js';\nimport './field/RecurrenceDaysCombo.js';\nimport './field/RecurrenceDaysButtonGroup.js';\nimport './field/RecurrenceMonthDaysButtonGroup.js';\nimport './field/RecurrenceMonthsButtonGroup.js';\nimport './field/RecurrenceStopConditionCombo.js';\nimport './field/RecurrencePositionsCombo.js';\nimport BrowserHelper from '../../../Core/helper/BrowserHelper.js';\n\n/**\n * @module Scheduler/view/recurrence/RecurrenceEditorPanel\n */\n\n/**\n * Panel containing fields used to edit a {@link Scheduler.model.RecurrenceModel recurrence model}. Used by\n * {@link Scheduler/view/recurrence/RecurrenceEditor}, and by the recurrence tab in Scheduler Pro's event editor.\n *\n * Not intended to be used separately.\n *\n * @extends Core/widget/Panel\n * @classType recurrenceeditorpanel\n * @private\n */\nexport default class RecurrenceEditorPanel extends Panel {\n\n    static $name = 'RecurrenceEditorPanel';\n\n    static type = 'recurrenceeditorpanel';\n\n    static configurable = {\n        cls     : 'b-recurrenceeditor',\n        record  : false,\n        addNone : false,\n        items   : {\n            frequencyField : {\n                type     : 'recurrencefrequencycombo',\n                name     : 'frequency',\n                label    : 'L{RecurrenceEditor.Frequency}',\n                weight   : 10,\n                onChange : 'up.onFrequencyFieldChange',\n                addNone  : 'up.addNone'\n            },\n            intervalField : {\n                type     : 'numberfield',\n                weight   : 15,\n                name     : 'interval',\n                label    : 'L{RecurrenceEditor.Every}',\n                min      : 1,\n                required : true\n            },\n            daysButtonField : {\n                type         : 'recurrencedaysbuttongroup',\n                weight       : 20,\n                name         : 'days',\n                forFrequency : 'WEEKLY'\n            },\n            // the radio button enabling \"monthDaysButtonField\" in MONTHLY mode\n            monthDaysRadioField : {\n                type         : 'checkbox',\n                weight       : 30,\n                toggleGroup  : 'radio',\n                forFrequency : 'MONTHLY',\n                label        : 'L{RecurrenceEditor.Each}',\n                checked      : true,\n                onChange     : 'up.onMonthDaysRadioFieldChange'\n            },\n            monthDaysButtonField : {\n                type         : 'recurrencemonthdaysbuttongroup',\n                weight       : 40,\n                name         : 'monthDays',\n                forFrequency : 'MONTHLY'\n            },\n            monthsButtonField : {\n                type         : 'recurrencemonthsbuttongroup',\n                weight       : 50,\n                name         : 'months',\n                forFrequency : 'YEARLY'\n            },\n            // the radio button enabling positions & days combos in MONTHLY & YEARLY modes\n            positionAndDayRadioField : {\n                type         : 'checkbox',\n                weight       : 60,\n                toggleGroup  : 'radio',\n                forFrequency : 'MONTHLY|YEARLY',\n                label        : 'L{RecurrenceEditor.On the}',\n                onChange     : 'up.onPositionAndDayRadioFieldChange'\n            },\n            positionsCombo : {\n                type         : 'recurrencepositionscombo',\n                weight       : 80,\n                name         : 'positions',\n                forFrequency : 'MONTHLY|YEARLY'\n            },\n            daysCombo : {\n                type         : 'recurrencedayscombo',\n                weight       : 90,\n                name         : 'days',\n                forFrequency : 'MONTHLY|YEARLY',\n                flex         : 1\n            },\n            stopRecurrenceField : {\n                type     : 'recurrencestopconditioncombo',\n                weight   : 100,\n                label    : 'L{RecurrenceEditor.End repeat}',\n                onChange : 'up.onStopRecurrenceFieldChange'\n            },\n            countField : {\n                type     : 'numberfield',\n                weight   : 110,\n                name     : 'count',\n                min      : 2,\n                required : true,\n                disabled : true,\n                label    : ' '\n            },\n            endDateField : {\n                type     : 'datefield',\n                weight   : 120,\n                name     : 'endDate',\n                hidden   : true,\n                disabled : true,\n                label    : ' ',\n                required : true\n            }\n        }\n    };\n\n    setupWidgetConfig(widgetConfig) {\n        // All our inputs must be mutated using triggers and touch gestures on mobile\n        if (BrowserHelper.isMobile && !('editable' in widgetConfig)) {\n            widgetConfig.editable = false;\n        }\n        return super.setupWidgetConfig(...arguments);\n    }\n\n    updateRecord(record) {\n        super.updateRecord(record);\n\n        const\n            me = this,\n            {\n                frequencyField,\n                daysButtonField,\n                monthDaysButtonField,\n                monthsButtonField,\n                monthDaysRadioField,\n                positionAndDayRadioField,\n                stopRecurrenceField\n            }  = me.widgetMap;\n\n        if (record) {\n            const\n                event     = record.timeSpan,\n                startDate = event?.startDate;\n\n            // some fields default values are calculated based on event \"startDate\" value\n            if (startDate) {\n                // if no \"days\" value provided\n                if (!record.days || !record.days.length) {\n                    daysButtonField.value = [RecurrenceDayRuleEncoder.encodeDay(startDate.getDay())];\n                }\n\n                // if no \"monthDays\" value provided\n                if (!record.monthDays || !record.monthDays.length) {\n                    monthDaysButtonField.value = startDate.getDate();\n                }\n\n                // if no \"months\" value provided\n                if (!record.months || !record.months.length) {\n                    monthsButtonField.value = startDate.getMonth() + 1;\n                }\n            }\n\n            // if the record has both \"days\" & \"positions\" fields set check \"On the\" checkbox\n            if (record.days && record.positions) {\n                positionAndDayRadioField.check();\n                // <remove-on-release>\n                // TODO: if toggleGroup members are not painted automatic unchecking doesn't work\n                // </remove-on-release>\n                if (!me.isPainted) {\n                    monthDaysRadioField.uncheck();\n                }\n            }\n            else {\n                monthDaysRadioField.check();\n                // <remove-on-release>\n                // TODO: if toggleGroup members are not painted automatic unchecking doesn't work\n                // </remove-on-release>\n                if (!me.isPainted) {\n                    positionAndDayRadioField.uncheck();\n                }\n            }\n\n            stopRecurrenceField.recurrence = record;\n        }\n        else {\n            frequencyField.value = 'NONE';\n        }\n    }\n\n    /**\n     * Updates the provided recurrence model with the contained form data.\n     * If recurrence model is not provided updates the last loaded recurrence model.\n     * @internal\n     */\n    syncEventRecord(recurrence) {\n        // get values relevant to the RecurrenceModel (from enabled fields only)\n        const values = this.getValues((w) => w.name in recurrence && !w.disabled);\n\n        // Disabled field does not contribute to values, clear manually\n        if (!('endDate' in values)) {\n            values.endDate = null;\n        }\n        if (!('count' in values)) {\n            values.count = null;\n        }\n\n        recurrence.set(values);\n    }\n\n    toggleStopFields() {\n        const\n            me                           = this,\n            { countField, endDateField } = me.widgetMap;\n\n        switch (me.widgetMap.stopRecurrenceField.value) {\n\n            case 'count' :\n                countField.show();\n                countField.enable();\n                endDateField.hide();\n                endDateField.disable();\n                break;\n\n            case 'date' :\n                countField.hide();\n                countField.disable();\n                endDateField.show();\n                endDateField.enable();\n                break;\n\n            default :\n                countField.hide();\n                endDateField.hide();\n                countField.disable();\n                endDateField.disable();\n        }\n    }\n\n    onMonthDaysRadioFieldChange({ checked }) {\n        const { monthDaysButtonField } = this.widgetMap;\n\n        monthDaysButtonField.disabled = !checked || !this.isWidgetAvailableForFrequency(monthDaysButtonField);\n    }\n\n    onPositionAndDayRadioFieldChange({ checked }) {\n        const { daysCombo, positionsCombo } = this.widgetMap;\n\n        // toggle day & positions combos\n        daysCombo.disabled = positionsCombo.disabled = !checked || !this.isWidgetAvailableForFrequency(daysCombo);\n    }\n\n    onStopRecurrenceFieldChange() {\n        this.toggleStopFields();\n    }\n\n    isWidgetAvailableForFrequency(widget, frequency = this.widgetMap.frequencyField.value) {\n        return !widget.forFrequency || widget.forFrequency.includes(frequency);\n    }\n\n    onFrequencyFieldChange({ value, oldValue, valid }) {\n        const\n            me    = this,\n            items = me.queryAll(w => 'forFrequency' in w),\n            {\n                intervalField,\n                stopRecurrenceField\n            }     = me.widgetMap;\n\n        if (valid && value) {\n            for (let i = 0; i < items.length; i++) {\n                const item = items[i];\n\n                if (me.isWidgetAvailableForFrequency(item, value)) {\n                    item.show();\n                    item.enable();\n                }\n                else {\n                    item.hide();\n                    item.disable();\n                }\n            }\n\n            // Special handling of NONE\n            intervalField.hidden = stopRecurrenceField.hidden = value === 'NONE';\n\n            if (value !== 'NONE') {\n                intervalField.hint = me.L(`L{RecurrenceEditor.${value}intervalUnit}`);\n            }\n\n            // When a non-recurring record is loaded, intervalField is set to empty. We want it to default to 1 here\n            // to not look weird (defaults to 1 on the data layer)\n            if (oldValue === 'NONE' && intervalField.value == null) {\n                intervalField.value = 1;\n            }\n\n            me.toggleFieldsState();\n        }\n    }\n\n    toggleFieldsState() {\n        const\n            me            = this,\n            { widgetMap } = me;\n\n        me.onMonthDaysRadioFieldChange({ checked : widgetMap.monthDaysRadioField.checked });\n        me.onPositionAndDayRadioFieldChange({ checked : widgetMap.positionAndDayRadioField.checked });\n        me.onStopRecurrenceFieldChange();\n    }\n\n    updateLocalization() {\n        // do extra labels translation (not auto-translated yet)\n        const { countField, intervalField, frequencyField } = this.widgetMap;\n\n        countField.hint = this.L('L{RecurrenceEditor.time(s)}');\n\n        if (frequencyField.value && frequencyField.value !== 'NONE') {\n            intervalField.hint = this.L(`L{RecurrenceEditor.${frequencyField.value}intervalUnit}`);\n        }\n\n        super.updateLocalization();\n    }\n\n}\n\n// Register this widget type with its Factory\nRecurrenceEditorPanel.initClass();\n","import ColorField from '../../Core/widget/ColorField.js';\nimport './EventColorPicker.js';\n\n/**\n * @module Scheduler/widget/EventColorField\n */\n\n/**\n * Color field widget for editing the EventModel's {@link Scheduler.model.mixin.EventModelMixin#field-eventColor} field.\n * See Schedulers {@link Scheduler.view.mixin.TimelineEventRendering#config-eventColor eventColor config} for default\n * available colors.\n *\n * What differs this widget from {@link Core.widget.ColorField} is that this uses the\n * {@link Scheduler.widget.EventColorPicker} as its picker. And also that the {@link #config-name} config is set to\n * `eventColor` per default.\n *\n * {@inlineexample Scheduler/widget/EventColorField.js}\n *\n * This widget may be operated using the keyboard. `ArrowDown` opens the color picker, which itself is keyboard\n * navigable.\n *\n * ```javascript\n * let eventColorField = new EventColorField();\n * ```\n *\n * @extends Core/widget/ColorField\n * @classType eventcolorfield\n * @inputfield\n */\n\nexport default class EventColorField extends ColorField {\n    static $name = 'EventColorField';\n\n    static type = 'eventcolorfield';\n\n    static configurable = {\n        picker : {\n            type : 'eventcolorpicker'\n        },\n        name : 'eventColor'\n    };\n}\n\nEventColorField.initClass();\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport TimeSpanMenuBase from './base/TimeSpanMenuBase.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport Objects from '../../Core/helper/util/Objects.js';\nimport '../widget/EventColorPicker.js';\n\n/**\n * @module Scheduler/feature/EventMenu\n */\n\n/**\n * Displays a context menu for events. Items are populated by other features and/or application code.\n *\n * {@inlineexample Scheduler/feature/EventMenu.js}\n *\n * ### Default event menu items\n *\n * Here is the list of menu items provided by the feature and populated by the other features:\n *\n * | Reference       | Text           | Weight | Feature                                  | Description                                                       |\n * |-----------------|----------------|--------|------------------------------------------|-------------------------------------------------------------------|\n * | `editEvent`     | Edit event     | 100    | {@link Scheduler/feature/EventEdit}      | Edit in the event editor. Hidden when read-only                   |\n * | `copyEvent`     | Copy event     | 110    | {@link Scheduler/feature/EventCopyPaste} | Copy event or assignment. Hidden when read-only                   |\n * | `cutEvent `     | Cut event      | 120    | {@link Scheduler/feature/EventCopyPaste} | Cut event or assignment. Hidden when read-only                    |\n * | `deleteEvent`   | Delete event   | 200    | *This feature*                           | Remove event. Hidden when read-only                               |\n * | `unassignEvent` | Unassign event | 300    | *This feature*                           | Unassign event. Hidden when read-only, shown for multi-assignment |\n * | `splitEvent`    | Split event    | 650    | *Scheduler Pro only*                     | Split an event into two segments at the mouse position            |\n * | `renameSegment` | Rename segment | 660    | *Scheduler Pro only*                     | Show an inline editor to rename the segment                       |\n * | `eventColor` ¹  | Color          | 400    | *This feature*                           | Choose background color for the event bar                         |\n *\n * **¹** Set {@link Scheduler.view.SchedulerBase#config-showEventColorPickers} to `true` to enable this item\n *\n * ### Customizing the menu items\n *\n * The menu items in the Event menu can be customized, existing items can be changed or removed,\n * and new items can be added. This is handled using the `items` config of the feature.\n *\n * Add extra items for all events:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventMenu : {\n *             items : {\n *                 extraItem : {\n *                     text : 'Extra',\n *                     icon : 'b-fa b-fa-fw b-fa-flag',\n *                     onItem({eventRecord}) {\n *                         eventRecord.flagged = true;\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Remove existing items:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventMenu : {\n *             items : {\n *                 deleteEvent   : false,\n *                 unassignEvent : false\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Customize existing item:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventMenu : {\n *             items : {\n *                 deleteEvent : {\n *                     text : 'Delete booking'\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Manipulate existing items for all events or specific events:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventMenu : {\n *             // Process items before menu is shown\n *             processItems({eventRecord, items}) {\n *                  // Push an extra item for conferences\n *                  if (eventRecord.type === 'conference') {\n *                      items.showSessionItem = {\n *                          text : 'Show sessions',\n *                          onItem({eventRecord}) {\n *                              // ...\n *                          }\n *                      };\n *                  }\n *\n *                  // Do not show menu for secret events\n *                  if (eventRecord.type === 'secret') {\n *                      return false;\n *                  }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Note that the {@link #property-menuContext} is applied to the Menu's `item` event, so your `onItem`\n * handler's single event parameter also contains the following properties:\n *\n * - **source** The {@link Scheduler.view.Scheduler} who's UI was right clicked.\n * - **targetElement** The element right clicked on.\n * - **eventRecord** The {@link Scheduler.model.EventModel event record} clicked on.\n * - **resourceRecord** The {@link Scheduler.model.ResourceModel resource record} clicked on.\n * - **assignmentRecord** The {@link Scheduler.model.AssignmentModel assignment record} clicked on.\n *\n * Full information of the menu customization can be found in the \"Customizing the Event menu, the Schedule menu, and the TimeAxisHeader menu\" guide.\n *\n * This feature is **enabled** by default\n *\n * @extends Scheduler/feature/base/TimeSpanMenuBase\n * @demo Scheduler/eventmenu\n * @classtype eventMenu\n * @feature\n */\nexport default class EventMenu extends TimeSpanMenuBase {\n    //region Config\n\n    static get $name() {\n        return 'EventMenu';\n    }\n\n    /**\n     * @member {Object} menuContext\n     * An informational object containing contextual information about the last activation\n     * of the context menu. The base properties are listed below.\n     * @property {Event} menuContext.domEvent The initiating event.\n     * @property {Event} menuContext.event DEPRECATED: The initiating event.\n     * @property {Number[]} menuContext.point The client `X` and `Y` position of the initiating event.\n     * @property {HTMLElement} menuContext.targetElement The target to which the menu is being applied.\n     * @property {Object<String,MenuItemConfig>} menuContext.items The context menu **configuration** items.\n     * @property {Core.data.Model[]} menuContext.selection The record selection in the client (Grid, Scheduler, Gantt or Calendar).\n     * @property {Scheduler.model.EventModel} menuContext.eventRecord The event record clicked on.\n     * @property {Scheduler.model.ResourceModel} menuContext.resourceRecord The resource record clicked on.\n     * @property {Scheduler.model.AssignmentModel} menuContext.assignmentRecord The assignment record clicked on.\n     * @readonly\n     */\n\n    static get configurable() {\n        return {\n            /**\n             * A function called before displaying the menu that allows manipulations of its items.\n             * Returning `false` from this function prevents the menu being shown.\n             *\n             * ```javascript\n             * features         : {\n             *    eventMenu : {\n             *         processItems({ items, eventRecord, assignmentRecord, resourceRecord }) {\n             *             // Add or hide existing items here as needed\n             *             items.myAction = {\n             *                 text   : 'Cool action',\n             *                 icon   : 'b-fa b-fa-fw b-fa-ban',\n             *                 onItem : () => console.log(`Clicked ${eventRecord.name}`),\n             *                 weight : 1000 // Move to end\n             *             };\n             *\n             *            if (!eventRecord.allowDelete) {\n             *                 items.deleteEvent.hidden = true;\n             *             }\n             *         }\n             *     }\n             * },\n             * ```\n             * @param {Object} context An object with information about the menu being shown\n             * @param {Scheduler.model.EventModel} context.eventRecord The record representing the current event\n             * @param {Scheduler.model.ResourceModel} context.resourceRecord The record representing the current resource\n             * @param {Scheduler.model.AssignmentModel} context.assignmentRecord The assignment record\n             * @param {Object<String,MenuItemConfig>} context.items An object containing the {@link Core.widget.MenuItem menu item} configs keyed by their id\n             * @param {Event} context.event The DOM event object that triggered the show\n             * @config {Function}\n             * @preventable\n             */\n            processItems : null,\n\n            type : 'event'\n\n            /**\n             * This is a preconfigured set of items used to create the default context menu.\n             *\n             * The `items` provided by this feature are listed below. These are the property names which you may\n             * configure:\n             *\n             * - `deleteEvent` Deletes the context event.\n             * - `unassignEvent` Unassigns the context event from the current resource (only added when multi assignment is used).\n             *\n             * To remove existing items, set corresponding keys `null`:\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         eventMenu : {\n             *             items : {\n             *                 deleteEvent   : null,\n             *                 unassignEvent : null\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * See the feature config in the above example for details.\n             *\n             * @config {Object<String,MenuItemConfig|Boolean|null>} items\n             */\n        };\n    }\n\n    static get pluginConfig() {\n        const config = super.pluginConfig;\n\n        config.chain.push('populateEventMenu');\n\n        return config;\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * This event fires on the owning Scheduler before the context menu is shown for an event. Allows manipulation of the items\n     * to show in the same way as in `processItems`. Returning `false` from a listener prevents the menu from\n     * being shown.\n     * @event eventMenuBeforeShow\n     * @on-owner\n     * @preventable\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Object<String,MenuItemConfig>} items Menu item configs\n     * @param {Scheduler.model.EventModel} eventRecord Event record for which the menu was triggered\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     * @param {MouseEvent} [event] Pointer event which triggered the context menu (if any)\n     */\n\n    /**\n     * This event fires on the owning Scheduler when an item is selected in the context menu.\n     * @event eventMenuItem\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Core.widget.MenuItem} item\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @param {Scheduler.model.ResourceModel} resourceRecord\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     */\n\n    /**\n     * This event fires on the owning Scheduler after showing the context menu for an event\n     * @event eventMenuShow\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Core.widget.Menu} menu The menu\n     * @param {Scheduler.model.EventModel} eventRecord Event record for which the menu was triggered\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     */\n\n    //endregion\n\n    get resourceStore() {\n        // In horizontal mode, we use store (might be a display store), in vertical & calendar we use resourceStore\n        return this.client.isHorizontal ? this.client.store : this.client.resourceStore;\n    }\n\n    getDataFromEvent(event) {\n        const\n            data             = super.getDataFromEvent(event),\n            eventElement     = data.targetElement,\n            { client }       = this,\n            eventRecord      = client.resolveEventRecord(eventElement),\n            // For vertical mode the resource must be resolved from the event\n            resourceRecord   = eventRecord && (client.resolveResourceRecord(eventElement) || this.resourceStore.last)?.$original,\n            assignmentRecord = eventRecord && client.resolveAssignmentRecord(eventElement);\n\n        return Object.assign(data, {\n            eventElement,\n            eventRecord,\n            resourceRecord,\n            assignmentRecord\n        });\n    }\n\n    getTargetElementFromEvent({ target }) {\n        return target.closest(this.client.eventSelector) || target;\n    }\n\n    shouldShowMenu(eventParams) {\n        return eventParams.eventRecord;\n    }\n\n    /**\n     * Shows context menu for the provided event. If record is not rendered (outside of time span/filtered)\n     * menu won't appear.\n     * @param {Scheduler.model.EventModel} eventRecord Event record to show menu for.\n     * @param {Object} [options]\n     * @param {HTMLElement} options.targetElement Element to align context menu to.\n     * @param {MouseEvent} options.event Browser event.\n     * If provided menu will be aligned according to clientX/clientY coordinates.\n     * If omitted, context menu will be centered to event element.\n     */\n    showContextMenuFor(eventRecord, { targetElement, event } = {}) {\n        if (this.disabled) {\n            return;\n        }\n\n        if (!targetElement) {\n            targetElement = this.getElementFromRecord(eventRecord);\n\n            // If record is not rendered, do nothing\n            if (!targetElement) {\n                return;\n            }\n        }\n\n        DomHelper.triggerMouseEvent(targetElement, this.tiggerEvent);\n    }\n\n    getElementFromRecord(record) {\n        return this.client.getElementsFromEventRecord(record)[0];\n    }\n\n    populateEventMenu({ items, eventRecord, assignmentRecord }) {\n        const { client } = this;\n\n        items.deleteEvent = {\n            disabled : eventRecord.readOnly || assignmentRecord?.readOnly,\n            hidden   : client.readOnly\n        };\n        items.unassignEvent = {\n            disabled : eventRecord.readOnly || assignmentRecord?.readOnly,\n            hidden   : client.readOnly || client.eventStore.usesSingleAssignment\n        };\n\n        if (client.showEventColorPickers || client.showTaskColorPickers) {\n            items.eventColor = {\n                disabled : eventRecord.readOnly,\n                hidden   : client.readOnly\n            };\n        }\n        else {\n            items.eventColor = {\n                hidden : true\n            };\n        }\n    }\n\n    populateItemsWithData({ items, eventRecord }) {\n        super.populateItemsWithData(...arguments);\n\n        const { client } = this;\n\n        if ((client.showEventColorPickers || (client.isSchedulerPro && client.showTaskColorPickers)) &&\n            items.eventColor?.menu\n        ) {\n            Objects.merge(items.eventColor.menu.colorMenu, {\n                value  : eventRecord.eventColor,\n                record : eventRecord\n            });\n        }\n    }\n\n    // This generates the fixed, unchanging part of the items and is only called once\n    // to generate the baseItems of the feature.\n    // The dynamic parts which are set by populateEventMenu have this merged into them.\n    changeItems(items) {\n        const { client } = this;\n\n        return Objects.merge({\n            deleteEvent : {\n                text   : 'L{SchedulerBase.Delete event}',\n                icon   : 'b-icon b-icon-trash',\n                weight : 200,\n                onItem({ menu, eventRecord }) {\n                    // We must synchronously push focus back into the menu's triggering\n                    // event so that our beforeRemove handlers can move focus onwards\n                    // to the closest remaining event.\n                    // Otherwise, the menu's default hide processing on hide will attempt\n                    // to move focus back to the menu's triggering event which will\n                    // by then have been deleted.\n                    const revertTarget = menu.focusInEvent?.relatedTarget;\n                    if (revertTarget) {\n                        revertTarget.focus();\n                        client.navigator.activeItem = revertTarget;\n                    }\n                    client.removeEvents(client.isEventSelected(eventRecord) ? client.selectedEvents : [eventRecord]);\n                }\n            },\n            unassignEvent : {\n                text   : 'L{SchedulerBase.Unassign event}',\n                icon   : 'b-icon b-icon-unassign',\n                weight : 300,\n                onItem({ menu, eventRecord, resourceRecord }) {\n                    // We must synchronously push focus back into the menu's triggering\n                    // event so that our beforeRemove handlers can move focus onwards\n                    // to the closest remaining event.\n                    // Otherwise, the menu's default hide processing on hide will attempt\n                    // to move focus back to the menu's triggering event which will\n                    // by then have been deleted.\n                    const revertTarget = menu.focusInEvent?.relatedTarget;\n                    if (revertTarget) {\n                        revertTarget.focus();\n                        client.navigator.activeItem = revertTarget;\n                    }\n\n                    if (client.isEventSelected(eventRecord)) {\n                        client.assignmentStore.remove(client.selectedAssignments);\n                    }\n                    else {\n                        eventRecord.unassign(resourceRecord);\n                    }\n                }\n            },\n            eventColor : {\n                text      : 'L{SchedulerBase.color}',\n                icon      : 'b-icon b-icon-palette',\n                separator : true,\n                menu      : {\n                    colorMenu : {\n                        type : 'eventcolorpicker'\n                    }\n                }\n            }\n        }, items);\n    }\n}\n\nEventMenu.featureClass = '';\n\nGridFeatureManager.registerFeature(EventMenu, true, 'Scheduler');\nGridFeatureManager.registerFeature(EventMenu, false, 'ResourceHistogram');\n","import TimeSpanMenuBase from '../../Scheduler/feature/base/TimeSpanMenuBase.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\n\n/**\n * @module Scheduler/feature/ScheduleMenu\n */\n\n/**\n * Displays a context menu for empty parts of the schedule. Items are populated in the first place\n * by configurations of this Feature, then by other features and/or application code.\n *\n * ### Default scheduler zone menu items\n *\n * The Scheduler menu feature provides only one item:\n *\n * | Reference              | Text         | Weight | Feature                                  | Description                                                           |\n * |------------------------|--------------|--------|------------------------------------------|-----------------------------------------------------------------------|\n * | `addEvent`             | Add event    | 100    | *This feature*                           | Add new event at the target time and resource. Hidden when read-only  |\n * | `pasteEvent`           | Paste event  | 110    | {@link Scheduler/feature/EventCopyPaste} | Paste event at the target time and resource. Hidden when is read-only |\n * | `splitSchedule`        | Split        | 200    | {@link Scheduler/feature/Split}          | Shows the \"Split schedule\" sub-menu                                   |\n * | \\> `splitHorizontally` | Horizontally | 100    | {@link Scheduler/feature/Split}          | Split horizontally                                                    |\n * | \\> `splitVertically `  | Vertically   | 200    | {@link Scheduler/feature/Split}          | Split vertically                                                      |\n * | \\> `splitBoth`         | Both         | 300    | {@link Scheduler/feature/Split}          | Split both ways                                                       |\n * | `unsplitSchedule`      | Split        | 210    | {@link Scheduler/feature/Split}          | Unsplit a previously split schedule                                   |\n *\n * ### Customizing the menu items\n *\n * The menu items in the Scheduler menu can be customized, existing items can be changed or removed,\n * and new items can be added. This is handled using the `items` config of the feature.\n *\n * Add extra item:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         scheduleMenu : {\n *             items : {\n *                 extraItem : {\n *                     text : 'Extra',\n *                     icon : 'b-fa b-fa-fw b-fa-flag',\n *                     onItem({date, resourceRecord, items}) {\n *                         // Custom date based action\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Remove existing item:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         scheduleMenu : {\n *             items : {\n *                 addEvent : false\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Customize existing item:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         scheduleMenu : {\n *             items : {\n *                 addEvent : {\n *                     text : 'Create new booking'\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Manipulate existing items:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         scheduleMenu : {\n *             // Process items before menu is shown\n *             processItems({date, resourceRecord, items}) {\n *                  // Add an extra item for ancient times\n *                  if (date < new Date(2018, 11, 17)) {\n *                      items.modernize = {\n *                          text : 'Modernize',\n *                          ontItem({date}) {\n *                              // Custom date based action\n *                          }\n *                      };\n *                  }\n *\n *                  // Do not show menu for Sundays\n *                  if (date.getDay() === 0) {\n *                      return false;\n *                  }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Full information of the menu customization can be found in the \"Customizing the Event menu, the Schedule menu, and the TimeAxisHeader menu\" guide.\n *\n * This feature is **enabled** by default\n *\n * @demo Scheduler/basic\n * @extends Scheduler/feature/base/TimeSpanMenuBase\n * @classtype scheduleMenu\n * @feature\n */\nexport default class ScheduleMenu extends TimeSpanMenuBase {\n    //region Config\n\n    static get $name() {\n        return 'ScheduleMenu';\n    }\n\n    static get defaultConfig() {\n        return {\n            type : 'schedule',\n\n            /**\n             * This is a preconfigured set of items used to create the default context menu.\n             *\n             * The `items` provided by this feature are listed below. These are the predefined property names which you may\n             * configure:\n             *\n             * - `addEvent` Add an event for at the resource and time indicated by the `contextmenu` event.\n             *\n             * To remove existing items, set corresponding keys `null`:\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         scheduleMenu : {\n             *             items : {\n             *                 addEvent : null\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * @config {Object<String,MenuItemConfig|Boolean|null>} items\n             */\n            items : null,\n\n            /**\n             * A function called before displaying the menu that allows manipulations of its items.\n             * Returning `false` from this function prevents the menu being shown.\n             *\n             * ```javascript\n             * features         : {\n             *    scheduleMenu : {\n             *         processItems({ items, date, resourceRecord }) {\n             *            // Add or hide existing items here as needed\n             *            items.myAction = {\n             *                text   : 'Cool action',\n             *                icon   : 'b-fa b-fa-cat',\n             *                onItem : () => console.log(`Clicked on ${resourceRecord.name} at ${date}`),\n             *                weight : 1000 // Move to end\n             *            };\n             *\n             *            if (!resourceRecord.allowAdd) {\n             *                items.addEvent.hidden = true;\n             *            }\n             *        }\n             *    }\n             * },\n             * ```\n             * @param {Object} context An object with information about the menu being shown\n             * @param {Scheduler.model.ResourceModel} context.resourceRecord The record representing the current resource\n             * @param {Date} context.date The clicked date\n             * @param {Object<String,MenuItemConfig>} context.items An object containing the\n             * {@link Core.widget.MenuItem menu item} configs keyed by their id\n             * @param {Event} context.event The DOM event object that triggered the show\n             * @config {Function}\n             * @preventable\n             */\n            processItems : null\n        };\n    }\n\n    static get pluginConfig() {\n        const config = super.pluginConfig;\n\n        config.chain.push('populateScheduleMenu');\n\n        return config;\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * This event fires on the owning Scheduler before the context menu is shown for an event. Allows manipulation of the items\n     * to show in the same way as in `processItems`. Returning `false` from a listener prevents the menu from\n     * being shown.\n     * @event scheduleMenuBeforeShow\n     * @on-owner\n     * @preventable\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Object<String,MenuItemConfig>} items Menu item configs\n     * @param {Scheduler.model.EventModel} eventRecord Event record for which the menu was triggered\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     */\n\n    /**\n     * This event fires on the owning Scheduler when an item is selected in the context menu.\n     * @event scheduleMenuItem\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Core.widget.MenuItem} item\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @param {Scheduler.model.ResourceModel} resourceRecord\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     */\n\n    /**\n     * This event fires on the owning Scheduler after showing the context menu for an event\n     * @event scheduleMenuShow\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Core.widget.Menu} menu The menu\n     * @param {Scheduler.model.EventModel} eventRecord Event record for which the menu was triggered\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     */\n\n    //endregion\n\n    shouldShowMenu(eventParams) {\n        const\n            { client } = this,\n            {\n                targetElement,\n                resourceRecord\n            } = eventParams,\n            isTimeAxisColumn = client.timeAxisSubGridElement.contains(targetElement);\n\n        return !targetElement.closest(client.eventSelector) && isTimeAxisColumn && !(resourceRecord && resourceRecord.isSpecialRow);\n    }\n\n    getDataFromEvent(event) {\n        // Process event if it wasn't yet processed\n        if (DomHelper.isDOMEvent(event)) {\n            const\n                { client }     = this,\n                cellData       = client.getCellDataFromEvent?.(event),\n                date           = client.getDateFromDomEvent?.(event, 'floor'),\n                // For vertical mode the resource must be resolved from the event\n                resourceRecord = client.resolveResourceRecord(event) || client.isVertical && client.resourceStore.last;\n\n            return ObjectHelper.assign(super.getDataFromEvent(event), cellData, { date, resourceRecord });\n        }\n\n        return event;\n    }\n\n    populateScheduleMenu({ items, resourceRecord, date }) {\n        const { client } = this;\n\n        // Menu can work for ResourceHistogram which doesn't have event store\n        if (!client.readOnly && client.eventStore) {\n            items.addEvent = {\n                text     : 'L{SchedulerBase.Add event}',\n                icon     : 'b-icon b-icon-add',\n                disabled : !resourceRecord || resourceRecord.readOnly || !resourceRecord.isWorkingTime(date),\n                weight   : 100,\n                onItem() {\n                    client.createEvent(date, resourceRecord, client.getRowFor(resourceRecord));\n                }\n            };\n        }\n    }\n}\n\nScheduleMenu.featureClass = '';\n\nGridFeatureManager.registerFeature(ScheduleMenu, true, 'Scheduler');\n"],"names":["ViewPreset","Model","$name","fields","name","type","defaultValue","construct","arguments","normalizeUnits","generateId","owner","me","headers","parts","result","Object","getPrototypeOf","data","id","length","i","unit","increment","multiple","push","StringHelper","capitalize","join","count","includes","tickWidth","tickHeight","bottomHeader","IdHelper","timeResolution","shiftUnit","header","DH","normalizeUnit","splitUnit","assign","normalizeHeaderConfig","headerConfig","columnLinesFor","mainHeaderLevel","top","middle","Error","bottom","set","inSet","tickSize","_tickSize","mainHeader","topHeader","topUnit","topIncrement","leafUnit","leafIncrement","mainUnit","msPerPixel","Math","round","asMilliseconds","isValid","valid","Boolean","_$name","locale","localeName","localeDesc","localeCode","newEvent","ResourceInfoColumn","eventCountText","Dependencies","from","to","invalid","DependencyType","SS","SF","FS","FF","StartToStart","StartToEnd","EndToStart","EndToEnd","short","long","DependencyEdit","From","To","Type","Lag","Save","Delete","Cancel","EventEdit","Name","Resource","Start","End","Repeat","EventDrag","eventOverlapsExisting","noDropOutsideTimeline","SchedulerBase","color","TimeAxisHeaderMenu","pickZoomLevel","activeDateRange","startText","endText","todayText","EventCopyPaste","copyEvent","cutEvent","pasteEvent","EventFilter","filterEvents","byName","TimeRanges","showCurrentTimeLine","PresetManager","secondAndMinute","displayDateFormat","minuteAndHour","topDateFormat","hourAndDay","middleDateFormat","day","week","dayAndWeek","dayAndMonth","weekAndDay","weekAndMonth","weekAndDayLetter","weekDateAndMonth","monthAndYear","year","manyYears","RecurrenceConfirmationPopup","Yes","width","RecurrenceLegend","Daily","Weekly on {1}","days","Monthly on {1}","Yearly on {1} of {2}","months","Every {0} days","interval","Every {0} weeks on {1}","Every {0} months on {1}","Every {0} years on {1} of {2}","position1","position2","position3","position4","position5","weekday","daysFormat","position","RecurrenceEditor","Frequency","Every","DAILYintervalUnit","WEEKLYintervalUnit","MONTHLYintervalUnit","YEARLYintervalUnit","Each","RecurrenceDaysCombo","RecurrencePositionsCombo","RecurrenceStopConditionCombo","Never","After","RecurrenceFrequencyCombo","None","Weekly","Monthly","Yearly","RecurrenceCombo","Custom","Summary","date","ScheduleRangeCombo","completeview","currentview","daterange","completedata","SchedulerExportDialog","ExcelExporter","CrudManagerView","serverResponseLabel","DurationColumn","Duration","LocaleHelper","publishLocale","PresetStore","Localizable","Store","defaultConfig","useRawData","modelClass","zoomOrder","storage","addSorter","lhs","rhs","leftBottomHeader","rightBottomHeader","order","unitMagnitudes","getById","isPresetManager","createRecord","args","isViewPreset","getAt","base","copyBaseValues","updateLocalization","presets","allRecords","Set","concat","values","basePresets","forEach","preset","localePreset","optionalL","baseId","originalDisplayDateFormat","setData","level","levelConfig","localeLevelDateFormat","originalDateFormat","dateFormat","renderer","unlocalizedName","getCurrentConfig","options","presetData","ObjectHelper","clone","merge","add","Array","isArray","originalData","preventSubClassingModel","shiftIncrement","defaultSpan","value","DateHelper","format","start","getShortNameOfUnit","verticalColumnWidth","resourceColumnWidth","end","cfg","toUpperCase","floor","getMonth","getFullYear","defaultPresets","resolution","resolutionUnit","internalListeners","presetCache","_basePresets","presetAdjustment","isBase","baseType","config","setPrototypeOf","undefined","height","getUnitByName","registerPreset","existingDuplicate","find","p","equals","getPreset","normalizePreset","deletePreset","presetOrId","remove","pm","Tick","TimeSpan","startDate","endDate","TimeAxis","continuous","originalContinuous","include","autoAdjust","adjustedStart","adjustedEnd","visibleTickStart","visibleTickEnd","tickCache","viewPreset","maxTraverseTries","disableDuplicateIdCheck","disableDefaultValue","disableTypeConversion","configurable","generateTicks","resolutionIncrement","weekStartDay","forceFullTicks","ion","change","action","trigger","supressRefresh","refresh","endreconfigure","event","internalOnReconfigure","range","getAdjustedDates","Date","isTimeAxis","reconfigure","suppressRefresh","preventThrow","normalized","oldConfig","_configuredStartDate","_configuredEndDate","propName","viewPresetChanged","isFiltered","filters","f","disabled","isConfigured","adjusted","ticks","suspendEvents","maintainFilter","disableFilters","resumeEvents","first","last","isContinuous","getNext","updateVisibleTickBoundaries","updateTickCache","startDenominator","getNormalizedUnitDuration","endDenominator","fullTicks","_viewPreset","presetName","_weekStartDay","_resolutionUnit","_resolutionIncrement","setTimeSpan","newStartDate","newEndDate","shift","amount","allCount","tries","shiftNext","shiftPrevious","filterBy","fn","thisObj","clear","tick","index","call","filter","retVal","triggerFilterEvent","forceAdjust","floorDate","ceilDate","_start","parse","_end","startMS","_startMS","endMS","_endMS","relativeToStart","incr","relativeTo","snap","snappedDuration","diff","dt","getDay","startDay","startOf","getHours","modifier","useUnit","snappedValue","get","roundDate","distanceToWeekStartDay","toAdd","nbrMonths","as","daysInMonth","snappedMonths","duration","offset","getTimezoneOffset","doCall","isStartOf","isEqual","getDate","_include","isConfiguring","processExclusion","entries","some","includeUnit","rule","compareUnits","getLargerUnit","stepUnit","datePart","initExclusion","lengthFactor","getUnitToBaseUnitRatio","lengthFactorExcl","center","updateGenerateTicks","_generateTicks","axisStartDate","axisEndDate","usesExclusion","intervalEnd","tickEnd","isExcluded","dstDiff","prev","getTime","visibleTickTimeSpan","getTickFromDate","_date$getTime","records","dateMS","begin","tickStart","startDateMS","endDateMS","min","max","getSnappedTickFromDate","startTickIdx","getDateFromTick","roundingMethod","wholeTick","fraction","t","onlyStartEnd","_startMs","dateInAxis","inclusiveEnd","axisStart","axisEnd","betweenLesserEqual","betweenLesser","getCount","timeSpanInAxis","intersectSpans","isTimeSpanInAxis","timeSpan","meta","endDateCached","startTick","endTick","forEachAuxInterval","iteratorFn","TimeAxisViewModel","Events","timeAxis","availableSpace","forceFit","mode","suppressFit","columnConfig","originalTickSize","headersDatesCache","unitToPixelsCache","consumeViewPreset","configured","doDestroy","un","onTimeAxisReconfigure","calculateInfiniteScrollingDateRange","centered","bufferCoef","useTop","snapSize","snapUnit","halfSpan","ceil","bufferedTicks","_columnConfig","_headers","cellGenerator","isTimeAxisViewModel","isHorizontal","isVertical","_forceFit","update","setConfig","source","silent","forceUpdate","spaceAvailable","_availableSpace","calculateTickSize","_totalSize","pos","headerCells","createHeaderRow","getDistanceBetweenDates","getPositionFromDate","getDistanceForDuration","durationMs","getSingleUnitInPixels","getScaledTick","respectExclusion","snapToNextIncluded","isEnd","tickChanged","hour","originalHours","croppedHours","fractionalHours","getMinutes","hoursFromCenter","newHours","checkDay","getSeconds","getMilliseconds","addDays","fixedCenter","fractionalDay","daysFromCenter","newDay","constrain","getDateFromPosition","allowOutOfRange","getScaledPosition","dayWidth","positionInWeek","weekStartPosition","hourWidth","positionInDay","dayStartPosition","snapPixelAmount","size","setTickSize","suppressEvent","proposedSize","timelineUnit","ratio","fittingSize","totalSize","space","newTickSize","getDates","useLowestHeader","getEnd","linesForLevel","lowestHeader","majorLevel","majorHeaderLevel","levelUnit","majorUnit","validMajor","doesUnitsAlign","hasGenerator","cells","l","forEachInterval","isMajor","isMajorTick","fitToAvailableSpace","_snap","headerRowConfig","align","headerCellCls","today","clearTime","tickLevel","createCellContext","isLast","isInteriorTick","cellData","coord","nextLevel","r","forEachMainInterval","getConfig","tempDate","Target","TimelineDateMapper","Base","getRtlX","x","rtl","timeAxisViewModel","getDateFromCoordinate","coordinate","local","ignoreRTL","currentOrientation","translateToScheduleCoordinate","getDateFromCoord","getDateFromXY","xy","getDateFromDomEvent","e","pageX","pageY","getStartEndDatesFromRectangle","rect","startPos","endPos","right","getDisplayEndDate","getYear","formatContainsHourInfo","getFormattedEndDate","getFormattedDate","getCoordinateFromDate","_options","valueOf","setTime","translateToPageCoordinate","getTimeSpanDistance","viewportCenterDate","timelineScroller","timeAxisOffset","clientSize","scrollSize","viewportCenterDateCached","cachedCenterDate","_this$_timeAxisViewMo","_timeAxisViewModel","updateSnap","fillTicks","onSchedulerHorizontalScroll","subGrid","scrollLeft","scrollX","scrollingToCenter","widgetClass","eventNameMap","EventHelper","TimelineDomEvents","timelineContext","$config","equal","c1","c2","tickParentIndex","tickStartDate","updateTimelineContextOnScroll","ignoreDomEventsWhileScrolling","properties","schedulerEvents","pointermove","mouseover","mousedown","mouseup","click","dblclick","contextmenu","mousemove","mouseout","delayable","onScheduleScroll","hoveredEvents","initDomEvents","element","timeAxisSubGridElement","on","mouseleave","capture","BrowserHelper","supportsPointerEventConstructor","document","scroll","getTimeSpanMouseEventParams","eventElement","getScheduleMouseEventParams","handleScheduleEvent","scrolling","timeAxisSubGrid","getTimelineEventContext","lastPointerEvent","scheduledEventName","handleScheduleLeaveEvent","target","_me$features$pan","features","pan","isActive","partners","_p$features$pan","contains","bodyElement","_GlobalEvents$current","_GlobalEvents$current2","targetElement","DomHelper","elementFromPoint","domEvent","clientX","clientY","pointerEvent","PointerEventConstructor","mouseEvent","MouseEvent","defineProperty","GlobalEvents","currentPointerDown","pointerId","currentTouch","identifier","scrollInitiated","dispatchEvent","updateTimelineContext","context","oldContext","closest","eventInnerSelector","cellElement","getCellElementFromDomEvent","DomDataStore","mouseParams","resourceStore","indexOf","resourceRecord","row","dataIndex","tickIndex","isTimelineContext","tickEndDate","parentIndex","foregroundCanvas","eventSelector","getCell","resolveRowRecord","column","timeAxisColumn","_me$rowManager$getRow","rowManager","getRowAt","matches","firstElementChild","timeCellSelector","matchScheduleCell","onElementMouseButtonEvent","targetCell","parentElement","dataset","headerPosition","findIndex","cell","cellConfig","contextMenu","triggerEvent","onElementMouseDown","onElementClick","onElementDblClick","onElementContextMenu","onElementMouseOver","_me$features$eventDra","eventDrag","isDragging","has","preventOverCls","classList","overScheduledEventClass","params","unhoverAll","onElementMouseOut","_me$features$eventDra2","relatedTarget","eventInner","eventWrap","timeSpanRecord","resolveTimeSpanRecord","isDescendant","unhover","delete","isReleased","datesDiffer","d1","d2","TimelineViewPresets","changePresets","presetRecord","presetStore","changeViewPreset","oldViewPreset","lastOpts","lastViewPresetOptions","presetChanged","optionsChanged","centerDate","_displayDateFormat","updateDisplayDateFormat","updateViewPreset","_me$syncSplits","_timeAxis","zoomDate","zoomPosition","syncSplits","split","_viewPresetChanging","suspendRefresh","timeAxisCfg","copyProperties","infiniteScroll","resumeRefresh","notScroll","isPainted","visibleDate","unitMagnitude","milliseconds","targetDate","zoomLevel","scrollWidth","viewportSize","centerCoord","scrollTop","scrollHorizontallyTo","scrollVerticallyTo","setTimeout","scrollTo","presetId","updateFromHorizontalScroll","updateFromVerticalScroll","_presets","destroy","TimelineZoomable","zoomOnMouseWheel","zoomOnTimeAxisDoubleClick","minZoomLevel","maxZoomLevel","visibleZoomFactor","zoomKeepsOriginalTimespan","lastWheelTime","lastZoomPosition","wheel","throttled","buffer","alt","ctrlKey","preventDefault","passive","timeaxisheaderdblclick","zoomToSpan","_maxZoomLevel","_minZoomLevel","zoomToLevel","getMilliSecondsPerPixelForZoomLevel","ignoreActualWidth","actualWidth","zoomTo","console","warn","tickSizeProp","newPreset","configuredTickSize","span","scrollableViewportSize","scrollable","clientHeight","_beforeCollapseState","collapsed","calculateOptimalDateRange","isZooming","zoomToFit","eventStore","getTotalTimeSpan","leftMargin","rightMargin","scrollToDate","adjustStart","adjustEnd","needToAdjust","diffMS","currLevel","inc","candidateLevel","levelToZoom","spanWidth","unitToZoom","tickCount","getDurationInUnit","customWidth","block","zoomIn","levels","currentZoomLevelIndex","zoomOut","zoomInFull","zoomOutFull","userProvidedSpan","difference","onElementMouseMove","zoomContext","isTrusted","abs","onWheel","now","performance","viewport","deltaY","Popup","localizableProperties","autoShow","autoClose","closeAction","modal","scrollAction","constrainTo","globalThis","draggable","closable","floating","eventRecord","cls","bbar","defaults","localeClass","items","changeSingleButton","weight","text","onClick","changeMultipleButton","cancelButton","widgetMap","onChangeMultipleButtonClick","processMultipleRecords","hide","onChangeSingleButtonClick","processSingleRecord","onCancelButtonClick","cancelFn","onRecurrenceClose","confirm","prop","updatePopupContent","show","actionType","isMaster","isRecurring","L","html","title","changerFn","finalizerFn","beginBatch","callback","endBatch","_firstOccurrence","firstOccurrence","recurrence","forEachOccurrence","occurrence","isFirst","convertToRealEvent","recurrenceRule","initClass","RecurringEvents","enableRecurringEvents","recurrenceConfirmationPopup","beforeEventDropFinalize","beforeEventResizeFinalize","beforeAssignmentDelete","changeRecurrenceConfirmationPopup","oldRecurrenceConfirmationPopup","constructor","findRecurringEventToConfirmDelete","eventRecords","supportsRecurring","isOccurrence","onRecurrableAssignmentBeforeDelete","assignmentRecords","map","finalize","onRecurrableBeforeEventDropFinalize","recurringEvents","async","onRecurrableBeforeEventResizeFinalize","onAssignmentChange","assignments","assignment","_assignment$event","isBatchUpdating","removeOccurrences","getOccurrencesFor","recurringEvent","getOccurrencesForTimeSpan","removeEvents","popupOwner","readOnly","removeRecord","record","_record$event","isOccurrenceAssignment","store","isAssignment","assignmentStore","shouldFinalize","recurringEventRecord","TimelineEventRendering","managedEventSizing","generatedIdCls","dirtyCls","committingCls","endsOutsideViewCls","startsOutsideViewCls","fixedEventCls","barMargin","resourceMargin","eventColor","eventStyle","updateFillTicks","refreshWithTransition","changeBarMargin","margin","assertNumber","rowHeight","updateBarMargin","rendered","onBeforeRowHeightChange","_resourceMargin","changeResourceMargin","updateResourceMargin","changeTickSize","updateTickSize","eventColors","eventStyles","updateEventStyle","style","updateEventColor","maintainVisibleStart","defaultScrollOptions","TimelineScroll","bufferThreshold","initScroll","setTimeSpanOptions","scrollInitialized","_timelineScroller","TimelineScroller","widget","_this$_timelineScroll","onTimelineScroll","checkTimeAxisScroll","scrollPos","requiredSize","limit","maxScroll","maxPosition","virtualScrollerElement","overflow","pointerEvents","paddingBottom","scrollBarWidth","shiftToDate","newRange","updateInfiniteScroll","visibleDateRange","edgeOffset","visibleWidth","direction","extraScroll","shiftDirection","nextAnimationFrame","scrollerViewport","localCoordinate","Rectangle","y","scrollToCoordinate","scrollToNow","visibleSpan","scrollIntoView","isDestroyed","left","Scroller","updateOverflowX","updateOverflowY","onScroll","_position","syncPartners","force","updatePosition","scrollBy","xDelta","yDelta","changeX","changeY","scroller","clientWidth","scrollHeight","maxX","maxY","TimelineState","getState","state","zoomLevelOptions","applyState","_state$scroll","_zoomAfterPaint","onPaint","Header","GridHeader","refreshContent","_this$headersElement","headersElement","querySelector","TimeAxisSubGrid","SubGrid","sealedColumns","headerClass","startConfigure","grid","scheduler","stickyHeaders","flex","changeScrollable","_this$element","updateCanvasSize","handleHorizontalScroll","addCls","onInternalResize","oldWidth","oldHeight","bodyHeight","_bodyRectangle","monitorResize","onSchedulerViewportResize","requestAnimationFrame","clearWidthCache","updateViewModelAvailableSpace","expand","exitTransition","delay","cancelOutstanding","inRange","v","r0","r1","isWorkingTime","d","wt","fromDay","toDay","fromHour","toHour","emptyObject","TimelineBase","GridBase","mixin","partnerSharedConfigs","eventCls","timeZone","workingTime","autoAdjustTimeAxis","snapRelativeToEventStartDate","timeCellCls","useBackgroundCanvas","enableEventAnimations","disableGridRowModelWarning","animateRemovingRows","partner","schedulerRegion","transitionDuration","animationTimeout","defaultRegion","durationDisplayPrecision","asyncEventSuffix","updateTimeZone","project","_isConfiguringTimeZone","_this$project","populateEventMenu","populateScheduleMenu","onVisibleDateRangeChange","handlingVisibleDateRangeChange","_visibleDateRange","dateRangeChange","timeView","old","new","onVisibleResourceRangeChange","$firstVerticalOverflow","init","forceLayout","createSubGrid","region","overflowX","overflowY","bodyContainer","partneredWith","removePartner","ResizeMonitor","addResizeListener","onBodyResize","bind","changeStartDate","firstPaint","getBoundingClientRect","_me$currentOrientatio","_me$currentOrientatio2","doUpdateTimeView","frameCount","horizontalScroll","isDestroying","refreshSuspended","testPerformance","scrollSpeed","scrollInterval","setInterval","done","elapsed","timePerFrame","fps","clearInterval","log","eventPositionMode","eventScrollMode","preserveViewCenter","apply","scrollStart","then","startChanged","endChanged","oldTickSize","currentScroll","visibleStart","tickSizeChanged","prio","once","returnValue","hasVisibleEvents","noFeatureElementsInAxis","capitalizedEventName","_capitalizedEventName","_partner","addPartner","isPartneredWith","Collection","presetchange","overflowChange","partnerSharedConfig","reduce","configName","syncPartnerSubGrids","FunctionHelper","createSequence","_this$partneredWith","onPartnerOverflowChange","otherScrollable","ourY","hasOverflow","refreshVirtualScrollbars","onPartnerPresetChange","allValues","columns","_timeAxisColumn","changeColumns","currentStore","timeAxisColumnIndex","timeAxisColumnConfig","cols","col","verticalTimeAxisColumn","slice","cellCls","isStore","updateColumns","was","c","isTimeAxisColumn","isVerticalTimeAxisColumn","relayAll","onColumnsChanged","changes","_this$partneredWith2","partnerColumn","allIndex","shouldSync","partnerChanges","k","_me$verticalTimeAxisC","_me$timeAxisColumn","view","timeAxisView","updateEventCls","unreleasedEventSelector","currentModel","tavmListeners","detachListeners","_mode","model","relayEvents","_suppressFit","currentTimeAxis","timeAxisListeners","applyWorkingTime","updateForceFit","_workingTime","_me$features$columnLi","refreshHeader","columnLines","updateStartDate","setStartDate","keepDuration","ta","calcEndDate","_tempStartDate","_this$_timeAxis","ret","setHours","changeEndDate","setEndDate","calcStartDate","_tempEndDate","changeVisibleDate","updateVisibleDate","paint","regionResize","onLocaleChange","oldAutoAdjust","oldRect","_width","newWidth","offsetWidth","onViewportResize","isSyncingFromPartner","onTimeAxisViewModelUpdate","eachSubGrid","partnerSubGrid","subGrids","collapse","backgroundCanvas","_backgroundCanvas","_foregroundCanvas","svgCanvas","_svgCanvas","svg","createElementNS","setAttribute","retainElement","appendChild","_timeAxisSubGridElement","_this$timeAxisColumn","subGridElement","refreshTotalHeight","_rowBorderHeight","setLength","$canvasWidth","getHeaderDomConfigs","configs","getForegroundDomConfigs","onStoreDataChange","isVisible","_me$project","isRepopulatingStores","await","whenVisible","isEngineReady","refreshRows","refreshAfterProjectRefresh","refreshAllWhenReady","render","schedulerEl","createElement","className","parent","nextSibling","fgCanvas","insertRowsBefore","returnToTop","reLayoutEvents","updateHideHeaders","getCellDataFromEvent","includeSingleAxisMatch","onCellNavigate","_to$cell","currentMouseDown","preventDragSelect","runWithTransition","hasTimeout","isAnimating","waitForAnimations","topRow","reinitialize","isRowNumberSelecting","selectors","cs","_cs$cell","formatDuration","nbrDecimals","multiplier","pow","beginListeningForBatchedUpdates","_this$syncSplits","listenToBatchedUpdates","other","endListeningForBatchedUpdates","_this$syncSplits2","onConnectedCallback","connected","initialConnect","updateRtl","clearAll","applyStartEndParameters","field","fieldMap","passStartEndParameters","startParamName","print","endParamName","VersionHelper","setVersion","AbstractCrudManager","AbstractCrudManagerMixin","revision","crudRevision","json","safeJsonStringify","safeJsonParse","forEachCrudStore","dataName","storeId","stores","crudStores","toJSON","inlineData","isLoading","isCrudManagerLoading","addStore","addCrudStore","removeStore","removeCrudStore","getStore","getCrudStore","hasChanges","crudStoreHasChanges","loadData","loadCrudManagerData","CrudManager","ProjectCrudManager","AjaxTransport","JsonEncoder","projectClass","ProjectModel","resourceStoreClass","ResourceStore","eventStoreClass","EventStore","assignmentStoreClass","AssignmentStore","dependencyStoreClass","DependencyStore","dependencyStore","buildProject","buildProjectConfig","cleanupProperties","resourceTimeRangeStore","_project","timeRangeStore","dataReady","suspendChangesTracking","resumeChangesTracking","_this$_timeRangeStore","_timeRangeStore","setFeaturedStore","timeRangeStoreClass","_this$_resourceTimeRa","_resourceTimeRangeStore","_this$project2","resourceTimeRangeStoreClass","_this$_resourceStore","_resourceStore","_this$_eventStore","_eventStore","_this$_assignmentStor","_assignmentStore","_this$_dependencyStor","_dependencyStore","property","storeClass","_me$property","oldStore","_store","addPrioritizedStore","getChangesetPackage","_this$eventStore$mode","_this$eventStore$mode2","pack","usesSingleAssignment","resourceIds","persist","storeInfo","crudLoadValidationMandatoryStores","inlineProperties","CurrentConfig","preProcessCurrentConfigs","crudManager","keys","arrayify","pickFormat","formats","defaultFormat","Describable","dateSeparator","descriptionFormat","descriptionRenderer","dateBounds","description","formattedDescription","defaultDescriptionFormat","format0","formatRange","changeDescriptionFormat","SchedulerDom","getElementFromAssignmentRecord","assignmentRecord","returnWrapper","_this$foregroundCanva","_wrapper","_wrapper$syncIdMap","wrapper","syncIdMap","resource","hasLinks","link","$links","_this$foregroundCanva2","getElementFromEventRecord","_eventRecord$resource","resources","isResourceTimeRange","_this$foregroundCanva3","domId","getAssignmentForEventAndResource","getElementsFromEventRecord","el","resolveResourceRecord","elementOrEvent","resolveEventRecord","_elementOrEvent","Event","eventId","assignmentId","resolveAssignmentRecord","getOccurrence","isRowVisible","SchedulerDomEvents","onElementKeyDown","selectedEvents","selectedAssignments","onElementKeyUp","HorizontalLayout","nbrOfBandsByResource","bandIndexToPxConvertFn","bandIndexToPxConvertThisObj","clearCache","applyLayout","events","layoutEventsInBands","HorizontalLayoutStack","heightRun","verticalPosition","eventIndex","splice","findClosestSuccessor","eventRenderData","group","isMilestone","minGap","Infinity","gap","grouped","PackMixin","coordProp","sizeProp","inBandCoordProp","inBandSizeProp","isSameGroup","a","b","packEventsInBands","applyClusterFn","slot","firstInCluster","cluster","j","findStartSlot","getCluster","nextSlot","clusterSize","slotSize","priorOverlappers","getPriorOverlappingEvents","item","COORD_PROP","SIZE_PROP","overlappers","sort","sortOverlappers","e1","e2","startIndex","startEvent","HorizontalLayoutPack","SchedulerResourceRendering","resourceColumns","resourceImagePath","defaultResourceImageName","resourceImageExtension","_resourceColumns","_this$resourceColumns","columnWidth","getResourceMargin","getBarMargin","getResourceHeight","getResourceWidth","getAppliedResourceHeight","getRowById","maxRequestedHeight","getResourceLayoutSettings","parentEventRecord","contentHeight","SchedulerEventRendering","milestoneTextPosition","milestoneAlign","milestoneCharWidth","milestoneLayoutMode","eventLayout","overlappingEventSorter","horizontalEventSorterFn","useInitialAnimation","eventRenderer","eventRendererThisObj","eventBarTextField","eventBodyTemplate","horizontalLayoutPackClass","horizontalLayoutStackClass","isFirstRender","initialAnimationDuration","narrowEventWidth","internalEventLayout","changeEventLayout","changeInternalEventLayout","getEventLayout","updateInternalEventLayout","oldEventLayout","changeHorizontalEventSorterFn","deprecate","updateOverlappingEventSorter","_value","isModel","getEventLayoutHandler","horizontal","layouts","horizontalStack","layoutEventVerticallyStack","horizontalPack","layoutEventVerticallyPack","getEventsToRender","repaintEventsForResource","repaintEvent","getResourcesForEvent","getEventStyle","getEventColor","_eventRecord$event","_eventRecord$parent","generateRenderData","includeOutside","renderData","getTimeSpanRenderData","isEvent","eventResize","isDragCreating","resourceId","$originalId","eventContent","role","taskBarFeature","_renderData$iconCls2","tabIndex","resizable","isResizable","startsOutsideView","endsOutsideView","leftHandle","rightHandle","topHandle","bottomHandle","isDirty","hasPersistableChanges","clsListObj","hasGeneratedId","isCommitting","clippedStart","clippedEnd","isCreating","wrapperClsListObj","isParent","isLinked","clsList","DomClassList","internalCls","wrapperClsList","wrapperStyle","isWrap","selected","isAssignmentSelected","isDraggable","eventSelectedCls","eventAssignHighlightCls","isEventSelected","inactive","hasAnimation","bryntum","noAnimations","delayMS","maxDelay","initialAnimationDetacher","delegate","animationend","expires","wrapperCls","iconCls","getValue","eventBarIconClsField","rowId","childContent","milestoneLabelConfig","rendererValue","encodeHtml","_renderData$iconCls","children","unshift","tag","isHtml","class","String","isNamedColor","colorProp","_customColorStyle","wrapperChildren","onEventDataGenerated","eventData","changeUseInitialAnimation","updateUseInitialAnimation","isFirefox","restartInitialAnimation","initialAnimation","_me$initialAnimationD","stopInitialAnimation","getMilestoneLabelWidth","milestoneMeasureElement","fontSize","label","innerHTML","bounds","milestoneWidth","updateMilestoneLayoutMode","alwaysOutside","toggle","updateMilestoneTextPosition","updateMilestoneAlign","updateMilestoneCharWidth","engineStoreNames","ProjectConsumer","declarable","projectModelClass","destroyStores","projectSubscribers","changeProject","oldProject","projectStoreNames","projectDataNames","projectCallbacks","buildingProjectConfig","isCrudManager","storeName","_sharedProject","sharedProject","isEventStoreMixin","autoLoad","delayAutoLoad","chain","updateProject","projectListeners","_crudManager","_project$stm","subscriber","detachFromProject","attachToProject","load","stm","restoringStart","restoringStop","changeCrudManager","onProjectDataReady","onProjectRestoringStart","rawQueue","onProjectRestoringStop","onBeforeTimeZoneChange","onTimeZoneChange","oldTimeZone","TimeZoneHelper","fromTimeZone","toTimeZone","onStartApplyChangeset","onEndApplyChangeset","whenProjectReady","_this$project$isEngin","projectStores","setupProjectStores","beforeTimeZoneChange","timeZoneChange","startApplyChangeset","endApplyChangeset","storeConfigs","previousDataName","prototype","_this$project$storeNa","createDataUpdater","createStoreDescriptor","setupConfigs","listeners","clsProto","storeNameCap","storeProject","isProjectModel","initializingProject","_subscriber","relayProjectDataChange","isExpand","isCollapse","expanded","SchedulerStores","batchedUpdate","changePreCommit","commitStart","commit","exception","idchange","beforeLoad","beforeRemove","calendarManagerStore","checkVersion","crudManagerClass","onProjectRefresh","isInitialCommit","navigateToAfterRefresh","navigateTo","bindCrudManager","refreshFromRowOnStoreAdd","suspended","onStoreAdd","calculateRowHeights","onStoreUpdateRecord","ignoreCount","updateResourceStore","metaMapId","usesDisplayStore","onEventIdChange","onEventStoreIdChange","onEventStoreBatchedUpdate","onInternalEventStoreChange","isAssign","isRemovingAssignment","onEventStoreChange","onEventCommit","resourcesToRepaint","added","modified","onEventCommitStart","toggleCls","onEventException","removed","onAssignmentCommit","repaintEventsForAssignmentChanges","onAssignmentCommitStart","onAssignmentException","getResource","onAssignmentBeforeRemove","removingAll","moveTo","activeAssignment","lastInteractionType","next","getPrevious","focusWithoutScrolling","focusElement","timeRanges","resourceTimeRanges","onBeforeLoad","getResourcesEventsPerTick","filterFn","eventsByTick","unrenderedScrollOptions","highlight","focus","SchedulerScroll","scrollEventIntoView","scrollResourceEventIntoView","scrollAssignmentIntoView","eventStart","eventEnd","eventIsOutside","isScheduled","extendTimeAxis","currentTimeSpanRange","visibleMS","sign","tree","_me$expandTo","expandTo","isRoot","isFocusable","parentNode","isAvailable","scrollUnrenderedEventIntoView","scrollResourceIntoView","resourceRec","eventRec","Promise","resolve","modifiedOptions","box","getResourceEventBox","translate","onEventRender","detacher","initialScrollPromise","renderEvent","cancelled","scrollRowIntoView","SchedulerRegions","getScheduleRegion","dateConstraints","getResourceRegion","getRowRegion","getAssignmentEventBox","includesOutside","roughly","getItemBox","SchedulerState","_state$zoomLevelOptio","propsToCopy","EventSelection","highlightPredecessors","highlightSuccessors","deselectOnClick","deselectAllOnScheduleClick","selectedCollection","multiEventSelect","eventSelectionDisabled","triggerSelectionChangeOnRemove","maintainSelectionOnDatasetChange","afterConstruct","_this$navigator","navigator","navigate","changeSelectedCollection","isCollection","updateSelectedCollection","deferUntilRepopulationIfNeeded","onSelectedCollectionChange","beforeSplice","_selectedCollection","getActionType","selection","deselected","getEventsFromAssignments","ArrayHelper","unique","_events","asArray","isEventSelectable","select","eventOrAssignment","preserveSelection","selectAssignment","selectEvent","selectEvents","deselect","deselectAssignment","deselectEvent","deselectEvents","selectAssignments","deselectAssignments","clearEventSelection","onBeforeSelectedCollectionSplice","toRemove","updateSelection","otherAssignmentRecord","animation","offsetHeight","highlightLinkedEvents","$selectedAssignments","isSettingData","newAssignments","selector","clean","isResourceTimeRangeStore","onAssignmentSelectionClick","clickedRecord","onEventNavigate","nodeType","Element","ELEMENT_NODE","changeHighlightSuccessors","changeLinkedEvents","changeHighlightPredecessors","highlighted","dependenciesFeature","dependencies","dep","unhighlight","toWalk","pop","outgoingDeps","outgoing","toEvent","incomingDeps","incoming","fromEvent","_this$_selectedCollec","isArrowKey","ArrowRight","ArrowLeft","ArrowUp","ArrowDown","animate100","animate","freeze","EventNavigation","Delayable","allowCtrlKey","scrollSilently","Space","Enter","Backspace","Escape","Tab","isNavigationKey","focusCls","enableDeleteKey","onDeleteKeyBuffer","navigatePreviousBuffer","navigateNextBuffer","testConfig","isInTimeAxis","onDeleteKey","throttle","changeNavigator","Navigator","mergeConfigs","ownerCmp","processEvent","itemSelector","navigatePrevious","navigateNext","instanceMeta","excluded","keyEvent","_me$focusedCell","_me$focusedCell2","focusedCell","rowIndex","key","firstAssignment","getFirstVisibleAssignment","uiEvent","_super$onElementKeyDo","location","_renderedEvents","renderedEvents","rowMap","getRow","_renderedEvents$","elementData","_currentOrientation$r","_renderedEvents2","resourceMap","eventsData","_renderedEvents$filte","firstResource","onGridBodyFocusIn","focusEvent","isGridCellFocus","focusableSelector","navigationEvent","eventFocus","destinationCell","normalizeCellContext","Location","_me$onCellNavigate","_focusedCell","accessibleFocusCell","cellSelector","columnId","focusCell","normalizeTarget","isDelete","eventSorter","resourceEvents","getEvents","previousEvent","rowIdx","previousAssignment","doGridNavigation","nextEvent","nextAssignment","handled","substring","targetAssignment","skipScrollIntoView","assignmentEl","activeItem","previousActiveEvent","previousActiveItem","onArrowUpKey","onArrowDownKey","onEscapeKey","onEventSpaceKey","onEventEnterKey","isActionableLocation","TransactionalFeatureMixin","enableTransactionalFeatures","transactionalFeaturesEnabled","queue","AttachToProjectMixin","_projectHolder$projec","projectHolder","client","attachToResourceStore","attachToEventStore","attachToAssignmentStore","attachToDependencyStore","attachToCalendarManagerStore","_super$attachToProjec","_super$detachFromProj","_super$attachToEventS","_super$attachToResour","_super$attachToAssign","_super$attachToDepend","_super$attachToCalend","releaseEventActions","releaseElement","reuseElement","renderEventActions","newElement","reuseOwnElement","MAX_WIDTH","heightEventSorter","chronoFields","getStartEnd","useEnd","fieldName","useEventBuffer","_eventRecord$hasBatch","_eventRecord$meta","hasBatchedChange","useTickDates","isResizing","tickRecord","HorizontalRendering","bufferSize","verticalBufferSize","Map","eventConfigs","isFirstRefresh","toDrawOnProjectRefresh","toDrawOnDataReady","scrollBuffer","renderDone","removeRows","translateRow","offsetRows","beforeRowHeight","updateVerticalBufferSize","renderRows","rows","stretch","_dateConstraints","_scheduler$getDateCon","getElement","eventRegion","taStart","taEnd","getDateConstraints","startX","endX","rowRecord","resourceData","approx","rowBox","getRecordCoords","absoluteTop","layout","rowTop","rowBottom","TEXT_NODE","eventNode","getRecordFromElement","clearDom","commitFinalized","onProjectCommitFinalized","ignoreRecordChanges","clearResources","refreshResources","isCalculated","calculateAllRowHeights","refreshPreCommit","onAssignmentStoreChange","replaced","flatMap","_assignmentRecord$res","_assignmentRecord$res2","isRemoving","isChangingId","refreshResourcesWhenReady","oldAssignment","newAssignment","oldValue","refreshResourcesOnDataReady","onAssignmentStoreRefresh","addConfirmed","onEventStoreAddConfirmed","onEventStoreRefresh","_eventRecord$$linkedR","renderedEventResources","$linkedResources","allChrono","$entity","getField","dateChanges","_me$project2","propagatingLoadChanges","isWritingData","clearLayoutCache","onResourceStoreChange","every","isBatchingChanges","isLeaf","onTranslateRow","refreshEventsForResource","onOffsetRows","calculateRowHeight","_resourceRecord$assig","layoutType","isSpecialRow","assigned","eventFilter","$original","includeOccurrences","layoutHandler","nbrOfBandsRequired","getConnectorStartSide","getConnectorEndSide","onRenderDone","onDragAbort","dragData","useWrapper","lastDomConfig","onRemoveRows","onEarlyScroll","rendererCalled","fromScroll","_me$_visibleDateRange","_me$_visibleDateRange2","renderAll","returnEnd","viewportCoords","ids","transition","noRows","bandIndex","topFraction","heightFraction","addTemporaryDragElement","domConfig","syncId","transient","innerElement","firstChild","hasTemporaryDragElement","startA","dataStartMS","endA","dataEndMS","startB","endB","nameA","nameB","calculateMS","startDateField","endDateField","durationMS","pxPerMinute","lengthInPx","diamondSize","diamondMS","setupRenderData","_scheduler$features$e","preamble","postamble","isProHorizontalRendering","eventBuffer","enabled","timespanStart","timespanEnd","viewStartMS","viewEndMS","durationMinutes","taskRecord","fillTimeSpanHorizontalPosition","calculateHorizontalPosition","isSafari","stickyEvents","fillTimeSpanVerticalPosition","includeOutsideTimeAxis","includeOutsideViewport","layoutEvents","allEvents","eventBox","layoutEventData","excludeFromLayout","bandsRequired","layoutResourceEvents","layoutMode","textPosition","eventElementConfig","taskFeature","syncOptions","syncIdField","elementConfig","fillSize","releaseThreshold","zIndex","afterRenderEvent","recordOrRow","draw","isRow","getRowFor","getResourceLayout","resourceLayout","getEventDOMConfigForCurrentView","labels","usesLabels","before","after","reusableDOMConfigs","eventDOMConfigs","useLeft","useRight","prevDomConfig","visibleEventDOMConfigs","bodyTop","_scrollTop","viewTop","viewBottom","unbuffered","unmanagedSize","DomSync","sync","onlyChildren","jsx","_scheduler$processEve","_domConfig$elementDat","reactComponent","isRelease","isRender","processEventContent","_scheduler$processEve2","getActiveElement","isReusingElement","isRepaint","addTemporaryClass","recordsOrIds","asId","cached","child","VerticalLayout","columnIndex","tplData","clusterIndex","widthFactor","leftFactor","packColumnCount","packColumnIndex","availableWidth","VerticalRendering","eventMap","releasedElements","resourceBufferSize","verticalLayout","columnWidthChange","initialized","coords","borderOffsetX","borderOffsetY","variableColumnWidths","isGrouped","totalWidth","allResourceRecords","_this$eventMap$get","scrollY","_this$eventMap$get2","_this$eventMap$get3","_this$eventMap$get3$r","startY","endY","onResourceColumnWidthChange","refreshAllResourcesWhenReady","changeCount","shouldWaitForInitializeAndEngineReady","unmaskBody","lastResource","resourceRecords","_allResourceRecords","firstIndex","onResourceStoreRefresh","refreshFromRerender","renderResource","prevScrollX","_this$scheduler$timeA","updateElementId","releaseTimeSpanDiv","resourceRange","getResourceRange","visibleResources","withBuffer","viewportStart","viewportEnd","insetStart","dateRange","bottomDate","virtualScrollHeight","topDate","isProVerticalRendering","resourceWidth","dataStartMs","dataEndMs","cacheKey","cache","resourceIndex","layoutData","toLayout","eventResources","getMapPath","internalStyle","topDateMS","bottomDateMS","resourceEntry","_eventData$elementCon","isEventElement","syncConfigs","featureDomConfigs","reusingElement","isLastLevel","isLastCell","TimeAxisBase","Widget","compactCellWidthThreshold","sizeProperty","positionProperty","_client$verticalTimeA","hideHeaders","hidden","buildCells","_me$client","featureHeaderConfigs","cellConfigs","_level$cells","stickyHeader","headerFeature","DEBUG","widgetClassList","rebuild","oldLevelsCount","sum","HorizontalTimeAxis","_this$owner","onModelUpdate","_this$owner2","updateModel","ResourceHeader","headerRenderer","showAvatars","fillWidth","fitWidth","imagePath","imageExtension","defaultImageName","changeShowAvatars","_this$avatarRendering","avatarRendering","AvatarRendering","updateShowAvatars","onResourceStoreDataChange","updateWidthCache","_fillWidth","_fitWidth","configuredFillWidth","configuredFitWidth","refreshWidths","toggleEmptyText","insetEnd","changeColumnWidth","refreshingWidths","configuredColumnWidth","updateColumnWidth","changeFillWidth","updateFillWidth","changeFitWidth","updateFitWidth","getImageURL","imageName","joinPaths","updateImagePath","updateAvailableWidth","_me$resourceStore","fit","useWidth","shouldAnimate","_columnWidth","groupField","groupers","currentGroup","_currentGroup","groupRecord","groupParent","groupChildren","groupLeft","groupWidth","imageUrl","image","_resourceRecord$name","toLowerCase","getResourceAvatar","initials","defaultImageUrl","onResourceMouseEvent","resourceCell","TimeAxisColumn","WidgetColumn","groupable","hideable","showColumnPicker","filterable","sortable","searchable","editor","enableCellContextMenu","tooltipRenderer","needWidth","exportable","htmlEncode","autoExposeFields","_this$timeAxisView","onViewModelUpdate","viewModel","refreshFakeScroll","onTimelinePaint","_me$grid","onHeightChange","internal","currentElement","internalRenderer","isInitialCommitPerformed","isDelayingCalculation","ColumnStore","registerColumnType","VerticalTimeAxis","wrapText","buildHorizontalCells","cellId","minHeight","VerticalTimeAxisColumn","Column","minWidth","locked","alwaysClearCell","ariaLabel","cellAriaLabel","descriptionFormats","month","createEventOnDblClick","schedulableAreaSelector","sortFeatureStore","showEventColorPickers","allowOverlap","preCalculateHeightLimit","loadMaskError","showDelay","resourceTimeRangeSelector","scheduledblclick","onTimeAxisCellDblClick","onPaintOverride","_me$firstVisibleRow","_me$lastVisibleRow","firstVisibleRow","lastVisibleRow","createEvent","onVerticalScroll","onEventCreated","vertical","processEventDrop","processCrossSchedulerEventDrop","beforeEventDragStart","afterEventDragStart","afterEventDragAbortFinalized","checkEventDragValidity","afterEventResizeStart","hasEventEditor","eventEditingFeature","eventEdit","taskEdit","simpleEventEdit","editEvent","assignEventToResource","commitAsync","_me$eventEditingFeatu","useEventModelDefaults","defaultDuration","defaultValues","defaultDurationUnit","durationUnit","isDateRangeAvailable","captureStm","_me$eventEditingFeatu2","freeStm","getEventElement","excludeEvent","_me$crudManager","toggleClasses","getRowHeight","storeKnownHeight","estimateTotalHeight","clearKnownHeights","lastDate","getEventRecord","changeRange","updateRange","currentDate","newDate","updateDate","changeStepUnit","updateScrollBuffer","previous","scheduleEvent","eventRect","setTranslateXY","setTopLeft","addChild","EventColorPicker","ColorPicker","colorClasses","colorClassPrefix","colors","colorSelected","ClockTemplate","minuteHeight","minuteTop","hourHeight","hourTop","handLeft","div","template","generateContent","updateDateIndicator","hourIndicatorEl","minuteIndicatorEl","isBrowserEnv","transform","unitLessThanDay","_template","TaskEditStm","getStmCapture","stmInitiallyAutoRecord","stmInitiallyDisabled","transferred","applyStmCapture","stmCapture","startTransaction","getStm","hasStmCapture","autoRecord","enable","isRecording","stopTransaction","startStmTransaction","commitStmTransaction","resetQueue","rejectStmTransaction","_stm$transaction","transaction","rejectTransaction","enableStm","disableStm","disable","commitOrReject","promise","rejectingStmTransaction","TimeSpanMenuBase","ContextMenuBase","Combo","editable","displayField","valueField","localizeDisplayFields","addNone","buildItems","allDaysValueAsArray","allDaysValue","workingDaysValue","nonWorkingDays","nonWorkingDaysValue","splitCls","_weekDays","weekDays","dayNames","getDayNames","RecurrenceDayRuleEncoder","encodeDay","findRecord","RecurrenceDaysButtonGroup","ButtonGroup","toggleable","updateItemText","decodeDay","getDayName","__items","RecurrenceMonthDaysButtonGroup","minValue","maxValue","RecurrenceMonthsButtonGroup","getMonthNames","getMonthName","placeholder","_recurrence","buildDayNumbers","populate","parseInt","RecurrenceEditorPanel","Panel","frequencyField","onChange","intervalField","required","daysButtonField","forFrequency","monthDaysRadioField","toggleGroup","checked","monthDaysButtonField","monthsButtonField","positionAndDayRadioField","positionsCombo","daysCombo","stopRecurrenceField","countField","setupWidgetConfig","widgetConfig","isMobile","updateRecord","monthDays","positions","check","uncheck","syncEventRecord","getValues","w","toggleStopFields","onMonthDaysRadioFieldChange","isWidgetAvailableForFrequency","onPositionAndDayRadioFieldChange","onStopRecurrenceFieldChange","frequency","onFrequencyFieldChange","queryAll","hint","toggleFieldsState","EventColorField","ColorField","picker","EventMenu","processItems","pluginConfig","getDataFromEvent","_ref","getTargetElementFromEvent","shouldShowMenu","eventParams","showContextMenuFor","getElementFromRecord","triggerMouseEvent","tiggerEvent","deleteEvent","unassignEvent","showTaskColorPickers","populateItemsWithData","_items$eventColor","isSchedulerPro","menu","Objects","colorMenu","changeItems","icon","onItem","_menu$focusInEvent","revertTarget","focusInEvent","_menu$focusInEvent2","unassign","separator","featureClass","GridFeatureManager","registerFeature","ScheduleMenu","isDOMEvent","_client$getCellDataFr","_client$getDateFromDo","addEvent"],"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ACZ,IAAA,OAAO,IAAI,CAACxR,IAAI,CAACwR,SAAS,CAAA;AAC9B,GAAA;EACA,IAAIC,OAAOA,GAAG;AACV,IAAA,OAAO,IAAI,CAACzR,IAAI,CAACyR,OAAO,CAAA;AAC5B,GAAA;AACJ,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,QAAQ,SAASjG,KAAK,CAAC;AACxC;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACI;AACA;EACA,WAAWC,aAAaA,GAAG;IACvB,OAAO;AACHE,MAAAA,UAAU,EAAG0F,IAAI;AACjB;AACZ;AACA;AACA;AACA;AACYK,MAAAA,UAAU,EAAG,IAAI;AACjBC,MAAAA,kBAAkB,EAAG,IAAI;AACzB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,OAAO,EAAG,IAAI;AACd;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,UAAU,EAAG,IAAI;AACjB;AACA;AACA;AACAC,MAAAA,aAAa,EAAM,IAAI;AACvBC,MAAAA,WAAW,EAAQ,IAAI;AACvB;AACAC,MAAAA,gBAAgB,EAAG,IAAI;AACvB;AACAC,MAAAA,cAAc,EAAK,IAAI;MACvBC,SAAS,EAAG,EAAE;AACdC,MAAAA,UAAU,EAAS,IAAI;AACvBC,MAAAA,gBAAgB,EAAG,GAAG;AACtB1G,MAAAA,UAAU,EAAS;AACf2G,QAAAA,uBAAuB,EAAG,IAAI;AAC9BC,QAAAA,mBAAmB,EAAO,IAAI;AAC9BC,QAAAA,qBAAqB,EAAK,IAAA;AAC9B,OAAA;KACH,CAAA;AACL,GAAA;EACA,WAAWC,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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,IAAA,IAAI,CAAC8W,aAAa,CAACzT,KAAK,EAAE,CAAA;AAC9B,GAAA;AACA;AACA;AACA;AACA;EACA,IAAI+R,WAAWA,GAAG,EAAC;AACvB,CAAC;;ACnbD;AACA;AACA;AACA,MACI8I,WAAW,GAAGA,CAACC,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAG,CAAC,KAAKA,EAAE,GAAGD,EAAE,CAAA;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAenM,CAAAA,MAAM,IAAI,MAAMqM,mBAAmB,UAAUrM,MAAM,IAAIE,IAAI,EAAE;EACxE,WAAWvmB,KAAKA,GAAG;AACf,IAAA,OAAO,qBAAqB,CAAA;AAChC,GAAA;AACA;EACA,WAAWyT,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYL,MAAAA,UAAU,EAAG,kBAAkB;AAC/B;AACZ;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYrF,MAAAA,OAAO,EAAG,IAAI;AACd;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYlG,MAAAA,iBAAiB,EAAG,IAAA;KACvB,CAAA;AACL,GAAA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;EACA8qB,aAAaA,CAAC5kB,OAAO,EAAE;AACnB,IAAA,MAAMuD,MAAM,GAAG;AACX7Q,MAAAA,KAAK,EAAG,IAAA;KACX,CAAA;IACD,IAAIO,IAAI,GAAG,EAAE,CAAA;AACb;IACA,IAAI+M,OAAO,KAAK,IAAI,EA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,CAAA;AAC9C;AACA,IAAA,IAAIvO,MAAM,CAACuS,UAAU,IAAIvS,MAAM,CAACuS,UAAU,CAAClT,IAAI,IAAI,CAACW,MAAM,CAACuS,UAAU,CAACxF,IAAI,EAAE;AACxE,MAAA,OAAO/M,MAAM,CAACuS,UAAU,CAAClT,IAAI,CAAA;AACjC,KAAA;AACA,IAAA,OAAOW,MAAM,CAAA;AACjB,GAAA;AACA;AACA;AACA;EACA,IAAI4oB,WAAWA,GAAG,EAAC;AACvB,CAAC;;AC1aD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAepD,CAAAA,MAAM,IAAI,MAAMmP,gBAAgB,UAAUnP,MAAM,IAAIE,IAAI,EAAE;EACrE,OAAOvmB,KAAK,GAAG,kBAAkB,CAAA;AACjC,EAAA,OAAO0M,aAAa,GAAG;AACnB;AACR;AACA;AACA;AACA;AACA;AACQ+oB,IAAAA,gBAAgB,EAAG,IAAI;AACvB;AACR;AACA;AACA;AACA;AACA;AACQC,IAAAA,yBAAyB,EAAG,IAAI;AAChC;AACR;AACA;AACA;AACA;AACA;AACQC,IAAAA,YAAY,EAAG,CAAC;AAChB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,YAAY,EAAG,IAAI;AACnB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,iBAAiB,EAAG,CAAC;AACrB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,yBAAyB,EAAG,IAAA;GAC/B,CAAA;AACD;AACA;EACAC,aAAa,GAAG,CAAC,CAAC,CAAA;EAClBC,gBAAgB,GAAG,CAAC,CAAC,CAAA;EACrB31B,SAASA,CAACiR,MAAM,EAAE;IACd,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A;AACf,OAAA;AACJ,KAAA;AACA,IAAA,OAAO,KAAK,CAAA;AAChB,GAAA;AACA;AACA;AACA;EACA,IAAInV,WAAWA,GAAG,EAAC;AACvB,CAAC;;ACpRD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAAepD,CAAAA,MAAM,IAAI,MAAMia,sBAAsB,UAAUja,MAAM,IAAIE,IAAI,EAAE;EAC3E,WAAWvmB,KAAKA,GAAG;AACf,IAAA,OAAO,wBAAwB,CAAA;AACnC,GAAA;AACA;EACA,WAAW0M,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY6zB,MAAAA,kBAAkB,EAAG,IAAI;AACzB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,cAAc,EAAG,iBAAiB;AAClC;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,QAAQ,EAAG,aAAa;AACxB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,aAAa,EAAG,kBAAkB;AAClC;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,kBAAkB,EAAG,yBAAyB;AAC9C;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,oBAAoB,EAAG,2BAA2B;AAClD;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,aAAa,EAAG,mBAAA;KACnB,CAAA;AACL,GAAA;AACA,EAAA,OAAOptB,YAAY,GAAG;AAClB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQqtB,IAAAA,SAAS,EAAG,EAAE;AACd;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ3X,IAAAA,SAAS,EAAG,KAAK;AACjB4X,IAAAA,cAAc,EAAG,IAAI;AACrB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,UAAU,EAAG,OAAO;AACpB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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AAAA,aAAa,GAAGA,CAACC,CAAC,EAAEC,EAAE,KAAKN,OAAO,CAACK,CAAC,CAAC/vB,MAAM,EAAE,EAAEgwB,EAAE,CAACC,OAAO,EAAED,EAAE,CAACE,KAAK,CAAC,IAAIR,OAAO,CAACK,CAAC,CAAC5vB,QAAQ,EAAE,EAAE6vB,EAAE,CAACG,QAAQ,EAAEH,EAAE,CAACI,MAAM,CAAC;EACrHC,aAAW,GAAK,EAAE,CAAA;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,YAAY,SAASC,QAAQ,CAACC,KAAK,CACpDpjB,kBAAkB,EAClBsD,iBAAiB,EACjB0W,sBAAsB,EACtBiC,cAAc,EACd2D,aAAa,EACbxT,mBAAmB,EACnB8C,gBAAgB,EAChBoI,eACJ,CAAC,CAAC;AACE;EACA,WAAW59B,KAAKA,GAAG;AACf,IAAA,OAAO,cAAc,CAAA;AACzB,GAAA;AACA;EACA,WAAWG,IAAIA,GAAG;AACd,IAAA,OAAO,cAAc,CAAA;AACzB,GAAA;AACA,EAAA,OAAOsT,YAAY,GAAG;AAClBk2B,IAAAA,oBAAoB,EAAG;AACnB35B,MAAAA,KAAK,EAAG,CAAC,mBAAmB,EAAE,UAAU,EAAE,YAAY,CAAC;AACvD8Z,MAAAA,OAAO,EAAG;AACNta,QAAAA,KAAK,EAAG,UAAA;AACZ,OAAA;KACH;AACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQgD,IAAAA,SAAS,EAAG;AACRsX,MAAAA,OAAO,EAAG;AACNC,QAAAA,KAAK,EAAG,MAAA;OACX;AACD/Z,MAAAA,KAAK,EAAG,IAAA;KACX;AACD;AACR;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQyC,IAAAA,OAAO,EAAG;AACNqX,MAAAA,OAAO,EAAG;AACNC,QAAAA,KAAK,EAAG,MAAA;OACX;AACD/Z,MAAAA,KAAK,EAAG,IAAA;KACX;AACD;AACR;AACA;AACA;AACA;AACA;AACQu3B,IAAAA,aAAa,EAAG,IAAI;AACpB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQjT,IAAAA,WAAW,EAAG,IAAI;AAClB;AACR;AACA;AACA;AACA;AACA;AACQsV,IAAAA,QAAQ,EAAG,IAAI;AACf;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQhrB,IAAAA,QAAQ,EAAG,KAAK;AAChB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQirB,IAAAA,QAAQ,EAAG,IAAA;GACd,CAAA;EACD,WAAWn9B,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYo9B,MAAAA,WAAW,EAAG,IAAI;AAClB;AACZ;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACYprB,MAAAA,QAAQ,EAAG,IAAI;AACf;AACZ;AACA;AACA;AACA;AACA;AACA;AACYiI,MAAAA,iBAAiB,EAAG,IAAI;AACxB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYojB,MAAAA,kBAAkB,EAAG,IAAI;AACzB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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CA;AACA;AACA;AACA;KACS,CAAA;AACL,GAAA;AACA;AACA;AACAv6C,EAAAA,SAASA,CAACiR,MAAM,GAAG,EAAE,EAAE;IACnB,IAAIA,MAAM,CAACspC,MAAM,EAAE;AACftpC,MAAAA,MAAM,CAACupC,UAAU,GAAGvpC,MAAM,CAACspC,MAAM,CAAA;MACjC,OAAOtpC,MAAM,CAACspC,MAAM,CAAA;AACxB,KAAA;AACA,IAAA,KAAK,CAACv6C,SAAS,CAACiR,MAAM,CAAC,CAAA;AAC3B,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIwpC,EAAAA,MAAMA,GAAG;AACL;IACA,MAAMj6C,MAAM,GAAG,EAAE,CAAA;IACjB,IAAI,CAAC45C,gBAAgB,CAAC,CAACxa,KAAK,EAAE0a,OAAO,KAAK95C,MAAM,CAAE,GAAE85C,OAAQ,CAAA,IAAA,CAAK,CAAC,GAAG1a,KAAK,CAAC6a,MAAM,EAAE,CAAC,CAAA;AACpF,IAAA,OAAOj6C,MAAM,CAAA;AACjB,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIk6C,UAAUA,GAAG;AACb,IAAA,OAAO,IAAI,CAACD,MAAM,EAAE,CAAA;AACxB,GAAA;EACA,IAAIC,UAAUA,CAAC/5C,IAAI,EAAE;IACjB,IAAI,CAACs5C,IAAI,GAAGt5C,IAAI,CAAA;AACpB,GAAA;AACA;AACA;EACA,IAAI45C,MAAMA,CAACA,MAAM,EAAE;AACf,IAAA,IAAIA,MAAM,KAAK,IAAI,CAACC,UAAU,EAAE;MAC5B,IAAI,CAACA,UAAU,GAAGD,MAAM,CAAA;AAC5B,KAAA;AACJ,GAAA;AACA;AACJ;AACA;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ACA;AACA;AACA;AACYC,MAAAA,mBAAmB,EAAG,SAAS;AAC/B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,WAAW,EAAG,OAAO;AACrB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,sBAAsB,EAAG,IAAI;AAC7B;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,uBAAuB,EAAG,IAAI;AAC9B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY5mB,MAAAA,cAAc,EAAG,IAAI;AACrB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY6mB,MAAAA,mBAAmB,EAAG,IAAI;AAC1B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,aAAa,EAAG,IAAI;AACpB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,oBAAoB,EAAG,IAAI;AAC3B;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,iBAAiB,EAAG,MAAM;AAC1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OAAOsT,YAAY,GAAG;AAClB;AACR;AACA;AACA;AACA;AACQqb,IAAAA,aAAa,EAAG,IAAI;AACpB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQouD,IAAAA,cAAc,EAAG,IAAI;AACrB;AACR;AACA;AACA;AACA;AACQC,IAAAA,WAAW,EAAG;AACVntE,MAAAA,KAAK,EAAG,IAAI;AACZ8Z,MAAAA,OAAO,EAAG,SAAA;KACb;AACD;AACR;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQszD,IAAAA,SAAS,EAAG,IAAI;AAChB;AACR;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,QAAQ,EAAG,KAAK;AAChB;AACR;AACA;AACA;AACA;AACA;AACQ52B,IAAAA,WAAW,EAAG,GAAG;AACjB;AACA62B,IAAAA,SAAS,EAAG,IAAI;AAChB;AACAC,IAAAA,cAAc,EAAG,IAAI;AACrB;AACAC,IAAAA,gBAAgB,EAAG,IAAI;AACvBvG,IAAAA,cAAc,EAAG,IAAA;GACpB,CAAA;AACD;AACJ;AACA;AACA;AACA;AACA;EACIjT,aAAa,GAAG,CAAC,CAAC,CAAA;AAClB;AACJ;AACA;AACA;AACA;AACA;EACI4U,YAAY,GAAI,CAAC,CAAC,CAAA;AAClB;AACA;EACAv4E,SAASA,CAACiR,MAAM,EAAE;IACd,MAAM5Q,EAAE,GAAG,IAAI,CAAA;AACf;AACA;AACA4Q,IAAAA,MAAM,CAACg2B,SAAS,CAACif,gBAAgB,GAAG7lD,EAAE,CAAA;AACtC,IAAA,KAAK,CAACL,SAAS,CAACiR,MAAM,CAAC,CAAA;AACvB,IAAA,IAAI5Q,EAAE,CAAC48E,SAAS,IAAI,IAAI,EAAE;AACtB;M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;AACtB,IAAA,MAAMvO,MAAM,GAAG,KAAK,CAACsO,gBAAgB,CAACC,OAAO,CAAC,CAAA;AAC9C;IACA,OAAOvO,MAAM,CAACI,EAAE,CAAA;IAChB,OAAOJ,MAAM,CAACkrC,MAAM,CAAA;IACpB,OAAOlrC,MAAM,CAACV,IAAI,CAAA;IAClB,OAAOU,MAAM,CAAC64C,KAAK,CAAA;IACnB,OAAO74C,MAAM,CAACqiF,SAAS,CAAA;IACvB,OAAOriF,MAAM,CAACsiF,aAAa,CAAA;AAC3B,IAAA,OAAOtiF,MAAM,CAAA;AACjB,GAAA;AACJ,CAAA;AACAyhF,WAAW,CAACC,kBAAkB,CAACM,sBAAsB,CAAC,CAAA;AACtDA,sBAAsB,CAAC3+E,MAAM,GAAG,wBAAwB;;AC1IxD;AACA;AACA;AACA,MACIk/E,kBAAkB,GAAG;AACjBC,EAAAA,KAAK,EAAG,YAAY;AACpBl7E,EAAAA,IAAI,EAAI,CAAC,gBAAgB,EAAE,8BAA8B,CAAC;AAC1DD,EAAAA,GAAG,EAAK,cAAA;AACZ,CAAC,CAAA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMxB,aAAa,SAAS8iC,YAAY,CAACE,KAAK,CACzDz9B,eAAe,EACf2zC,WAAW,EACXW,YAAY,EACZiC,kBAAkB,EAClB+R,eAAe,EACfgE,eAAe,EACf4C,cAAc,EACd/T,uBAAuB,EACvBsT,gBAAgB,EAChBY,uBAAc,EACduF,wBAAe,EACfzhB,aAAa,EACbqnB,yBACJ,CAAC,CAAC;AACE;EACA,OAAOzmE,KAAK,GAAG,eAAe,CAAA;AAC9B;EACA,OAAOG,IAAI,GAAG,eAAe,CAAA;AAC7B,EAAA,OAAOsT,YAAY,GAAG;AAClB;AACR;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQhI,IAAAA,IAAI,EAAG;AACHuE,MAAAA,KAAK,EAAG,IAAI;AACZ8Z,MAAAA,OAAO,EAAG;AACNC,QAAAA,KAAK,EAAG,MAAA;AACZ,OAAA;KACH;AACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ9O,IAAAA,QAAQ,EAAG,MAAM;AACjB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ1G,IAAAA,KAAK,EAAG,MAAM;AACd;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQi2D,IAAAA,kBAAkB,EAAG,IAAI;AACzB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ55B,sBAAsB,EAAG,EAAE;AAC3B;AACR;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ0yC,IAAAA,qBAAqB,EAAG,IAAI;AAC5B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ9Z,IAAAA,YAAY,EAAG,CAAC;AAChB;AACA+Z,IAAAA,uBAAuB,EAAG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;EACA,WAAW0M,aAAaA,GAAG;IACvB,OAAO;AACHvM,MAAAA,IAAI,EAAG,UAAU;AACjB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYi7B,MAAAA,KAAK,EAAG,IAAI;AACZ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY00D,MAAAA,YAAY,EAAG,IAAA;KAClB,CAAA;AACL,GAAA;EACA,WAAWC,YAAYA,GAAG;AACtB,IAAA,MAAMz+E,MAAM,GAAG,KAAK,CAACy+E,YAAY,CAAA;AACjCz+E,IAAAA,MAAM,CAAC8/C,KAAK,CAAC7vD,IAAI,CAAC,sBAAsB,CAAC,CAAA;AACzC,IAAA,OAAO+P,MAAM,CAAA;AACjB,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;EACA6+E,cAAcA,CAACC,WAAW,EAAE;IACxB,MACI;AAAEppB,QAAAA,MAAAA;AAAO,OAAC,GAAG,IAAI;AACjB,MAAA;QACI75C,aAAa;AACb6B,QAAAA,cAAAA;AACJ,OAAC,GAAGohE,WAAW;MACfj/C,gBAAgB,GAAG61B,MAAM,CAAC17C,sBAAsB,CAACyB,QAAQ,CAACI,aAAa,CAAC,CAAA;AAC5E,IAAA,OAAO,CAACA,aAAa,CAACqB,OAAO,CAACw4C,MAAM,CAACx3C,aAAa,CAAC,IAAI2hB,gBAAgB,IAAI,EAAEniB,cAAc,IAAIA,cAAc,CAACq/C,YAAY,CAAC,CAAA;AAC/H,GAAA;EACA2hB,gBAAgBA,CAAC37E,KAAK,EAAE;AACpB;AACA,IAAA,IAAI+Y,SAAS,CAAC2kE,UAAU,CAAC19E,KAAK,CAAC,EAAE;MAAA,IAAA29E,qBAAA,EAAAC,qBAAA,CAAA;MAC7B,MACI;AAAEjrB,UAAAA,MAAAA;AAAO,SAAC,GAAO,IAAI;AACrBlhD,QAAAA,QAAQ,IAAAksE,qBAAA,GAAShrB,MAAM,CAACtvB,oBAAoB,MAAAs6C,IAAAA,IAAAA,qBAAA,KAA3BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAA,CAAAn6E,IAAA,CAAAmvD,MAAM,EAAwB3yD,KAAK,CAAC;AACrD5I,QAAAA,IAAI,IAAAwmF,qBAAA,GAAajrB,MAAM,CAAC3/C,mBAAmB,cAAA4qE,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA1BA,qBAAA,CAAAp6E,IAAA,CAAAmvD,MAAM,EAAuB3yD,KAAK,EAAE,OAAO,CAAC;AAC7D;AACA2a,QAAAA,cAAc,GAAGg4C,MAAM,CAACllB,qBAAqB,CAACztC,KAAK,CAAC,IAAI2yD,MAAM,CAAC1mD,UAAU,IAAI0mD,MAAM,CAACl4C,aAAa,CAAC9Y,IAAI,CAAA;AAC1G,MAAA,OAAO1G,YAAY,CAAC/M,MAAM,CAAC,KAAK,CAACytF,gBAAgB,CAAC37E,KAAK,CAAC,EAAEyR,QAAQ,EAAE;QAAEra,IAAI;AAAEujB,QAAAA,cAAAA;AAAe,OAAC,CAAC,CAAA;AACjG,KAAA;AACA,IAAA,OAAO3a,KAAK,CAAA;AAChB,GAAA;AACA62B,EAAAA,oBAAoBA,CAAC;IAAE9P,KAAK;IAAEpM,cAAc;AAAEvjB,IAAAA,IAAAA;AAAK,GAAC,EAAE;IAClD,MAAM;AAAEu7D,MAAAA,MAAAA;AAAO,KAAC,GAAG,IAAI,CAAA;AACvB;IACA,IAAI,CAACA,MAAM,CAACpnC,QAAQ,IAAIonC,MAAM,CAACjvC,UAAU,EAAE;MACvCqD,KAAK,CAAC82D,QAAQ,GAAG;AACb32D,QAAAA,IAAI,EAAO,4BAA4B;AACvC41D,QAAAA,IAAI,EAAO,mBAAmB;AAC9B57E,QAAAA,QAAQ,EAAG,CAACyZ,cAAc,IAAIA,cAAc,CAAC4Q,QAAQ,IAAI,CAAC5Q,cAAc,CAACga,aAAa,CAACv9B,IAAI,CAAC;AAC5F6vB,QAAAA,MAAM,EAAK,GAAG;AACd81D,QAAAA,MAAMA,GAAG;AACLpqB,UAAAA,MAAM,CAACsd,WAAW,CAAC74E,IAAI,EAAEujB,cAAc,EAAEg4C,MAAM,CAACkN,SAAS,CAACllD,cAAc,CAAC,CAAC,CAAA;AAC9E,SAAA;OACH,CAAA;AACL,KAAA;AACJ,GAAA;AACJ,CAAA;AACA8iE,YAAY,CAACH,YAAY,GAAG,EAAE,CAAA;AAC9BG,YAAY,CAAC5tF,MAAM,GAAG,cAAc,CAAA;AAAE0tF,kBAAkB,CAACC,eAAe,CAACC,YAAY,EAAE,IAAI,EAAE,WAAW,CAAC;;;;"}