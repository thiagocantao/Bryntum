{"version":3,"file":"Slider.js","sources":["../../../../Core/lib/Core/widget/Slider.js"],"sourcesContent":["import Widget from './Widget.js';\nimport Tooltip from './Tooltip.js';\nimport Rectangle from '../helper/util/Rectangle.js';\nimport ObjectHelper from '../helper/ObjectHelper.js';\n\n/**\n * @module Core/widget/Slider\n */\nconst arrowKeys = {\n    ArrowUp    : 1,\n    ArrowDown  : 1,\n    ArrowLeft  : 1,\n    ArrowRight : 1\n};\n\n/**\n * Wraps native &lt;input type=\"range\"&gt;\n *\n * @extends Core/widget/Widget\n *\n * @example\n * let slider = new Slider({\n *   text: 'Choose value'\n * });\n *\n * @classType slider\n * @inlineexample Core/widget/Slider.js\n * @widget\n */\nexport default class Slider extends Widget {\n    //region Config\n\n    static get $name() {\n        return 'Slider';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'slider';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Get/set text. Appends value if Slider.showValue is true\n             * @member {String} text\n             */\n            /**\n             * Slider label text\n             * @config {String}\n             */\n            text : null,\n\n            /**\n             * Show value in label (appends in () if text is set)\n             * @config {Boolean}\n             * @default\n             */\n            showValue : true,\n\n            /**\n             * Show the slider value in a tooltip\n             * @config {Boolean}\n             * @default\n             */\n            showTooltip : false,\n\n            /**\n             * Get/set min value\n             * @member {Number} min\n             */\n            /**\n             * Minimum value\n             * @config {Number}\n             * @default\n             */\n            min : 0,\n\n            /**\n             * Get/set max value\n             * @member {Number} max\n             */\n            /**\n             * Maximum value\n             * @config {Number}\n             * @default\n             */\n            max : 100,\n\n            /**\n             * Get/set step size\n             * @member {Number} step\n             */\n            /**\n             * Step size\n             * @config {Number}\n             * @default\n             */\n            step : 1,\n\n            /**\n             * Get/set value\n             * @member {Number} value\n             */\n            /**\n             * Initial value\n             * @config {Number}\n             */\n            value : 50,\n\n            /**\n             * Unit to display next to the value, when configured with `showValue : true`\n             * @config {String}\n             * @default\n             */\n            unit : null,\n\n            // The value is set in the Light theme. The Material theme will have different value.\n            thumbSize : 20,\n\n            tooltip : {\n                $config : ['lazy', 'nullify'],\n                value   : {\n                    type     : 'tooltip',\n                    align    : 'b-t',\n                    anchor   : false, // No anchor displayed since thumbSize is different for different themes\n                    axisLock : true\n                }\n            },\n\n            localizableProperties : ['text'],\n\n            /**\n             * By default, the {@link #event-change} event is fired when a change gesture is completed, ie: on\n             * the mouse up gesture of a drag.\n             *\n             * Configure this as `true` to fire the {@link #event-change} event as the value changes *during* a drag.\n             * @prp {Boolean}\n             */\n            triggerChangeOnInput : null,\n\n            defaultBindProperty : 'value'\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    compose() {\n        const\n            { id, min, max, showValue, step, text, value, unit = '', disabled } = this,\n            inputId = `${id}-input`,\n            hasText = Boolean(text || showValue);\n\n        return {\n            class : {\n                'b-has-label' : hasText,\n                'b-text'      : hasText,\n                'b-disabled'  : disabled\n            },\n\n            children : {\n                input : {\n                    tag       : 'input',\n                    type      : 'range',\n                    id        : inputId,\n                    reference : 'input',\n                    disabled,\n\n                    min,\n                    max,\n                    step,\n                    value,\n                    // eslint-disable-next-line bryntum/no-listeners-in-lib\n                    listeners : {\n                        input     : 'onInternalInput',\n                        change    : 'onInternalChange',\n                        mouseover : 'onInternalMouseOver',\n                        mouseout  : 'onInternalMouseOut'\n                    }\n                },\n\n                label : {\n                    tag  : 'label',\n                    for  : inputId,\n                    html : showValue ? (text ? `${text} (${value}${unit})` : value + unit) : text\n                }\n            }\n        };\n    }\n\n    get focusElement() {\n        return this.input;\n    }\n\n    get percentProgress() {\n        return (this.value - this.min) / (this.max - this.min) * 100;\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fired while slider thumb is being dragged.\n     * @event input\n     * @param {Core.widget.Slider} source The slider\n     * @param {String} value The value\n     */\n\n    /**\n     * Fired after the slider value changes (on mouse up following slider interaction).\n     * @event change\n     * @param {String} value The value\n     * @param {Boolean} userAction Triggered by user taking an action (`true`) or by setting a value (`false`)\n     * @param {Core.widget.Slider} source The slider\n     */\n\n    /* break from doc comment */\n\n    onInternalKeyDown(e) {\n        // Contain arrow keys to be processed by the <input type=\"range\">, do not allow them to bubble\n        // up to by any owning container.\n        if (!this.readOnly && arrowKeys[e.key]) {\n            e.stopImmediatePropagation();\n        }\n    }\n\n    onInternalChange() {\n        this.updateUI();\n        this.triggerChange(true);\n        this.trigger('action', { value : this.value });\n    }\n\n    onInternalInput() {\n        const me = this;\n\n        if (me.readOnly) {\n            // Undo the change if we are readOnly.\n            // readOnly input attribute will not work for non-text fields: https://github.com/w3c/html/issues/89\n            me.input.value = me.value;\n            return;\n        }\n\n        me.value = parseInt(me.input.value, 10);\n\n        me.trigger('input', { value : me.value });\n        if (me.triggerChangeOnInput) {\n            me.triggerChange(me);\n        }\n    }\n\n    onInternalMouseOver() {\n        const\n            me            = this,\n            thumbPosition = me.rtl ? 100 - me.percentProgress : me.percentProgress;\n\n        me.tooltip?.showBy({\n            target : Rectangle.from(me.input).inflate(me.thumbSize / 2, -me.thumbSize / 2),\n            align  : `b-t${Math.round(thumbPosition)}`\n        });\n    }\n\n    onInternalMouseOut() {\n        this.tooltip?.hide();\n    }\n\n    triggerChange(userAction) {\n        this.triggerFieldChange({\n            value : this.value,\n            valid : true,\n            userAction\n        });\n    }\n\n    //endregion\n\n    //region Config Handling\n\n    // max\n    updateMax(max) {\n        const me = this;\n\n        if (me.input && me._value > max) {\n            me.value = max;\n            me.trigger('input', { value : me.value });\n        }\n    }\n\n    // min\n    updateMin(min) {\n        const me = this;\n\n        if (me.input && me._value < min) {\n            me.value = min;\n            me.trigger('input', { value : me.value });\n        }\n    }\n\n    // tooltip\n    changeTooltip(config, existingTooltip) {\n        if (config) {\n            config.owner = this;\n        }\n\n        return this.showTooltip ? Tooltip.reconfigure(existingTooltip, config, {\n            owner    : this,\n            defaults : {\n                forElement : this.input,\n                html       : String(this.value) + (this.unit ?? '')\n            }\n        }) : null;\n    }\n\n    changeValue(value) {\n        const\n            me            = this,\n            { min, step } = me;\n\n        value = Math.min(Math.max(value, min), me.max);\n\n        // Round the passed value so that it is in sync with our steps.\n        // For example, if our min is 10, and our step is 3, then\n        // passing 12 should get 13. Rounding the value directly to the closest\n        // step would fail this requirement.\n        if (value > min) {\n            return min + ObjectHelper.roundTo(value - min, step);\n        }\n        return ObjectHelper.roundTo(value, step);\n    }\n\n    updateValue(value) {\n        const\n            me = this,\n            { input, _tooltip } = me;\n\n        if (_tooltip) {\n            _tooltip.html = me.value + (me.unit ?? '');\n        }\n\n        if (input && input.value !== String(value)) {\n            input.value = value;\n            me.triggerChange(false);\n        }\n\n        me.updateUI();\n    }\n\n    //endregion\n\n    //region Util\n\n    updateUI() {\n        const me = this;\n\n        // Don't measure the UI unless we need to\n        me._tooltip?.isVisible && me._tooltip?.alignTo({\n            target : Rectangle.from(me.input).inflate(me.thumbSize / 2, -me.thumbSize / 2),\n            align  : `b-t${Math.round(me.percentProgress)}`\n        });\n    }\n\n    //endregion\n}\n\n// Register this widget type with its Factory\nSlider.initClass();\n"],"names":["arrowKeys","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Slider","Widget","$name","type","configurable","text","showValue","showTooltip","min","max","step","value","unit","thumbSize","tooltip","$config","align","anchor","axisLock","localizableProperties","triggerChangeOnInput","defaultBindProperty","compose","id","disabled","inputId","hasText","Boolean","class","children","input","tag","reference","listeners","change","mouseover","mouseout","label","for","html","focusElement","percentProgress","onInternalKeyDown","e","readOnly","key","stopImmediatePropagation","onInternalChange","updateUI","triggerChange","trigger","onInternalInput","me","parseInt","onInternalMouseOver","_me$tooltip","thumbPosition","rtl","showBy","target","Rectangle","from","inflate","Math","round","onInternalMouseOut","_this$tooltip","hide","userAction","triggerFieldChange","valid","updateMax","_value","updateMin","changeTooltip","config","existingTooltip","owner","Tooltip","reconfigure","defaults","forElement","String","changeValue","ObjectHelper","roundTo","updateValue","_tooltip","_me$_tooltip","_me$_tooltip2","isVisible","alignTo","initClass","_$name"],"mappings":"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"}