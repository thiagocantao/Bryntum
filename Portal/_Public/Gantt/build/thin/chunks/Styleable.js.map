{"version":3,"file":"Styleable.js","sources":["../../../../Core/lib/Core/widget/mixin/Styleable.js"],"sourcesContent":["import Base from '../../Base.js';\nimport ObjectHelper from '../../helper/ObjectHelper.js';\nimport StringHelper from '../../helper/StringHelper.js';\n\n/**\n * @module Core/widget/mixin/Styleable\n */\n\n/**\n * Mixin for widgets that allows manipulating CSS variables. Works by setting style properties of the target widgets\n * element.\n *\n * As part of configuration:\n *\n * ```javascript\n * const taskBoard = new TaskBoard({\n *    css : {\n *        cardBorderTop    : '5px solid currentColor',\n *        columnBackground : '#ddd'\n *    }\n * });\n * ```\n *\n * And/or at runtime:\n *\n * ```javascript\n * taskBoard.css.cardBackground = '#333';\n * ```\n *\n * @mixin\n */\nexport default Target => class Styleable extends (Target || Base) {\n    static $name = 'Styleable';\n\n    static configurable = {\n        /**\n         * CSS variable prefix, appended to the keys used in {@link #config-css}.\n         *\n         * For example:\n         *\n         * ```javascript\n         * {\n         *    cssVarPrefix : 'taskboard',\n         *\n         *    css : {\n         *        cardBackground : '#333'\n         *    }\n         * }\n         * ```\n         *\n         * Results in the css var `--taskboard-card-background` being set to `#333`.\n         * @config {String}\n         * @category CSS\n         */\n        cssVarPrefix : '',\n\n        /**\n         * Allows runtime manipulating of CSS variables.\n         *\n         * See {@link #config-css} for more information.\n         *\n         * ```javascript\n         * taskBoard.css.columnBackground = '#ccc';\n         *\n         * // Will set \"--taskboard-column-background : #ccc\"\n         * ```\n         *\n         * @member {Proxy} css\n         * @category DOM\n         */\n\n        /**\n         * Initial CSS variables to set.\n         *\n         * Each key will be applied as a CSS variable to the target elements style. Key names are hyphenated and\n         * prefixed with {@link #config-cssVarPrefix} in the process. For example:\n         *\n         * ```javascript\n         * {\n         *    cssVarPrefix : 'taskboard',\n         *\n         *    css : {\n         *        cardBackground : '#333'\n         *    }\n         * }\n         * ```\n         *\n         * Results in the css var `--taskboard-card-background` being set to `#333`.\n         *\n         * @config {Object}\n         * @category CSS\n         */\n        css : {}\n    };\n\n    changeCssVarPrefix(prefix) {\n        ObjectHelper.assertString(prefix, 'prefix');\n\n        if (prefix && !prefix.endsWith('-')) {\n            prefix = prefix + '-';\n        }\n\n        return prefix || '';\n    }\n\n    changeCss(css) {\n        ObjectHelper.assertObject(css, 'css');\n\n        const me = this;\n\n        if (!globalThis.Proxy) {\n            throw new Error('Proxy not supported');\n        }\n\n        const proxy = new Proxy({}, {\n            get(target, property) {\n                // <remove-on-release>\n                // TODO: Worth keeping the live css object? Or just overhead if not often used?\n                // </remove-on-release>\n                const styles = getComputedStyle(me.element || document.documentElement);\n                return styles.getPropertyValue(`--${me.cssVarPrefix}${StringHelper.hyphenate(property)}`)?.trim();\n            },\n\n            set(target, property, value) {\n                const element = me.element || document.documentElement;\n                element.style.setProperty(`--${me.cssVarPrefix}${StringHelper.hyphenate(property)}`, value);\n                return true;\n            }\n        });\n\n        if (css) {\n            if (me._element) {\n                ObjectHelper.assign(proxy, css);\n            }\n            else {\n                me.$initialCSS = css;\n            }\n        }\n\n        return proxy;\n    }\n\n    // Apply any initially supplied CSS when we have an element\n    updateElement(element, ...args) {\n        super.updateElement(element, ...args);\n\n        if (this.$initialCSS) {\n            ObjectHelper.assign(this.css, this.$initialCSS);\n        }\n    }\n\n    get widgetClass() {}\n};\n"],"names":["Target","Styleable","Base","$name","configurable","cssVarPrefix","css","changeCssVarPrefix","prefix","ObjectHelper","assertString","endsWith","changeCss","assertObject","me","globalThis","Proxy","Error","proxy","get","target","property","_styles$getPropertyVa","styles","getComputedStyle","element","document","documentElement","getPropertyValue","StringHelper","hyphenate","trim","set","value","style","setProperty","_element","assign","$initialCSS","updateElement","args","widgetClass"],"mappings":"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"}