{"version":3,"file":"TabPanel.js","sources":["../../../../Core/lib/Core/util/WebSocketManager.js","../../../../Core/lib/Core/widget/FieldSet.js","../../../../Core/lib/Core/widget/Radio.js","../../../../Core/lib/Core/widget/RadioGroup.js","../../../../Core/lib/Core/widget/Tab.js","../../../../Core/lib/Core/widget/TabBar.js","../../../../Core/lib/Core/widget/TabPanel.js"],"sourcesContent":["import Base from '../Base.js';\nimport Events from '../mixin/Events.js';\n\n/**\n * @module Core/helper/WebSocketManager\n */\n\n/**\n * This class allows to send and receive messages from websocket server passing responses via events. This helper is\n * meant to be used with a demo websocket server. It sends messages that are JSON strings including \"command\" key and\n * arbitrary data keys. For example:\n *\n * ```javascript\n * // request string to notify other clients that new client is connected\n * \"{ \\\"command\\\": \\\"hello\\\", \\\"userName\\\": \\\"new user\\\" }\"\n *\n * // response message from the websocket server with list of connected users\n * \"{ \\\"command\\\": \\\"users\\\", \\\"users\\\": [\\\"new user\\\"] }\"\n * ```\n *\n * Usage:\n * ```javascript\n * connector = new WebSocketManager({\n *     address     : 'ws://localhost:8080',\n *     userName    : 'Test client',\n *     autoConnect : false\n * });\n *\n * const opened = await connector.open();\n *\n * if (!opened) {\n *     console.log('Could not open connection');\n * }\n *\n * connector.on({\n *     message({ data }) {\n *         console.log(data);\n *     }\n * });\n *\n * // Sends \"{ \\\"command\\\": \\\"hello\\\", \\\"userName\\\": \\\"mark\\\" }\" string to the websocket server\n * // When response arrives helper will log following message: \"{ command: 'users', users: ['mark'] }\"\n * connector.send('hello', { userName : 'mark' });\n * ```\n *\n * @class\n * @extends Core/Base\n * @mixes Core/mixin/Events\n * @private\n */\nexport default class WebSocketManager extends Events(Base) {\n    // This allows to hook into for testing purposes\n    static webSocketImplementation = typeof WebSocket === 'undefined' ? null : WebSocket;\n\n    static configurable = {\n        /**\n         * WebSocket server address\n         * @config {String}\n         */\n        address : '',\n\n        /**\n         * User name allowing to identify client\n         * @config {String}\n         */\n        userName : 'User',\n\n        /**\n         * Connect to websocket server immediately after instantiation\n         * @config {Boolean}\n         */\n        autoConnect : true\n    };\n\n    construct(config = {}) {\n        const me = this;\n\n        super.construct(config);\n\n        me.onWsOpen = me.onWsOpen.bind(me);\n        me.onWsClose = me.onWsClose.bind(me);\n        me.onWsMessage = me.onWsMessage.bind(me);\n        me.onWsError = me.onWsError.bind(me);\n\n        if (me.autoConnect && me.address) {\n            me.open();\n        }\n    }\n\n    doDestroy() {\n        const me = this;\n\n        if (me.connector) {\n            me.detachSocketListeners(me.connector);\n            me.connector.close();\n            me.connector = null;\n        }\n        super.doDestroy();\n    }\n\n    //#region Websocket state\n\n    get isConnecting() {\n        return this.connector?.readyState === this.constructor.webSocketImplementation.CONNECTING;\n    }\n\n    get isOpened() {\n        return this.connector?.readyState === this.constructor.webSocketImplementation.OPEN;\n    }\n\n    get isClosing() {\n        return this.connector?.readyState === this.constructor.webSocketImplementation.CLOSING;\n    }\n\n    get isClosed() {\n        return this.connector?.readyState === this.constructor.webSocketImplementation.CLOSED;\n    }\n\n    //#endregion\n\n    //#region Websocket init\n\n    createWebSocketConnector() {\n        const connector = this.connector = new this.constructor.webSocketImplementation(this.address);\n\n        this.attachSocketListeners(connector);\n    }\n\n    destroyWebSocketConnector() {\n        this.detachSocketListeners(this.connector);\n\n        this.connector.close();\n\n        this.connector = null;\n    }\n\n    attachSocketListeners(connector) {\n        const me = this;\n\n        connector.addEventListener('open', me.onWsOpen);\n        connector.addEventListener('close', me.onWsClose);\n        connector.addEventListener('message', me.onWsMessage);\n        connector.addEventListener('error', me.onWsError);\n    }\n\n    detachSocketListeners(connector) {\n        const me = this;\n\n        connector.removeEventListener('open', me.onWsOpen);\n        connector.removeEventListener('close', me.onWsClose);\n        connector.removeEventListener('message', me.onWsMessage);\n        connector.removeEventListener('error', me.onWsError);\n    }\n\n    //#endregion\n\n    //#region Websocket methods\n\n    /**\n     * Connect to the server and start listening for messages\n     * @returns {Promise} Returns true if connection was successful and false otherwise\n     */\n    async open() {\n        const me = this;\n\n        if (me._openPromise) {\n            return me._openPromise;\n        }\n\n        if (!me.address) {\n            console.warn('Server me.address cannot be empty');\n            return;\n        }\n\n        if (me.isOpened) {\n            return true;\n        }\n\n        me.createWebSocketConnector();\n\n        let detacher;\n\n        // Wait for `open` or `close` event\n        me._openPromise = new Promise(resolve => {\n            detacher = me.ion({\n                open() {\n                    resolve(true);\n                },\n                error() {\n                    resolve(false);\n                }\n            });\n        }).then(value => {\n            // Detach listeners\n            detacher();\n\n            // Cleanup the promise\n            me._openPromise = null;\n\n            // If quit early with a timeout then remove reference to the WebSocket instance\n            if (!value) {\n                me.destroyWebSocketConnector();\n            }\n\n            return value;\n        }).catch(() => {\n            me._openPromise = null;\n            me.destroyWebSocketConnector();\n        });\n\n        return me._openPromise;\n    }\n\n    /**\n     * Close socket and disconnect from the server\n     */\n    close() {\n        if (this.connector) {\n            this.destroyWebSocketConnector();\n            this.trigger('close');\n        }\n    }\n\n    /**\n     * Send data to the websocket server\n     * @param {String} command\n     * @param {*} data\n     */\n    send(command, data = {}) {\n        this.connector?.send(JSON.stringify({ command, ...data }));\n    }\n\n    //#endregion\n\n    //#region websocket event listeners\n\n    onWsOpen(event) {\n        this.trigger('open', { event });\n    }\n\n    onWsClose(event) {\n        this.trigger('close', { event });\n    }\n\n    onWsMessage(message) {\n        try {\n            const data = JSON.parse(message.data);\n            this.trigger('message', { data });\n        }\n        catch (error) {\n            this.trigger('error', { error });\n        }\n    }\n\n    onWsError(error) {\n        this.trigger('error', { error });\n    }\n\n    //#endregion\n}\n","import Panel from './Panel.js';\nimport Labelable from './mixin/Labelable.js';\nimport DomHelper from '../helper/DomHelper.js';\n\n/**\n * @module Core/widget/FieldSet\n */\n\n/**\n * The `FieldSet` widget wraps an <code>&lt;fieldset&gt;</code> element. A fieldset is a specially styled\n * {@link Core.widget.Panel} intended to hold form fields.\n *\n * @extends Core/widget/Panel\n * @mixes Core/widget/mixin/Labelable\n * @classType fieldset\n * @widget\n */\nexport default class FieldSet extends Panel.mixin(Labelable) {\n    //region Config\n    static get $name() {\n        return 'FieldSet';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'fieldset';\n    }\n\n    static get configurable() {\n        return {\n            bodyTag   : 'fieldset',\n            focusable : false,\n\n            /**\n             * Setting this config to `true` assigns a horizontal box layout (`flex-flow: row`) to the items in this\n             * container, while `false` assigns a vertical box layout (`flex-flow: column`).\n             *\n             * By default, this value is automatically determined based on the {@link #config-label} and\n             * {@link #config-labelPosition} configs.\n             * @config {Boolean}\n             */\n            inline : null,\n\n            inlineInternal : null,\n\n            layout : {\n                type       : 'box',\n                horizontal : false\n            }\n        };\n    }\n\n    static get prototypeProperties() {\n        return {\n            flexRowCls : 'b-hbox',\n            flexColCls : 'b-vbox'\n        };\n    }\n\n    //endregion\n\n    //region Composition\n\n    get bodyConfig() {\n        const\n            result = super.bodyConfig,\n            { className } = result,\n            { inlineInternal: inline, hasLabel, title } = this;\n\n        delete result.html;\n\n        className['b-inline'] = inline;\n        className['b-fieldset-has-label'] = hasLabel;\n\n        if (title) {\n            result.children = {\n                // We render the <legend> element for a11y (not 100% sure it is needed)\n                legendElement : {\n                    tag   : 'legend',\n                    text  : title,\n                    class : {\n                        'b-fieldset-legend' : 1\n                    }\n                }\n            };\n        }\n\n        return result;\n    }\n\n    compose() {\n        const { inlineInternal: inline, label, labelCls, labelWidth } = this;\n\n        return {\n            class : {\n                'b-field' : label,\n                'b-vbox'  : !inline  // override panel\n            },\n            children : {\n                'labelElement > headerElement' : (label || null) && {\n                    tag   : 'label',\n                    html  : label,\n                    class : {\n                        'b-label'       : 1,\n                        'b-align-start' : 1,\n                        [labelCls]      : labelCls\n                    },\n                    style : {\n                        width : DomHelper.unitize('width', labelWidth)[1]\n                    }\n                }\n            }\n        };\n    }\n\n    //endregion\n\n    syncInlineInternal() {\n        this.inlineInternal = this.inline ?? (this.label != null && this.labelPosition === 'before');\n    }\n\n    updateDisabled(value, was) {\n        super.updateDisabled(value, was);\n\n        // Needs {}'s to avoid a \"return false\" that ends iteration\n        this.eachWidget(item => {\n            item.disabled = value;\n        }, /* deep = */false);\n    }\n\n    updateInline() {\n        this.syncInlineInternal();\n    }\n\n    updateInlineInternal(inline) {\n        this.layout.horizontal = inline;\n    }\n\n    updateLabel() {\n        this.syncInlineInternal();\n    }\n\n    updateLabelPosition() {\n        this.syncInlineInternal();\n    }\n}\n\n// Register this widget type with its Factory\nFieldSet.initClass();\n","import Checkbox from './Checkbox.js';\n\n/**\n * @module Core/widget/Radio\n */\n\n/**\n * The `Radio` widget wraps an <code>&lt;input type=\"radio\"&gt;</code> element.\n *\n * Color can be specified and you can optionally configure {@link #config-text} to display in a label to the right of\n * the radio button instead of, or in addition to, a standard field {@link #config-label}.\n *\n * {@inlineexample Core/widget/Radio.js vertical}\n *\n * ## Nested Items\n * A radio button can also have a {@link #config-container} of additional {@link Core.widget.Container#config-items}.\n * These items can be displayed immediately following the field's label (which is the default when there is only one\n * item) or below the radio button. This can be controlled using the {@link #config-inline} config.\n *\n * In the demo below notice how additional fields are displayed for the checked radio button:\n *\n * {@inlineexample Core/widget/Radio-items.js vertical}\n *\n * For a simpler way to create a set of radio buttons, see the {@link Core.widget.RadioGroup} widget.\n *\n * @extends Core/widget/Checkbox\n * @classType radio\n * @widget\n */\nexport default class Radio extends Checkbox {\n    //region Config\n    static get $name() {\n        return 'Radio';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'radio';\n    }\n\n    // Factoryable type alias\n    static get alias() {\n        return 'radiobutton';\n    }\n\n    static get configurable() {\n        return {\n            inputType : 'radio',\n\n            /**\n             * Set this to `true` so that clicking a checked radio button will clear its checked state.\n             * @config {Boolean}\n             * @default false\n             */\n            clearable : null,\n\n            uncheckedValue : undefined  // won't store to Container#values when unchecked\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    get textLabelCls() {\n        return super.textLabelCls + ' b-radio-label';\n    }\n\n    //endregion\n\n    internalOnClick(info) {\n        if (super.internalOnClick(info) !== false) {\n            if (this.checked && this.clearable) {\n                this.checked = false;\n            }\n        }\n    }\n\n    updateName(name) {\n        this.toggleGroup = name;\n    }\n\n    // Empty override to get rid of clear trigger\n    updateClearable() {}\n}\n\n// Register this widget type with its Factory\nRadio.initClass();\n","import ObjectHelper from '../helper/ObjectHelper.js';\nimport FieldSet from './FieldSet.js';\nimport Widget from './Widget.js';\n\nimport './Radio.js';\nimport './layout/Box.js';\n\n/**\n * @module Core/widget/RadioGroup\n */\n\n/**\n * The `RadioGroup` widget contains a set of related `{@link Core/widget/Radio}` button widgets.\n *\n * For example, to present three choices and have the user select one of them:\n *\n * ```javascript\n *  {\n *      type    : 'radiogroup',\n *      title   : 'Resolve Conflict',\n *      name    : 'resolution',\n *      value   : 'A',  // the default choice\n *      options : {\n *          A : 'Keep the original version',\n *          B : 'Use the new version',\n *          C : 'Reconcile individual conflicts'\n *      }\n *  }\n * ```\n *\n * {@inlineexample Core/widget/RadioGroup.js}\n *\n * The {@link #config-name} config is required for this widget and it will be assigned to all radio buttons created by\n * processing the {@link #config-options} config.\n *\n * ## Nested Items\n * Radio buttons can also have a {@link Core.widget.Radio#config-container} of additional\n * {@link Core.widget.Container#config-items}. These items can be displayed immediately following the field's label\n * (which is the default when there is only one item) or below the radio button. This can be controlled using the\n * {@link Core.widget.Radio#config-inline} config.\n *\n * In the demo below notice how additional fields are displayed for the checked radio button:\n *\n * {@inlineexample Core/widget/RadioGroupNested.js vertical}\n *\n * @extends Core/widget/FieldSet\n * @classType radiogroup\n * @widget\n */\nexport default class RadioGroup extends FieldSet {\n    //region Config\n    static get $name() {\n        return 'RadioGroup';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'radiogroup';\n    }\n\n    static get configurable() {\n        return {\n            defaultType : 'radio',\n\n            /**\n             * Set this to `true` so that clicking the currently checked radio button will clear the check from all\n             * radio buttons in the group.\n             * @config {Boolean}\n             * @default false\n             */\n            clearable : null,\n\n            /**\n             * The name by which this widget's {@link #property-value} is accessed using the parent container's\n             * {@link Core.widget.Container#property-values}.\n             *\n             * The config must be provided as it is used to set the {@link Core.widget.Radio#config-name} of the\n             * child {@link Core.widget.Radio radio buttons}.\n             * @config {String}\n             */\n            name : null,\n\n            /**\n             * The set of radio button options for this radio button group. This is a shorthand for defining these in\n             * the {@link Core.widget.Container#config-items}. The keys of this object hold the radio button's\n             * {@link Core.widget.Radio#config-checkedValue} while the object values are a string for the radio button's\n             * {@link Core.widget.Radio#config-text} or a config object for that radio button.\n             *\n             * The {@link #property-value} of this radio button group will be one of the keys in this object or `null`\n             * if no radio button is checked.\n             *\n             * For example, consider the following configuration:\n             * ```javascript\n             *  {\n             *      type    : 'radiogroup',\n             *      name    : 'resolution',\n             *      value   : 'A',\n             *      options : {\n             *          A : 'Keep the original version',\n             *          B : 'Use the new version',\n             *          C : 'Reconcile individual conflicts'\n             *      }\n             *  }\n             * ```\n             *\n             * The above is equivalent to this configuration below using {@link #config-items}:\n             * ```javascript\n             *  {\n             *      type  : 'radiogroup',\n             *      items : [{\n             *          text         : 'Keep the original version',\n             *          name         : 'resolution',\n             *          ref          : 'resolution_A',\n             *          checked      : true,\n             *          checkedValue : 'A'\n             *      }, {\n             *          text         : 'Use the new version',\n             *          name         : 'resolution',\n             *          ref          : 'resolution_B',\n             *          checkedValue : 'B'\n             *      }, {\n             *          text         : 'Reconcile individual conflicts',\n             *          name         : 'resolution',\n             *          ref          : 'resolution_C',\n             *          checkedValue : 'C'\n             *      }]\n             *  }\n             * ```\n             * @config {Object<String,String|RadioConfig>} options\n             */\n            options : {\n                value : null,\n\n                $config : {\n                    merge : 'items'\n                }\n            },\n\n            defaultBindProperty : 'value'\n        };\n    }\n\n    get existingOptions() {\n        const { name } = this;\n\n        return this.ensureItems().filter(c => c.name === name);\n    }\n\n    get refPrefix() {\n        return `${this.name || this.ref || this.id}_`;\n    }\n\n    get selected() {\n        return this.existingOptions.filter(c => c.input.checked)[0] || null;\n    }\n\n    /**\n     * This property corresponds to the {@link Core.widget.Radio#config-checkedValue} of the currently\n     * {@link Core.widget.Radio#property-checked} radio button.\n     * @property {String}\n     */\n    get value() {\n        const { selected } = this;\n\n        return selected ? selected.checkedValue : null;\n    }\n\n    set value(v) {\n        this.existingOptions.forEach(c => {\n            c.isConfiguring = this.isConfiguring;\n            c.checked = c.checkedValue === v;\n            c.isConfiguring = false;\n        });\n    }\n\n    ensureItems() {\n        this.getConfig('options');\n\n        return super.ensureItems();\n    }\n\n    changeOptions(options, was) {\n        if (!(options && was && ObjectHelper.isDeeplyEqual(was, options))) {\n            return options;\n        }\n    }\n\n    convertOption(key, option, existing) {\n        const\n            me       = this,\n            { name } = me,\n            ret      = {\n                name,\n                type         : 'radio',\n                value        : key === me.value,\n                ref          : `${me.refPrefix}${key}`,\n                checkedValue : key\n            };\n\n        if (typeof option === 'string') {\n            ret.text = option;\n        }\n        else {\n            ObjectHelper.assign(ret, option);\n        }\n\n        return existing ? Widget.reconfigure(existing, ret) : ret;\n    }\n\n    isOurRadio(item) {\n        // Radio groups could be nested using field containers, so we need isRadio and name equality check:\n        return item.isRadio && item.name === this.name;\n    }\n\n    isolateFieldChange(field) {\n        // if this is one of our radio buttons, swallow the field change:\n        return this.isOurRadio(field);\n    }\n\n    onChildAdd(item) {\n        super.onChildAdd(item);\n\n        if (this.isOurRadio(item)) {\n            item.ion({\n                name         : item.id,\n                beforeChange : 'onRadioItemBeforeChange',\n                change       : 'onRadioItemChange',\n                click        : 'onRadioClick',\n                thisObj      : this\n            });\n        }\n    }\n\n    onChildRemove(item) {\n        if (this.isOurRadio(item)) {\n            this.detachListeners(item.id);\n        }\n\n        super.onChildRemove(item);\n    }\n\n    onRadioClick(ev) {\n        const { source } = ev;\n\n        if (source.checked && this.clearable && source.clearable == null) {\n            source.checked = false;\n        }\n    }\n\n    onRadioItemBeforeChange(ev) {\n        if (ev.checked) {\n            const\n                me = this,\n                { lastValue } = me;\n\n            if (!me.reverting && me.trigger('beforeChange', me.wrapRadioEvent(ev)) === false) {\n                if (lastValue != null && lastValue !== me.value) {\n                    me.reverting = true;\n\n                    ev.source.uncheckToggleGroupMembers();\n                    me.value = lastValue;\n                    me.lastValue = lastValue;\n\n                    me.reverting = false;\n\n                    return false;\n                }\n            }\n        }\n    }\n\n    onRadioItemChange(ev) {\n        const me = this;\n\n        if (ev.checked && !me.reverting) {\n            me.triggerFieldChange(me.wrapRadioEvent(ev));\n            me.lastValue = me.value;\n        }\n    }\n\n    wrapRadioEvent(ev) {\n        return {\n            from       : ev,\n            item       : ev.source,\n            userAction : ev.userAction,\n            lastValue  : this.lastValue,\n            value      : this.value\n        };\n    }\n\n    updateOptions() {\n        const\n            me                     = this,\n            { options, refPrefix } = me,\n            existingOptions        = me.existingOptions.reduce((m, c) => {\n                m[c.ref.substring(refPrefix.length)] = c;\n                return m;\n            }, {});\n\n        let index = 0,\n            key, option;\n\n        if (options) {\n            for (key in options) {\n                option = me.convertOption(key, options[key], existingOptions[key]);\n\n                delete existingOptions[key];\n                me.insert(option, index++);\n            }\n        }\n\n        const existing = Object.values(existingOptions);\n\n        if (existing?.length) {\n            me.remove(existing);\n            existing.forEach(c => c.destroy());\n        }\n    }\n\n    //endregion\n}\n\n// Register this widget type with its Factory\nRadioGroup.initClass();\n","import DomClassList from '../helper/util/DomClassList.js';\nimport FunctionHelper from '../helper/FunctionHelper.js';\nimport Button from './Button.js';\n\n/**\n * @module Core/widget/Tab\n */\n\n/**\n * This widget class is used to present items in a {@link Core.widget.TabPanel} on its {@link Core.widget.TabBar tabBar}.\n * A reference to this widget is stored via the {@link Core.widget.Widget#config-tab} config on the tab panel's items.\n *\n * ```javascript\n * let tabPanel = new TabPanel({\n *  items: [\n *      {\n *          title: 'Settings',\n *          // Tab configs\n *          tab : {\n *              // Show an icon in the tab\n *              icon : 'b-fa b-fa-cog'\n *          },\n *          items: [\n *              ...\n *          ]\n *      }\n *  ]\n * });\n * ```\n *\n * @extends Core/widget/Button\n * @classType tab\n */\nexport default class Tab extends Button {\n    //region Config\n    static get $name() {\n        return 'Tab';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'tab';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * This config is set to `true` when this tab represents the `activeTab` of a {@link Core.widget.TabPanel}. It\n             * is managed by the tab panel is not set directly.\n             * @config {Boolean} active\n             * @default false\n             */\n            active : null,\n\n            /**\n             * This config is set to the ordinal position of this tab in the {@link Core.widget.TabPanel}. It is managed\n             * by the tab panel is not set directly.\n             * @config {Number} index\n             */\n            index : null,\n\n            /**\n             * This config is set to `true` when this tab represents the first tab of a {@link Core.widget.TabPanel}. It\n             * is managed by the tab panel is not set directly.\n             * @config {Boolean} isFirst\n             */\n            isFirst : null,\n\n            /**\n             * This config is set to `true` when this tab represents the last tab of a {@link Core.widget.TabPanel}. It\n             * is managed by the tab panel is not set directly.\n             * @config {Boolean} isLast\n             */\n            isLast : null,\n\n            /**\n             * The {@link Core.widget.Widget} in the {@link Core.widget.TabPanel} corresponding to this tab. This is\n             * managed by the tab panel is not set directly.\n             * @config {Core.widget.Widget} item\n             */\n            item : {\n                value : null,\n\n                $config : 'nullify'\n            },\n\n            itemCls : null,\n\n            /**\n             * The tab panel that owns this tab.\n             * @config {Core.widget.TabPanel} tabPanel\n             */\n            tabPanel : null,\n\n            /**\n             * The config property on this tab that will be set to the value of the {@link #config-titleSource} property\n             * of this tab's {@link #config-item}.\n             *\n             * By default, the {@link #config-text} property of the tab is set to the {@link Core.widget.Widget#config-title}\n             * property of its {@link #config-item}.\n             * @config {String} titleProperty\n             * @default\n             */\n            titleProperty : 'text',\n\n            /**\n             * The config property on this tab's {@link #config-item} that is used to set the value of the\n             * {@link #config-titleProperty} of this tab.\n             *\n             * By default, the {@link #config-text} property of the tab is set to the {@link Core.widget.Widget#config-title}\n             * property of its {@link #config-item}.\n             * @config {String} titleSource\n             * @default\n             */\n            titleSource : 'title',\n\n            role : 'tab'\n        };\n    }\n\n    compose() {\n        const\n            { active, cls, index, isFirst, isLast } = this,\n            setSize = this.owner.visibleChildCount;\n\n        return {\n            tabindex : 0,\n\n            'aria-selected' : active,\n            'aria-setsize'  : setSize,\n            'aria-posinset' : index + 1,\n\n            class : {\n                'b-tabpanel-tab' : 1,\n                'b-active'       : active,\n                'b-tab-first'    : isFirst,\n                'b-tab-last'     : isLast,\n\n                ...cls   // cls is a DomClassList\n            },\n\n            dataset : {\n                index\n            }\n        };\n    }\n\n    //endregion\n\n    updateIndex(index) {\n        this.isFirst = !index;\n    }\n\n    updateItem(item, was) {\n        const me = this;\n\n        if (was?.tab === me) {\n            was.tab = null;\n        }\n\n        if (item) {\n            item.tab = me;\n\n            me[me.titleProperty] = item[me.titleSource];\n            me.itemCls = item.cls;\n            me.ariaElement.setAttribute('aria-controls', item.id);\n            item.role = 'tabpanel';\n        }\n\n        me.itemChangeDetacher?.();\n        me.itemChangeDetacher = item && FunctionHelper.after(item, 'onConfigChange', 'onItemConfigChange', me, {\n            return : false\n        });\n\n        me.itemHideDetacher?.();\n        me.itemHideDetacher = item?.ion({\n            beforeChangeHidden   : 'onItemBeforeChangeHidden',\n            beforeHide           : 'onItemBeforeHide',\n            beforeUpdateDisabled : 'onItemBeforeUpdateDisabled',\n            thisObj              : me,\n            prio                 : 1000 // We must know before the layout intercepts and activates a sibling\n        });\n\n        me.syncMinMax();\n    }\n\n    updateItemCls(cls, was) {\n        const\n            { element } = this,\n            classList = element && DomClassList.from(element?.classList, /* returnEmpty= */true);\n\n        if (element) {\n            classList.remove(was).add(cls);\n            element.className = classList.value;\n        }\n    }\n\n    updateRotate(rotate, was) {\n        if (!rotate !== !was) {\n            this.syncMinMax();\n        }\n    }\n\n    syncMinMax() {\n        const\n            me = this,\n            { rotate, tabPanel } = me;\n\n        // We have to read the configs directly since there are getters that read the DOM styles:\n        let { _minWidth : minWidth, _minHeight : minHeight, _maxWidth : maxWidth, _maxHeight : maxHeight } = me;\n\n        // When a tab rotation changes, we need to pivot the min/max width values with the height values\n        if (tabPanel) {\n            const { tabMinWidth, tabMaxWidth } = tabPanel;\n\n            if (tabMinWidth != null) {\n                if (rotate) {\n                    // if we were previously not rotated, the tabMinWidth may be effecting our minWidth:\n                    if (minWidth === tabMinWidth) {\n                        minWidth = null;\n                    }\n\n                    // noinspection JSSuspiciousNameCombination\n                    minHeight = tabMinWidth;\n                }\n                else {\n                    // if we were previously rotated, the tabMinWidth may be effecting our minHeight:\n                    if (minHeight === tabMinWidth) {\n                        minHeight = null;\n                    }\n\n                    minWidth = tabMinWidth;\n                }\n            }\n\n            if (tabMaxWidth != null) {\n                if (rotate) {\n                    if (maxWidth === tabMaxWidth) {\n                        maxWidth = null;\n                    }\n\n                    // noinspection JSSuspiciousNameCombination\n                    maxHeight = tabMaxWidth;\n                }\n                else {\n                    if (maxHeight === tabMaxWidth) {\n                        maxHeight = null;\n                    }\n\n                    maxWidth = tabMaxWidth;\n                }\n            }\n\n            me.minWidth = minWidth;\n            me.minHeight = minHeight;\n            me.maxWidth = maxWidth;\n            me.maxHeight = maxHeight;\n        }\n    }\n\n    onItemBeforeChangeHidden({ source : hidingChild, hidden }) {\n        // If it's a hide/show that is not part of the layout's deactivating/activating, we must hide/show the tab\n        if (!hidingChild.$isDeactivating && !hidingChild.$isActivating) {\n            const { tabPanel } = this;\n\n            this.hidden = hidden;\n\n            // if tab to hide is active, let's active previous visible and enabled tab\n            if (hidden && hidingChild === tabPanel.activeItem) {\n                tabPanel.activateAvailableTab(hidingChild);\n            }\n        }\n    }\n\n    onItemBeforeHide() {\n        // If it's a hide that is not part of the layout's deactivating, we hide the tab\n        if (!this.item.$isDeactivating) {\n            this.hide();\n        }\n    }\n\n    onItemBeforeUpdateDisabled({ source : disablingChild, disabled }) {\n        const { tabPanel } = this;\n\n        this.disabled = disabled;\n\n        // if tab to disable is active, let's active previous visible and enabled tab\n        if (disablingChild === tabPanel.activeItem) {\n            tabPanel.activateAvailableTab(disablingChild);\n        }\n    }\n\n    onItemConfigChange({ name, value }) {\n        if (name === this.titleSource) {\n            this[this.titleProperty] = value;\n        }\n    }\n}\n\n// Register this widget type with its Factory\nTab.initClass();\n","import Toolbar from './Toolbar.js';\nimport ArrayHelper from '../helper/ArrayHelper.js';\n\nimport './Tab.js';\n\n/**\n * @module Core/widget/TabBar\n */\n\nconst isTab = t => t.isTab;\n\n/**\n * A special toolbar used by {@link Core.widget.TabPanel} to present {@link Core.widget.Tab tabs} for the container's\n * items.\n *\n * The {@link Core.widget.Container#config-items} of a tab bar are typically managed by the tab panel, however,\n * items can be added that do not correspond to items in the tab panel. The {@link Core.widget.Widget#config-weight}\n * config of each tab defaults to 0 or the weight of its corresponding item.\n *\n * @extends Core/widget/Toolbar\n * @classType tabbar\n */\nexport default class TabBar extends Toolbar {\n    static get $name() {\n        return 'TabBar';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'tabbar';\n    }\n\n    static get configurable() {\n        return {\n            defaultType : 'tab',\n\n            overflow : 'scroll',\n\n            role : 'tablist',\n\n            ignoreParentReadOnly : true\n        };\n    }\n\n    get firstTab() {\n        return this.tabAt(0);\n    }\n\n    get lastTab() {\n        return this.tabAt(-1);\n    }\n\n    get tabCount() {\n        return this._items.countOf(isTab);\n    }\n\n    get tabs() {\n        return ArrayHelper.from(this._items, isTab);\n    }\n\n    compose() {\n        return {\n            children : {\n                toolbarContent : {\n                    class : {\n                        'b-tabpanel-tabs' : 1\n                    }\n                }\n            }\n        };\n    }\n\n    indexOfTab(tab) {\n        return this._items.indexOf(tab, isTab);\n    }\n\n    onChildAdd(child) {\n        super.onChildAdd(child);\n\n        if (child.index == null) {\n            this.syncTabs();\n        }\n    }\n\n    onChildRemove(child) {\n        super.onChildRemove(child);\n\n        this.syncTabs();\n    }\n\n    onFocusIn() {\n        const { activeIndex } = this.owner;\n\n        // It must have a numeric active index set up\n        if (!isNaN(activeIndex)) {\n            this.tabs[activeIndex].focus();\n        }\n    }\n\n    syncTabs() {\n        const { tabs } = this;\n\n        for (let i = 0, n = tabs.length; i < n; ++i) {\n            tabs[i].index = i;\n            tabs[i].isFirst = !i;\n            tabs[i].isLast = i === n - 1;\n        }\n    }\n\n    tabAt(index) {\n        return this._items.find(isTab, index) || null;\n    }\n}\n\n// Register this widget type with its Factory\nTabBar.initClass();\n","import ArrayHelper from '../helper/ArrayHelper.js';\nimport ObjectHelper from '../helper/ObjectHelper.js';\nimport Panel from './Panel.js';\nimport Tab from './Tab.js';\n\nimport './TabBar.js';\nimport './layout/Card.js';\nimport GlobalEvents from '../GlobalEvents.js';\n\n/**\n * @module Core/widget/TabPanel\n */\n\nconst isMaximized = w => w.maximized;\n\n/**\n * A tab panel widget which displays a collection of tabs, each of which can contain other widgets (or simple HTML). This\n * widget has a {@link Core.widget.TabBar tab bar} on top of its contents, and each {@link Core.widget.Tab tab} can be\n * customized using the {@link Core.widget.Tab#config-tab} config.\n *\n * @extends Core/widget/Container\n * @example\n * let tabPanel = new TabPanel({\n *  items: [\n *      {\n *          title: 'First',\n *          items: [\n *              { type: 'textfield', label: 'Name' },\n *              ...\n *          ]\n *      }, {\n *          title: 'Settings',\n *          tab : {\n *              // Show an icon in the tab\n *              icon : 'b-fa b-fa-cog'\n *          },\n *          items: [\n *              ...\n *          ]\n *      }\n *  ]\n * });\n *\n * The tab selector buttons are focusable elememts. `Enter` or `Space` activates a tab, and moves\n * focus into the newly visible tab item.\n *\n * @classType tabpanel\n * @inlineexample Core/widget/TabPanel.js\n * @widget\n */\nexport default class TabPanel extends Panel {\n    //region Config\n    static get $name() {\n        return 'TabPanel';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'tabpanel';\n    }\n\n    // Factoryable type alias\n    static get alias() {\n        return 'tabs';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * The index of the initially active tab.\n             * @member {Number} activeTab\n             */\n            /**\n             * The index of the initially active tab.\n             * @config {Number}\n             * @default\n             */\n            activeTab : 0,\n\n            /**\n             * Specifies whether to slide tabs in and out of visibility.\n             * @config {Boolean}\n             * @default\n             */\n            animateTabChange : true,\n\n            /**\n             * Set the height of all tabs to match the tab with the highest content.\n             * @config {Boolean}\n             * @default\n             */\n            autoHeight : false,\n\n            defaultType : 'container',\n\n            focusable : false,\n\n            itemCls : 'b-tabpanel-item',\n\n            layout : {\n                type : 'card'\n            },\n\n            // Prevent child panels from displaying a header unless explicitly configured with one\n            suppressChildHeaders : true,\n\n            tabBar : {\n                type   : 'tabbar',\n                weight : -2000\n            },\n\n            /**\n             * Min width of a tab title. 0 means no minimum width. This is default.\n             * @config {Number}\n             * @default\n             */\n            tabMinWidth : null,\n\n            /**\n             * Max width of a tab title. 0 means no maximum width. This is default.\n             * @config {Number}\n             * @default\n             */\n            tabMaxWidth : null\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    /**\n     * The active tab index. Setting must be done through {@link #property-activeTab}\n     * @property {Number}\n     * @readonly\n     */\n    get activeIndex() {\n        return this.layout.activeIndex;\n    }\n\n    /**\n     * The active child widget. Setting must be done through {@link #property-activeTab}\n     * @property {Core.widget.Widget}\n     * @readonly\n     */\n    get activeItem() {\n        return this.layout.activeItem;\n    }\n\n    get activeTabItemIndex() {\n        const { activeTab, items, tabBar } = this;\n\n        return items.indexOf(tabBar.tabs[activeTab]?.item);\n    }\n\n    get bodyConfig() {\n        return ObjectHelper.merge({\n            className : {\n                'b-tabpanel-body' : 1\n            }\n        }, super.bodyConfig);\n    }\n\n    get focusElement() {\n        const activeTab = this.items[this.activeTab || 0];\n\n        return activeTab?.focusElement || activeTab?.tab?.focusElement;\n    }\n\n    get tabPanelBody() {\n        return this.bodyElement;\n    }\n\n    finalizeInit() {\n        super.finalizeInit();\n\n        const\n            me                    = this,\n            { activeTab, layout } = me,\n            { activeIndex }       = layout,\n            { tabs }              = me.tabBar,\n            activeTabItemIndex    = activeTab >= 0 && activeTab < tabs.length && me.items.indexOf(tabs[activeTab].item);\n\n        if (tabs.length > 0 && (activeTabItemIndex === false || activeTabItemIndex < 0)) {\n            throw new Error(`Invalid activeTab ${activeTab} (${tabs.length} tabs)`);\n        }\n\n        if (activeTabItemIndex !== activeIndex) {\n            // Since we are responding to configuration, we need to sync activeIndex to activeTab as if it were the\n            // initial value of activeIndex. This cannot be done (reasonably) during initialization of the card layout\n            // because of the possibility of tabless items, so we wait until the dust settles on the items, the tabBar\n            // and all other configs, but we must do the tab change silently (since the initial active item is set\n            // without such ceremony) and without animation (to avoid the appearance of the initial tab animating in)\n            layout.setActiveItem(activeTabItemIndex, activeIndex, {\n                animation : false,\n                silent    : true\n            });\n        }\n\n        layout.animateCardChange = me.animateTabChange;\n    }\n\n    onChildAdd(child) {\n        // The layout will hide inactive new items.\n        // And we must add our beforeHide listener *after* call super.\n        super.onChildAdd(child);\n\n        if (!this.initialItems) {\n            const\n                me          = this,\n                { tabBar }  = me,\n                config      = me.makeTabConfig(child),\n                // if child.tab === false, config will be null... no tab for this one\n                firstTab    = config && tabBar?.firstTab,\n                // if there are no tabs yet, this will be the first so we can skip all the indexing...\n                tabBarItems = firstTab && tabBar._items,\n                // not all items have tabs but the new child won't have one yet:\n                tabItems    = firstTab && ArrayHelper.from(me._items, it => it.tab || it === child),\n                // non-tabs could be in the tabBar, but the tabs must be contiguous:\n                index       = firstTab ? tabItems.indexOf(child) + tabBarItems.indexOf(firstTab) : 0;\n\n            if (config && tabBar) {\n                if (firstTab && child.weight == null && index < tabBarItems.count - 1) {\n                    tabBar.insert(config, index);\n                }\n                else {\n                    tabBar.add(config);\n                }\n            }\n        }\n    }\n\n    onChildRemove(child) {\n        const\n            { tab }   = child,\n            { items } = this;\n\n        if (tab) {\n            this.tabBar.remove(tab);\n            tab.destroy();\n        }\n\n        // Removing the active item, then show a sibling if any are left\n        if (child === this.activeItem) {\n            this._activeTab = null;\n            if (items.length) {\n                this.activeTab = items[Math.min(this.activeIndex, items.length - 1)];\n            }\n        }\n\n        super.onChildRemove(child);\n    }\n\n    //endregion\n\n    //region Tabs\n\n    isDisabledOrHiddenTab(tabIndex) {\n        const\n            { tabs } = this.tabBar,\n            tab      = tabs?.[tabIndex];\n        return tab && (tab.disabled || tab.hidden);\n    }\n\n    findAvailableTab(item, delta = 1) {\n        const\n            { tabs }  = this.tabBar,\n            tabCount  = tabs.length,\n            itemIndex = Math.max(0, tabs.indexOf(item.tab));\n\n        if (itemIndex) {\n            delta = -delta;\n        }\n\n        let activeTab;\n\n        for (let n = 1; n <= tabCount; ++n) {\n            //  itemIndex=2, tabCount=5:\n            //               n : 1, 2, 3, 4, 5\n            //      delta =  1 : 3, 4, 0, 1, 2\n            //      delta = -1 : 1, 0, 4, 3, 2\n            activeTab = (itemIndex + ((delta < 0) ? tabCount : 0) + n * delta) % tabCount;\n            if (!this.isDisabledOrHiddenTab(activeTab)) {\n                break;\n            }\n        }\n        return activeTab;\n    }\n\n    activateAvailableTab(item, delta = 1) {\n        this.activeTab = this.findAvailableTab(item, delta);\n    }\n\n    changeActiveTab(activeTab, oldActiveTab) {\n        const\n            me           = this,\n            {\n                tabBar,\n                layout\n            }            = me,\n            { tabCount } = tabBar;\n\n        if (activeTab.isWidget || ObjectHelper.isObject(activeTab)) {\n            // Must be a child widget, so add if it's not already in our items.\n            if (me.items.indexOf(activeTab) === -1) {\n                activeTab = me.add(activeTab);\n            }\n\n            activeTab = tabBar.indexOfTab(activeTab.tab);\n        }\n        else {\n            activeTab = parseInt(activeTab, 10);\n        }\n\n        if (!me.initialItems && tabCount > 0 && (activeTab < -1 || activeTab >= tabCount)) {\n            throw new Error(`Invalid activeTab ${activeTab} (${tabCount} tabs)`);\n        }\n\n        if (me.isDisabledOrHiddenTab(activeTab)) {\n            activeTab = me.findAvailableTab(activeTab);\n        }\n\n        // If we are animating, we must wait until any animation is finished\n        // before we can go ahead and apply the change.\n        if (layout.animateCardChange && layout.cardChangeAnimation) {\n            layout.cardChangeAnimation.then(cardChange => {\n                // If the animation resulted in not where we want, update the activeTab\n                if (cardChange?.activeIndex !== activeTab) {\n                    me._activeTab = activeTab;\n                    me.updateActiveTab(activeTab, oldActiveTab);\n                }\n            });\n        }\n        else {\n            return activeTab;\n        }\n    }\n\n    async updateActiveTab(activeTab, was) {\n        if (!this.initialItems) {\n            const { activeTabItemIndex, layout } = this;\n\n            if (activeTabItemIndex > -1) {\n                const\n                    oldActiveItem = this.items[was],\n                    newActiveItem = this.items[activeTabItemIndex];\n\n                // Avoid no-change\n                if (layout.activeItem !== newActiveItem) {\n                    if (layout.animateCardChange) {\n                        await this.tabSelectionPromise;\n                    }\n\n                    // Focus the active tab's button in TabPanel first so that focus doesn't leave\n                    // the TabPanel when ths active tab hides.\n                    if (oldActiveItem?.containsFocus) {\n                        oldActiveItem.tab.focus();\n                    }\n                    this.tabSelectionPromise = layout.setActiveItem(newActiveItem)?.promise;\n                }\n            }\n        }\n    }\n\n    changeTabBar(bar) {\n        this.getConfig('strips');\n\n        this.strips = {\n            tabBar : bar\n        };\n\n        return this.strips.tabBar;\n    }\n\n    makeTabConfig(item) {\n        const\n            { tab } = item,\n            config  = {\n                item,\n\n                type              : 'tab',\n                tabPanel          : this,\n                disabled          : Boolean(item.disabled),\n                hidden            : item.initialConfig.hidden,\n                weight            : item.weight || 0,\n                internalListeners : {\n                    click   : 'onTabClick',\n                    thisObj : this\n                },\n                localizableProperties : {\n                    // our tabs copy their text from the item's title and so are not directly localized\n                    text : false\n                }\n            };\n\n        if (tab === false) {\n            return null;\n        }\n\n        return ObjectHelper.isObject(tab) ? Tab.mergeConfigs(config, tab) : config;\n    }\n\n    updateItems(items, was) {\n        const\n            me                          = this,\n            { activeTab, initialItems } = me;\n\n        let index = 0,\n            tabs;\n\n        super.updateItems(items, was);\n\n        if (initialItems) {\n            tabs = Array.from(items, it => me.makeTabConfig(it)).filter(it => {\n                if (it) {\n                    it.index = index++;\n                    return true;\n                }\n            });\n\n            if (index) {\n                tabs[0].isFirst = true;\n                tabs[index - 1].isLast = true;\n                tabs[activeTab].active = true;\n\n                me.tabBar.add(tabs);\n                me.activeTab = activeTab;  // now we can validate the activeTab value\n            }\n        }\n    }\n\n    updateTabMinWidth(tabMinWidth) {\n        this.tabBar?.items.forEach(tab => {\n            if (tab.isTab) {\n                tab.minWidth = tabMinWidth;\n            }\n        });\n    }\n\n    updateTabMaxWidth(tabMaxWidth) {\n        this.tabBar?.items.forEach(tab => {\n            if (tab.isTab) {\n                tab.maxWidth = tabMaxWidth;\n            }\n        });\n    }\n\n    //endregion\n\n    //region Auto height\n\n    updateAutoHeight(autoHeight) {\n        this.detachListeners('themeAutoHeight');\n\n        autoHeight && GlobalEvents.ion({\n            name    : 'themeAutoHeight',\n            theme   : 'internalOnThemeChange',\n            thisObj : this\n        });\n\n        this.$measureHeight = autoHeight;\n    }\n\n    applyAutoHeight() {\n        const\n            me                             = this,\n            { layout, activeTab, element } = me,\n            { animateCardChange }          = layout;\n\n        // stop animate to change tabs on back stage.\n        layout.animateCardChange = false;\n\n        // override any previously applied height when measuring\n        me.height = null;\n\n        // Only actually apply a measured height if we are not inside a maximized widget\n        if (!me.up(isMaximized)) {\n            // get the max height comparing all tabs and apply to the tab\n            me.height = Math.max(...me.items.map(tab => {\n                me.activeTab = tab;\n                return element.clientHeight;\n            })) + 1;\n        }\n\n        // Go back to initial configs\n        me.activeTab = activeTab;\n        layout.animateCardChange = animateCardChange;\n\n        me.$measureHeight = false;\n    }\n\n    internalOnThemeChange() {\n        if (this.isVisible) {\n            this.applyAutoHeight();\n        }\n        else {\n            this.$measureHeight = true;\n        }\n    }\n\n    //endregion\n\n    //region Events\n\n    // Called after beforeActiveItemChange has fired and not been vetoed before animation and activeItemChange\n    onBeginActiveItemChange(activeItemChangeEvent) {\n        const\n            tabs                           = this.tabBar.tabs,\n            { activeItem, prevActiveItem } = activeItemChangeEvent;\n\n        // Our UI changes immediately, our state must be accurate\n        this.activeTab = tabs.indexOf(activeItem?.tab);\n\n        // Deactivate previous active tab\n        if (prevActiveItem?.tab) {\n            prevActiveItem.tab.active = false;\n        }\n\n        if (activeItem?.tab) {\n            activeItem.tab.active = true;\n            activeItem.tab.show();\n        }\n    }\n\n    // Auto called because Card layout triggers the beforeActiveItemChange on its owner\n    onBeforeActiveItemChange(activeItemChangeEvent) {\n        /**\n         * The active tab is about to be changed. Return `false` to prevent this.\n         * @event beforeTabChange\n         * @preventable\n         * @param {Number} activeIndex - The new active index.\n         * @param {Core.widget.Widget} activeItem - The new active child widget.\n         * @param {Number} prevActiveIndex - The previous active index.\n         * @param {Core.widget.Widget} prevActiveItem - The previous active child widget.\n         */\n        return this.trigger('beforeTabChange', activeItemChangeEvent);\n    }\n\n    // Auto called because Card layout triggers the activeItemChange on its owner\n    onActiveItemChange(activeItemChangeEvent) {\n        /**\n         * The active tab has changed.\n         * @event tabChange\n         * @param {Number} activeIndex - The new active index.\n         * @param {Core.widget.Widget} activeItem - The new active child widget.\n         * @param {Number} prevActiveIndex - The previous active index.\n         * @param {Core.widget.Widget} prevActiveItem - The previous active child widget.\n         */\n        this.trigger('tabChange', activeItemChangeEvent);\n    }\n\n    onTabClick(event) {\n        this.activeTab = event.source.item;\n    }\n\n    onPaint() {\n        super.onPaint(...arguments);\n\n        // Measure tabs on first paint if configured to do so\n        if (this.$measureHeight) {\n            this.applyAutoHeight();\n        }\n    }\n\n    //endregion\n}\n\n// Register this widget type with its Factory\nTabPanel.initClass();\n"],"names":["WebSocketManager","Events","Base","webSocketImplementation","WebSocket","configurable","address","userName","autoConnect","construct","config","me","onWsOpen","bind","onWsClose","onWsMessage","onWsError","open","doDestroy","connector","detachSocketListeners","close","isConnecting","_this$connector","readyState","constructor","CONNECTING","isOpened","_this$connector2","OPEN","isClosing","_this$connector3","CLOSING","isClosed","_this$connector4","CLOSED","createWebSocketConnector","attachSocketListeners","destroyWebSocketConnector","addEventListener","removeEventListener","_openPromise","console","warn","detacher","Promise","resolve","ion","error","then","value","catch","trigger","send","command","data","_this$connector5","JSON","stringify","event","message","parse","_$name","FieldSet","Panel","mixin","Labelable","$name","type","bodyTag","focusable","inline","inlineInternal","layout","horizontal","prototypeProperties","flexRowCls","flexColCls","bodyConfig","result","className","hasLabel","title","html","children","legendElement","tag","text","class","compose","label","labelCls","labelWidth","style","width","DomHelper","unitize","syncInlineInternal","labelPosition","updateDisabled","was","eachWidget","item","disabled","updateInline","updateInlineInternal","updateLabel","updateLabelPosition","initClass","Radio","Checkbox","alias","inputType","clearable","uncheckedValue","undefined","textLabelCls","internalOnClick","info","checked","updateName","name","toggleGroup","updateClearable","RadioGroup","defaultType","options","$config","merge","defaultBindProperty","existingOptions","ensureItems","filter","c","refPrefix","ref","id","selected","input","checkedValue","v","forEach","isConfiguring","getConfig","changeOptions","ObjectHelper","isDeeplyEqual","convertOption","key","option","existing","ret","assign","Widget","reconfigure","isOurRadio","isRadio","isolateFieldChange","field","onChildAdd","beforeChange","change","click","thisObj","onChildRemove","detachListeners","onRadioClick","ev","source","onRadioItemBeforeChange","lastValue","reverting","wrapRadioEvent","uncheckToggleGroupMembers","onRadioItemChange","triggerFieldChange","from","userAction","updateOptions","reduce","m","substring","length","index","insert","Object","values","remove","destroy","Tab","Button","active","isFirst","isLast","itemCls","tabPanel","titleProperty","titleSource","role","cls","setSize","owner","visibleChildCount","tabindex","dataset","updateIndex","updateItem","_me$itemChangeDetache","_me$itemHideDetacher","tab","ariaElement","setAttribute","itemChangeDetacher","call","FunctionHelper","after","return","itemHideDetacher","beforeChangeHidden","beforeHide","beforeUpdateDisabled","prio","syncMinMax","updateItemCls","element","classList","DomClassList","add","updateRotate","rotate","_minWidth","minWidth","_minHeight","minHeight","_maxWidth","maxWidth","_maxHeight","maxHeight","tabMinWidth","tabMaxWidth","onItemBeforeChangeHidden","hidingChild","hidden","$isDeactivating","$isActivating","activeItem","activateAvailableTab","onItemBeforeHide","hide","onItemBeforeUpdateDisabled","disablingChild","onItemConfigChange","isTab","t","TabBar","Toolbar","overflow","ignoreParentReadOnly","firstTab","tabAt","lastTab","tabCount","_items","countOf","tabs","ArrayHelper","toolbarContent","indexOfTab","indexOf","child","syncTabs","onFocusIn","activeIndex","isNaN","focus","i","n","find","isMaximized","w","maximized","TabPanel","activeTab","animateTabChange","autoHeight","suppressChildHeaders","tabBar","weight","activeTabItemIndex","_tabBar$tabs$activeTa","items","focusElement","_activeTab$tab","tabPanelBody","bodyElement","finalizeInit","Error","setActiveItem","animation","silent","animateCardChange","initialItems","makeTabConfig","tabBarItems","tabItems","it","count","_activeTab","Math","min","isDisabledOrHiddenTab","tabIndex","findAvailableTab","delta","itemIndex","max","changeActiveTab","oldActiveTab","isWidget","isObject","parseInt","cardChangeAnimation","cardChange","updateActiveTab","oldActiveItem","newActiveItem","_layout$setActiveItem","tabSelectionPromise","containsFocus","promise","changeTabBar","bar","strips","Boolean","initialConfig","internalListeners","localizableProperties","mergeConfigs","updateItems","Array","updateTabMinWidth","_this$tabBar","updateTabMaxWidth","_this$tabBar2","updateAutoHeight","GlobalEvents","theme","$measureHeight","applyAutoHeight","height","up","map","clientHeight","internalOnThemeChange","isVisible","onBeginActiveItemChange","activeItemChangeEvent","prevActiveItem","show","onBeforeActiveItemChange","onActiveItemChange","onTabClick","onPaint","arguments"],"mappings":"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5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM+C,KAAK,SAASC,QAAQ,CAAC;AACxC;EACA,WAAW3C,KAAKA,GAAG;AACf,IAAA,OAAO,OAAO,CAAA;AAClB,GAAA;AACA;EACA,WAAWC,IAAIA,GAAG;AACd,IAAA,OAAO,OAAO,CAAA;AAClB,GAAA;AACA;EACA,WAAW2C,KAAKA,GAAG;AACf,IAAA,OAAO,aAAa,CAAA;AACxB,GAAA;EACA,WAAW1G,YAAYA,GAAG;IACtB,OAAO;AACH2G,MAAAA,SAAS,EAAG,OAAO;AACnB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,SAAS,EAAG,IAAI;MAChBC,cAAc,EAAGC,SAAS;KAC7B,CAAA;AACL,GAAA;AACA;AACA;EACA,IAAIC,YAAYA,GAAG;AACf,IAAA,OAAO,KAAK,CAACA,YAAY,GAAG,gBAAgB,CAAA;AAChD,GAAA;AACA;EACAC,eAAeA,CAACC,IAAI,EAAE;IAClB,IAAI,KAAK,CAACD,eAAe,CAACC,IAAI,CAAC,KAAK,KAAK,EAAE;AACvC,MAAA,IAAI,IAAI,CAACC,OAAO,IAAI,IAAI,CAACN,SAAS,EAAE;QAChC,IAAI,CAACM,OAAO,GAAG,KAAK,CAAA;AACxB,OAAA;AACJ,KAAA;AACJ,GAAA;EACAC,UAAUA,CAACC,IAAI,EAAE;IACb,IAAI,CAACC,WAAW,GAAGD,IAAI,CAAA;AAC3B,GAAA;AACA;EACAE,eAAeA,GAAG,EAAC;AACvB,CAAA;AACA;AACAd,KAAK,CAACD,SAAS,EAAE,CAAA;AACjBC,KAAK,CAAC/C,MAAM,GAAG,OAAO;;ACpEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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"}