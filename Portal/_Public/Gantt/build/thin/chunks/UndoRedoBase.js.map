{"version":3,"file":"UndoRedoBase.js","sources":["../../../../Core/lib/Core/widget/base/UndoRedoBase.js"],"sourcesContent":["import Container from '../Container.js';\nimport '../Combo.js';\n\n/**\n * @module Core/widget/base/UndoRedoBase\n */\n\n/**\n * Abstract base class used by UndoRedo widgets in Scheduler and TaskBoard.\n *\n * @extends Core/widget/Container\n * @abstract\n */\nexport default class UndoRedoBase extends Container {\n    static get $name() {\n        return 'UndoRedoBase';\n    }\n\n    static get type() {\n        return 'undoredobase';\n    }\n\n    static get configurable() {\n        return {\n            // Documented on subclasses\n            project : null,\n\n            stm : null,\n\n            /**\n             * Configure as `true` to show \"Undo\" and \"Redo\" as button texts. The buttons always have a tooltip\n             * as a hint to the user as to their purpose.\n             * @config {Boolean}\n             */\n            text : null,\n\n            /**\n             * Button color for the undo and redo buttons. See {@link Core.widget.Button#config-color}.\n             * @config {String}\n             */\n            color : null,\n\n            /**\n             * Configure as `true` to show \"0\" badge on the undo and redo buttons when they have no actions\n             * left to perform. By default when there are no actions, no badge is displayed.\n             * @config {Boolean}\n             */\n            showZeroActionBadge : null,\n\n            cls : 'b-undo-controls b-toolbar',\n\n            layoutStyle : {\n                alignItems : 'stretch',\n                flexFlow   : 'row nowrap',\n                overflow   : 'visible'\n            },\n\n            items : {\n                undoBtn : {\n                    type     : 'button',\n                    icon     : 'b-icon-undo',\n                    tooltip  : 'L{UndoRedo.UndoLastAction}',\n                    onAction : 'up.onUndo'     // 'up.' means method is on a parent Widget.\n                },\n                transactionsCombo : {\n                    type                 : 'combo',\n                    valueField           : 'idx',\n                    editable             : false,\n                    store                : {},\n                    emptyText            : 'L{UndoRedo.NoActions}',\n                    onAction             : 'up.onTransactionSelected',\n                    displayValueRenderer : 'up.transactionsDisplayValueRenderer'\n                },\n                redoBtn : {\n                    type     : 'button',\n                    icon     : 'b-icon-redo',\n                    tooltip  : 'L{UndoRedo.RedoLastAction}',\n                    onAction : 'up.onRedo'\n                }\n            },\n\n            // This is treated as atomic by the Toolbar's menu overflow processing.\n            overflowable : true\n        };\n    }\n\n    afterConstruct() {\n        this.updateUndoRedoControls();\n    }\n\n    updateStm(stm) {\n        this.detachListeners('undoredo');\n\n        stm?.ion({\n            name          : 'undoredo',\n            recordingstop : 'updateUndoRedoControls',\n            restoringstop : 'updateUndoRedoControls',\n            queueReset    : 'updateUndoRedoControls',\n            disabled      : 'updateUndoRedoControls',\n            thisObj       : this\n        });\n    }\n\n    changeItems(items) {\n        const { undoBtn, redoBtn } = items;\n\n        if (this.color) {\n            undoBtn && (undoBtn.color = this.color);\n            redoBtn && (redoBtn.color = this.color);\n        }\n        if (this.text) {\n            undoBtn && (undoBtn.text = 'L{UndoRedo.Undo}');\n            redoBtn && (redoBtn.text = 'L{UndoRedo.Redo}');\n        }\n\n        return super.changeItems(items);\n    }\n\n    updateProject(project) {\n        this.stm = project.stm;\n    }\n\n    fillUndoRedoCombo() {\n        const { transactionsCombo } = this.widgetMap;\n\n        // The transactionsCombo may be configured away if only undo and redo buttons are wanted\n        transactionsCombo && (transactionsCombo.items =\n            [[0, 'Original data'], ...this.stm.queue.map((title, idx) => [idx + 1, title || `Transaction ${idx + 1}`])]\n        );\n    }\n\n    updateUndoRedoControls() {\n        const\n            {\n                stm,\n                showZeroActionBadge\n            } = this,\n            {\n                undoBtn,\n                redoBtn,\n                transactionsCombo\n            } = this.widgetMap;\n\n        undoBtn.badge = stm.position || (showZeroActionBadge ? '0' : '');\n        redoBtn.badge = (stm.length - stm.position) || (showZeroActionBadge ? '0' : '');\n\n        undoBtn.disabled = !stm.canUndo;\n        redoBtn.disabled = !stm.canRedo;\n\n        this.fillUndoRedoCombo();\n\n        if (transactionsCombo) {\n            transactionsCombo.disabled = transactionsCombo.store.count <= 1;\n        }\n    }\n\n    transactionsDisplayValueRenderer(record, combo) {\n        const stmPos = this.stm?.position || 0;\n\n        return `${stmPos} undo actions / ${combo.store.count - stmPos - 1} redo actions`;\n    }\n\n    onUndo() {\n        this.stm.canUndo && this.stm.undo();\n    }\n\n    onRedo() {\n        this.stm.canRedo && this.stm.redo();\n    }\n\n    onTransactionSelected(combo) {\n        const\n            { stm } = this,\n            delta = stm.position - combo.value;\n\n        if (delta > 0) {\n            stm.canUndo && stm.undo(delta);\n        }\n        else if (delta < 0) {\n            stm.canRedo && stm.redo(-delta);\n        }\n    }\n}\n\nUndoRedoBase.initClass();\n"],"names":["UndoRedoBase","Container","$name","type","configurable","project","stm","text","color","showZeroActionBadge","cls","layoutStyle","alignItems","flexFlow","overflow","items","undoBtn","icon","tooltip","onAction","transactionsCombo","valueField","editable","store","emptyText","displayValueRenderer","redoBtn","overflowable","afterConstruct","updateUndoRedoControls","updateStm","detachListeners","ion","name","recordingstop","restoringstop","queueReset","disabled","thisObj","changeItems","updateProject","fillUndoRedoCombo","widgetMap","queue","map","title","idx","badge","position","length","canUndo","canRedo","count","transactionsDisplayValueRenderer","record","combo","_this$stm","stmPos","onUndo","undo","onRedo","redo","onTransactionSelected","delta","value","initClass","_$name"],"mappings":"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"}