{"version":3,"file":"gantt.module.thin.js","sources":["../../../Engine/lib/Engine/quark/model/gantt/ConstrainedByParentMixin.js","../../../Engine/lib/Engine/quark/model/gantt/ConstrainedLateEventMixin.js","../../../Engine/lib/Engine/quark/model/gantt/ScheduledByDependenciesLateEventMixin.js","../../../Engine/lib/Engine/quark/model/gantt/scheduling_modes/FixedEffortDispatcher.js","../../../Engine/lib/Engine/quark/model/gantt/scheduling_modes/FixedEffortMixin.js","../../../Engine/lib/Engine/quark/model/gantt/scheduling_modes/FixedUnitsDispatcher.js","../../../Engine/lib/Engine/quark/model/gantt/scheduling_modes/FixedUnitsMixin.js","../../../Engine/lib/Engine/quark/model/gantt/InactiveEventMixin.js","../../../Engine/lib/Engine/quark/model/gantt/GanttEvent.js","../../../Engine/lib/Engine/quark/model/gantt/HasCriticalPathsMixin.js","../../../Engine/lib/Engine/quark/model/gantt/GanttProjectMixin.js","../../lib/Gantt/column/AddNewColumn.js","../../lib/Gantt/column/GanttDateColumn.js","../../lib/Gantt/column/BaselineStartDateColumn.js","../../lib/Gantt/column/BaselineEndDateColumn.js","../../lib/Gantt/column/BaselineDurationColumn.js","../../lib/Gantt/column/BaselineDurationVarianceColumn.js","../../lib/Gantt/column/BaselineStartVarianceColumn.js","../../lib/Gantt/column/BaselineEndVarianceColumn.js","../../lib/Gantt/widget/CalendarPicker.js","../../lib/Gantt/column/CalendarColumn.js","../../lib/Gantt/column/ConstraintDateColumn.js","../../lib/Gantt/column/ConstraintTypeColumn.js","../../lib/Gantt/column/DeadlineDateColumn.js","../../lib/Gantt/column/EarlyEndDateColumn.js","../../lib/Gantt/column/EarlyStartDateColumn.js","../../lib/Gantt/column/EffortColumn.js","../../lib/Gantt/column/EndDateColumn.js","../../lib/Gantt/column/IgnoreResourceCalendarColumn.js","../../lib/Gantt/column/InactiveColumn.js","../../lib/Gantt/column/LateEndDateColumn.js","../../lib/Gantt/column/LateStartDateColumn.js","../../lib/Gantt/column/ManuallyScheduledColumn.js","../../lib/Gantt/column/MilestoneColumn.js","../../lib/Gantt/column/NameColumn.js","../../lib/Gantt/column/NoteColumn.js","../../lib/Gantt/column/PercentDoneColumn.js","../../lib/Gantt/widget/DependencyField.js","../../lib/Gantt/column/DependencyColumn.js","../../lib/Gantt/column/PredecessorColumn.js","../../lib/Gantt/data/AssignmentsManipulationStore.js","../../lib/Gantt/model/AssignmentModel.js","../../lib/Gantt/localization/En.js","../../lib/Gantt/column/ResourceAssignmentGridResourceColumn.js","../../lib/Gantt/widget/AssignmentGrid.js","../../lib/Gantt/widget/AssignmentPicker.js","../../lib/Gantt/widget/AssignmentField.js","../../lib/Gantt/column/ResourceAssignmentColumn.js","../../lib/Gantt/column/RollupColumn.js","../../lib/Gantt/column/SchedulingDirectionColumn.js","../../lib/Gantt/column/SchedulingModeColumn.js","../../lib/Gantt/column/SequenceColumn.js","../../lib/Gantt/column/ShowInTimelineColumn.js","../../lib/Gantt/column/StartDateColumn.js","../../lib/Gantt/column/SuccessorColumn.js","../../lib/Gantt/column/TotalSlackColumn.js","../../lib/Gantt/column/WBSColumn.js","../../lib/Gantt/column/AllColumns.js","../../lib/Gantt/column/EventModeColumn.js","../../lib/Gantt/column/TimeAxisColumn.js","../../lib/Gantt/data/AssignmentStore.js","../../lib/Gantt/model/CalendarModel.js","../../lib/Gantt/data/CalendarManagerStore.js","../../lib/Gantt/model/DependencyModel.js","../../lib/Gantt/data/DependencyStore.js","../../lib/Gantt/model/ResourceModel.js","../../lib/Gantt/data/ResourceStore.js","../../lib/Gantt/model/Baseline.js","../../lib/Gantt/data/field/WbsField.js","../../lib/Gantt/model/TaskModel.js","../../lib/Gantt/data/TaskStore.js","../../lib/Gantt/feature/Baselines.js","../../lib/Gantt/feature/CellEdit.js","../../lib/Gantt/feature/CriticalPaths.js","../../lib/Gantt/feature/Dependencies.js","../../lib/Gantt/feature/Indicators.js","../../lib/Gantt/feature/Labels.js","../../lib/Gantt/feature/ParentArea.js","../../lib/Gantt/feature/ProgressLine.js","../../lib/Gantt/feature/ProjectLines.js","../../lib/Gantt/feature/Rollups.js","../../lib/Gantt/feature/Summary.js","../../lib/Gantt/feature/TaskCopyPaste.js","../../lib/Gantt/feature/TaskDrag.js","../../lib/Gantt/feature/TaskDragCreate.js","../../lib/Gantt/widget/TaskEditor.js","../../lib/Gantt/feature/TaskEdit.js","../../lib/Gantt/feature/TaskMenu.js","../../lib/Gantt/feature/TaskNonWorkingTime.js","../../lib/Gantt/feature/TaskResize.js","../../lib/Gantt/feature/TaskSegmentDrag.js","../../lib/Gantt/feature/TaskSegmentResize.js","../../lib/Gantt/feature/TaskTooltip.js","../../lib/Gantt/feature/TreeGroup.js","../../lib/Gantt/feature/Versions.js","../../lib/Gantt/feature/export/exporter/GanttExporterMixin.js","../../lib/Gantt/feature/export/exporter/MultiPageExporter.js","../../lib/Gantt/feature/export/exporter/MultiPageVerticalExporter.js","../../lib/Gantt/feature/export/exporter/SinglePageExporter.js","../../lib/Gantt/feature/export/PdfExport.js","../../lib/Gantt/model/CalendarIntervalModel.js","../../lib/Gantt/model/ProjectModel.js","../../lib/Gantt/model/WebSocketProjectModel.js","../../lib/Gantt/util/ProjectGenerator.js","../../lib/Gantt/util/ResourceAssignmentParser.js","../../lib/Gantt/feature/export/MspExport.js","../../lib/Gantt/view/mixin/GanttDom.js","../../lib/Gantt/view/mixin/GanttRegions.js","../../lib/Gantt/view/mixin/GanttScroll.js","../../lib/Gantt/view/mixin/GanttState.js","../../lib/Gantt/view/mixin/GanttStores.js","../../lib/Gantt/view/mixin/GanttTimelineDateMapper.js","../../lib/Gantt/view/mixin/TaskNavigation.js","../../lib/Gantt/view/orientation/NewTaskRendering.js","../../lib/Gantt/view/GanttBase.js","../../lib/Gantt/view/Gantt.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Mixin } from '../../../../ChronoGraph/class/Mixin.js';\nimport { prototypeValue } from '../../../../ChronoGraph/util/Helpers.js';\nimport DateHelper from '../../../../Core/helper/DateHelper.js';\nimport Localizable from '../../../../Core/localization/Localizable.js';\nimport { ConflictResolution, ConstraintInterval, ConstraintIntervalDescription } from '../../../chrono/Conflict.js';\nimport { ConstraintIntervalSide, Direction } from \"../../../scheduling/Types.js\";\nimport { format } from '../../../util/Functions.js';\nimport { BaseEventMixin } from '../scheduler_basic/BaseEventMixin.js';\nimport { HasChildrenMixin } from '../scheduler_basic/HasChildrenMixin.js';\nimport { ConstrainedEarlyEventMixin } from '../scheduler_pro/ConstrainedEarlyEventMixin.js';\nimport \"../../../localization/En.js\";\n//---------------------------------------------------------------------------------------------------------------------\n/**\n * This mixin makes the event to \"inherit\" the constraints from its parent event.\n */\nexport class ConstrainedByParentMixin extends Mixin([BaseEventMixin, HasChildrenMixin, ConstrainedEarlyEventMixin], (base) => {\n    const superProto = base.prototype;\n    class ConstrainedByParentMixin extends base {\n        *maybeSkipNonWorkingTime(date, isForward = true) {\n            const childEvents = yield this.$.childEvents;\n            // summary tasks are simply aligned by their children so they should not skip non-working time at all\n            if (childEvents.size > 0)\n                return date;\n            return yield* superProto.maybeSkipNonWorkingTime.call(this, date, isForward);\n        }\n        *calculateStartDateConstraintIntervals() {\n            const intervals = yield* superProto.calculateStartDateConstraintIntervals.call(this);\n            const parentEvent = yield this.$.parentEvent;\n            if (parentEvent?.graph) {\n                // Child inherits its parent task constraints\n                const parentIntervals = yield parentEvent.$.startDateConstraintIntervals;\n                intervals.push.apply(intervals, parentIntervals);\n            }\n            return intervals;\n        }\n        *calculateEndDateConstraintIntervals() {\n            const intervals = yield* superProto.calculateEndDateConstraintIntervals.call(this);\n            const parentEvent = yield this.$.parentEvent;\n            if (parentEvent?.graph) {\n                // Child inherits its parent task constraints\n                const parentIntervals = yield parentEvent.$.endDateConstraintIntervals;\n                intervals.push.apply(intervals, parentIntervals);\n            }\n            return intervals;\n        }\n        *calculateEarlyStartDateConstraintIntervals() {\n            const intervals = yield* superProto.calculateEarlyStartDateConstraintIntervals.call(this);\n            const parentEvent = yield this.$.parentEvent;\n            if (parentEvent?.graph) {\n                // Child inherits its parent task constraints\n                const parentIntervals = yield parentEvent.$.earlyStartDateConstraintIntervals;\n                intervals.push.apply(intervals, parentIntervals);\n                // If the parent is scheduled manually it should still restrict its children (even though it has no a constraint set)\n                // so we append an artificial constraining interval\n                if ((yield parentEvent.$.manuallyScheduled) && (yield this.$.effectiveDirection).direction === Direction.Forward) {\n                    intervals.push(ManuallyScheduledParentConstraintInterval.new({\n                        owner: parentEvent,\n                        side: ConstraintIntervalSide.Start,\n                        startDate: yield parentEvent.$.startDate\n                    }));\n                }\n            }\n            return intervals;\n        }\n        *calculateEarlyEndDateConstraintIntervals() {\n            const intervals = yield* superProto.calculateEarlyEndDateConstraintIntervals.call(this);\n            const parentEvent = yield this.$.parentEvent;\n            if (parentEvent?.graph) {\n                // Child inherits its parent task constraints\n                const parentIntervals = yield parentEvent.$.earlyEndDateConstraintIntervals;\n                intervals.push.apply(intervals, parentIntervals);\n            }\n            return intervals;\n        }\n    }\n    return ConstrainedByParentMixin;\n}) {\n}\n/**\n * Class implements resolving a scheduling conflict happened due to a parent event\n * [[ConstrainedByParentMixin.manuallyScheduled|manually scheduled state]].\n * It resolves the conflict by setting the event [[ConstrainedByParentMixin.manuallyScheduled|manuallyScheduled]] to `false`.\n */\nexport class DisableManuallyScheduledConflictResolution extends Localizable(ConflictResolution) {\n    static get $name() {\n        return 'RemoveManuallyScheduledParentConstraintConflictResolution';\n    }\n    construct() {\n        super.construct(...arguments);\n        this.event = this.interval.owner;\n    }\n    getDescription() {\n        const { event } = this;\n        return format(this.L('L{descriptionTpl}'), event.name || event.id);\n    }\n    /**\n     * Resolves the conflict by setting the event [[ConstrainedByParentMixin.manuallyScheduled|manuallyScheduled]] to `false`.\n     */\n    resolve() {\n        this.event.manuallyScheduled = false;\n    }\n}\n/**\n * Description builder for an [[ManuallyScheduledParentConstraintInterval|manual parent constraint interval]].\n */\nexport class ManuallyScheduledParentConstraintIntervalDescription extends ConstraintIntervalDescription {\n    static get $name() {\n        return 'ManuallyScheduledParentConstraintIntervalDescription';\n    }\n    /**\n     * Returns description for the provided event constraint interval.\n     * @param interval Constraint interval\n     */\n    static getDescription(interval) {\n        let tpl;\n        switch (interval.side) {\n            case ConstraintIntervalSide.Start:\n                tpl = this.L('L{startDescriptionTpl}');\n                break;\n            case ConstraintIntervalSide.End:\n                tpl = this.L('L{endDescriptionTpl}');\n                break;\n        }\n        return format(tpl, ...this.getDescriptionParameters(interval));\n    }\n    static getDescriptionParameters(interval) {\n        const event = interval.owner;\n        return [\n            DateHelper.format(interval.startDate, this.L('L{dateFormat}')),\n            DateHelper.format(interval.endDate, this.L('L{dateFormat}')),\n            event.name || event.id\n        ];\n    }\n}\n/**\n * Class implements an interval applied by a [[ConstrainedByParentMixin.manuallyScheduled|manually scheduled]] parent event.\n * The interval suggests the only resolution option - disabling [[ConstrainedByParentMixin.manuallyScheduled|manually scheduled]] mode.\n */\nexport class ManuallyScheduledParentConstraintInterval extends ConstraintInterval {\n    getDescription() {\n        return this.descriptionBuilderClass.getDescription(this);\n    }\n    isAffectedByTransaction(transaction) {\n        const event = this.owner;\n        transaction = transaction || event.graph.activeTransaction;\n        const manuallyScheduledQuark = transaction.entries.get(event.$.manuallyScheduled);\n        // new constrained event or modified constraint\n        return !transaction.baseRevision.hasIdentifier(event.$$) ||\n            manuallyScheduledQuark && !manuallyScheduledQuark.isShadow();\n    }\n    /**\n     * Returns possible resolution options for cases when\n     * the interval takes part in a conflict.\n     *\n     * The interval suggests the only resolution option - disabling manual scheduling.\n     */\n    getResolutions() {\n        return this.resolutions || (this.resolutions = [\n            this.resetManuallyScheduledConflictResolutionClass.new({ interval: this })\n        ]);\n    }\n}\n__decorate([\n    prototypeValue(DisableManuallyScheduledConflictResolution)\n], ManuallyScheduledParentConstraintInterval.prototype, \"resetManuallyScheduledConflictResolutionClass\", void 0);\n__decorate([\n    prototypeValue(ManuallyScheduledParentConstraintIntervalDescription)\n], ManuallyScheduledParentConstraintInterval.prototype, \"descriptionBuilderClass\", void 0);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Reject } from \"../../../../ChronoGraph/chrono/Effect.js\";\nimport { Mixin } from '../../../../ChronoGraph/class/BetterMixin.js';\nimport { calculate, field } from '../../../../ChronoGraph/replica/Entity.js';\nimport DateHelper from '../../../../Core/helper/DateHelper.js';\nimport { dateConverter, model_field } from '../../../chrono/ModelFieldAtom.js';\nimport { Direction, TimeUnit, ConstraintIntervalSide } from '../../../scheduling/Types.js';\nimport { MAX_DATE, MIN_DATE, isDateFinite } from \"../../../util/Constants.js\";\nimport { HasChildrenMixin } from '../scheduler_basic/HasChildrenMixin.js';\nimport { ConstrainedEarlyEventMixin, EarlyLateLazyness } from \"../scheduler_pro/ConstrainedEarlyEventMixin.js\";\nimport { ConflictEffect } from '../../../chrono/Conflict.js';\nimport { EffectResolutionResult } from \"../../../chrono/SchedulingIssueEffect.js\";\nimport { ManuallyScheduledParentConstraintInterval } from \"./ConstrainedByParentMixin.js\";\n//---------------------------------------------------------------------------------------------------------------------\n/**\n * This mixin provides the constraint-based as-late-as-possible scheduling. See the [[ConstrainedEarlyEventMixin]]\n * for the description of the ASAP constraints-based scheduling. See [[GanttProjectMixin]] for more details about\n * forward/backward, ASAP/ALAP scheduling.\n *\n * It also provides the facilities for calculating the event's [[totalSlack]] and the [[critical]] flag.\n *\n * The ALAP-specific constraints are accumulated in [[lateStartDateConstraintIntervals]], [[lateEndDateConstraintIntervals]] fields.\n */\nexport class ConstrainedLateEventMixin extends Mixin([ConstrainedEarlyEventMixin, HasChildrenMixin], (base) => {\n    const superProto = base.prototype;\n    class ConstrainedLateEventMixin extends base {\n        /**\n         * Calculation method for the [[lateStartDateConstraintIntervals]]. Returns empty array by default.\n         * Override this method to return some extra constraints for the start date during the ALAP scheduling.\n         */\n        *calculateLateStartDateConstraintIntervals() {\n            const intervals = [];\n            const parentEvent = yield this.$.parentEvent;\n            if (parentEvent) {\n                // Child inherits its parent task constraints\n                const parentIntervals = yield parentEvent.$.lateStartDateConstraintIntervals;\n                intervals.push.apply(intervals, parentIntervals);\n            }\n            return intervals;\n        }\n        /**\n         * Calculation method for the [[lateEndDateConstraintIntervals]]. Returns empty array by default.\n         * Override this method to return some extra constraints for the end date during the ALAP scheduling.\n         */\n        *calculateLateEndDateConstraintIntervals() {\n            const intervals = [];\n            const parentEvent = yield this.$.parentEvent;\n            if (parentEvent) {\n                // Child inherits its parent task constraints\n                const parentIntervals = yield parentEvent.$.lateEndDateConstraintIntervals;\n                intervals.push.apply(intervals, parentIntervals);\n                // If the parent is scheduled manually it should still restrict its children (even though it has no a constraint set)\n                // so we append an artificial constraining interval\n                if ((yield parentEvent.$.manuallyScheduled) && (yield this.$.effectiveDirection).direction === Direction.Backward) {\n                    intervals.push(ManuallyScheduledParentConstraintInterval.new({\n                        side: ConstraintIntervalSide.End,\n                        endDate: yield parentEvent.$.endDate\n                    }));\n                }\n            }\n            return intervals;\n        }\n        /**\n         * The method defines wether the provided child event should be\n         * taken into account when calculating this summary event [[lateStartDate]].\n         * Child events roll up their [[lateStartDate]] values to their summary tasks.\n         * So a summary task [[lateStartDate]] date gets equal to its minimal child [[lateStartDate]].\n         *\n         * If the method returns `true` the child event is taken into account\n         * and if the method returns `false` it's not.\n         * By default the method returns `true` to include all child events data.\n         * @param childEvent Child event to consider.\n         * @returns `true` if the provided event should be taken into account, `false` if not.\n         */\n        *shouldRollupChildLateStartDate(childEvent) {\n            return true;\n        }\n        *calculateMinChildrenLateStartDate() {\n            let result = MAX_DATE;\n            const subEventsIterator = yield* this.subEventsIterable();\n            for (let childEvent of subEventsIterator) {\n                if (!(yield* this.shouldRollupChildLateStartDate(childEvent)))\n                    continue;\n                let childDate;\n                if ((yield childEvent.$.manuallyScheduled) && (yield* childEvent.hasSubEvents())) {\n                    childDate = yield childEvent.$.minChildrenLateStartDate;\n                }\n                childDate = childDate || (yield childEvent.$.lateStartDate);\n                if (childDate && childDate < result)\n                    result = childDate;\n            }\n            return result.getTime() - MAX_DATE.getTime() ? result : null;\n        }\n        *calculateLateStartDateRaw() {\n            // Manually scheduled task treat its current start date as late start date\n            // in case of backward scheduling.\n            // Early dates in that case are calculated the same way it happens for automatic tasks\n            if ((yield this.$.manuallyScheduled) && (yield this.$.effectiveDirection).direction === Direction.Backward) {\n                return yield this.$.startDate;\n            }\n            // Parent task calculate its late start date as minimal late start date of its children\n            if (yield* this.hasSubEvents()) {\n                return yield this.$.minChildrenLateStartDate;\n            }\n            if (!(yield* this.isConstrainedLate())) {\n                return yield this.$.startDate;\n            }\n            // need to use concat instead of directly mutating the `startDateConstraintIntervals` since that is\n            // used as storage for `this.$.lateStartDateConstraintIntervals`\n            const startDateConstraintIntervals = (yield this.$.lateStartDateConstraintIntervals).concat(yield this.$.startDateConstraintIntervals);\n            const endDateConstraintIntervals = (yield this.$.lateEndDateConstraintIntervals).concat(yield this.$.endDateConstraintIntervals);\n            let effectiveInterval = yield* this.calculateEffectiveConstraintInterval(true, startDateConstraintIntervals, endDateConstraintIntervals);\n            if (effectiveInterval === null) {\n                return null;\n            }\n            else if (effectiveInterval.isIntervalEmpty()) {\n                // re-calculate effective resulting interval gathering intersection history\n                effectiveInterval = yield* this.calculateEffectiveConstraintInterval(true, startDateConstraintIntervals, endDateConstraintIntervals, true);\n                const conflict = ConflictEffect.new({\n                    intervals: [...effectiveInterval.intersectionOf]\n                });\n                if ((yield conflict) === EffectResolutionResult.Cancel) {\n                    yield Reject(conflict);\n                }\n                else {\n                    return null;\n                }\n            }\n            return isDateFinite(effectiveInterval.endDate) ? effectiveInterval.endDate : null;\n        }\n        /**\n         * The method defines wether the provided child event should be\n         * taken into account when calculating this summary event [[lateEndDate]].\n         * Child events roll up their [[lateEndDate]] values to their summary tasks.\n         * So a summary task [[lateEndDate]] gets equal to its maximal child [[lateEndDate]].\n         *\n         * If the method returns `true` the child event is taken into account\n         * and if the method returns `false` it's not.\n         * By default the method returns `true` to include all child events data.\n         * @param childEvent Child event to consider.\n         * @returns `true` if the provided event should be taken into account, `false` if not.\n         */\n        *shouldRollupChildLateEndDate(childEvent) {\n            return true;\n        }\n        *calculateMaxChildrenLateEndDate() {\n            let result = MIN_DATE;\n            const subEventsIterator = yield* this.subEventsIterable();\n            for (let childEvent of subEventsIterator) {\n                if (!(yield* this.shouldRollupChildLateEndDate(childEvent)))\n                    continue;\n                let childDate;\n                if ((yield childEvent.$.manuallyScheduled) && (yield* childEvent.hasSubEvents())) {\n                    childDate = yield childEvent.$.maxChildrenLateEndDate;\n                }\n                childDate = childDate || (yield childEvent.$.lateEndDate);\n                if (childDate && childDate > result)\n                    result = childDate;\n            }\n            return result.getTime() - MIN_DATE.getTime() ? result : null;\n        }\n        *calculateLateStartDate() {\n            return yield this.$.lateStartDateRaw;\n        }\n        *calculateLateEndDateRaw() {\n            // Manually scheduled task treat its current end date as late end date\n            // in case of backward scheduling.\n            // Early dates in that case are calculated the same way it happens for automatic tasks\n            if ((yield this.$.manuallyScheduled) && (yield this.$.effectiveDirection).direction === Direction.Backward) {\n                return yield this.$.endDate;\n            }\n            // Parent task calculate its late end date as minimal early end date of its children\n            if (yield* this.hasSubEvents()) {\n                return yield this.$.maxChildrenLateEndDate;\n            }\n            if (!(yield* this.isConstrainedLate())) {\n                return yield this.$.endDate;\n            }\n            const startDateConstraintIntervals = yield this.$.lateStartDateConstraintIntervals;\n            const endDateConstraintIntervals = yield this.$.lateEndDateConstraintIntervals;\n            let effectiveInterval = (yield* this.calculateEffectiveConstraintInterval(false, \n            // need to use concat instead of directly mutating the `startDateConstraintIntervals` since that is\n            // used as storage for `this.$.lateStartDateConstraintIntervals`\n            startDateConstraintIntervals.concat(yield this.$.startDateConstraintIntervals), endDateConstraintIntervals.concat(yield this.$.endDateConstraintIntervals)));\n            if (effectiveInterval === null) {\n                return null;\n            }\n            else if (effectiveInterval.isIntervalEmpty()) {\n                // re-calculate effective resulting interval gathering intersection history\n                effectiveInterval = (yield* this.calculateEffectiveConstraintInterval(false, \n                // need to use concat instead of directly mutating the `startDateConstraintIntervals` since that is\n                // used as storage for `this.$.lateStartDateConstraintIntervals`\n                (yield this.$.lateStartDateConstraintIntervals).concat(yield this.$.startDateConstraintIntervals), (yield this.$.lateEndDateConstraintIntervals).concat(yield this.$.endDateConstraintIntervals), true));\n                const conflict = ConflictEffect.new({\n                    intervals: [...effectiveInterval.intersectionOf]\n                });\n                if ((yield conflict) === EffectResolutionResult.Cancel) {\n                    yield Reject(conflict);\n                }\n                else {\n                    return null;\n                }\n            }\n            return isDateFinite(effectiveInterval.endDate) ? effectiveInterval.endDate : null;\n        }\n        *calculateLateEndDate() {\n            const date = yield this.$.lateEndDateRaw;\n            return yield* this.maybeSkipNonWorkingTime(date, false);\n        }\n        *calculateTotalSlack() {\n            const earlyStartDate = yield this.$.earlyStartDateRaw;\n            const lateStartDate = yield this.$.lateStartDateRaw;\n            const earlyEndDate = yield this.$.earlyEndDateRaw;\n            const lateEndDate = yield this.$.lateEndDateRaw;\n            const slackUnit = yield this.$.slackUnit;\n            let endSlack, result;\n            if ((earlyStartDate && lateStartDate) || (earlyEndDate && lateEndDate)) {\n                if (earlyStartDate && lateStartDate) {\n                    result = yield* this.calculateProjectedDuration(earlyStartDate, lateStartDate, slackUnit);\n                    if (earlyEndDate && lateEndDate) {\n                        endSlack = yield* this.calculateProjectedDuration(earlyEndDate, lateEndDate, slackUnit);\n                        if (endSlack < result)\n                            result = endSlack;\n                    }\n                }\n                else if (earlyEndDate && lateEndDate) {\n                    result = yield* this.calculateProjectedDuration(earlyEndDate, lateEndDate, slackUnit);\n                }\n            }\n            return result;\n        }\n        *calculateCritical() {\n            const totalSlack = yield this.$.totalSlack;\n            return totalSlack <= 0;\n        }\n        *isConstrainedLate() {\n            const startDateIntervals = yield this.$.startDateConstraintIntervals;\n            const endDateIntervals = yield this.$.endDateConstraintIntervals;\n            const lateStartDateConstraintIntervals = yield this.$.lateStartDateConstraintIntervals;\n            const lateEndDateConstraintIntervals = yield this.$.lateEndDateConstraintIntervals;\n            return Boolean(startDateIntervals?.length || endDateIntervals?.length || lateStartDateConstraintIntervals?.length || lateEndDateConstraintIntervals?.length);\n        }\n        *calculateStartDatePure() {\n            const direction = yield this.$.effectiveDirection;\n            if (direction.direction === Direction.Backward) {\n                // early exit if this mixin is not applicable, but only after(!) the direction check\n                // this is because the `isConstrainedLate` yield early constraint intervals, which are generally lazy,\n                // depending on the direction\n                if (!(yield* this.isConstrainedLate()) || (yield this.$.manuallyScheduled) || (yield this.$.unscheduled)) {\n                    return yield* superProto.calculateStartDatePure.call(this);\n                }\n                if (yield* this.hasSubEvents()) {\n                    return yield* this.calculateMinChildrenStartDate();\n                }\n                else\n                    return yield this.$.lateStartDate;\n            }\n            else {\n                return yield* superProto.calculateStartDatePure.call(this);\n            }\n        }\n        *calculateStartDateProposed() {\n            const direction = yield this.$.effectiveDirection;\n            switch (direction.direction) {\n                case Direction.Backward:\n                    // early exit if this mixin is not applicable, but only after(!) the direction check\n                    // this is because the `isConstrainedLate` yield early constraint intervals, which are generally lazy,\n                    // depending on the direction\n                    if (!(yield* this.isConstrainedLate()) || (yield this.$.manuallyScheduled) || (yield this.$.unscheduled)) {\n                        return yield* superProto.calculateStartDateProposed.call(this);\n                    }\n                    if (yield* this.hasSubEvents()) {\n                        return yield* this.calculateMinChildrenStartDate();\n                    }\n                    return (yield this.$.lateStartDate) || (yield* superProto.calculateStartDateProposed.call(this));\n                default:\n                    return yield* superProto.calculateStartDateProposed.call(this);\n            }\n        }\n        *calculateEndDatePure() {\n            const direction = yield this.$.effectiveDirection;\n            if (direction.direction === Direction.Backward) {\n                // early exit if this mixin is not applicable, but only after(!) the direction check\n                // this is because the `isConstrainedLate` yield early constraint intervals, which are generally lazy,\n                // depending on the direction\n                if (!(yield* this.isConstrainedLate()) || (yield this.$.manuallyScheduled) || (yield this.$.unscheduled)) {\n                    return yield* superProto.calculateEndDatePure.call(this);\n                }\n                if (yield* this.hasSubEvents()) {\n                    return yield* this.calculateMaxChildrenEndDate();\n                }\n                else\n                    return yield this.$.lateEndDate;\n            }\n            else {\n                return yield* superProto.calculateEndDatePure.call(this);\n            }\n        }\n        *calculateEndDateProposed() {\n            const direction = yield this.$.effectiveDirection;\n            switch (direction.direction) {\n                case Direction.Backward:\n                    // early exit if this mixin is not applicable, but only after(!) the direction check\n                    // this is because the `isConstrainedLate` yield early constraint intervals, which are generally lazy,\n                    // depending on the direction\n                    if (!(yield* this.isConstrainedLate()) || (yield this.$.manuallyScheduled) || (yield this.$.unscheduled)) {\n                        return yield* superProto.calculateEndDateProposed.call(this);\n                    }\n                    if (yield* this.hasSubEvents()) {\n                        return yield* this.calculateMaxChildrenEndDate();\n                    }\n                    return (yield this.$.lateEndDate) || (yield* superProto.calculateEndDateProposed.call(this));\n                default:\n                    return yield* superProto.calculateEndDateProposed.call(this);\n            }\n        }\n    }\n    __decorate([\n        field({ lazy: EarlyLateLazyness })\n    ], ConstrainedLateEventMixin.prototype, \"minChildrenLateStartDate\", void 0);\n    __decorate([\n        field({ lazy: EarlyLateLazyness })\n    ], ConstrainedLateEventMixin.prototype, \"lateStartDateRaw\", void 0);\n    __decorate([\n        model_field({ type: 'date', persist: false }, { lazy: EarlyLateLazyness, converter: dateConverter, persistent: false })\n    ], ConstrainedLateEventMixin.prototype, \"lateStartDate\", void 0);\n    __decorate([\n        field({ lazy: EarlyLateLazyness })\n    ], ConstrainedLateEventMixin.prototype, \"maxChildrenLateEndDate\", void 0);\n    __decorate([\n        field({ lazy: EarlyLateLazyness })\n    ], ConstrainedLateEventMixin.prototype, \"lateEndDateRaw\", void 0);\n    __decorate([\n        model_field({ type: 'date', persist: false }, { lazy: EarlyLateLazyness, converter: dateConverter, persistent: false })\n    ], ConstrainedLateEventMixin.prototype, \"lateEndDate\", void 0);\n    __decorate([\n        field({ lazy: EarlyLateLazyness })\n    ], ConstrainedLateEventMixin.prototype, \"lateStartDateConstraintIntervals\", void 0);\n    __decorate([\n        field({ lazy: EarlyLateLazyness })\n    ], ConstrainedLateEventMixin.prototype, \"lateEndDateConstraintIntervals\", void 0);\n    __decorate([\n        model_field({ type: 'number', persist: false }, { lazy: EarlyLateLazyness, persistent: false })\n    ], ConstrainedLateEventMixin.prototype, \"totalSlack\", void 0);\n    __decorate([\n        model_field({ type: 'string', defaultValue: TimeUnit.Day, persist: false }, { lazy: EarlyLateLazyness, converter: DateHelper.normalizeUnit, persistent: false })\n    ], ConstrainedLateEventMixin.prototype, \"slackUnit\", void 0);\n    __decorate([\n        model_field({ type: 'boolean', defaultValue: false, persist: false }, { persistent: false, lazy: EarlyLateLazyness })\n    ], ConstrainedLateEventMixin.prototype, \"critical\", void 0);\n    __decorate([\n        calculate('lateStartDateConstraintIntervals')\n    ], ConstrainedLateEventMixin.prototype, \"calculateLateStartDateConstraintIntervals\", null);\n    __decorate([\n        calculate('lateEndDateConstraintIntervals')\n    ], ConstrainedLateEventMixin.prototype, \"calculateLateEndDateConstraintIntervals\", null);\n    __decorate([\n        calculate('minChildrenLateStartDate')\n    ], ConstrainedLateEventMixin.prototype, \"calculateMinChildrenLateStartDate\", null);\n    __decorate([\n        calculate('lateStartDateRaw')\n    ], ConstrainedLateEventMixin.prototype, \"calculateLateStartDateRaw\", null);\n    __decorate([\n        calculate('maxChildrenLateEndDate')\n    ], ConstrainedLateEventMixin.prototype, \"calculateMaxChildrenLateEndDate\", null);\n    __decorate([\n        calculate('lateStartDate')\n    ], ConstrainedLateEventMixin.prototype, \"calculateLateStartDate\", null);\n    __decorate([\n        calculate('lateEndDateRaw')\n    ], ConstrainedLateEventMixin.prototype, \"calculateLateEndDateRaw\", null);\n    __decorate([\n        calculate('lateEndDate')\n    ], ConstrainedLateEventMixin.prototype, \"calculateLateEndDate\", null);\n    __decorate([\n        calculate('totalSlack')\n    ], ConstrainedLateEventMixin.prototype, \"calculateTotalSlack\", null);\n    __decorate([\n        calculate('critical')\n    ], ConstrainedLateEventMixin.prototype, \"calculateCritical\", null);\n    return ConstrainedLateEventMixin;\n}) {\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Mixin } from '../../../../ChronoGraph/class/BetterMixin.js';\nimport { calculate } from '../../../../ChronoGraph/replica/Entity.js';\nimport { isAtomicValue } from '../../../../ChronoGraph/util/Helpers.js';\nimport { ConstraintType, DependencyType, Direction, TimeUnit } from '../../../scheduling/Types.js';\nimport { ScheduledByDependenciesEarlyEventMixin } from \"../scheduler_pro/ScheduledByDependenciesEarlyEventMixin.js\";\nimport { ConstrainedLateEventMixin } from \"./ConstrainedLateEventMixin.js\";\n//---------------------------------------------------------------------------------------------------------------------\n/**\n * This mixin adds support for scheduling event ALAP, by dependencies. All it does is\n * create the \"late\" constraint interval for every outgoing dependency.\n *\n * See [[ConstrainedEarlyEventMixin]] for more details about constraint-based scheduling.\n * See also [[ScheduledByDependenciesEarlyEventMixin]].\n */\nexport class ScheduledByDependenciesLateEventMixin extends Mixin([ScheduledByDependenciesEarlyEventMixin, ConstrainedLateEventMixin], (base) => {\n    const superProto = base.prototype;\n    class ScheduledByDependenciesLateEventMixin extends base {\n        *shouldSuccessorAffectScheduling(dependency) {\n            const toEvent = yield dependency.$.toEvent;\n            // ignore missing target events and inactive dependencies\n            return toEvent && !isAtomicValue(toEvent) && (yield dependency.$.active)\n                // and inactive target events (unless this event is also inactive)\n                && (!(yield toEvent.$.inactive) || (yield this.$.inactive));\n        }\n        *calculateLateStartDateConstraintIntervals() {\n            const intervals = yield* superProto.calculateLateStartDateConstraintIntervals.call(this);\n            const project = this.getProject();\n            const dependencyConstraintIntervalClass = project.dependencyConstraintIntervalClass;\n            let dependency;\n            for (dependency of (yield this.$.outgoingDeps)) {\n                // ignore missing target events and inactive dependencies\n                if (!(yield* this.shouldSuccessorAffectScheduling(dependency)))\n                    continue;\n                const successor = yield dependency.$.toEvent;\n                const manuallyScheduled = yield successor.$.manuallyScheduled;\n                let successorDate;\n                switch (yield dependency.$.type) {\n                    case DependencyType.StartToStart:\n                        successorDate = manuallyScheduled\n                            ? yield successor.$.startDate\n                            : yield successor.$.lateStartDateRaw;\n                        break;\n                    case DependencyType.StartToEnd:\n                        successorDate = manuallyScheduled\n                            ? yield successor.$.endDate\n                            : yield successor.$.lateEndDateRaw;\n                        break;\n                }\n                if (successorDate) {\n                    const lag = yield dependency.$.lag;\n                    const lagUnit = yield dependency.$.lagUnit;\n                    const lagMS = yield* project.$convertDuration(lag, lagUnit, TimeUnit.Millisecond);\n                    const calendar = yield dependency.$.calendar;\n                    // this \"subscribes\" on the calendar's `version` field (which is incremented\n                    // every time when the intervals of the calendar changes)\n                    yield calendar.$.version;\n                    let endDate = successorDate;\n                    // Take lag into account\n                    if (lagMS) {\n                        // Skip non-wroking time forward to constrain the event as late as possible\n                        // (could affect if the event and successor use different calendars)\n                        endDate = calendar.skipNonWorkingTime(calendar.calculateStartDate(successorDate, lagMS));\n                    }\n                    const interval = dependencyConstraintIntervalClass.new({\n                        owner: dependency,\n                        startDate: null,\n                        endDate,\n                    });\n                    intervals.unshift(interval);\n                }\n            }\n            return intervals;\n        }\n        *calculateLateEndDateConstraintIntervals() {\n            const intervals = yield* superProto.calculateLateEndDateConstraintIntervals.call(this);\n            const project = this.getProject();\n            const dependencyConstraintIntervalClass = project.dependencyConstraintIntervalClass;\n            let dependency;\n            for (dependency of (yield this.$.outgoingDeps)) {\n                // ignore missing target events and inactive dependencies\n                if (!(yield* this.shouldSuccessorAffectScheduling(dependency)))\n                    continue;\n                const successor = yield dependency.$.toEvent;\n                const manuallyScheduled = yield successor.$.manuallyScheduled;\n                let successorDate;\n                switch (yield dependency.$.type) {\n                    case DependencyType.EndToEnd:\n                        successorDate = manuallyScheduled\n                            ? yield successor.$.endDate\n                            : yield successor.$.lateEndDateRaw;\n                        break;\n                    case DependencyType.EndToStart:\n                        successorDate = manuallyScheduled\n                            ? yield successor.$.startDate\n                            : yield successor.$.lateStartDateRaw;\n                        break;\n                }\n                if (successorDate) {\n                    const lag = yield dependency.$.lag;\n                    const lagUnit = yield dependency.$.lagUnit;\n                    const lagMS = yield* project.$convertDuration(lag, lagUnit, TimeUnit.Millisecond);\n                    const calendar = yield dependency.$.calendar;\n                    // this \"subscribes\" on the calendar's `version` field (which is incremented\n                    // every time when the intervals of the calendar changes)\n                    yield calendar.$.version;\n                    let endDate = successorDate;\n                    // Take lag into account\n                    if (lagMS) {\n                        // Skip non-wroking time forward to constrain the event as late as possible\n                        // (could affect if the event and successor use different calendars)\n                        endDate = calendar.skipNonWorkingTime(calendar.calculateStartDate(successorDate, lagMS));\n                    }\n                    const interval = dependencyConstraintIntervalClass.new({\n                        owner: dependency,\n                        startDate: null,\n                        endDate,\n                    });\n                    intervals.unshift(interval);\n                }\n            }\n            return intervals;\n        }\n        *calculateEffectiveDirection() {\n            const projectDirection = yield this.getProject().$.effectiveDirection;\n            const ownConstraintType = yield this.$.constraintType;\n            if (projectDirection.direction === Direction.Backward\n                && !(yield this.$.manuallyScheduled)\n                && !((ownConstraintType === ConstraintType.MustStartOn || ownConstraintType === ConstraintType.MustFinishOn)\n                    && Boolean(yield this.$.constraintDate))) {\n                for (const dependency of (yield this.$.outgoingDeps)) {\n                    const successor = yield dependency.$.toEvent;\n                    const hasSuccessor = successor != null && !isAtomicValue(successor);\n                    const constraintType = hasSuccessor ? yield successor.$.constraintType : undefined;\n                    // ignore missing from events, unresolved from events (id given but not resolved),\n                    // inactive dependencies and manually scheduled successors\n                    if (!hasSuccessor || !(yield dependency.$.active) || (yield successor.$.manuallyScheduled)\n                        || ((constraintType === ConstraintType.MustStartOn || constraintType === ConstraintType.MustFinishOn)\n                            && Boolean(yield successor.$.constraintDate)))\n                        continue;\n                    // pick the direction of the successor from the right side\n                    const dependencyType = yield dependency.$.type;\n                    const successorDirection = dependencyType === DependencyType.EndToEnd || dependencyType === DependencyType.StartToEnd\n                        ? yield successor.$.endDateDirection\n                        : yield successor.$.startDateDirection;\n                    if (successorDirection.direction === Direction.Forward)\n                        return {\n                            // our TS version is a bit too old\n                            kind: 'enforced',\n                            direction: Direction.Forward,\n                            enforcedBy: successorDirection.kind === 'enforced'\n                                ? successorDirection.enforcedBy\n                                : successorDirection.kind === 'own'\n                                    ? successor\n                                    : successorDirection.inheritedFrom\n                        };\n                }\n            }\n            return yield* super.calculateEffectiveDirection();\n        }\n    }\n    __decorate([\n        calculate('lateStartDateIntervals')\n    ], ScheduledByDependenciesLateEventMixin.prototype, \"calculateLateStartDateConstraintIntervals\", null);\n    return ScheduledByDependenciesLateEventMixin;\n}) {\n}\n","import { CycleResolution, CycleDescription } from \"../../../../../ChronoGraph/cycle_resolver/CycleResolver.js\";\nimport { durationFormula, DurationVar, endDateFormula, EndDateVar, startDateFormula, StartDateVar } from \"../../scheduler_basic/BaseEventDispatcher.js\";\nimport { effortFormula, EffortVar, endDateByEffortFormula, startDateByEffortFormula, unitsFormula, UnitsVar } from \"../../scheduler_pro/HasEffortDispatcher.js\";\n//---------------------------------------------------------------------------------------------------------------------\nexport const fixedEffortSEDWUGraphDescription = CycleDescription.new({\n    variables: new Set([StartDateVar, EndDateVar, DurationVar, EffortVar, UnitsVar]),\n    formulas: new Set([\n        // the order of formulas is important here - the earlier ones are preferred\n        endDateByEffortFormula,\n        durationFormula,\n        unitsFormula,\n        effortFormula,\n        startDateByEffortFormula,\n        startDateFormula,\n        endDateFormula\n    ])\n});\n//---------------------------------------------------------------------------------------------------------------------\nexport const fixedEffortSEDWUForward = CycleResolution.new({\n    description: fixedEffortSEDWUGraphDescription,\n    defaultResolutionFormulas: new Set([endDateByEffortFormula, durationFormula])\n});\nexport const fixedEffortSEDWUBackward = CycleResolution.new({\n    description: fixedEffortSEDWUGraphDescription,\n    defaultResolutionFormulas: new Set([startDateByEffortFormula, durationFormula])\n});\n","import { HasProposedValue } from \"../../../../../ChronoGraph/chrono/Effect.js\";\nimport { Mixin } from \"../../../../../ChronoGraph/class/BetterMixin.js\";\nimport { Direction, SchedulingMode } from \"../../../../scheduling/Types.js\";\nimport { EffortVar, UnitsVar } from \"../../scheduler_pro/HasEffortDispatcher.js\";\nimport { HasSchedulingModeMixin } from \"../../scheduler_pro/HasSchedulingModeMixin.js\";\nimport { fixedEffortSEDWUBackward, fixedEffortSEDWUForward } from \"./FixedEffortDispatcher.js\";\n//---------------------------------------------------------------------------------------------------------------------\n/**\n * This mixin provides the fixed effort scheduling mode facility. The scheduling mode is controlled with the\n * [[HasSchedulingModeMixin.schedulingMode]] field.\n *\n * See [[HasSchedulingModeMixin]] for more details.\n *\n * In this mode, the effort of the task remains \"fixed\" as the name suggest. It is changed only if there's no other options,\n * for example if both \"duration\" and \"units\" has changed. In other cases, some other variable is updated.\n */\nexport class FixedEffortMixin extends Mixin([HasSchedulingModeMixin], (base) => {\n    const superProto = base.prototype;\n    class FixedEffortMixin extends base {\n        *prepareDispatcher(YIELD) {\n            const schedulingMode = yield* this.effectiveSchedulingMode();\n            if (schedulingMode === SchedulingMode.FixedEffort) {\n                const cycleDispatcher = yield* superProto.prepareDispatcher.call(this, YIELD);\n                if (yield HasProposedValue(this.$.assigned))\n                    cycleDispatcher.addProposedValueFlag(UnitsVar);\n                cycleDispatcher.addKeepIfPossibleFlag(EffortVar);\n                return cycleDispatcher;\n            }\n            else {\n                return yield* superProto.prepareDispatcher.call(this, YIELD);\n            }\n        }\n        cycleResolutionContext(Y) {\n            const schedulingMode = this.effectiveSchedulingModeSync(Y);\n            if (schedulingMode === SchedulingMode.FixedEffort) {\n                const direction = Y(this.$.effectiveDirection);\n                return direction.direction === Direction.Forward || direction.direction === Direction.None ? fixedEffortSEDWUForward : fixedEffortSEDWUBackward;\n            }\n            else {\n                return superProto.cycleResolutionContext.call(this, Y);\n            }\n        }\n    }\n    return FixedEffortMixin;\n}) {\n}\n","import { CycleResolution, CycleDescription } from \"../../../../../ChronoGraph/cycle_resolver/CycleResolver.js\";\nimport { durationFormula, DurationVar, endDateFormula, EndDateVar, startDateFormula, StartDateVar } from \"../../scheduler_basic/BaseEventDispatcher.js\";\nimport { effortFormula, EffortVar, endDateByEffortFormula, startDateByEffortFormula, unitsFormula, UnitsVar } from \"../../scheduler_pro/HasEffortDispatcher.js\";\n//---------------------------------------------------------------------------------------------------------------------\nexport const fixedUnitsSEDWUGraphDescription = CycleDescription.new({\n    variables: new Set([StartDateVar, EndDateVar, DurationVar, EffortVar, UnitsVar]),\n    formulas: new Set([\n        // the order of formulas is important here - the earlier ones are preferred\n        endDateByEffortFormula,\n        durationFormula,\n        effortFormula,\n        unitsFormula,\n        startDateByEffortFormula,\n        startDateFormula,\n        endDateFormula\n    ])\n});\n//---------------------------------------------------------------------------------------------------------------------\nexport const fixedUnitsSEDWUForwardNonEffortDriven = CycleResolution.new({\n    description: fixedUnitsSEDWUGraphDescription,\n    defaultResolutionFormulas: new Set([endDateByEffortFormula, endDateFormula, effortFormula])\n});\nexport const fixedUnitsSEDWUForwardEffortDriven = CycleResolution.new({\n    description: fixedUnitsSEDWUGraphDescription,\n    defaultResolutionFormulas: new Set([endDateByEffortFormula, endDateFormula, durationFormula])\n});\nexport const fixedUnitsSEDWUBackwardNonEffortDriven = CycleResolution.new({\n    description: fixedUnitsSEDWUGraphDescription,\n    defaultResolutionFormulas: new Set([startDateByEffortFormula, startDateFormula, effortFormula])\n});\nexport const fixedUnitsSEDWUBackwardEffortDriven = CycleResolution.new({\n    description: fixedUnitsSEDWUGraphDescription,\n    defaultResolutionFormulas: new Set([startDateByEffortFormula, startDateFormula, durationFormula])\n});\n","import { HasProposedValue } from \"../../../../../ChronoGraph/chrono/Effect.js\";\nimport { Mixin } from \"../../../../../ChronoGraph/class/BetterMixin.js\";\nimport { Direction, SchedulingMode } from \"../../../../scheduling/Types.js\";\nimport { EffortVar, UnitsVar } from \"../../scheduler_pro/HasEffortDispatcher.js\";\nimport { HasSchedulingModeMixin } from \"../../scheduler_pro/HasSchedulingModeMixin.js\";\nimport { fixedUnitsSEDWUBackwardEffortDriven, fixedUnitsSEDWUBackwardNonEffortDriven, fixedUnitsSEDWUForwardEffortDriven, fixedUnitsSEDWUForwardNonEffortDriven } from \"./FixedUnitsDispatcher.js\";\n//---------------------------------------------------------------------------------------------------------------------\n/**\n * This mixin provides the fixed units scheduling mode facility. The scheduling mode is controlled with the\n * [[HasSchedulingModeMixin.schedulingMode]] field.\n *\n * See [[HasSchedulingModeMixin]] for more details.\n *\n * In this mode, the assignment units of the task's assignments remains \"fixed\" as the name suggest.\n * Those are changed only if there's no other options, for example if both \"duration\" and \"effort\" has changed.\n *\n * If the [[HasSchedulingModeMixin.effortDriven]] flag is enabled, effort variable becomes \"fixed\" as well, so normally the \"duration\"\n * variable will change. If that flag is disabled, then \"effort\" will be changed.\n */\nexport class FixedUnitsMixin extends Mixin([HasSchedulingModeMixin], (base) => {\n    const superProto = base.prototype;\n    class FixedUnitsMixin extends base {\n        *prepareDispatcher(YIELD) {\n            const schedulingMode = yield* this.effectiveSchedulingMode();\n            if (schedulingMode === SchedulingMode.FixedUnits) {\n                const cycleDispatcher = yield* superProto.prepareDispatcher.call(this, YIELD);\n                if (yield HasProposedValue(this.$.assigned))\n                    cycleDispatcher.addProposedValueFlag(UnitsVar);\n                if (yield this.$.effortDriven)\n                    cycleDispatcher.addKeepIfPossibleFlag(EffortVar);\n                cycleDispatcher.addKeepIfPossibleFlag(UnitsVar);\n                return cycleDispatcher;\n            }\n            else {\n                return yield* superProto.prepareDispatcher.call(this, YIELD);\n            }\n        }\n        cycleResolutionContext(Y) {\n            const schedulingMode = this.effectiveSchedulingModeSync(Y);\n            if (schedulingMode === SchedulingMode.FixedUnits) {\n                const direction = Y(this.$.effectiveDirection);\n                const effortDriven = Y(this.$.effortDriven);\n                if (direction.direction === Direction.Forward || direction.direction === Direction.None) {\n                    return effortDriven ? fixedUnitsSEDWUForwardEffortDriven : fixedUnitsSEDWUForwardNonEffortDriven;\n                }\n                else {\n                    return effortDriven ? fixedUnitsSEDWUBackwardEffortDriven : fixedUnitsSEDWUBackwardNonEffortDriven;\n                }\n            }\n            else {\n                return superProto.cycleResolutionContext.call(this, Y);\n            }\n        }\n    }\n    return FixedUnitsMixin;\n}) {\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ProposedOrPrevious } from \"../../../../ChronoGraph/chrono/Effect.js\";\nimport { Mixin } from \"../../../../ChronoGraph/class/Mixin.js\";\nimport { calculate, write } from \"../../../../ChronoGraph/replica/Entity.js\";\nimport { ScheduledByDependenciesLateEventMixin } from \"../gantt/ScheduledByDependenciesLateEventMixin.js\";\nexport class InactiveEventMixin extends Mixin([ScheduledByDependenciesLateEventMixin], (base) => {\n    const superProto = base.prototype;\n    class InactiveEventMixin extends base {\n        writeInactive(me, transaction, quark, inactive) {\n            const isLoading = !transaction.baseRevision.hasIdentifier(me);\n            me.constructor.prototype.write.call(this, me, transaction, quark, inactive);\n            // @ts-ignore\n            // Apply parent inactive state to children unless we are loading data or undoing/redoing some changes\n            // in such cases both parent and children data are supposed to be provided\n            if (!isLoading && this.children && !this.stm?.isRestoring) {\n                for (const child of this.children) {\n                    child.inactive = inactive;\n                }\n            }\n        }\n        *calculateInactive() {\n            const inactive = yield ProposedOrPrevious;\n            // A summary task is active if it has at least one active sub-event\n            if (yield* this.hasSubEvents()) {\n                const subEvents = yield* this.subEventsIterable();\n                let activeCnt = 0;\n                for (const subEvent of subEvents) {\n                    // calculate active sub-events count\n                    if (!(yield subEvent.$.inactive))\n                        activeCnt++;\n                }\n                // inactive if it has no active sub-events\n                return !activeCnt;\n            }\n            return inactive;\n        }\n        *shouldRollupChildEffort(child) {\n            return !(yield child.$.inactive) || (yield this.$.inactive);\n        }\n        *shouldRollupChildPercentDoneSummaryData(child) {\n            return !(yield child.$.inactive) || (yield this.$.inactive);\n        }\n        *shouldRollupChildStartDate(child) {\n            // Do not take into account inactive children dates when calculating\n            // their parent start/end dates (unless the parent is also inactive)\n            return !(yield child.$.inactive) || (yield this.$.inactive);\n        }\n        *shouldRollupChildEndDate(child) {\n            // Do not take into account inactive children dates when calculating\n            // their parent start/end dates (unless the parent is also inactive)\n            return !(yield child.$.inactive) || (yield this.$.inactive);\n        }\n        *shouldRollupChildEarlyStartDate(childEvent) {\n            // Do not take into account inactive children dates when calculating\n            // their parent start end dates (unless the parent is also inactive)\n            return !(yield childEvent.$.inactive) || (yield this.$.inactive);\n        }\n        *shouldRollupChildEarlyEndDate(childEvent) {\n            // Do not take into account inactive children dates when calculating\n            // their parent start end dates (unless the parent is also inactive)\n            return !(yield childEvent.$.inactive) || (yield this.$.inactive);\n        }\n        *shouldRollupChildLateStartDate(childEvent) {\n            // Do not take into account inactive children dates when calculating\n            // their parent start end dates (unless the parent is also inactive)\n            return !(yield childEvent.$.inactive) || (yield this.$.inactive);\n        }\n        *shouldRollupChildLateEndDate(childEvent) {\n            // Do not take into account inactive children dates when calculating\n            // their parent start end dates (unless the parent is also inactive)\n            return !(yield childEvent.$.inactive) || (yield this.$.inactive);\n        }\n    }\n    __decorate([\n        write('inactive')\n    ], InactiveEventMixin.prototype, \"writeInactive\", null);\n    __decorate([\n        calculate('inactive')\n    ], InactiveEventMixin.prototype, \"calculateInactive\", null);\n    return InactiveEventMixin;\n}) {\n}\n","import { MixinAny } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { SchedulerProEvent } from \"../scheduler_pro/SchedulerProEvent.js\";\nimport { ConstrainedByParentMixin } from \"./ConstrainedByParentMixin.js\";\nimport { ConstrainedLateEventMixin } from \"./ConstrainedLateEventMixin.js\";\nimport { ScheduledByDependenciesLateEventMixin } from \"./ScheduledByDependenciesLateEventMixin.js\";\nimport { FixedEffortMixin } from \"./scheduling_modes/FixedEffortMixin.js\";\nimport { FixedUnitsMixin } from \"./scheduling_modes/FixedUnitsMixin.js\";\nimport { InactiveEventMixin } from \"./InactiveEventMixin.js\";\n/**\n * This is an event class, [[GanttProjectMixin]] is working with.\n * It is constructed as [[SchedulerProEvent]], enhanced with extra functionality.\n */\nexport class GanttEvent extends MixinAny([\n    SchedulerProEvent,\n    ConstrainedByParentMixin,\n    ConstrainedLateEventMixin,\n    ScheduledByDependenciesLateEventMixin,\n    FixedEffortMixin,\n    FixedUnitsMixin,\n    InactiveEventMixin\n], (base) => {\n    class GanttEvent extends base {\n    }\n    return GanttEvent;\n}) {\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { calculate, field } from \"../../../../ChronoGraph/replica/Entity.js\";\nimport { HasChildrenMixin } from \"../scheduler_basic/HasChildrenMixin.js\";\n/**\n * This is a mixin, adding critical path calculation to the event node.\n *\n * Scheduling-wise it adds *criticalPaths* field to an entity mixing it.\n *\n * For more details on the _critical path method_ please check this article: https://en.wikipedia.org/wiki/Critical_path_method\n */\nexport class HasCriticalPathsMixin extends Mixin([HasChildrenMixin], (base) => {\n    const superProto = base.prototype;\n    class HasCriticalPathsMixin extends base {\n        *calculateCriticalPaths() {\n            const paths = [], pathsToProcess = [], events = yield this.$.childEvents, eventsToProcess = [...events], projectEndDate = yield this.$.endDate;\n            // First collect events we'll start collecting paths from.\n            // We need to start from critical events w/o incoming dependencies\n            let event;\n            while ((event = eventsToProcess.shift())) {\n                const childEvents = yield event.$.childEvents, eventIsCritical = yield event.$.critical, eventIsActive = !(yield event.$.inactive), eventEndDate = yield event.$.endDate;\n                // register a new path finishing at the event\n                if (eventIsActive && eventEndDate && eventEndDate.getTime() - projectEndDate.getTime() === 0 && eventIsCritical) {\n                    pathsToProcess.push([{ event }]);\n                }\n                eventsToProcess.push(...childEvents);\n            }\n            let path;\n            // fetch paths one by one and process\n            while ((path = pathsToProcess.shift())) {\n                let taskIndex = path.length - 1, node;\n                // get the path last event\n                while ((node = path[taskIndex])) {\n                    const criticalPredecessorNodes = [];\n                    // collect critical successors\n                    for (const dependency of (yield node.event.$.incomingDeps)) {\n                        const event = yield dependency.$.fromEvent;\n                        // if we found a critical predecessor\n                        if (event && (yield dependency.$.active) && !(yield event.$.inactive) && (yield event.$.critical)) {\n                            criticalPredecessorNodes.push({ event, dependency });\n                        }\n                    }\n                    // if critical predecessor(s) found\n                    if (criticalPredecessorNodes.length) {\n                        // make a copy of the path leading part\n                        const pathCopy = path.slice();\n                        // append the found predecessor to the path\n                        path.push(criticalPredecessorNodes[0]);\n                        // if we found more than one predecessor we start new path as: leading path + predecessor\n                        for (let i = 1; i < criticalPredecessorNodes.length; i++) {\n                            pathsToProcess.push(pathCopy.concat(criticalPredecessorNodes[i]));\n                        }\n                        // increment counter to process the predecessor we've appended to the path\n                        taskIndex++;\n                    }\n                    else {\n                        // no predecessors -> stop the loop\n                        taskIndex = -1;\n                    }\n                }\n                // we collected the path backwards so let's reverse it\n                paths.push(path.reverse());\n            }\n            return paths;\n        }\n    }\n    __decorate([\n        field({ lazy: true })\n    ], HasCriticalPathsMixin.prototype, \"criticalPaths\", void 0);\n    __decorate([\n        calculate('criticalPaths')\n    ], HasCriticalPathsMixin.prototype, \"calculateCriticalPaths\", null);\n    return HasCriticalPathsMixin;\n}) {\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ProposedOrPrevious, UnsafeProposedOrPreviousValueOf } from \"../../../../ChronoGraph/chrono/Effect.js\";\nimport { Mixin } from '../../../../ChronoGraph/class/BetterMixin.js';\nimport { field, calculate } from \"../../../../ChronoGraph/replica/Entity.js\";\nimport { Direction, ProjectType, ConstraintIntervalSide } from '../../../scheduling/Types.js';\nimport { MAX_DATE, MIN_DATE } from '../../../util/Constants.js';\nimport { ChronoEventTreeStoreMixin } from \"../../store/ChronoEventStoreMixin.js\";\nimport { SchedulerProProjectMixin } from \"../scheduler_pro/SchedulerProProjectMixin.js\";\nimport { SchedulerProResourceMixin } from \"../scheduler_pro/SchedulerProResourceMixin.js\";\nimport { ConstrainedLateEventMixin } from \"./ConstrainedLateEventMixin.js\";\nimport { SchedulerProAssignmentMixin } from \"../scheduler_pro/SchedulerProAssignmentMixin.js\";\nimport { GanttEvent } from './GanttEvent.js';\nimport { HasCriticalPathsMixin } from \"./HasCriticalPathsMixin.js\";\nimport { HasEffortMixin } from \"../scheduler_pro/HasEffortMixin.js\";\nimport { ConstraintInterval, ConstraintIntervalDescription } from \"../../../chrono/Conflict.js\";\nimport { format } from \"../../../util/Functions.js\";\nimport \"../../../localization/En.js\";\nimport { prototypeValue } from \"../../../../ChronoGraph/util/Helpers.js\";\n//---------------------------------------------------------------------------------------------------------------------\n/**\n * Gantt project mixin type. At this level, events are called \"tasks\". All scheduling features from the [[SchedulerProProjectMixin]]\n * are preserved. Additionally, tasks inherit constraints from parent tasks. Tasks also receives the [[HasEffortMixin.effort|effort]] field\n * and [[HasSchedulingModeMixin.schedulingMode|schedulingMode]] field.\n *\n * The base event class for this level is [[GanttEvent]]. The base assignment class is [[SchedulerProAssignmentMixin]].\n *\n * At this level, project can be scheduled in backward direction. This is controlled with the [[direction]] field.\n *\n * * Forward ASAP scheduling\n *\n * This is a default, most-used mode. In this mode, the \"base\" date is project start date. If it is not provided,\n * it is calculated as the earliest date of all project tasks. Events are scheduled ASAP, based on the \"early\" constraints\n * (plus \"generic\" constraints).\n *\n * * Forward ALAP scheduling\n *\n * In this mode, the \"base\" date is still project start date. If it is not provided,\n * it is calculated as the earliest date of all project tasks.\n *\n * Events are first scheduled ASAP, based on the \"early\" constraints. This gives the project end date.\n * Now events are scheduled ALAP, using the project end date as the base.\n *\n * The difference between the task position in Forward ASAP and Forward ALAP scheduling is called [[ConstrainedLateEventMixin.totalSlack|\"slack\"]]\n *\n * * Backward ALAP scheduling\n *\n * This is a \"default\" backward scheduling. In this mode, the \"base\" date is project end date. If it is not provided,\n * it is calculated as the latest date of all project tasks. Events are scheduled ALAP, based on the \"late\" constraints\n * (plus \"generic\" constraints).\n *\n * * Backward ASAP scheduling\n *\n * In this mode, the \"base\" date is still project end date. If it is not provided,\n * it is calculated as the latest date of all project tasks.\n *\n * Events are first scheduled ALAP, based on the \"late\" constraints. This gives the project start date.\n * Now events are scheduled ASAP, using the project start date as the base.\n *\n */\nexport class GanttProjectMixin extends Mixin([\n    SchedulerProProjectMixin,\n    HasEffortMixin,\n    ConstrainedLateEventMixin,\n    HasCriticalPathsMixin\n], (base) => {\n    const superProto = base.prototype;\n    class GanttProjectMixin extends base {\n        constructor() {\n            super(...arguments);\n            // this atom is recalculated in every transaction (it is \"self dependent\")\n            // this happens because it is always calculated to the value which is different from\n            // proposed value\n            // this is a \"source of changes\" which we use for `project.startDate/endDate` in case\n            // scanning the children returned `null`\n            // so it will cause the `project.startDate` to always recalculate until it obtain some value\n            this.nonEqual = false;\n        }\n        *calculateNonEqual() {\n            return !(yield ProposedOrPrevious);\n        }\n        get isGanttProjectMixin() {\n            return true;\n        }\n        afterConfigure() {\n            superProto.afterConfigure.apply(this, arguments);\n            this.projectConstraintIntervalClass = this.projectConstraintIntervalClass || ProjectConstraintInterval;\n        }\n        // <remove-on-release>\n        // TODO: SchedulerBasicProjectMixin overrides HasChildrenMixin hasSubEvents and subEventsIterable methods\n        //  so we define the methods here to fix that\n        //  https://github.com/canonic-epicure/typescript-mixin-class/issues/1\n        // </remove-on-release>\n        *hasSubEvents() {\n            const childEvents = yield this.$.childEvents;\n            return childEvents.size > 0;\n        }\n        *subEventsIterable() {\n            return yield this.$.childEvents;\n        }\n        *calculateStartDate() {\n            const direction = yield this.$.effectiveDirection;\n            if (direction.direction === Direction.Forward) {\n                let result = yield ProposedOrPrevious;\n                if (!result) {\n                    result = yield* this.unsafeCalculateInitialMinChildrenStartDateDeep();\n                    if (!result)\n                        yield this.$.nonEqual;\n                }\n                return result;\n            }\n            else if (direction.direction === Direction.Backward) {\n                const startDate = yield* this.calculateMinChildrenStartDate();\n                const endDate = yield this.$.endDate;\n                // Calculated startDate can get after the project endDate\n                // (in case its built based on a manually scheduled task that start after the project finishes).\n                // We set the project startDate to its endDate value then.\n                return startDate && endDate > startDate ? startDate : endDate;\n            }\n        }\n        *calculateEndDate() {\n            const direction = yield this.$.effectiveDirection;\n            if (direction.direction === Direction.Forward) {\n                const startDate = yield this.$.startDate;\n                const endDate = yield* this.calculateMaxChildrenEndDate();\n                // Calculated endDate can be before the project startDate\n                // (in case its built based on a manually scheduled task that finishes before the project starts).\n                // Then it leads to an infinite cycle because of these BaseEventMixin.calculateDurationPure lines:\n                //      if (startDate > endDate) {\n                //          yield Write(this.$.duration, 0, null)\n                //      }\n                // So we simply check if the project endDate got earlier than its start date\n                // and set endDate to startDate value then.\n                // This case is reported in: https://github.com/bryntum/support/issues/3127\n                // and asserted by: 031_manually_scheduled.t.ts\n                return endDate && endDate > startDate ? endDate : startDate;\n            }\n            else if (direction.direction === Direction.Backward) {\n                let result = yield ProposedOrPrevious;\n                if (!result) {\n                    result = yield* this.unsafeCalculateInitialMaxChildrenEndDateDeep();\n                    if (!result)\n                        yield this.$.nonEqual;\n                }\n                return result;\n            }\n        }\n        *shouldRollupChildStartDate(child) {\n            // Do not take into account inactive children dates when calculating start date\n            return !(yield child.$.inactive);\n        }\n        *shouldRollupChildEndDate(child) {\n            // Do not take into account inactive children dates when calculating start date\n            return !(yield child.$.inactive);\n        }\n        *calculateEarlyStartDateConstraintIntervals() {\n            const intervals = yield* superProto.calculateEarlyStartDateConstraintIntervals.call(this);\n            const direction = yield this.$.effectiveDirection;\n            if (direction.direction === Direction.Forward) {\n                const startDate = yield this.$.startDate;\n                startDate && intervals.push(this.projectConstraintIntervalClass.new({\n                    owner: this,\n                    side: ConstraintIntervalSide.Start,\n                    startDate\n                }));\n            }\n            else if (direction.direction === Direction.Backward) {\n                const startDate = yield this.$.lateStartDate;\n                startDate && intervals.push(this.projectConstraintIntervalClass.new({\n                    owner: this,\n                    side: ConstraintIntervalSide.Start,\n                    startDate\n                }));\n            }\n            return intervals;\n        }\n        *calculateLateEndDateConstraintIntervals() {\n            const intervals = yield* superProto.calculateLateEndDateConstraintIntervals.call(this);\n            const direction = yield this.$.effectiveDirection;\n            if (direction.direction === Direction.Forward) {\n                const endDate = yield this.$.earlyEndDate;\n                endDate && intervals.push(this.projectConstraintIntervalClass.new({\n                    owner: this,\n                    side: ConstraintIntervalSide.End,\n                    endDate\n                }));\n            }\n            else if (direction.direction === Direction.Backward) {\n                const endDate = yield this.$.endDate;\n                endDate && intervals.push(this.projectConstraintIntervalClass.new({\n                    owner: this,\n                    side: ConstraintIntervalSide.End,\n                    endDate\n                }));\n            }\n            return intervals;\n        }\n        getDefaultEventModelClass() {\n            return GanttEvent;\n        }\n        getDefaultAssignmentModelClass() {\n            return SchedulerProAssignmentMixin;\n        }\n        getDefaultResourceModelClass() {\n            return SchedulerProResourceMixin;\n        }\n        getDefaultEventStoreClass() {\n            return ChronoEventTreeStoreMixin;\n        }\n        getType() {\n            return ProjectType.Gantt;\n        }\n        // this method is only used to calculated \"initial\" project start date only\n        *unsafeCalculateInitialMinChildrenStartDateDeep() {\n            const childEvents = yield this.$.childEvents;\n            // note, that we does not yield here, as we want to calculate \"initial\" project start date\n            // which will be used only if there's no user input or explicit setting for it\n            // such project date should be calculated as earliest date of all tasks, based on the\n            // \"initial\" data (which includes proposed)\n            if (!childEvents.size)\n                return yield UnsafeProposedOrPreviousValueOf(this.$.startDate);\n            let result = MAX_DATE, child;\n            const toProcess = [...childEvents];\n            while ((child = toProcess.shift())) {\n                let childDate = yield UnsafeProposedOrPreviousValueOf(child.$.startDate);\n                // in case a task has no start date but has end date provided - use that value\n                if (!childDate) {\n                    childDate = yield UnsafeProposedOrPreviousValueOf(child.$.endDate);\n                }\n                if (childDate && childDate < result)\n                    result = childDate;\n                toProcess.push(...yield child.$.childEvents);\n            }\n            return (result.getTime() !== MIN_DATE.getTime() && result.getTime() !== MAX_DATE.getTime()) ? result : null;\n        }\n        *unsafeCalculateInitialMaxChildrenEndDateDeep() {\n            const childEvents = yield this.$.childEvents;\n            // note, that we use \"unsafe\" ProposedOrPrevious effect here, because we only get into this method\n            // if there's no user input for the project end date\n            if (!childEvents.size)\n                return yield UnsafeProposedOrPreviousValueOf(this.$.endDate);\n            let result = MIN_DATE, child;\n            const toProcess = [...childEvents];\n            while ((child = toProcess.shift())) {\n                let childDate = yield UnsafeProposedOrPreviousValueOf(child.$.endDate);\n                // in case a task has no end date but has start date provided - use that value\n                if (!childDate) {\n                    childDate = yield UnsafeProposedOrPreviousValueOf(child.$.startDate);\n                }\n                if (childDate && childDate > result)\n                    result = childDate;\n                toProcess.push(...yield child.$.childEvents);\n            }\n            return (result.getTime() !== MIN_DATE.getTime() && result.getTime() !== MAX_DATE.getTime()) ? result : null;\n        }\n        getDependencyCycleDetectionIdentifiers(fromEvent, toEvent) {\n            return [\n                // @ts-ignore\n                toEvent.$.earlyStartDateConstraintIntervals,\n                // @ts-ignore\n                toEvent.$.earlyEndDateConstraintIntervals,\n                // @ts-ignore\n                toEvent.$.lateEndDateConstraintIntervals,\n                // @ts-ignore\n                toEvent.$.lateStartDateConstraintIntervals\n            ];\n        }\n    }\n    __decorate([\n        field({ equality: () => false })\n    ], GanttProjectMixin.prototype, \"nonEqual\", void 0);\n    __decorate([\n        calculate('nonEqual')\n    ], GanttProjectMixin.prototype, \"calculateNonEqual\", null);\n    return GanttProjectMixin;\n}) {\n}\n/**\n * Class providing a [[ProjectConstraintInterval]] instance description.\n */\nexport class ProjectConstraintIntervalDescription extends ConstraintIntervalDescription {\n    static get $name() {\n        return 'ProjectConstraintIntervalDescription';\n    }\n    static getDescription(interval) {\n        return format(interval.startDate ? this.L('L{startDateDescriptionTpl}') : this.L('L{endDateDescriptionTpl}'), ...this.getDescriptionParameters(interval));\n    }\n}\n/**\n * Class implementing constraining interval applied by a project.\n * A forward scheduled project implicitly restricts tasks to start not early than the project start date\n * and a backward scheduled project restricts tasks to finish not later than the project end date.\n */\nexport class ProjectConstraintInterval extends ConstraintInterval {\n    isAffectedByTransaction(transaction) {\n        const project = this.owner;\n        transaction = transaction || project.graph.activeTransaction;\n        const dateQuark = transaction.entries.get(this.startDate ? project.$.startDate : project.$.endDate);\n        // modified project start (end for BW projects) date\n        return dateQuark && !dateQuark.isShadow();\n    }\n}\n__decorate([\n    prototypeValue(ProjectConstraintIntervalDescription)\n], ProjectConstraintInterval.prototype, \"descriptionBuilderClass\", void 0);\n","import Column from '../../Grid/column/Column.js';\nimport Store from '../../Core/data/Store.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport Combo from '../../Core/widget/Combo.js';\n\n/**\n * @module Gantt/column/AddNewColumn\n */\n\n/**\n * This column allows user to dynamically add columns to the Gantt chart by clicking the column header\n * and picking columns from a combobox.\n *\n * ## Adding a custom column to the combobox\n *\n * In order to appear in the column combobox list a column class have to fulfill these conditions:\n *\n * 1. the class should have a static property `type` with unique string value that will identify the column.\n * 2. the class should be registered with the call to {@link Grid/data/ColumnStore#function-registerColumnType-static ColumnStore.registerColumnType}.\n * 3. the class should have a static property `isGanttColumn` with truthy value.\n * 4. the class should have a static `text` property with column name.\n *\n * For example:\n *\n * ```javascript\n * import ColumnStore from 'gantt-distr/lib/Grid/data/ColumnStore.js';\n * import Column from 'gantt-distr/lib/Grid/column/Column.js';\n *\n * // New column class to display task priority\n * export default class TaskPriorityColumn extends Column {\n *     // unique alias of the column\n *     static get type() {\n *         return 'priority';\n *     }\n *\n *     // indicates that the column should be present in \"Add New...\" column\n *     static get isGanttColumn() {\n *         return true;\n *     }\n *\n *     static get defaults() {\n *         return {\n *             // the column is mapped to \"priority\" field of the Task model\n *             field : 'priority',\n *             // the column title\n *             text  : 'Priority'\n *         };\n *     }\n * }\n *\n * // register new column\n * ColumnStore.registerColumnType(TaskPriorityColumn);\n * ```\n *\n * @extends Grid/column/Column\n * @classType addnew\n * @column\n */\nexport default class AddNewColumn extends Column {\n\n    static get $name() {\n        return 'AddNewColumn';\n    }\n\n    static get type() {\n        return 'addnew';\n    }\n\n    static get defaults() {\n        return {\n            text       : 'L{New Column}',\n            cls        : 'b-new-column-column',\n            draggable  : false,\n            sortable   : false,\n            exportable : false,\n            field      : null,\n            editor     : null\n        };\n    }\n\n    doDestroy() {\n        this._combo?.destroy();\n        super.doDestroy();\n    }\n\n    /**\n     * Returns the combo box field rendered into the header of this column\n     * @property {Core.widget.Combo}\n     * @readonly\n     */\n    get combo() {\n        const\n            me      = this,\n            columns = me.grid.columns;\n\n        return me._combo || (\n            me._combo = new Combo({\n                owner         : me.grid,\n                cls           : 'b-new-column-combo',\n                placeholder   : me.L('L{New Column}'),\n                triggers      : false,\n                autoExpand    : true,\n                store         : me.ganttColumnStore,\n                displayField  : 'text',\n                monitorResize : false,\n                picker        : {\n                    align : {\n                        align    : 't0-b0',\n                        axisLock : true\n                    },\n                    minWidth : 200,\n                    onItem({ record : columnRecord }) {\n                        const newColumn = new columnRecord.value({\n                            region : me.region\n                        }, columns);\n\n                        // Insert the new column before the \"New Column\" column\n                        // then focus it to ensure it is in view.\n                        columns.insert(columns.indexOf(me), newColumn);\n                        newColumn.element.focus();\n                    },\n\n                    // Column elements are rerendered, so the forElement must be kept up to date\n                    onBeforeShow() {\n                        this.forElement = me.element;\n                    }\n                },\n                syncInputFieldValue() {\n                    this.input.value = '';\n                },\n                internalListeners : {\n                    // Keystrokes must not leak up to the Grid where its Navigator will react\n                    keydown({ event }) {\n                        event.stopImmediatePropagation();\n                    }\n                }\n            })\n        );\n    }\n\n    get ganttColumnStore() {\n        // Create a store containing the Gantt column classes.\n        // A filter ensures that column types which are already\n        // present in the grid are not shown.\n        return new Store({\n            data : Object.values(ColumnStore.columnTypes).reduce((result, col) => {\n                // We must ensure that the defaultValues property is calculated\n                // so that we can detect a text property.\n                if (!col.$meta.fields.exposedData) {\n                    col.exposeProperties({});\n                }\n\n                // To be included, a column must have a static isGanttColumn\n                // property which yields a truthy value, and a text value.\n                if (col.isGanttColumn && col.text) {\n                    result.push({\n                        id    : col.type,\n                        text  : col.optionalL(col.text),\n                        value : col\n                    });\n                }\n                return result;\n            }, []),\n            filters : [\n                // A colRecord is only filtered in if the grid columns do not contain an instance.\n                colRecord => !this.grid.columns.some(gridCol => gridCol.constructor === colRecord.value)\n            ],\n            sorters : [\n                { field : 'text' }\n            ]\n        });\n    }\n\n    headerRenderer({ column, headerElement }) {\n        column.combo.render(headerElement);\n    }\n\n    onKeyDown(event) {\n        if (event.key === 'Enter') {\n            this.combo.focus();\n        }\n    }\n\n    updateLocalization() {\n        // reset cached combo to rebuild options store w/ new translated column names\n        if (this._combo) {\n            this._combo.destroy();\n            this._combo = null;\n        }\n\n        super.updateLocalization();\n    }\n}\n\nColumnStore.registerColumnType(AddNewColumn);\n","import DateColumn from '../../Grid/column/DateColumn.js';\n\n/**\n * @module Gantt/column/GanttDateColumn\n */\n\n/**\n * Base column class that displays dates, in the `ll` format by default. If set to `null` uses Gantt's {@link Scheduler.view.mixin.TimelineViewPresets#config-displayDateFormat date format} as a default.\n * The format will be dynamically updated while zooming according to the {@link Scheduler.preset.ViewPreset#field-displayDateFormat} value specified for the ViewPreset being selected.\n *\n * By default, this class hides the left/right arrows to modify the date incrementally, you can enable this with the {@link Grid.column.DateColumn#config-step} config\n * of the {@link #config-editor} config.\n *\n * Default editor is a {@link Core.widget.DateField DateField}.\n *\n * @extends Grid/column/DateColumn\n * @abstract\n */\nexport default class GanttDateColumn extends DateColumn {\n    static $name = 'GanttDateColumn';\n\n    static isGanttColumn = true;\n\n    static get defaults() {\n        return {\n            instantUpdate : true,\n            width         : 130,\n            step          : null,\n\n            /**\n             * The date format used to display dates in this column. If `format` is set to `null`,\n             * the current value of the Gantt's {@link Scheduler.view.mixin.TimelineViewPresets#config-displayDateFormat} will be used to format the date value.\n             * @config {String|null}\n             * @category Common\n             */\n            format : 'll'\n        };\n    }\n\n    construct(data, store) {\n        const me = this;\n\n        me.gantt = store.grid;\n\n        super.construct(data, store);\n\n        // If a format is specified, always stick to it\n        if (me.format) {\n            me.explicitFormat = true;\n        }\n        // Otherwise adapt to gantt's format when it changes\n        else {\n            me.gantt.ion({\n                displayDateFormatChange({ format }) {\n                    if (!me.explicitFormat) {\n                        me.set('format', format);\n                    }\n                }\n            });\n        }\n    }\n\n    set format(format) {\n        this.explicitFormat = true;\n        this.set('format', format);\n    }\n\n    get format() {\n        return (this.explicitFormat && this.data.format) || this.gantt.displayDateFormat;\n    }\n\n    set editor(value) {\n        super.editor = value;\n    }\n\n    // assign the project on the editor, even before any editing has started\n    get editor() {\n        const editor = super.editor;\n\n        if (editor) {\n            editor.project = this.gantt.project;\n        }\n\n        return editor;\n    }\n}\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport GanttDateColumn from '../../Gantt/column/GanttDateColumn.js';\n\n/**\n * @module Gantt/column/BaselineStartDateColumn\n */\n\n/**\n * A column that displays the task baseline start date.\n *\n * @extends Gantt/column/GanttDateColumn\n * @classType baselinestartdate\n * @column\n */\nexport default class BaselineStartDateColumn extends GanttDateColumn {\n\n    static $name = 'BaselineStartDateColumn';\n\n    static type = 'baselinestartdate';\n\n    static defaults = {\n        text  : 'L{baselineStart}',\n        field : 'baselines[0].startDate'\n    };\n\n}\nColumnStore.registerColumnType(BaselineStartDateColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport GanttDateColumn from '../../Gantt/column/GanttDateColumn.js';\nimport '../../SchedulerPro/widget/StartDateField.js';\n\n/**\n * @module Gantt/column/BaselineEndDateColumn\n */\n\n/**\n * A column that displays the task baseline finish date.\n *\n * @extends Gantt/column/GanttDateColumn\n * @classType baselineenddate\n * @column\n */\nexport default class BaselineEndDateColumn extends GanttDateColumn {\n\n    static $name = 'BaselineEndDateColumn';\n\n    static type = 'baselineenddate';\n\n    static defaults = {\n        text  : 'L{baselineEnd}',\n        field : 'baselines[0].endDate'\n    };\n\n}\n\nColumnStore.registerColumnType(BaselineEndDateColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport DurationColumn from '../../Scheduler/column/DurationColumn.js';\n\n/**\n * @module Gantt/column/BaselineDurationColumn\n */\n\n/**\n * A column that displays the task baseline duration.\n *\n * @extends Scheduler/column/DurationColumn\n * @classType baselineduration\n * @column\n */\nexport default class BaselineDurationColumn extends DurationColumn {\n\n    static $name = 'BaselineDurationColumn';\n\n    static type = 'baselineduration';\n\n    static defaults = {\n        text  : 'L{baselineDuration}',\n        field : 'baselines[0].fullDuration'\n    };\n\n}\n\nColumnStore.registerColumnType(BaselineDurationColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport DurationColumn from '../../Scheduler/column/DurationColumn.js';\n\n/**\n * @module Gantt/column/BaselineDurationVarianceColumn\n */\n\n/**\n * A column that displays the task Duration Variance. The duration variance field is \"0 days\" until the\n * task duration varies from the baseline duration. This field is calculated as:\n *\n * ```\n * Duration Variance = Duration - Baseline Duration\n * ```\n *\n * @extends Scheduler/column/DurationColumn\n * @classType baselinedurationvariance\n * @column\n */\nexport default class BaselineDurationVarianceColumn extends DurationColumn {\n\n    static $name = 'BaselineDurationVarianceColumn';\n\n    static type = 'baselinedurationvariance';\n\n    static defaults = {\n        editor : false,\n        text   : 'L{durationVariance}',\n        field  : 'baselines[0].durationVariance'\n    };\n\n}\n\nColumnStore.registerColumnType(BaselineDurationVarianceColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport DurationColumn from '../../Scheduler/column/DurationColumn.js';\n\n/**\n * @module Gantt/column/BaselineStartVarianceColumn\n */\n\n/**\n * A column that displays the task Start Variance. The start variance field is \"0 days\" until the\n * task start date varies from the baseline start date. This field is calculated as:\n *\n * ```\n * Start Variance = Start - Baseline Start\n * ```\n *\n * @extends Scheduler/column/DurationColumn\n * @classType baselinestartvariance\n * @column\n */\nexport default class BaselineStartVarianceColumn extends DurationColumn {\n\n    static $name = 'BaselineStartVarianceColumn';\n\n    static type = 'baselinestartvariance';\n\n    static defaults = {\n        editor : false,\n        text   : 'L{startVariance}',\n        field  : 'baselines[0].startVariance'\n    };\n\n}\n\nColumnStore.registerColumnType(BaselineStartVarianceColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport DurationColumn from '../../Scheduler/column/DurationColumn.js';\n\n/**\n * @module Gantt/column/BaselineEndVarianceColumn\n */\n\n/**\n * A column that displays the task End Variance. The end variance field is \"0 days\" until the\n * task start date varies from the baseline end date. This field is calculated as:\n *\n * ```\n * End Variance = End - Baseline End\n * ```\n *\n * @extends Scheduler/column/DurationColumn\n * @classType baselineendvariance\n * @column\n */\nexport default class BaselineEndVarianceColumn extends DurationColumn {\n\n    static $name = 'BaselineEndVarianceColumn';\n\n    static type = 'baselineendvariance';\n\n    static defaults = {\n        editor : false,\n        text   : 'L{endVariance}',\n        field  : 'baselines[0].endVariance'\n    };\n\n}\n\nColumnStore.registerColumnType(BaselineEndVarianceColumn);\n","import Combo from '../../Core/widget/Combo.js';\nimport Store from '../../Core/data/Store.js';\n\n/**\n * @module Gantt/widget/CalendarPicker\n */\n\n/**\n * Combo box preconfigured with possible calendar values.\n *\n * This field can be used as an editor for the {@link Grid.column.Column Column}.\n * It is used as the default editor for the {@link Gantt.column.CalendarColumn CalendarColumn}.\n * Note: This picker doesn't support {@link Core/widget/Combo#config-multiSelect multiSelect}\n *\n * {@inlineexample Gantt/widget/CalendarPicker.js}\n * @extends Core/widget/Combo\n * @classType calendarpicker\n * @widget\n */\nexport default class CalendarPicker extends Combo {\n\n    static get $name() {\n        return 'CalendarPicker';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'calendarpicker';\n    }\n\n    /**\n     * Replaces the field store records with the provided ones.\n     * @param {Gantt.model.CalendarModel[]} calendars New contents for the widget store.\n     */\n    refreshCalendars(calendars) {\n        this.store.data = calendars.map(c => {\n            return {\n                id   : c.id,\n                text : c.name\n            };\n        });\n    }\n\n    get store() {\n        if (!this._store) {\n            this.store = new Store();\n        }\n\n        return this._store;\n    }\n\n    set store(store) {\n        super.store = store;\n    }\n\n    get value() {\n        return super.value;\n    }\n\n    set value(value) {\n        if (value) {\n            if (value.isDefault && value.isDefault()) {\n                value = null;\n            }\n            else if (value.id) {\n                value = value.id;\n            }\n        }\n\n        super.value = value;\n    }\n}\n\n// Register this widget type with its Factory\nCalendarPicker.initClass();\n","import Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport CalendarPicker from '../widget/CalendarPicker.js';\n\n/**\n * @module Gantt/column/CalendarColumn\n */\n\n/**\n * A column that displays (and allows user to update) the current {@link Gantt.model.CalendarModel calendar} of the task.\n *\n * Default editor is a {@link Gantt.widget.CalendarPicker CalendarPicker}.\n *\n * @extends Grid/column/Column\n * @classType calendar\n * @column\n */\nexport default class CalendarColumn extends Column {\n\n    static get $name() {\n        return 'CalendarColumn';\n    }\n\n    static get type() {\n        return 'calendar';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get defaults() {\n        return {\n            field  : 'calendar',\n            text   : 'L{Calendar}',\n            editor : {\n                type         : CalendarPicker.type,\n                clearable    : true,\n                allowInvalid : false\n            }\n        };\n    }\n\n    afterConstruct() {\n        super.afterConstruct();\n\n        const\n            me      = this,\n            project = me.grid.project;\n\n        // Store default calendar to filter out this value\n        me.defaultCalendar = project.defaultCalendar;\n\n        me.refreshCalendars();\n\n        project.calendarManagerStore.ion({\n            changePreCommit : me.refreshCalendars,\n            refresh         : me.refreshCalendars,\n            thisObj         : me\n        });\n    }\n\n    // region Events\n\n    refreshCalendars() {\n        if (this.editor) {\n            const project = this.grid.project;\n\n            this.editor.refreshCalendars(project.calendarManagerStore.allRecords);\n        }\n    }\n\n    // endregion\n\n    renderer({ value }) {\n        if (value !== this.defaultCalendar && value?.id != null) {\n            const model = this.grid.project.calendarManagerStore.getById(value.id);\n            return model?.name ?? '';\n        }\n        return '';\n    }\n}\n\nColumnStore.registerColumnType(CalendarColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport GanttDateColumn from '../../Gantt/column/GanttDateColumn.js';\n\n/**\n * @module Gantt/column/ConstraintDateColumn\n */\n\n/**\n * A column showing the {@link Gantt/model/TaskModel#field-constraintDate date} of the constraint, applied to the task.\n * The type of the constraint can be displayed with the {@link Gantt/column/ConstraintTypeColumn}.\n *\n * Default editor is a {@link Core/widget/DateField}.\n *\n * If {@link #config-format} is omitted, Gantt's {@link Scheduler/view/mixin/TimelineViewPresets#config-displayDateFormat} will be used as a default value and\n * the format will be dynamically updated while zooming according to the {@link Scheduler/preset/ViewPreset#field-displayDateFormat} value specified for the ViewPreset being selected.\n *\n * @extends Gantt/column/GanttDateColumn\n * @classType constraintdate\n * @column\n */\nexport default class ConstraintDateColumn extends GanttDateColumn {\n\n    static get $name() {\n        return 'ConstraintDateColumn';\n    }\n\n    static get type() {\n        return 'constraintdate';\n    }\n\n    static get defaults() {\n        return {\n            field : 'constraintDate',\n            text  : 'L{Constraint Date}',\n            width : 146\n        };\n    }\n}\n\nColumnStore.registerColumnType(ConstraintDateColumn);\n","import Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport ConstraintTypePicker from '../../SchedulerPro/widget/ConstraintTypePicker.js';\n\n/**\n * @module Gantt/column/ConstraintTypeColumn\n */\nconst directionMap = { Forward : 'assoonaspossible', Backward : 'aslateaspossible' };\n\n/**\n * {@link Gantt/model/TaskModel#field-constraintType Constraint type} column.\n *\n * Default editor is a {@link SchedulerPro/widget/ConstraintTypePicker}.\n *\n * The constraint can be one of:\n *\n * - Must start on [date]\n * - Must finish on [date]\n * - Start no earlier than [date]\n * - Start no later than [date]\n * - Finish no earlier than [date]\n * - Finish no later than [date]\n *\n * The date of the constraint can be specified with the {@link Gantt/column/ConstraintDateColumn}\n *\n * @extends Grid/column/Column\n * @classType constrainttype\n * @column\n */\nexport default class ConstraintTypeColumn extends Column {\n    static get $name() {\n        return 'ConstraintTypeColumn';\n    }\n\n    static get type() {\n        return 'constrainttype';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get defaults() {\n        return {\n            field  : 'constraintType',\n            text   : 'L{Constraint Type}',\n            width  : 146,\n            editor : {\n                type         : 'constrainttypepicker',\n                clearable    : true,\n                allowInvalid : false\n            },\n            filterable : {\n                filterField : {\n                    type : 'constrainttypepicker'\n                }\n            }\n        };\n    }\n\n    get editor() {\n        const editor = super.editor;\n\n        editor.includeAsapAlapAsConstraints = this.grid.project.includeAsapAlapAsConstraints;\n\n        return editor;\n    }\n\n    renderer({ record, value }) {\n        return ConstraintTypePicker.localize((this.grid.project.includeAsapAlapAsConstraints && directionMap[record.direction]) || value) || '';\n    }\n}\n\nColumnStore.registerColumnType(ConstraintTypeColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport GanttDateColumn from '../../Gantt/column/GanttDateColumn.js';\n\n/**\n * @module Gantt/column/DeadlineDateColumn\n */\n\n/**\n * A column showing the {@link Gantt/model/TaskModel#field-deadlineDate} field.\n *\n * Default editor is a {@link Core/widget/DateField}.\n *\n * If {@link #config-format} is omitted, Gantt's {@link Scheduler/view/mixin/TimelineViewPresets#config-displayDateFormat}\n * will be used as a default value and the format will be dynamically updated while zooming according to the\n * {@link Scheduler/preset/ViewPreset#field-displayDateFormat} value specified for the ViewPreset being selected.\n *\n * @extends Gantt/column/GanttDateColumn\n * @classType deadlinedate\n * @column\n */\nexport default class DeadlineDateColumn extends GanttDateColumn {\n\n    static get $name() {\n        return 'DeadlineDateColumn';\n    }\n\n    static get type() {\n        return 'deadlinedate';\n    }\n\n    static get defaults() {\n        return {\n            field : 'deadlineDate',\n            text  : 'L{Deadline}',\n            width : 146\n        };\n    }\n}\n\nColumnStore.registerColumnType(DeadlineDateColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport GanttDateColumn from './GanttDateColumn.js';\n\n/**\n * @module Gantt/column/EarlyEndDateColumn\n */\n\n/**\n * A column that displays the task's {@link Gantt.model.TaskModel#field-earlyEndDate early end date}.\n *\n * Default editor is a {@link Core.widget.DateField DateField}.\n *\n * If {@link #config-format} is omitted, Gantt's {@link Scheduler.view.mixin.TimelineViewPresets#config-displayDateFormat} will be used as a default value and\n * the format will be dynamically updated while zooming according to the {@link Scheduler.preset.ViewPreset#field-displayDateFormat} value specified for the ViewPreset being selected.\n *\n * @extends Gantt/column/GanttDateColumn\n * @classType earlyenddate\n * @column\n */\nexport default class EarlyEndDateColumn extends GanttDateColumn {\n\n    static get $name() {\n        return 'EarlyEndDateColumn';\n    }\n\n    static get type() {\n        return 'earlyenddate';\n    }\n\n    static get defaults() {\n        return {\n            field : 'earlyEndDate',\n            text  : 'L{Early End}'\n        };\n    }\n}\n\nColumnStore.registerColumnType(EarlyEndDateColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport GanttDateColumn from './GanttDateColumn.js';\n\n/**\n * @module Gantt/column/EarlyStartDateColumn\n */\n\n/**\n * A column that displays the task's {@link Gantt.model.TaskModel#field-earlyStartDate early start date}.\n *\n * Default editor is a {@link Core.widget.DateField DateField}.\n *\n * If {@link #config-format} is omitted, Gantt's {@link Scheduler.view.mixin.TimelineViewPresets#config-displayDateFormat} will be used as a default value and\n * the format will be dynamically updated while zooming according to the {@link Scheduler.preset.ViewPreset#field-displayDateFormat} value specified for the ViewPreset being selected.\n *\n * @extends Gantt/column/GanttDateColumn\n * @classType earlystartdate\n * @column\n */\nexport default class EarlyStartDateColumn extends GanttDateColumn {\n\n    static get $name() {\n        return 'EarlyStartDateColumn';\n    }\n\n    static get type() {\n        return 'earlystartdate';\n    }\n\n    static get defaults() {\n        return {\n            field : 'earlyStartDate',\n            text  : 'L{Early Start}'\n        };\n    }\n}\n\nColumnStore.registerColumnType(EarlyStartDateColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport DurationColumn from '../../Scheduler/column/DurationColumn.js';\nimport EffortField from '../../SchedulerPro/widget/EffortField.js';\n\n/**\n * @module Gantt/column/EffortColumn\n */\n\n/**\n * A column showing the task {@link Gantt.model.TaskModel#field-effort effort} and {@link Gantt.model.TaskModel#field-effortUnit units}.\n * The editor of this column understands the time units, so user can enter \"4d\" indicating 4 days effort, or \"4h\" indicating 4 hours, etc.\n * The numeric magnitude can be either an integer or a float value. Both \",\" and \".\" are valid decimal separators.\n * For example, you can enter \"4.5d\" indicating 4.5 days duration, or \"4,5h\" indicating 4.5 hours.\n *\n * Default editor is a {@link Core.widget.DurationField DurationField}.\n *\n * @extends Scheduler/column/DurationColumn\n * @classType effort\n * @column\n */\nexport default class EffortColumn extends DurationColumn {\n\n    static get $name() {\n        return 'EffortColumn';\n    }\n\n    static get type() {\n        return 'effort';\n    }\n\n    //region Config\n\n    static get defaults() {\n        return {\n            field : 'fullEffort',\n            text  : 'L{Effort}'\n        };\n    }\n\n    //endregion\n\n    get defaultEditor() {\n        return {\n            type : EffortField.type,\n            name : this.field\n        };\n    }\n}\n\nColumnStore.registerColumnType(EffortColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport GanttDateColumn from '../../Gantt/column/GanttDateColumn.js';\nimport '../../SchedulerPro/widget/EndDateField.js';\n\n/**\n * @module Gantt/column/EndDateColumn\n */\n\n/**\n * A column that displays (and allows user to update) the task's {@link Gantt.model.TaskModel#field-endDate end date}.\n *\n * Default editor is a {@link SchedulerPro.widget.EndDateField EndDateField}.\n *\n * If {@link #config-format} is omitted, Gantt's {@link Scheduler.view.mixin.TimelineViewPresets#config-displayDateFormat} will be used as a default value and\n * the format will be dynamically updated while zooming according to the {@link Scheduler.preset.ViewPreset#field-displayDateFormat} value specified for the ViewPreset being selected.\n *\n * @extends Gantt/column/GanttDateColumn\n * @classType enddate\n * @column\n */\nexport default class EndDateColumn extends GanttDateColumn {\n\n    static get $name() {\n        return 'EndDateColumn';\n    }\n\n    static get type() {\n        return 'enddate';\n    }\n\n    static get defaults() {\n        return {\n            field : 'endDate',\n            text  : 'L{Finish}'\n        };\n    }\n\n    get defaultEditor() {\n        const editorCfg = super.defaultEditor;\n\n        editorCfg.type = 'enddate';\n\n        return editorCfg;\n    }\n}\n\nColumnStore.registerColumnType(EndDateColumn);\n","import CheckColumn from '../../Grid/column/CheckColumn.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\n\n/**\n * @module Gantt/column/IgnoreResourceCalendarColumn\n */\n\n/**\n * A column that displays (and allows user to change) whether the task ignores its assigned resource calendars\n * when scheduling or not ({@link Gantt.model.TaskModel#field-ignoreResourceCalendar} field).\n *\n * This column uses a {@link Core.widget.Checkbox checkbox} as its editor, and it is not intended to be changed.\n *\n * @extends Grid/column/CheckColumn\n * @classType ignoreresourcecalendar\n * @column\n */\nexport default class IgnoreResourceCalendarColumn extends CheckColumn {\n\n    static $name = 'IgnoreResourceCalendarColumn';\n\n    static type = 'ignoreresourcecalendar';\n\n    static isGanttColumn = true;\n\n    static get defaults() {\n        return {\n            field : 'ignoreResourceCalendar',\n            text  : 'L{Ignore resource calendar}'\n        };\n    }\n}\n\nColumnStore.registerColumnType(IgnoreResourceCalendarColumn);\n","import CheckColumn from '../../Grid/column/CheckColumn.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\n\n/**\n * @module Gantt/column/InactiveColumn\n */\n\n/**\n * A column that displays (and allows user to update) the task's\n * {@link Gantt/model/TaskModel#field-inactive} field.\n *\n * This column uses a {@link Core/widget/Checkbox} as its editor, and it is not intended to be changed.\n *\n * @extends Grid/column/CheckColumn\n * @classType inactive\n * @column\n */\nexport default class InactiveColumn extends CheckColumn {\n\n    static get $name() {\n        return 'InactiveColumn';\n    }\n\n    static get type() {\n        return 'inactive';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get defaults() {\n        return {\n            field : 'inactive',\n            text  : 'L{Inactive}'\n        };\n    }\n}\n\nColumnStore.registerColumnType(InactiveColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport GanttDateColumn from './GanttDateColumn.js';\n\n/**\n * @module Gantt/column/LateEndDateColumn\n */\n\n/**\n * A column that displays the task's {@link Gantt.model.TaskModel#field-lateEndDate late end date}.\n *\n * Default editor is a {@link Core.widget.DateField DateField}.\n *\n * If {@link #config-format} is omitted, Gantt's {@link Scheduler.view.mixin.TimelineViewPresets#config-displayDateFormat} will be used as a default value and\n * the format will be dynamically updated while zooming according to the {@link Scheduler.preset.ViewPreset#field-displayDateFormat} value specified for the ViewPreset being selected.\n *\n * @extends Gantt/column/GanttDateColumn\n * @classType lateenddate\n * @column\n */\nexport default class LateEndDateColumn extends GanttDateColumn {\n\n    static get $name() {\n        return 'LateEndDateColumn';\n    }\n\n    static get type() {\n        return 'lateenddate';\n    }\n\n    static get defaults() {\n        return {\n            field : 'lateEndDate',\n            text  : 'L{Late End}'\n        };\n    }\n}\n\nColumnStore.registerColumnType(LateEndDateColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport GanttDateColumn from './GanttDateColumn.js';\n\n/**\n * @module Gantt/column/LateStartDateColumn\n */\n\n/**\n * A column that displays the task's {@link Gantt.model.TaskModel#field-lateStartDate late start date}.\n *\n * Default editor is a {@link Core.widget.DateField DateField}.\n *\n * If {@link #config-format} is omitted, Gantt's {@link Scheduler.view.mixin.TimelineViewPresets#config-displayDateFormat} will be used as a default value and\n * the format will be dynamically updated while zooming according to the {@link Scheduler.preset.ViewPreset#field-displayDateFormat} value specified for the ViewPreset being selected.\n *\n * @extends Gantt/column/GanttDateColumn\n * @classType latestartdate\n * @column\n */\nexport default class LateStartDateColumn extends GanttDateColumn {\n\n    static get $name() {\n        return 'LateStartDateColumn';\n    }\n\n    static get type() {\n        return 'latestartdate';\n    }\n\n    static get defaults() {\n        return {\n            field : 'lateStartDate',\n            text  : 'L{Late Start}'\n        };\n    }\n}\n\nColumnStore.registerColumnType(LateStartDateColumn);\n","import CheckColumn from '../../Grid/column/CheckColumn.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\n\n/**\n * @module Gantt/column/ManuallyScheduledColumn\n */\n\n/**\n * A column that displays (and allows user to update) the task's\n * {@link Gantt.model.TaskModel#field-manuallyScheduled} field.\n *\n * This column uses a {@link Core.widget.Checkbox checkbox} as its editor, and it is not intended to be changed.\n *\n * @extends Grid/column/CheckColumn\n * @classType manuallyscheduled\n * @column\n */\nexport default class ManuallyScheduledColumn extends CheckColumn {\n\n    static get $name() {\n        return 'ManuallyScheduledColumn';\n    }\n\n    static get type() {\n        return 'manuallyscheduled';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get defaults() {\n        return {\n            field : 'manuallyScheduled',\n            text  : 'L{Manually scheduled}'\n        };\n    }\n}\n\nColumnStore.registerColumnType(ManuallyScheduledColumn);\n","import CheckColumn from '../../Grid/column/CheckColumn.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\n\n/**\n * @module Gantt/column/MilestoneColumn\n */\n\n/**\n * A Column that indicates whether a task is a milestone. This column uses a {@link Core.widget.Checkbox checkbox} as\n * its editor.\n *\n * @extends Grid/column/CheckColumn\n * @classType milestone\n * @column\n */\nexport default class MilestoneColumn extends CheckColumn {\n    static suppressNoModelFieldWarning = true;\n    static get $name() {\n        return 'MilestoneColumn';\n    }\n\n    static get type() {\n        return 'milestone';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get defaults() {\n        return {\n            field : 'milestone',\n            text  : 'L{Milestone}'\n        };\n    }\n}\n\nColumnStore.registerColumnType(MilestoneColumn);\n","import TreeColumn from '../../Grid/column/TreeColumn.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\n\n/**\n * @module Gantt/column/NameColumn\n */\n\n/**\n * A tree column showing (and allowing user to edit) the task's {@link Gantt.model.TaskModel#field-name name} field.\n *\n * Default editor is a {@link Core.widget.TextField TextField}.\n *\n * @extends Grid/column/TreeColumn\n * @classType name\n * @column\n */\nexport default class NameColumn extends TreeColumn {\n\n    static get $name() {\n        return 'NameColumn';\n    }\n\n    static get type() {\n        return 'name';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    //region Config\n\n    static get defaults() {\n        return {\n            width : 200,\n            field : 'name',\n            text  : 'L{Name}'\n        };\n    }\n\n    //endregion\n}\n\nColumnStore.registerColumnType(NameColumn);\n","import Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport '../../Core/widget/TextAreaPickerField.js';\n\n/**\n * @module Gantt/column/NoteColumn\n */\n\n/**\n * A column which displays a task's {@link Gantt.model.TaskModel#field-note note} field.\n *\n * Default editor is a {@link Core.widget.TextAreaPickerField}.\n *\n * @extends Grid/column/Column\n * @classType note\n * @column\n */\nexport default class NoteColumn extends Column {\n\n    static get $name() {\n        return 'NoteColumn';\n    }\n\n    static get type() {\n        return 'note';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get defaults() {\n        return {\n            field  : 'note',\n            text   : 'L{Note}',\n            width  : 150,\n            editor : {\n                type : 'textareapickerfield'\n            }\n        };\n    }\n\n    renderer({ value }) {\n        return (value || '').trim();\n    }\n\n}\n\nColumnStore.registerColumnType(NoteColumn);\n","import NumberColumn from '../../Grid/column/NumberColumn.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport '../../Core/widget/NumberField.js';\n\n/**\n * @module Gantt/column/PercentDoneColumn\n */\n\n/**\n * A column representing the {@link SchedulerPro.model.mixin.PercentDoneMixin#field-percentDone percentDone} field of the task.\n *\n * Default editor is a {@link Core.widget.NumberField NumberField}.\n *\n * @extends Grid/column/NumberColumn\n * @classType percentdone\n * @column\n */\nexport default class PercentDoneColumn extends NumberColumn {\n    circleHeightPercentage = 0.75;\n\n    static get $name() {\n        return 'PercentDoneColumn';\n    }\n\n    static get type() {\n        return 'percentdone';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    //region Config\n\n    static get fields() {\n        return [\n            /**\n             * Set to `true` to render a circular progress bar to visualize the task progress\n             * @config {Boolean} showCircle\n             */\n            'showCircle'\n        ];\n    }\n\n    static get defaults() {\n        return {\n            field : 'percentDone',\n            text  : 'L{% Done}',\n            unit  : '%',\n            step  : 1,\n            min   : 0,\n            max   : 100,\n            width : 90\n        };\n    }\n    //endregion\n\n    construct(config) {\n        super.construct(...arguments);\n\n        if (this.showCircle) {\n            this.htmlEncode = false;\n        }\n    }\n\n    defaultRenderer({ record, isExport, value }) {\n        value = record.getFormattedPercentDone(value);\n\n        if (isExport) {\n            return value;\n        }\n\n        if (this.showCircle) {\n            return {\n                className : {\n                    'b-percentdone-circle' : 1,\n                    'b-full'               : value === 100,\n                    'b-empty'              : value === 0\n                },\n                style : {\n                    height                      : this.circleHeightPercentage * this.grid.rowHeight + 'px',\n                    width                       : this.circleHeightPercentage * this.grid.rowHeight + 'px',\n                    '--gantt-percentdone-angle' : `${value / 100}turn`\n                },\n                dataset : {\n                    value\n                }\n            };\n\n        }\n\n        return value + this.unit;\n    }\n\n    // formatValue(value) {\n    //     if (value <= 99) {\n    //         return Math.round(value);\n    //     }\n    //     else {\n    //         return Math.floor(value);\n    //     }\n    // }\n}\n\nColumnStore.registerColumnType(PercentDoneColumn);\n","import Combo from '../../Core/widget/Combo.js';\nimport List from '../../Core/widget/List.js';\nimport Collection from '../../Core/util/Collection.js';\nimport TextField from '../../Core/widget/TextField.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport LocaleManager from '../../Core/localization/LocaleManager.js';\nimport Objects from '../../Core/helper/util/Objects.js';\nimport Dependencies from '../../Scheduler/feature/Dependencies.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\n\n/**\n * @module Gantt/widget/DependencyField\n */\n\n// Enables toggling of link type for each side\nconst\n    toggleTypes = {\n        from : [2, 3, 0, 1],\n        to   : [1, 0, 3, 2]\n    },\n    fromTo = {\n        from : 1,\n        to   : 1\n    },\n    buildDependencySuffixRe = () => new RegExp(`(${dependencyTypes.join('|')})?((?:[+-])\\\\d+[a-z]*)?`, 'i');\n\n// <remove-on-release>\n// TODO: Move to static class field?\n// </remove-on-release>\n// For parsing dependency strings and converting string to type.\n// dependencyTypes may be localized in the Gantt class domain\n// in which case the Regex is generated from the four local values.\nlet dependencyTypes = [\n        'SS',\n        'SF',\n        'FS',\n        'FF'\n    ],\n    dependencySuffixRe = buildDependencySuffixRe();\n\n/**\n * Chooses dependencies, connector sides and lag time for dependencies of a Task.\n *\n * This field can be used as an editor for a {@link Grid/column/Column}.\n * It is used as the default editor for the {@link Gantt/column/DependencyColumn}.\n *\n * The contextual task is the `record` property of this field's {@link Core/widget/Widget#property-owner}.\n *\n * {@inlineexample Gantt/widget/DependencyField.js}\n * @extends Core/widget/Combo\n * @classType dependencyfield\n * @inputfield\n */\nexport default class DependencyField extends Combo {\n    //region Config\n\n    static $name = 'DependencyField';\n\n    // Factoryable type name\n    static type = 'dependencyfield';\n\n    static configurable = {\n        listCls : 'b-predecessor-list',\n\n        displayField : 'name',\n\n        valueField : 'name',\n\n        // Filtering down to zero using the captive filter field in the picker\n        // should not make the overall field invalid.\n        validateFilter : false,\n\n        // The filtering field is in the picker.\n        // Don't hide it when the input length drops below minChars\n        minChars : 0,\n\n        // The main input's text is not the filter string, so it must not be cleared on picker hide\n        clearTextOnPickerHide : false,\n\n        picker : {\n            floating            : true,\n            scrollAction        : 'realign',\n            itemsFocusable      : false,\n            activateOnMouseover : true,\n            align               : {\n                align    : 't0-b0',\n                axisLock : true\n            },\n            maxHeight  : 324,\n            minHeight  : 161,\n            scrollable : {\n                overflowY : true\n            },\n            autoShow     : false,\n            focusOnHover : false\n        },\n\n        /**\n         * Delimiter between dependency ids in the field\n         * @config {String}\n         * @default\n         */\n        delimiter : ';',\n\n        /**\n         * The dependency store\n         * @config {Gantt.data.DependencyStore}\n         * @default\n         */\n        dependencyStore : null,\n\n        /**\n         * The other task's relationship with this field's contextual task.\n         * This will be `'from'` if we are editing predecessors, and `'to'` if\n         * we are editing successors.\n         * @config {'from'|'to'}\n         */\n        otherSide : null,\n\n        /**\n         * This field's contextual task's relationship with the other task.\n         * This will be `'to'` if we are editing predecessors, and `'from'` if\n         * we are editing successors.\n         * @config {'from'|'to'}\n         */\n        ourSide : null,\n\n        multiSelect : true,\n\n        chipView : null,\n\n        validateOnInput : false,\n\n        /**\n         * A task field (id, wbsCode, sequenceNumber etc) that will be used when displaying and editing linked\n         * tasks. Defaults to {@link Gantt/view/GanttBase#config-dependencyIdField Gantt#dependencyIdField}\n         * @config {String}\n         */\n        dependencyIdField : null,\n\n        /**\n         * The task whose dependencies are being edited (used to filter out invalid options)\n         * @config {String}\n         * @internal\n         */\n        eventRecord : null,\n\n        /**\n         * The sorters defining how to sort tasks in the drop down list, defaults to sorting by `name` field\n         * ascending. See {@link Core.data.mixin.StoreSort} for more information.\n         * @config {Sorter[]|String[]}\n         */\n        sorters : [\n            {\n                field : 'name'\n            }\n        ]\n    };\n\n    //endregion\n\n    construct(config) {\n        const\n            me                     = this,\n            { ourSide, otherSide } = config;\n\n        //<debug>\n        if (!fromTo[ourSide] || !fromTo[otherSide] || ourSide === otherSide) {\n            throw new Error('DependencyField needs \"ourSide\" and \"otherSide\" configs of \"from\" or \"to\"');\n        }\n        //</debug>\n\n        me.dependencies = new Collection({\n            extraKeys : otherSide\n        });\n        me.startCollection = new Collection({\n            extraKeys : otherSide\n        });\n        super.construct(config);\n\n        me.delimiterRegEx = new RegExp(`\\\\s*${me.delimiter}\\\\s*`);\n\n        const localizeDependencies = () => {\n            dependencyTypes = me.L('L{DependencyType.short}');\n            dependencySuffixRe = buildDependencySuffixRe();\n            me.syncInputFieldValue();\n        };\n\n        // Update when changing locale\n        LocaleManager.ion({ locale : localizeDependencies, thisObj : me });\n\n        localizeDependencies();\n    }\n\n    internalOnInput() {\n        this.clearError(undefined, true);\n\n        if (this.isValid) {\n            // Avoid combo filtering. That's done from our FilterField\n            TextField.prototype.internalOnInput.call(this);\n        }\n    }\n\n    get invalidValueError() {\n        return 'L{invalidDependencyFormat}';\n    }\n\n    onInternalKeyDown(keyEvent) {\n        const { key } = keyEvent;\n\n        // Don't pass Enter down, that selects when ComboBox passes it down\n        // to its list. We want default action on Enter.\n        // Our list has its own, built in filter field which provides key events.\n        if (key === 'Enter') {\n            this.syncInvalid();\n        }\n        else {\n            super.onInternalKeyDown?.(keyEvent);\n        }\n        if (this.pickerVisible && key === 'ArrowDown') {\n            this.filterField.focus();\n        }\n    }\n\n    onTriggerClick() {\n        if (this.pickerVisible) {\n            super.onTriggerClick(...arguments);\n        }\n        else {\n            this.doFilter(this.filterInput ? this.filterInput.value : null);\n        }\n    }\n\n    changeStore(store) {\n        // Filter the store to hide the field's Task\n        store = store.chain(record => !this.eventRecord || (record.id !== this.eventRecord.id), null, {\n            excludeCollapsedRecords : false,\n            sorters                 : this.sorters\n        });\n\n        return super.changeStore(store);\n    }\n\n    changePicker(picker, oldPicker) {\n        const\n            me          = this,\n            filterField = me.filterField || (me.filterField = new TextField({\n                cls         : 'b-dependency-list-filter',\n                clearable   : true,\n                placeholder : 'Filter',\n                triggers    : {\n                    filter : {\n                        cls   : 'b-icon b-icon-filter',\n                        align : 'start'\n                    }\n                },\n                internalListeners : {\n                    input({ event }) {\n                        me.filterOnInput(event);\n                    },\n                    clear({ event }) {\n                        Object.defineProperty(event, 'target', {\n                            configurable : true,\n                            value        : filterFieldInput\n                        });\n                        me.filterOnInput.now(event);\n                    }\n                }\n            })),\n            filterFieldInput = me.filterInput = filterField.input,\n            result = DependencyField.reconfigure(oldPicker, picker ? Objects.merge({\n                owner      : me,\n                store      : me.store,\n                cls        : `b-dependency-list ${me.listCls}`,\n                itemTpl    : me.listItemTpl,\n                forElement : me[me.pickerAlignElement],\n                align      : {\n                    anchor    : me.overlayAnchor,\n                    target    : me[me.pickerAlignElement],\n                    // Reasonable minimal height to fit few combo items below the combo.\n                    // When height is not enough, list will appear on top. That works for windows higher than 280px,\n                    // worrying about shorter windows sounds overkill.\n                    // We cannot use relative measures here, each combo list item is ~40px high\n                    minHeight : me.inlinePicker ? null : Math.min(3, me.store.count) * 40\n                },\n\n                navigator : {\n                    keyEventTarget : filterFieldInput,\n                    processEvent   : e => {\n                        if (e.key === 'Escape') {\n                            me.hidePicker();\n                        }\n                        else {\n                            return e;\n                        }\n                    }\n                },\n                onItem         : me.onPredecessorClick.bind(me),\n                getItemClasses : function(task) {\n                    const\n                        result     = List.prototype.getItemClasses.call(this, task),\n                        dependency = me.dependencies.getBy(me.otherSide + 'Event', task),\n                        cls        = dependency ? ` b-selected b-${dependency.getConnectorString(1).toLowerCase()}` : '';\n\n                    return result + cls;\n                }\n            }, picker) : null, me);\n\n        // May have been set to null (destroyed)\n        if (result) {\n            // Avoid pulling scrollable in too early to not trigger ResizeObserver in FF\n            result.ion({\n                show() {\n                    // The scrolling viewport is obscured by the filterField\n                    Object.defineProperty(result.scrollable, 'viewport', {\n                        get() {\n                            return Rectangle.client(this.element).deflate(filterField.height, 0, 0, 0);\n                        }\n                    });\n                },\n                once    : true,\n                thisObj : me\n            });\n            filterField.owner = result;\n            filterField.render(result.contentElement);\n        }\n        // If it has been destroyed, destroy orphaned filterField\n        else {\n            me.destroyProperties('filterField');\n        }\n\n        return result;\n    }\n\n    updateEventRecord() {\n        // Ensure this field's Task is filtered out.\n        // See our changeStore which owns the chainedFilterFn.\n        this.store.fillFromMaster();\n    }\n\n    onPickerShow({ source : picker }) {\n        const\n            me                 = this,\n            { element }        = me.filterField,\n            { contentElement } = picker;\n\n        picker.minWidth = me[me.pickerAlignElement].offsetWidth;\n        if (contentElement.firstChild !== element) {\n            contentElement.insertBefore(element, contentElement.firstChild);\n        }\n\n        super.onPickerShow(...arguments);\n    }\n\n    listItemTpl(task) {\n        const\n            taskName              = StringHelper.encodeHtml(task.name),\n            { dependencyIdField } = this.owner,\n            idField               = (dependencyIdField && dependencyIdField !== task.constructor.idField) ? dependencyIdField : task.constructor.idField,\n            // Don't output generated ids in the list\n            taskIdentifier        = !task.isPhantom ? String(task[idField]) : '';\n\n        return `<div class=\"b-predecessor-item-text\">${taskName} ${taskIdentifier.length ? `(${taskIdentifier})` : ''}</div>\n            <div class=\"b-sch-box b-from\" data-side=\"from\"></div>\n            <div class=\"b-sch-box b-to\" data-side=\"to\"></div>`;\n    }\n\n    get isValid() {\n        return Boolean(!this.task || this.parseDependencies(this.input.value)) && super.isValid;\n    }\n\n    set value(dependencies) {\n        const\n            me                     = this,\n            dependenciesCollection = me.dependencies;\n\n        // Convert strings, eg: '1fs-2h;2ss+1d' to Dependency records\n        if (typeof dependencies === 'string') {\n            me.input.value = dependencies;\n\n            dependencies = me.parseDependencies(dependencies);\n            if (!dependencies) {\n                me.syncInvalid();\n                return;\n            }\n\n            dependencies = dependencies.map(dep => new me.dependencyStore.modelClass(dep));\n        }\n        else {\n            me.startCollection.clear();\n\n            if (dependencies !== null) {\n                me.startCollection.values = dependencies;\n            }\n        }\n\n        dependenciesCollection.clear();\n\n        // Allow clearing the value by passing null (happens when clicking clear button)\n        if (dependencies !== null) {\n            dependenciesCollection.values = dependencies;\n        }\n\n        // If there has been a change, update the textual value.\n        if (!me.inputting) {\n            me.syncInputFieldValue();\n        }\n    }\n\n    get value() {\n        return this.dependencies.values;\n    }\n\n    get inputValue() {\n        const\n            me        = this,\n            { value } = me;\n\n        return value == null ? '' : me.constructor.dependenciesToString(value, me.otherSide, me.delimiter, me.dependencyIdField);\n    }\n\n    onPredecessorClick({ source : list, item, record : task, event }) {\n        const\n            me               = this,\n            { dependencies } = me,\n            box              = event.target.closest('.b-sch-box'),\n            side             = box?.dataset.side;\n\n        let dependency = dependencies.getBy(me.otherSide + 'Event', task);\n\n        // Prevent regular selection continuing after this click handler.\n        item.dataset.noselect = true;\n        // As we bypass List's selection, we trigger a manual change event to allow any prior error message to be cleared\n        me.trigger('change', { value : me.value, event, userAction : true });\n\n        // Click text to remove predecessor completely\n        if (dependency && !box) {\n            dependencies.remove(dependency);\n        }\n        else {\n            // Clicking a connect side box toggles that\n            if (dependency) {\n                // We must create a clone because the record is \"live\".\n                // Updates to it go back to the UI.\n                // Also we cannot really modify record here. When editing will finish editor will compare `toJSON`\n                // output of models, which refers to the `model.data` field. And if we modify record instance, change\n                // won't go to the data object, it will be kept in the field though. Only way to sync model.data.type and\n                // model.type here is to instantiate model with correct data already\n                const\n                    { id, type } = dependency;\n\n                // Using private argument here to avoid copying record current values, we're only interested in data object\n                dependency = dependency.copy({ id, type : toggleTypes[side][type] }, { skipFieldIdentifiers : true });\n                // HACK: Above code results having serialized values in `${me.otherSide}Event` field\n                // and we expect to find task instance when doing code like:\n                //     dependencies.getBy(me.otherSide + 'Event', task)\n                // So let's put the task instance there manually.\n                dependency[`${me.otherSide}Event`] = task;\n                dependency[`${me.ourSide}Event`] = me.task;\n\n                // Replace the old predecessor link with the new, modified one.\n                // Collection will *replace* in-place due to ID matching.\n                dependencies.add(dependency);\n            }\n            // Create a new dependency to/from the clicked task\n            else {\n                dependencies.add(me.dependencyStore.createRecord({\n                    [`${me.otherSide}Event`] : task,\n                    [`${me.ourSide}Event`]   : me.task\n                }, true));\n            }\n        }\n        me.syncInputFieldValue();\n\n        list.refresh();\n    }\n\n    static dependenciesToString(dependencies, side, delimiter = ';', eventIdField = 'id') {\n        const eventField = `${side}Event`;\n        const getEventId = dependency => {\n            const event = dependency[eventField];\n            return event?.isModel ? event[eventIdField] : (event || '');\n        };\n\n        if (dependencies?.length) {\n            const result = dependencies.sort((a, b) => getEventId(a) - getEventId(b)).map(dependency =>\n                `${getEventId(dependency)}${Dependencies.getLocalizedDependencyType(dependency.getConnectorString())}${dependency.getLag()}`\n            );\n\n            return result.join(delimiter);\n        }\n\n        return '';\n    }\n\n    // static * dependenciesToStringGenerator(dependencies, otherSide, delimiter = ';') {\n    //     const result = [];\n    //\n    //     if (dependencies && dependencies.length) {\n    //         for (const dependency of dependencies) {\n    //             const\n    //                 otherSideEvent = yield dependency.$[otherSide + 'Event'],\n    //                 otherSideEventId = otherSideEvent ? otherSideEvent.id : (otherSideEvent || '');\n    //\n    //             result.push(`${otherSideEventId}${yield dependency.getConnectorString()}${dependency.getLag()}`);\n    //         }\n    //     }\n    //\n    //     return result.join(delimiter);\n    // }\n\n    get task() {\n        return this.owner?.record;\n    }\n\n    parseDependencies(value) {\n        const\n            me              = this,\n            {\n                store : taskStore,\n                task,\n                dependencyStore\n            }               = me,\n            dependencies    = value.split(me.delimiterRegEx),\n            DependencyModel = dependencyStore.modelClass,\n            result          = [];\n\n        for (let i = 0; i < dependencies.length; i++) {\n            const dependencyText = dependencies[i];\n\n            if (dependencyText) {\n                let idLen      = dependencyText.length + 1,\n                    linkedTask = null,\n                    linkedTaskId;\n\n                for (; idLen && !linkedTask; idLen--) {\n                    linkedTaskId = dependencyText.substr(0, idLen);\n                    linkedTask = taskStore.find(task => String(task[me.dependencyIdField]) === linkedTaskId, true);\n                }\n                if (!linkedTask) {\n                    return null;\n                }\n\n                // Chop off connector and lag specification, i.e. the \"SS-1h\" part\n                const\n                    remainder = dependencyText.substr(idLen + 1),\n                    // Start the structure of the dependency we are describing\n                    dependency = {\n                    // This will be \"from\" if we're editing predecessors\n                    // and \"to\" if we're editing successors\n                        [`${me.otherSide}Event`] : linkedTask,\n\n                        // This will be \"to\" if we're editing predecessors\n                        // and \"from\" if we're editing successors\n                        [`${me.ourSide}Event`] : task,\n\n                        type : DependencyModel.Type.EndToStart\n                    };\n\n                // There's a trailing edge/lag spec\n                if (remainder.length) {\n                    const edgeAndLag = dependencySuffixRe.exec(remainder);\n\n                    if (edgeAndLag && (edgeAndLag[1] || edgeAndLag[2])) {\n                        // The SS/FF bit\n                        if (edgeAndLag[1]) {\n                            dependency.type = dependencyTypes.indexOf(edgeAndLag[1].toUpperCase());\n                        }\n                        // The -1h bit\n                        if (edgeAndLag[2]) {\n                            const\n                                parsedLag = DateHelper.parseDuration(edgeAndLag[2], true, task.durationUnit);\n                            dependency.lag = parsedLag.magnitude;\n                            dependency.lagUnit = parsedLag.unit;\n                        }\n                    }\n                    else {\n                        return null;\n                    }\n                }\n\n                result.push(dependency);\n            }\n        }\n\n        return result;\n    }\n\n    get needsInputSync() {\n        return super.needsInputSync || (!this.isValid && this.inputValue !== this.input.value);\n    }\n\n    doDestroy() {\n        this.dependencies.destroy();\n        this.startCollection.destroy();\n        super.doDestroy();\n    }\n};\n\n// Register this widget type with its Factory\nDependencyField.initClass();\n","import Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport DependencyField from '../widget/DependencyField.js';\nimport Delayable from '../../Core/mixin/Delayable.js';\n\n/**\n * @module Gantt/column/DependencyColumn\n */\nconst\n    hasNoProject = v => !v.project,\n    depIsValid   = v => v;\n\n/**\n * A column which displays, in textual form, the dependencies which either link to the\n * contextual task from other, preceding tasks, or dependencies which link the\n * contextual task to successor tasks.\n *\n * Default editor is a {@link Gantt/widget/DependencyField}.\n *\n * The {@link Grid/column/Column#config-field} MUST be either `predecessors` or `successors` in order\n * for this column to know what kind of dependency it is showing.\n *\n * By default predecessors and successors have a task ID as a value. But it's configurable and any field may be used to display there (as example: wbsCode or sequenceNumber)\n * using {@link #config-dependencyIdField}\n *\n * @classType dependency\n * @extends Grid/column/Column\n * @column\n */\nexport default class DependencyColumn extends Delayable(Column) {\n\n    static get $name() {\n        return 'DependencyColumn';\n    }\n\n    static get type() {\n        return 'dependency';\n    }\n\n    static get fields() {\n        return [\n            /**\n             * Delimiter used for displayed value and editor\n             * @config {String} delimiter\n             */\n            { name : 'delimiter', defaultValue : ';' },\n\n            /**\n             * A task field (id, wbsCode, sequenceNumber etc) that will be used when displaying and editing linked tasks. Defaults to {@link Gantt/view/GanttBase#config-dependencyIdField}\n             * @config {String} dependencyIdField\n             */\n            { name : 'dependencyIdField', defaultValue : null }\n        ];\n    }\n\n    static get defaults() {\n        return {\n            htmlEncode : false,\n            width      : 120,\n\n            renderer({ record, grid }) {\n                const dependencyIdField = this.dependencyIdField || grid.dependencyIdField;\n                return DependencyField.dependenciesToString(record[this.field], this.field === 'predecessors' ? 'from' : 'to', this.delimiter, dependencyIdField);\n            },\n\n            filterable({ value, record : taskRecord, column }) {\n                const dependencyIdField = column.dependencyIdField || column.grid.dependencyIdField;\n\n                value = value.toLowerCase();\n\n                return taskRecord[`${column.field === 'predecessors' ? 'predecessorTasks' : 'successorTasks'}`].some(linkedTask => {\n                    return linkedTask && value.includes(linkedTask[dependencyIdField]?.toString().toLowerCase());\n                });\n            }\n        };\n    }\n\n    afterConstruct() {\n        //<debug>\n        if (this.field !== 'predecessors' && this.field !== 'successors') {\n            throw new Error('Dependency column field must be either \\'predecessors\\' or \\'successors\\'');\n        }\n        //</debug>\n\n        super.afterConstruct();\n    }\n\n    getFilterableValue(record) {\n        return this.renderer({ record, grid : this.grid });\n    }\n\n    async finalizeCellEdit({ grid, record, inputField, value, oldValue, editorContext }) {\n        inputField.clearError();\n\n        if (record && value) {\n            const\n                toValidate      = value.filter(hasNoProject),\n                project         = grid.dependencyStore.getProject(),\n                oldDependencies = record[this.field];\n\n            await project.commitAsync();\n\n            if (project.isDestroyed) return;\n\n            const\n                results  = await Promise.all(\n                    toValidate.map(dependency => project.isValidDependencyModel(dependency, oldDependencies))\n                ),\n                valid = results.every(depIsValid);\n\n            if (!valid) {\n                return editorContext.column.L('L{Invalid dependency}');\n            }\n            return true;\n        }\n    }\n\n    get defaultEditor() {\n        const\n            me = this,\n            { grid } = me,\n            isPredecessor = me.field === 'predecessors';\n\n        return {\n            type              : 'dependencyfield',\n            grid,\n            name              : me.field,\n            delimiter         : me.delimiter,\n            dependencyIdField : me.dependencyIdField || grid.dependencyIdField,\n            ourSide           : isPredecessor ? 'to' : 'from',\n            otherSide         : isPredecessor ? 'from' : 'to',\n            store             : grid.eventStore || grid.taskStore,\n            dependencyStore   : grid.dependencyStore\n        };\n    }\n}\n\nColumnStore.registerColumnType(DependencyColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport DependencyColumn from './DependencyColumn.js';\n\n/**\n * @module Gantt/column/PredecessorColumn\n */\n\n/**\n * A column which displays, in textual form, the dependencies which link from tasks\n * upon which the contextual task depends.\n *\n * This type of column is editable by default. Default editor is a {@link Gantt/widget/DependencyField}.\n *\n * This column will be ignored if using {@link Grid/feature/CellCopyPaste} to paste or {@link Grid/feature/FillHandle}\n * to fill values.\n *\n * @classType predecessor\n * @extends Gantt/column/DependencyColumn\n * @column\n */\nexport default class PredecessorColumn extends DependencyColumn {\n\n    static get $name() {\n        return 'PredecessorColumn';\n    }\n\n    static get type() {\n        return 'predecessor';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get defaults() {\n        return {\n            text  : 'L{Predecessors}',\n            field : 'predecessors'\n        };\n    }\n\n    canFillValue = () => false;\n}\n\nColumnStore.registerColumnType(PredecessorColumn);\n","import AssignmentStore from '../../SchedulerPro/data/AssignmentStore.js';\n\n/**\n * @module Gantt/data/AssignmentsManipulationStore\n */\n\n/**\n * Special store class for _single_ task/event assignments manipulation, used by {@link Gantt/widget/AssignmentGrid}\n *\n * Contains a collection of {@link Gantt/model/AssignmentModel} records.\n *\n * @extends Scheduler/data/AssignmentStore\n * @internal\n */\nexport default class AssignmentsManipulationStore extends AssignmentStore {\n    //region Config\n    static get defaultConfig() {\n        return {\n            storage : {\n                extraKeys : ['resource']\n            },\n            callOnFunctions : true,\n\n            /**\n             * Event model to manipulate assignments of, the event should be part of a project.\n             *\n             * @config {Gantt.model.TaskModel}\n             */\n            projectEvent : null,\n\n            /**\n             * Flag indicating whether assigned resources should be placed (floated) before unassigned ones.\n             *\n             * @config {Boolean}\n             * @private\n             */\n            floatAssignedResources : true,\n\n            /**\n             * Flag indicating whether assigned resources should be floated live\n             *\n             * @config {Boolean}\n             * @private\n             */\n            liveFloatAssignedResources : false\n        };\n    }\n\n    afterConfigure() {\n        const me = this;\n\n        super.afterConfigure();\n\n        me.addSorter({\n            fn : me.defaultSort.bind(me)\n        });\n    }\n\n    //endregion\n\n    get projectEvent() {\n        return this._projectEvent;\n    }\n\n    set projectEvent(projectEvent) {\n        const me = this;\n\n        // If the event is the same, but some underlying data has changed, we must still update\n        if (\n            projectEvent != me._projectEvent ||\n            (projectEvent && (projectEvent.generation !== me._projectEventGeneration)) ||\n            (projectEvent?.getProject()?.assignmentStore.storage.generation !== me._assignmentStoreGeneration)\n        ) {\n\n            me._projectEvent = projectEvent;\n            me._projectEventGeneration = projectEvent?.generation;\n            me._assignmentStoreGeneration = projectEvent?.getProject()?.assignmentStore.storage.generation;\n\n            if (projectEvent) {\n                //<debug>\n                // if (!hasHasAssignments(projectEvent)) {\n                //     throw new Error('Event should have HasAssignments mixin mixed in!');\n                // }\n                // Being part of project event should have access to event store\n                if (!projectEvent.getEventStore()) {\n                    throw new Error('Event should be part of an event store');\n                }\n\n                if (!projectEvent.getResourceStore()) {\n                    throw new Error('Event\\'s event store should have a reference to resource store!');\n                }\n\n                if (!projectEvent.getAssignmentStore()) {\n                    throw new Error('Event\\'s event store should have a reference to assignment store!');\n                }\n                //</debug>\n\n                me.fillFromMaster();\n\n                me.sort();\n            }\n            else {\n                me.removeAll();\n            }\n        }\n    }\n\n    get floatAssignedResources() {\n        return this._floatAssignedResources;\n    }\n\n    set floatAssignedResources(value) {\n        const me = this;\n\n        if (value !== me.floatAssignedResources) {\n            me._floatAssignedResources = value;\n            me.sort();\n        }\n    }\n\n    /**\n     * Fills this store from master {@link Gantt/data/ResourceStore resource} store and {@link Gantt/data/AssignmentStore assignment} store.\n     * @internal\n     */\n    fillFromMaster() {\n        const\n            me               = this,\n            { projectEvent } = me;\n\n        if (projectEvent) {\n            const\n                {\n                    assignmentStore,\n                    resourceStore\n                }                  = projectEvent,\n                resourceDataSource = assignmentStore.modelClass.getFieldDefinition('resource').dataSource,\n                eventDataSource    = assignmentStore.modelClass.getFieldDefinition('event').dataSource,\n                storeData          = [];\n\n            // For each excludes group header records - ResourceStore might be grouped externally\n            resourceStore.forEach(\n                resource => {\n                    const\n                        existingAssignment = assignmentStore.getAssignmentForEventAndResource(projectEvent, resource),\n                        data               = Object.assign(\n                            { units : 0 },\n                            existingAssignment?.data\n                        );\n\n                    delete data.id;\n                    delete data.eventId;\n                    delete data.resourceId;\n                    // handle data mapping cases\n                    delete data[resourceDataSource];\n                    delete data[eventDataSource];\n\n                    // apply resource and event after cleaning data mapping\n                    Object.assign(data, { resource, event : projectEvent });\n\n                    storeData.push(data);\n                },\n                this,\n                {\n                    includeFilteredOutRecords    : true,\n                    includeCollapsedGroupRecords : true\n                }\n            );\n\n            me.data = storeData;\n        }\n    }\n\n    toValue() {\n        return this.query(a => a.units > 0);\n    }\n\n    toValueString() {\n        return this.toValue().join(', ');\n    }\n\n    defaultSort(lhs, rhs) {\n        let result = 0;\n\n        if (this.floatAssignedResources) {\n            if (!rhs.units && lhs.units) {\n                result = -1;\n            }\n            else if (!lhs.units && rhs.units) {\n                result = 1;\n            }\n            else {\n                result = lhs.resourceName.localeCompare(rhs.resourceName);\n            }\n        }\n        else {\n            result = lhs.resourceName.localeCompare(rhs.resourceName);\n        }\n\n        return result;\n    }\n\n    onUpdate({ changes }) {\n        const me = this;\n\n        if (!me.isConfiguring) {\n            if (Object.hasOwnProperty.call(changes, 'event')) {\n                if (me.floatAssignedResources && me.liveFloatAssignedResources) {\n                    me.sort();\n                }\n            }\n        }\n    }\n}\n","import SchedulerProAssignmentModel from '../../SchedulerPro/model/AssignmentModel.js';\nimport { isSerializableEqual } from '../../Engine/chrono/ModelFieldAtom.js';\n\n/**\n * @module Gantt/model/AssignmentModel\n */\n\n/**\n * This class represent a single assignment of a {@link Gantt.model.ResourceModel resource} to a\n * {@link Gantt.model.TaskModel task} in your gantt chart.\n *\n * @extends SchedulerPro/model/AssignmentModel\n *\n * @uninherit Core/data/mixin/TreeNode\n *\n * @typings SchedulerPro.model.AssignmentModel -> SchedulerPro.model.SchedulerProAssignmentModel\n *\n */\nexport default class AssignmentModel extends SchedulerProAssignmentModel {\n    //region Fields\n    static get fields() {\n        /**\n         * The numeric, percent-like value, indicating what is the \"contribution level\"\n         * of the resource availability to the task.\n         * Number 100, means that the assigned resource spends 100% of its working time to the task.\n         * Number 50 means that the resource spends only half of its available time for the assigned task.\n         * @field {Number} units\n         */\n        return [\n            /**\n             * Id for event to assign. Note that after load it will be populated with the actual event.\n             * @field {Gantt.model.TaskModel} event\n             * @accepts {String|Number|Gantt.model.TaskModel}\n             */\n            {\n                name      : 'event',\n                persist   : true,\n                serialize : record => record?.id,\n                isEqual   : isSerializableEqual\n            },\n\n            /**\n             * Id for resource to assign to. Note that after load it will be populated with the actual resource.\n             * @field {Gantt.model.ResourceModel} resource\n             * @accepts {String|Number|Gantt.model.ResourceModel}\n             */\n            {\n                name      : 'resource',\n                persist   : true,\n                serialize : record => record?.id,\n                isEqual   : isSerializableEqual\n            },\n\n            /**\n             * Hidden\n             * @field {String|Number} eventId\n             * @hide\n             */\n            'eventId',\n\n            /**\n             * Hidden\n             * @field {String|Number} resourceId\n             * @hide\n             */\n            'resourceId'\n        ];\n    }\n    //endregion\n}\n","import LocaleHelper from '../../Core/localization/LocaleHelper.js';\nimport '../../SchedulerPro/localization/En.js';\n\nconst locale = {\n\n    localeName : 'En',\n    localeDesc : 'English (US)',\n    localeCode : 'en-US',\n\n    Object : {\n        Save : 'Save'\n    },\n\n    IgnoreResourceCalendarColumn : {\n        'Ignore resource calendar' : 'Ignore resource calendar'\n    },\n\n    InactiveColumn : {\n        Inactive : 'Inactive'\n    },\n\n    AddNewColumn : {\n        'New Column' : 'New Column'\n    },\n\n    BaselineStartDateColumn : {\n        baselineStart : 'Baseline Start'\n    },\n\n    BaselineEndDateColumn : {\n        baselineEnd : 'Baseline Finish'\n    },\n\n    BaselineDurationColumn : {\n        baselineDuration : 'Baseline Duration'\n    },\n\n    BaselineStartVarianceColumn : {\n        startVariance : 'Start Variance'\n    },\n\n    BaselineEndVarianceColumn : {\n        endVariance : 'Finish Variance'\n    },\n\n    BaselineDurationVarianceColumn : {\n        durationVariance : 'Duration Variance'\n    },\n\n    CalendarColumn : {\n        Calendar : 'Calendar'\n    },\n\n    EarlyStartDateColumn : {\n        'Early Start' : 'Early Start'\n    },\n\n    EarlyEndDateColumn : {\n        'Early End' : 'Early End'\n    },\n\n    LateStartDateColumn : {\n        'Late Start' : 'Late Start'\n    },\n\n    LateEndDateColumn : {\n        'Late End' : 'Late End'\n    },\n\n    TotalSlackColumn : {\n        'Total Slack' : 'Total Slack'\n    },\n\n    ConstraintDateColumn : {\n        'Constraint Date' : 'Constraint Date'\n    },\n\n    ConstraintTypeColumn : {\n        'Constraint Type' : 'Constraint Type'\n    },\n\n    DeadlineDateColumn : {\n        Deadline : 'Deadline'\n    },\n\n    DependencyColumn : {\n        'Invalid dependency' : 'Invalid dependency'\n    },\n\n    DurationColumn : {\n        Duration : 'Duration'\n    },\n\n    EffortColumn : {\n        Effort : 'Effort'\n    },\n\n    EndDateColumn : {\n        Finish : 'Finish'\n    },\n\n    EventModeColumn : {\n        'Event mode' : 'Event mode',\n        Manual       : 'Manual',\n        Auto         : 'Auto'\n    },\n\n    ManuallyScheduledColumn : {\n        'Manually scheduled' : 'Manually scheduled'\n    },\n\n    MilestoneColumn : {\n        Milestone : 'Milestone'\n    },\n\n    NameColumn : {\n        Name : 'Name'\n    },\n\n    NoteColumn : {\n        Note : 'Note'\n    },\n\n    PercentDoneColumn : {\n        '% Done' : '% Done'\n    },\n\n    PredecessorColumn : {\n        Predecessors : 'Predecessors'\n    },\n\n    ResourceAssignmentColumn : {\n        'Assigned Resources' : 'Assigned Resources',\n        'more resources'     : 'more resources'\n    },\n\n    RollupColumn : {\n        Rollup : 'Rollup'\n    },\n\n    SchedulingModeColumn : {\n        'Scheduling Mode' : 'Scheduling Mode'\n    },\n\n    SchedulingDirectionColumn : {\n        schedulingDirection : 'Scheduling direction',\n        inheritedFrom       : 'Inherited from',\n        enforcedBy          : 'Enforced by'\n    },\n\n    SequenceColumn : {\n        Sequence : 'Sequence'\n    },\n\n    ShowInTimelineColumn : {\n        'Show in timeline' : 'Show in timeline'\n    },\n\n    StartDateColumn : {\n        Start : 'Start'\n    },\n\n    SuccessorColumn : {\n        Successors : 'Successors'\n    },\n\n    TaskCopyPaste : {\n        copyTask  : 'Copy',\n        cutTask   : 'Cut',\n        pasteTask : 'Paste'\n    },\n\n    WBSColumn : {\n        WBS      : 'WBS',\n        renumber : 'Renumber'\n    },\n\n    DependencyField : {\n        invalidDependencyFormat : 'Invalid dependency format'\n    },\n\n    ProjectLines : {\n        'Project Start' : 'Project start',\n        'Project End'   : 'Project end'\n    },\n\n    TaskTooltip : {\n        Start    : 'Start',\n        End      : 'End',\n        Duration : 'Duration',\n        Complete : 'Complete'\n    },\n\n    AssignmentGrid : {\n        Name     : 'Resource name',\n        Units    : 'Units',\n        unitsTpl : ({ value }) => value ? value + '%' : ''\n    },\n\n    Gantt : {\n        Edit                   : 'Edit',\n        Indent                 : 'Indent',\n        Outdent                : 'Outdent',\n        'Convert to milestone' : 'Convert to milestone',\n        Add                    : 'Add...',\n        'New task'             : 'New task',\n        'New milestone'        : 'New milestone',\n        'Task above'           : 'Task above',\n        'Task below'           : 'Task below',\n        'Delete task'          : 'Delete',\n        Milestone              : 'Milestone',\n        'Sub-task'             : 'Subtask',\n        Successor              : 'Successor',\n        Predecessor            : 'Predecessor',\n        changeRejected         : 'Scheduling engine rejected the changes',\n        linkTasks              : 'Add dependencies',\n        unlinkTasks            : 'Remove dependencies',\n        color                  : 'Color'\n    },\n\n    EventSegments : {\n        splitTask : 'Split task'\n    },\n\n    Indicators : {\n        earlyDates   : 'Early start/end',\n        lateDates    : 'Late start/end',\n        Start        : 'Start',\n        End          : 'End',\n        deadlineDate : 'Deadline'\n    },\n\n    Versions : {\n        indented     : 'Indented',\n        outdented    : 'Outdented',\n        cut          : 'Cut',\n        pasted       : 'Pasted',\n        deletedTasks : 'Deleted tasks'\n    }\n};\n\nexport default LocaleHelper.publishLocale(locale);\n","import ResourceInfoColumn from '../../Scheduler/column/ResourceInfoColumn.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\n\n/**\n * @module Gantt/column/ResourceAssignmentGridResourceColumn.js\n */\n\n/**\n * Column showing the resource name / avatar inside the AssignmentGrid\n *\n * @internal\n * @extends Scheduler/column/ResourceInfoColumn\n * @classType resourceassignment\n * @column\n */\nexport default class ResourceAssignmentGridResourceColumn extends ResourceInfoColumn {\n\n    static get $name() {\n        return 'ResourceAssignmentGridResourceColumn';\n    }\n\n    static get type() {\n        return 'assignmentResource';\n    }\n\n    static get defaults() {\n        return {\n            showEventCount     : false,\n            cls                : 'b-assignmentgrid-resource-column',\n            field              : 'resourceName',\n            flex               : 1,\n            editor             : null,\n            useNameAsImageName : false,\n            filterable         : {\n                filterField : {\n                    placeholder : 'L{AssignmentGrid.Name}',\n                    triggers    : {\n                        filter : {\n                            align : 'start',\n                            cls   : 'b-icon b-icon-filter'\n                        }\n                    }\n                }\n            }\n        };\n    }\n\n    defaultRenderer({ grid, record, cellElement, value, isExport }) {\n        if (!record.isSpecialRow) {\n            record = record.resource;\n        }\n\n        return super.defaultRenderer({ grid, record, cellElement, value, isExport });\n    }\n}\n\nColumnStore.registerColumnType(ResourceAssignmentGridResourceColumn);\n","import Grid from '../../Grid/view/Grid.js';\nimport NumberColumn from '../../Grid/column/NumberColumn.js';\nimport Objects from '../../Core/helper/util/Objects.js';\nimport AssignmentManipulationStore from '../data/AssignmentsManipulationStore.js';\nimport AssignmentModel from '../model/AssignmentModel.js';\nimport '../../Core/widget/Checkbox.js';\nimport '../../Grid/feature/FilterBar.js';\nimport '../../Gantt/localization/En.js';\nimport '../../Gantt/column/ResourceAssignmentGridResourceColumn.js';\n\n/**\n * @module Gantt/widget/AssignmentGrid\n */\n\n/**\n * This grid visualizes and lets users edit assignments of an {@link #config-projectEvent event}. Used by the\n * {@link Gantt.widget.AssignmentField}. This grid shows one column showing the resource name, and one showing\n * the units assigned. You can add additional columns by providing a {@link Grid.view.Grid#config-columns} array in your grid config.\n *\n * {@inlineexample Gantt/widget/AssignmentGrid.js}\n * @extends Grid/view/Grid\n * @classType assignmentgrid\n * @widget\n */\nexport default class AssignmentGrid extends Grid {\n\n    static get $name() {\n        return 'AssignmentGrid';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'assignmentgrid';\n    }\n\n    //region Config\n    static get configurable() {\n        return {\n            // Required by ResourceInfo column\n            resourceImageExtension : '.jpg',\n            minHeight              : 200,\n\n            /**\n             * A {@link Grid.column.Column} config object for the resource column. You can pass a `renderer` which\n             * gives you access to the `resource` record.\n             *\n             * @config {ColumnConfig}\n             */\n            resourceColumn : {\n                type : 'assignmentResource'\n            },\n\n            /**\n             * A config object for the units column\n             *\n             * @config {NumberColumnConfig}\n             */\n            unitsColumn : {\n                field       : 'units',\n                type        : NumberColumn.type,\n                text        : 'L{Units}',\n                localeClass : this,\n                width       : 70,\n                min         : 0,\n                max         : 100,\n                step        : 10,\n                unit        : '%',\n                renderer    : ({ value }) => this.L('L{unitsTpl}', { value : Math.round(value) }),\n                filterable  : false\n            }\n        };\n    }\n\n    static get defaultConfig() {\n        return {\n            selectionMode : {\n                checkboxOnly : true,\n                multiSelect  : true,\n                showCheckAll : true\n            },\n\n            // If enabled blocks header checkbox click event\n            features : {\n                group       : false,\n                filterBar   : true,\n                contextMenu : false\n            },\n\n            disableGridRowModelWarning : true,\n\n            /**\n             * Event model to manipulate assignments of, the task should be part of a task store.\n             * Either task or {@link Grid/view/Grid#config-store store} should be given.\n             *\n             * @config {Gantt.model.TaskModel}\n             */\n            projectEvent : null\n        };\n    }\n    //endregion\n\n    construct() {\n        super.construct(...arguments);\n\n        this.ion({\n            selectionChange : ({ selected, deselected }) => {\n                selected.forEach(assignment => assignment.units = assignment.units || assignment.getFieldDefinition('units').defaultValue);\n                deselected.forEach(assignment => {\n                    if (this.store.includes(assignment)) {\n                        assignment.units = 0;\n                    }\n                });\n            }\n        });\n    }\n\n    get projectEvent() {\n        const me = this,\n            store = me.store;\n\n        let projectEvent = me._projectEvent;\n\n        if (store && (projectEvent !== store.projectEvent)) {\n            projectEvent = me._projectEvent = store.projectEvent;\n        }\n\n        return projectEvent;\n    }\n\n    set projectEvent(projectEvent) {\n        const me = this;\n\n        me._projectEvent = projectEvent;\n\n        me.store.projectEvent = projectEvent;\n\n        if (projectEvent) {\n            me.selectedRecords = me.store.query(as => projectEvent.assignments.find(existingAs => existingAs.resource === as.resource));\n        }\n    }\n\n    get store() {\n        return super.store;\n    }\n\n    set store(store) {\n        const\n            me       = this,\n            oldStore = me.store;\n\n        if (store && oldStore !== store) {\n            if (!(store instanceof AssignmentManipulationStore)) {\n                store = AssignmentManipulationStore.new({\n                    modelClass   : me._projectEvent?.assignmentStore.modelClass || AssignmentModel,\n                    projectEvent : me._projectEvent\n                }, store);\n            }\n\n            super.store = store;\n\n            me.storeDetacher?.();\n            me.storeDetacher = store.ion({ update : 'onAssignmentUpdate', thisObj : me });\n        }\n    }\n\n    set columns(columns) {\n        if (columns) {\n            // Clone is needed to flatten the properties from the prototype chain, the Model class wants data\n            // in a flat simple object\n            columns.unshift(Objects.clone(this.resourceColumn), Objects.clone(this.unitsColumn));\n        }\n\n        super.columns = columns;\n    }\n\n    get columns() {\n        return super.columns;\n    }\n\n    onAssignmentUpdate({ record, changes }) {\n        const { units } = changes;\n\n        // Sync selection while cell editing\n        if (units) {\n            if (!units.value) {\n                this.deselectRow(record);\n            }\n            else if (units.oldValue === 0) {\n                this.selectRow({\n                    record,\n                    scrollIntoView : false,\n                    addToSelection : true\n                });\n            }\n        }\n    }\n}\n\n// Register this widget type with its Factory\nAssignmentGrid.initClass();\n","import AssignmentGrid from './AssignmentGrid.js';\nimport '../../Core/widget/Container.js';\nimport '../../Core/widget/Button.js';\n\n/**\n * @module Gantt/widget/AssignmentPicker\n */\n\n/**\n * Class for assignment field dropdown, wraps {@link Gantt/widget/AssignmentGrid} within a frame and adds two buttons: Save and Cancel\n * @private\n */\nexport default class AssignmentPicker extends AssignmentGrid {\n\n    static get $name() {\n        return 'AssignmentPicker';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'assignmentpicker';\n    }\n\n    static get defaultConfig() {\n        return {\n            trapFocus : true,\n            height    : '20em',\n            minWidth  : '25em',\n            bbar      : [\n                {\n                    type        : 'button',\n                    text        : this.L('L{Object.Save}'),\n                    localeClass : this,\n                    ref         : 'saveBtn',\n                    color       : 'b-green'\n                },\n                {\n                    type        : 'button',\n                    text        : this.L('L{Object.Cancel}'),\n                    localeClass : this,\n                    ref         : 'cancelBtn',\n                    color       : 'b-gray'\n                }\n            ],\n            /**\n             * The Event to load resource assignments for.\n             * Either an Event or {@link #config-store store} should be given.\n             *\n             * @config {Gantt.model.TaskModel}\n             */\n            projectEvent : null,\n\n            /**\n             * Store for the picker.\n             * Either store or {@link #config-projectEvent projectEvent} should be given\n             *\n             * @config {Gantt.data.AssignmentsManipulationStore}\n             */\n            store : null\n        };\n    }\n\n    configure(config) {\n        config.selectedRecordCollection = config.assignments;\n        super.configure(config);\n    }\n\n    show() {\n        this.originalSelected = this.selectedRecords.map(a => a.copy());\n        return super.show(...arguments);\n    }\n\n    afterConfigure() {\n        const me = this;\n\n        super.afterConfigure();\n\n        me.bbar.widgetMap.saveBtn?.ion({ click : 'onSaveClick', thisObj : me });\n        me.bbar.widgetMap.cancelBtn?.ion({ click : 'onCancelClick', thisObj : me });\n    }\n\n    //region Event handlers\n    onSaveClick() {\n        this.hide();\n    }\n\n    onCancelClick() {\n        this.hide();\n    }\n    //endregion\n}\n\n// Register this widget type with its Factory\nAssignmentPicker.initClass();\n","import Combo from '../../Core/widget/Combo.js';\nimport PickerField from '../../Core/widget/PickerField.js';\nimport AssignmentPicker from './AssignmentPicker.js';\nimport AssignmentsManipulationStore from '../data/AssignmentsManipulationStore.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\n\n/**\n * @module Gantt/widget/AssignmentField\n */\n\n/**\n * A special field widget used to edit single event assignments.\n *\n * This field is used as the default editor for the {@link Gantt.column.ResourceAssignmentColumn}\n *\n * {@inlineexample Gantt/widget/AssignmentField.js}\n *\n * ## Customizing the drop-down grid\n *\n * The field is a {@link Core/widget/Combo} which has a {@link Gantt/widget/AssignmentGrid} as its picker. Here's a\n * snippet showing how to configure the grid:\n *\n * ```javascript\n * const gantt = new Gantt({\n *     appendTo                : 'container',\n *     resourceImageFolderPath : '../_shared/images/users/',\n *     columns                 : [\n *         { type : 'name', field : 'name', text : 'Name', width : 250 },\n *         {\n *             type        : 'resourceassignment',\n *             width       : 250,\n *             showAvatars : true,\n *             editor      : {\n *                 type   : 'assignmentfield',\n *                 // The picker config is applied to the Grid\n *                 picker : {\n *                     height   : 350,\n *                     width    : 450,\n *                     features : {\n *                         filterBar  : true,\n *                         group      : 'resource.city',\n *                         headerMenu : false,\n *                         cellMenu   : false\n *                     },\n *                     // The extra columns are concatenated onto the base column set.\n *                     columns : [{\n *                         text       : 'Calendar',\n *                         // Read a nested property (name) from the resource calendar\n *                         field      : 'resource.calendar.name',\n *                         filterable : false,\n *                         editor     : false,\n *                         width      : 85\n *                     }]\n *                 }\n *             }\n *         }\n *     ],\n *\n *     project\n *  });\n * ```\n *\n * @extends Core/widget/Combo\n * @classType assignmentfield\n * @demo Gantt/resourceassignment\n * @inputfield\n */\nexport default class AssignmentField extends Combo {\n\n    static get $name() {\n        return 'AssignmentField';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'assignmentfield';\n    }\n\n    //region Config\n    static get configurable() {\n        return {\n            // Let the editor know that the selectable records are also editable\n            editingRecords : true,\n\n            chipView : {\n                cls : 'b-assignment-chipview',\n                itemTpl(assignment) {\n                    return StringHelper.xss`${assignment.resourceName} ${Math.round(assignment.units)}%`;\n                },\n                scrollable : {\n                    overflowX : 'hidden-scroll'\n                }\n            },\n\n            triggers : {\n                expand : {\n                    cls     : 'b-icon-down',\n                    handler : 'onTriggerClick'\n                }\n            },\n\n            multiSelect : true,\n            // <remove-on-release>\n            // TODO: change clearable when it's back to editable\n            // </remove-on-release>\n            clearable   : false,\n            editable    : false,\n            value       : null,\n\n            /**\n             * A config object used to configure the {@link Gantt.widget.AssignmentGrid assignment grid}\n             * used to select resources to assign.\n             *\n             * Any `columns` provided are concatenated onto the default column set.\n             * @config {AssignmentGridConfig|Gantt.widget.AssignmentGrid} picker\n             */\n            picker : {\n                type         : AssignmentPicker.type,\n                floating     : true,\n                scrollAction : 'realign'\n            },\n\n            /**\n             * Width of picker, defaults to this field's {@link Core/widget/PickerField#config-pickerAlignElement} width\n             *\n             * @config {Number}\n             */\n            pickerWidth : null,\n\n            /**\n             * Event to load resource assignments for.\n             * Either event or {@link #config-store store} should be given.\n             *\n             * @config {Gantt.model.TaskModel}\n             */\n            projectEvent : null,\n\n            /**\n             * Assignment manipulation store to use, or it's configuration object.\n             * Either store or {@link #config-projectEvent projectEvent} should be given\n             *\n             * @config {Core.data.Store|StoreConfig}\n             */\n            store : {},\n\n            /**\n             * A template function used to generate the tooltip contents when hovering this field. Defaults to\n             * showing \"[Name] [%]\"\n             * ```javascript\n             * const gantt = new Gantt({\n             *   columns                 : [\n             *         { type : 'name', field : 'name', text : 'Name', width : 250 },\n             *         {\n             *             type        : 'resourceassignment',\n             *             editor      : {\n             *                 type   : 'assignmentfield',\n             *                 tooltipTemplate({ taskRecord, assignmentRecords }) {\n             *                     return assignmentRecords.map(as => as.resource?.name).join(', ');\n             *                 }\n             *             }\n             *         }\n             *     ]\n             * });\n             * ```\n             * @config {Function} tooltipTemplate\n             * @param {Object} data Tooltip data\n             * @param {Gantt.model.TaskModel} data.taskRecord The taskRecord the assignments are associated with\n             * @param {Gantt.model.AssignmentModel} data.assignmentRecords The field value represented as assignment\n             * records\n             * @returns {String|DomConfig|DomConfig[]}\n             */\n            tooltipTemplate() {\n                return StringHelper.encodeHtml(this.store.toValueString());\n            }\n        };\n    }\n\n    //endregion\n\n    // Any change must offer the save/cancel UI since THAT is what actually makes the edit\n    onChipClose(records) {\n        this.showPicker();\n\n        this.picker.deselectRows(records);\n    }\n\n    syncInputFieldValue() {\n        super.syncInputFieldValue();\n\n        const { store } = this;\n\n        if (store && this.tooltipTemplate) {\n            this.tooltip = this.tooltipTemplate({ taskRecord : store.projectEvent, assignmentRecords : store.toValue() });\n        }\n    }\n\n    //region Picker\n\n    // Override. This field does not have a primary filter, so\n    // down arrow/trigger click should just show the picker.\n    onTriggerClick(event) {\n        if (this.pickerVisible) {\n            this.hidePicker();\n        }\n        else {\n            PickerField.prototype.showPicker.call(this, event && ('key' in event));\n        }\n    }\n\n    focusPicker() {\n        this.picker.focus();\n    }\n\n    changePicker(picker, oldPicker) {\n        const me = this;\n        return super.changePicker(picker && ObjectHelper.assign({\n            projectEvent      : me.projectEvent,\n            store             : me.store,\n            readOnly          : me.readOnly,\n            resourceImagePath : me.resourceImageFolderPath,\n            assignments       : me.valueCollection,\n\n            onCancelClick() {\n                me.value = this.originalSelected;\n                this.hide();\n            },\n\n            align : {\n                anchor : me.overlayAnchor,\n                target : me[me.pickerAlignElement]\n            },\n\n            internalListeners : {\n                hide : () => {\n                    if (!me.isDestroying) {\n                        // Only apply the filters and refresh the UI if we are focused.\n                        // If the hide is due to focusout, the refresh will be applied next time.\n                        me.store.clearFilters(me.containsFocus);\n                    }\n                }\n            }\n        }, picker) || null, oldPicker);\n    }\n\n    //endregion\n\n    //region Value\n\n    changeProjectEvent(projectEvent) {\n        // NOTE: This kind of thing would normally be handled in updateProjectEvent, however, the setter of the\n        //  AssignmentManipulationStore pulls double duty and resyncs some fields, even if presented with the same\n        //  projectEvent.\n        const { picker, store }      = this;\n        this._projectEvent           = projectEvent;\n\n        if (store) {\n            store.projectEvent = projectEvent;\n        }\n\n        if (picker) {\n            picker.projectEvent = projectEvent;\n        }\n\n        return projectEvent;\n    }\n\n    changeStore(store) {\n        if (store && !(store instanceof AssignmentsManipulationStore)) {\n            store = new AssignmentsManipulationStore(store);\n        }\n\n        return store;\n    }\n\n    updateStore(store) {\n        const me = this;\n\n        me.detachListeners('storeMutation');\n\n        if (store instanceof AssignmentsManipulationStore) {\n            const { projectEvent } = store;\n\n            if (projectEvent) {\n                me.projectEvent = projectEvent;\n            }\n            else {\n                // This is to not do the store::fillFromMaster() call, otherwise editor will be unhappy\n                store.projectEvent = me.projectEvent;\n            }\n        }\n\n        store.ion({\n            name    : 'storeMutation',\n            change  : 'syncInputFieldValue',\n            thisObj : me\n        });\n    }\n\n    // This return an array of special Assignment records created\n    // by the picker / grid\n    get value() {\n        return super.value;\n    }\n\n    set value(assignments) {\n        // either real (=== currently assigned resources)\n        // Or to-be assigned resources coming from the assignment grid\n\n        // Map over to the special assignment records created by the AssignmentGrid store\n        assignments = assignments?.map(as => {\n            const\n                ourStoreVersion = this.store.find(a => a.resource === as.resource, true);\n\n            ourStoreVersion?.copyData(as);\n\n            return ourStoreVersion;\n        });\n\n        super.value = assignments;\n    }\n\n    hasChanged(initialValue, value) {\n        return !ObjectHelper.isEqual(initialValue, value);\n    }\n\n    //endregion\n\n    // Override. Picker is completely self-contained. Prevent any\n    // field action on its key events.\n    onPickerKeyDown(event) {\n        const grid = this.picker;\n\n        // Move \"down\" into the grid body\n        if (event.key === 'ArrowDown' && event.target.compareDocumentPosition(grid.bodyContainer) === document.DOCUMENT_POSITION_FOLLOWING) {\n            grid.element.focus();\n        }\n        else if (event.key === 'Escape' && !grid.focusedCell.isActionable) {\n            this.hidePicker();\n        }\n    }\n\n    // Caching a copy of each record since the grid picker of this class will allow editing\n    // A change to the records will constitute a change of this field\n    cacheCurrentValue(records) {\n        if (Array.isArray(records)) {\n            return this._value = records.map(rec => rec.copy(rec.id));\n        }\n\n        return super.cacheCurrentValue(records);\n    }\n}\n\n// Register this widget type with its Factory\nAssignmentField.initClass();\n","import Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport AssignmentField from '../widget/AssignmentField.js';\nimport AssignmentModel from '../model/AssignmentModel.js';\nimport ChipView from '../../Core/widget/ChipView.js';\nimport '../../Core/widget/NumberField.js';\nimport AvatarRendering from '../../Core/widget/util/AvatarRendering.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport DragHelper from '../../Core/helper/DragHelper.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Gantt/column/ResourceAssignmentColumn\n */\n\nconst resourceNameRegExp = a => a.resourceName.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n/**\n * Column allowing resource manipulation (assignment/unassignment/units changing) on a task. In the column cells,\n * assignments are either shown as badges or avatars. To show avatars, set {@link #config-showAvatars} to `true`. When\n * showing avatars there are two options for how to specify image paths:\n *\n * * You may provide a {@link Gantt.view.Gantt#config-resourceImageFolderPath} on your Gantt panel pointing to where\n *   resource images are located. Set the resource image filename in the `image` field of the resource data.\n * * And/or you may provide an `imageUrl` on your record, which then will take precedence when showing images.\n *\n * If a resource has no name, or its image cannot be loaded, the resource initials are rendered. If the resource has\n * an {@link Scheduler/model/mixin/ResourceModelMixin#field-eventColor} specified, it will be used as the background\n * color of the initials.\n *\n * Default editor is a {@link Gantt.widget.AssignmentField}.\n *\n * ## Customizing displayed elements\n *\n * If {@link #config-showAvatars} is false, column will render resource name and utilization wrapped in a\n * small element called _a chip_. Content of the chip can be customized. For example, if you don't want to see percent\n * value, or want to display different resource name, you can specify an {@link #config-itemTpl} config. Please keep in\n * mind that when you start editing the cell, chip will be rendered by the default editor. If you want chips to be\n * consistent, you need to customize the editor too.\n *\n * ```javascript\n * new Gantt({\n *     columns: [\n *         {\n *             type     : 'resourceassignment',\n *             itemTpl  : (assignment) => assignment.resourceName,\n *             editor   : {\n *                 chipView : {\n *                     itemTpl : assignment => assignment.resourceName\n *                 }\n *             }\n *         }\n *     ]\n * });\n * ```\n *\n * {@inlineexample Gantt/column/ResourceAssignment.js}\n *\n * @extends Grid/column/Column\n * @classType resourceassignment\n * @column\n */\nexport default class ResourceAssignmentColumn extends Column {\n    internalCellCls = 'b-resourceassignment-cell';\n\n    static get $name() {\n        return 'ResourceAssignmentColumn';\n    }\n\n    static get type() {\n        return 'resourceassignment';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get fields() {\n        return [\n            /**\n             * True to show a resource avatar for every assignment. Note that you also have to provide a\n             * {@link Gantt.view.Gantt#config-resourceImageFolderPath} for where to load images from. And/or you may\n             * provide an `imageUrl` on your record, which then will take precedence when showing images.\n             * @config {Boolean} showAvatars\n             * @category Common\n             */\n            'showAvatars',\n\n            'sideMargin',\n\n            /**\n             * A function which produces the content to put in the resource assignment cell.\n             * May be overridden in subclasses, or injected into the column\n             * to customize the Chip content.\n             *\n             * Defaults to returning `${assignment.resourceName} ${assignment.units}%`\n             *\n             * @param {Gantt.model.AssignmentModel} assignment The assignment\n             * @param {Number} index The index - zero based.\n             * @config {Function} itemTpl\n             * @category Rendering\n             */\n            {\n                name         : 'itemTpl',\n                defaultValue : (assignment, index, htmlEncode = true) => {\n                    return htmlEncode ? StringHelper.encodeHtml(assignment.toString()) : assignment.toString();\n                }\n            },\n\n            /**\n             * A function which receives data about the resource and returns a html string to be displayed in the\n             * tooltip.\n             *\n             * ```javascript\n             * const gantt = new Gantt({\n             *     columns : [\n             *          {\n             *              type          : 'resourceassignment',\n             *              showAvatars : true,\n             *              avatarTooltipTemplate({ resourceRecord }) {\n             *                  return `<b>${resourceRecord.name}</b>`;\n             *              }\n             *          }\n             *     ]\n             * });\n             * ```\n             *\n             * This function will be called with an object containing the fields below:\n             *\n             * @param {Object} data\n             * @param {Gantt.model.TaskModel} data.taskRecord Hovered task\n             * @param {Gantt.model.ResourceModel} data.resourceRecord Hovered resource\n             * @param {Gantt.model.AssignmentModel} data.assignmentRecord Hovered assignment\n             * @param {Core.widget.Tooltip} data.tooltip The tooltip instance\n             * @param {Number} data.overflowCount Number of overflowing resources, only valid for last shown resource\n             * @param {Gantt.model.AssignmentModel[]} data.overflowAssignments Array of overflowing assignments, only\n             * valid for last shown resource\n             * @config {Function} avatarTooltipTemplate\n             */\n            'avatarTooltipTemplate',\n\n            /**\n             * When `true`, the names of all overflowing resources are shown in the tooltip. When `false`, the number of\n             * overflowing resources is displayed instead.\n             * Only valid for last shown resource, if there are overflowing resources.\n             * @config {Boolean} showAllNames\n             * @default true\n             * @category Common\n             */\n            { name : 'showAllNames', type : 'boolean', defaultValue : true },\n\n            /**\n             * True to allow drag-drop of resource avatars between rows. Dropping a resource outside the\n             * resource assignment cells will unassign the resource.\n             * @config {Boolean} enableResourceDragging\n             * @category Common\n             */\n            { name : 'enableResourceDragging' },\n\n            /**\n             * A config object passed to the avatar {@link Core.widget.Tooltip}\n             *\n             * ```javascript\n             * const gantt = new Gantt({\n             *     columns : [\n             *          {\n             *              type          : 'resourceassignment',\n             *              showAvatars : true,\n             *              avatarTooltip : {\n             *                  // Allow moving mouse over the tooltip\n             *                  allowOver : true\n             *              }\n             *          }\n             *     ]\n             * });\n             * ```\n             *\n             * This function will be called with an object containing the fields below:\n             *\n             * @config {TooltipConfig} avatarTooltip\n             */\n            'avatarTooltip',\n\n            { name : 'avatarMaxSize', defaultValue : 50 }\n        ];\n    }\n\n    static get defaults() {\n        return {\n            field         : 'assignments',\n            instantUpdate : false,\n            text          : 'L{Assigned Resources}',\n            width         : 250,\n            showAvatars   : false,\n            sideMargin    : 20,\n            sortable(task1, task2) {\n                const\n                    a1 = task1.assignments.join(''),\n                    a2 = task2.assignments.join('');\n\n                if (a1 === a2) {\n                    return 0;\n                }\n                return a1 < a2 ? -1 : 1;\n            },\n\n            filterable({ value, record }) {\n                // We're being passed an array of Assignments\n                if (Array.isArray(value)) {\n                    // Shortcut if we're matching no assignments.\n                    if (!value.length) {\n                        return Boolean(!record.assignments.length);\n                    }\n                    // Create a multi resource name Regexp, eg /Macy|Lee|George/.\n                    value = value.map(resourceNameRegExp).join('|');\n                }\n                const regexp = new RegExp(value, 'gi');\n\n                return record.assignments.some(assignment => regexp.test(assignment.resourceName));\n            },\n            alwaysClearCell : false\n        };\n    }\n\n    construct() {\n        super.construct(...arguments);\n\n        const\n            me       = this,\n            { grid } = me;\n\n        if (me.showAvatars) {\n            Object.assign(me, {\n                repaintOnResize : true,\n                htmlEncode      : false,\n                renderer        : me.rendererWithAvatars,\n                avatarRendering : new AvatarRendering({\n                    element : grid.element,\n                    tooltip : ObjectHelper.assign({\n                        forSelector       : '.b-resourceassignment-cell .b-resource-avatar',\n                        internalListeners : {\n                            beforeShow({ source : tooltip }) {\n                                const\n                                    {\n                                        taskRecord,\n                                        resourceRecord,\n                                        assignmentRecord,\n                                        overflowCount,\n                                        overflowAssignments\n                                    }      = tooltip.activeTarget.elementData,\n                                    result = me.avatarTooltipTemplate?.({\n                                        taskRecord, resourceRecord, assignmentRecord, overflowCount, tooltip, overflowAssignments\n                                    });\n\n                                if (tooltip.items.length === 0) {\n                                    const text   = me.showAllNames\n                                        ? `${StringHelper.encodeHtml(assignmentRecord)}<br />${overflowAssignments.join('<br />')}`\n                                        : StringHelper.xss`${assignmentRecord}${overflowCount ? ` (+${overflowCount} ${me.L('L{more resources}')})` : ''}`;\n                                    tooltip.html = result ?? text;\n                                }\n                            }\n                        }\n                    }, me.avatarTooltip)\n                })\n            });\n        }\n\n        if (me.enableResourceDragging) {\n            me.grid.ion({\n                paint   : me.setupDragging,\n                thisObj : me,\n                once    : true\n            });\n        }\n\n        grid.ion({\n            beforeCellEditStart : me.onBeforeCellEditStart,\n            finishCellEdit      : me.onDoneCellEdit,\n            cancelCellEdit      : me.onDoneCellEdit,\n            thisObj             : me\n        });\n\n        if (me.showAvatars) {\n            grid.ion({\n                beforeRenderRows : me.calculateAvatarSize,\n                once             : true,\n                thisObj          : me\n            });\n\n            grid.rowManager.ion({\n                beforeRowHeight : me.calculateAvatarSize,\n                thisObj         : me\n            });\n        }\n\n        grid.resourceStore.ion({\n            name    : 'resourceStore',\n            update  : me.onResourceUpdate,\n            thisObj : me\n        });\n    }\n\n    calculateAvatarSize({ height }) {\n        const\n            { grid }        = this,\n            rowHeight       = height || grid.rowHeight,\n            { cellElement } = grid.beginGridMeasuring();\n\n        cellElement.classList.add(this.internalCellCls);\n\n        const\n            cellStyles = globalThis.getComputedStyle(cellElement),\n            padding    = parseInt(cellStyles.paddingTop, 10);\n\n        this.avatarRendering.size = Math.min(this.avatarMaxSize, rowHeight - (2 * padding));\n\n        cellElement.classList.remove(this.internalCellCls);\n        grid.endGridMeasuring();\n    }\n\n    doDestroy() {\n        super.doDestroy();\n\n        this.avatarRendering?.destroy();\n        this.dragHelper?.destroy();\n    }\n\n    get defaultEditor() {\n        return {\n            type  : AssignmentField.type,\n            store : {\n                modelClass : this.grid.project.assignmentStore.modelClass\n            }\n        };\n    }\n\n    onBeforeCellEditStart({ editorContext : { record, column } }) {\n        const me = this;\n\n        if (column === me) {\n            const { editor } = me;\n\n            editor.resourceImageFolderPath = me.grid.resourceImageFolderPath;\n            editor.projectEvent            = record;\n\n            me.detachListeners('editorStore');\n\n            editor.store.ion({\n                name           : 'editorStore',\n                changesApplied : me.onEditorChangesApplied,\n                thisObj        : me\n            });\n        }\n    }\n\n    onDoneCellEdit() {\n        this.detachListeners('editorStore');\n    }\n\n    onEditorChangesApplied() {\n        const\n            me          = this,\n            cellElement = me.grid.getCell({ id : me.editor.projectEvent.id, columnId : me.id });\n\n        if (cellElement) {\n            me.renderer({ value : me.editor.projectEvent.assignments, cellElement });\n        }\n    }\n\n    onResourceUpdate({ source }) {\n        // no need for this listener when the gantt is loading data\n        if (!source.project?.propagatingLoadChanges) {\n            this.grid.refreshColumn(this);\n        }\n    }\n\n    get chipView() {\n        const me = this;\n\n        if (!me._chipView) {\n            me._chipView = new ChipView({\n                parent         : me,\n                cls            : 'b-assignment-chipview',\n                navigator      : null,\n                itemsFocusable : false,\n                closable       : false,\n                itemTpl        : me.itemTpl,\n                store          : {},\n                scrollable     : {\n                    overflowX : 'hidden-scroll'\n                }\n            });\n            // The List class only refreshes itself when visible, so\n            // since this is an offscreen, rendering element\n            // we have to fake visibility.\n            Object.defineProperty(me.chipView, 'isVisible', {\n                get() {\n                    return true;\n                }\n            });\n            // Complete the initialization, which is finalized on first paint.\n            // In particular the lazy scrollable config is ingested on paint.\n            me.chipView.triggerPaint();\n        }\n        return me._chipView;\n    }\n\n    renderer({ cellElement, value, isExport }) {\n        value = value.filter(a => a.resource)\n            .sort((lhs, rhs) => lhs.resourceName.localeCompare(rhs.resourceName));\n\n        if (isExport) {\n            return value.map((val, i) => this.itemTpl(val, i, false)).join(',');\n        }\n        else {\n            const\n                { chipView } = this,\n                chipViewWrap = cellElement.querySelector('.b-assignment-chipview-wrap') || (\n                    DomHelper.createElement({\n                        parent    : cellElement,\n                        className : 'b-assignment-chipview-wrap'\n                    })\n                );\n\n            chipView.store.storage.replaceValues({\n                values : value,\n                silent : true\n            });\n\n            chipView.refresh();\n            const chipCloneElement = chipView.element.cloneNode(true);\n            chipCloneElement.removeAttribute('id');\n\n            chipViewWrap.innerHTML = '';\n            chipViewWrap.appendChild(chipCloneElement);\n        }\n    }\n\n    rendererWithAvatars({ record : taskRecord, value, isExport }) {\n        value = value.filter(a => a.resource)\n            .sort((lhs, rhs) => lhs.resourceName.localeCompare(rhs.resourceName));\n\n        const\n            me                  = this,\n            { size }            = me.avatarRendering,\n            nbrVisible          = Math.floor((me.width - me.sideMargin) / (size + 2)),\n            overflowCount       = value.length > nbrVisible ? value.length - nbrVisible : 0,\n            overflowAssignments = value.length > nbrVisible ? value.filter(assignment => value.indexOf(assignment) >= nbrVisible) : [];\n\n        if (isExport) {\n            return value.map((as, i) => this.itemTpl(as, i, false)).join(',');\n        }\n\n        return {\n            className : 'b-resource-avatar-container',\n            children  : value.map((assignmentRecord, i) => {\n                const { resource : resourceRecord } = assignmentRecord;\n\n                if (i < nbrVisible) {\n                    const\n                        isLastOverflowing = overflowCount > 0 && i === nbrVisible - 1,\n                        imgConfig         = me.renderAvatar({\n                            taskRecord,\n                            resourceRecord,\n                            assignmentRecord,\n                            overflowCount       : isLastOverflowing ? overflowCount : 0,\n                            overflowAssignments : isLastOverflowing ? overflowAssignments : []\n                        });\n\n                    if (isLastOverflowing) {\n                        return {\n                            className : 'b-overflow-img',\n                            style     : {\n                                height : size + 'px',\n                                width  : size + 'px'\n                            },\n                            children : [\n                                imgConfig,\n                                {\n                                    tag       : 'span',\n                                    className : 'b-overflow-count',\n                                    html      : `+${overflowCount}`\n                                }\n                            ]\n                        };\n                    }\n\n                    return imgConfig;\n                }\n            })\n        };\n    }\n\n    renderAvatar({ taskRecord, resourceRecord, assignmentRecord, overflowCount, overflowAssignments }) {\n        const\n            {\n                resourceImageFolderPath\n            }        = this.grid,\n            imageUrl = resourceRecord.imageUrl || resourceRecord.image && resourceImageFolderPath && (resourceImageFolderPath + resourceRecord.image),\n            avatar   = this.avatarRendering.getResourceAvatar({\n                resourceRecord,\n                initials        : resourceRecord.initials,\n                color           : resourceRecord.eventColor,\n                iconCls         : resourceRecord.iconCls,\n                defaultImageUrl : this.defaultAvatar,\n                imageUrl\n            });\n\n        // Some paths in avatarRendering does not yield elementData\n        if (!avatar.elementData) {\n            avatar.elementData = {};\n        }\n\n        Object.assign(avatar.elementData, { taskRecord, resourceRecord, assignmentRecord, overflowCount, overflowAssignments });\n\n        return avatar;\n    }\n\n    get defaultAvatar() {\n        const { grid } = this;\n\n        return grid.defaultResourceImageName ? grid.resourceImageFolderPath + grid.defaultResourceImageName : '';\n    }\n\n    // Used with CellCopyPaste to be able to copy assignments from one task to another\n    toClipboardString({ record }) {\n        return StringHelper.safeJsonStringify(record[this.field]);\n    }\n\n    // Used with CellCopyPaste to be able to copy assignments from one task to another\n    fromClipboardString({ string, record }) {\n        const\n            parsedAssignments = StringHelper.safeJsonParse(string),\n            newAssignments    = [];\n\n        if (parsedAssignments?.length) {\n            for (const assignmentData of parsedAssignments) {\n                delete assignmentData.id;\n                delete assignmentData.event;\n                delete assignmentData.resource;\n                assignmentData.eventId = record.id;\n                newAssignments.push(new AssignmentModel(assignmentData));\n            }\n        }\n\n        return newAssignments;\n    }\n\n    // Only allow if complete range is only inside this column\n    canFillValue({ range }) {\n        return range.every(cs => cs.column === this);\n    }\n\n    calculateFillValue({ record, value }) {\n        const string = JSON.stringify(value);\n        return this.fromClipboardString({ string, record });\n    }\n\n    setupDragging() {\n        const\n            me       = this,\n            { grid } = me;\n\n        // Prevent row reorders from resource assignment cell\n        if (grid.features.rowReorder) {\n            grid.features.rowReorder.dragHelper.targetSelector += ' .b-grid-cell:not(.b-resourceassignment-cell)';\n        }\n\n        me.subGrid.element.classList.add('b-draggable-resource-avatars');\n\n        me.dragHelper = new DragHelper({\n            callOnFunctions : true,\n            // Don't drag the actual element, clone the avatar instead\n            cloneTarget     : true,\n            // Allow drag of row elements inside the resource grid\n            targetSelector  : '.b-resource-avatar-container > .b-resource-avatar',\n            onDragStart({ context }) {\n                const { grabbed } = context;\n\n                context.resourceRecord = grabbed.elementData.resourceRecord;\n                grid.enableScrollingCloseToEdges();\n            },\n\n            onDrag({ context, event }) {\n                const targetTask = context.targetTask = grid.resolveTaskRecord(event.target);\n\n                context.valid = Boolean(targetTask && !targetTask.resources.includes(context.resourceRecord));\n            },\n\n            // Drop callback after a mouse up. If drop is valid, the element is animated to its final position before the data transfer\n            async onDrop({ context, event }) {\n                const\n                    { targetTask, resourceRecord, valid, grabbed, element } = context,\n                    { assignmentRecord, taskRecord }                        = grabbed.elementData,\n                    validDropTarget                                         = event.target.closest('.b-resourceassignment-cell');\n\n                // We handle case of \"invalid\" drop ourselves, and when you don't drop on a resource\n                // assignment cell it means unassign (i.e. DragHelper never aborts a drop)\n                if (valid) {\n                    grabbed.style.display = 'none';\n                }\n                if (!validDropTarget) {\n                    element.style.display = 'none';\n                    // Invalid drop target means unassign\n                    taskRecord.unassign(resourceRecord);\n                }\n                else if (valid) {\n                    // Valid drop, provide a point to animate the proxy to before finishing the operation\n                    const\n                        resourceAssignmentCell = grid.getCell({\n                            column : me,\n                            record : targetTask\n                        }),\n                        avatarContainer        = resourceAssignmentCell?.querySelector('.b-resource-avatar-container');\n\n                    // Before we finalize the drop and update the task record, transition the element to the target point\n                    if (avatarContainer) {\n                        await this.animateProxyTo(avatarContainer, {\n                            align : 'l0-r0'\n                        });\n                    }\n\n                    if (!targetTask.resources.includes(resourceRecord)) {\n                        assignmentRecord.event = targetTask;\n                    }\n                }\n\n                grid.disableScrollingCloseToEdges();\n            }\n        });\n    }\n}\n\nColumnStore.registerColumnType(ResourceAssignmentColumn);\n","import CheckColumn from '../../Grid/column/CheckColumn.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\n\n/**\n * @module Gantt/column/RollupColumn\n */\n\n/**\n * A column that displays a checkbox to edit the {@link Gantt.model.TaskModel#field-rollup rollup} data field.\n * This field indicates if a task should rollup to its closest parent or not.\n * Requires the {@link Gantt.feature.Rollups Rollups} feature to be enabled.\n *\n * This column uses a {@link Core.widget.Checkbox checkbox} as its editor, and it is not intended to be changed.\n *\n * @extends Grid/column/CheckColumn\n * @classType rollup\n * @column\n */\nexport default class RollupColumn extends CheckColumn {\n\n    static get $name() {\n        return 'RollupColumn';\n    }\n\n    static get type() {\n        return 'rollup';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get defaults() {\n        return {\n            field : 'rollup',\n            text  : 'L{Rollup}'\n        };\n    }\n}\n\nColumnStore.registerColumnType(RollupColumn);\n","import Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport SchedulingDirectionPicker from '../../SchedulerPro/widget/SchedulingDirectionPicker.js';\n\n/**\n * @module Gantt/column/SchedulingDirectionColumn\n */\n\n/**\n * This is a column class for the {@link Gantt/model/TaskModel#field-direction scheduling direction}\n * field of the task model. Please refer to the documentation of that field for more details.\n *\n * Default editor is a {@link SchedulerPro/widget/SchedulingDirectionPicker}.\n *\n * The direction can be one of:\n *\n * - Forward\n * - Backward\n *\n * @extends Grid/column/Column\n * @classType schedulingdirection\n * @column\n */\nexport default class SchedulingDirectionColumn extends Column {\n\n    static $name = 'SchedulingDirectionColumn';\n\n    static type = 'schedulingdirection';\n\n    static isGanttColumn = true;\n\n    // has to be a getter for the localization test to pick up the `L{schedulingDirection}` usage\n    static get defaults() {\n        return {\n            field  : 'direction',\n            text   : 'L{schedulingDirection}',\n            width  : 146,\n            editor : {\n                type         : 'schedulingdirectionpicker',\n                allowInvalid : false\n            },\n            filterable : {\n                filterField : {\n                    type : 'schedulingdirectionpicker'\n                }\n            }\n        };\n    }\n\n    getEnforcedName(task) {\n        return task.name || (task.isRoot ? 'Project' : `Task #${ task.id }`);\n    }\n\n    get tooltipRenderer() {\n        if (this._tooltipRenderer !== undefined) {\n            return this._tooltipRenderer;\n        }\n\n        return this._tooltipRenderer = ({ record }) => {\n            const { effectiveDirection } = record;\n\n            if (!effectiveDirection) {\n                return false;\n            }\n\n            if (effectiveDirection.kind === 'enforced') {\n                return this.L('L{enforcedBy}') + ` \"${ this.getEnforcedName(effectiveDirection.enforcedBy) }\"`;\n            }\n            else if (effectiveDirection.kind === 'inherited') {\n                return this.L('L{inheritedFrom}') + ` \"${ this.getEnforcedName(effectiveDirection.inheritedFrom) }\"`;\n            }\n            else {\n                return undefined;\n            }\n        };\n    }\n\n    renderer({ record }) {\n        const { effectiveDirection } = record;\n\n        if (!effectiveDirection) {\n            return '';\n        }\n\n        let value;\n\n        if (effectiveDirection.kind === 'enforced') {\n            value = effectiveDirection.direction;\n        }\n        else if (effectiveDirection.kind === 'inherited') {\n            value = effectiveDirection.direction;\n        }\n        else {\n            value = record.direction;\n        }\n\n        return SchedulingDirectionPicker.localize(value) || '';\n    }\n}\n\nColumnStore.registerColumnType(SchedulingDirectionColumn);\n","import Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport FunctionHelper from '../../Core/helper/FunctionHelper.js';\nimport SchedulingModePicker from '../../SchedulerPro/widget/SchedulingModePicker.js';\n\n/**\n * @module Gantt/column/SchedulingModeColumn\n */\n\n/**\n * A column which displays a task's scheduling {@link Gantt.model.TaskModel#field-schedulingMode mode} field.\n *\n * Default editor is a {@link SchedulerPro.widget.SchedulingModePicker SchedulingModePicker}.\n *\n * @extends Grid/column/Column\n * @classType schedulingmodecolumn\n * @column\n */\nexport default class SchedulingModeColumn extends Column {\n\n    static get $name() {\n        return 'SchedulingModeColumn';\n    }\n\n    static get type() {\n        return 'schedulingmodecolumn';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get defaults() {\n        return {\n            field  : 'schedulingMode',\n            text   : 'L{Scheduling Mode}',\n            editor : {\n                type         : SchedulingModePicker.type,\n                allowInvalid : false,\n                picker       : {\n                    minWidth : '8.5em'\n                }\n            }\n        };\n    }\n\n    afterConstruct() {\n        const me = this;\n\n        super.afterConstruct();\n\n        let store;\n        // we need to trigger the column refresh **after** the editor locale change\n        // to display properly translated scheduling modes\n        if (me.editor) {\n            FunctionHelper.createSequence(me.editor.updateLocalization, me.onEditorLocaleChange, me);\n            store = me.editor.store;\n        }\n        else {\n            store = new SchedulingModePicker().store;\n        }\n        this.store = store;\n    }\n\n    renderer({ value }) {\n        const model = this.store.getById(value);\n        return model && model.text || '';\n    }\n\n    // Refreshes the column **after** the editor locale change\n    // to display properly translated scheduling modes\n    onEditorLocaleChange() {\n        this.grid.refreshColumn(this);\n    }\n\n    // Only allow if complete range is only inside this column\n    canFillValue({ range }) {\n        return range.every(cs => cs.column === this);\n    }\n\n}\n\nColumnStore.registerColumnType(SchedulingModeColumn);\n","import Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\n\n/**\n * @module Gantt/column/SequenceColumn\n */\n\n/**\n * A \"calculated\" column which displays the sequential position of the task in the project.\n *\n * There is no `editor`, since value is read-only.\n *\n * See {@link Gantt.model.TaskModel#property-sequenceNumber} for details.\n *\n * @extends Grid/column/Column\n * @classType sequence\n * @column\n */\nexport default class SequenceColumn extends Column {\n\n    static get $name() {\n        return 'SequenceColumn';\n    }\n\n    static get type() {\n        return 'sequence';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get defaults() {\n        return {\n            field      : 'sequenceNumber',\n            text       : 'L{Sequence}',\n            sortable   : false,\n            groupable  : false,\n            filterable : false,\n            width      : 70,\n            editor     : null\n        };\n    }\n}\n\nColumnStore.registerColumnType(SequenceColumn);\n","import CheckColumn from '../../Grid/column/CheckColumn.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\n\n/**\n * @module Gantt/column/ShowInTimelineColumn\n */\n\n/**\n * Column that shows if a task should be shown in the {@link SchedulerPro.widget.Timeline Timeline} widget.\n *\n * This column uses a {@link Core.widget.Checkbox checkbox} as its editor, and it is not intended to be changed.\n *\n * @extends Grid/column/CheckColumn\n * @classType showintimeline\n * @column\n */\nexport default class ShowInTimelineColumn extends CheckColumn {\n\n    static get $name() {\n        return 'ShowInTimelineColumn';\n    }\n\n    static get type() {\n        return 'showintimeline';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get defaults() {\n        return {\n            field : 'showInTimeline',\n            text  : 'L{Show in timeline}'\n        };\n    }\n}\n\nColumnStore.registerColumnType(ShowInTimelineColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport GanttDateColumn from '../../Gantt/column/GanttDateColumn.js';\nimport '../../SchedulerPro/widget/StartDateField.js';\n\n/**\n * @module Gantt/column/StartDateColumn\n */\n\n/**\n * A column that displays (and allows user to update) the task's {@link Gantt.model.TaskModel#field-startDate start date}.\n *\n * Default editor is a {@link SchedulerPro.widget.StartDateField StartDateField}.\n *\n * If {@link #config-format} is omitted, Gantt's {@link Scheduler.view.mixin.TimelineViewPresets#config-displayDateFormat} will be used as a default value and\n * the format will be dynamically updated while zooming according to the {@link Scheduler.preset.ViewPreset#field-displayDateFormat} value specified for the ViewPreset being selected.\n *\n * @extends Gantt/column/GanttDateColumn\n * @classType startdate\n * @column\n */\nexport default class StartDateColumn extends GanttDateColumn {\n\n    static get $name() {\n        return 'StartDateColumn';\n    }\n\n    static get type() {\n        return 'startdate';\n    }\n\n    static get defaults() {\n        return {\n            field : 'startDate',\n            text  : 'L{Start}'\n        };\n    }\n\n    get defaultEditor() {\n        const editorCfg = super.defaultEditor;\n\n        editorCfg.type = 'startdate';\n\n        return editorCfg;\n    }\n}\n\nColumnStore.registerColumnType(StartDateColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport DependencyColumn from './DependencyColumn.js';\n\n/**\n * @module Gantt/column/SuccessorColumn\n */\n\n/**\n * A column which displays, in textual form, the dependencies which link from the\n * contextual to successor tasks.\n *\n * This type of column is editable by default. Default editor is a {@link Gantt/widget/DependencyField}.\n *\n * This column will be ignored if using {@link Grid/feature/CellCopyPaste} to paste or {@link Grid/feature/FillHandle}\n * to fill values.\n *\n * @classType successor\n * @extends Gantt/column/DependencyColumn\n * @column\n */\nexport default class SuccessorColumn extends DependencyColumn {\n\n    static get $name() {\n        return 'SuccessorColumn';\n    }\n\n    static get type() {\n        return 'successor';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get defaults() {\n        return {\n            text  : 'L{Successors}',\n            field : 'successors'\n        };\n    }\n\n    canFillValue = () => false;\n}\n\nColumnStore.registerColumnType(SuccessorColumn);\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport DurationColumn from '../../Scheduler/column/DurationColumn.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport Duration from '../../Core/data/Duration.js';\n\n/**\n * @module Gantt/column/TotalSlackColumn\n */\n\n/**\n * A column that displays the task's {@link Gantt.model.TaskModel#field-totalSlack total slack}.\n *\n * Default editor is a {@link Core.widget.DurationField DurationField}.\n *\n * @extends Scheduler/column/DurationColumn\n * @classType totalslack\n * @column\n */\nexport default class TotalSlackColumn extends DurationColumn {\n\n    static get $name() {\n        return 'TotalSlackColumn';\n    }\n\n    static get type() {\n        return 'totalslack';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    get durationUnitField() {\n        return 'slackUnit';\n    }\n\n    static get defaults() {\n        return {\n            field : 'totalSlack',\n            text  : 'L{Total Slack}',\n            filterable({ value, record, operator, column }) {\n                const\n                    a = DateHelper.asMilliseconds(column.roundValue(record.totalSlack), record.slackUnit),\n                    b = value.milliseconds;\n\n                switch (operator) {\n                    case '='  : return a === b;\n                    case '<'  : return a < b;\n                    case '<=' : return a <= b;\n                    case '>'  : return a > b;\n                    case '>=' : return a >= b;\n                    default   : throw new Error('Invalid operator ' + operator);\n                }\n            }\n        };\n    }\n\n    getFilterableValue(record) {\n        return new Duration({\n            magnitude : record.totalSlack,\n            unit      : record.slackUnit\n        });\n    }\n}\n\nColumnStore.registerColumnType(TotalSlackColumn);\n","import Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\n\n/**\n * @module Gantt/column/WBSColumn\n */\n\n/**\n * A calculated column which displays the _WBS_ (_Work Breakdown Structure_) for the tasks - the position of the task\n * in the project tree structure.\n *\n * While there is no `editor`, since the WBS is a calculated value, there is a `renumber` item in the `headerMenuItems`\n * that allows the user to {@link Gantt.model.TaskModel#function-refreshWbs refresh} the WBS values.\n *\n * @extends Grid/column/Column\n * @classType wbs\n * @column\n */\nexport default class WBSColumn extends Column {\n\n    static get $name() {\n        return 'WBSColumn';\n    }\n\n    static get type() {\n        return 'wbs';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get defaults() {\n        return {\n            field  : 'wbsValue',\n            text   : 'L{WBS}',\n            width  : 70,\n            editor : null,\n\n            filterable({ value, record }) {\n                // value might be WBS instance\n                return record.wbsValue.match(String(value));\n            },\n\n            headerMenuItems : {\n                renumber : {\n                    text : 'L{WBSColumn.renumber}',\n                    icon : 'b-icon-renumber',\n\n                    onItem({ source }) {\n                        source.taskStore.rootNode.refreshWbs();\n                    }\n                }\n            },\n\n            // This renderer is required to force string WBS value for TableExporter. zipcelx will call `valueOf` (value + '')\n            // which would return padded value.\n            renderer({ value }) {\n                return String(value);\n            }\n        };\n    }\n\n    canFillValue = () => false;\n}\n\nColumnStore.registerColumnType(WBSColumn);\n","import AddNewColumn from './AddNewColumn.js';\nimport BaselineStartDateColumn from './BaselineStartDateColumn.js';\nimport BaselineEndDateColumn from './BaselineEndDateColumn.js';\nimport BaselineDurationColumn from './BaselineDurationColumn.js';\nimport BaselineDurationVarianceColumn from './BaselineDurationVarianceColumn.js';\nimport BaselineStartVarianceColumn from './BaselineStartVarianceColumn.js';\nimport BaselineEndVarianceColumn from './BaselineEndVarianceColumn.js';\nimport CalendarColumn from './CalendarColumn.js';\nimport ConstraintDateColumn from './ConstraintDateColumn.js';\nimport ConstraintTypeColumn from './ConstraintTypeColumn.js';\nimport DeadlineDateColumn from './DeadlineDateColumn.js';\nimport DurationColumn from '../../Scheduler/column/DurationColumn.js';\nimport EarlyEndDateColumn from './EarlyEndDateColumn.js';\nimport EarlyStartDateColumn from './EarlyStartDateColumn.js';\nimport EffortColumn from './EffortColumn.js';\nimport EndDateColumn from './EndDateColumn.js';\n// Not including EventModelColumn on purpose\nimport IgnoreResourceCalendarColumn from './IgnoreResourceCalendarColumn.js';\nimport InactiveColumn from './InactiveColumn.js';\nimport LateEndDateColumn from './LateEndDateColumn.js';\nimport LateStartDateColumn from './LateStartDateColumn.js';\nimport ManuallyScheduledColumn from './ManuallyScheduledColumn.js';\nimport MilestoneColumn from './MilestoneColumn.js';\nimport NameColumn from './NameColumn.js';\nimport NoteColumn from './NoteColumn.js';\nimport PercentDoneColumn from './PercentDoneColumn.js';\nimport PredecessorColumn from './PredecessorColumn.js';\nimport ResourceAssignmentColumn from './ResourceAssignmentColumn.js';\nimport RollupColumn from './RollupColumn.js';\nimport SchedulingDirectionColumn from './SchedulingDirectionColumn.js';\nimport SchedulingModeColumn from './SchedulingModeColumn.js';\nimport SequenceColumn from './SequenceColumn.js';\nimport ShowInTimelineColumn from './ShowInTimelineColumn.js';\nimport StartDateColumn from './StartDateColumn.js';\nimport SuccessorColumn from './SuccessorColumn.js';\nimport TotalSlackColumn from './TotalSlackColumn.js';\nimport WBSColumn from './WBSColumn.js';\n\n/**\n * @module Gantt/column/AllColumns\n *\n * Imports all currently developed Gantt columns and re-exports them in an object.\n * Should be used to import and register all Gantt columns.\n */\nexport default {\n    AddNewColumn,\n    BaselineStartDateColumn,\n    BaselineEndDateColumn,\n    BaselineDurationColumn,\n    BaselineStartVarianceColumn,\n    BaselineEndVarianceColumn,\n    BaselineDurationVarianceColumn,\n    CalendarColumn,\n    ConstraintDateColumn,\n    ConstraintTypeColumn,\n    DeadlineDateColumn,\n    DurationColumn,\n    EarlyEndDateColumn,\n    EarlyStartDateColumn,\n    EffortColumn,\n    EndDateColumn,\n    IgnoreResourceCalendarColumn,\n    InactiveColumn,\n    LateEndDateColumn,\n    LateStartDateColumn,\n    ManuallyScheduledColumn,\n    MilestoneColumn,\n    NameColumn,\n    NoteColumn,\n    PercentDoneColumn,\n    PredecessorColumn,\n    ResourceAssignmentColumn,\n    RollupColumn,\n    SchedulingDirectionColumn,\n    SchedulingModeColumn,\n    SequenceColumn,\n    ShowInTimelineColumn,\n    StartDateColumn,\n    SuccessorColumn,\n    TotalSlackColumn,\n    WBSColumn\n};\n","import CheckColumn from '../../Grid/column/CheckColumn.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\n\n/**\n * A column that displays (and allows user to update) the task's\n * {@link Gantt.model.TaskModel#field-manuallyScheduled manuallyScheduled} field.\n *\n * This column uses a {@link Core.widget.Checkbox checkbox} as its editor, and it is not intended to be changed.\n *\n * @extends Grid/column/CheckColumn\n * @classType eventmode\n * @column\n */\nexport default class EventModeColumn extends CheckColumn {\n\n    static get $name() {\n        return 'EventModeColumn';\n    }\n\n    static get type() {\n        return 'eventmode';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get defaults() {\n        return {\n            field : 'manuallyScheduled',\n            align : 'left',\n            text  : 'L{Event mode}'\n        };\n    }\n\n    internalRenderer({ value, cellElement, column, isExport }) {\n        super.internalRenderer(...arguments);\n\n        if (isExport) {\n            return this.renderText(value);\n        }\n        else {\n            if (cellElement.widget) {\n                cellElement.widget.text = this.renderText(value);\n            }\n        }\n    }\n\n    onCheckboxChange({ source, checked }) {\n        super.onCheckboxChange(...arguments);\n        source.text = this.renderText(checked);\n    }\n\n    renderText(value) {\n        return value ? this.L('L{Manual}') : this.L('L{Auto}');\n    }\n}\n\nColumnStore.registerColumnType(EventModeColumn);\n","import SchedulerTimeAxisColumn from '../../Scheduler/column/TimeAxisColumn.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\n\n/**\n * @module Gantt/column/TimeAxisColumn\n */\n\n/**\n * A column containing the timeline \"viewport\", in which tasks, dependencies etc. are drawn.\n * Normally you do not need to interact with or create this column, it is handled by Gantt.\n *\n * @extends Scheduler/column/TimeAxisColumn\n * @column\n *\n * @typings Scheduler.column.TimeAxisColumn -> Scheduler.column.SchedulerTimeAxisColumn\n */\nexport default class TimeAxisColumn extends SchedulerTimeAxisColumn {\n\n    static get defaults() {\n        return {\n            /**\n             * Set to `false` to disable {@link Gantt.feature.TaskMenu TaskMenu} for the cell elements in this column.\n             * @config {Boolean} enableCellContextMenu\n             * @default true\n             * @category Menu\n             */\n            enableCellContextMenu : true\n        };\n    }\n\n}\n\nColumnStore.registerColumnType(TimeAxisColumn);\n","import SchedulerProAssignmentStore from '../../SchedulerPro/data/AssignmentStore.js';\nimport AssignmentModel from '../model/AssignmentModel.js';\n\n/**\n * @module Gantt/data/AssignmentStore\n */\n\n/**\n * A class representing a collection of assignments between tasks in the {@link Gantt/data/TaskStore} and resources\n * in the {@link Gantt/data/ResourceStore}.\n *\n * ```javascript\n * const assignmentStore = new AssignmentStore({\n *     data : [\n *         { \"id\" : 1, \"event\" : 11,  \"resource\" : 1 },\n *         { \"id\" : 2, \"event\" : 12,  \"resource\" : 1 },\n *     ]\n * })\n * ```\n *\n * Contains a collection of the {@link Gantt/model/AssignmentModel} records.\n *\n * @extends SchedulerPro/data/AssignmentStore\n *\n * @typings SchedulerPro.data.AssignmentStore -> SchedulerPro.data.SchedulerProAssignmentStore\n */\nexport default class AssignmentStore extends SchedulerProAssignmentStore {\n    static get defaultConfig() {\n        return {\n            modelClass : AssignmentModel,\n\n            /**\n             * CrudManager must load stores in the correct order. Lowest first.\n             * @private\n             */\n            loadPriority : 500,\n\n            /**\n             * CrudManager must sync stores in the correct order. Lowest first.\n             * @private\n             */\n            syncPriority : 400\n        };\n    }\n}\n","import SchedulerProCalendarModel from '../../SchedulerPro/model/CalendarModel.js';\n\n/**\n * @module Gantt/model/CalendarModel\n */\n\n/**\n * This class represents a calendar in the Gantt project. It contains a collection of the {@link SchedulerPro.model.CalendarIntervalModel}.\n * Every interval can be either recurrent (regularly repeating in time) or static.\n *\n * Please refer to the [calendars guide](#Gantt/guides/basics/calendars.md) for details\n *\n * @extends SchedulerPro/model/CalendarModel\n *\n * @typings SchedulerPro.model.CalendarModel -> SchedulerPro.model.SchedulerProCalendarModel\n */\nexport default class CalendarModel extends SchedulerProCalendarModel {}\n","import SchedulerProCalendarManagerStore from '../../SchedulerPro/data/CalendarManagerStore.js';\nimport CalendarModel from '../model/CalendarModel.js';\n\n/**\n * @module Gantt/data/CalendarManagerStore\n */\n\n/**\n * A class representing the tree of calendars in the Gantt chart. An individual calendar is represented as an instance of the\n * {@link Gantt.model.CalendarModel} class. The store expects the data loaded to be hierarchical. Each parent node should\n * contain its children in a property called 'children'.\n *\n * Please refer to the [calendars guide](#Gantt/guides/basics/calendars.md) for details\n *\n * @extends SchedulerPro/data/CalendarManagerStore\n *\n * @typings SchedulerPro.data.CalendarManagerStore -> SchedulerPro.data.SchedulerProCalendarManagerStore\n */\nexport default class CalendarManagerStore extends SchedulerProCalendarManagerStore {\n    static get defaultConfig() {\n        return {\n            modelClass : CalendarModel\n        };\n    }\n}\n","import SchedulerProDependencyModel from '../../SchedulerPro/model/DependencyModel.js';\n\n/**\n * @module Gantt/model/DependencyModel\n */\n\n/**\n * This class represents a single dependency between the tasks in your Gantt project.\n *\n * ## Subclassing the Dependency class\n *\n * The name of any field in data can be customized in the subclass, see the example below.\n *\n * ```javascript\n * class MyDependencyModel extends DependencyModel {\n *   static get fields() {\n *     return [\n *       { name: 'to', dataSource : 'targetId' },\n *       { name: 'from', dataSource : 'sourceId' }\n *     ];\n *   }\n * }\n * ```\n *\n * @extends SchedulerPro/model/DependencyModel\n *\n * @typings Scheduler.model.DependencyModel -> Scheduler.model.SchedulerDependencyModel\n * @typings SchedulerPro.model.DependencyModel -> SchedulerPro.model.SchedulerProDependencyModel\n */\nexport default class DependencyModel extends SchedulerProDependencyModel {\n\n    constructor(...args) {\n        const [config] = args;\n\n        if (config?.fromTask) {\n            config.fromEvent = config.fromTask;\n        }\n\n        if (config?.toTask) {\n            config.toEvent = config.toTask;\n        }\n\n        super(...args);\n    }\n\n    get from() {\n        return this.fromEvent?.id;\n    }\n\n    set from(value) {\n        super.from = value;\n    }\n\n    /**\n     * The origin task of this dependency.\n     *\n     * Accepts multiple formats but always returns an {@link Gantt.model.TaskModel}.\n     *\n     * **NOTE:** This is not a proper field but rather an alias, it will be serialized but cannot be remapped. If you\n     * need to remap, consider using {@link #field-from} instead.\n     *\n     * @field {Gantt.model.TaskModel} fromTask\n     * @accepts {String|Number|Gantt.model.TaskModel}\n     * @category Dependency\n     */\n\n    /**\n     * The destination task of this dependency.\n     *\n     * Accepts multiple formats but always returns an {@link Gantt.model.TaskModel}.\n     *\n     * **NOTE:** This is not a proper field but rather an alias, it will be serialized but cannot be remapped. If you\n     * need to remap, consider using {@link #field-to} instead.\n     *\n     * @field {Gantt.model.TaskModel} toTask\n     * @accepts {String|Number|Gantt.model.TaskModel}\n     * @category Dependency\n     */\n\n    get fromTask() {\n        return this.fromEvent;\n    }\n\n    set fromTask(task) {\n        this.fromEvent = task;\n    }\n\n    get to() {\n        return this.toEvent?.id;\n    }\n\n    set to(value) {\n        super.to = value;\n    }\n\n    get toTask() {\n        return this.toEvent;\n    }\n\n    set toTask(task) {\n        this.toEvent = task;\n    }\n\n    // <remove-on-release>\n    // Override persistable getter to prevent sending whole task data but sending only the id only\n    // TODO: Remove as part of https://github.com/bryntum/support/issues/1955\n    // </remove-on-release>\n    get persistableData() {\n        const\n            data                 = super.persistableData,\n            { fromTask, toTask } = data;\n\n        if (fromTask) {\n            data.fromTask = fromTask.id;\n        }\n\n        if (toTask) {\n            data.toTask = toTask.id;\n        }\n\n        return data;\n    }\n\n    shouldRecordFieldChange(fieldName, oldValue, newValue) {\n        if (fieldName === 'from' || fieldName === 'to') {\n            // we don't need to record the changes in the computed `to/from` fields\n            // note, that at the scheduler basic level, we do record changes in those fields,\n            // because there the fields are \"real\"\n            return false;\n        }\n        else {\n            return super.shouldRecordFieldChange(fieldName, oldValue, newValue);\n        }\n    }\n}\n","import SchedulerProDependencyStore from '../../SchedulerPro/data/DependencyStore.js';\nimport DependencyModel from '../model/DependencyModel.js';\n\n/**\n * @module Gantt/data/DependencyStore\n */\n\n/**\n * A class representing a collection of dependencies between tasks in the {@link Gantt.data.TaskStore}.\n * Contains a collection of {@link Gantt.model.DependencyModel} records.\n *\n * ```javascript\n * const dependencyStore = new DependencyStore({\n *     data : [\n *         {\n *             \"id\"       : 1,\n *             \"fromTask\" : 11,\n *             \"toTask\"   : 15,\n *             \"lag\"      : 2\n *         },\n *         {\n *             \"id\"       : 2,\n *             \"fromTask\" : 12,\n *             \"toTask\"   : 15\n *         }\n *     ]\n * })\n * ```\n *\n * @extends SchedulerPro/data/DependencyStore\n *\n * @typings SchedulerPro.data.DependencyStore -> SchedulerPro.data.SchedulerProDependencyStore\n */\nexport default class DependencyStore extends SchedulerProDependencyStore {\n    static get defaultConfig() {\n        return {\n            modelClass : DependencyModel,\n\n            /**\n             * CrudManager must load stores in the correct order. Lowest first.\n             * @private\n             */\n            loadPriority : 300,\n\n            /**\n             * CrudManager must sync stores in the correct order. Lowest first.\n             * @private\n             */\n            syncPriority : 500\n        };\n    }\n}\n","import SchedulerProResourceModel from '../../SchedulerPro/model/ResourceModel.js';\n\n/**\n * @module Gantt/model/ResourceModel\n */\n\n/**\n * This class represents a single resource in your Gantt project.\n *\n * If you want to add or change some fields, describing resources - subclass this class:\n *\n * ```javascript\n * class MyResourceModel extends ResourceModel {\n *\n *   static get fields() {\n *     return [\n *       { name: 'company', type: 'string' }\n *     ]\n *   }\n * }\n * ```\n *\n * See also: {@link Gantt.model.AssignmentModel}\n * @extends SchedulerPro/model/ResourceModel\n *\n * @typings SchedulerPro.model.ResourceModel -> SchedulerPro.model.SchedulerProResourceModel\n */\nexport default class ResourceModel extends SchedulerProResourceModel {\n    /**\n     * Get associated tasks\n     *\n     * @member {SchedulerPro.model.EventModel[]} events\n     * @readonly\n     */\n}\n","import SchedulerProResourceStore from '../../SchedulerPro/data/ResourceStore.js';\nimport ResourceModel from '../model/ResourceModel.js';\n\n/**\n * @module Gantt/data/ResourceStore\n */\n\n/**\n * A class representing the collection of the resources - {@link Gantt.model.ResourceModel} records.\n *\n * ```javascript\n * const resourceStore = new ResourceStore({\n *     data : [\n *         { \"id\" : 1, \"name\" : \"John Doe\" },\n *         { \"id\" : 2, \"name\" : \"Jane Doe\" }\n *     ]\n * })\n * ```\n *\n * @extends SchedulerPro/data/ResourceStore\n *\n * @typings SchedulerPro.data.ResourceStore -> SchedulerPro.data.SchedulerProResourceStore\n */\nexport default class ResourceStore extends SchedulerProResourceStore {\n    static get defaultConfig() {\n        return {\n            modelClass : ResourceModel,\n\n            /**\n             * CrudManager must load stores in the correct order. Lowest first.\n             * @private\n             */\n            loadPriority : 400,\n\n            /**\n             * CrudManager must sync stores in the correct order. Lowest first.\n             * @private\n             */\n            syncPriority : 200\n        };\n    }\n}\n","import TimeSpan from '../../Scheduler/model/TimeSpan.js';\nimport Duration from '../../Core/data/Duration.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\n\n/**\n * @module Gantt/model/Baseline\n */\n\n/**\n * This class represents a baseline of a Task.\n *\n * Records based on this model are initially created when tasks are loaded into the TaskStore. If dates (startDate and\n * endDate) are left out, the task's dates will be used. If dates are `null`, dates will be empty and the baseline bar\n * won't be displayed in the UI.\n *\n * @extends Scheduler/model/TimeSpan\n */\nexport default class Baseline extends TimeSpan {\n    //region Fields\n\n    // <remove-on-release>\n    // TODO: handle persist? defaultValue?\n    // </remove-on-release>\n    static fields = [\n        /**\n         * The owning Task of the Baseline\n         * @field {Gantt.model.TaskModel} task\n         */\n        {\n            name    : 'task',\n            persist : false\n        }\n\n        /**\n         * Start date of the baseline in ISO 8601 format.\n         *\n         * Note that the field always returns a `Date`.\n         *\n         * @field {Date} startDate\n         * @accepts {String|Date}\n         */\n\n        /**\n         * End date of the baseline in ISO 8601 format.\n         *\n         * Note that the field always returns a `Date`.\n         *\n         * @field {Date} endDate\n         * @accepts {String|Date}\n         */\n\n        /**\n         * An encapsulation of the CSS classes to be added to the rendered baseline element.\n         *\n         * Always returns a {@link Core.helper.util.DomClassList}, but may still be treated as a string. For\n         * granular control of adding and removing individual classes, it is recommended to use the\n         * {@link Core.helper.util.DomClassList} API.\n         *\n         * @field {Core.helper.util.DomClassList} cls\n         * @accepts {Core.helper.util.DomClassList|String}\n         */\n\n    ];\n\n    //endregion\n\n    isBaseline = true;\n\n    //region Milestone\n\n    get milestone() {\n        // a summary baseline may have zero duration when \"recalculateParents\" is on\n        // and a child baseline has working time on the summary baseline non-working time\n        // so we operate start and end date pair here\n        if (!this.isLeaf) {\n            const { startDate, endDate } = this;\n\n            if (startDate && endDate) {\n                return endDate.getTime() === startDate.getTime();\n            }\n        }\n\n        return this.duration === 0;\n    }\n\n    set milestone(value) {\n        value ? this.convertToMilestone() : this.convertToRegular();\n    }\n\n    async setMilestone(value) {\n        return value ? this.convertToMilestone() : this.convertToRegular();\n    }\n\n    /**\n     * Converts this baseline to a milestone (start date will match the end date).\n     *\n     * @propagating\n     */\n    async convertToMilestone() {\n        return this.setDuration(0, this.durationUnit, false);\n    }\n\n    /**\n     * Converts a milestone baseline to a regular baseline with a duration of 1 (keeping current `durationUnit`).\n     *\n     * @propagating\n     */\n    async convertToRegular() {\n        if (this.milestone) {\n            return this.setDuration(1, this.durationUnit, false);\n        }\n    }\n\n    //endregion\n\n    // Uses engine to calculate dates and/or duration.\n    normalize() {\n        const\n            me = this,\n            { task, startDate, endDate, duration } = me,\n            hasDuration  = duration != null;\n\n        if (!task.graph) {\n            super.normalize();\n        }\n        else {\n            // need to calculate duration (checking first since seemed most likely to happen)\n            if (startDate && endDate && !hasDuration) {\n                me.setData('duration', task.run('calculateProjectedDuration', startDate, endDate));\n            }\n            // need to calculate endDate\n            else if (startDate && !endDate && hasDuration) {\n                me.setData('endDate', task.run('calculateProjectedXDateWithDuration', startDate, true, duration));\n            }\n            // need to calculate startDate\n            else if (!startDate && endDate && hasDuration) {\n                me.setData('startDate', task.run('calculateProjectedXDateWithDuration', endDate, false, duration));\n            }\n        }\n    }\n\n    //region Baseline APIs\n\n    /**\n     * Baseline start variance in the task's duration unit.\n     * @member {Core.data.Duration}\n     * @category Scheduling\n     */\n    get startVariance() {\n        const\n            { task } = this,\n            variance = DateHelper.getDurationInUnit(this.startDate, task.startDate, task.durationUnit);\n\n        return new Duration({ magnitude : variance, unit : task.durationUnit });\n    }\n\n    /**\n     * Baseline end variance in the task's duration unit.\n     * @member {Core.data.Duration}\n     * @category Scheduling\n     */\n    get endVariance() {\n        const\n            { task } = this,\n            variance = DateHelper.getDurationInUnit(this.endDate, task.endDate, task.durationUnit);\n\n        return new Duration({ magnitude : variance, unit : task.durationUnit });\n    }\n\n    /**\n     * Baseline duration variance in the task's duration unit.\n     * @member {Core.data.Duration}\n     * @category Scheduling\n     */\n    get durationVariance() {\n        return this.fullDuration && this.task.fullDuration.diff(this.fullDuration);\n    }\n\n    //endregion\n}\n","import DataField from '../../../Core/data/field/DataField.js';\nimport Wbs from '../../../Core/data/Wbs.js';\n\n/**\n * @module Gantt/data/field/WbsField\n */\n\n/**\n * This class is used for a WBS (Work Breakdown Structure) field. These fields hold a {@link Gantt.data.Wbs}\n * object for their value.\n *\n * @extends Core/data/field/DataField\n * @inputfield\n */\nexport default class WbsField extends DataField {\n    static get type() {\n        return 'wbs';\n    }\n\n    convert(value) {\n        return Wbs.from(value);\n    }\n\n    serialize(value) {\n        // the wbsValue field is not persistent, so this is likely not going to be called... however, the user could\n        // flip that option so we implement this method in case that happens.\n        return String(value);\n    }\n}\n\nWbsField.prototype.compare = Wbs.compare;\n\nWbsField.initClass();\n","import DateHelper from '../../Core/helper/DateHelper.js';\nimport Duration from '../../Core/data/Duration.js';\nimport Store from '../../Core/data/Store.js';\nimport TimeSpan from '../../Scheduler/model/TimeSpan.js';\nimport DependencyBaseModel from '../../Scheduler/model/DependencyBaseModel.js';\nimport PercentDoneMixin from '../../SchedulerPro/model/mixin/PercentDoneMixin.js';\nimport { GanttEvent } from '../../Engine/quark/model/gantt/GanttEvent.js';\nimport PartOfProject from '../data/mixin/PartOfProject.js';\nimport Baseline from './Baseline.js';\nimport Wbs from '../../Core/data/Wbs.js';\nimport '../data/field/WbsField.js';\nimport EventSegmentModel from '../../SchedulerPro/model/EventSegmentModel.js';\n\n/**\n * @module Gantt/model/TaskModel\n */\n\nconst\n    // A utility function to populate a Task's baseline with the Task's default values\n    applyBaselineDefaults   = (task, baselines) => {\n        const {\n            startDate, durationUnit, endDate\n        } = task;\n\n        return baselines ? baselines.map(baseline => {\n            // Baseline has its own data if at least two of the following are defined.\n            // The remaining data, if incomplete, will be calculated in Baseline normalize() method\n            const\n                hasData = (+('startDate' in baseline) + ('endDate' in baseline) + ('duration' in baseline)) > 1,\n                data    = { task, ...baseline };\n\n            // Don't fill dates that are missing in loaded data\n            // https://github.com/bryntum/support/issues/4309\n            if (!hasData) {\n                Object.assign(data, { startDate, endDate, durationUnit });\n            }\n            return data;\n        }) : [];\n    },\n\n    descendingWbsSorter     = s => s.field === 'wbsValue' && !s.ascending,\n    isReversed              = children => {\n        for (let firstChildWbs, childWbs, i = 0, n = children.length; i < n; ++i) {\n            childWbs = children[i].wbsValue;\n\n            if (childWbs) {\n                if (firstChildWbs) {\n                    return childWbs < firstChildWbs;\n                }\n\n                firstChildWbs = childWbs;\n            }\n        }\n\n        return false;\n    },\n    // Refresh siblings in depth when it's not initial WBS calculation\n    refreshWbsOptions       = { deep : true },\n    // Record should not be considered modified by initial assignment of wbsValue\n    refreshWbsOnJoinOptions = { deep : true, silent : true };\n\n/**\n * Options for the `convertEmptyParentToLeaf` static property.\n * @typedef {Object} ConvertEmptyParentToLeafOptions\n * @property {Boolean} onLoad `true` to convert empty parent tasks to leaf tasks on load\n * @property {Boolean} onRemove `true` to convert parent tasks that become empty after removing a child to leaf tasks\n */\n\n/**\n * This class represents a task in your Gantt project. Extend it to add your own custom task fields and methods.\n *\n * ## Subclassing the TaskModel class\n * To subclass the TaskModel and add extra {@link Core.data.Model#property-fields-static} and API methods, please see\n * the snippet below.\n *\n *```javascript\n * class MyTaskModel extends TaskModel {\n *   static get fields() {\n *       return [\n *           { name: 'importantDate', type: 'date' }\n *       ]\n *   }\n *```\n *\n * After creating your own Task model class, configure the {@link Gantt.model.ProjectModel#config-taskModelClass} on\n * Project to use it:\n *\n *```javascript\n * new Gantt({\n *     project : {\n *         taskModelClass : MyTaskModel\n *     }\n * });\n *```\n *\n * ## Creating a new Task programmatically\n *\n * To create a new task programmatically, simply call the TaskModel constructor and pass in any field values.\n *\n * ```javascript\n * const newTask = new TaskModel({\n *     name          : 'My awesome task',\n *     importantDate : new Date(2022, 0, 1),\n *     percentDone   : 80 // So awesome it's almost done\n *     // ...\n * });\n * ```\n *\n * ## Async scheduling\n *\n * A record created from an {@link Gantt/model/TaskModel} is normally part of a {@link Gantt/data/TaskStore}, which in\n * turn is part of a {@link Gantt/model/ProjectModel project}.\n * When dates or the duration of a task is changed, the project performs async calculations of the other related fields\n * (including the field of other tasks affected by the change).\n * For example if {@link #field-duration} is changed, it will recalculate {@link #field-endDate}.\n *\n * As a result of this being an async operation, the values of other fields are not guaranteed to be up to date\n * immediately after a change. To ensure data is up to date, `await` the calculations to finish.\n *\n * For example, `endDate` is not up to date after this operation:\n *\n * ```javascript\n * taskRecord.duration = 5;\n * // taskRecord.endDate not yet calculated\n * ```\n *\n * But if calculations are awaited it is up to date:\n *\n * ```javascript\n * taskRecord.duration = 5;\n * await taskRecord.project.commitAsync();\n * // endDate is calculated\n * ```\n *\n * In case of multiple changes no need to trigger recalculation after each of them:\n *\n * ```javascript\n * // change taskRecord1 start and duration\n * taskRecord1.startDate = '2021-11-15';\n * taskRecord1.duration = 5;\n * // change taskRecord2 duration\n * taskRecord2.duration = 1;\n * // change taskRecord3 finish date\n * taskRecord3.endDate = '2021-11-17';\n *\n * // now when all changes are done trigger rescheduling\n * await taskRecord.project.commitAsync();\n * ```\n *\n * ## Manually vs automatically scheduled tasks\n *\n * A task can be either **automatically** (default) or **manually** scheduled. This is defined by the\n * {@link #field-manuallyScheduled} field. Manually scheduled tasks are not affected by the automatic scheduling\n * process, which means their start/end dates are meant to be changed by user manually. Such tasks are not shifted\n * by their predecessors nor such summary tasks rollup their children start/end dates.\n * While automatically scheduled tasks start/end dates are calculated by the Gantt.\n *\n * ## Start and end dates\n *\n * For all tasks, the end date is non-inclusive: {@link #field-startDate} <= date < {@link #field-endDate}.\n * Example: a task which starts at 2020/07/18 and has 2 days duration, should have the end date: 2020/07/20, **not**\n * 2018/07/19 23:59:59.\n * The start and end dates of tasks in are *points* on the time axis and if you specify that a task starts\n * 01/01/2020 and has 1 day duration, that means the start point is 01/01/2020 00:00 and end point is 02/01/2020 00:00.\n *\n * @mixes SchedulerPro/data/mixin/PartOfProject\n * @mixes SchedulerPro/model/mixin/PercentDoneMixin\n *\n * @extends Scheduler/model/TimeSpan\n */\nexport default class TaskModel extends GanttEvent.derive(TimeSpan).mixin(\n    PartOfProject,\n    PercentDoneMixin\n) {\n    //region Fields\n\n    /**\n     * This static configuration option allows you to control whether an empty parent task should be converted into a\n     * leaf. Enable/disable it for a whole class:\n     *\n     * ```javascript\n     * TaskModel.convertEmptyParentToLeaf = false;\n     * ```\n     *\n     * By specifying `true`, all empty parents will be considered leafs. Can also be assigned a configuration object\n     * with the following Boolean properties to customize the behaviour:\n     *\n     * * `onLoad` - Apply the transformation on load to any parents without children (`children : []`)\n     * * `onRemove` - Apply the transformation when all children have been removed from a parent\n     *\n     * ```javascript\n     * TaskModel.convertEmptyParentToLeaf = {\n     *     onLoad   : false,\n     *     onRemove : true\n     * }\n     * ```\n     *\n     * @member {Boolean|ConvertEmptyParentToLeafOptions} convertEmptyParentToLeaf\n     * @default true\n     * @static\n     * @category Parent & children\n     */\n\n    static get fields() {\n        return [\n            /**\n             * The scheduling direction of this event. The `Forward` direction corresponds to the as-soon-as-possible scheduling (ASAP),\n             * `Backward` - to as-late-as-possible (ALAP). The ASAP tasks \"sticks\" to the project's start date,\n             * and ALAP tasks - to the project's end date.\n             *\n             * If not specified (which is the default), direction is inherited from the parent task (and from the project for top-level tasks).\n             * By default, the project model has forward scheduling mode.\n             *\n             * **Note** The ALAP-scheduled task in the ASAP-scheduled project will turn all of its successors into ALAP-scheduled tasks,\n             * even if their scheduling direction is specified explicitly by the user as ASAP. We can say that ALAP-scheduling\n             * is propagated down through the successors chain. This propagation, however, will stop in the following cases:\n             * - If a successor is manually scheduled\n             * - If a successor has a \"Must start/finish on\" constraint\n             * - If a dependency to successor is inactive\n             *\n             * Similarly, the ASAP-scheduled task in the ALAP-scheduled project will turn all of its predecessors into ASAP-scheduled tasks\n             * (also regardless of the user-provided value).\n             *\n             * When such propagation is in action, the value of this field is ignored and the UI will disable controls for it.\n             *\n             * To determine the actual scheduling direction of the task (which might be different from the user-provided value),\n             * one can use the {@link Gantt/model/TaskModel#field-effectiveDirection} field.\n             *\n             * **Note** For the purposes of compatibility with MS Project and to ease the migration process for users,\n             * by default, scheduling direction can be set using the \"Constraint type\" field on the \"Advanced\"\n             * tab of the task editor. The forward scheduling is specified in it as \"As soon as possible\" option and backward -\n             * \"As late as possible\". One can also disable the {@link Gantt/model/ProjectModel#config-includeAsapAlapAsConstraints}\n             * config to render a separate \"Scheduling direction\" field.\n             *\n             * @field {'Forward'|'Backward'} direction\n             * @default null\n             * @category Common\n             */\n\n            /**\n             * @typedef {Object} EffectiveDirection\n             * @property {'own'|'enforced'|'inherited'} kind The type of the direction value.\n             * @property {'Forward'|'Backward'} direction The actual direction. Depending on the `kind` value, it might be\n             * a user-provided value (`own`), or value, enforced by the predecessor/successor (`enforced`), or value inherited\n             * from the parent task (or project).\n             * @property {Gantt.model.TaskModel} enforcedBy The task which forces the current direction\n             * @property {Gantt.model.TaskModel} inheritedFrom The task from which the current direction is inherited\n             */\n\n            /**\n             * The calculated effective scheduling direction of this event. See the {@link Gantt/model/TaskModel#field-direction} field for details.\n             *\n             * @field {EffectiveDirection} effectiveDirection\n             * @category Common\n             */\n\n            /**\n             * Unique identifier of task (mandatory)\n             * @field {String|Number} id\n             * @category Common\n             */\n\n            /**\n             * Name of the task\n             * @field {String} name\n             * @category Common\n             */\n\n            /**\n             * A set of resources assigned to this task\n             * @field {Set} assigned\n             * @readonly\n             * @category Common\n             */\n\n            /**\n             * This field is automatically set to `true` when the task is \"unscheduled\" - user has provided an empty\n             * string in one of the UI editors for start date, end date or duration. Such task is not rendered,\n             * and does not affect the schedule of its successors.\n             *\n             * To schedule the task back, enter one of the missing values, so that there's enough information\n             * to calculate start date, end date and duration.\n             *\n             * Note, that setting this field manually does nothing. This field should be persisted, but not updated\n             * manually.\n             *\n             * @field {Boolean} unscheduled\n             * @readonly\n             * @category Scheduling\n             */\n\n            /**\n             * Start date of the task in ISO 8601 format\n             *\n             * UI fields representing this data field are disabled for summary events\n             * except the {@link #field-manuallyScheduled manually scheduled} events.\n             * See {@link #function-isEditable} for details.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * @field {Date} startDate\n             * @accepts {String|Date}\n             * @category Scheduling\n             */\n\n            /**\n             * End date of the task in ISO 8601 format\n             *\n             * UI fields representing this data field are disabled for summary events\n             * except the {@link #field-manuallyScheduled manually scheduled} events.\n             * See {@link #function-isEditable} for details.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * @field {Date} endDate\n             * @accepts {String|Date}\n             * @category Scheduling\n             */\n\n            /**\n             * The numeric part of the task duration (the number of units).\n             *\n             * UI fields representing this data field are disabled for summary events\n             * except the {@link #field-manuallyScheduled manually scheduled} events.\n             * See {@link #function-isEditable} for details.\n             *\n             * @field {Number} duration\n             * @category Scheduling\n             */\n\n            /**\n             * Segments of the task that appear when the task gets {@link #function-splitToSegments}.\n             * @field {SchedulerPro.model.EventSegmentModel[]} segments\n             * @category Scheduling\n             */\n\n            /**\n             * An encapsulation of the CSS classes to be added to the rendered event element.\n             *\n             * Always returns a {@link Core.helper.util.DomClassList}, but may still be treated as a string. For\n             * granular control of adding and removing individual classes, it is recommended to use the\n             * {@link Core.helper.util.DomClassList} API.\n             *\n             * @field {Core.helper.util.DomClassList} cls\n             * @accepts {Core.helper.util.DomClassList|String} cls\n             * @category Styling\n             */\n            {\n                name      : 'cls',\n                serialize : (value) => {\n                    return value.isDomClassList ? value.toString() : value;\n                },\n                persist : true\n            },\n\n            /**\n             * The current status of a task, expressed as the percentage completed (integer from 0 to 100)\n             *\n             * UI fields representing this data field are disabled for summary events.\n             * See {@link #function-isEditable} for details.\n             *\n             * @field {Number} percentDone\n             * @category Scheduling\n             */\n\n            /**\n             * The numeric part of the task effort (the number of units). The effort of the \"parent\" tasks will be automatically set to the sum\n             * of efforts of their \"child\" tasks\n             *\n             * UI fields representing this data field are disabled for summary events.\n             * See {@link #function-isEditable} for details.\n             *\n             * @field {Number} effort\n             * @category Scheduling\n             */\n\n            /**\n             * The unit part of the task duration, defaults to \"day\" (days). Valid values are:\n             *\n             * - \"millisecond\" - Milliseconds\n             * - \"second\" - Seconds\n             * - \"minute\" - Minutes\n             * - \"hour\" - Hours\n             * - \"day\" - Days\n             * - \"week\" - Weeks\n             * - \"month\" - Months\n             * - \"quarter\" - Quarters\n             * - \"year\"- Years\n             *\n             * This field is readonly after creation, to change it use the {@link #function-setDuration} call.\n             * @field {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} durationUnit\n             * @default \"day\"\n             * @category Scheduling\n             */\n\n            /**\n             * The unit part of the task's effort, defaults to \"h\" (hours). Valid values are:\n             *\n             * - \"millisecond\" - Milliseconds\n             * - \"second\" - Seconds\n             * - \"minute\" - Minutes\n             * - \"hour\" - Hours\n             * - \"day\" - Days\n             * - \"week\" - Weeks\n             * - \"month\" - Months\n             * - \"quarter\" - Quarters\n             * - \"year\"- Years\n             *\n             * This field is readonly after creation, to change it use the {@link #function-setEffort} call.\n             * @field {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} effortUnit\n             * @default \"hour\"\n             * @category Scheduling\n             */\n\n            { name : 'fullEffort', persist : false },\n\n            /**\n             * The effective calendar used by the task.\n             * Returns the task own {@link #field-calendar} if provided or the project {@link Gantt.model.ProjectModel#field-calendar calendar}.\n             *\n             * @field {Gantt.model.CalendarModel} effectiveCalendar\n             * @category Scheduling\n             * @calculated\n             * @readonly\n             */\n\n            /**\n             * The calendar, assigned to the task. Allows you to set the time when task can be performed.\n             *\n             * @field {Gantt.model.CalendarModel} calendar\n             * @category Scheduling\n             */\n\n            /**\n             * The getter will yield a {@link Core.data.Store} of {@link Gantt.model.Baseline}s.\n             *\n             * When constructing a task the baselines will be constructed from an array of\n             * {@link Gantt.model.Baseline} data objects.\n             *\n             * When serializing, it will yield an array of {@link Gantt.model.Baseline} data objects.\n             *\n             * @field {Core.data.Store} baselines\n             * @accepts {BaselineConfig[]}\n             * @category Features\n             */\n            { name : 'baselines', type : 'store', modelClass : Baseline, storeClass : Store, lazy : true },\n\n            /**\n             * A freetext note about the task.\n             * @field {String} note\n             * @category Common\n             */\n            { name : 'note', type : 'string' },\n\n            'parentId',\n\n            /**\n             * Field storing the task constraint alias or `null` if not constraint set.\n             * Valid values are:\n             * - \"finishnoearlierthan\"\n             * - \"finishnolaterthan\"\n             * - \"mustfinishon\"\n             * - \"muststarton\"\n             * - \"startnoearlierthan\"\n             * - \"startnolaterthan\"\n             *\n             * @field {'finishnoearlierthan'|'finishnolaterthan'|'mustfinishon'|'muststarton'|'startnoearlierthan'|'startnolaterthan'|null} constraintType\n             * @category Scheduling\n             */\n\n            /**\n             * Field defining the constraint boundary date or `null` if {@link #field-constraintType} is `null`.\n             * @field {String|Date|null} constraintDate\n             * @category Scheduling\n             */\n\n            /**\n             * When set to `true`, the {@link #field-startDate} of the task will not be changed by any of its incoming\n             * dependencies or constraints.\n             *\n             * @field {Boolean} manuallyScheduled\n             * @category Scheduling\n             */\n\n            /**\n             * When set to `true` the task becomes inactive and stops taking part in the project scheduling (doesn't\n             * affect linked tasks, rolls up its attributes and affect its assigned resources allocation).\n             *\n             * @field {Boolean} inactive\n             * @category Scheduling\n             */\n\n            /**\n             * When set to `true` the calendars of the assigned resources\n             * are not taken into account when scheduling the task.\n             *\n             * By default the field value is `false` resulting in that the task performs only when\n             * its own {@link #field-calendar} and some of the assigned\n             * resource calendars allow that.\n\n             * @field {Boolean} ignoreResourceCalendar\n             * @category Scheduling\n             */\n\n            /**\n             * This field defines the scheduling mode for the task. Based on this field some fields of the task\n             * will be \"fixed\" (should be provided by the user) and some - computed.\n             *\n             * Possible values are:\n             *\n             * - `Normal` is the default (and backward compatible) mode. It means the task will be scheduled based on\n             * information about its start/end dates, task own calendar (project calendar if there's no one) and\n             * calendars of the assigned resources.\n             *\n             * - `FixedDuration` mode means, that task has fixed start and end dates, but its effort will be computed\n             * dynamically, based on the assigned resources information. Typical example of such task is - meeting.\n             * Meetings typically have pre-defined start and end dates and the more people are participating in the\n             * meeting, the more effort is spent on the task. When duration of such task increases, its effort is\n             * increased too (and vice-versa). Note: fixed start and end dates here doesn't mean that a user can't\n             * update them via GUI, the only field which won't be editable in GUI is the\n             * {@link #field-effort effort field}, it will be calculated according to duration and resources assigned to\n             * the task.\n             *\n             * - `FixedEffort` mode means, that task has fixed effort and computed duration. The more resources will be\n             * assigned to this task, the less the duration will be. The typical example will be a \"paint the walls\"\n             * task - several painters will complete it faster.\n             *\n             * - `FixedUnits` mode means, that the assignment level of all assigned resources will be kept as provided\n             * by the user, and either {@link #field-effort} or duration of the task is recalculated, based on the\n             * {@link #field-effortDriven} flag.\n             *\n             * @field {'Normal'|'FixedDuration'|'FixedEffort'|'FixedUnits'} schedulingMode\n             * @category Scheduling\n             */\n\n            /**\n             * This boolean flag defines what part of task data should be updated in the `FixedUnits` scheduling mode.\n             * If it is `true`, then {@link #field-effort} is kept intact, and duration is updated. If it is `false` -\n             * vice-versa.\n             *\n             * @field {Boolean} effortDriven\n             * @default false\n             * @category Scheduling\n             */\n\n            /**\n             * A calculated field storing the _early start date_ of the task.\n             * The _early start date_ is the earliest possible date the task can start.\n             * This value is calculated based on the earliest dates of the task predecessors and the task own\n             * constraints. If the task has no predecessors nor other constraints, its early start date matches the\n             * project start date.\n             *\n             * UI fields representing this data field are naturally disabled since the field is readonly.\n             * See {@link #function-isEditable} for details.\n             *\n             * @field {Date} earlyStartDate\n             * @calculated\n             * @readonly\n             * @category Scheduling\n             */\n\n            /**\n             * A calculated field storing the _early end date_ of the task.\n             * The _early end date_ is the earliest possible date the task can finish.\n             * This value is calculated based on the earliest dates of the task predecessors and the task own\n             * constraints. If the task has no predecessors nor other constraints, its early end date matches the\n             * project start date plus the task duration.\n             *\n             * UI fields representing this data field are naturally disabled since the field is readonly.\n             * See {@link #function-isEditable} for details.\n             *\n             * @field {Date} earlyEndDate\n             * @calculated\n             * @readonly\n             * @category Scheduling\n             */\n\n            /**\n             * A calculated field storing the _late start date_ of the task.\n             * The _late start date_ is the latest possible date the task can start.\n             * This value is calculated based on the latest dates of the task successors and the task own constraints.\n             * If the task has no successors nor other constraints, its late start date matches the project end date\n             * minus the task duration.\n             *\n             * UI fields representing this data field are naturally disabled since the field is readonly.\n             * See {@link #function-isEditable} for details.\n             *\n             * @field {Date} lateStartDate\n             * @calculated\n             * @readonly\n             * @category Scheduling\n             */\n\n            /**\n             * A calculated field storing the _late end date_ of the task.\n             * The _late end date_ is the latest possible date the task can finish.\n             * This value is calculated based on the latest dates of the task successors and the task own constraints.\n             * If the task has no successors nor other constraints, its late end date matches the project end date.\n             *\n             * UI fields representing this data field are naturally disabled since the field is readonly.\n             * See {@link #function-isEditable} for details.\n             *\n             * @field {Date} lateEndDate\n             * @calculated\n             * @readonly\n             * @category Scheduling\n             */\n\n            /**\n             * A calculated field storing the _total slack_ (or _total float_) of the task.\n             * The _total slack_ is the amount of working time the task can be delayed without causing a delay\n             * to the project end.\n             * The value is expressed in {@link #field-slackUnit} units.\n             *\n             * ```javascript\n             * // let output slack info to the console\n             * console.log(`The ${task.name} task can be delayed for ${task.totalSlack} ${slackUnit}s`)\n             * ```\n             *\n             * UI fields representing this data field are naturally disabled since the field is readonly.\n             * See {@link #function-isEditable} for details.\n             *\n             *\n             * @field {Number} totalSlack\n             * @calculated\n             * @readonly\n             * @category Scheduling\n             */\n\n            /**\n             * A calculated field storing unit for the {@link #field-totalSlack} value.\n             * @field {String} slackUnit\n             * @default \"day\"\n             * @category Scheduling\n             */\n\n            /**\n             * A calculated field indicating if the task is _critical_.\n             * A task considered _critical_ if its delaying causes the project delay.\n             * The field value is calculated based on {@link #field-totalSlack} field value.\n             *\n             * ```javascript\n             * if (task.critical) {\n             *     Toast.show(`The ${task.name} is critical!`);\n             * }\n             * ```\n             *\n             * @field {Boolean} critical\n             * @calculated\n             * @readonly\n             * @category Scheduling\n             */\n\n            // NOTE: These are not actually fields, they are never set during task lifespan and only used by crud manager\n            // to send changes to the backend\n            // Two fields which specify the relations between \"phantom\" tasks when they are\n            // being sent to the server to be created (e.g. when you create a new task containing a new child task).\n            // { name : 'phantomId', type : 'string' },\n            // { name : 'phantomParentId', type : 'string' },\n\n            /**\n             * Child nodes. To allow loading children on demand, specify `children : true` in your data. Omit the field\n             * for leaf tasks.\n             *\n             * Note, if the task store loads data from a remote origin, make sure {@link Core/data/AjaxStore#config-readUrl}\n             * is specified, and optionally {@link Core/data/AjaxStore#config-parentIdParamName} is set, otherwise\n             * {@link Core/data/Store#function-loadChildren} has to be implemented.\n             *\n             * @field {Gantt.model.TaskModel[]} children\n             * @accepts {Boolean|Object[]|Gantt.model.TaskModel[]}\n             * @category Parent & children\n             */\n            { name : 'children', persist : false },\n\n            /**\n             * Set this to true if this task should be shown in the Timeline widget\n             * @field {Boolean} showInTimeline\n             * @category Features\n             */\n            { name : 'showInTimeline', type : 'boolean' },\n\n            /**\n             * Set this to true to roll up a task to its closest parent\n             * @field {Boolean} rollup\n             * @category Features\n             */\n            { name : 'rollup', type : 'boolean' },\n\n            /**\n             * The {@link Gantt.data.Wbs WBS} for this task record. This field is automatically calculated and\n             * maintained by the store. This calculation can be refreshed by calling {@link #function-refreshWbs}.\n             *\n             * To get string representation of the WBS value (e.g. '2.1.3'), use {@link Gantt.data.Wbs#property-value}\n             * property.\n             *\n             * @readonly\n             * @field {Gantt.data.Wbs} wbsValue\n             * @accepts {Gantt.data.Wbs|String}\n             * @category Scheduling\n             */\n            { name : 'wbsValue', type : 'wbs', persist : false },\n\n            /**\n             * A deadline date for this task. Does not affect scheduling logic.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * @field {Date} deadlineDate\n             * @accepts {String|Date}\n             * @category Scheduling\n             */\n            { name : 'deadlineDate', type : 'date' },\n\n            // Override TreeNode parentIndex to make it persistable\n            { name : 'parentIndex', type : 'number', persist : true },\n\n            /**\n             * CSS class specifying an icon to apply to the task row\n             * @field {String} iconCls\n             * @category Styling\n             */\n            'iconCls',\n\n            /**\n             * CSS class specifying an icon to apply to the task bar\n             * @field {String} taskIconCls\n             * @category Styling\n             */\n            'taskIconCls',\n\n            /**\n             * Specify false to prevent the event from being dragged (if {@link Gantt/feature/TaskDrag} feature is used)\n             * @field {Boolean} draggable\n             * @default true\n             * @category Interaction\n             */\n            { name : 'draggable', type : 'boolean', persist : false, defaultValue : true },   // true or false\n\n            /**\n             * Specify false to prevent the task from being resized (if {@link Gantt/feature/TaskResize} feature is\n             * used). You can also specify 'start' or 'end' to only allow resizing in one direction\n             * @field {Boolean|String} resizable\n             * @default true\n             * @category Interaction\n             */\n            { name : 'resizable', persist : false, defaultValue : true },                  // true, false, 'start' or 'end'\n\n            /**\n             * Changes task's background color. Named colors are applied as a `b-sch-color-{color}` (for example\n             * `b-sch-color-red`) CSS class to the task's bar. Colors specified as hex, `rgb()` etc. are applied as\n             * `style.color` to the bar.\n             *\n             * If no color is specified, any color defined in Gantt's {@link Gantt/view/GanttBase#config-eventColor}\n             * config will apply instead.\n             *\n             * For available standard colors, see\n             * {@link Scheduler/model/mixin/EventModelMixin#typedef-EventColor}.\n             *\n             * Using named colors:\n             *\n             * ```javascript\n             * const gantt = new Gantt({\n             *     project {\n             *         tasksData : [\n             *             { id : 1, name : 'Important task', eventColor : 'red' }\n             *         ]\n             *     }\n             * });\n             * ```\n             *\n             * Will result in:\n             * ```html\n             * <div class=\"b-gantt-task-wrap b-sch-color-red\">\n             * ```\n             *\n             * Using non-named colors:\n             *\n             * ```javascript\n             * const gantt = new Gantt({\n             *     project {\n             *         tasksData : [\n             *             { id : 1, name : 'Important task', eventColor : '#ff0000' }\n             *         ]\n             *     }\n             * });\n             * ```\n             *\n             * Will result in:\n             *\n             * ```html\n             * <div class=\"b-gantt-task-wrap\" style=\"color: #ff0000\">\n             * ```\n             *\n             * @field {EventColor} eventColor\n             */\n            'eventColor'\n        ];\n    }\n\n    //endregion\n\n    //region Config\n\n    // Flag for storing the initial manuallyScheduled value during tree transform. To avoid deoptimizing\n    $manuallyScheduled = null;\n\n    //endregion\n\n    getDefaultSegmentModelClass() {\n        return EventSegmentModel;\n    }\n\n    endBatch() {\n        const { isPersistable : wasPersistable } = this;\n\n        super.endBatch(...arguments);\n\n        // If this event newly persistable, its assignments are eligible for syncing.\n        if (this.isPersistable && !wasPersistable) {\n            this.assignments.forEach(assignment => {\n                assignment.stores.forEach(s => {\n                    s.updateModifiedBagForRecord(assignment);\n                });\n            });\n        }\n    }\n\n    /**\n     * Returns all predecessor dependencies of this task\n     * @member {Gantt.model.DependencyModel[]} predecessors\n     * @readonly\n     */\n\n    /**\n     * Returns all successor dependencies of this task\n     * @member {Gantt.model.DependencyModel[]} successors\n     * @readonly\n     */\n\n    get isTask() {\n        return true;\n    }\n\n    get isTaskModel() {\n        return true;\n    }\n\n    // To pass as an event when using a Gantt project with Scheduler Pro\n    get isEvent() {\n        return true;\n    }\n\n    get wbsCode() {\n        return String(this.wbsValue);\n    }\n\n    set wbsCode(value) {\n        this.wbsValue = Wbs.from(value);\n    }\n\n    copy(...args) {\n        const copy = super.copy(...args);\n\n        // Clean wbs but do not mark as dirty\n        copy.setData('wbsValue', null);\n\n        return copy;\n    }\n\n    /**\n     * Propagates changes to the dependent tasks. For example:\n     *\n     * ```js\n     * // double a task duration\n     * task.duration *= 2;\n     * // call commitAsync() to do further recalculations caused by the duration change\n     * task.commitAsync().then(() => console.log('Schedule updated'));\n     * ```\n     *\n     * @method commitAsync\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Either activates or deactivates the task depending on the passed value.\n     * Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method\n     * @name setInactive\n     * @param {Boolean} inactive `true` to deactivate the task, `false` to activate it.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Sets {@link #field-segments} field value.\n     *\n     * @method\n     * @name setSegments\n     * @param {SchedulerPro.model.EventSegmentModel[]} segments Array of segments or null to make the task not segmented.\n     * @returns {Promise}\n     * @propagating\n     */\n\n    /**\n     * Splits the task to segments.\n     * @method splitToSegments\n     * @param {Date} from The date to split this task at.\n     * @param {Number} [lag=1] Split duration.\n     * @param {String} [lagUnit] Split duration unit.\n     * @returns {Promise}\n     * @propagating\n     */\n\n    /**\n     * Merges the task segments.\n     * The method merges two provided task segments (and all the segment between them if any).\n     * @method mergeSegments\n     * @param {SchedulerPro.model.EventSegmentModel} [segment1] First segment to merge.\n     * @param {SchedulerPro.model.EventSegmentModel} [segment2] Second segment to merge.\n     * @returns {Promise}\n     * @propagating\n     */\n\n    /**\n     * Sets the task {@link #field-ignoreResourceCalendar} field value and triggers rescheduling.\n     *\n     * @method setIgnoreResourceCalendar\n     * @param {Boolean} ignore Provide `true` to ignore the calendars of the assigned resources\n     * when scheduling the task. If `false` the task performs only when\n     * its own {@link #field-calendar} and some of the assigned\n     * resource calendars allow that.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Returns the event {@link #field-ignoreResourceCalendar} field value.\n     *\n     * @method getIgnoreResourceCalendar\n     * @returns {Boolean} The event {@link #field-ignoreResourceCalendar} field value.\n     */\n\n    /**\n     * The event first segment or null if the event is not segmented.\n     * @member {SchedulerPro.model.EventSegmentModel} firstSegment\n     */\n\n    /**\n     * The event last segment or null if the event is not segmented.\n     * @member {SchedulerPro.model.EventSegmentModel} lastSegment\n     */\n\n    // Apply baseline defaults to records added to the baselines store\n    processBaselinesStoreData(data) {\n        return applyBaselineDefaults(this, data);\n    }\n\n    set baselines(baselines) {\n        this.set({ baselines });\n    }\n\n    // Tests expect baselines to initialize on first access, not when task is created\n    get baselines() {\n        const me = this;\n\n        // Baselines field is lazy, we are responsible for initializing it when needed. Which is now, on first access\n        if (!me.$initializedBaselines) {\n            const baselinesField = me.fieldMap.baselines;\n            baselinesField.init(me.data, me);\n            me.assignInitables();\n            me.$initializedBaselines = true;\n        }\n\n        return me.meta.baselinesStore;\n    }\n\n    get hasBaselines() {\n        const baselinesField = this.fieldMap.baselines;\n\n        return Boolean(this.baselines?.count ?? this.originalData[baselinesField.dataSource]);\n    }\n\n    /**\n     * Applies the start/end dates from the task to the corresponding baseline.\n     *\n     * ```javascript\n     * const task = new TaskModel({\n     *      name: 'New task',\n     *      startDate: '2019-01-14',\n     *      endDate: '2019-01-17',\n     *      duration: 3,\n     *      baselines: [\n     *          // Baseline version 1\n     *          {\n     *              startDate: '2019-01-13',\n     *              endDate: '2019-01-16'\n     *          },\n     *          // Baseline version 2\n     *          {\n     *              startDate: '2019-01-14',\n     *              endDate: '2019-01-17'\n     *          },\n     *          // Baseline version 3\n     *          {\n     *              startDate: '2019-01-15',\n     *              endDate: '2019-01-18'\n     *          }\n     *      ]\n     * });\n     *\n     * // Apply the task's start/end dates to the baseline version 3\n     * task.setBaseline(3);\n     * ```\n     * @param {Number} version The baseline version to update\n     */\n    setBaseline(version) {\n        if (version <= 0) {\n            return;\n        }\n\n        const\n            { baselines }    = this,\n            missingBaselines = version - baselines.count;\n\n        // Add missing baselines up to the passed version\n        if (missingBaselines > 0) {\n            baselines.add(applyBaselineDefaults(this, new Array(missingBaselines).fill({})));\n        }\n        else {\n            baselines.getAt(version - 1).set(applyBaselineDefaults(this, [{}])[0]);\n        }\n    }\n\n    // <remove-on-release>\n    // TODO: drop and move to the engine, use outgoingDeps everywhere\n    // </remove-on-release>\n    get successors() {\n        return Array.from(this.outgoingDeps || []);\n    }\n\n    set successors(successors) {\n        this.outgoingDeps = successors;\n    }\n\n    setSuccessors(successors) {\n        return this.replaceDependencies(successors, true);\n    }\n\n    // Updates either predecessors or successors with a new array, updating existing dependency records and\n    // removing existing dependencies not part of current set\n    replaceDependencies(dependencyRecords, isSuccessors) {\n        const\n            me                  = this,\n            { dependencyStore } = me.project,\n            updated             = new Set(),\n            toAdd               = new Set(),\n            toRemove            = [],\n            currentSet          = isSuccessors ? me.outgoingDeps : me.incomingDeps,\n            depsArr             = Array.from(currentSet);\n\n        // <remove-on-release>\n        // TODO: All this collecting is added since chronograph\n        // </remove-on-release>\n        // cannot handle removing and adding the same records at the moment.\n        // We used to have here simple \"removing all current & adding provided\" approach\n        // Collect already existing instances and new ones\n        dependencyRecords.forEach(dependency => {\n            const existingDep = depsArr.find(isSuccessors ? dep => dep.toEvent === dependency.toEvent : dep => dep.fromEvent === dependency.fromEvent);\n\n            if (existingDep) {\n                updated.add(existingDep);\n\n                // Copy data using our own internal setters\n                existingDep.copyData(dependency);\n            }\n            else {\n                toAdd.add(dependency);\n            }\n        });\n\n        // Collect records that should be removed\n        currentSet.forEach(dependency => {\n            if (!updated.has(dependency)) {\n                toRemove.push(dependency);\n            }\n        });\n\n        // remove records\n        toRemove.forEach(dependency => dependencyStore.remove(dependency));\n\n        // add new records\n        toAdd.forEach(dependency => {\n            if (isSuccessors) {\n                dependency.fromEvent = me;\n            }\n            else {\n                dependency.toEvent = me;\n            }\n            dependencyStore.add(dependency);\n        });\n\n        return me.commitAsync();\n    }\n\n    // <remove-on-release>\n    // TODO: drop and move to the engine, use outgoingDeps everywhere\n    // </remove-on-release>\n    get predecessors() {\n        return Array.from(this.incomingDeps || []);\n    }\n\n    set predecessors(predecessors) {\n        this.incomingDeps = predecessors;\n    }\n\n    setPredecessors(predecessors) {\n        return this.replaceDependencies(predecessors, false);\n    }\n\n    get assignments() {\n        return super.assignments;\n    }\n\n    set assignments(assignments) {\n        const\n            me                  = this,\n            { assignmentStore } = me.project,\n            toAdd               = [],\n            currentAssignments  = me.assignments,\n            removedAssignments  = currentAssignments.filter(current => !assignments?.find(newAss => newAss.resource === current.resource));\n\n        assignments.forEach(assignment => {\n            const currentAssignment = assignmentStore.getAssignmentForEventAndResource(this, assignment.resource);\n\n            if (currentAssignment) {\n                currentAssignment.copyData(assignment);\n            }\n            // New one\n            else {\n                assignment.remove();\n                toAdd.push(assignment);\n            }\n        });\n\n        assignmentStore.remove(removedAssignments);\n        assignmentStore.add(toAdd);\n    }\n\n    get assigned() {\n        const { project } = this;\n\n        // Figure assignments out before buckets are created  (if part of project)\n        if (project?.isDelayingCalculation) {\n            return project.assignmentStore.storage.findItem('event', this) ?? new Set();\n        }\n\n        return super.assigned;\n    }\n\n    set assigned(assigned) {\n        super.assigned = assigned;\n    }\n\n    //region Is\n\n    get isDraggable() {\n        return this.draggable;\n    }\n\n    get isResizable() {\n        return this.resizable && !this.milestone && this.isEditable('endDate');\n    }\n\n    // override `isMilestone` on TimeSpan model and make it to return the same value what `milestone` returns\n    get isMilestone() {\n        return this.milestone;\n    }\n\n    /**\n     * Defines if the given task field should be manually editable in UI.\n     * You can override this method to provide your own logic.\n     *\n     * By default, the method defines:\n     * - {@link #field-earlyStartDate}, {@link #field-earlyEndDate}, {@link #field-lateStartDate},\n     * {@link #field-lateEndDate}, {@link #field-totalSlack} as not editable;\n     * - {@link #field-effort}, {@link #property-fullEffort}, {@link #field-percentDone} as not editable for summary\n     *   tasks;\n     * - {@link #field-endDate}, {@link #field-duration} and {@link #field-fullDuration} fields\n     *   as not editable for summary tasks except the {@link #field-manuallyScheduled manually scheduled} ones.\n     *\n     * @param {String} fieldName Name of the field\n     * @returns {Boolean} Returns `true` if the field is editable, `false` if it is not and `undefined` if the task has\n     * no such field.\n     */\n    isEditable(fieldName) {\n        switch (fieldName) {\n            // r/o fields\n            case 'earlyStartDate':\n            case 'earlyEndDate':\n            case 'lateStartDate':\n            case 'lateEndDate':\n            case 'totalSlack':\n                return false;\n\n            // disable effort & percentDone editing for summary tasks\n            case 'effort' :\n            case 'fullEffort' :\n            case 'percentDone' :\n            case 'renderedPercentDone' :\n                return this.isLeaf;\n\n            // end/duration is allowed to edit for leafs and manually scheduled summaries\n            case 'endDate' :\n            case 'duration' :\n            case 'fullDuration' :\n                return this.isLeaf || this.manuallyScheduled;\n        }\n\n        return super.isEditable(fieldName);\n    }\n\n    isFieldModified(fieldName) {\n        if (fieldName === 'fullEffort') {\n            return super.isFieldModified('effort') || super.isFieldModified('effortUnit');\n        }\n        return super.isFieldModified(fieldName);\n    }\n\n    //endregion\n\n    //region Milestone\n\n    get milestone() {\n        // a summary task may have zero duration due to working time periods mismatch w/ its children\n        // so we operate start and end date pair here\n        if (!this.isLeaf) {\n            const { startDate, endDate } = this;\n\n            if (startDate && endDate) {\n                return endDate.getTime() === startDate.getTime();\n            }\n        }\n\n        return this.duration === 0;\n    }\n\n    set milestone(value) {\n        value ? this.convertToMilestone() : this.convertToRegular();\n    }\n\n    async setMilestone(value) {\n        return value ? this.convertToMilestone() : this.convertToRegular();\n    }\n\n    /**\n     * Converts this task to a milestone (start date will match the end date).\n     * @propagating\n     */\n    async convertToMilestone() {\n        return this.setDuration(0, this.durationUnit, false);\n    }\n\n    /**\n     * Converts the milestone task to a regular task with a duration of 1 (keeping current {@link #field-durationUnit}).\n     * @propagating\n     */\n    async convertToRegular() {\n        if (this.milestone) {\n            return this.setDuration(1, this.durationUnit, false);\n        }\n    }\n\n    //endregion\n\n    //region Dependencies\n\n    /**\n     * Returns all dependencies of this task (both incoming and outgoing)\n     *\n     * @property {Gantt.model.DependencyModel[]}\n     */\n    get allDependencies() {\n        return this.dependencies;\n    }\n\n    get dependencies() {\n        // Don't crash when calculations are delayed to after refresh (?. since it might be used outside of project)\n        if (this.project?.isDelayingCalculation) {\n            return [];\n        }\n\n        return [...this.incomingDeps || [], ...this.outgoingDeps || []];\n    }\n\n    set dependencies(dependencies) {\n        const\n            me           = this,\n            predecessors = [],\n            successors   = [];\n\n        dependencies?.forEach(dependency => {\n            if (dependency.fromEvent === me || dependency.fromEvent === me.id) {\n                successors.push(dependency);\n            }\n            else if (dependency.toEvent === me || dependency.toEvent === me.id) {\n                predecessors.push(dependency);\n            }\n        });\n\n        me.setPredecessors(predecessors);\n        me.setSuccessors(successors);\n    }\n\n    /**\n     * Returns all predecessor tasks of a task\n     *\n     * @property {Gantt.model.TaskModel[]}\n     */\n    get predecessorTasks() {\n        return [...this.incomingDeps || []].map(dependency => dependency.fromEvent);\n    }\n\n    /**\n     * Returns all successor tasks of a task\n     *\n     * @readonly\n     * @property {Gantt.model.TaskModel[]}\n     */\n    get successorTasks() {\n        return [...this.outgoingDeps || []].map(dependency => dependency.toEvent);\n    }\n\n    //endregion\n\n    //region Calculated fields\n\n    /**\n     * Returns count of all sibling nodes (including their children).\n     * @property {Number}\n     */\n    get previousSiblingsTotalCount() {\n        let task  = this.previousSibling,\n            count = this.parentIndex;\n\n        while (task) {\n            count += task.descendantCount;\n            task = task.previousSibling;\n        }\n\n        return count;\n    }\n\n    /**\n     * Returns the sequential number of the task. A sequential number means the ordinal position of the task in the\n     * total dataset, regardless of its nesting level and collapse/expand state of any parent tasks. The root node has a\n     * sequential number equal to 0.\n     *\n     * For example, in the following tree data sample sequential numbers are specified in the comments:\n     * ```javascript\n     * root : {\n     *     children : [\n     *         {   // 1\n     *             leaf : true\n     *         },\n     *         {       // 2\n     *             children : [\n     *                 {   // 3\n     *                     children : [\n     *                         {   // 4\n     *                             leaf : true\n     *                         },\n     *                         {   // 5\n     *                             leaf : true\n     *                         }\n     *                     ]\n     *                 }]\n     *         },\n     *         {   // 6\n     *             leaf : true\n     *         }\n     *     ]\n     * }\n     * ```\n     * If we collapse parent tasks, sequential number of collapsed tasks won't change.\n     *\n     * @property {Number}\n     */\n    get sequenceNumber() {\n        // Shortcut when part of a store, much cheaper\n        if (this.taskStore) {\n            return this.taskStore.allIndexOf(this) + 1;\n        }\n\n        // More expensive calculation when not part of a store, to please tests\n        let code = 0,\n            task = this;\n\n        while (task.parent) {\n            code += task.previousSiblingsTotalCount + 1;\n            task = task.parent;\n        }\n\n        return code;\n    }\n\n    //endregion\n\n    //region Project related methods\n\n    get isSubProject() {\n        return false;\n    }\n\n    // <remove-on-release>\n    // TODO: cache project\n    // /**\n    //  * Returns the {@link Gantt.model.SubProjectModel project} instance, associated with this task if this task belongs to a project\n    //  *\n    //  * @private\n    //  * @internal\n    //  * @returns {Gantt.model.SubProjectModel} project\n    //  */\n    // </remove-on-release>\n    get subProject() {\n        const me = this;\n\n        let project = null;\n\n        // <remove-on-release>\n        // TODO: implement is project\n        // </remove-on-release>\n        if (me.isProject) {\n            project = me;\n        }\n        else {\n            me.bubbleWhile(t => {\n                if (t.isProject) {\n                    project = t;\n                }\n\n                return !project;\n            });\n        }\n\n        return project;\n    }\n\n    //endregion\n\n    /**\n     * Property which encapsulates the effort's magnitude and units.\n     *\n     *\n     * UI fields representing this property are disabled for summary events.\n     * See {@link #function-isEditable} for details.\n     *\n     * @property {Core.data.Duration}\n     */\n    get fullEffort() {\n        return new Duration({\n            unit      : this.effortUnit,\n            magnitude : this.effort\n        });\n    }\n\n    set fullEffort(effort) {\n        this.setEffort(effort.magnitude, effort.unit);\n    }\n\n    //region Scheduler Pro compatibility\n\n    /**\n     * Returns all resources assigned to an event.\n     *\n     * @property {Gantt.model.ResourceModel[]}\n     * @readonly\n     */\n    get resources() {\n        // Only include valid resources, to not have nulls in the result\n        return this.assignments.reduce((resources, assignment) => {\n            assignment.resource && resources.push(assignment.resource);\n            return resources;\n        }, []);\n    }\n\n    // Resources + any links to any of them\n    get $linkedResources() {\n        return this.resources?.flatMap(resourceRecord => ([\n            resourceRecord,\n            ...resourceRecord.$links\n        ])) ?? [];\n    }\n\n    //endregion\n\n    /**\n     * A `Set<Gantt.model.DependencyModel>` of the outgoing dependencies for this task\n     * @member {Set} outgoingDeps\n     * @readonly\n     */\n\n    /**\n     * A `Set<Gantt.model.DependencyModel>` of the incoming dependencies for this task\n     * @member {Set} incomingDeps\n     * @readonly\n     */\n\n    /**\n     * An array of the assignments, related to this task\n     * @member {Gantt.model.AssignmentModel[]} assignments\n     * @readonly\n     */\n\n    /**\n     * If given resource is assigned to this task, returns a {@link Gantt.model.AssignmentModel} record.\n     * Otherwise returns `null`\n     *\n     * @method getAssignmentFor\n     * @param {Gantt.model.ResourceModel} resource The instance of {@link Gantt.model.ResourceModel}\n     *\n     * @returns {Gantt.model.AssignmentModel|null}\n     */\n\n    /**\n     * This method assigns a resource to this task.\n     *\n     * Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method assign\n     * @param {Gantt.model.ResourceModel} resource The instance of {@link Gantt.model.ResourceModel}\n     * @param {Number} [units=100] The `units` field of the new assignment\n     *\n     * @async\n     * @propagating\n     */\n\n    /**\n     * This method unassigns a resource from this task.\n     *\n     * Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method unassign\n     * @param {Gantt.model.ResourceModel} resource The instance of {@link Gantt.model.ResourceModel}\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Sets the calendar of the task. Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method setCalendar\n     * @param {Gantt.model.CalendarModel} calendar The new calendar. Provide `null` to return back to the project calendar.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Returns the task calendar.\n     *\n     * @method getCalendar\n     * @returns {Gantt.model.CalendarModel} The task calendar.\n     */\n\n    /**\n     * Sets the start date of the task. Will cause the schedule to be updated - returns a `Promise`\n     *\n     * Note, that the actually set start date may be adjusted, according to the calendar, by skipping the non-working time forward.\n     *\n     * @method setStartDate\n     * @param {Date} date The new start date.\n     * @param {Boolean} [keepDuration=true] Whether to keep the duration (and update the end date), while changing the start date, or vice-versa.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Sets the end date of the task. Will cause the schedule to be updated - returns a `Promise`\n     *\n     * Note, that the actually set end date may be adjusted, according to the calendar, by skipping the non-working time backward.\n     *\n     * @method setEndDate\n     * @param {Date} date The new end date.\n     * @param {Boolean} [keepDuration=false] Whether to keep the duration (and update the start date), while changing the end date, or vice-versa.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Updates the duration (and optionally unit) of the task. Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method setDuration\n     * @param {Number} duration New duration value\n     * @param {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} [unit] New duration\n     * unit\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Updates the effort (and optionally unit) of the task. Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method setEffort\n     * @param {Number} effort New effort value\n     * @param {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} [unit] New effort\n     * unit\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Sets the constraint type and (optionally) constraining date to the task.\n     *\n     * @method setConstraint\n     * @param {'finishnoearlierthan'|'finishnolaterthan'|'mustfinishon'|'muststarton'|'startnoearlierthan'|'startnolaterthan'|null} constraintType\n     * Constraint type, please refer to the {@link Gantt.model.TaskModel#field-constraintType} for the valid values.\n     * @param {Date}   [constraintDate] Constraint date.\n     * @async\n     * @propagating\n     */\n\n    //region Normalization\n\n    normalize() {\n        // Do nothing, normalization now happens as part of initial propagate and should use calendar anyway\n    }\n\n    inSetNormalize(field) {\n        // Do nothing, normalization now happens as part of initial propagate and should use calendar anyway\n    }\n\n    /**\n     * Not (yet) supported by the underlying scheduling engine\n     * @function setStartEndDate\n     * @hide\n     * @param {Date} start The new start date\n     * @param {Date} end The new end date\n     */\n\n    //endregion\n\n    joinStore(store) {\n        const\n            me             = this,\n            useOrderedTree = (me.firstStore || store).useOrderedTreeForWbs;\n\n        if (!me.wbsValue && !me.generatedParent) {\n            if ((me.taskStore || store).isLoadingData || !(me.nextSibling?.wbsValue || me.previousSibling?.wbsValue)) {\n                // If we are being loaded or have no siblings, then we can just process this node and its children.\n                me.refreshWbs({ useOrderedTree, ...refreshWbsOnJoinOptions });\n            }\n            else {\n                // Otherwise, we need to also refresh this node's siblings. Since we only come here if we have a\n                // sibling, we can be sure we also have a parent.\n                me.parent.refreshWbs(refreshWbsOptions, -1);\n            }\n        }\n\n        super.joinStore(store);\n    }\n\n    /**\n     * Refreshes the {@link #field-wbsValue} of this record and its children. This is rarely needed but may be required\n     * after a complex series of filtering, inserting, or removing nodes. In particular, removing nodes does create a\n     * gap in `wbsValue` values that may be undesirable.\n     * @param {Object} [options] A set of options for refreshing.\n     * @param {Boolean} [options.deep=true] Pass `false` to not update the `wbsValue` of this node's children.\n     * @param {Boolean} [options.silent=false] Pass `true` to update the `wbsValue` silently (no events). This is done\n     * at load time since this value represents the clean state. Passing `true` also has the effect of not marking the\n     * change as a dirty state on the record, in the case where `wbsValue` has been flagged as `persist: true`.\n     * @param {Boolean} [options.useOrderedTree=false] Pass `true` to use ordered tree to calculate WBS index.\n     * @param {Number} [index] The index of this node in its parent's children array. Pass -1 to ignore this node's\n     * `wbsValue` and only operate on children (if `options.deep`).\n     */\n    refreshWbs(options, index) {\n        const\n            me         = this,\n            { parent } = me,\n            taskStore  = me.firstStore || null,\n            {\n                useOrderedTree = taskStore?.useOrderedTreeForWbs ?? false\n            }          = options || {};\n\n        if (parent && index !== -1 && me.fieldMap.wbsValue) {\n            if (useOrderedTree) {\n                index = me.orderedParentIndex;\n            }\n            else {\n                index = index ?? me.unfilteredIndex ?? me.parentIndex;\n            }\n\n            index++;\n\n            const wbs = parent.isRoot ? new Wbs(index) : parent.wbsValue.append(index);\n\n            if (options?.silent) {\n                me.setData('wbsValue', wbs);\n            }\n            else {\n                me.set('wbsValue', wbs);\n            }\n        }\n\n        if (options?.deep ?? true) {\n            if (useOrderedTree) {\n                for (const child of me.orderedChildren ?? []) {\n                    child.refreshWbs(options);\n                }\n            }\n            else {\n                const\n                    children = me.unfilteredChildren ?? me.children,\n                    n        = children?.length || 0;\n\n                if (n) {\n                    // The array may be reversed, and if it is, then the sorter has been applied and we need to reverse\n                    // the WBS assignment to match\n                    const reverse = isReversed(children) && taskStore?.sorters?.findIndex(descendingWbsSorter) === 0;\n\n                    for (let i = 0; i < n; ++i) {\n                        children[i].refreshWbs(options, reverse ? n - i - 1 : i);\n                    }\n                }\n            }\n        }\n    }\n\n    async tryInsertChild() {\n        return this.getProject().tryPropagateWithChanges(() => {\n            this.insertChild(...arguments);\n        });\n    }\n\n    updateDependencies(startDate, endDate) {\n        this.outgoingDeps.forEach(dep => {\n            // filter out wrong\n            if (dep.toEvent.isScheduled) {\n                const {\n                    type,\n                    calendar,\n                    toEvent\n                } = dep;\n\n                // Calculate lag value for the outgoing dependency to keep successor in place. Lag should be\n                // calculated for future start/end dates and should skip non-working time\n                if (startDate) {\n                    if (type === DependencyBaseModel.Type.StartToStart) {\n                        dep.setLag(DateHelper.as('hour', calendar.calculateDurationMs(startDate, toEvent.startDate, true)), 'hour');\n                    }\n                    else if (type === DependencyBaseModel.Type.StartToEnd) {\n                        dep.setLag(DateHelper.as('hour', calendar.calculateDurationMs(startDate, toEvent.endDate, true)), 'hour');\n                    }\n                }\n\n                if (endDate) {\n                    if (type === DependencyBaseModel.Type.EndToStart) {\n                        dep.setLag(DateHelper.as('hour', calendar.calculateDurationMs(endDate, toEvent.startDate, true)), 'hour');\n                    }\n                    else if (type === DependencyBaseModel.Type.EndToEnd) {\n                        dep.setLag(DateHelper.as('hour', calendar.calculateDurationMs(endDate, toEvent.endDate, true)), 'hour');\n                    }\n                }\n            }\n        });\n    }\n\n    async moveTaskPinningSuccessors(date) {\n        const me = this;\n\n        // set start date, this will put new values to the engine and would allow to recalculate dates before\n        // project is committed\n        me.startDate = date;\n\n        // Go up the tree processing outgoing dependencies for this task and all its parents\n        me.bubble(node => {\n            if (!node.isRoot) {\n                const\n                    // Peek new start/end dates\n                    startDate = node.run('calculateStartDate'),\n                    endDate   = node.run('calculateEndDate');\n\n                node.updateDependencies(startDate, endDate);\n            }\n        });\n\n        return me.project.commitAsync();\n    }\n\n    async setStartDatePinningSuccessors(date) {\n        const\n            me      = this,\n            promise = me.setStartDate(date, false);\n\n        // Go up the tree processing outgoing dependencies for this task and all its parents\n        me.bubble(node => {\n            if (!node.isRoot) {\n                // Peek new end date\n                const startDate = node.run('calculateStartDate');\n\n                node.updateDependencies(startDate, null);\n            }\n        });\n\n        return promise;\n    }\n\n    async setEndDatePinningSuccessors(date) {\n        const me = this;\n\n        me.endDate = date;\n\n        // Go up the tree processing outgoing dependencies for this task and all its parents\n        me.bubble(node => {\n            if (!node.isRoot) {\n                // Peek new end date\n                const endDate = node.run('calculateEndDate');\n\n                node.updateDependencies(null, endDate);\n            }\n        });\n\n        return me.project.commitAsync();\n    }\n\n    getCurrentConfig(options) {\n        const\n            { segments } = this,\n            result       = super.getCurrentConfig(options);\n\n        // include segments\n        if (result && segments) {\n            result.segments = segments.map(segment => segment.getCurrentConfig(options));\n        }\n\n        return result;\n    }\n}\n\nTaskModel.convertEmptyParentToLeaf = true;\n\n// TaskModel.$meta.fields.map.wbsCode.defineAccessor(TaskModel.prototype, /* force = */true);\n","import AjaxStore from '../../Core/data/AjaxStore.js';\nimport TaskModel from '../model/TaskModel.js';\nimport { ChronoEventTreeStoreMixin } from '../../Engine/quark/store/ChronoEventStoreMixin.js';\nimport PartOfProject from './mixin/PartOfProject.js';\nimport GetEventsMixin from '../../Scheduler/data/mixin/GetEventsMixin.js'; // To allow using TaskStore in Pro & Calendar\nimport DayIndexMixin from '../../Scheduler/data/mixin/DayIndexMixin.js'; // To allow using TaskStore in Calendar\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport Wbs from '../../Core/data/Wbs.js';\n\n/**\n * @module Gantt/data/TaskStore\n */\n\nconst\n    refreshWbsForChildrenOptions = { deep : true },\n    wbsAuto                      = Object.freeze({\n        add    : true,\n        remove : true,\n        sort   : true\n    }),\n    wbsManual                    = Object.freeze({\n        add    : false,\n        remove : false,\n        sort   : false\n    }),\n    sortByWbs = (lhs, rhs) => Wbs.compare(lhs?.wbsCode, rhs?.wbsCode);\n\n/**\n * An object that describes the actions that should trigger a {@link Gantt.model.TaskModel#function-refreshWbs} to\n * update WBS values. Objects of this type are passed to {@link #config-wbsMode} when the simpler\n * values of `'auto'` or (the default) `'manual'` are not desired.\n *\n * The value `'auto'` is equivalent to all properties of this object being `true`.\n * The value `'manual'` is equivalent to all properties of this object being `false`.\n *\n * @typedef WbsMode\n * @property {Boolean} [add] Set this property to `true` to refresh WBS values when nodes are added.\n * @property {Boolean} [remove] Set this property to `true` to refresh WBS values when nodes are removed.\n * @property {Boolean} [sort] Set this property to `true` to refresh WBS values when nodes are sorted.\n */\n\n/**\n * A class representing the tree of tasks in the Gantt project. An individual task is represented as an instance of the\n * {@link Gantt.model.TaskModel} class. The store expects the data loaded to be hierarchical. Each parent node should\n * contain its children in a property called 'children'.\n *\n * ```javascript\n * const taskStore = new TaskStore({\n *     data : [\n *         {\n *             \"id\"           : 1000,\n *             \"name\"         : \"Cool project\",\n *             \"percentDone\"  : 50,\n *             \"startDate\"    : \"2019-01-02\",\n *             \"expanded\"     : true,\n *             \"children\"     : [\n *                 {\n *                     \"id\"           : 1,\n *                     \"name\"         : \"A leaf node\",\n *                     \"startDate\"    : \"2019-01-02\",\n *                     \"percentDone\"  : 50,\n *                     \"duration\"     : 10,\n *                 }\n *             ]\n *         }\n *     ]\n * });\n * ```\n *\n * @mixes Scheduler/data/mixin/GetEventsMixin\n * @extends Core/data/AjaxStore\n */\nexport default class TaskStore extends ChronoEventTreeStoreMixin.derive(AjaxStore).mixin(\n    PartOfProject,\n    DayIndexMixin,\n    GetEventsMixin\n) {\n\n    static $name = 'TaskStore';\n\n    static get defaultConfig() {\n        return {\n            modelClass : TaskModel,\n\n            /**\n             * CrudManager must load stores in the correct order. Lowest first.\n             * @config {Number}\n             * @private\n             */\n            loadPriority : 200,\n\n            /**\n             * CrudManager must sync stores in the correct order. Lowest first.\n             * @config {Number}\n             * @private\n             */\n            syncPriority : 300,\n\n            storeId : 'tasks',\n\n            tree : true\n        };\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Set to `'auto'` to automatically update {@link Gantt.model.TaskModel#field-wbsValue} as records in the\n             * store are manipulated (e.g., when the user performs drag-and-drop reordering).\n             *\n             * In manual mode, the WBS value is initialized as the store loads and only altered implicitly by the\n             * {@link #function-indent} and {@link #function-outdent} methods. The WBS values are otherwise updated only\n             * by an explicit call to {@link Gantt.model.TaskModel#function-refreshWbs}.\n             *\n             * This can also be a {@link #typedef-WbsMode} object that indicates what operations\n             * should automatically {@link Gantt.model.TaskModel#function-refreshWbs refresh} WBS values.\n             *\n             * The operations that trigger WBS refresh can be enabled explicitly in this object, for example:\n             *\n             * ```javascript\n             *  wbsMode : {\n             *      add : true,\n             *      remove : true\n             *  }\n             * ```\n             * The above is an opt-in list that enable auto WBS refresh for node add and remove operations (these two\n             * operations are associated with dragging to reorder items). No other operation will trigger WBS refresh.\n             * At present, this leaves out only the `sort` operation, but if new auto-refreshing operations were added\n             * in future releases, those would also not be included.\n             *\n             * Alternatively, this object can be an opt-out specification if all values are falsy:\n             *\n             * ```javascript\n             *  wbsMode : {\n             *      sort : false\n             *  }\n             * ```\n             * The above two examples are (currently) equivalent in outcome. The choice between opt-in or opt-out form\n             * is a matter of convenience as well as future-proofing preference.\n             *\n             * The value `'auto'` is equivalent to all properties being `true`.\n             * The value `'manual'` (the default) is equivalent to all properties being `false`.\n             * @config {String|WbsMode}\n             */\n            wbsMode : 'manual',\n\n            /**\n             * Specifies which tree to use to calculate WBS. Ordered tree is unsortable and unfilterable, it\n             * always holds complete tree hierarchy. By default, it uses sortable and filterable tree.\n             * @config {Boolean}\n             * @default\n             */\n            useOrderedTreeForWbs : false,\n\n            /**\n             * Controls behavior of the outdent logic regarding siblings. By default, outdent will move child to be\n             * its parent's sibling and will move all previous siblings to the outdented node's children. Visually, node\n             * will remain in place just changing the level. When set to `true` only node with its subtree will be\n             * outdented, siblings will not change parent. Visually, node will be moved as last child of the new parent.\n             * @config {Boolean}\n             * @default\n             */\n            outdentIgnoringSiblings : false,\n\n            /**\n             * Always return changes in increasing WBS order.\n             * @config {Boolean}\n             * @default\n             */\n            forceWbsOrderForChanges : false\n        };\n    }\n\n    changeWbsMode(value) {\n        if (value === 'auto') {\n            return wbsAuto;\n        }\n\n        if (value && typeof value === 'object') {\n            if (ObjectHelper.values(value).every(v => !v)) {   // if (an opt-out list)\n                value = ObjectHelper.assign({}, wbsAuto, value);\n            }\n\n            return value;\n        }\n\n        return wbsManual;\n    }\n\n    /**\n     * For each task in this TaskStore, sets the data in the passed baseline index to the current state of the task.\n     * @param {Number} index The index in the baselines list of the baseline to update.\n     */\n    setBaseline(index) {\n        const data = this.storage.values;\n\n        this.forEach(task => task.setBaseline(index));\n        this.trigger('refresh', {\n            action  : 'batch',\n            records : data,\n            data\n        });\n    }\n\n    /**\n     * Increase the indentation level of one or more tasks in the tree\n     * @param {Gantt.model.TaskModel|Gantt.model.TaskModel[]} nodes The nodes to indent.\n     * @returns {Promise} A promise which yields the result of the operation\n     * @fires indent\n     * @fires change\n     */\n    async indent(nodes) {\n        const\n            me                     = this,\n            { taskStore, project } = me;\n\n        let result = false;\n\n        nodes = Array.isArray(nodes) ? nodes.slice() : [nodes];\n\n        // 1. Filter out project nodes\n        nodes = nodes.filter(node => !node.isProjectModel);\n\n        // 2. Filtering out all nodes which parents are also to be indented as well as the ones having no previous\n        //    sibling since such nodes can't be indented\n        nodes = nodes.filter(node => {\n            let result;\n\n            result = Boolean(node.previousSibling);\n\n            while (result && !node.isRoot) {\n                result = !nodes.includes(node.parent);\n                node   = node.parent;\n            }\n\n            return result;\n        });\n\n        /**\n         * Fired before tasks in the tree are indented. Return `false` from a listener to prevent the indent.\n         * @event beforeIndent\n         * @preventable\n         * @param {Gantt.data.TaskStore} source The task store\n         * @param {Gantt.model.TaskModel[]} records Tasks to be indented\n         */\n        if (nodes.length && taskStore.trigger('beforeIndent', { records : nodes }) !== false) {\n            // 3. Sorting nodes into tree walk order\n            nodes.sort((lhs, rhs) => Wbs.compare(lhs.wbsCode, rhs.wbsCode));\n\n            // No events should go to the UI until we have finished the operation successfully\n            taskStore.beginBatch();\n\n            // Ask the project to try the indent operation\n            result = await project.tryPropagateWithChanges(() => {\n                for (const node of nodes) {\n                    const newParent = node.previousSibling;\n                    newParent.appendChild(node);\n                    me.toggleCollapse(newParent, false);\n                }\n            });\n\n            if (me.isDestroyed) {\n                return;\n            }\n\n            // Now show the successful result\n            taskStore.endBatch();\n\n            if (result) {\n                me.refreshWbsForChildren({\n                    up : 2,  // the nodes are now deeper but that move affects their grandparent node's WBS\n                    nodes\n                });\n\n                /**\n                 * Fired after tasks in the tree are indented\n                 * @event indent\n                 * @param {Gantt.data.TaskStore} source The task store\n                 * @param {Gantt.model.TaskModel[]} records Tasks that were indented\n                 */\n                me.trigger('indent', { records : nodes });\n                me.trigger('change', {\n                    action  : 'indent',\n                    records : nodes\n                });\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Decrease the indentation level of one or more tasks in the tree\n     * @param {Gantt.model.TaskModel|Gantt.model.TaskModel[]} nodes The nodes to outdent.\n     * @returns {Promise} A promise which yields the result of the operation\n     * @fires outdent\n     * @fires change\n     */\n    async outdent(nodes) {\n        const\n            me                     = this,\n            { taskStore, project } = me;\n\n        let result = false;\n\n        nodes = Array.isArray(nodes) ? nodes.slice() : [nodes];\n\n        // 1. Filter out project nodes\n        nodes = nodes.filter(node => !node.isProjectModel);\n\n        // 2. Filtering out all nodes which parents are also to be outdented as well as the ones having no previous sibling\n        //    since such nodes can't be indented\n        nodes = nodes.filter(node => {\n            let result;\n\n            result = node.parent && !node.parent.isRoot;\n\n            while (result && !node.isRoot) {\n                result = !nodes.includes(node.parent);\n                node   = node.parent;\n            }\n\n            return result;\n        });\n\n        /**\n         * Fired before tasks in the tree are outdented. Return `false` from a listener to prevent the outdent.\n         * @event beforeOutdent\n         * @preventable\n         * @param {Gantt.data.TaskStore} source The task store\n         * @param {Gantt.model.TaskModel[]} records Tasks to be outdented\n         */\n        if (nodes.length && taskStore.trigger('beforeOutdent', { records : nodes }) !== false) {\n            // 3. Process nodes in reverse tree walk (WBS) order\n            nodes.sort((lhs, rhs) => Wbs.compare(rhs.wbsCode, lhs.wbsCode));\n\n            // No events should go to the UI until we have finished the operation successfully\n            taskStore.beginBatch();\n\n            result = await project.tryPropagateWithChanges(() => {\n                for (const node of nodes) {\n                    const newChildren = !this.outdentIgnoringSiblings && node.parent.children.slice(node.parent.children.indexOf(node) + 1);\n\n                    node.parent.parent.insertChild(node, node.parent.nextSibling, false, {\n                        orderedBeforeNode : node.parent.nextOrderedSibling\n                    });\n\n                    // https://github.com/bryntum/support/issues/5721\n                    // it seems appending empty array is recorded by stm but can not be correctly restored\n                    // should be fixed in stm of course, but just avoiding this call (as its a no-op anyway)\n                    // is much simpler fix\n                    newChildren.length && node.appendChild(newChildren);\n                    me.toggleCollapse(node, false);\n                }\n            });\n\n            if (me.isDestroyed) {\n                return;\n            }\n\n            taskStore.endBatch();\n\n            if (result) {\n                me.refreshWbsForChildren({\n                    up : 1,  // only need to update the (new) parent\n                    nodes\n                });\n\n                /**\n                 * Fired after tasks in the tree are outdented\n                 * @event outdent\n                 * @param {Gantt.data.TaskStore} source The task store\n                 * @param {Gantt.model.TaskModel[]} records Tasks that were outdented\n                 */\n                me.trigger('outdent', { records : nodes });\n                me.trigger('change', {\n                    action  : 'outdent',\n                    records : nodes\n                });\n            }\n        }\n\n        return result;\n    }\n\n    onNodeAddChild(parent, children, index, isMove, silent = false) {\n        super.onNodeAddChild(parent, children, index, isMove, silent);\n\n        if (!this.isLoadingData && this.wbsMode.add) {\n            parent.refreshWbs(refreshWbsForChildrenOptions);\n\n            // Trigger refresh of old & new parent children for moved nodes, if needed\n            const wbsRefreshed = new Set();\n            children.forEach(child => {\n                const oldParent = this.getById(child.meta.oldParentId);\n                if (oldParent && parent !== oldParent && !wbsRefreshed.has(oldParent)) {\n                    wbsRefreshed.add(oldParent);\n                    oldParent.refreshWbs(refreshWbsForChildrenOptions, -1);\n                }\n            });\n        }\n    }\n\n    onNodeRemoveChild(parent, children, index, flags = { isMove : false, silent : false, unfiltered : false }) {\n        const result = super.onNodeRemoveChild(parent, children, index, flags);\n\n        if (this.wbsMode.remove && !flags.isMove) {\n            parent.refreshWbs(refreshWbsForChildrenOptions);\n        }\n\n        return result;\n    }\n\n    // Preserve outdented nodes' position among new siblings when unsorted (#7135)\n    // Requires forceWbsOrderInChanges=true\n    applyChangeset(changes, transformFn = null, ...rest) {\n        const\n            me                    = this,\n            { updated, modified } = transformFn?.(changes, me) ?? changes,\n            altered               = updated ?? modified ?? [];\n\n        // For nodes whose parent ID is changing to their grandparent, remember the original node above and\n        // later, reorder to keep it that way (below)\n        const outdented = (me.forceWbsOrderForChanges && me.tree && !me.isSorted && !me.isGrouped)\n            ? altered.reduce((outdented, { id, parentId }) => {\n                if (parentId !== undefined) {\n                    const\n                        node = me.getById(id),\n                        currentGrandparentId = node?.parent?.parentId;\n                    if (parentId === currentGrandparentId) {\n                        outdented.push({\n                            node,\n                            originalNodeAbove : node.previousSibling ?? node.parent\n                        });\n                    }\n                }\n                return outdented;\n            }, [])\n            : [];\n\n        const log = super.applyChangeset(changes, transformFn, ...rest);\n\n        if (outdented.length > 0) {\n            // Restore position of outdented nodes, requires forceWbsOrderInChanges=true (#7135)\n            for (const { node, originalNodeAbove } of outdented) {\n                const\n                    { parent } = node,\n                    nodeAboveIndex = originalNodeAbove.parent === parent ? originalNodeAbove.parentIndex\n                        : (originalNodeAbove.parent?.parent === parent ? originalNodeAbove.parent.parentIndex : undefined);\n                if (nodeAboveIndex !== undefined && parent.children.includes(node)) {\n                    parent.insertChild(node, nodeAboveIndex + 1);\n                }\n            }\n        }\n\n        return log;\n    }\n\n    afterChangesetApplied(modifiedParents) {\n        super.afterChangesetApplied(modifiedParents);\n\n        modifiedParents.forEach(record => {\n            record.refreshWbs({ deep : true, useOrderedTree : true });\n        });\n    }\n\n    afterPerformSort(silent) {\n        if (this.wbsMode.sort) {\n            this.rootNode.refreshWbs(refreshWbsForChildrenOptions);\n        }\n\n        super.afterPerformSort(silent);\n    }\n\n    /**\n     * This method updates the WBS values due to changes in the indentation of a given set of child nodes.\n     * @param {Object} options An object containing options in addition to a `nodes` property with the children.\n     * @param {Gantt.model.TaskModel[]} options.nodes The array of child record to refresh. This is required.\n     * @param {Boolean} [options.silent=false] Pass `true` to update the `wbsValue` silently (no events).\n     * @param {Number} [options.up=1] The number of ancestors to ascend when determining the parent(s) to refresh.\n     * By default, this value is 1 which indicates the immediate parent of the supplied nodes. This is suitable for\n     * outdenting. For indenting, this value should be 2. This is because the previous parent node (now grandparent\n     * node) needs to be refreshed, not merely the new parent.\n     * @private\n     */\n    refreshWbsForChildren(options) {\n        const\n            nodes   = options.nodes,\n            opts    = { ...refreshWbsForChildrenOptions, ...options },\n            parents = new Set(),\n            up      = opts.up || 0;\n\n        let n, parent;\n\n        nodes.forEach(node => {\n            for (parent = node, n = up; parent && n; --n) {\n                parent = parent.parent;\n            }\n\n            parents.add(parent);\n        });\n\n        for (parent of parents) {\n            parent.refreshWbs(opts);\n        }\n    }\n\n    getTotalTimeSpan() {\n        return {\n            startDate : this.getProject().startDate,\n            endDate   : this.getProject().endDate\n        };\n    }\n\n    getEventsForResource(resourceId) {\n        const\n            resource    = this.resourceStore.getById(resourceId),\n            assignments = resource?.assignments.filter(assignment => assignment.isPartOfStore(this.assignmentStore)) || [],\n            events      = [];\n\n        assignments.forEach(({ event }) => event && events.push(event));\n\n        return events;\n    }\n\n    /**\n     * Checks if a date range is allocated or not for a given resource.\n     * @param {Date} start The start date\n     * @param {Date} end The end date\n     * @param {Scheduler.model.EventModel|null} excludeEvent An event to exclude from the check (or null)\n     * @param {Scheduler.model.ResourceModel} resource The resource\n     * @returns {Boolean} True if the timespan is available for the resource\n     * @category Resource\n     */\n    isDateRangeAvailable(start, end, excludeEvent, resource) {\n        // NOTE: Also exists in EventStoreMixin.js\n\n        // This should be a collection of unique event records\n        const allEvents = new Set(this.getEventsForResource(resource));\n\n        // In private mode we can pass an AssignmentModel. In this case, we assume that multi-assignment is used.\n        // So we need to make sure that other resources are available for this time too.\n        // No matter if the event retrieved from the assignment belongs to the target resource or not.\n        // We gather all events from the resources the event is assigned to except of the one from the assignment record.\n        // Note, events from the target resource are added above.\n        if (excludeEvent?.isAssignment) {\n            const\n                currentEvent = excludeEvent.event,\n                resources    = currentEvent.resources;\n\n            resources.forEach(resource => {\n                // Ignore events for the resource which is passed as an AssignmentModel to excludeEvent\n                if (resource.id !== excludeEvent.resourceId) {\n                    this.getEventsForResource(resource).forEach(event => allEvents.add(event));\n                }\n            });\n        }\n\n        if (excludeEvent) {\n            const eventToRemove = excludeEvent.isAssignment ? excludeEvent.event : excludeEvent;\n            allEvents.delete(eventToRemove);\n        }\n\n        return !Array.from(allEvents).some(event => event.isScheduled && DateHelper.intersectSpans(start, end, event.startDate, event.endDate));\n    }\n\n    linkTasks(tasks) {\n        for (let i = 1; i < tasks.length; i++) {\n            const\n                from = tasks[i - 1],\n                to   = tasks[i];\n\n            if (!this.dependencyStore.getEventsLinkingDependency(from, to)) {\n                this.dependencyStore.add({ from, to });\n            }\n        }\n    }\n\n    unlinkTasks(tasks) {\n        this.dependencyStore.remove(this.dependencyStore.query(({ fromTask, toTask }) => tasks.includes(fromTask) || tasks.includes(toTask)));\n    }\n\n    /**\n     * Enforce `forceWbsOrderForChanges` if set.\n     * @private\n     */\n    get changes() {\n        const changes = super.changes;\n\n        if (changes && this.forceWbsOrderForChanges) {\n            changes.added.sort(sortByWbs);\n            changes.modified.sort(sortByWbs);\n            changes.removed.sort(sortByWbs);\n        }\n\n        return changes;\n    }\n}\n","import TooltipBase from '../../Scheduler/feature/base/TooltipBase.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\n\n/**\n * @module Gantt/feature/Baselines\n */\n\nconst baselineSelector = '.b-task-baseline';\n\n/**\n * Displays a {@link Gantt.model.TaskModel task}'s {@link Gantt.model.TaskModel#field-baselines} below the tasks in the\n * timeline.\n *\n * {@inlineexample Gantt/feature/Baselines.js}\n *\n * This feature also optionally shows a tooltip when hovering any of the task's baseline elements. The\n * tooltip's content may be customized.\n *\n * <div class=\"note\">If dates (startDate and endDate) are left out in the baseline data, the task's dates will be\n * applied. If dates are `null`, they will be kept empty and the baseline bar won't be displayed in the UI.</div>\n *\n * To customize the look of baselines, you can supply `cls` or `style´ in the baseline data.\n *\n * This feature is **off** by default. For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * @extends Scheduler/feature/base/TooltipBase\n * @demo Gantt/baselines\n * @classtype baselines\n * @feature\n */\nexport default class Baselines extends TooltipBase {\n    //region Config\n\n    static get $name() {\n        return 'Baselines';\n    }\n\n    // Default configuration.\n    static get defaultConfig() {\n        return {\n            cls         : 'b-gantt-task-tooltip',\n            align       : 't-b',\n            forSelector : baselineSelector,\n            recordType  : 'baseline'\n        };\n    }\n\n    static configurable = {\n        /**\n         * An empty function by default, but provided so that you can override it. This function is called each time\n         * a task baseline is rendered into the gantt to render the contents of the baseline element.\n         *\n         * Returning a string will display it in the baseline bar, it accepts both plain text or HTML. It is also\n         * possible to return a DOM config object which will be synced to the baseline bars content.\n         *\n         * ```javascript\n         * // using plain string\n         * new Gantt({\n         *     features : {\n         *         baselines : {\n         *             renderer : ({ baselineRecord }) => baselineRecord.startDate\n         *         }\n         *     }\n         * });\n         *\n         * // using DOM config\n         * new Gantt({\n         *     features : {\n         *         baselines : {\n         *             renderer : ({ baselineRecord }) => {\n         *                 return {\n         *                     tag : 'b',\n         *                     html : baselineRecord.startDate\n         *                 };\n         *             }\n         *         }\n         *     }\n         * });\n         * ```\n         *\n         * @param {Object} detail An object containing the information needed to render a Baseline.\n         * @param {Gantt.model.TaskModel} detail.taskRecord The task record.\n         * @param {Gantt.model.Baseline} detail.baselineRecord The baseline record.\n         * @param {DomConfig} detail.renderData An object containing details about the baseline element.\n         * @returns {DomConfig|DomConfig[]|String} A string or an DomObject config object to append to a baseline element children\n         * @prp {Function}\n         */\n        renderer : null\n    };\n\n    static get pluginConfig() {\n        return {\n            chain : [\n                // onTaskDataGenerated for populating task with baselines\n                'onTaskDataGenerated',\n                // onPaint for creating tooltip (in TooltipBase)\n                'onPaint'\n            ]\n        };\n    }\n\n    updateRenderer() {\n        this.gantt.refresh();\n    }\n\n    //endregion\n\n    //region Init & destroy\n\n    construct(gantt, config) {\n        this.tipId = `${gantt.id}-baselines-tip`;\n        this.gantt = gantt;\n\n        super.construct(gantt, config);\n    }\n\n    doDisable(disable) {\n        // Hide or show the baseline elements\n        this.client.refreshWithTransition();\n\n        super.doDisable(disable);\n    }\n\n    //endregion\n\n    //region Element & template\n\n    resolveTimeSpanRecord(forElement) {\n        const baselineElement = forElement.closest(baselineSelector);\n        return baselineElement?.elementData.baseline;\n    }\n\n    /**\n     * Template (a function accepting event data and returning a string) used to display info in the tooltip.\n     * The template will be called with an object as with fields as detailed below\n     * @config {Function}\n     * @param {Object} data A data block containing the information needed to create tooltip content.\n     * @param {Gantt.model.Baseline} data.baseline The Baseline record to display\n     * @param {Gantt.model.TaskModel} data.baseline.task The owning task of the baseline.\n     * @param {String} data.startClockHtml Predefined HTML to show the start time.\n     * @param {String} data.endClockHtml Predefined HTML to show the end time.\n     */\n    template(data) {\n        const\n            me              = this,\n            { baseline }    = data,\n            { task }        = baseline,\n            displayDuration = me.client.formatDuration(baseline.duration);\n\n        return `\n            <div class=\"b-gantt-task-title\">${StringHelper.encodeHtml(task.name)} (baseline ${baseline.parentIndex + 1})</div>\n            <table>\n            <tr><td>${me.L('L{TaskTooltip.Start}')}:</td><td>${data.startClockHtml}</td></tr>\n            ${baseline.milestone ? '' : `\n                <tr><td>${me.L('L{TaskTooltip.End}')}:</td><td>${data.endClockHtml}</td></tr>\n                <tr><td>${me.L('L{TaskTooltip.Duration}')}:</td><td class=\"b-right\">${displayDuration + ' ' + DateHelper.getLocalizedNameOfUnit(baseline.durationUnit, baseline.duration !== 1)}</td></tr>\n            `}\n            </table>\n            `;\n    }\n\n    getTaskDOMConfig(taskRecord, top) {\n        const\n            me        = this,\n            baselines = taskRecord.baselines.allRecords,\n            { rtl }   = me.client,\n            position  = rtl ? 'right' : 'left';\n\n        return {\n            className : {\n                'b-baseline-wrap' : true\n            },\n            style : {\n                transform : `translateY(${top}px)`\n            },\n            dataset : {\n                // Prefix task id to allow element reusage also for baseline wrap\n                taskId : `baselinesFor${taskRecord.id}`\n            },\n            children : baselines.map((baseline, i) => {\n                const\n                    baselineBox = me.gantt.taskRendering.getTaskBox(baseline),\n                    inset       = baselineBox ? (rtl ? me.client.timeAxisSubGrid.totalFixedWidth - baselineBox.left : baselineBox.left) : 0;\n\n                if (baselineBox) {\n                    const renderData = {\n                        className : {\n                            [baseline.cls]              : baseline.cls,\n                            'b-task-baseline'           : 1,\n                            'b-task-baseline-milestone' : baseline.milestone\n                        },\n                        style : {\n                            width      : baselineBox.width,\n                            [position] : inset,\n                            style      : baseline.style\n                        },\n                        dataset : {\n                            index : i\n                        },\n                        elementData : {\n                            baseline\n                        }\n                    };\n\n                    const value = me.renderer ? me.renderer({ baselineRecord : baseline, taskRecord, renderData }) : '';\n\n                    if (typeof value === 'string') {\n                        renderData.html = value;\n                    }\n                    else {\n                        renderData.children = [value].flat();\n                    }\n\n                    return renderData;\n                }\n                else {\n                    return null;\n                }\n            }),\n            syncOptions : {\n                syncIdField : 'index'\n            }\n        };\n    }\n\n    onTaskDataGenerated({ taskRecord, top, extraConfigs, wrapperCls }) {\n        if (!this.disabled && taskRecord.hasBaselines) {\n            wrapperCls['b-has-baselines'] = 1;\n            extraConfigs.push(this.getTaskDOMConfig(taskRecord, top));\n        }\n    }\n\n    //endregion\n}\n\nGridFeatureManager.registerFeature(Baselines, false, 'Gantt');\n","import ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport SchedulerProCellEdit from '../../SchedulerPro/feature/CellEdit.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\n\n/**\n * @module Gantt/feature/CellEdit\n */\n\n/**\n * Extends the {@link Grid.feature.CellEdit} to encapsulate Gantt functionality. This feature is enabled by <b>default</b>\n *\n * {@inlineexample Gantt/feature/CellEdit.js}\n *\n * Editing can be started by a user by double-clicking an editable cell in the gantt's data grid, or it can be started programmatically\n * by calling {@link Grid/feature/CellEdit#function-startEditing} and providing it with correct cell context.\n *\n * See {@link #function-doAddNewAtEnd}.\n *\n * ## Instant update\n * If {@link Grid.column.Column#config-instantUpdate} on the column is set to true, record will be\n * updated instantly as value in the editor is changed. In combination with\n * {@link Gantt.model.ProjectModel#config-autoSync} it could result in excessive requests to the backend.\n *\n * Instant update is enabled for these columns by default:\n * - {@link Scheduler.column.DurationColumn}\n * - {@link Gantt.column.StartDateColumn}\n * - {@link Gantt.column.EndDateColumn}\n * - {@link Gantt.column.ConstraintDateColumn}\n * - {@link Gantt.column.DeadlineDateColumn}\n * - {@link Gantt.column.EarlyStartDateColumn}\n * - {@link Gantt.column.EarlyEndDateColumn}\n * - {@link Gantt.column.LateStartDateColumn}\n * - {@link Gantt.column.LateEndDateColumn}\n *\n * To disable instant update on the column set config to false:\n *\n * ```javascript\n * new Gantt({\n *     columns: [\n *         {\n *             type: 'startdate',\n *             instantUpdate: false\n *         }\n *     ]\n * })\n * ```\n *\n * @extends SchedulerPro/feature/CellEdit\n *\n * @classtype cellEdit\n * @feature\n *\n * @typings SchedulerPro.feature.CellEdit -> SchedulerPro.feature.SchedulerProCellEdit\n */\nexport default class CellEdit extends SchedulerProCellEdit {\n\n    static get $name() {\n        // NOTE: Even though the class name matches the one defined on the base class\n        // we need this method in order registerFeature() to work properly\n        // (it uses hasOwnProperty when detecting the class name)\n        return 'CellEdit';\n    }\n\n    // Default configuration\n    static get defaultConfig() {\n        return {\n            addNewAtEnd : {\n                duration : 1\n            }\n        };\n    }\n\n    static get pluginConfig() {\n        const cfg = super.pluginConfig;\n\n        cfg.chain = [...cfg.chain, 'onProjectChange'];\n\n        return cfg;\n    }\n\n    onProjectChange() {\n        // Cancel editing if project is changed\n        this.cancelEditing(true);\n    }\n\n    // Provide any editor with access to the current project\n    getEditorForCell({ record }) {\n        const\n            editor         = super.getEditorForCell(...arguments),\n            { inputField } = editor;\n\n        inputField.project     = record.project;\n        inputField.eventRecord = record;\n\n        // unified API of data loading between the task editing / cell editing\n        inputField.loadEvent?.(record, false);\n\n        return editor;\n    }\n\n    /**\n     * Adds a new, empty record at the end of the TaskStore with the initial\n     * data specified by the {@link Grid.feature.CellEdit#config-addNewAtEnd} setting.\n     *\n     * @on-queue\n     * @returns {Promise} Newly added record wrapped in a promise.\n     */\n    doAddNewAtEnd() {\n        const\n            me                                  = this,\n            gantt                               = me.grid,\n            { addNewAtEnd, addToCurrentParent } = me,\n            { project, newTaskDefaults }        = gantt;\n\n        return project.queue(async() => {\n            // First finish any ongoing calculations. Promise executor will run in the following microtask, so project\n            // can get destroyed.\n            await (!project.isDestroying && project.commitAsync());\n\n            // Block adding after destruction (async above) or if using a \"display store\"\n            if (gantt.isDestroyed || gantt.store !== gantt.taskStore) {\n                return null;\n            }\n\n            const data = ObjectHelper.assign({\n                name      : me.L('L{Gantt.New task}'),\n                startDate : project.startDate\n            }, addNewAtEnd, newTaskDefaults);\n\n            let newTask;\n            if (!addToCurrentParent) {\n                newTask = gantt.taskStore.rootNode.appendChild(data);\n            }\n            else {\n                newTask = gantt.addTaskBelow(gantt.taskStore.last, { data });\n            }\n\n            await project.commitAsync();\n\n            if (gantt.isDestroyed) {\n                return null;\n            }\n\n            // If the new record was not added due to it being off the end of the rendered block\n            // ensure we force it to be there before we attempt to edit it.\n            if (!gantt.rowManager.getRowFor(newTask)) {\n                gantt.rowManager.displayRecordAtBottom();\n            }\n\n            return newTask;\n        });\n    }\n\n    onCellEditStart() {\n        this.client.project.suspendAutoSync();\n    }\n\n    afterCellEdit() {\n        this.client.project.resumeAutoSync();\n    }\n}\n\nGridFeatureManager.registerFeature(CellEdit, true, 'Gantt');\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport Delayable from '../../Core/mixin/Delayable.js';\nimport InstancePlugin from '../../Core/mixin/InstancePlugin.js';\n\n/**\n * @module Gantt/feature/CriticalPaths\n */\n\n/**\n * This feature highlights the project _critical paths_.\n * Every task is important, but only some of them are critical.\n * The critical path is a chain of linked tasks that directly affects the project finish date.\n * If any task on the critical path is late, the whole project is late.\n *\n * For more details on the _critical path method_ please check [this article](https://en.wikipedia.org/wiki/Critical_path_method).\n *\n * This feature is loaded by default, but the visualization needs to be enabled:\n *\n * ```javascript\n * // let's visualize the project critical paths\n * gantt.features.criticalPaths.disabled = false;\n * ```\n *\n * {@inlineexample Gantt/feature/CriticalPaths.js}\n *\n * If you need to get information about critical paths, you can refer to\n * {@link Gantt/model/ProjectModel#property-criticalPaths} property of the project:\n *\n * ```javascript\n * const paths = gantt.project.criticalPaths;\n * ```\n *\n * @extends Core/mixin/InstancePlugin\n * @demo Gantt/criticalpaths\n * @classtype criticalPaths\n * @feature\n */\nexport default class CriticalPaths extends Delayable(InstancePlugin) {\n    //region Config\n\n    static get $name() {\n        return 'CriticalPaths';\n    }\n\n    static get defaultConfig() {\n        return {\n            cls                   : 'b-gantt-critical-paths',\n            criticalDependencyCls : 'b-critical',\n            disabled              : true\n        };\n    }\n\n    static get pluginConfig() {\n        return {\n            chain : ['onTaskDataGenerated']\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    doDisable(disable) {\n        const me = this;\n\n        if (disable) {\n            me.unhighlightCriticalPaths();\n        }\n        // Highlight now if we have entered graph\n        else if (me.client.project.graph) {\n            me.highlightCriticalPaths();\n        }\n        // In delayed calculation mode (the default) we might not be in graph yet, postpone highlighting until we are\n        else {\n            me.client.project.ion({\n                graphReady() {\n                    me.highlightCriticalPaths();\n                },\n                thisObj : me,\n                once    : true\n            });\n        }\n\n        super.doDisable(disable);\n    }\n\n    getDependenciesFeature() {\n        // return dependencies feature only when it's ready\n        return this.client.foregroundCanvas && this.client.features.dependencies;\n    }\n\n    setupObserver() {\n        const\n            me = this,\n            { project }  = me.client;\n\n        let dependencies;\n\n        // destroy previous observer if any\n        me.destroyObserver();\n\n        me.criticalPathObserver = project.getGraph().observe(function * () {\n            return yield project.$.criticalPaths;\n\n        }, criticalPaths => {\n            // if the feature is not disabled\n            if (!me.disabled) {\n                me.removeCriticalCls();\n\n                // check if dependencies feature is there\n                if ((dependencies = dependencies || me.getDependenciesFeature())) {\n                    for (const path of criticalPaths) {\n                        for (const node of path) {\n                            if (node.dependency) {\n                                dependencies.highlight(node.dependency, me.criticalDependencyCls);\n                            }\n                        }\n                    }\n                }\n\n                /**\n                 * Fired when critical paths get highlighted.\n                 *\n                 * See also: {@link #event-criticalPathsUnhighlighted}\n                 * @event criticalPathsHighlighted\n                 */\n                me.client.trigger('criticalPathsHighlighted');\n            }\n        });\n    }\n\n    destroyObserver() {\n        if (this.criticalPathObserver) {\n            this.client.project?.getGraph?.().removeIdentifier(this.criticalPathObserver);\n            this.criticalPathObserver = null;\n        }\n    }\n\n    doDestroy() {\n        this.destroyObserver();\n        super.doDestroy();\n    }\n\n    highlightCriticalPaths() {\n        const\n            me          = this,\n            { element } = me.client;\n\n        // the component has cls set means we had CPs rendered so need to clean them\n        if (element.classList.contains(me.cls)) {\n            me.unhighlightCriticalPaths();\n        }\n\n        me.setupObserver();\n\n        // add the feature base cls to enable stylesheets\n        element.classList.add(me.cls);\n    }\n\n    removeCriticalCls() {\n        const\n            project      = this.client.project,\n            dependencies = this.getDependenciesFeature();\n\n        // if we have dependencies rendered remove classes from them\n        if (dependencies) {\n            project.dependencyStore.forEach(dependency => dependencies.unhighlight(dependency, this.criticalDependencyCls));\n        }\n    }\n\n    unhighlightCriticalPaths() {\n        const\n            me     = this,\n            client = me.client;\n\n        // destroy criticalPath atom observer\n        me.destroyObserver();\n\n        me.removeCriticalCls();\n\n        // remove the feature base cls\n        client.element.classList.remove(me.cls);\n\n        /**\n         * Fired when critical paths get hidden.\n         *\n         * See also: {@link #event-criticalPathsHighlighted}\n         * @event criticalPathsUnhighlighted\n         */\n        client.trigger('criticalPathsUnhighlighted');\n    }\n\n    //endregion\n\n    // Add DOMConfigs for enabled indicators as `extraConfigs` on the task. Will in the end be added to the task row\n    onTaskDataGenerated(renderData) {\n        if (!this.disabled) {\n            renderData.cls['b-critical'] = renderData.taskRecord.critical;\n        }\n    }\n}\n\nGridFeatureManager.registerFeature(CriticalPaths, true, 'Gantt');\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\nimport VersionHelper from '../../Core/helper/VersionHelper.js';\nimport { DependencyType } from '../../Engine/scheduling/Types.js';\nimport SchedulerProDependencies from '../../SchedulerPro/feature/Dependencies.js';\n\n/**\n * @module Gantt/feature/Dependencies\n */\n\nconst\n    // Map dependency type to side of a box, for displaying an icon in the tooltip\n    fromBoxSide        = [\n        'start',\n        'start',\n        'end',\n        'end'\n    ],\n    toBoxSide          = [\n        'start',\n        'end',\n        'start',\n        'end'\n    ],\n    criticalPathSorter = ({ fromTask: a }, { fromTask: b }) => (a?.critical === b?.critical) ? 0 : a?.critical ? 1 : -1,\n    // Round to half pixels, more precise is not reliable x-browser\n    round              = num => Math.round(num * 2) / 2;\n\n// noinspection JSClosureCompilerSyntax\n/**\n * Feature that draws dependencies between tasks. Uses a dependency {@link Gantt.model.ProjectModel#property-dependencyStore store}\n * to determine which dependencies to draw.\n *\n * {@inlineexample Gantt/guides/gettingstarted/basic.js}\n *\n * To customize the dependency tooltip, you can provide the {@link Scheduler.feature.Dependencies#config-tooltip} config\n * and specify a {@link Core.widget.Tooltip#config-getHtml} function. For example:\n *\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         dependencies : {\n *             tooltip : {\n *                 getHtml({ activeTarget }) {\n *                     const dependencyModel = gantt.resolveDependencyRecord(activeTarget);\n *\n *                     if (!dependencyModel) return null;\n *\n *                     const { fromEvent, toEvent } = dependencyModel;\n *\n *                     return `${fromEvent.name} (${fromEvent.id}) -> ${toEvent.name} (${toEvent.id})`;\n *                 }\n *             }\n *         }\n *     }\n * }\n * ```\n *\n * ## Styling dependency lines\n *\n * You can easily customize the arrows drawn between events. To change all arrows, apply\n * the following basic SVG CSS:\n *\n * ```css\n * .b-sch-dependency {\n *    stroke-width: 2;\n *    stroke : red;\n * }\n *\n * .b-sch-dependency-arrow {\n *     fill: red;\n * }\n * ```\n *\n * To style an individual dependency line, you can provide a [cls](#Scheduler/model/DependencyModel#field-cls) in your\n * data:\n *\n * ```json\n * {\n *     \"id\"   : 9,\n *     \"from\" : 7,\n *     \"to\"   : 8,\n *     \"cls\"  : \"special-dependency\"\n * }\n * ```\n *\n * ```scss\n * // Make line dashed\n * .b-sch-dependency {\n *    stroke-dasharray: 5, 5;\n * }\n * ```\n *\n * By default predecessors and successors in columns and the task editor are displayed using task id and name. The id\n * part is configurable, any task field may be used instead (for example wbsCode or sequence number) by\n * {@link Gantt/view/GanttBase#config-dependencyIdField Gantt#dependencyIdField} property.\n *\n * ```javascript\n * const gantt = new Gantt({\n *    dependencyIdField: 'wbsCode',\n *\n *    project,\n *    columns : [\n *        { type : 'name', width : 250 }\n *    ],\n * });\n * ```\n *\n * Also see {@link Gantt/column/DependencyColumn#config-dependencyIdField DependencyColumn#dependencyIdField} to\n * configure columns only if required.\n *\n * This feature is **enabled** by default\n *\n * @extends SchedulerPro/feature/Dependencies\n * @demo Gantt/basic\n * @classtype dependencies\n * @feature\n *\n * @typings SchedulerPro.feature.Dependencies -> SchedulerPro.feature.SchedulerProDependencies\n */\nexport default class Dependencies extends SchedulerProDependencies {\n\n    //region Config\n\n    static $name = 'Dependencies';\n\n    static configurable = {\n        terminalSides                     : ['left', 'right'],\n        highlightDependenciesOnEventHover : true,\n\n        tooltipTemplate(dependency) {\n            if (!dependency) {\n                return null;\n            }\n\n            const\n                me                     = this,\n                { dependencyIdField }  = me.client,\n                { fromEvent, toEvent } = dependency;\n\n            return {\n                children : [{\n                    className : 'b-sch-dependency-tooltip',\n                    children  : [\n                        { tag : 'label', text : me.L('L{from}') },\n                        { text : `${fromEvent.name} ${fromEvent[dependencyIdField]}` },\n                        { className : `b-sch-box b-${dependency.fromSide || fromBoxSide[dependency.type]}` },\n                        { tag : 'label', text : me.L('L{to}') },\n                        { text : `${toEvent.name} ${toEvent[dependencyIdField]}` },\n                        { className : `b-sch-box b-${dependency.toSide || toBoxSide[dependency.type]}` },\n                        dependency.lag ? { tag : 'label', text : me.L('L{DependencyEdit.Lag}') } : null,\n                        dependency.lag ? { text : dependency.fullLag } : null\n                    ]\n                }]\n            };\n        },\n\n        pathFinderConfig : {\n            otherHorizontalMargin : 0,\n            otherVerticalMargin   : 0\n        }\n    };\n\n    //endregion\n\n    //region Init\n\n    construct(gantt, config = {}) {\n        // Scheduler might be using gantt's feature, when on same page\n        if (gantt.isGantt) {\n            this.gantt = gantt;\n        }\n\n        super.construct(gantt, config);\n    }\n\n    //endregion\n\n    //region Scheduler overrides\n\n    // Add critical path marker which has different color\n    createMarkers() {\n        super.createMarkers();\n\n        const endMarker = this.endMarker.cloneNode(true);\n\n        endMarker.setAttribute('id', 'arrowEndCritical');\n        endMarker.retainElement = true;\n\n        this.client.svgCanvas.appendChild(endMarker);\n    }\n\n    /**\n     * Returns the dependency record for a DOM element\n     * @function resolveDependencyRecord\n     * @param {HTMLElement} element The dependency line element\n     * @returns {Gantt.model.DependencyModel} The dependency record\n     */\n\n    get rowStore() {\n        return this.client.store;\n    }\n\n    // We don't care about the resourceStore in gantt\n    attachToResourceStore(...args) {\n        // But we have to care for Scheduler Pro using Gantt:s feature (shared bundle)\n        if (!this.gantt) {\n            super.attachToResourceStore(...args);\n        }\n    }\n\n    getDependencyKey(dependency, ...args) {\n        if (!this.gantt) {\n            super.getDependencyKey(dependency, ...args);\n        }\n\n        return dependency.id;\n    }\n\n    // Gantt draws between tasks, replace Schedulers assignment element lookup\n    getAssignmentElement(task) {\n        if (!this.gantt) {\n            return super.getAssignmentElement(task);\n        }\n\n        return this.client.getElementFromTaskRecord(task);\n    }\n\n    // Gantt draws between tasks, replace Schedulers assignment bounds lookup\n    getAssignmentBounds(task) {\n        if (!this.gantt) {\n            return super.getAssignmentBounds(task);\n        }\n\n        const\n            { client } = this,\n            element    = client.getElementFromTaskRecord(task);\n\n        if (element && !client.isExporting) {\n            return Rectangle.from(element, this.relativeTo);\n        }\n\n        return client.isEngineReady && client.getTaskBox(task, true, true);\n    }\n\n    //region Export\n\n    // Export calls this fn to determine if a dependency should be included or not\n    isDependencyVisible(dependency) {\n        if (!this.gantt) {\n            return super.isDependencyVisible(dependency);\n        }\n\n        return dependency.fromEvent?.isScheduled && dependency.toEvent?.isScheduled;\n    }\n\n    //endregion\n\n    // Override Schedulers dependency drawing\n    drawDependency(dependency, batch = false, forceBoxes = null) {\n        if (!this.gantt) {\n            return super.drawDependency(dependency, batch, forceBoxes);\n        }\n\n        const\n            me                     = this,\n            {\n                domConfigs,\n                client\n            } = me,\n            { store }              = client,\n            topIndex               = client.firstVisibleRow.dataIndex,\n            bottomIndex            = client.lastVisibleRow.dataIndex,\n            { startMS, endMS }     = client.visibleDateRange,\n            { fromEvent, toEvent } = dependency;\n\n        if (store.isAvailable(fromEvent) && store.isAvailable(toEvent)) {\n            const\n                fromIndex  = store.indexOf(fromEvent),\n                toIndex    = store.indexOf(toEvent),\n                fromDateMS = Math.min(fromEvent.startDateMS, toEvent.startDateMS),\n                toDateMS   = Math.max(fromEvent.endDateMS, toEvent.endDateMS);\n\n            // Draw only if dependency intersects view, unless it is part of an export\n            if (client.isExporting || fromIndex != null && toIndex != null && !(\n                // Both ends above view\n                (fromIndex < topIndex && toIndex < topIndex) ||\n                // Both ends below view\n                (fromIndex > bottomIndex && toIndex > bottomIndex) ||\n                // Both ends before view\n                (fromDateMS < startMS && toDateMS < startMS) ||\n                // Both ends after view\n                (fromDateMS > endMS && toDateMS > endMS)\n            )) {\n                const lineDomConfigs = me.getDomConfigs(dependency, fromEvent, toEvent, forceBoxes);\n\n                if (lineDomConfigs) {\n                    domConfigs.set(dependency.id, lineDomConfigs);\n                }\n                // No room to draw a line\n                else {\n                    domConfigs.delete(dependency.id);\n                }\n            }\n\n            // Give mixins a shot at running code after a dependency is drawn. Used by grid cache to cache the\n            // dependency (when needed)\n            me.afterDrawDependency(dependency, fromIndex, toIndex, fromDateMS, toDateMS);\n        }\n\n        if (!batch) {\n            me.domSync();\n        }\n    }\n\n    //endregion\n\n    //region Draw & render\n\n    getDependenciesToConsider(startMS, endMS, startIndex, endIndex) {\n        const\n            dependencies    = super.getDependenciesToConsider?.(startMS, endMS, startIndex, endIndex),\n            criticalFeature = this.client.features.criticalPaths;\n\n        if (dependencies && criticalFeature?.enabled) {\n            return Array.from(dependencies).sort(criticalPathSorter);\n        }\n\n        return dependencies;\n    }\n\n    adjustLineDef(dependency, lineDef) {\n        const me = this;\n\n        // Do not adjust for scheduler using Gantts feature\n        if (!me.gantt) {\n            return lineDef;\n        }\n\n        const\n            { rtl }              = me.gantt,\n            { startBox, endBox } = lineDef,\n            arrowMargin          = me.pathFinder.startArrowMargin,\n            startRowBox          = me.client.getRecordCoords(dependency.fromEvent, true),\n            endRowBox            = me.client.getRecordCoords(dependency.toEvent, true),\n            startBoxEnd          = round(startBox.getEnd(rtl)),\n            endBoxStart          = round(endBox.getStart(rtl)),\n            endBoxEnd            = round(endBox.getEnd(rtl)),\n            // Detecting whether the source box ends before (or at the same point) as the end box start\n            // is different between LRT and RTL\n            sourceEndsBeforeStart = rtl\n                ? (endBoxStart <= startBoxEnd && endBoxEnd <= (startBoxEnd + arrowMargin))\n                : (endBoxStart >= startBoxEnd && endBoxEnd >= (startBoxEnd + arrowMargin));\n\n        if (\n            dependency.type === DependencyType.EndToStart &&\n            // Target box is below source box\n            startBox.bottom < endBox.y &&\n            // If source box ends before target box start - draw line to target box top edge.\n            // Round coordinates to make behavior more consistent on zoomed page\n            sourceEndsBeforeStart\n        ) {\n            // Arrow to left part of top\n            lineDef.endSide = 'top';\n\n            // The default entry point for top is the center, but for Gantt Tasks, we join to startArrowMargin inwards\n            // to top-start, so we give the end box a width of arrowMargin.\n            // Milestones always have the top entry point left in the center.\n            if (!dependency.toEvent.milestone) {\n                if (rtl) {\n                    endBox.x = endBox.right - arrowMargin * 2;\n                }\n                else {\n                    endBox.width = arrowMargin * 2;\n                }\n            }\n        }\n\n        return {\n            ...lineDef,\n            // Reversing start/end endpoints generate more Gantt-friendly arrows\n            startBox      : endBox,\n            endBox        : startBox,\n            endSide       : lineDef.startSide,\n            startSide     : lineDef.endSide,\n            boxesReversed : true,\n            // Add vertical box for each task. They are supposed to push line to row boundary\n            otherBoxes    : [\n                {\n                    start  : startBox.x,\n                    end    : startBox.right,\n                    top    : startRowBox.y,\n                    bottom : startRowBox.bottom\n                },\n                {\n                    start  : endBox.x,\n                    end    : endBox.right,\n                    top    : endRowBox.y,\n                    bottom : endRowBox.bottom\n                }\n            ]\n        };\n    }\n\n    /**\n     * Draws all dependencies for the specified task.\n     * @deprecated 5.1 The Dependencies feature was refactored and this fn is no longer needed\n     */\n    drawForTask() {\n        VersionHelper.deprecate('Gantt', '6.0.0', 'Dependencies.drawForTask() is no longer needed');\n        this.refresh();\n    }\n\n    //endregion\n\n    //region Tooltip\n\n    /**\n     * Generates html for the tooltip shown when hovering a dependency\n     * @param {Object} tooltipConfig\n     * @returns {String} Html to display in the tooltip\n     * @private\n     */\n    getHoverTipHtml({ activeTarget }) {\n        const dependency = this.resolveDependencyRecord(activeTarget);\n\n        return this.tooltipTemplate(dependency);\n    }\n\n    //endregion\n\n    //region Dependency creation\n\n    /**\n     * Create a new dependency from source terminal to target terminal\n     * @internal\n     */\n    async createDependency(data) {\n        const\n            me         = this,\n            {\n                source,\n                target,\n                fromSide,\n                toSide\n            }          = data,\n            type       = (fromSide === 'start' ? 0 : 2) + (toSide === 'end' ? 1 : 0),\n            dependency = me.dependencyStore.add({\n                fromEvent : source,\n                toEvent   : target,\n                type\n            })[0];\n\n        await me.dependencyStore.project.commitAsync();\n\n        return dependency;\n    }\n\n    // endregion\n}\n\nGridFeatureManager.registerFeature(Dependencies, true, 'Gantt');\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport TooltipBase from '../../Scheduler/feature/base/TooltipBase.js';\nimport DomClassList from '../../Core/helper/util/DomClassList.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\n\n/**\n * @module Gantt/feature/Indicators\n */\n\n/**\n * The Indicators feature displays indicators (icons) for different dates related to a task in its row. Hovering an\n * indicator will show a tooltip with its name and date(s). The owning task `id` is embedded in the indicator element\n * dataset as `taskRecordId` which can be useful if you want to have custom actions when clicking (showing a menu for example).\n *\n * By default, it includes and displays the following indicators (config name):\n * * Early start/end dates (earlyDates)\n * * Late start/end dates (lateDates)\n * * Constraint date (constraintDate)\n * * Deadline date (deadlineDate)\n *\n * This demo shows the default indicators:\n *\n * {@inlineexample Gantt/feature/Indicators.js}\n *\n * This config will display them all:\n *\n * ```javascript\n * new Gantt({\n *   features : {\n *     indicators : true\n *   }\n * });\n * ```\n *\n * To selectively disable indicators:\n *\n * ```javascript\n * features : {\n *   indicators : {\n *     items : {\n *       earlyDates     : false,\n *       constraintDate : false\n *     }\n *   }\n * }\n * ```\n *\n * They can also be toggled at runtime:\n *\n * ```javascript\n * gantt.features.indicators.items.deadlineDate = true/false;\n * ```\n *\n * The feature also supports adding custom indicators, by adding properties to the `items` config object:\n *\n * ```javascript\n * items : {\n *   lateDates  : false,\n *\n *   // Custom indicator only shown for tasks more than half done\n *   myCustomIndicator : taskRecord => taskRecord.percentDone > 50 ? {\n *      startDate : DateHelper.add(taskRecord.endDate, 2, 'days'),\n *      name : 'My custom indicator',\n *      iconCls : 'b-fa b-fa-alien'\n *   } : null\n * }\n * ```\n *\n * This demo shows a custom indicator:\n *\n * {@inlineexample Gantt/feature/IndicatorsCustom.js}\n *\n * These custom indicators are defined as functions, that accept a task record and return a TimeSpan (or a raw data\n * object). The function will be called for each visible task during rendering, to not show the indicator for certain\n * tasks return `null` from it.\n *\n * When using this feature we recommend that you configure gantt with a larger `rowHeight` + `barMargin` (>15 px), since\n * the indicators are indented to fit below the task bars.\n *\n * Note: When combined with the `fillTicks` mode, indicators are snapped to the time axis ticks.\n *\n * @extends Scheduler/feature/base/TooltipBase\n * @classType indicators\n * @feature\n * @demo Gantt/indicators\n */\n\nexport default class Indicators extends TooltipBase {\n\n    // <debug>\n    // region Localization test\n    static localization = [\n        'L{ConstraintTypePicker.none}',\n        'L{ConstraintTypePicker.muststarton}',\n        'L{ConstraintTypePicker.mustfinishon}',\n        'L{ConstraintTypePicker.startnoearlierthan}',\n        'L{ConstraintTypePicker.startnolaterthan}',\n        'L{ConstraintTypePicker.finishnoearlierthan}',\n        'L{ConstraintTypePicker.finishnolaterthan}'\n    ];\n    // endregion\n    // </debug>\n\n    //region Config\n\n    static get $name() {\n        return 'Indicators';\n    }\n\n    static get defaultConfig() {\n        return {\n            cls         : 'b-gantt-task-tooltip', // reused on purpose\n            forSelector : '.b-indicator',\n            recordType  : 'indicator',\n            hoverDelay  : 500,\n            layoutStyle : {\n                flexDirection : 'column'\n            },\n\n            defaultIndicators : {\n                earlyDates : taskRecord => taskRecord.earlyStartDate && !taskRecord.isMilestone ? {\n                    startDate : taskRecord.earlyStartDate,\n                    endDate   : taskRecord.earlyEndDate,\n                    cls       : 'b-bottom b-early-dates',\n                    name      : this.L('L{earlyDates}')\n                } : null,\n\n                lateDates : taskRecord => taskRecord.lateStartDate && !taskRecord.isMilestone ? {\n                    startDate : taskRecord.lateStartDate,\n                    endDate   : taskRecord.lateEndDate,\n                    cls       : 'b-bottom b-late-dates',\n                    name      : this.L('L{lateDates}')\n                } : null,\n\n                constraintDate : taskRecord => taskRecord.constraintDate ? {\n                    startDate : taskRecord.constraintDate,\n                    cls       : `b-bottom b-constraint-date b-constraint-type-${taskRecord.constraintType}`,\n                    name      : this.L(`L{ConstraintTypePicker.${taskRecord.constraintType}}`)\n                } : null,\n\n                deadlineDate : taskRecord => taskRecord.deadlineDate ? {\n                    startDate : taskRecord.deadlineDate,\n                    cls       : `b-bottom b-deadline-date`,\n                    name      : this.L('L{deadlineDate}')\n                } : null\n            },\n\n            /**\n             * Used to enable/disable built in indicators and to define custom indicators.\n             *\n             * Custom indicators are defined as functions, that accept a task record and return a\n             * {@link Scheduler.model.TimeSpan}, or a config object thereof.\n             *\n             * ```\n             * new Gantt({\n             *   features : {\n             *     indicators : {\n             *       items : {\n             *         // Disable deadlineDate indicators\n             *         deadlineDate : false,\n             *\n             *         // Add a custom indicator (called prepare)\n             *         prepare : taskRecord => ({\n             *            startDate : taskRecord.startDate,\n             *            iconCls   : 'b-fa b-fa-magnify',\n             *            name      : 'Start task preparations'\n             *         })\n             *       }\n             *     }\n             *   }\n             * });\n             * ```\n             *\n             * For more information, please see the class description at top.\n             *\n             * @config {Object<String,Function|Boolean>}\n             * @category Common\n             */\n            items : null,\n\n            /**\n             * A function which receives data about the indicator and returns a string,\n             * or a Promise yielding a string (for async tooltips), to be displayed in the tooltip.\n             * This method will be called with an object containing the fields below\n             * @param {Object} data Indicator data\n             * @param {String} data.name Indicator name\n             * @param {Date} data.startDate Indicator startDate\n             * @param {Date} data.endDate Indicator endDate\n             * @param {Gantt.model.TaskModel} data.taskRecord The task to which the indicator belongs\n             * @config {Function}\n             */\n            tooltipTemplate : data => {\n                const\n                    { indicator } = data,\n                    encodedName   = StringHelper.encodeHtml(indicator.name);\n\n                if (data.endDate) {\n                    return `\n                        ${indicator.name ? `<div class=\"b-gantt-task-title\">${encodedName}</div>` : ''}\n                        <table>\n                            <tr><td>${this.L('L{Start}')}:</td><td>${data.startClockHtml}</td></tr>\n                            <tr><td>${this.L('L{End}')}:</td><td>${data.endClockHtml}</td></tr>\n                        </table>\n                    `;\n                }\n\n                return `\n                    ${indicator.name ? `<div class=\"b-gantt-task-title\">${encodedName}</div>` : ''}\n                    ${data.startText}\n                `;\n            }\n\n        };\n    }\n\n    static get pluginConfig() {\n        return {\n            chain : ['onTaskDataGenerated', 'onPaint']\n        };\n    }\n\n    //endregion\n\n    construct(gantt, config = {}) {\n        this.tipId = `${gantt.id}-indicators-tip`;\n\n        // Store items to set manually after config, we do not want to pass them along to the base class since it will\n        // apply them to the tooltip\n        config = Object.assign({}, config);\n        const { items } = config;\n\n        super.construct(gantt, config);\n\n        this.items = items;\n    }\n\n    template(...args) {\n        return this.tooltipTemplate(...args);\n    }\n\n    // Private setter, not supposed to set it during runtime\n    set items(indicators) {\n        const me = this;\n\n        // All indicators, custom + default\n        me._indicators = ObjectHelper.assign({}, me.defaultIndicators, indicators);\n\n        // Accessors to toggle the indicators from the outside\n        me._indicatorAccessors = {};\n        // Keep track of enabled/disabled indicators\n        me._indicatorStatus = {};\n\n        for (const name in me._indicators) {\n            // Store if indicator is enabled/disabled (enabled if true or fn)\n            me._indicatorStatus[name] = Boolean(me._indicators[name]);\n\n            // If it was configured as true, it means we should use a default implementation\n            if (typeof me._indicators[name] !== 'function') {\n                me._indicators[name] = me.defaultIndicators[name];\n            }\n\n            // Create accessors so that we can enable/disable on the fly using:\n            // gantt.features.indicators.items.deadlineDate = false;\n            Object.defineProperty(me._indicatorAccessors, name, {\n                enumerable : true,\n                get() {\n                    return me._indicatorStatus[name] ? me._indicators[name] : false;\n                },\n                set(value) {\n                    me._indicatorStatus[name] = value;\n                    me.client.refresh();\n                }\n            });\n        }\n    }\n\n    /**\n     * Accessors for the indicators that can be used to toggle them at runtime.\n     *\n     * ```\n     * gantt.features.indicators.items.deadlineDate = false;\n     * ```\n     *\n     * @property {Object<String,Boolean>}\n     * @readonly\n     * @category Common\n     */\n    get items() {\n        // These accessors are generated in `set items`, allowing runtime enabling/disabling of indicators\n        return this._indicatorAccessors;\n    }\n\n    //region Render\n\n    // Map fn that generates a DOMConfig for an indicator\n    createIndicatorDOMConfig(indicator, index) {\n        const\n            { gantt, renderData }                = this,\n            { taskRecord }                       = renderData,\n            { cls, iconCls }                     = indicator,\n            { rtl, timeAxis, timeAxisViewModel } = gantt;\n\n        let { startDate, endDate } = indicator;\n\n        if (endDate) {\n            endDate = Math.min(endDate, timeAxisViewModel.endDate);\n        }\n\n        if (gantt.fillTicks) {\n            const startTick = timeAxis.getSnappedTickFromDate(startDate);\n\n            startDate = startTick.startDate;\n\n            if (endDate) {\n                const endTick = timeAxis.getSnappedTickFromDate(endDate);\n\n                endDate = endTick.endDate;\n            }\n        }\n\n        const\n            x         = timeAxisViewModel.getPositionFromDate(startDate),\n            width     = endDate ? Math.abs(timeAxisViewModel.getPositionFromDate(endDate - x)) : null,\n            classList = cls?.isDomClassList ? cls : new DomClassList(cls),\n            top       = renderData.top || gantt.store.indexOf(taskRecord) * gantt.rowManager.rowOffsetHeight + gantt.resourceMargin,\n            height    = renderData.height || gantt.rowHeight - gantt.resourceMargin * 2;\n\n        indicator.taskRecord = taskRecord;\n\n        return {\n            className : Object.assign(classList, {\n                'b-indicator' : 1,\n                'b-has-icon'  : indicator.iconCls\n            }),\n            style : {\n                [rtl ? 'right' : 'left'] : x,\n                top,\n                height,\n                width,\n                style                    : indicator.style\n            },\n            dataset : {\n                // For sync\n                taskId       : `${renderData.taskId}-indicator-${index}`,\n                // allow users to look up which task this indicator belongs to\n                taskRecordId : renderData.taskId\n            },\n            children : [\n                iconCls ? {\n                    tag       : 'i',\n                    className : iconCls\n                } : null\n            ],\n            elementData : indicator\n        };\n    }\n\n    // Add DOMConfigs for enabled indicators as `extraConfigs` on the task. Will in the end be added to the task row\n    onTaskDataGenerated(renderData) {\n        if (this.disabled) {\n            return;\n        }\n\n        const\n            { items } = this,\n            usedIndicators   = [];\n\n        // Iterate all indicators\n        for (const name in items) {\n            const indicatorFn = items[name];\n\n            // If it is enabled and a function, call it and store the resulting timespan\n            if (this._indicatorStatus[name] && typeof indicatorFn === 'function') {\n                const timeSpan = indicatorFn(renderData.taskRecord);\n                timeSpan && this.client.timeAxis.timeSpanInAxis(timeSpan.startDate, timeSpan.endDate) && usedIndicators.push(timeSpan);\n            }\n        }\n\n        // Convert indicator timespans to DOMConfigs for rendering\n        renderData.extraConfigs.push(...usedIndicators.map(this.createIndicatorDOMConfig, {\n            gantt : this.client,\n            renderData\n        }));\n    }\n\n    //endregion\n\n    //region Tooltip\n\n    resolveTimeSpanRecord(forElement) {\n        return forElement.lastDomConfig.elementData;\n    }\n    //endregion\n}\n\nGridFeatureManager.registerFeature(Indicators, false);\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport SchedulerLabels from '../../Scheduler/feature/Labels.js';\n\n/**\n * @module Gantt/feature/Labels\n */\n\n/**\n * Specialized version of the Labels feature for Scheduler, that handles labels for tasks in Gantt. See\n * {@link Scheduler/feature/Labels Schedulers Labels feature} for more information.\n\n * This feature is **off** by default. For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * @extends Scheduler/feature/Labels\n * @demo Gantt/labels\n * @classtype labels\n * @feature\n *\n * @typings Scheduler.feature.Labels -> Scheduler.feature.SchedulerLabels\n */\nexport default class Labels extends SchedulerLabels {\n    static get $name() {\n        return 'Labels';\n    }\n\n    static get pluginConfig() {\n        return {\n            chain : ['onTaskDataGenerated']\n        };\n    }\n\n    onTaskDataGenerated(data) {\n        this.onEventDataGenerated(data);\n    }\n}\n\nGridFeatureManager.registerFeature(Labels, false, 'Gantt');\n","import InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\n\n/**\n * @module Gantt/feature/ParentArea\n */\n\n/**\n * Highlights the area encapsulating all child tasks of a parent task in a semi-transparent layer. You can style\n * these layer elements using the `b-parent-area` CSS class.\n *\n * {@inlineexample Gantt/feature/ParentArea.js}\n *\n * This feature is **off** by default. For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         parentArea : true\n *     }\n * });\n * ```\n *\n * @extends Core/mixin/InstancePlugin\n * @demo Gantt/parent-area\n * @classtype parentArea\n * @feature\n */\nexport default class ParentArea extends InstancePlugin {\n    static $name = 'ParentArea';\n\n    static pluginConfig = {\n        chain : ['onBeforeTaskSync']\n    };\n\n    // Map to keep track of highlighted parents, holds DomConfigs keyed by parentRecord\n    highlighted = new Map();\n\n    // Recursively highlight self and all unhighlighted ancestors\n    highlightParent(parentRecord) {\n        const { highlighted } = this;\n\n        if (parentRecord && !parentRecord.isProjectModel && !highlighted.has(parentRecord)) {\n            const\n                { client }          = this,\n                { rowOffsetHeight } = client.rowManager,\n                descendants         = parentRecord.visibleDescendantCount,\n                box                 = client.getTaskBox(parentRecord);\n\n            if (!box) {\n                return;\n            }\n\n            const domConfig = {\n                className : {\n                    'b-parent-area' : 1\n                },\n                style : {\n                    top    : box.top,\n                    height : (descendants + 1) * rowOffsetHeight - box.top % rowOffsetHeight, // +1 for self\n                    left   : box.left,\n                    width  : box.width\n                },\n                dataset : {\n                    taskId : `parent-area-${parentRecord.id}`\n                }\n            };\n\n            highlighted.set(parentRecord, domConfig);\n\n            this.highlightParent(parentRecord.parent);\n        }\n    }\n\n    // Called after collecting all task configs, before DomSyncing them\n    onBeforeTaskSync(configs) {\n        if (!this.disabled) {\n            const { highlighted, client } = this;\n\n            // Start from scratch to not have to keep track of modifications, collecting task area configs is cheap\n            highlighted.clear();\n\n            // Highlight all parents whose area intersects the view, which we know if a child is among rendered rows\n            for (const row of client.rowManager) {\n                const taskRecord = client.store.getById(row.id);\n                taskRecord && this.highlightParent(taskRecord.parent);\n            }\n\n            configs.push(...highlighted.values());\n        }\n    }\n\n    doDisable(disable) {\n        super.doDisable(disable);\n\n        this.client.refresh();\n    }\n}\n\nGridFeatureManager.registerFeature(ParentArea, false, 'Gantt');\n","import InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport Delayable from '../../Core/mixin/Delayable.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport ArrayHelper from '../../Core/helper/ArrayHelper.js';\n\n/**\n * @module Gantt/feature/ProgressLine\n */\n\n/**\n *\n * This feature draws project progress line with SVG lines. Requires {@link SchedulerPro/feature/PercentBar} to be enabled (which\n * by default, it is)\n *\n * This feature is **off** by default. For info on enabling it, see {@link Grid/view/mixin/GridFeatures}.\n *\n * ```javascript\n * let gantt = new Gantt({\n *     features : {\n *         progressLine : {\n *            statusDate : new Date(2017, 2, 8)\n *         }\n *     }\n * });\n * ```\n *\n * Status date can be changed dynamically:\n *\n * ```javascript\n * gantt.features.progressLine.statusDate = new Date();\n * ```\n *\n * If status date is not in the current Gantt time span, progress line will use view start or end coordinates. This\n * behavior can be customized with {@link #config-drawLineOnlyWhenStatusDateVisible} config. Or you can override {@link #function-shouldDrawProgressLine}\n * method and provide more complex condition.\n *\n * Progress line is a set of SVG <line> elements drawn between all the tasks.\n *\n * {@inlineexample Gantt/feature/ProgressLine.js}\n *\n * @demo Gantt/progressline\n * @extends Core/mixin/InstancePlugin\n * @mixes Core/mixin/Delayable\n * @classtype progressLine\n * @feature\n */\nexport default class ProgressLine extends Delayable(InstancePlugin) {\n    /**\n     * Fired when progress line is rendered\n     * @event progressLineDrawn\n     */\n\n    //region Config\n\n    static get $name() {\n        return 'ProgressLine';\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Progress line status date. If not provided, current date is used.\n             * @config {Date}\n             */\n            statusDate : new Date(),\n\n            /**\n             * Set to true to hide progress line, when status date is not in the current time axis.\n             * @config {Boolean}\n             */\n            drawLineOnlyWhenStatusDateVisible : false,\n\n            lineCls : 'b-gantt-progress-line',\n\n            containerCls : 'b-progress-line-canvas'\n        };\n    }\n\n    static get pluginConfig() {\n        return {\n            chain : ['onPaint']\n        };\n    }\n\n    //endregion\n\n    //region Init & destroy\n\n    construct(client, config = {}) {\n        const me = this;\n\n        // Many things may schedule a draw. Ensure it only happens once, on the next frame.\n        // And Ensure it really is on the *next* frame after invocation by passing\n        // the cancelOutstanding flag.\n        me.scheduleDraw = me.createOnFrame('draw', [], me, true);\n\n        super.construct(client, config);\n\n        this.lineSegments = [];\n    }\n\n    doDisable(disable) {\n        const me = this;\n\n        // attach/detach listeners\n        me.attachToClient(disable ? null : me.client);\n\n        if (me.client.rendered) {\n            me.draw();\n        }\n\n        super.doDisable(disable);\n    }\n\n    //endregion\n\n    get statusDate() {\n        return this._statusDate;\n    }\n\n    /**\n     * Progress line status date. If not provided, current date is used.\n     * @property {Date}\n     */\n    set statusDate(date) {\n        if (date instanceof Date) {\n            this._statusDate = date;\n            if (!this.disabled) {\n                this.scheduleDraw();\n            }\n        }\n    }\n\n    // cannot use `get svgCanvas` because it will trigger svgCanvas getter on instance too early\n    getSVGCanvas() {\n        const\n            me = this,\n            { client } = me;\n\n        if (!me._svgCanvas) {\n            const svg = me._svgCanvas = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            // To not be touched when syncing tasks to DOM\n            svg.retainElement = true;\n            svg.classList.add(me.containerCls);\n            client.foregroundCanvas.appendChild(svg);\n        }\n        return me._svgCanvas;\n    }\n\n    // region Event handlers\n\n    attachToProject(project) {\n        this.detachListeners('project');\n\n        project?.ion({\n            name    : 'project',\n            refresh : 'onProjectRefresh',\n            thisObj : this\n        });\n    }\n\n    attachToRowManager(rowManager) {\n        this.detachListeners('rowManager');\n\n        rowManager?.ion({\n            name              : 'rowManager',\n            translaterow      : 'onTranslateRow',\n            refresh           : 'scheduleDraw',\n            rerender          : 'scheduleDraw',\n            changetotalheight : 'scheduleDraw',\n            thisObj           : this\n        });\n    }\n\n    attachToClient(client) {\n        const me = this;\n\n        me.detachListeners('client');\n\n        // dependencies are drawn on scroll, both horizontal and vertical\n        client?.ion({\n            name                   : 'client',\n            horizontalscroll       : 'scheduleDraw',\n            togglenode             : 'scheduleDraw',\n            taskdrag               : 'onTaskDrag',\n            taskdragabortfinalized : 'scheduleDraw',\n            aftertaskdrop          : 'scheduleDraw',\n            timelineviewportresize : 'scheduleDraw',\n            thisObj                : me\n        });\n\n        me.attachToProject(client?.project);\n        me.attachToRowManager(client?.rowManager);\n    }\n\n    onPaint() {\n        this.attachToProject(this.disabled ? null : this.client.project);\n    }\n\n    /**\n     * Redraws the line when the project propagation is done\n     * @private\n     */\n    onProjectRefresh() {\n        this.scheduleDraw();\n    }\n\n    onTranslateRow({ row }) {\n        // a changetotalheight event is fired after translations, if a rowHeight change is detected here it will redraw\n        // the line\n        if (row.lastTop >= 0 && row.top !== row.lastTop) {\n            this.scheduleDraw();\n        }\n    }\n\n    // Refreshing only lines for dragged task to avoid slowing down drag operation\n    onTaskDrag({ taskRecords, dragData }) {\n        taskRecords.forEach(record => {\n            this.updateLineForTask(record, {\n                [record.id] : DateHelper.add(record.startDate, dragData.timeDiff)\n            });\n        });\n    }\n    // endregion\n\n    /**\n     * Returns true if progress line should be drawn\n     * @returns {Boolean}\n     */\n    shouldDrawProgressLine() {\n        const me = this;\n        return !me.client.timeAxisSubGrid.collapsed && !me.disabled && (!me.drawLineOnlyWhenStatusDateVisible || me.client.timeAxis.dateInAxis(me.statusDate));\n    }\n\n    /**\n     * Returns status date horizontal position relative to the foreground canvas\n     * @returns {Number}\n     * @private\n     */\n    getStatusDateX() {\n        let { statusDate } = this;\n\n        const { client } = this;\n\n        if (!client.timeAxis.dateInAxis(statusDate)) {\n            statusDate = statusDate < client.timeAxis.startDate ? client.timeAxis.startDate : client.timeAxis.endDate;\n        }\n\n        return client.getCoordinateFromDate(statusDate);\n    }\n\n    /**\n     * Returns object with status date local coordinate and view x,y coordinates. Used to convert page coordinates to\n     * view local.\n     * @returns {{statusDateX: Number, viewXY: number[]}}\n     * @private\n     */\n    getRenderData() {\n        const\n            statusDateX = this.getStatusDateX(),\n            // We refer to the DOM to get status date horizontal coordinate (for segmented tasks which are not supported yet)\n            // we need to adjust progress bar element box to view/scroll.\n            viewBox     = this.client.timeAxisSubGridElement.getBoundingClientRect(),\n            viewXY      = [this.client.scrollLeft - viewBox.left, -viewBox.top];\n\n        return { statusDateX, viewXY };\n    }\n\n    // region Drawing\n\n    /**\n     * Renders the progress line.\n     */\n    draw() {\n        const\n            me         = this,\n            { client } = me;\n\n        me.lineSegments.forEach(el => el.remove());\n        me.lineSegments = [];\n\n        if (!me.shouldDrawProgressLine()) {\n            return;\n        }\n\n        if (client.isAnimating) {\n            client.ion({\n                transitionend() {\n                    me.scheduleDraw();\n                },\n                once : true\n            });\n\n            return;\n        }\n\n        const\n            data  = me.getRenderData(),\n            lines = [];\n\n        client.rowManager.forEach(row => lines.push(...me.getLineSegmentRenderData(row, data)));\n\n        // Batch rendering to avoid constant layout reflows\n        // With batch drawing line takes ~8ms comparing to ~30ms prior\n        lines.forEach(line => me.drawLineSegment(line));\n\n        client.trigger('progressLineDrawn');\n    }\n\n    segmentBelongsToTask(el, taskRecord) {\n        // Use getAttribute to not upset Salesforce LockerService\n        return el.getAttribute('data-task-id') == taskRecord.id;\n    }\n\n    /**\n     * Updates progress line segment for one task\n     * @param {Gantt.model.TaskModel} taskRecord\n     * @param {Object} [renderData] Optional render data, which is an object where keys are task ids and values are\n     * new task start date\n     * @private\n     */\n    updateLineForTask(taskRecord, renderData) {\n        const me = this;\n\n        if (me.disabled) {\n            return;\n        }\n\n        const row = me.client.getRowFor(taskRecord);\n\n        if (row) {\n            const toRemove = [];\n\n            me.lineSegments.forEach(el => {\n                if (me.segmentBelongsToTask(el, taskRecord)) {\n                    toRemove.push(el);\n                    el.remove();\n                }\n            });\n\n            ArrayHelper.remove(me.lineSegments, ...toRemove);\n\n            me.getLineSegmentRenderData(row, me.getRenderData(), renderData)\n                .forEach(line => me.drawLineSegment(line));\n        }\n    }\n\n    /**\n     * Draws line for a given row\n     * @param {Grid.row.Row} row Row instance\n     * @param {Object} data Output from {@link #function-getRenderData} method\n     * @param {Object} [renderData] Optional render data, which is an object where keys are task ids and values are\n     * new task start date\n     * @internal\n     */\n    getLineSegmentRenderData(row, data, renderData = {}) {\n        const\n            me                      = this,\n            { statusDateX, viewXY } = data,\n            taskRecord              = me.client.getRecordFromElement(row.elements.normal),\n            taskId                  = taskRecord.id,\n            lineDefinitions         = [];\n\n        let point;\n\n        if (me.isStatusLineTask(taskRecord, renderData[taskRecord.id])) {\n            point = me.calculateCoordinateForTask(taskRecord, viewXY);\n\n            // If multiple rows are affected by event update, it could happen, that point\n            // could not be resolved\n            point && lineDefinitions.push(\n                {\n                    dataset : { taskId },\n                    x1      : statusDateX,\n                    y1      : row.top,\n                    x2      : point.x,\n                    y2      : point.y\n                },\n                {\n                    dataset : { taskId },\n                    x1      : point.x,\n                    y1      : point.y,\n                    x2      : statusDateX,\n                    y2      : row.bottom\n                }\n            );\n        }\n\n        // otherwise we render vertical status line\n\n        if (!point) {\n            lineDefinitions.push(\n                {\n                    dataset : { taskId },\n                    x1      : statusDateX,\n                    y1      : row.top,\n                    x2      : statusDateX,\n                    y2      : row.bottom\n                }\n            );\n        }\n\n        return lineDefinitions;\n    }\n\n    /**\n     * Draws line on svg canvas\n     * @param {Object} data Line render data. Output from {@link #function-getLineSegmentRenderData}\n     * @returns {Element}\n     * @internal\n     */\n    drawLineSegment(data) {\n        const me = this;\n\n        me.lineSegments.push(DomHelper.createElement(Object.assign({\n            tag    : 'line',\n            ns     : 'http://www.w3.org/2000/svg',\n            // cannot use className when namespace is provided\n            class  : me.lineCls,\n            parent : me.getSVGCanvas()\n        }, data)));\n    }\n\n    /**\n     * Returns true if task should be connected to the progress line.\n     * @param {Gantt.model.TaskModel} taskRecord\n     * @param {Date} [startDate] Provide to check if task record should be connected to the progress line if it'd\n     * start then\n     * @returns {Boolean}\n     * @internal\n     */\n    isStatusLineTask(taskRecord, startDate) {\n        const statusDate = this.statusDate;\n\n        startDate = startDate || taskRecord.startDate;\n\n        // task should be visible and not inactive\n        return taskRecord?.project && !taskRecord.inactive && this.client.timeAxis.isTimeSpanInAxis(taskRecord) &&\n            // - is in progress\n            (taskRecord.isInProgress ||\n                // ...or is not started and its start date is before statusDate\n                (!taskRecord.isStarted && startDate < statusDate) ||\n                // ...or is finished and its start date is after statusDate\n                (taskRecord.isCompleted && startDate > statusDate));\n    }\n\n    /**\n     * This method will calculate point inside task element to be connected with line.\n     * @param {Gantt.model.TaskModel} record\n     * @param {Number[]} translateBy View xy coordinates to calculate relative point position\n     * @returns {Object} Object containing coordinates for point in progress line, or undefined if no progress bar el is found\n     * @private\n     */\n    calculateCoordinateForTask(record, translateBy) {\n        const\n            { client }     = this,\n            node           = client.getElementFromTaskRecord(record),\n            isZeroDuration = record.milestone,\n            progressBarEl  = isZeroDuration ? node : node?.querySelector('.b-task-percent-bar');\n\n        if (progressBarEl) {\n            const\n                box       = progressBarEl.getBoundingClientRect(),\n                totalSize = client.timeAxisViewModel.totalSize;\n\n            return {\n                x : Math.min((isZeroDuration ? box.left : box.right) + translateBy[0], totalSize),\n                y : box.top + box.height / 2 + translateBy[1]\n            };\n        }\n    }\n\n    // endregion\n}\n\nGridFeatureManager.registerFeature(ProgressLine);\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport AbstractTimeRanges from '../../Scheduler/feature/AbstractTimeRanges.js';\nimport AttachToProjectMixin from '../../Scheduler/data/mixin/AttachToProjectMixin.js';\n\n/**\n * @module Gantt/feature/ProjectLines\n */\n\n/**\n * This feature draws two vertical lines in the schedule area, indicating project start/end dates.\n *\n * {@inlineexample Gantt/guides/gettingstarted/basic.js}\n *\n * This feature is **enabled** by default\n *\n * @extends Scheduler/feature/TimeRanges\n * @demo Gantt/advanced\n * @classtype projectLines\n * @feature\n */\nexport default class ProjectLines extends AbstractTimeRanges.mixin(AttachToProjectMixin) {\n    //region Config\n\n    static get $name() {\n        return 'ProjectLines';\n    }\n\n    static get defaultConfig() {\n        return {\n            showHeaderElements : true,\n            cls                : 'b-gantt-project-line'\n        };\n    }\n\n    //endregion\n\n    //region Project\n\n    attachToProject(project) {\n        super.attachToProject(project);\n\n        project.ion({\n            name    : 'project',\n            refresh : this.onProjectRefresh,\n            thisObj : this\n        });\n    }\n\n    //endregion\n\n    //region Init\n\n    // We must override the TimeRanges superclass implementation which ingests the client's project's\n    // timeRangeStore. We implement our own store\n    startConfigure() {}\n\n    updateLocalization() {\n        this.renderRanges();\n    }\n\n    //endregion\n\n    onProjectRefresh() {\n        this.renderRanges();\n    }\n\n    shouldRenderRange(range) {\n        const { client } = this;\n\n        return client.timeAxis.dateInAxis(range.startDate);\n    }\n\n    get timeRanges() {\n        const { startDate, endDate } = this.client.project;\n\n        return startDate && endDate ? [\n            {\n                name : this.L('L{Project Start}'),\n                startDate\n            },\n            {\n                name      : this.L('L{Project End}'),\n                startDate : endDate\n            }\n        ] : [];\n    }\n}\n\nGridFeatureManager.registerFeature(ProjectLines, true, 'Gantt');\n","import TooltipBase from '../../Scheduler/feature/base/TooltipBase.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\n\n/**\n * @module Gantt/feature/Rollups\n */\n\nconst\n    rollupCls      = 'b-task-rollup',\n    rollupSelector = `.${rollupCls}`;\n\n/**\n * If the task's {@link Gantt/model/TaskModel#field-rollup} data field is set to true, it displays a small bar or diamond below its summary task in the timeline.\n * Each of the rollup elements show a tooltip when hovering it with details of the task.\n * The tooltip content is customizable, see {@link #config-template} config for details.\n *\n * To edit the rollup data field, use {@link Gantt/column/RollupColumn} or a checkbox on Advanced tab of {@link Gantt/widget/TaskEditor}.\n *\n * This feature is **off** by default. For info on enabling it, see {@link Grid/view/mixin/GridFeatures}.\n *\n * @extends Scheduler/feature/base/TooltipBase\n * @inlineexample Gantt/feature/Rollups.js\n * @demo Gantt/rollups\n * @classtype rollups\n * @feature\n */\nexport default class Rollups extends TooltipBase {\n    //region Config\n\n    static get $name() {\n        return 'Rollups';\n    }\n\n    // Default configuration.\n    static get defaultConfig() {\n        return {\n            cls         : 'b-gantt-task-tooltip',\n            align       : 't-b',\n            forSelector : rollupSelector\n        };\n    }\n\n    static get pluginConfig() {\n        return {\n            chain : [\n                // onTaskDataGenerated for decorating task with rollups\n                'onTaskDataGenerated',\n                // render for creating tooltip (in TooltipBase)\n                'onPaint'\n            ]\n        };\n    }\n\n    //endregion\n\n    //region Init & destroy\n\n    construct(gantt, config) {\n        this.tipId = `${gantt.id}-rollups-tip`;\n\n        super.construct(gantt, config);\n    }\n\n    attachToTaskStore(store) {\n        this.detachListeners('taskStore');\n\n        store?.ion({\n            name    : 'taskStore',\n            update  : 'onStoreUpdateRecord',\n            thisObj : this\n        });\n    }\n\n    doDestroy() {\n        this.attachToTaskStore(null);\n        super.doDestroy();\n    }\n\n    doDisable(disable) {\n        const me = this;\n\n        if (me.tooltip) {\n            me.tooltip.disabled = disable;\n        }\n\n        // attach/detach listeners\n        me.attachToTaskStore(disable ? null : me.client.taskStore);\n\n        // Hide or show the rollup elements\n        me.client.refresh();\n\n        super.doDisable(disable);\n    }\n\n    //endregion\n\n    getTipHtml({ activeTarget, event }) {\n        const\n            { client }     = this,\n            task           = client.resolveTaskRecord(activeTarget),\n            rawElements    = document.elementsFromPoint(event.pageX + globalThis.pageXOffset, event.pageY + globalThis.pageYOffset),\n            rollupElements = rawElements\n                .filter(e => e.classList.contains(rollupCls))\n                .sort((lhs, rhs) => parseInt(lhs.dataset.index, 10) - parseInt(rhs.dataset.index, 10)),\n            children       = rollupElements.map(el => task.children[parseInt(el.dataset.index, 10)]);\n\n        return this.template({\n            task,\n            children\n        });\n    }\n\n    /**\n     * Template (a function accepting event data and returning a string) used to display info in the tooltip.\n     * The template will be called with an object as with fields as detailed below\n     * @config {Function}\n     * @param {Object} data A data block containing the information needed to create tooltip content.\n     * @param {Gantt.model.TaskModel} data.task The summary task to rollup to.\n     * @param {Gantt.model.TaskModel[]} data.children The array of rollup tasks.\n     */\n    template({ children }) {\n        const\n            me         = this,\n            { client } = me,\n            pieces     = [];\n\n        children.map((child, index) => {\n            const\n                { startDate, endDate } = child,\n                startText              = client.getFormattedDate(startDate),\n                endDateValue           = client.getDisplayEndDate(endDate, startDate),\n                endText                = client.getFormattedDate(endDateValue);\n\n            pieces.push(\n                `<div class=\"b-gantt-task-title ${index ? 'b-follow-on' : ''}\">${StringHelper.encodeHtml(child.name)}</div><table>`,\n                `<tr><td>${me.L('L{TaskTooltip.Start}')}:</td><td>${me.clockTemplate.template({\n                    date : startDate,\n                    text : startText,\n                    cls  : 'b-sch-tooltip-startdate'\n                })}</td></tr>`,\n                `<tr><td>${me.L('L{TaskTooltip.End}')}:</td><td>${child.isMilestone ? '' : me.clockTemplate.template({\n                    date : endDateValue,\n                    text : endText,\n                    cls  : 'b-sch-tooltip-enddate'\n                })}</td></tr></table>`\n            );\n        });\n\n        return pieces.join('');\n    }\n\n    //region Events\n\n    onStoreUpdateRecord({ record, changes }) {\n        // We don't need this listener in case the gantt is loading data\n        if (!this.client.project.propagatingLoadChanges) {\n            // If it's a size or position change, then sync that parent's rollups\n            if (record.parent && (changes.rollup || changes.startDate || changes.endDate)) {\n                this.client.taskRendering.redraw(record.parent);\n            }\n        }\n    }\n\n    onTaskDataGenerated({ taskRecord, left, wrapperChildren, style }) {\n        // Not checking taskRecord.isParent as it might be a lazy loaded parent (set to `true`)\n        if (!this.disabled && Array.isArray(taskRecord.children)) {\n            const\n                // Shortest last in DOM, so they are on top in the stacking order so that you can hover\n                // them if they overlap with longer ones. Otherwise, they might be below and won't trigger\n                // their own mouseover events.\n                children = taskRecord.children.slice().sort((lhs, rhs) => rhs.durationMS - lhs.durationMS);\n\n            wrapperChildren.push({\n                className : `${rollupCls}-wrap`,\n                dataset   : {\n                    taskFeature : 'rollups'\n                },\n                children : children.map(child => {\n                    // skip inactive children if the task itself is active, skip unscheduled tasks\n                    // (might be unscheduled because of delayed calculations)\n                    if (child.rollup && child.isScheduled && (!child.inactive || taskRecord.inactive)) {\n                        const positionData = this.client.getSizeAndPosition(child);\n\n                        if (!positionData) {\n                            return null;\n                        }\n\n                        const { position, width } = positionData;\n\n                        return {\n                            dataset : {\n                                index        : child.parentIndex,\n                                rollupTaskId : child.id\n                            },\n                            className : {\n                                [rollupCls]   : rollupCls,\n                                [child.cls]   : child.cls,\n                                'b-milestone' : child.isMilestone,\n                                'b-inactive'  : child.inactive\n                            },\n                            style : {\n                                style,\n                                width : child.isMilestone ? null : width,\n                                left  : position - left\n                            }\n                        };\n                    }\n                    return null;\n                }),\n                syncOptions : {\n                    syncIdField : 'rollupTaskId'\n                }\n            });\n        }\n    }\n\n    //endregion\n}\n\nGridFeatureManager.registerFeature(Rollups, false, 'Gantt');\n","import TimelineSummary from '../../Scheduler/feature/TimelineSummary.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\n\n/**\n * @module Gantt/feature/Summary\n */\n\n/**\n * Describes a summary level for the time axis in Gantt\n * @typedef GanttSummaryOptions\n * @property {String} label Label for the summary\n * @property {Function} renderer Function to calculate the and render the summary value\n * @property {Date} startDate Tick start date\n * @property {Date} endDate Tick end date\n * @property {Gantt.data.TaskStore} taskStore Task store\n * @property {Gantt.data.TaskStore} store Display store, for when Gantt is configured to display tasks from another\n * store than its task store (for example when using the TreeGroup feature)\n */\n\n/**\n * A feature displaying a summary bar in the grid footer.\n *\n * ## Summaries in the locked grid\n * For regular columns in the locked section - specify type of summary on columns, available types are:\n * <dl class=\"wide\">\n * <dt>sum <dd>Sum of all values in the column\n * <dt>add <dd>Alias for sum\n * <dt>count <dd>Number of rows\n * <dt>countNotEmpty <dd>Number of rows containing a value\n * <dt>average <dd>Average of all values in the column\n * <dt>function <dd>A custom function, used with store.reduce. Should take arguments (sum, record)\n * </dl>\n * Columns can also specify a {@link Grid.column.Column#config-summaryRenderer} to format the calculated sum.\n *\n * ## Summaries in the time axis grid\n *\n * To output summaries in the ticks of the time axis summary bar, either provide a {@link #config-renderer} or use\n * {@link #config-summaries}. The `renderer` method provides the current tick `startDate` and `endDate` which you\n * can use to output the data you want to present in each summary cell.\n *\n * ```javascript\n * features : {\n *     summary     : {\n *         // Find all intersecting task and render the count in each cell\n *         renderer: ({ taskStore, startDate, endDate }) => {\n *             const intersectingTasks = taskStore.query(task =>\n *                 // Gantt by default renders tasks as early as possible, if loaded with un-normalized data there\n *                 // might not be any start and end dates calculated yet\n *                 task.isScheduled &&\n *                 // Find tasks that intersect the current tick\n *                 DateHelper.intersectSpans(task.startDate, task.endDate, startDate, endDate)\n *             );\n *\n *             return intersectingTasks.length;\n *         }\n *     }\n * }\n * ```\n *\n * {@inlineexample Gantt/feature/Summary.js}\n *\n * This feature is <strong>disabled</strong> by default.\n *\n * @extends Scheduler/feature/TimelineSummary\n * @classtype summary\n * @feature\n * @demo Gantt/summary\n *\n * @typings Grid.feature.Summary -> Grid.feature.GridSummary\n * @typings Scheduler.feature.Summary -> Scheduler.feature.SchedulerSummary\n */\nexport default class Summary extends TimelineSummary {\n    //region Config\n\n    static get $name() {\n        return 'Summary';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Array of summary configs which consists of a label and a {@link #config-renderer} function\n             *\n             * ```javascript\n             * new Gantt({\n             *     features : {\n             *         summary : {\n             *             summaries : [\n             *                 {\n             *                     label : 'Label',\n             *                     renderer : ({ startDate, endDate, taskStore }) => {\n             *                         // return display value\n             *                         returns '<div>Renderer output</div>';\n             *                     }\n             *                 }\n             *             ]\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * @config {GanttSummaryOptions[]}\n             */\n            summaries : null,\n\n            /**\n             * Renderer function for a single time axis tick. Should calculate a sum and return HTML as a result.\n             *\n             * ```javascript\n             * new Gantt({\n             *     features : {\n             *         summary : {\n             *             renderer : ({ startDate, endDate, taskStore }) => {\n             *                 // return display value\n             *                 returns '<div>Renderer output</div>';\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * @param {Date} startDate Tick start date\n             * @param {Date} endDate Tick end date\n             * @param {Gantt.data.TaskStore} taskStore Task store\n             * @param {Gantt.data.TaskStore} store Display store, for when Gantt is configured to display tasks from\n             * another store than its task store (for example when using the TreeGroup feature)\n             * @returns {String} Html content\n             * @config {Function}\n             */\n            renderer : null\n        };\n    }\n\n    // Plugin configuration. This plugin chains some of the functions in Grid.\n    static get pluginConfig() {\n        const config = super.pluginConfig;\n\n        config.chain.push('updateTaskStore', 'bindStore');\n\n        return config;\n    }\n\n    //endregion\n\n    //region Init\n\n    construct(gantt, config) {\n        super.construct(gantt, config);\n\n        // Feature might be run from Grid (in docs), should not crash\n        if (gantt.isGanttBase) {\n            this.updateTaskStore(gantt.taskStore);\n        }\n    }\n\n    bindStore() {\n        this.updateTimelineSummaries();\n    }\n\n    //endregion\n\n    //region Render\n\n    updateTaskStore(taskStore) {\n        this.detachListeners('summaryTaskStore');\n\n        taskStore.ion({\n            name    : 'summaryTaskStore',\n            filter  : 'updateTimelineSummaries',\n            thisObj : this\n        });\n    }\n\n    /**\n     * Updates summaries.\n     * @private\n     */\n    updateTimelineSummaries() {\n        const\n            me                = this,\n            {\n                client,\n                summaries\n            }                 = me,\n            { timeAxis }      = client,\n            summaryContainer  = me.summaryBarElement;\n\n        if (summaryContainer && client.isEngineReady) {\n            Array.from(summaryContainer.children).forEach((element, i) => {\n                const tick = timeAxis.getAt(i);\n\n                let html    = '',\n                    tipHtml = `<header>${me.L('L{Summary for}', client.getFormattedDate(tick.startDate))}</header>`;\n\n                summaries.forEach(config => {\n                    const\n                        value     = config.renderer({\n                            startDate     : tick.startDate,\n                            endDate       : tick.endDate,\n                            taskStore     : client.taskStore,\n                            store         : client.store,\n                            resourceStore : client.resourceStore,\n                            gantt         : client,\n                            element\n                        }),\n                        valueHtml = `<div class=\"b-timeaxis-summary-value\">${value ?? '&nbsp;'}</div>`;\n\n                    if (summaries.length > 1 || value !== '') {\n                        html += valueHtml;\n                    }\n\n                    tipHtml += `<label>${config.label || ''}</label>` + valueHtml;\n                });\n\n                element.innerHTML = html;\n                element._tipHtml  = tipHtml;\n            });\n        }\n    }\n}\n\n// Override Grids Summary with this improved version\nGridFeatureManager.registerFeature(Summary, false, 'Gantt');\n","import RowCopyPaste from '../../Grid/feature/RowCopyPaste.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport TransactionalFeature from '../../Scheduler/feature/mixin/TransactionalFeature.js';\n\n/**\n * @module Gantt/feature/TaskCopyPaste\n */\n\n/**\n * Allow using [Ctrl/CMD + C/X] and [Ctrl/CMD + V] to copy/cut and paste tasks. You can configure how a newly pasted record\n * is named using {@link #function-generateNewName}\n *\n * This feature is **enabled** by default\n *\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         taskCopyPaste : true\n *     }\n * });\n * ```\n *\n * ## Keyboard shortcuts\n *\n * By default, this feature will react to Ctrl+C, Ctrl+X and Ctrl+V for standard clipboard actions.\n * You can reconfigure the keys used to trigger these actions, see {@link #config-keyMap} for more details.\n *\n * @extends Grid/feature/RowCopyPaste\n * @inlineexample Gantt/feature/TaskCopyPaste.js\n * @classtype taskCopyPaste\n * @feature\n */\nexport default class TaskCopyPaste extends TransactionalFeature(RowCopyPaste) {\n\n    static $name = 'TaskCopyPaste';\n\n    static type = 'taskCopyPaste';\n\n    static configurable = {\n        copyRecordText  : 'L{copyTask}',\n        cutRecordText   : 'L{cutTask}',\n        pasteRecordText : 'L{pasteTask}'\n    };\n\n    //region Events\n\n    /**\n     * Fires on the owning Gantt after a paste action is performed.\n     * @event paste\n     * @on-owner\n     * @param {Gantt.view.Gantt} source Owner gantt\n     * @param {Gantt.model.TaskModel} referenceRecord The reference task record, the clipboard task records will\n     * be pasted above this row.\n     * @param {Gantt.model.TaskModel[]} records The pasted task records\n     * @param {Gantt.model.TaskModel[]} originalRecords For a copy action, these are the records that were copied.\n     * For cut action, this is same as the `records` param.\n     * @param {Boolean} isCut `true` if this is a cut action\n     * @param {String} entityName 'task' to distinguish this event from other beforePaste events\n     */\n\n    /**\n     * Fires on the owning Gantt before a paste action is performed, return `false` to prevent the action\n     * @event beforePaste\n     * @preventable\n     * @on-owner\n     * @param {Gantt.view.Gantt} source Owner Gantt\n     * @param {Gantt.model.TaskModel} referenceRecord The reference task record, the clipboard task records will\n     * be pasted above this row.\n     * @param {Gantt.model.TaskModel[]} records The records about to be pasted\n     * @param {Boolean} isCut `true` if this is a cut action\n     * @param {String} entityName 'task' to distinguish this event from other beforePaste events\n     */\n\n    //endregion\n\n    construct(gantt, config) {\n        super.construct(gantt, config);\n\n        gantt.ion({\n            beforeRenderTask : 'onBeforeRenderTask',\n            thisObj          : this\n        });\n    }\n\n    // Used in events to separate events from different features from each other\n    entityName = 'task';\n\n    //region Display store adjustments\n\n    populateCellMenu({ record, items }) {\n        super.populateCellMenu(...arguments);\n\n        // No copy pasting when using a \"display store\"\n        if (this.client.usesDisplayStore) {\n            items.cut && (items.cut.disabled = true);\n            items.copy && (items.copy.disabled = true);\n            items.paste && (items.paste.disabled = true);\n        }\n    }\n\n    isActionAvailable({ key, action, event }) {\n        return !this.client.usesDisplayStore && super.isActionAvailable({ key, action, event });\n    }\n\n    //endregion\n\n    setIsCut(taskRecord) {\n        super.setIsCut(...arguments);\n\n        // After a row is cut or copied - also refresh the associated task bar\n        this.client.taskRendering.redraw(taskRecord);\n    }\n\n    onBeforeRenderTask({ renderData }) {\n        renderData.cls['b-cut-row'] = renderData.row.cls['b-cut-row'];\n    }\n\n    extractParents(taskRecords, idMap, generateNames = true) {\n        const result = super.extractParents(taskRecords, idMap, generateNames);\n\n        if (!this.isCut) {\n            this.depsToCopy = this.extractDependencies(taskRecords, idMap);\n        }\n\n        return result;\n    }\n\n    async insertCopiedRecords(toInsert, recordReference) {\n        const me = this;\n\n        await me.startFeatureTransaction();\n\n        const result = await super.insertCopiedRecords(toInsert, recordReference);\n\n        toInsert.forEach(parent => parent.refreshWbs({ deep : true, useOrderedTree : true }));\n\n        me.client.dependencyStore.add(me.depsToCopy);\n\n        delete me.depsToCopy;\n\n        await me.finishFeatureTransaction();\n\n        return result;\n    }\n\n    /**\n     * Extract dependencies from passed records. The result will include only deps via records and not include deps\n     * with foreign records.\n     * @param {Core.data.Model[]} taskRecords array of records to extract dependencies from\n     * @param {Object} idMap Map linking original node id with its copy\n     * @returns {Object[]} array of dependencies settings via passed records to apply using applyDependencies method\n     * @private\n     */\n    extractDependencies(taskRecords, idMap) {\n        // This map is required to see which tasks are already connected\n        const depsMap = {};\n\n        return taskRecords.reduce((deps, task) => {\n            task.predecessors.forEach(predecessor => {\n                const key = predecessor.id;\n\n                if (!(key in depsMap) && taskRecords.includes(predecessor.fromEvent)) {\n                    depsMap[key] = true;\n\n                    deps.push(Object.assign({}, predecessor.data, {\n                        id        : undefined,\n                        to        : undefined,\n                        toEvent   : idMap[task.id].id,\n                        toTask    : undefined,\n                        from      : undefined,\n                        fromEvent : idMap[predecessor.fromEvent.id].id,\n                        fromTask  : undefined\n                    }));\n                }\n            });\n\n            task.successors.forEach(successor => {\n                const key = successor.id;\n\n                if (!(key in depsMap) && taskRecords.includes(successor.toEvent)) {\n                    depsMap[key] = true;\n\n                    deps.push(Object.assign({}, successor.data, {\n                        id        : undefined,\n                        to        : undefined,\n                        toEvent   : idMap[successor.toEvent.id].id,\n                        toTask    : undefined,\n                        from      : undefined,\n                        fromEvent : idMap[task.id].id,\n                        fromTask  : undefined\n                    }));\n                }\n            });\n\n            return deps;\n        }, []);\n    }\n}\n\nGridFeatureManager.registerFeature(TaskCopyPaste, true, 'Gantt');\n","import DragBase from '../../Scheduler/feature/base/DragBase.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\nimport ArrayHelper from '../../Core/helper/ArrayHelper.js';\nimport EventHelper from '../../Core/helper/EventHelper.js';\nimport TransactionalFeature from '../../Scheduler/feature/mixin/TransactionalFeature.js';\n\n/**\n * @module Gantt/feature/TaskDrag\n */\n\n/**\n * @typedef ValidationMessage\n * @property {Boolean} valid `true` for valid, `false` for invalid\n * @property {String} message Validation message\n */\n\n/**\n * Allows user to drag and drop tasks within Gantt, to change their start date.\n *\n * ## Constraining the drag drop area\n *\n * You can constrain how the dragged task is allowed to move by using {@link Gantt.view.Gantt#config-getDateConstraints}.\n * This method is configured on the Gantt instance and lets you define the date range for the dragged task programmatically.\n *\n * ## Drag drop tasks from outside\n *\n * Dragging unplanned tasks from an external grid is a very popular use case. Please refer to the [Drag from grid demo](../examples/drag-from-grid)\n * and study the [Drag from grid guide](#Gantt/guides/dragdrop/drag_tasks_from_grid.md) to learn more.\n *\n * ## Validating a drag drop operation\n *\n * It is easy to programmatically decide what is a valid drag drop operation. Use the {@link #config-validatorFn}\n * and return either `true` / `false` (optionally a message to show to the user).\n *\n * ```javascript\n * features : {\n *     taskDrag : {\n *        validatorFn(draggedTaskRecords, newStartDate) {\n *            const valid = Date.now() >= newStartDate;\n *\n *            return {\n *                valid,\n *                message : valid ? '' : 'Not allow to drag a task into the past'\n *            };\n *        }\n *     }\n * }\n * ```\n *\n * If you instead want to do a single validation upon drop, you can listen to {@link #event-beforeTaskDropFinalize}\n * and set the `valid` flag on the context object provided.\n *\n * ```javascript\n * const gantt = new Gantt({\n *     listeners : {\n *         beforeTaskDropFinalize({ context }) {\n *             const { taskRecords } = context;\n *             // Don't allow dropping a task in the past\n *             context.valid = Date.now() <= eventRecords[0].startDate;\n *         }\n *     }\n * });\n * ```\n *\n * ## Preventing drag of certain tasks\n *\n * To prevent certain tasks from being dragged, you have two options. You can set {@link Gantt.model.TaskModel#field-draggable}\n * to `false` in your data, or you can listen for the {@link Gantt.view.Gantt#event-beforeTaskDrag} event and\n * return `false` to block the drag.\n *\n * ```javascript\n * new Gantt({\n *     listeners : {\n *         beforeTaskDrag({ taskRecord }) {\n *             // Only allow dragging tasks that has not started\n *             return taskRecord.percentDone === 0;\n *         }\n *     }\n * })\n * ```\n *\n * ## Customizing the drag drop tooltip\n *\n * To show custom HTML in the tooltip, please see the {@link #config-tooltipTemplate} config. Example:\n *\n * ```javascript\n * features: {\n *     taskDrag: {\n *         // A minimal start date tooltip\n *         tooltipTemplate : ({ taskRecord, startDate }) => {\n *             return DateHelper.format(startDate, 'HH:mm');\n *         }\n *     }\n * }\n * ```\n *\n * This feature is **enabled** by default\n *\n * @extends Scheduler/feature/base/DragBase\n * @demo Gantt/basic\n * @classtype taskDrag\n * @feature\n */\nexport default class TaskDrag extends TransactionalFeature(DragBase) {\n    //region Config\n\n    static get $name() {\n        return 'TaskDrag';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * An empty function by default, but provided so that you can perform custom validation on\n             * the item being dragged. This function is called during the drag and drop process and also after the drop is made.\n             * Return true if the new position is valid, false to prevent the drag.\n             * @param {Gantt.model.TaskModel[]} taskRecords An array of tasks being dragged\n             * @param {Date} startDate The new start date\n             * @param {Number} duration The duration of the item being dragged\n             * @param {Event} event The event object\n             * @returns {Boolean|ValidationMessage} `true` if this validation passes, `false` if it does not.\n             *\n             * Or an object with 2 properties: `valid` -  Boolean `true`/`false` depending on validity,\n             * and `message` - String with a custom error message to display when invalid.\n             * @config {Function}\n             */\n            validatorFn : (taskRecords, startDate, duration, event) => true,\n\n            /**\n             * `this` reference for the validatorFn\n             * @config {Object}\n             */\n            validatorFnThisObj : null,\n\n            /**\n             * Gets or sets special key to activate successor pinning behavior. Supported values are:\n             * * 'ctrl'\n             * * 'shift'\n             * * 'alt'\n             * * 'meta'\n             *\n             * Assign false to disable it.\n             * @member {Boolean|String} pinSuccessors\n             */\n            /**\n             * Set to true to enable dragging task while pinning dependent tasks. By default, this behavior is activated\n             * if you hold CTRL key during drag. Alternatively, you may provide key name to use. Supported values are:\n             * * 'ctrl'\n             * * 'shift'\n             * * 'alt'\n             * * 'meta'\n             *\n             * **Note**: Only supported in forward-scheduled project\n             *\n             * @config {Boolean|String}\n             * @default\n             */\n            pinSuccessors : false,\n\n            tooltipCls : 'b-gantt-taskdrag-tooltip',\n\n            capitalizedEventName : null\n        };\n    }\n\n    afterConstruct() {\n        this.capitalizedEventName = this.capitalizedEventName || this.client.capitalizedEventName;\n        super.afterConstruct(...arguments);\n    }\n\n    changePinSuccessors(value) {\n        return EventHelper.toSpecialKey(value);\n    }\n\n    /**\n     * Template used to generate drag tooltip contents.\n     * ```javascript\n     * const gantt = new Gantt({\n     *     features : {\n     *         taskDrag : {\n     *             tooltipTemplate({taskRecord, startText}) {\n     *                 return `${taskRecord.name}: ${startText}`\n     *             }\n     *         }\n     *     }\n     * });\n     * ```\n     * @config {Function} tooltipTemplate\n     * @param {Object} data Tooltip data\n     * @param {Gantt.model.TaskModel} data.taskRecord\n     * @param {Boolean} data.valid Currently over a valid drop target or not\n     * @param {Date} data.startDate New start date\n     * @param {Date} data.endDate New end date\n     * @returns {String}\n     */\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fires on the owning Gantt before task dragging starts. Return false to prevent the action.\n     * @event beforeTaskDrag\n     * @preventable\n     * @on-owner\n     * @param {Gantt.view.Gantt} source\n     * @param {Gantt.model.TaskModel} taskRecord\n     * @param {Event} event The native browser event\n     */\n\n    /**\n     * Fires on the owning Gantt when task dragging starts\n     * @event taskDragStart\n     * @on-owner\n     * @param {Gantt.view.Gantt} source\n     * @param {Gantt.model.TaskModel[]} taskRecords\n     */\n\n    /**\n     * Fires on the owning Gantt while a task is being dragged\n     * @event taskDrag\n     * @on-owner\n     * @param {Gantt.view.Gantt} source\n     * @param {Gantt.model.TaskModel[]} taskRecords\n     * @param {Date} startDate\n     * @param {Date} endDate\n     * @param {Object} dragData\n     * @param {Boolean} changed `true` if startDate has changed.\n     */\n\n    /**\n     * Fires on the owning Gantt to allow implementer to prevent immediate finalization by setting `data.context.async = true`\n     * in the listener, to show a confirmation popup etc\n     * ```javascript\n     * scheduler.on('beforetaskdropfinalize', ({ context }) => {\n     *     context.async = true;\n     *     setTimeout(() => {\n     *         // async code don't forget to call finalize\n     *         context.finalize();\n     *     }, 1000);\n     * })\n     * ```\n     * @event beforeTaskDropFinalize\n     * @on-owner\n     * @param {Gantt.view.Gantt} source Gantt instance\n     * @param {Object} context\n     * @param {Gantt.model.TaskModel[]} context.taskRecords The dragged task records\n     * @param {Boolean} context.valid Set this to `false` to mark the drop as invalid\n     * @param {Boolean} context.async Set true to handle dragdrop asynchronously (e.g. to wait for user\n     * confirmation)\n     * @param {Function} context.finalize Call this method to finalize dragdrop. This method accepts one\n     * argument: pass true to update records, or false, to ignore changes\n     */\n\n    /**\n     * Fires on the owning Gantt after a valid task drop\n     * @event taskDrop\n     * @on-owner\n     * @param {Gantt.view.Gantt} source\n     * @param {Gantt.model.TaskModel[]} taskRecords\n     * @param {Boolean} isCopy\n     */\n\n    /**\n     * Fires on the owning Gantt after a task drop, regardless if the drop validity\n     * @event afterTaskDrop\n     * @on-owner\n     * @param {Gantt.view.Gantt} source\n     * @param {Gantt.model.TaskModel[]} taskRecords\n     * @param {Boolean} valid\n     */\n\n    //endregion\n\n    //region Init\n\n    construct(gantt, config) {\n        this.gantt = gantt;\n\n        super.construct(gantt, config);\n    }\n\n    get store() {\n        return this.gantt.store;\n    }\n\n    //endregion\n\n    //region Drag events\n\n    getDraggableElement(el) {\n        return el?.closest(this.drag.targetSelector);\n    }\n\n    resolveEventRecord(eventElement, client = this.client) {\n        return client.resolveTaskRecord(eventElement);\n    }\n\n    isElementDraggable(el, event) {\n        const\n            me           = this,\n            { client }   = me,\n            eventElement = me.getDraggableElement(el);\n\n        if (!eventElement || me.disabled || client.readOnly) {\n            return false;\n        }\n\n        // displaying something resizable within the event?\n        // if (el.closest(gantt.eventSelector).matches('[class$=\"-handle\"]')) {\n        if (el.matches('[class$=\"-handle\"]')) {\n            return false;\n        }\n\n        const eventRecord = me.resolveEventRecord(eventElement, client);\n\n        // Tasks not part of project are transient tasks in a display store, which are not meant to be manipulated\n        if (!eventRecord || !eventRecord.isDraggable || eventRecord.readOnly || !eventRecord.project) {\n            return false;\n        }\n\n        // Hook for features that need to prevent drag\n        const prevented = client[`is${me.capitalizedEventName}ElementDraggable`]?.(\n            eventElement, eventRecord, el, event\n        ) === false;\n\n        return !prevented;\n    }\n\n    triggerBeforeEventDrag(eventType, event) {\n        return this.client.trigger(eventType, event);\n    }\n\n    triggerEventDrag(dragData, start) {\n        // Trigger the event on every mousemove so that features which need to adjust\n        // Such as dependencies and baselines can keep adjusted.\n        this.client.trigger('taskDrag', {\n            taskRecords : dragData.draggedEntities,\n            startDate   : dragData.startDate,\n            endDate     : dragData.endDate,\n            dragData,\n            changed     : dragData.startDate - start !== 0\n        });\n    }\n\n    triggerDragStart(dragData) {\n        this.client.trigger('taskDragStart', {\n            taskRecords : dragData.draggedEntities,\n            dragData\n        });\n        return this.startFeatureTransaction();\n    }\n\n    triggerDragAbort(dragData) {\n        this.client.trigger('taskDragAbort', {\n            taskRecords : dragData.draggedEntities,\n            context     : dragData\n        });\n    }\n\n    triggerDragAbortFinalized(dragData) {\n        this.rejectFeatureTransaction();\n        this.client.trigger('taskDragAbortFinalized', {\n            taskRecords : dragData.draggedEntities,\n            context     : dragData\n        });\n    }\n\n    triggerAfterDrop(dragData, valid) {\n        this.finishFeatureTransaction();\n        this.currentOverClient.trigger('afterTaskDrop', {\n            taskRecords : dragData.draggedEntities,\n            context     : dragData,\n            valid\n        });\n    }\n\n    //endregion\n\n    //region Drag data\n\n    getProductDragContext(dd) {\n        return {\n            valid : true\n        };\n    }\n\n    getMinimalDragData(info) {\n        const\n            element    = this.getElementFromContext(info),\n            taskRecord = this.client.resolveTaskRecord(element);\n\n        return { taskRecord };\n    }\n\n    getTaskScheduleRegion(taskRecord, dateConstraints) {\n        return this.client.getScheduleRegion(taskRecord, true, dateConstraints);\n    }\n\n    getDateConstraints(taskRecord) {\n        return this.client.getDateConstraints?.(taskRecord);\n    }\n\n    setupProductDragData(context) {\n        // debugger\n        const\n            me              = this,\n            { client }      = me,\n            element         = context.element,\n            taskRecord      = client.resolveTaskRecord(element),\n            taskRegion      = Rectangle.from(element),\n            relatedRecords  = me.getRelatedRecords(taskRecord) || [],\n            dateConstraints = me.getDateConstraints(taskRecord),\n            eventBarEls     = [element],\n            scheduleRegion  = me.getTaskScheduleRegion(taskRecord, dateConstraints);\n\n        me.setupConstraints(\n            scheduleRegion,\n            taskRegion,\n            client.timeAxisViewModel.snapPixelAmount,\n            Boolean(dateConstraints)\n        );\n\n        // Collecting additional elements to drag\n        relatedRecords.forEach(r => {\n            ArrayHelper.include(eventBarEls, client.getElementFromTaskRecord(r, false));\n        });\n\n        const draggedEntities = [taskRecord, ...relatedRecords];\n\n        return { record : taskRecord, dateConstraints, eventBarEls, draggedEntities, taskRecords : draggedEntities };\n    }\n\n    /**\n     * Get correct axis coordinate.\n     * @private\n     * @param {Gantt.model.TaskModel} taskRecord Record being dragged\n     * @param {HTMLElement} element Element being dragged\n     * @param {Number[]} coord XY coordinates\n     * @returns {Number|Number[]} X,Y or XY\n     */\n    getCoordinate(taskRecord, element, coord) {\n        return coord[0];\n    }\n\n    //endregion\n\n    //region Finalize & validation\n\n    // Called from EventDragBase to assert if a drag is valid or not\n    checkDragValidity(dragData, event) {\n        return this.validatorFn.call(this.validatorFnThisObj || this,\n            dragData.draggedEntities,\n            dragData.startDate,\n            dragData.duration,\n            event\n        );\n    }\n\n    /**\n     * Checks if a task can be dropped on the specified location\n     * @private\n     * @returns {Boolean} Valid (true) or invalid (false)\n     */\n    isValidDrop(dragData) {\n        return true;\n    }\n\n    /**\n     * Update tasks being dragged.\n     * @private\n     * @param {Object} context Drag data.\n     */\n    async updateRecords(context) {\n        const\n            {\n                startDate,\n                browserEvent,\n                draggedEntities : [taskRecord]\n            }                = context,\n            oldStartDate     = taskRecord.startDate;\n\n        if (this.pinSuccessors && browserEvent[this.pinSuccessors]) {\n            await taskRecord.moveTaskPinningSuccessors(startDate);\n        }\n        else {\n            await taskRecord.setStartDate(startDate, true);\n        }\n\n        // If not rejected (the startDate has changed), tell the world there was a successful drop.\n        if (taskRecord.startDate - oldStartDate) {\n            this.client.trigger('taskDrop', {\n                taskRecords : context.draggedEntities\n            });\n        }\n        else {\n            this.dragData.valid = false;\n        }\n    }\n\n    getRecordElement(task) {\n        return this.client.getElementFromTaskRecord(task, true);\n    }\n\n    get tipId() {\n        return `${this.client.id}-task-drag-tip`;\n    }\n\n    //endregion\n}\n\nGridFeatureManager.registerFeature(TaskDrag, true, 'Gantt');\n","import DragCreateBase from '../../Scheduler/feature/base/DragCreateBase.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport Draggable from '../../Core/mixin/Draggable.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\n\n/**\n * @module Gantt/feature/TaskDragCreate\n */\n\n/**\n * A feature that allows the user to schedule tasks by dragging in the empty parts of the gantt timeline row. Note, this feature is only applicable for unscheduled tasks.\n * {@inlineexample Gantt/feature/TaskDragCreate.js}\n *\n * This feature is **enabled** by default\n *\n * @extends Scheduler/feature/base/DragCreateBase\n * @demo Gantt/advanced\n * @classtype taskDragCreate\n * @feature\n */\nexport default class TaskDragCreate extends DragCreateBase {\n    //region Config\n\n    static get $name() {\n        return 'TaskDragCreate';\n    }\n\n    static get configurable() {\n        return {\n            // used by gantt to only allow one task per row\n            preventMultiple : true\n        };\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fires on the owning Gantt after the task has been scheduled.\n     * @event dragCreateEnd\n     * @on-owner\n     * @param {Gantt.view.Gantt} source\n     * @param {Gantt.model.TaskModel} taskRecord\n     * @param {MouseEvent} event The ending mouseup event.\n     * @param {HTMLElement} proxyElement The proxy element showing the drag creation zone.\n     */\n\n    /**\n     * Fires on the owning Gantt at the beginning of the drag gesture\n     * @event beforeDragCreate\n     * @on-owner\n     * @param {Gantt.view.Gantt} source\n     * @param {Gantt.model.TaskModel} taskRecord\n     * @param {Date} date The datetime associated with the drag start point.\n     */\n\n    /**\n     * Fires on the owning Gantt after the drag start has created a proxy element.\n     * @event dragCreateStart\n     * @on-owner\n     * @param {Gantt.view.Gantt} source\n     * @param {HTMLElement} proxyElement The proxy representing the new event.\n     */\n\n    /**\n     * Fires on the owning Gantt to allow implementer to prevent immediate finalization by setting `data.context.async = true`\n     * in the listener, to show a confirmation popup etc\n     * ```\n     *  scheduler.on('beforedragcreatefinalize', ({context}) => {\n     *      context.async = true;\n     *      setTimeout(() => {\n     *          // async code don't forget to call finalize\n     *          context.finalize();\n     *      }, 1000);\n     *  })\n     * ```\n     * @event beforeDragCreateFinalize\n     * @on-owner\n     * @param {Gantt.view.Gantt} source Scheduler instance\n     * @param {HTMLElement} proxyElement Proxy element, representing future event\n     * @param {Object} context\n     * @param {Boolean} context.async Set true to handle drag create asynchronously (e.g. to wait for user\n     * confirmation)\n     * @param {Function} context.finalize Call this method to finalize drag create. This method accepts one\n     * argument: pass true to update records, or false, to ignore changes\n     */\n\n    /**\n     * Fires on the owning Gantt at the end of the drag create gesture whether or not\n     * a task was scheduled by the gesture.\n     * @event afterDragCreate\n     * @on-owner\n     * @param {Gantt.view.Gantt} source\n     * @param {HTMLElement} proxyElement The element showing the drag creation zone.\n     */\n\n    //endregion\n\n    //region Init\n\n    construct(gantt, config) {\n        this.gantt = gantt;\n\n        super.construct(gantt, config);\n    }\n\n    get store() {\n        return this.gantt.store;\n    }\n\n    //endregion\n\n    //region Gantt specific implementation\n\n    setupDragContext(event) {\n        const { client } = this;\n\n        // Only mousedown on an empty cell can initiate drag-create\n        if (event.target.closest?.(`.${client.timeAxisColumn.cellCls}`)) {\n            const taskRecord = client.getRecordFromElement(event.target);\n\n            // And there must be a task backing the cell.\n            if (taskRecord) {\n                // Skip the EventResize's setupDragContext. We want the base one.\n                const result = Draggable().prototype.setupDragContext.call(this, event);\n\n                result.scrollManager = client.scrollManager;\n                result.taskRecord = result.rowRecord = taskRecord;\n                return result;\n            }\n        }\n    }\n\n    startDrag(drag) {\n        // This flag must be set in startDrag\n        const\n            draggingEnd  = this.draggingEnd = drag.event.pageX > drag.startEvent.pageX,\n            { client }   = this,\n            { timeAxis } = client,\n            {\n                mousedownDate,\n                taskRecord,\n                date\n            }            = drag;\n\n        client.beginListeningForBatchedUpdates();\n        taskRecord.beginBatch();\n        taskRecord.set('startDate', DateHelper.floor(draggingEnd ? mousedownDate : date, timeAxis.resolution, undefined, client.weekStartDay));\n        taskRecord.set('endDate', DateHelper.ceil(draggingEnd ? date : mousedownDate, timeAxis.resolution, undefined, client.weekStartDay));\n\n        // This presents the task to be scheduled for validation at the proposed mouse/date point\n        // If rejected, we have to revert the batched changes\n        if (this.handleBeforeDragCreate(drag, taskRecord, drag.event) === false) {\n            this.onAborted(drag);\n            return false;\n        }\n\n        // Now it will have an element, and that's what we are dragging\n        drag.itemElement = drag.element = client.getElementFromTaskRecord(drag.taskRecord);\n\n        return super.startDrag.call(this, drag);\n    }\n\n    handleBeforeDragCreate(drag, taskRecord, event) {\n        const\n            me     = this,\n            result = me.gantt.trigger('beforeDragCreate', {\n                taskRecord,\n                date : drag.mousedownDate,\n                event\n            });\n\n        // Save date constraints\n        me.dateConstraints = me.gantt.getDateConstraints?.(taskRecord);\n\n        return result;\n    }\n\n    checkValidity(context, event) {\n        const me = this;\n\n        context.taskRecord = me.dragging.taskRecord;\n        return me.createValidatorFn.call(me.validatorFnThisObj || me, context, event);\n    }\n\n    // Row is not empty if task is scheduled\n    isRowEmpty(taskRecord) {\n        return !taskRecord.startDate || !taskRecord.endDate;\n    }\n\n    onAborted({ taskRecord }) {\n        taskRecord.cancelBatch();\n        this.client.endListeningForBatchedUpdates();\n    }\n\n    //endregion\n}\n\nGridFeatureManager.registerFeature(TaskDragCreate, true, 'Gantt');\n","import GanttTaskEditor from '../../SchedulerPro/widget/GanttTaskEditor.js';\n\n/**\n * @module Gantt/widget/TaskEditor\n */\n\n/**\n * Provides a UI to edit tasks in a popup dialog. It is implemented as a Tab Panel with several preconfigured built-in\n * tabs. Although the default configuration may be adequate in many cases, the Task Editor is easily configurable.\n *\n * This demo shows how to use TaskEditor as a standalone widget:\n *\n * {@inlineexample Gantt/widget/TaskEditor.js}\n *\n * To hide built-in tabs or to add custom tabs, or to append widgets to any of the built-in tabs\n * use the {@link Gantt.feature.TaskEdit#config-items items} config.\n *\n * The Task editor contains tabs by default. Each tab is a container with built in widgets: text fields, grids, etc.\n *\n * | Tab ref           | Text         | Weight | Description                                           |\n * |-------------------|--------------|--------|-------------------------------------------------------|\n * | `generalTab`      | General      | 100    | Name, start/end dates, duration, percent done, effort |\n * | `predecessorsTab` | Predecessors | 200    | Grid with incoming dependencies                       |\n * | `successorsTab`   | Successors   | 300    | Grid with outgoing dependencies                       |\n * | `resourcesTab`    | Resources    | 400    | Grid with assigned resources                          |\n * | `advancedTab`     | Advanced     | 500    | Assigned calendar, scheduling mode, constraints, etc  |\n * | `notesTab`        | Notes        | 600    | Text area to add notes to the selected task           |\n *\n * ## Task editor customization example\n *\n * This example shows a custom Task Editor configuration. The built-in \"Notes\" tab is hidden, a custom \"Files\" tab is\n * added, the \"General\" tab is renamed to \"Common\" and \"Custom\" field is appended to it. Double-click on a task bar to\n * start editing:\n *\n * {@inlineexample Gantt/feature/TaskEditCustom.js}\n *\n * @extends SchedulerPro/widget/GanttTaskEditor\n */\nexport default class TaskEditor extends GanttTaskEditor {\n    // Factoryable type name\n    static get type() {\n        return 'taskeditor';\n    }\n\n    static get $name() {\n        return 'TaskEditor';\n    }\n\n    static get defaultConfig() {\n        return {\n            cls : 'b-gantt-taskeditor b-schedulerpro-taskeditor'\n        };\n    }\n}\n\n// Register this widget type with its Factory\nTaskEditor.initClass();\n","import SchedulerProTaskEdit from '../../SchedulerPro/feature/TaskEdit.js';\nimport TaskEditor from '../widget/TaskEditor.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\n\n/**\n * @module Gantt/feature/TaskEdit\n */\n\n/**\n * Feature that allows editing tasks using a {@link Gantt/widget/TaskEditor}, a popup with fields for editing task data.\n *\n * This demo shows the task edit feature, double-click child task bar to start editing:\n *\n * {@inlineexample Gantt/feature/TaskEdit.js}\n *\n * ## Customizing tabs and their widgets\n *\n * To customize tabs you can:\n *\n * * Reconfigure built in tabs by providing override configs in the {@link #config-items} config.\n * * Remove existing tabs or add your own in the {@link #config-items} config.\n * * Advanced: Reconfigure the whole editor widget using {@link #config-editorConfig} or replace the whole editor\n *   using {@link #config-editorClass}.\n *\n * This example shows a custom Task Editor configuration. The built-in \"Notes\" tab is hidden, a custom \"Files\" tab is\n * added, the \"General\" tab is renamed to \"Common\" and \"Custom\" field is appended to it. Double-click on a task bar to\n * start editing:\n *\n * {@inlineexample Gantt/feature/TaskEditCustom.js}\n *\n * To add extra items to a tab you need to specify {@link Core/widget/Container#config-items} for the tab container.\n * This example shows custom widgets added to \"General\" tab:\n *\n * {@inlineexample Gantt/feature/TaskEditExtraItems.js}\n *\n * {@region Expand to see Default tabs and fields}\n *\n * The {@link Gantt/widget/TaskEditor Task editor} contains tabs by default. Each tab is a container with built in\n * widgets: text fields, grids, etc.\n *\n * | Tab ref           | Type                                                   | Text         | Weight | Description                                            |\n * |-------------------|--------------------------------------------------------|--------------|--------|--------------------------------------------------------|\n * | `generalTab`      | {@link SchedulerPro/widget/taskeditor/GeneralTab}      | General      | 100    | Name, start/end dates, duration, percent done, effort. |\n * | `predecessorsTab` | {@link SchedulerPro/widget/taskeditor/PredecessorsTab} | Predecessors | 200    | Grid with incoming dependencies                        |\n * | `successorsTab`   | {@link SchedulerPro/widget/taskeditor/SuccessorsTab}   | Successors   | 300    | Grid with outgoing dependencies                        |\n * | `resourcesTab`    | {@link SchedulerPro/widget/taskeditor/ResourcesTab}    | Resources    | 400    | Grid with assigned resources                           |\n * | `advancedTab`     | {@link SchedulerPro/widget/taskeditor/AdvancedTab}     | Advanced     | 500    | Assigned calendar, scheduling mode, constraints, etc.  |\n * | `notesTab`        | {@link SchedulerPro/widget/taskeditor/NotesTab}        | Notes        | 600    | Text area to add notes to the selected task            |\n *\n * ### General tab\n *\n * General tab contains widgets for basic configurations\n *\n * | Widget ref     | Type                                       | Text       | Weight | Description                                                |\n * |----------------|--------------------------------------------|------------|--------|------------------------------------------------------------|\n * | `name`         | {@link Core/widget/TextField}              | Name       | 100    | Task name                                                  |\n * | `percentDone`  | {@link Core/widget/NumberField}            | % Complete | 200    | Shows what part of task is done already in percentage      |\n * | `effort`       | {@link SchedulerPro/widget/EffortField}    | Effort     | 300    | Amount of working time required to complete the whole task |\n * | `divider`      | {@link Core/widget/Widget}                 |            | 400    | Visual splitter between 2 groups of fields                 |\n * | `startDate`    | {@link SchedulerPro/widget/StartDateField} | Start      | 500    | Shows when the task begins                                 |\n * | `endDate`      | {@link SchedulerPro/widget/EndDateField}   | Finish     | 600    | Shows when the task ends                                   |\n * | `duration`     | {@link Core/widget/DurationField}          | Duration   | 700    | Shows how long the task is                                 |\n * | `colorField` ¹ | {@link Scheduler.widget.EventColorField}   | Color ¹    | 800    | Choose background color for the task bar                   |\n *\n * **¹** Set the {@link Gantt.view.GanttBase#config-showTaskColorPickers} config to `true` to enable this field\n *\n * ### Predecessors tab\n *\n * Predecessors tab contains a grid with incoming dependencies and controls to remove/add dependencies\n *\n * | Widget ref | Type                        | Weight | Description                                                      |\n * |------------|-----------------------------|--------|------------------------------------------------------------------|\n * | `grid`     | {@link Grid/view/Grid}      | 100    | Predecessors task name, dependency type and lag                  |\n * | `toolbar`  | {@link Core/widget/Toolbar} | 200    | Control buttons                                                  |\n * | \\>`add`    | {@link Core/widget/Button}  | 210    | Adds a new predecessor, select task using the name column editor |\n * | \\>`remove` | {@link Core/widget/Button}  | 220    | Removes selected incoming dependency                             |\n *\n * \\> - nested items\n *\n * ### Successors tab\n *\n * Successors tab contains a grid with outgoing dependencies and controls to remove/add dependencies\n *\n * | Widget ref | Type                        | Weight | Description                                                    |\n * |------------|-----------------------------|--------|----------------------------------------------------------------|\n * | `grid`     | {@link Grid/view/Grid}      | 100    | Successors task name, dependency type and lag                  |\n * | `toolbar`  | {@link Core/widget/Toolbar} | 200    | Control buttons                                                |\n * | \\>`add`    | {@link Core/widget/Button}  | 210    | Adds a new successor, select task using the name column editor |\n * | \\>`remove` | {@link Core/widget/Button}  | 220    | Removes selected outgoing dependency                           |\n *\n * \\> - nested items\n *\n * ### Resources tab\n *\n * Resources tab contains a grid with assignments\n *\n * | Widget ref | Type                        | Weight | Description                                                                                                            |\n * |------------|-----------------------------|--------|------------------------------------------------------------------------------------------------------------------------|\n * | `grid`     | {@link Grid/view/Grid}      | 100    | Assignments resource name and units (100 means that the assigned resource spends 100% of its working time to the task) |\n * | `toolbar`  | {@link Core/widget/Toolbar} | 200    | Shows control buttons                                                                                                  |\n * | \\>`add`    | {@link Core/widget/Button}  | 210    | Adds a dummy assignment, select resource using the name column editor                                                  |\n * | \\>`remove` | {@link Core/widget/Button}  | 220    | Removes selected assignment                                                                                            |\n *\n * \\> - nested items\n *\n * ### Advanced tab\n *\n * Advanced tab contains additional task scheduling options\n *\n * | Widget ref                    | Type                                             | Weight | Description                                                                                                                  |\n * |-------------------------------|--------------------------------------------------|--------|------------------------------------------------------------------------------------------------------------------------------|\n * | `calendarField`               | {@link Core/widget/Combo}                        | 100    | Shows a list of available calendars for this task                                                                            |\n * | `manuallyScheduledField`      | {@link Core/widget/Checkbox}                     | 200    | If checked, the task is not considered in scheduling                                                                         |\n * | `schedulingModeField`         | {@link SchedulerPro/widget/SchedulingModePicker} | 300    | Shows a list of available scheduling modes for this task                                                                     |\n * | `effortDrivenField`           | {@link Core/widget/Checkbox}                     | 400    | If checked, the effort of the task is kept intact, and the duration is updated. Works when scheduling mode is \"Fixed Units\". |\n * | `divider`                     | {@link Core/widget/Widget}                       | 500    | Visual splitter between 2 groups of fields                                                                                   |\n * | `constraintTypeField`         | {@link SchedulerPro/widget/ConstraintTypePicker} | 600    | Shows a list of available constraints for this task                                                                          |\n * | `constraintDateField`         | {@link Core/widget/DateField}                    | 700    | Shows a date for the selected constraint type                                                                                |\n * | `rollupField`                 | {@link Core/widget/Checkbox}                     | 800    | If checked, shows a bar below the parent task. Works when the \"Rollup\" feature is enabled.                                   |\n * | `inactiveField`               | {@link Core/widget/Checkbox}                     | 900    | Allows to inactivate the task so it won't take part in the scheduling process.                                               |\n * | `ignoreResourceCalendarField` | {@link Core/widget/Checkbox}                     | 1000   | If checked the task ignores the assigned resource calendars when scheduling                                                  |\n *\n * ### Notes tab\n *\n * Notes tab contains a text area to show notes\n *\n * | Field ref   | Type                              | Weight | Description                                     |\n * |-------------|-----------------------------------|--------|-------------------------------------------------|\n * | `noteField` | {@link Core/widget/TextAreaField} | 100    | Shows a text area to add text notes to the task |\n *\n * {@endregion}\n *\n * ## Removing a built in item\n *\n * To remove a built in tab or widget, specify its `ref` as `false` in the {@link #config-items} config:\n *\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         taskEdit : {\n *             items : {\n *                 generalTab      : {\n *                     items : {\n *                         // Remove \"% Complete\",\"Effort\", and the divider in the \"General\" tab\n *                         percentDone : false,\n *                         effort      : false,\n *                         divider     : false\n *                     }\n *                 },\n *                 // Remove all tabs except the \"General\" tab\n *                 notesTab        : false,\n *                 predecessorsTab : false,\n *                 successorsTab   : false,\n *                 resourcesTab    : false,\n *                 advancedTab     : false\n *             }\n *         }\n *     }\n * })\n * ```\n *\n * The built in buttons are:\n *\n * | Widget ref     | Type                       | Weight | Description                             |\n * |----------------|----------------------------|--------|-----------------------------------------|\n * | `saveButton`   | {@link Core/widget/Button} | 100    | Save event button on the bbar           |\n * | `deleteButton` | {@link Core/widget/Button} | 200    | Delete event button on the bbar         |\n * | `cancelButton` | {@link Core/widget/Button} | 300    | Cancel event editing button on the bbar |\n *\n * Bottom buttons may be hidden using `bbar` config passed to `editorConfig`:\n *\n* ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         taskEdit : {\n *             editorConfig : {\n *                 bbar : {\n *                     items : {\n *                         deleteButton : false\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * })\n * ```\n *\n * ## Customizing a built in item\n *\n * To customize a built in tab or field, use its `ref` as the key in the {@link #config-items} config and specify the configs you want\n * to change (they will be merged with the tabs or fields default configs correspondingly):\n *\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         taskEdit : {\n *             items : {\n *                 generalTab      : {\n *                     // Rename \"General\" tab\n *                     title : 'Main',\n *                     items : {\n *                         // Rename \"% Complete\" field\n *                         percentDone : {\n *                             label : 'Status'\n *                         }\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * })\n * ```\n *\n * ## Adding a custom item\n *\n * To add a custom tab or field, add an entry to the {@link #config-items} config. When you add a field,\n * the `name` property links the input field to a field in the loaded task record:\n *\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         taskEdit : {\n *             items : {\n *                 generalTab : {\n *                     items : {\n *                         // Add new field to the last position\n *                         newGeneralField : {\n *                             type   : 'textfield',\n *                             weight : 710,\n *                             label  : 'New field in General Tab',\n *                             // Name of the field matches data field name, so value is loaded/saved automatically\n *                             name   : 'custom'\n *                         }\n *                     }\n *                 },\n *                 // Add a custom tab to the first position\n *                 newTab     : {\n *                     // Tab is a FormTab by default\n *                     title  : 'New tab',\n *                     weight : 90,\n *                     items  : {\n *                         newTabField : {\n *                             type   : 'textfield',\n *                             weight : 710,\n *                             label  : 'New field in New Tab',\n *                             // Name of the field matches data field name, so value is loaded/saved automatically.\n *                             // In this case it is equal to the Task \"name\" field.\n *                             name   : 'name'\n *                         }\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * })\n * ```\n *\n * To turn off the Task Editor just simple disable the feature.\n *\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         taskEdit : false\n *     }\n * })\n * ```\n *\n * For more info on customizing the Task Editor, please see Guides/Customization/Customize task editor\n *\n * @extends SchedulerPro/feature/TaskEdit\n * @demo Gantt/taskeditor\n * @classtype taskEdit\n * @feature\n *\n * @typings SchedulerPro.feature.TaskEdit -> SchedulerPro.feature.SchedulerProTaskEdit\n */\nexport default class TaskEdit extends SchedulerProTaskEdit {\n\n    static get $name() {\n        return 'TaskEdit';\n    }\n\n    static configurable = {\n        /**\n         * The event that shall trigger showing the editor. Set to `` or null to disable editing of existing events.\n         * @config {String|null}\n         * @default\n         * @category Editor\n         */\n        triggerEvent : 'taskdblclick',\n\n        saveAndCloseOnEnter : true,\n\n        /**\n         * Class to use as the editor. By default it uses {@link Gantt.widget.TaskEditor}\n         * @config {Core.widget.Widget}\n         * @typings {typeof Widget}\n         * @category Editor\n         */\n        editorClass : TaskEditor\n    };\n\n    static get pluginConfig() {\n        return {\n            chain  : ['populateTaskMenu', 'onTaskEnterKey'],\n            assign : ['editTask']\n        };\n    }\n\n    /**\n     * Shows a {@link Gantt/widget/TaskEditor} to edit the passed task. This function is exposed on\n     * the Gantt instance and can be called as `gantt.editTask()`.\n     * @param {Gantt.model.TaskModel} taskRecord Task to edit\n     * @param {HTMLElement} [element] The task element\n     * @returns {Promise} Promise which resolves after the editor is shown\n     * @on-owner\n     * @async\n     */\n    editTask(taskRecord, element) {\n        return this.editEvent(taskRecord, null, element);\n    }\n\n    onActivateEditor({ taskRecord, taskElement }) {\n        this.editTask(taskRecord, taskElement);\n    }\n\n    getElementFromTaskRecord(taskRecord) {\n        return this.client.getElementFromTaskRecord(taskRecord);\n    }\n\n    onTaskEnterKey({ taskRecord }) {\n        this.editTask(taskRecord);\n    }\n\n    //region Context menu\n\n    populateTaskMenu({ taskRecord, selection, items }) {\n        // Task without project is transient record in a display store and not meant to be manipulated\n        if (!this.client.readOnly && selection.length <= 1 && taskRecord.project) {\n            items.editTask = {\n                text        : 'L{Gantt.Edit}',\n                localeClass : this.client,\n                cls         : 'b-separator',\n                icon        : 'b-icon b-icon-edit',\n                weight      : 100,\n                disabled    : this.disabled || taskRecord.readOnly,\n                onItem      : () => this.editTask(taskRecord)\n            };\n        }\n    }\n\n    //endregion\n\n    onEventEnterKey({ taskRecord, target }) {\n        this.editTask(taskRecord);\n    }\n\n    scrollTaskIntoView(taskRecord) {\n        return this.scrollEventIntoView(taskRecord);\n    }\n\n    scrollEventIntoView(eventRecord) {\n        return this.client.scrollTaskIntoView(eventRecord);\n    }\n}\n\nGridFeatureManager.registerFeature(TaskEdit, true, 'Gantt');\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport EventMenu from '../../Scheduler/feature/EventMenu.js';\nimport Objects from '../../Core/helper/util/Objects.js';\n\n/**\n * @module Gantt/feature/TaskMenu\n */\n\n/**\n * Displays a context menu for tasks. Items are populated by other features and/or application code.\n * Configure it with `false` to disable it completely. If enabled, {@link Grid.feature.CellMenu} feature\n * is not available. Cell context menu items are handled by this feature.\n *\n * ## Default task menu items\n *\n * Here is the list of menu items provided by the Task menu feature and populated by the other features:\n *\n * | Reference             | Text                 | Weight | Feature                                                                        | Description                                                                      |\n * |-----------------------|----------------------|--------|--------------------------------------------|----------------------------------------------------------------------------------|\n * | `editTask`            | Edit task            | 100    | {@link Gantt.feature.TaskEdit}             | Edit the task                                                                    |\n * | `cut`                 | Cut task             | 110    | {@link Gantt.feature.TaskCopyPaste}        | Cut the task                                                                     |\n * | `copy`                | Copy task            | 120    | {@link Gantt.feature.TaskCopyPaste}        | Copy the task                                                                    |\n * | `paste`               | Paste task           | 130    | {@link Gantt.feature.TaskCopyPaste}        | Paste the task                                                                   |\n * | `search`*             | Search for value     | 200    | {@link Grid.feature.Search}                | Search for cell text                                                             |\n * | `filterDateEquals`*   | On                   | 300    | {@link Grid.feature.Filter}                | Filter by columns field, equal to cell value                                     |\n * | `filterDateBefore`*   | Before               | 310    | {@link Grid.feature.Filter}                | Filter by columns field, less than cell value                                    |\n * | `filterDateAfter`*    | After                | 320    | {@link Grid.feature.Filter}                | Filter by columns field, more than cell value                                    |\n * | `filterNumberEquals`* | Equals               | 300    | {@link Grid.feature.Filter}                | Filter by columns field, equal to cell value                                     |\n * | `filterNumberLess`*   | Less than            | 310    | {@link Grid.feature.Filter}                | Filter by columns field, less than cell value                                    |\n * | `filterNumberMore`*   | More than            | 320    | {@link Grid.feature.Filter}                | Filter by columns field, more than cell value                                    |\n * | `filterStringEquals`* | Equals               | 300    | {@link Grid.feature.Filter}                | Filter by columns field, equal to cell value                                     |\n * | `filterRemove`*       | Remove filter        | 400    | {@link Grid.feature.Filter}                | Stop filtering by selected column field                                          |\n * | `add`                 | Add...               | 500    | *This feature*                             | Submenu for adding tasks                                                         |\n * | \\>`addTaskAbove`      | Task above           | 510    | *This feature*                             | Add a new task above the selected task                                           |\n * | \\>`addTaskBelow`      | Task below           | 520    | *This feature*                             | Add a new task below the selected task                                           |\n * | \\>`milestone`         | Milestone            | 530    | *This feature*                             | Add a new milestone below the selected task                                      |\n * | \\>`subtask`           | Subtask              | 540    | *This feature*                             | Add a new task as a child of the current, turning it into a parent               |\n * | \\>`successor`         | Successor            | 550    | *This feature*                             | Add a new task below current task, linked using an \"Finish-to-Start\" dependency  |\n * | \\>`predecessor`       | Predecessor          | 560    | *This feature*                             | Add a new task above current task, linked using an \"Finish-to-Start\" dependency  |\n * | `convertToMilestone`  | Convert to milestone | 600    | *This feature*                             | Turns the selected task into a milestone. Shown for leaf tasks only              |\n * | `splitTask`           | Split task           | 650    | {@link SchedulerPro.feature.EventSegments} | Split the task                                                                   |\n * | `indent`              | Indent               | 700    | *This feature*                             | Add the task as a child of its previous sibling, turning that task into a parent |\n * | `outdent`             | Outdent              | 800    | *This feature*                             | Turn the task into a sibling of its parent                                       |\n * | `deleteTask`          | Delete task          | 900    | *This feature*                             | Remove the selected task                                                         |\n * | `linkTasks`           | Add dependencies     | 1000   | *This feature*                             | Add dependencies between two or more selected tasks                              |\n * | `unlinkTasks`         | Remove dependencies  | 1010   | *This feature*                             | Removes dependencies between selected tasks                                      |\n * | `taskColor` ¹         | Color                | 1100   | *This feature*                             | Choose background color for the task bar                                         |\n *\n * **¹** Set {@link Gantt.view.GanttBase#config-showTaskColorPickers} to true to enable this item\n *\n * \\* - items that are shown for the locked grid cells only\n *\n * \\> - first level of submenu\n *\n * ## Customizing the menu items\n *\n * The menu items in the Task menu can be customized, existing items can be changed or removed,\n * and new items can be added. This is handled using the `items` config of the feature.\n *\n * To add extra items for all events:\n *\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         taskMenu : {\n *             // Extra items for all events\n *             items : {\n *                 flagTask : {\n *                     text : 'Extra',\n *                     icon : 'b-fa b-fa-fw b-fa-flag',\n *                     onItem({taskRecord}) {\n *                         taskRecord.flagged = true;\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * ## Remove menu/submenu items\n *\n * Items can be removed from the menu:\n *\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         taskMenu : {\n *             items : {\n *                 // Hide delete task option\n *                 deleteTask: false,\n *\n *                 // Hide item from the `add` submenu\n *                 add: {\n *                     menu: {\n *                          subtask: false\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * ## Manipulate items for specific tasks\n *\n * Items can behave different depending on the type of the task:\n *\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         taskMenu : {\n *             // Process items before menu is shown\n *             processItems({ items, taskRecord }) {\n *                  // Push an extra item for conferences\n *                  if (taskRecord.type === 'conference') {\n *                      items.showSessions = {\n *                          text : 'Show sessions',\n *                          ontItem({taskRecord}) {\n *                              // ...\n *                          }\n *                      };\n *                  }\n *\n *                  // Do not show menu for secret events\n *                  if (taskRecord.type === 'secret') {\n *                      return false;\n *                  }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Full information of the menu customization can be found in the \"Customizing the Task menu\" guide.\n *\n * This feature is **enabled** by default\n *\n * @extends Scheduler/feature/EventMenu\n * @demo Gantt/taskmenu\n * @classtype taskMenu\n * @feature\n *\n * @inlineexample Gantt/feature/TaskMenu.js\n */\nexport default class TaskMenu extends EventMenu {\n    //region Config\n\n    static get $name() {\n        return 'TaskMenu';\n    }\n\n    static get defaultConfig() {\n        return {\n            type : 'task',\n\n            /**\n             * A function called before displaying the menu that allows manipulations of its items.\n             * Returning `false` from this function prevents the menu being shown.\n             *\n             * ```javascript\n             * features         : {\n             *    taskMenu : {\n             *         processItems({ items, taskRecord }) {\n             *             // Add or hide existing items here as needed\n             *             items.myAction = {\n             *                 text   : 'Cool action',\n             *                 icon   : 'b-fa b-fa-fw b-fa-ban',\n             *                 onItem : () => console.log(`Clicked ${eventRecord.name}`),\n             *                 weight : 1000 // Move to end\n             *             };\n             *\n             *            if (!eventRecord.allowDelete) {\n             *                 items.deleteEvent.hidden = true;\n             *             }\n             *         }\n             *     }\n             * },\n             * ```\n             * @param {Object} context An object with information about the menu being shown\n             * @param {Gantt.model.TaskModel} context.taskRecord The record representing the current task\n             * @param {Grid.column.Column} context.column The current column\n             * @param {Object<String,MenuItemConfig>} context.items An object containing the {@link Core.widget.MenuItem menu item} configs keyed by their id\n             * @param {Event} context.event The DOM event object that triggered the show\n             * @config {Function}\n             * @preventable\n             */\n            processItems : null\n\n            /**\n             * This is a preconfigured set of items used to create the default context menu.\n             *\n             * ```javascript\n             * const gantt = new Gantt({\n             *     features : {\n             *         taskMenu : {\n             *             items : {\n             *                 add                 : false,\n             *                 convertToMilestone  : false\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             * The `items` provided by this feature are listed below. These are the property names which you may\n             * configure:\n             *\n             * - `add` A submenu option containing a `menu` config which contains the following named items:\n             *     * `addTaskAbove` Inserts a sibling task above the context task.\n             *     * `addTaskBelow` Inserts a sibling task below the context task.\n             *     * `milestone` Inserts a sibling milestone below the context task.\n             *     * `subtask` Appends a child task to the context task. This menu supports an \"at\" property that\n             *       can be set to 'end' to append new tasks to the end of the parent task's children. By default,\n             *       (at = 'start'), new subtasks are inserted as the firstChild of the parent task.\n             *     * `successor` Adds a sibling task linked by a dependence below the context task.\n             *     * `predecessor` Adds a sibling task linked by a dependence above the context task.\n             *  - `deleteTask` Deletes the context task.\n             *  - `indent` Indents the context task by adding it as a child of its previous sibling.\n             *  - `outdent` Outdents the context task by adding it as the final sibling of its parent.\n             *  - `convertToMilestone` Converts the context task to a zero duration milestone.\n             *\n             * See the feature config in the above example for details.\n             *\n             * @config {Object<String,MenuItemConfig|Boolean|null>} items\n             */\n        };\n    }\n\n    static get pluginConfig() {\n        const config = super.pluginConfig;\n\n        config.chain.push('populateTaskMenu');\n\n        return config;\n    }\n\n    //endregion\n\n    construct(gantt, config = {}) {\n        super.construct(...arguments);\n\n        this.gantt = gantt;\n\n        if (gantt.features.cellMenu) {\n            console.warn('`CellMenu` feature is ignored, when `TaskMenu` feature is enabled. If you need cell specific menu items, please configure `TaskMenu` feature items instead.');\n            gantt.features.cellMenu.disabled = true;\n        }\n    }\n\n    //region Events\n\n    /**\n     * This event fires on the owning Gantt before the context menu is shown for a task. Allows manipulation of the items\n     * to show in the same way as in `processItems`. Returning false from a listener prevents the menu from\n     * being shown.\n     * @event taskMenuBeforeShow\n     * @on-owner\n     * @preventable\n     * @param {Gantt.view.Gantt} source\n     * @param {MenuItemConfig[]} items Menu item configs\n     * @param {Gantt.model.TaskModel} taskRecord Event record for which the menu was triggered\n     * @param {HTMLElement} taskElement\n     */\n\n    /**\n     * This event fires on the owning Gantt when an item is selected in the context menu.\n     * @event taskMenuItem\n     * @on-owner\n     * @param {Gantt.view.Gantt} source\n     * @param {Core.widget.MenuItem} item\n     * @param {Gantt.model.TaskModel} taskRecord\n     * @param {HTMLElement} taskElement\n     */\n\n    /**\n     * This event fires on the owning Gantt after showing the context menu for an event\n     * @event taskMenuShow\n     * @on-owner\n     * @param {Gantt.view.Gantt} source\n     * @param {Core.widget.Menu} menu The menu\n     * @param {Gantt.model.TaskModel} taskRecord Event record for which the menu was triggered\n     * @param {HTMLElement} taskElement\n     */\n\n    //endregion\n\n    getDataFromEvent(event) {\n        const\n            { client }    = this,\n            targetElement = this.getTargetElementFromEvent(event),\n            // to resolve record from a task element or from a grid cell\n            taskRecord    = client.resolveTaskRecord(targetElement) || client.getRecordFromElement(targetElement),\n            taskElement   = taskRecord && client.getElementFromTaskRecord(taskRecord, false); // get wrapper;\n\n        return Objects.assign({\n            event,\n            targetElement,\n            taskElement,\n            taskRecord\n        }, client.getCellDataFromEvent(event));\n    }\n\n    callChainablePopulateMenuMethod(eventParams) {\n        // When context menu is called for a task cell, need to collect items from features\n        // which usually add items to CellMenu in Grid and Scheduler,\n        // since CellMenu feature is disabled when TaskMenu feature is enabled.\n        if (eventParams.cellData && this.client.populateCellMenu) {\n            this.client.populateCellMenu(eventParams);\n        }\n\n        super.callChainablePopulateMenuMethod(...arguments);\n    }\n\n    shouldShowMenu(eventParams) {\n        const { column } = eventParams;\n\n        return eventParams.taskRecord && (!column || column.enableCellContextMenu !== false);\n    }\n\n    getElementFromRecord(record) {\n        return this.client.getElementFromTaskRecord(record);\n    }\n\n    populateTaskMenu({ items, column, selection, taskRecord }) {\n        const\n            { client }    = this,\n            {\n                isTreeGrouped,\n                usesDisplayStore\n            }             = client,\n            // Context menu on the selection offers multi actions on the selection.\n            // Context menu on a non-selected record offers single actions on the context record.\n            multiSelected = selection.includes(taskRecord) && selection.length > 1;\n\n        items.add                = {\n            disabled : client.readOnly || isTreeGrouped || usesDisplayStore,\n            hidden   : multiSelected\n        };\n        items.convertToMilestone = {\n            disabled : client.readOnly || taskRecord.readOnly,\n            hidden   : taskRecord.isParent || taskRecord.milestone\n        };\n        items.indent             = {\n            disabled : client.readOnly || !taskRecord.previousSibling || taskRecord.readOnly || isTreeGrouped || usesDisplayStore\n        };\n        items.outdent            = {\n            disabled : client.readOnly || taskRecord.parent === client.taskStore.rootNode || taskRecord.readOnly || isTreeGrouped || usesDisplayStore\n        };\n        items.deleteTask         = {\n            disabled : client.readOnly || taskRecord.readOnly\n        };\n        items.linkTasks          = {\n            disabled : !multiSelected\n        };\n        items.unlinkTasks        = {\n            disabled : items.linkTasks.disabled\n        };\n\n        // TaskMenu feature is responsible for cell items\n        if (column?.cellMenuItems) {\n            Objects.merge(items, column.cellMenuItems);\n        }\n\n        if (client.showTaskColorPickers) {\n            items.taskColor = {\n                disabled : client.readOnly || taskRecord.readOnly\n            };\n        }\n        else {\n            items.taskColor = {\n                hidden : true\n            };\n        }\n    }\n\n    populateItemsWithData({ items, taskRecord }) {\n        super.populateItemsWithData(...arguments);\n\n        if (this.client.showTaskColorPickers && items.taskColor?.menu) {\n            Objects.merge(items.taskColor.menu.colorMenu, {\n                value  : taskRecord.eventColor,\n                record : taskRecord\n            });\n        }\n    }\n\n    // This generates the fixed, unchanging part of the items and is only called once\n    // to generate the baseItems of the feature.\n    // The dynamic parts which are set by populateEventMenu have this merged into them.\n    changeItems(items) {\n        const { client } = this;\n\n        return Objects.merge({\n            add : {\n                text   : 'L{Gantt.Add}',\n                cls    : 'b-separator',\n                icon   : 'b-icon-add',\n                weight : 500,\n                menu   : {\n                    addTaskAbove : {\n                        text   : 'L{Gantt.Task above}',\n                        weight : 510,\n                        icon   : 'b-icon-up',\n                        onItem({ taskRecord }) {\n                            client.addTaskAbove(taskRecord);\n                        }\n                    },\n                    addTaskBelow : {\n                        text   : 'L{Gantt.Task below}',\n                        weight : 520,\n                        icon   : 'b-icon-down',\n                        onItem({ taskRecord }) {\n                            client.addTaskBelow(taskRecord);\n                        }\n                    },\n                    milestone : {\n                        text   : 'L{Gantt.Milestone}',\n                        weight : 530,\n                        icon   : 'b-icon-milestone',\n                        onItem({ taskRecord }) {\n                            client.addMilestoneBelow(taskRecord);\n                        }\n                    },\n                    subtask : {\n                        text   : 'L{Gantt.Sub-task}',\n                        weight : 540,\n                        icon   : 'b-icon-subtask',\n                        at     : 'start',\n                        onItem({ taskRecord }) {\n                            client.addSubtask(taskRecord, { at : this.at });\n                        }\n                    },\n                    successor : {\n                        text   : 'L{Gantt.Successor}',\n                        weight : 550,\n                        icon   : 'b-icon-successor',\n                        onItem({ taskRecord }) {\n                            client.addSuccessor(taskRecord);\n                        }\n                    },\n                    predecessor : {\n                        text   : 'L{Gantt.Predecessor}',\n                        weight : 560,\n                        icon   : 'b-icon-predecessor',\n                        onItem({ taskRecord }) {\n                            client.addPredecessor(taskRecord);\n                        }\n                    }\n                }\n            },\n            convertToMilestone : {\n                icon   : 'b-icon-milestone',\n                text   : 'L{Gantt.Convert to milestone}',\n                weight : 600,\n                onItem({ taskRecord }) {\n                    taskRecord.convertToMilestone();\n                }\n            },\n            indent : {\n                text      : 'L{Gantt.Indent}',\n                icon      : 'b-icon-indent',\n                weight    : 700,\n                separator : true,\n                onItem({ selection, taskRecord }) {\n                    // Context menu on the selection offers multi actions on the selection.\n                    // Context menu on a non-selected record offers single actions on the context record.\n                    client.indent(selection.includes(taskRecord) ? selection : taskRecord);\n                }\n            },\n            outdent : {\n                text   : 'L{Gantt.Outdent}',\n                icon   : 'b-icon-outdent',\n                weight : 800,\n                onItem({ selection, taskRecord }) {\n                    // Context menu on the selection offers multi actions on the selection.\n                    client.outdent(selection.includes(taskRecord) ? selection : taskRecord);\n                }\n            },\n            deleteTask : {\n                text   : 'L{Gantt.Delete task}',\n                icon   : 'b-icon-trash',\n                cls    : 'b-separator',\n                weight : 900,\n                onItem({ selection, taskRecord }) {\n                    // Context menu on the selection offers multi actions on the selection.\n                    // Context menu on a non-selected record offers single actions on the context record.\n                    client.store.remove(selection.includes(taskRecord) ? selection : taskRecord);\n                }\n            },\n            linkTasks : {\n                text   : 'L{Gantt.linkTasks}',\n                icon   : 'b-icon-link',\n                cls    : 'b-separator',\n                weight : 1000,\n                onItem({ selection }) {\n                    client.store.linkTasks(selection);\n                }\n            },\n            unlinkTasks : {\n                text   : 'L{Gantt.unlinkTasks}',\n                icon   : 'b-icon-unlink',\n                weight : 1010,\n                onItem({ selection }) {\n                    client.store.unlinkTasks(selection);\n                }\n            },\n            taskColor : {\n                text : 'L{Gantt.color}',\n                icon : 'b-icon-palette',\n                menu : {\n                    colorMenu : {\n                        type : 'eventcolorpicker'\n                    }\n                },\n                separator : true,\n                weight    : 1100\n            }\n        }, items);\n    }\n\n}\n\nTaskMenu.featureClass = '';\n\nGridFeatureManager.registerFeature(TaskMenu, true, 'Gantt');\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport AttachToProjectMixin from '../../Scheduler/data/mixin/AttachToProjectMixin.js';\nimport Tooltip from '../../Core/widget/Tooltip.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport EventHelper from '../../Core/helper/EventHelper.js';\n\nconst casedEventName = {\n    click       : 'Click',\n    dblclick    : 'DblClick',\n    contextmenu : 'ContextMenu'\n};\n\n/**\n * @module Gantt/feature/TaskNonWorkingTime\n */\n\n/**\n * Feature highlighting the non-working time intervals for tasks, based on their {@link Gantt.model.TaskModel#field-calendar}.\n * If a task has no calendar defined, the project's calendar will be used. The non-working time interval can also be\n * recurring. You can find a live example showing how to achieve this in the [Task Calendars Demo](../examples/calendars/).\n *\n * {@inlineexample Gantt/feature/TaskNonWorkingTime.js}\n *\n * The demo above shows the default `row` mode, but the feature also supports a `bar` {@link #config-mode} that shades\n * parts of the task bars:\n *\n * {@inlineexample Gantt/feature/TaskNonWorkingTimeBar.js}\n *\n * If you want a tooltip to be displayed when hovering over the non-working time interval, you can configure a\n * {@link #config-tooltipTemplate}.\n *\n * ## Data structure\n * Below you see an example of data defining calendars and assigning the tasks a calendar:\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         taskNonWorkingTime : true\n *     },\n *\n *     // A Project holding the data and the calculation engine for the Gantt. It also acts as a CrudManager, allowing\n *     project   : {\n *         tasksData : [\n *             { id : 1, name : 'Task 1' },\n *             { id : 2, name : 'Task 2', calendar : 'break' }\n *         ],\n *         calendarsData : [\n *             {\n *                 id        : 'general',\n *                 name      : 'General',\n *                 intervals : [\n *                     {\n *                         recurrentStartDate : 'on Sat at 0:00',\n *                         recurrentEndDate   : 'on Mon at 0:00',\n *                         isWorking          : false\n *                     }\n *                 ]\n *             },\n *             {\n *                 id        : 'break',\n *                 name      : 'Breaks',\n *                 intervals : [\n *                     {\n *                         startDate : '2022-08-07',\n *                         endDate   : '2022-08-11',\n *                         isWorking : false\n *                     },\n *                     {\n *                         startDate : '2022-08-18',\n *                         endDate   : '2022-08-20',\n *                         isWorking : false\n *                     }\n *                 ]\n *             }\n *         ]\n *     }\n * }):\n * ```\n *\n * ## Styling non-working time interval elements\n *\n * To style the elements representing the non-working time elements you can set the {@link SchedulerPro.model.CalendarModel#field-cls}\n * field in your data. This will add a CSS class to all non-working time elements for the calendar. You can also add an\n * {@link SchedulerPro.model.CalendarModel#field-iconCls} value specifying an icon to display inside the interval.\n *\n * ```javascript\n * {\n *   \"success\"   : true,\n *   \"calendars\" : {\n *       \"rows\" : [\n *           {\n *               \"id\"                       : \"day\",\n *               \"name\"                     : \"Day shift\",\n *               \"unspecifiedTimeIsWorking\" : false,\n *               \"cls\"                      : \"dayshift\",\n *               \"intervals\"                : [\n *                   {\n *                       \"recurrentStartDate\" : \"at 8:00\",\n *                       \"recurrentEndDate\"   : \"at 17:00\",\n *                       \"isWorking\"          : true\n *                   }\n *               ]\n *           }\n *       ]\n *    }\n * }\n * ```\n *\n * You can also add a `cls` value and an `iconCls` to **individual** intervals:\n *\n * ```javascript\n * {\n *   \"success\"   : true,\n *   \"calendars\" : {\n *       \"rows\" : [\n *           {\n *               \"id\"                       : \"day\",\n *               \"name\"                     : \"Day shift\",\n *               \"unspecifiedTimeIsWorking\" : true,\n *               \"intervals\"                : [\n *                   {\n *                      \"startDate\"          : \"2022-03-23T02:00\",\n *                      \"endDate\"            : \"2022-03-23T04:00\",\n *                      \"isWorking\"          : false,\n *                      \"cls\"                : \"factoryShutdown\",\n *                      \"iconCls\"            : \"warningIcon\"\n *                  }\n *               ]\n *           }\n *       ]\n *    }\n * }\n * ```\n *\n * This feature is **off** by default. For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * @extends Core/mixin/InstancePlugin\n * @demo Gantt/calendars\n * @classtype taskNonWorkingTime\n * @feature\n */\nexport default class TaskNonWorkingTime extends InstancePlugin.mixin(AttachToProjectMixin) {\n    /**\n     * Triggered when clicking a nonworking time element\n     * @event taskNonWorkingTimeClick\n     * @param {Gantt.view.Gantt} source The Gantt chart instance\n     * @param {Gantt.model.TaskModel} taskRecord Task record\n     * @param {Object} interval The raw data describing the nonworking time interval\n     * @param {String} interval.name The interval name (if any)\n     * @param {Date} interval.startDate The interval start date\n     * @param {Date} interval.endDate The interval end date\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    /**\n     * Triggered when double-clicking a nonworking time element\n     * @event taskNonWorkingTimeDblClick\n     * @param {Gantt.view.Gantt} source The Gantt chart instance\n     * @param {Gantt.model.TaskModel} taskRecord Task record\n     * @param {Object} interval The raw data describing the nonworking time interval\n     * @param {String} interval.name The interval name (if any)\n     * @param {Date} interval.startDate The interval start date\n     * @param {Date} interval.endDate The interval end date\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    /**\n     * Triggered when right-clicking a nonworking time element\n     * @event taskNonWorkingTimeContextMenu\n     * @param {Gantt.view.Gantt} source The Gantt chart instance\n     * @param {Gantt.model.TaskModel} taskRecord Task record\n     * @param {Object} interval The raw data describing the nonworking time interval\n     * @param {String} interval.name The interval name (if any)\n     * @param {Date} interval.startDate The interval start date\n     * @param {Date} interval.endDate The interval end date\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    //region Config\n\n    static $name = 'TaskNonWorkingTime';\n\n    static configurable = {\n        idPrefix : 'TaskNonWorkingTime',\n\n        /**\n         * The largest time axis unit to display non working ranges for ('hour' or 'day' etc).\n         * When zooming to a view with a larger unit, no non-working time elements will be rendered.\n         *\n         * **Note:** Be careful with setting this config to big units like 'year'. When doing this,\n         * make sure the timeline {@link Scheduler.view.TimelineBase#config-startDate start} and\n         * {@link Scheduler.view.TimelineBase#config-endDate end} dates are set tightly.\n         * When using a long range (for example many years) with non-working time elements rendered per hour,\n         * you will end up with millions of elements, impacting performance.\n         * When zooming, use the {@link Scheduler.view.mixin.TimelineZoomable#config-zoomKeepsOriginalTimespan} config.\n         * @config {String}\n         * @default\n         */\n        maxTimeAxisUnit : 'week',\n\n        /**\n         * A template function used to generate contents for a tooltip when hovering non-working time intervals\n         * ```javascript\n         * const gantt = new Gantt({\n         *     features : {\n         *         taskNonWorkingTime : {\n         *             tooltipTemplate({ taskRecord, startDate, endDate }) {\n         *                 return 'Non-working time';\n         *             }\n         *         }\n         *     ]\n         * });\n         * ```\n         * @config {Function} tooltipTemplate\n         * @param {Object} data Tooltip data\n         * @param {Gantt.model.TaskModel} data.taskRecord The taskRecord\n         * @param {Date} data.startDate The start date of the-non working interval\n         * @param {Date} data.endDate The end date of the non-working interval\n         * @param {String} data.name The name of the non-working interval\n         * @param {String} data.cls The cls of the non-working interval\n         * @param {String} data.iconCls The iconCls of the non-working interval\n         * @returns {String|DomConfig|DomConfig[]}\n         */\n        tooltipTemplate : null,\n\n        tooltip : {},\n\n        /**\n         * Rendering mode, one of:\n         * - 'row' - renders non-working time intervals to the task row\n         * - 'bar' - renders non-working time intervals inside the task bar\n         * - 'both - combines 'row' and 'bar' rendering modes\n         * @prp {'row'|'bar'|'both'}\n         */\n        mode : 'row'\n    };\n\n    // Cannot use `static properties = {}`, new Map/Set would pollute the prototype\n    static get properties() {\n        return {\n            rowMap  : new Map(),\n            taskMap : new Map()\n        };\n    };\n\n    static pluginConfig = {\n        chain : ['onTaskDataGenerated', 'onPaint']\n    };\n\n    // No feature based styling needed, do not add a cls to Scheduler\n    static featureClass = '';\n\n    //endregion\n\n    //region Init\n\n    construct() {\n        super.construct(...arguments);\n\n        const\n            me         = this,\n            { client } = me;\n\n        client.timeAxis.ion({\n            name        : 'timeAxis',\n            reconfigure : 'onTimeAxisReconfigure',\n            // should trigger before event rendering chain\n            prio        : 100,\n            thisObj     : me\n        });\n\n        client.taskStore.ion({\n            filter  : 'clear',\n            thisObj : me\n        });\n\n        client.ion({\n            beforeToggleNode : 'clear',\n            thisObj          : me\n        });\n    }\n\n    attachToProject(project) {\n        super.attachToProject(project);\n\n        project.ion({\n            name    : 'project',\n            refresh : 'onProjectRefresh',\n            prio    : 100,\n            thisObj : this\n        });\n    }\n\n    onProjectRefresh() {\n        this.clear();\n    }\n\n    onPaint({ firstPaint }) {\n        if (firstPaint) {\n            this.mouseEventsDetacher = EventHelper.on({\n                element     : this.client.foregroundCanvas,\n                delegate    : '.b-tasknonworkingtime',\n                click       : 'handleMouseEvent',\n                dblclick    : 'handleMouseEvent',\n                contextmenu : 'handleMouseEvent',\n                thisObj     : this\n            });\n        }\n    }\n\n    doDisable(disable) {\n        super.doDisable(disable);\n\n        this.clear();\n        this.client.refresh();\n    }\n\n    updateMode() {\n        if (!this.isConfiguring) {\n            this.clear();\n            this.client.refresh();\n        }\n    }\n\n    clear() {\n        this.taskMap.clear();\n        this.rowMap.clear();\n    }\n\n    //endregion\n\n    //region Events\n\n    onTimeAxisReconfigure() {\n        this.clear();\n    }\n\n    //endregion\n\n    //region Rendering\n\n    // Called on render of resources events to get events to render. Add any ranges\n    // (chained function from Scheduler)\n    onTaskDataGenerated(renderData) {\n        if (!renderData.task.effectiveCalendar) {\n            return;\n        }\n\n        if (this.mode !== 'bar') {\n            const calendarIntervals = this.getCalendarIntervalsToRender(renderData, false);\n\n            // Convert indicator timespans to DOMConfigs for rendering\n            renderData.extraConfigs.push(...calendarIntervals);\n        }\n\n        if (this.mode !== 'row') {\n            const calendarIntervals = this.getCalendarIntervalsToRender(renderData, true);\n\n            renderData.children.push(...calendarIntervals);\n        }\n    }\n\n    getCalendarIntervalsToRender(renderData, barMode = false) {\n        const\n            me           = this,\n            {\n                rowMap,\n                taskMap,\n                client\n            }            = me,\n            { timeAxis } = client,\n            { task }     = renderData,\n            intervals    = [],\n            shouldPaint  = !me.maxTimeAxisUnit || DateHelper.compareUnits(timeAxis.unit, me.maxTimeAxisUnit) <= 0,\n            map          = barMode ? taskMap : rowMap;\n\n        if (!me.disabled && shouldPaint) {\n            const oneTickMs = timeAxis.first.durationMS;\n\n            if (!map.has(task.id)) {\n                const\n                    calendar   = task.effectiveCalendar,\n                    // In bar mode we only care about intervals fitting in the task, while in row mode we care about\n                    // all intervals\n                    ranges     = (!barMode || task.isScheduled) ? calendar.getNonWorkingTimeRanges(\n                        barMode ? task.startDate : client.startDate,\n                        barMode ? task.endDate : client.endDate\n                    ) : [],\n                    domConfigs = [];\n\n                for (let i = 0; i < ranges.length; i++) {\n                    const range = ranges[i];\n\n                    if (range.endDate - range.startDate >= oneTickMs) {\n                        domConfigs.push(me.createIntervalDOMConfig({\n                            id           : `r${task.id}i${i}`,\n                            iconCls      : range.iconCls || calendar.iconCls || '',\n                            cls          : `${calendar.cls ? `${calendar.cls} ` : ''}${range.cls || ''}`,\n                            startDate    : range.startDate,\n                            endDate      : range.endDate,\n                            name         : range.name,\n                            isNonWorking : true\n                        }, renderData, barMode));\n                    }\n                }\n\n                map.set(task.id, domConfigs);\n            }\n\n            intervals.push(...ObjectHelper.clone(map.get(task.id)));\n        }\n\n        return intervals;\n    }\n\n    createIntervalDOMConfig(interval, renderData, barMode = false) {\n        const\n            { client : gantt } = this,\n            { taskRecord }     = renderData,\n            {\n                cls,\n                iconCls,\n                name,\n                startDate,\n                endDate\n            }                  = interval,\n            x                  = gantt.getCoordinateFromDate(startDate) - (barMode ? renderData.left : 0),\n            width              = gantt.getCoordinateFromDate(endDate) - x - (barMode ? renderData.left : 0),\n            top                = barMode ? null : gantt.store.indexOf(taskRecord) * gantt.rowManager.rowOffsetHeight,\n            height             = barMode ? null : gantt.rowHeight;\n\n        return {\n            className : {\n                'b-tasknonworkingtime' : 1,\n                [cls]                  : 1\n            },\n\n            style : {\n                left  : x,\n                top,\n                height,\n                // Crop to fit task's width in bar mode\n                width : barMode && width + x > renderData.width ? renderData.width - x : width\n            },\n\n            children : [\n                iconCls ? {\n                    tag       : 'i',\n                    className : iconCls\n                } : null,\n                name\n            ],\n\n            dataset : {\n                taskId : interval.id\n            },\n\n            elementData : {\n                taskRecord,\n                interval\n            }\n        };\n    }\n\n    //endregion\n\n    //region Tooltip\n\n    changeTooltip(tooltip, old) {\n        const me = this;\n\n        old?.destroy();\n\n        if (!me.tooltipTemplate || !tooltip) {\n            return null;\n        }\n\n        return Tooltip.new({\n            align          : 'b-t',\n            forSelector    : '.b-timelinebase:not(.b-eventeditor-editing):not(.b-resizing-event):not(.b-dragcreating):not(.b-dragging-event):not(.b-creating-dependency) .b-sch-foreground-canvas > .b-tasknonworkingtime',\n            forElement     : me.client.timeAxisSubGridElement,\n            showOnHover    : true,\n            hideDelay      : 0,\n            anchorToTarget : true,\n            trackMouse     : false,\n            getHtml        : ({ activeTarget }) => {\n                const\n                    {\n                        taskRecord,\n                        interval\n                    } = activeTarget.elementData;\n\n                return me.tooltipTemplate({ taskRecord, ...interval });\n            }\n        }, tooltip);\n    }\n\n    //endregion\n\n    handleMouseEvent(domEvent) {\n        const\n            me                       = this,\n            target                   = domEvent.target.closest('.b-tasknonworkingtime'),\n            { taskRecord, interval } = target.elementData;\n\n        me.client.trigger('taskNonWorkingTime' + casedEventName[domEvent.type], {\n            feature : me,\n            taskRecord,\n            interval,\n            domEvent\n        });\n    }\n}\n\nGridFeatureManager.registerFeature(TaskNonWorkingTime, false, 'Gantt');\n","import EventHelper from '../../Core/helper/EventHelper.js';\nimport EventResize from '../../SchedulerPro/feature/EventResize.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport TransactionalFeature from '../../Scheduler/feature/mixin/TransactionalFeature.js';\n\n/**\n * @module Gantt/feature/TaskResize\n */\n\n/**\n * Feature that allows resizing a task by dragging its end date. Resizing a task by dragging its start date is not allowed.\n *\n * This feature is **enabled** by default\n *\n * This feature updates the event's `endDate` live in order to leverage the\n * rendering pathway to always yield a correct appearance. The changes are done in\n * {@link Core.data.Model#function-beginBatch batched} mode so that changes do not become\n * eligible for data synchronization or propagation until the operation is completed.\n *\n * ## Customizing the resize tooltip\n *\n * To show custom HTML in the tooltip, please see the {@link #config-tooltipTemplate} config. Example:\n *\n * ```javascript\n * taskResize : {\n *     // A minimal end date tooltip\n *     tooltipTemplate : ({ record, endDate }) => {\n *         return DateHelper.format(endDate, 'MMM D');\n *     }\n * }\n * ```\n *\n * @extends SchedulerPro/feature/EventResize\n * @demo Gantt/basic\n * @classtype taskResize\n * @feature\n */\nexport default class TaskResize extends TransactionalFeature(EventResize) {\n\n    static get $name() {\n        return 'TaskResize';\n    }\n\n    static get configurable() {\n        return {\n            draggingItemCls : 'b-sch-event-resizing',\n\n            resizingItemInnerCls : null,\n\n            /**\n             * Gets or sets special key to activate successor pinning behavior. Supported values are:\n             * * 'ctrl'\n             * * 'shift'\n             * * 'alt'\n             * * 'meta'\n             *\n             * Assign false to disable it.\n             * @member {Boolean|String} pinSuccessors\n             */\n            /**\n             * Set to true to enable resizing task while pinning dependent tasks. By default, this behavior is activated\n             * if you hold CTRL key during drag. Alternatively, you may provide key name to use. Supported values are:\n             * * 'ctrl'\n             * * 'shift'\n             * * 'alt'\n             * * 'meta'\n             *\n             * **Note**: Only supported in forward-scheduled project\n             *\n             * @config {Boolean|String}\n             * @default\n             */\n            pinSuccessors : false\n        };\n    }\n\n    static get pluginConfig() {\n        return {\n            chain : ['render', 'onEventDataGenerated', 'isTaskElementDraggable']\n        };\n    }\n\n    onDragItemMouseMove() {\n        // internalUpdateRecord is based on the assumption only taskbar end edge can be resized\n        this[`${this.client.rtl ? 'right' : 'left'}Handle`] = false;\n\n        super.onDragItemMouseMove(...arguments);\n    }\n\n    changePinSuccessors(value) {\n        return EventHelper.toSpecialKey(value);\n    }\n\n    //region Events\n\n    /**\n     * @event beforeEventResize\n     * @hide\n     */\n\n    /**\n     * @event eventResizeStart\n     * @hide\n     */\n\n    /**\n     * @event eventPartialResize\n     * @hide\n     */\n\n    /**\n     * @event beforeEventResizeFinalize\n     * @hide\n     */\n\n    /**\n     * @event eventResizeEnd\n     * @hide\n     */\n\n    /**\n     * Fires on the owning Gantt before resizing starts. Return false to prevent the operation.\n     * @event beforeTaskResize\n     * @preventable\n     * @on-owner\n     * @param {Gantt.model.TaskModel} taskRecord\n     * @param {Event} event\n     */\n\n    /**\n     * Fires on the owning Gantt when task resizing starts\n     * @event taskResizeStart\n     * @on-owner\n     * @param {Gantt.model.TaskModel} taskRecord\n     * @param {Event} event\n     */\n\n    /**\n     * Fires on the owning Gantt on each resize move event\n     * @event taskPartialResize\n     * @on-owner\n     * @param {Gantt.model.TaskModel} taskRecord\n     * @param {Date} start The start date\n     * @param {Date} end The end date\n     * @param {HTMLElement} element The element\n     */\n\n    /**\n     * Fires on the owning Gantt to allow implementer to prevent immediate finalization by setting `data.context.async = true`\n     * in the listener, to show a confirmation popup etc\n     * ```javascript\n     *  gantt.on('beforetaskresizefinalize', ({context}) => {\n     *      context.async = true;\n     *      setTimeout(() => {\n     *          // async code don't forget to call finalize\n     *          context.finalize();\n     *      }, 1000);\n     *  })\n     * ```\n     * @event beforeTaskResizeFinalize\n     * @on-owner\n     * @param {Gantt.model.TaskModel} taskRecord\n     * @param {Object} data\n     * @param {Gantt.view.Gantt} data.source Gantt instance\n     * @param {Object} data.context\n     * @param {Boolean} data.context.async Set true to handle resize asynchronously (e.g. to wait for user\n     * confirmation)\n     * @param {Function} data.context.finalize Call this method to finalize resize. This method accepts one\n     * argument: pass true to update records, or false, to ignore changes\n     */\n\n    /**\n     * Fires on the owning Gantt after the resizing gesture has finished.\n     * @event taskResizeEnd\n     * @on-owner\n     * @param {Boolean} changed\n     * @param {Gantt.model.TaskModel} taskRecord\n     */\n\n    //endregion\n\n    //region Gantt specifics\n\n    isTaskElementDraggable(eventElement, eventRecord, el, event) {\n        return this.isEventElementDraggable(...arguments);\n    }\n\n    checkValidity() {\n        // Task resize just does basic validity checks which runs the validatorFn\n        return this.basicValidityCheck(...arguments);\n    }\n\n    getBeforeResizeParams(context) {\n        return {};\n    }\n\n    // Injects Gantt specific data into the drag context\n    setupProductResizeContext(context, event) {\n        const\n            gantt      = this.client,\n            taskRecord = gantt.resolveTaskRecord(context.element);\n\n        Object.assign(context, {\n            taskRecord,\n            eventRecord     : taskRecord,\n            dateConstraints : gantt.getDateConstraints?.(taskRecord)\n        });\n    }\n\n    async internalUpdateRecord(context, timespanRecord) {\n        const\n            { client }     = this,\n            { generation } = timespanRecord,\n            {\n                startDate,\n                endDate\n            }              = context,\n            toSet          = { endDate };\n\n        // Fix the duration according to the Entity's rules.\n        context.duration = toSet.duration = timespanRecord.run('calculateProjectedDuration', startDate, endDate);\n\n        // Fix the dragged date point according to the Entity's rules.\n        const value = toSet[context.toSet] = timespanRecord.run('calculateProjectedXDateWithDuration', startDate, true, context.duration);\n\n        // Update the record to its final correct state using *batched changes*\n        // These will *not* be propagated, it's just to force the dragged event bar\n        // into its corrected shape before the real changes which will propagate are applied below.\n        // We MUST do it like this because the final state may not be a net change if the changes\n        // got rejected, and in that case, the engine will not end up firing any change events.\n        timespanRecord.set(toSet);\n\n        // Quit listening for batchedUpdate *before* we cancel the batch so that the\n        // change events from the revert do not update the UI.\n        client.endListeningForBatchedUpdates();\n\n        this.cancelEventRecordBatch(timespanRecord);\n\n        if (this.pinSuccessors && context.event[this.pinSuccessors]) {\n            await timespanRecord.setEndDatePinningSuccessors(value);\n        }\n        else {\n            await timespanRecord.setEndDate(value, false);\n        }\n\n        timespanRecord.endBatch();\n\n        // If the record has been changed\n        return timespanRecord.generation !== generation;\n    }\n\n    //endregion\n\n    //#region\n\n    triggerEventResizeStart(eventType, event, context) {\n        super.triggerEventResizeStart(eventType, event, context);\n\n        return this.startFeatureTransaction();\n    }\n\n    triggerEventResizeEnd(eventType, event) {\n        super.triggerEventResizeEnd(eventType, event);\n\n        if (event.changed) {\n            this.finishFeatureTransaction();\n        }\n        else {\n            this.rejectFeatureTransaction();\n        }\n    }\n\n    //#endregion\n}\n\nGridFeatureManager.registerFeature(TaskResize, true, 'Gantt');\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport TaskDrag from './TaskDrag.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\n\n/**\n * @module Gantt/feature/TaskSegmentDrag\n */\n\n/**\n * Allows user to drag and drop task segments, to change their start date.\n *\n * {@inlineexample Gantt/feature/TaskSegments.js}\n *\n * This feature is **enabled** by default\n *\n * @extends Gantt/feature/TaskDrag\n * @demo Gantt/split-tasks\n * @classtype taskSegmentDrag\n * @feature\n */\nexport default class TaskSegmentDrag extends TaskDrag {\n\n    // <debug>\n    // region Localization test\n    static localization = [\n        'L{EventSegments.splitTask}'\n    ];\n    // endregion\n    // </debug>\n\n    //region Config\n\n    static $name = 'TaskSegmentDrag';\n\n    static get configurable() {\n        return {\n            capitalizedEventName : 'TaskSegment'\n        };\n    }\n\n    static get pluginConfig() {\n        return {\n            chain : ['onPaint', 'isTaskElementDraggable']\n        };\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fires on the owning Gantt before segment dragging starts. Return `false` to prevent the action.\n     * @event beforeTaskSegmentDrag\n     * @preventable\n     * @on-owner\n     * @param {Gantt.view.Gantt} source\n     * @param {Gantt.model.TaskModel} taskRecord The segment about to be dragged\n     * @param {Event} event The native browser event\n     */\n\n    /**\n     * Fires on the owning Gantt when segment dragging starts\n     * @event taskSegmentDragStart\n     * @on-owner\n     * @param {Gantt.view.Gantt} source\n     * @param {Gantt.model.TaskModel[]} taskRecords Dragged segments\n     */\n\n    /**\n     * Fires on the owning Gantt while a segment is being dragged\n     * @event taskSegmentDrag\n     * @on-owner\n     * @param {Gantt.view.Gantt} source\n     * @param {Gantt.model.TaskModel[]} taskRecords Dragged segments\n     * @param {Date} startDate\n     * @param {Date} endDate\n     * @param {Object} dragData\n     * @param {Boolean} changed `true` if startDate has changed.\n     */\n\n    /**\n     * Fires on the owning Gantt to allow implementer to prevent immediate finalization by setting `data.context.async = true`\n     * in the listener, to show a confirmation popup etc\n     * ```javascript\n     * scheduler.on('beforetasksegmentdropfinalize', ({ context }) => {\n     *     context.async = true;\n     *     setTimeout(() => {\n     *         // async code don't forget to call finalize\n     *         context.finalize();\n     *     }, 1000);\n     * })\n     * ```\n     * @event beforeTaskSegmentDropFinalize\n     * @on-owner\n     * @param {Gantt.view.Gantt} source Gantt instance\n     * @param {Object} context\n     * @param {Gantt.model.TaskModel[]} context.taskRecords Dragged segments\n     * @param {Boolean} context.valid Set this to `false` to mark the drop as invalid\n     * @param {Boolean} context.async Set true to handle dragdrop asynchronously (e.g. to wait for user\n     * confirmation)\n     * @param {Function} context.finalize Call this method to finalize dragdrop. This method accepts one\n     * argument: pass true to update records, or false, to ignore changes\n     */\n\n    /**\n     * Fires on the owning Gantt after a valid task drop\n     * @event taskSegmentDrop\n     * @on-owner\n     * @param {Gantt.view.Gantt} source\n     * @param {Gantt.model.TaskModel[]} taskRecords Dropped segments\n     * @param {Boolean} isCopy\n     */\n\n    /**\n     * Fires on the owning Gantt after a task drop, regardless if the drop validity\n     * @event afterTaskSegmentDrop\n     * @on-owner\n     * @param {Gantt.view.Gantt} source\n     * @param {Gantt.model.TaskModel[]} taskRecords Dropped segments\n     * @param {Boolean} valid\n     */\n\n    //endregion\n\n    // Prevent TaskDrag to handle a segment\n    isTaskElementDraggable(taskElement, taskRecord, el, event) {\n        const me = this;\n\n        // We don't care dragging if that's a task having nothing to do w/ segments\n        if (me.disabled || (!taskRecord.isEventSegment && !taskRecord.isSegmented)) {\n            return true;\n        }\n\n        // Otherwise make sure TaskDrag is not trying to handle a segment element drag\n        return !el.closest(me.drag.targetSelector);\n    }\n\n    //region Drag events\n\n    triggerBeforeEventDrag(eventType, event) {\n        return this.client.trigger('beforeTaskSegmentDrag', event);\n    }\n\n    triggerBeforeEventDropFinalize(eventType, eventData, client) {\n        client.trigger(`before${this.capitalizedEventName}DropFinalize`, eventData);\n    }\n\n    triggerEventDrag(dragData, start) {\n        // Trigger the event on every mousemove so that features which need to adjust\n        // Such as dependencies and baselines can keep adjusted.\n        this.client.trigger('taskSegmentDrag', {\n            taskRecords : dragData.draggedEntities,\n            startDate   : dragData.startDate,\n            endDate     : dragData.endDate,\n            dragData,\n            changed     : dragData.startDate - start !== 0\n        });\n    }\n\n    triggerDragStart(dragData) {\n        this.client.trigger('taskSegmentDragStart', {\n            taskRecords : dragData.draggedEntities,\n            dragData\n        });\n    }\n\n    triggerDragAbort(dragData) {\n        this.client.trigger('taskSegmentDragAbort', {\n            taskRecords : dragData.draggedEntities,\n            context     : dragData\n        });\n    }\n\n    triggerDragAbortFinalized(dragData) {\n        this.client.trigger('taskSegmentDragAbortFinalized', {\n            taskRecords : dragData.draggedEntities,\n            context     : dragData\n        });\n    }\n\n    triggerAfterDrop(dragData, valid) {\n        this.currentOverClient.trigger('afterTaskSegmentDrop', {\n            taskRecords : dragData.draggedEntities,\n            context     : dragData,\n            valid\n        });\n    }\n\n    onInternalInvalidDrop(abort) {\n        super.onInternalInvalidDrop(...arguments);\n\n        // revert main task element width changes\n        this.dragData.mainTaskElement.style.width = this.dragData.initialMainTaskElementWidth + 'px';\n    }\n\n    //endregion\n\n    //region Drag data\n\n    buildDragHelperConfig() {\n        const config = super.buildDragHelperConfig();\n\n        config.targetSelector = '.b-sch-event-segment:not(.b-first)';\n\n        return config;\n    }\n\n    getTaskScheduleRegion(taskRecord, dateConstraints) {\n        const\n            { client }      = this,\n            mainTaskElement = client.getElementFromTaskRecord(taskRecord.event),\n            mainTaskRegion  = Rectangle.from(mainTaskElement, client.timeAxisSubGridElement),\n            result          = this.client.getScheduleRegion(taskRecord.event, true, dateConstraints);\n\n        // For segment we shift constrainRectangle by the main event offset\n        result.translate(-mainTaskRegion.x);\n\n        return result;\n    }\n\n    setupProductDragData(context) {\n        const result = super.setupProductDragData(context);\n\n        result.mainTaskElement = this.client.getElementFromTaskRecord(result.record.event, false);\n        result.initialMainTaskElementWidth = parseFloat(result.mainTaskElement.style.width);\n\n        return result;\n    }\n\n    updateDragContext(context, event) {\n        super.updateDragContext(...arguments);\n\n        const {\n            dirty,\n            record,\n            mainTaskElement,\n            initialMainTaskElementWidth\n        } = this.dragData;\n\n        // If dragging the last segment update the main task width accordingly\n        // need this to update dependency properly while dragging\n        if (dirty && !record.nextSegment) {\n            // main task width = its origin width + drag distance\n            mainTaskElement.style.width = (initialMainTaskElementWidth + context.clientX - context.startClientX) + 'px';\n        }\n    }\n\n    get tipId() {\n        return `${this.client.id}-task-segment-drag-tip`;\n    }\n\n    //endregion\n\n    //region Finalize & validation\n\n    /**\n     * Update tasks being dragged.\n     * @private\n     * @param {Object} context Drag data.\n     */\n    async updateRecords(context) {\n        const\n            {\n                startDate,\n                draggedEntities : [taskRecord]\n            }                = context,\n            oldStartDate     = taskRecord.startDate;\n\n        if (taskRecord.isEventSegment) {\n            await taskRecord.setStartDate(startDate, true);\n\n            // If not rejected (the startDate has changed), tell the world there was a successful drop.\n            if (taskRecord.startDate - oldStartDate) {\n                this.client.trigger('taskSegmentDrop', {\n                    taskRecords : context.draggedEntities\n                });\n            }\n            else {\n                this.dragData.valid = false;\n            }\n        }\n    }\n\n    getDateConstraints(taskRecord) {\n        const result = super.getDateConstraints(taskRecord) || {};\n\n        let { minDate, maxDate } = result;\n\n        // A segment movement is constrained by its neighbor segments if any\n        if (taskRecord.previousSegment && (!minDate || minDate < taskRecord.previousSegment.endDate)) {\n            minDate = taskRecord.previousSegment.endDate;\n        }\n\n        if (taskRecord.nextSegment && (!maxDate || maxDate < taskRecord.nextSegment.startDate)) {\n            maxDate = taskRecord.nextSegment.startDate;\n        }\n\n        return (minDate || maxDate) && {\n            start : minDate,\n            end   : maxDate\n        };\n    }\n\n    //endregion\n}\n\nGridFeatureManager.registerFeature(TaskSegmentDrag, true, 'Gantt');\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport EventSegmentResize from '../../SchedulerPro/feature/EventSegmentResize.js';\n\n/**\n * @module Gantt/feature/TaskSegmentResize\n */\n\n/**\n * Feature that allows resizing a task segment by dragging its end.\n *\n * {@inlineexample Gantt/feature/TaskSegments.js}\n *\n * This feature is **enabled** by default.\n *\n * @extends SchedulerPro/feature/EventSegmentResize\n * @classtype taskSegmentResize\n * @feature\n */\nexport default class TaskSegmentResize extends EventSegmentResize {\n\n    //region Events\n\n    /**\n     * Fired on the owning Gantt before resizing starts. Return `false` to prevent the action.\n     * @event beforeTaskSegmentResize\n     * @on-owner\n     * @preventable\n     * @param {Scheduler.view.Scheduler} source Gantt instance\n     * @param {Gantt.model.TaskModel} taskRecord Segment being resized\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record the resize starts within\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Fires on the owning Gantt when event resizing starts\n     * @event taskSegmentResizeStart\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Gantt instance\n     * @param {Gantt.model.TaskModel} taskRecord Segment being resized\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record the resize starts within\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Fires on the owning Gantt on each resize move event\n     * @event taskSegmentPartialResize\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Gantt instance\n     * @param {Gantt.model.TaskModel} taskRecord Segment being resized\n     * @param {Date} startDate\n     * @param {Date} endDate\n     * @param {HTMLElement} element\n     */\n\n    /**\n     * Fired on the owning Scheduler to allow implementer to prevent immediate finalization by setting\n     * `data.context.async = true` in the listener, to show a confirmation popup etc.\n     * ```javascript\n     *  scheduler.on('beforeTaskSegmentResizeFinalize', ({context}) => {\n     *      context.async = true;\n     *      setTimeout(() => {\n     *          // async code don't forget to call finalize\n     *          context.finalize();\n     *      }, 1000);\n     *  })\n     * ```\n     * @event beforeTaskSegmentResizeFinalize\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Object} context\n     * @param {Boolean} context.async Set true to handle resize asynchronously (e.g. to wait for user confirmation)\n     * @param {Function} context.finalize Call this method to finalize resize. This method accepts one argument:\n     *                   pass `true` to update records, or `false`, to ignore changes\n     */\n\n    /**\n     * Fires on the owning Gantt after the resizing gesture has finished.\n     * @event taskSegmentResizeEnd\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Gantt instance\n     * @param {Boolean} changed Shows if the record has been changed by the resize action\n     * @param {Gantt.model.TaskModel} taskRecord Segment being resized\n     */\n\n    //endregion\n\n    //region Config\n\n    static $name = 'TaskSegmentResize';\n\n    static get configurable() {\n        return {\n            draggingItemCls : 'b-sch-event-resizing',\n\n            resizingItemInnerCls : null,\n\n            leftHandle : false\n        };\n    }\n\n    static get pluginConfig() {\n        return {\n            // <remove-on-release>\n            // TODO: have to list all chain entries from parent classes here to just add 2 new entries\n            // </remove-on-release>\n            chain : ['render', 'onEventDataGenerated', 'isTaskElementDraggable', 'isTaskSegmentElementDraggable']\n        };\n    }\n\n    //endregion\n\n    //region Init & destroy\n\n    // Prevent task dragging when it starts over resize handles\n    isTaskElementDraggable(eventElement, eventRecord, el, event) {\n        return this.isEventElementDraggable(...arguments);\n    }\n\n    // Prevent segment dragging when it starts over resize handles\n    isTaskSegmentElementDraggable(eventElement, eventRecord, el, event) {\n        return this.isEventElementDraggable(...arguments);\n    }\n\n    checkValidity() {\n        // Task resize just does basic validity checks which runs the validatorFn\n        return this.basicValidityCheck(...arguments);\n    }\n\n    getBeforeResizeParams(context) {\n        return {};\n    }\n\n    // Injects Gantt specific data into the drag context\n    setupProductResizeContext(context, event) {\n        const\n            gantt      = this.client,\n            taskRecord = gantt.resolveTaskRecord(context.element);\n\n        Object.assign(context, {\n            taskRecord,\n            eventRecord     : taskRecord,\n            dateConstraints : gantt.getDateConstraints?.(taskRecord)\n        });\n    }\n\n    async internalUpdateRecord(context, timespanRecord) {\n        const\n            { client }     = this,\n            { generation } = timespanRecord,\n            {\n                startDate,\n                endDate\n            }              = context,\n            toSet          = { endDate };\n\n        // Fix the duration according to the Entity's rules.\n        context.duration = toSet.duration = timespanRecord.run('calculateProjectedDuration', startDate, endDate);\n\n        // Fix the dragged date point according to the Entity's rules.\n        const value = toSet[context.toSet] = timespanRecord.run('calculateProjectedXDateWithDuration', startDate, true, context.duration);\n\n        // Update the record to its final correct state using *batched changes*\n        // These will *not* be propagated, it's just to force the dragged event bar\n        // into its corrected shape before the real changes which will propagate are applied below.\n        // We MUST do it like this because the final state may not be a net change if the changes\n        // got rejected, and in that case, the engine will not end up firing any change events.\n        timespanRecord.set(toSet);\n\n        // Quit listening for batchedUpdate *before* we cancel the batch so that the\n        // change events from the revert do not update the UI.\n        client.endListeningForBatchedUpdates();\n\n        this.cancelEventRecordBatch(timespanRecord);\n\n        if (this.pinSuccessors && context.event[this.pinSuccessors]) {\n            await timespanRecord.setEndDatePinningSuccessors(value);\n        }\n        else {\n            await timespanRecord.setEndDate(value, false);\n        }\n\n        timespanRecord.endBatch();\n\n        // If the record has been changed\n        return timespanRecord.generation !== generation;\n    }\n\n    get tipId() {\n        return `${this.client.id}-task-segment-resize-tip`;\n    }\n\n    //endregion\n\n}\n\nGridFeatureManager.registerFeature(TaskSegmentResize, true, 'Gantt');\n","import TooltipBase from '../../Scheduler/feature/base/TooltipBase.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\n\n/**\n * @module Gantt/feature/TaskTooltip\n */\n\n/**\n * This feature displays a task tooltip on mouse hover. The template of the tooltip is customizable\n * with the {@link #config-template} function.\n *\n * ## Showing custom HTML in the tooltip\n *```javascript\n * new Gantt({\n *     features : {\n *         taskTooltip : {\n *             template : ({ taskRecord }) => `Tooltip for ${taskRecord.name}`,\n *             // Tooltip configs can be used here\n *             align    : 'l-r' // Align left to right\n *         }\n *     }\n * });\n * ```\n *\n * ## Showing remotely loaded data\n * Loading remote data into the task tooltip is easy. Simply use the {@link #config-template} and return a Promise which yields the content to show.\n * ```javascript\n * new Gantt({\n *     features : {\n *         taskTooltip : {\n *             template : ({ taskRecord }) => AjaxHelper.get(`./fakeServer?name=${taskRecord.name}`).then(response => response.text())\n *         }\n *     }\n * });\n * ```\n *\n * This feature is **enabled** by default.\n *\n * @extends Scheduler/feature/base/TooltipBase\n * @demo Gantt/tooltips\n * @classtype taskTooltip\n * @feature\n */\nexport default class TaskTooltip extends TooltipBase {\n\n    static get $name() {\n        return 'TaskTooltip';\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Template (a function accepting task data and returning a string) used to display info in the tooltip.\n             * The template will be called with an object as with fields as detailed below\n             * @param {Object} data\n             * @param {Gantt.model.TaskModel} data.taskRecord\n             * @param {String} data.startClockHtml\n             * @param {String} data.endClockHtml\n             * @config {Function} template\n             */\n            template(data) {\n                const\n                    me              = this,\n                    { taskRecord }  = data,\n                    displayDuration = me.client.formatDuration(taskRecord.duration, me.decimalPrecision);\n\n                return `\n                    ${taskRecord.name ? `<div class=\"b-gantt-task-title\">${StringHelper.encodeHtml(taskRecord.name)}</div>` : ''}\n                    <table>\n                    <tr><td>${me.L('L{Start}')}:</td><td>${data.startClockHtml}</td></tr>\n                    ${taskRecord.milestone ? '' : `\n                        <tr><td>${me.L('L{End}')}:</td><td>${data.endClockHtml}</td></tr>\n                        <tr><td>${me.L('L{Duration}')}:</td><td class=\"b-right\">${displayDuration} ${DateHelper.getLocalizedNameOfUnit(taskRecord.durationUnit, taskRecord.duration !== 1)}</td></tr>\n                        <tr><td>${me.L('L{Complete}')}:</td><td class=\"b-right\">${taskRecord.renderedPercentDone}%</td></tr>\n                    `}\n                    </table>                 \n                `;\n            },\n\n            /**\n             * Precision of displayed duration, defaults to use {@link Gantt.view.Gantt#config-durationDisplayPrecision}.\n             * Specify an integer value to override that setting, or `false` to use raw value\n             * @member {Number|Boolean} decimalPrecision\n             */\n            /**\n             * Precision of displayed duration, defaults to use {@link Gantt.view.Gantt#config-durationDisplayPrecision}.\n             * Specify an integer value to override that setting, or `false` to use raw value\n             * @config {Number|Boolean}\n             */\n            decimalPrecision : null,\n\n            cls : 'b-gantt-task-tooltip',\n\n            monitorRecordUpdate : true\n        };\n    }\n}\n\nGridFeatureManager.registerFeature(TaskTooltip, true, 'Gantt');\n","import GridTreeGroup from '../../Grid/feature/TreeGroup.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport WalkHelper from '../../Core/helper/WalkHelper.js';\nimport Delayable from '../../Core/mixin/Delayable.js';\nimport AttachToProjectMixin from '../../Scheduler/data/mixin/AttachToProjectMixin.js';\n\n/**\n * @module Gantt/feature/TreeGroup\n */\n\n/**\n * Extends Grid's {@link Grid.feature.TreeGroup} (follow the link for more info) feature to enable using it with Gantt.\n * Allows generating a new task tree where parents are determined by the values of specified task fields/functions:\n *\n * {@inlineexample Gantt/feature/TreeGroup.js}\n *\n * ## Important information\n *\n * Using the TreeGroup feature comes with some caveats:\n *\n * * Grouping replaces the store Gantt uses to display tasks with a temporary \"display store\". The original task store\n *   is left intact, when grouping stops Gantt will revert to using it to display tasks.\n * * `gantt.taskStore` points to the original store when this feature is enabled. To apply sorting or filtering programmatically, you should instead interact with the \"display store\" directly, using `gantt.store`.\n * * Generated parents are read-only, they cannot be edited using the default UI.\n * * Leaves in the new tree are still editable as usual, and any changes to them survives the grouping operation.\n * * Moving tasks in the tree (rearranging rows) is not supported while it is grouped.\n *\n * This feature is <strong>disabled</strong> by default.\n *\n * @extends Grid/feature/TreeGroup\n *\n * @classtype treeGroup\n * @feature\n *\n * @typings Grid.feature.TreeGroup -> Grid.feature.GridTreeGroup\n */\nexport default class TreeGroup extends GridTreeGroup.mixin(AttachToProjectMixin, Delayable) {\n\n    static $name = 'TreeGroup';\n\n    static delayable = {\n        refresh : 'raf'\n    };\n\n    updateParents(root) {\n        // Since generated parents are not part of the project we have to manually set their dates etc. Walk them all\n        // (since they are generated we are guaranteed there is no mix of parents and leaves at any give level), and\n        // determine those\n        root.children?.length && WalkHelper.postWalk(root, task => !task.children?.[0].isLeaf && task.children, task => {\n            const { children } = task;\n\n            let minStartDate = children[0].startDate,\n                maxEndDate   = children[0].endDate,\n                percentDone  = 0;\n\n            for (const child of children) {\n                if (child.startDate) {\n                    minStartDate = Math.min(child.startDate, minStartDate || Number.MAX_SAFE_INTEGER);\n                }\n                if (child.endDate) {\n                    maxEndDate   = Math.max(child.endDate, maxEndDate);\n                }\n                percentDone += child.percentDone;\n            }\n\n            task.startDate = new Date(minStartDate);\n            task.endDate = new Date(maxEndDate);\n            task.duration = this.client.project.taskStore.rootNode.run('calculateProjectedDuration', task.startDate, task.endDate);\n            task.percentDone = percentDone / children.length;\n        });\n    }\n\n    // Generate dates etc. for parents during grouping\n    processTransformedData(transformedData) {\n        this.updateParents(transformedData);\n    }\n\n    // Update dates etc. for parents when a task is changed\n    onTaskStoreChange({ action, records }) {\n        const { client } = this;\n        if (client.isTreeGrouped && records.some(r => r.isLeaf) && action !== 'dataset') {\n            client.suspendRefresh();\n            this.updateParents(client.store.rootNode);\n            client.resumeRefresh();\n\n            this.refresh();\n        }\n    }\n\n    refresh() {\n        this.client.refreshWithTransition();\n    }\n\n    // Add task store listener when grouping, to catch task changes and update parents\n    async applyLevels(levels) {\n        // Detach prior to applying new levels, to avoid triggering old listeners in case tasks are affected\n        // (they should not be, locked down in test, but just in case)\n        this.detachListeners('taskStore');\n\n        await super.applyLevels(levels);\n\n        if (this.isDestroyed) {\n            return;\n        }\n\n        if (levels?.length > 0) {\n            // In case a 2nd called came here before a prior one completing\n            this.detachListeners('taskStore');\n\n            this.client.taskStore.ion({\n                name    : 'taskStore',\n                change  : 'onTaskStoreChange',\n                thisObj : this\n            });\n        }\n    }\n}\n\nGridFeatureManager.registerFeature(TreeGroup, false, 'Gantt');\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport TaskModel from '../model/TaskModel.js';\nimport SchedulerProVersions from '../../SchedulerPro/feature/Versions.js';\n\n/**\n * @module Gantt/feature/Versions\n */\n\n/**\n * Captures versions (snapshots) of the active project, including a detailed log of the changes new in each version.\n *\n * When active, the feature monitors the project for changes and appends them to the changelog. When a version is captured,\n * the version will consist of a complete snapshot of the project data at the time of the capture, in addition to the list\n * of changes in the changelog that have occurred since the last version was captured.\n *\n * For information about the data structure representing a version and how to persist it, see {@link SchedulerPro.model.VersionModel}.\n *\n * For information about the data structures representing the changelog and how to persist them, see\n * {@link SchedulerPro.model.changelog.ChangeLogTransactionModel}.\n *\n * This feature is **off** by default. For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         versions : true\n *     }\n * });\n * ```\n *\n * To display versions and their changes, use a {@link SchedulerPro.widget.VersionGrid} configured with a {@link Gantt.model.ProjectModel}.\n *\n * {@inlineexample Gantt/guides/whats-new/5.3.0/versions.js}\n *\n * See also:\n * - {@link SchedulerPro.model.VersionModel} A stored version of a ProjectModel, captured at a point in time, with change log\n * - {@link SchedulerPro.model.changelog.ChangeLogTransactionModel} The set of add/remove/update actions that occurred in response to a user action\n * - {@link SchedulerPro.widget.VersionGrid} Widget for displaying a project's versions and changes\n *\n * @extends SchedulerPro/feature/Versions\n * @classType versions\n * @feature\n *\n * @typings SchedulerPro.feature.Versions -> SchedulerPro.feature.SchedulerProVersions\n */\nexport default class GanttVersions extends SchedulerProVersions {\n\n    static $name = 'Versions';\n\n    static configurable = {\n\n        /**\n         * The set of Model types whose subtypes should be recorded as the base type in the change log. For example,\n         * by default if a subclassed TaskModelEx exists and an instance of one is updated, it will be recorded in the\n         * changelog as a TaskModel.\n         * @config {Array}\n         * @default [TaskModel, AssignmentModel, DependencyModel, ResourceModel]\n         */\n        knownBaseTypes : [TaskModel, ...SchedulerProVersions.configurable.knownBaseTypes]\n    };\n\n    construct(gantt, config) {\n        super.construct(gantt, config);\n        gantt.ion({\n            taskMenuItem : ({ item, selection }) => {\n                const\n                    me         = this,\n                    isMultiple = selection.length > 1;\n                if (item.ref === 'deleteTask') {\n                    me.transactionDescription = isMultiple ? me.L('L{Versions.deletedTasks}')\n                        : me.L('L{Versions.deletedTask}');\n                }\n                else if (item.ref === 'indent') {\n                    me.transactionDescription = me.L('L{Versions.indented}');\n                }\n                else if (item.ref === 'outdent') {\n                    me.transactionDescription = me.L('L{Versions.outdented}');\n                }\n                else if (item.ref === 'cut') {\n                    me.transactionDescription = me.L('L{Versions.cut}');\n                }\n                else if (item.ref === 'paste') {\n                    me.transactionDescription = me.L('L{Versions.pasted}');\n                }\n            }\n        });\n    }\n}\n\nGridFeatureManager.registerFeature(GanttVersions, false, 'Gantt');\n","import Rectangle from '../../../../Core/helper/util/Rectangle.js';\nimport DomHelper from '../../../../Core/helper/DomHelper.js';\nimport DomSync from '../../../../Core/helper/DomSync.js';\n\n// This value is actually defined in CSS for the Gantt as a height for wrap element when baseline is active. Ideally\n// we should link it to the style\nconst BASELINE_RATIO = 0.4;\n\n/**\n * This mixin overrides event elements handling in similar scheduler mixin. Uses correct element class names and\n * resolves elements in gantt-way.\n * @private\n */\nexport default base => class GanttExporterMixin extends base {\n    async prepareComponent(config) {\n        await super.prepareComponent(config);\n\n        const\n            me             = this,\n            // Clear cloned gantt element from task elements\n            fgCanvasEl     = me.element.querySelector('.b-sch-foreground-canvas');\n\n        DomHelper.removeEachSelector(fgCanvasEl, '.b-gantt-task-wrap');\n        DomHelper.removeEachSelector(fgCanvasEl, '.b-released');\n    }\n\n    collectEvents(rows, config) {\n        const\n            me         = this,\n            addedRows  = rows.length,\n            { client } = config,\n            normalRows = me.exportMeta.subGrids.normal.rows;\n\n        rows.forEach((row, index) => {\n            const\n                rowConfig = normalRows[normalRows.length - addedRows + index],\n                event     = client.store.getAt(row.dataIndex),\n                eventsMap = rowConfig[3];\n\n            if (event.isScheduled) {\n                const el = client.getElementFromTaskRecord(event, false);\n\n                if (el && !eventsMap.has(event.id)) {\n                    eventsMap.set(event.id, [el.outerHTML, Rectangle.from(el.firstChild, el.offsetParent)]);\n                }\n            }\n        });\n    }\n\n    renderEvents(config, rows) {\n        const\n            me              = this,\n            { client }      = config,\n            renderBaselines = client.hasActiveFeature('baselines'),\n            normalRows      = me.exportMeta.subGrids.normal.rows;\n\n        // Unlike Scheduler Gantt calculates elements and boxes for dependencies from the index of the record in the\n        // store. Upside is that it allows to correctly estimate position of the task which is outside of the view.\n        // Downside is that we will have to either move every single element or the entire canvas up by the difference\n        // between first row we rendered and estimated vertical position\n        const offset = me.exportMeta.topRowOffset = rows[0].top - rows[0].dataIndex * rows[0].offsetHeight;\n\n        rows.forEach((row, index) => {\n            const\n                rowConfig  = normalRows[index],\n                eventsMap  = rowConfig[3],\n                record     = client.store.getAt(row.dataIndex),\n                renderData = client.currentOrientation.getTaskRenderData(row, record),\n                { taskId } = renderData;\n\n            renderData.top += offset;\n\n            // If task\n            if (renderData.isTask) {\n                const\n                    taskDOMConfig   = client.currentOrientation.getTaskDOMConfig(renderData),\n                    targetElement   = document.createElement('div'),\n                    { isMilestone } = record,\n                    hasBaselines    = record.baselines.count;\n\n                DomSync.sync({\n                    targetElement,\n                    domConfig : taskDOMConfig\n                });\n\n                let { left, top, width, height } = renderData;\n\n                // for milestone, we need to adjust left coordinate by half height(width)\n                if (isMilestone) {\n                    left = left - height / 2;\n                    width = height;\n                }\n\n                eventsMap.set(taskId, [\n                    targetElement.outerHTML,\n                    new Rectangle(left, top, width, height * (renderBaselines && hasBaselines ? BASELINE_RATIO : 1)), []\n                ]);\n            }\n\n            if (renderData.extraConfigs.length) {\n                const\n                    targetElement = document.createElement('div'),\n                    extrasArray   = [];\n\n                for (const domConfig of renderData.extraConfigs) {\n                    DomSync.sync({\n                        targetElement,\n                        domConfig\n                    });\n\n                    extrasArray.push(targetElement.outerHTML);\n                }\n\n                if (!eventsMap.has(taskId)) {\n                    eventsMap.set(taskId, ['', null, []]);\n                }\n\n                eventsMap.get(taskId)[2] = extrasArray;\n            }\n        });\n    }\n\n    getEventBox(event) {\n        if (!event) {\n            return;\n        }\n\n        let result = this.exportMeta.eventsBoxes.get(String(event.id));\n\n        // If task is not rendered we need to estimate its position\n        if (!result) {\n            const\n                { client }     = this.exportMeta,\n                startX         = client.getCoordinateFromDate(event.startDate),\n                endX           = client.getCoordinateFromDate(event.endDate),\n                { rows }       = this.exportMeta.subGrids.normal,\n                [\n                    firstRowHTML,\n                    firstRowTop,\n                    height\n                ]              = rows[0],\n                [, lastRowTop] = rows[rows.length - 1],\n                // take data index from html\n                firstRowIndex  = parseInt(firstRowHTML.match(/data-index=\"(\\d+)?\"/)[1]),\n                taskIndex      = client.taskStore.indexOf(event),\n                estimatedY     = taskIndex < firstRowIndex ? firstRowTop - height : lastRowTop + height;\n\n            result = new Rectangle(startX, estimatedY, endX - startX, height);\n        }\n\n        return result;\n    }\n};\n","import SchedulerMultiPageExporter from '../../../../Scheduler/feature/export/exporter/MultiPageExporter.js';\nimport GanttExporterMixin from './GanttExporterMixin.js';\n\n/**\n * @module Gantt/feature/export/exporter/MultiPageExporter\n */\n\n/**\n * A multiple page exporter. Used by the {@link Gantt.feature.export.PdfExport} feature to export to multiple pages. You\n * do not need to use this class directly.\n *\n * ### Extending exporter\n *\n * ```javascript\n * class MyMultiPageExporter extends MultiPageExporter {\n *     // type is required for exporter\n *     static get type() {\n *         return 'mymultipageexporter';\n *     }\n *\n *     get stylesheets() {\n *         const stylesheets = super.stylesheets;\n *\n *         stylesheets.forEach(styleNodeOrLinkTag => doSmth(styleNodeOrLinkTag))\n *\n *         return stylesheets;\n *     }\n * }\n *\n * const gantt = new Gantt({\n *     features : {\n *         pdfExport : {\n *             // this export feature is configured with only one exporter\n *             exporters : [MyMultiPageExporter]\n *         }\n *     }\n * });\n *\n * // run export with the new exporter\n * gantt.features.pdfExport.export({ exporter : 'mymultipageexporter' });\n * ```\n *\n * @classType multipage\n * @feature\n * @extends Scheduler/feature/export/exporter/MultiPageExporter\n *\n * @typings Scheduler.feature.export.exporter.MultiPageExporter -> Scheduler.feature.export.exporter.SchedulerMultiPageExporter\n */\nexport default class MultiPageExporter extends GanttExporterMixin(SchedulerMultiPageExporter) {\n\n    static get $name() {\n        return 'MultiPageExporter';\n    }\n\n    static get type() {\n        return 'multipage';\n    }\n\n}\n","import SchedulerMultiPageVerticalExporter from '../../../../Scheduler/feature/export/exporter/MultiPageVerticalExporter.js';\nimport GanttExporterMixin from './GanttExporterMixin.js';\n\n/**\n * @module Gantt/feature/export/exporter/MultiPageVerticalExporter\n */\n\n/**\n * A vertical multiple page exporter. Used by the {@link Gantt.feature.export.PdfExport} feature to export to multiple\n * pages. Content will be scaled in a horizontal direction to fit the page.\n *\n * You do not need to use this class directly.\n *\n * ### Extending exporter\n *\n * ```javascript\n * class MyMultiPageVerticalExporter extends MultiPageVerticalExporter {\n *     // type is required for exporter\n *     static get type() {\n *         return 'mymultipageverticalexporter';\n *     }\n *\n *     get stylesheets() {\n *         const stylesheets = super.stylesheets;\n *\n *         stylesheets.forEach(styleNodeOrLinkTag => doSmth(styleNodeOrLinkTag))\n *\n *         return stylesheets;\n *     }\n * }\n *\n * const gantt = new Gantt({\n *     features : {\n *         pdfExport : {\n *             // this export feature is configured with only one exporter\n *             exporters : [MyMultiPageVerticalExporter]\n *         }\n *     }\n * });\n *\n * // run export with the new exporter\n * gantt.features.pdfExport.export({ exporter : 'mymultipageverticalexporter' });\n * ```\n *\n * @classType multipagevertical\n * @feature\n * @extends Scheduler/feature/export/exporter/MultiPageVerticalExporter\n *\n * @typings Scheduler.feature.export.exporter.MultiPageVerticalExporter -> Scheduler.feature.export.exporter.SchedulerMultiPageVerticalExporter\n */\nexport default class MultiPageVerticalExporter extends GanttExporterMixin(SchedulerMultiPageVerticalExporter) {\n\n    static get $name() {\n        return 'MultiPageVerticalExporter';\n    }\n\n    static get type() {\n        return 'multipagevertical';\n    }\n}\n","import SchedulerSinglePageExporter from '../../../../Scheduler/feature/export/exporter/SinglePageExporter.js';\nimport GanttExporterMixin from './GanttExporterMixin.js';\n\n/**\n * @module Gantt/feature/export/exporter/SinglePageExporter\n */\n\n/**\n * A single page exporter. Used by the {@link Gantt.feature.export.PdfExport} feature to export to single page. Content\n * will be scaled in both directions to fit the page.\n *\n * You do not need to use this class directly.\n *\n * ### Extending exporter\n *\n * ```javascript\n * class MySinglePageExporter extends SinglePageExporter {\n *     // type is required for exporter\n *     static get type() {\n *         return 'mysinglepageexporter';\n *     }\n *\n *     get stylesheets() {\n *         const stylesheets = super.stylesheets;\n *\n *         stylesheets.forEach(styleNodeOrLinkTag => doSmth(styleNodeOrLinkTag))\n *\n *         return stylesheets;\n *     }\n * }\n *\n * const gantt = new Gantt({\n *     features : {\n *         pdfExport : {\n *             // this export feature is configured with only one exporter\n *             exporters : [MySinglePageExporter]\n *         }\n *     }\n * });\n *\n * // run export with the new exporter\n * gantt.features.pdfExport.export({ exporter : 'mysinglepageexporter' });\n * ```\n *\n * @classType singlepage\n * @feature\n * @extends Scheduler/feature/export/exporter/SinglePageExporter\n *\n * @typings Scheduler.feature.export.exporter.SinglePageExporter -> Scheduler.feature.export.exporter.SchedulerSinglePageExporter\n */\nexport default class SinglePageExporter extends GanttExporterMixin(SchedulerSinglePageExporter) {\n\n    static get $name() {\n        return 'SinglePageExporter';\n    }\n\n    static get type() {\n        return 'singlepage';\n    }\n\n}\n","import SchedulerPdfExport from '../../../Scheduler/feature/export/PdfExport.js';\nimport SinglePageExporter from './exporter/SinglePageExporter.js';\nimport MultiPageExporter from './exporter/MultiPageExporter.js';\nimport MultiPageVerticalExporter from './exporter/MultiPageVerticalExporter.js';\nimport GridFeatureManager from '../../../Grid/feature/GridFeatureManager.js';\n\n/**\n * @module Gantt/feature/export/PdfExport\n */\n\n/**\n * Generates PDF/PNG files from the Gantt component.\n *\n * <img src=\"Gantt/gantt-export-dialog.png\" style=\"max-width : 300px\" alt=\"Gantt Export dialog\">\n *\n * **NOTE:** Server side is required to make export work!\n *\n * Check out PDF Export Server documentation and installation steps [here](https://github.com/bryntum/pdf-export-server#pdf-export-server)\n *\n * When your server is up and running, it listens to requests. The Export feature sends a request to the specified URL\n * with the HTML fragments. The server generates a PDF (or PNG) file and returns a download link (or binary, depending\n * on {@link #config-sendAsBinary} config). Then the Export feature opens the link in a new tab and the file is\n * automatically downloaded by your browser. This is configurable, see {@link #config-openAfterExport} config.\n *\n * The {@link #config-exportServer} URL must be configured. The URL can be localhost if you start the server locally,\n * or your remote server address.\n *\n * ## Usage\n *\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         pdfExport : {\n *             exportServer : 'http://localhost:8080' // Required\n *         }\n *     }\n * })\n *\n * // Opens popup allowing to customize export settings\n * gantt.features.pdfExport.showExportDialog();\n *\n * // Simple export\n * gantt.features.pdfExport.export({\n *     // Required, set list of column ids to export\n *     columns : gantt.columns.map(c => c.id)\n * }).then(result => {\n *     // Response instance and response content in JSON\n *     let { response, responseJSON } = result;\n * });\n * ```\n *\n * ## Configuring the export dialog\n *\n * To learn about how to customize the export dialog and its default widgets, please refer to the\n * {@link Scheduler.view.export.SchedulerExportDialog} which provides a 'ref' identifier for each child widget so that\n * you can customize them all based on your requirements.\n *\n * ## Loading resources\n *\n * If you face a problem with loading resources when exporting, the cause might be that the application and the export server are hosted on different servers.\n * This is due to [Cross-Origin Resource Sharing](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) (CORS). There are 2 options how to handle this:\n * - Allow cross-origin requests from the server where your export is hosted to the server where your application is hosted;\n * - Copy all resources keeping the folder hierarchy from the server where your application is hosted to the server where your export is hosted\n * and setup paths using {@link Grid.feature.export.PdfExport#config-translateURLsToAbsolute} config and configure the export server to give access to the path:\n *\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         pdfExport : {\n *             exportServer : 'http://localhost:8080',\n *             // '/resources' is hardcoded in WebServer implementation\n *             translateURLsToAbsolute : 'http://localhost:8080/resources'\n *         }\n *     }\n * })\n * ```\n *\n * ```javascript\n * // Following path would be served by this address: http://localhost:8080/resources/\n * node ./src/server.js -h 8080 -r web/application/styles\n * ```\n *\n * where `web/application/styles` is the physical root location of the copied resources, for example:\n *\n * <img src=\"Grid/export-server-resources.png\" style=\"max-width : 500px\" alt=\"Export server structure with copied resources\" />\n *\n * @classtype pdfExport\n *\n * @extends Scheduler/feature/export/PdfExport\n * @feature\n *\n * @typings Scheduler.feature.export.PdfExport -> Scheduler.feature.export.SchedulerPdfExport\n */\nexport default class PdfExport extends SchedulerPdfExport {\n    static get $name() {\n        return 'PdfExport';\n    }\n\n    static get defaultConfig() {\n        return {\n            exporters : [SinglePageExporter, MultiPageExporter, MultiPageVerticalExporter]\n        };\n    }\n}\n\nGridFeatureManager.registerFeature(PdfExport, false, 'Gantt');\n","import SchedulerProCalendarIntervalModel from '../../SchedulerPro/model/CalendarIntervalModel.js';\n\n/**\n * @module Gantt/model/CalendarIntervalModel\n */\n\n/**\n * This class represents a calendar interval in the Gantt calendar.\n * Every interval can be either recurrent (regularly repeating in time) or static.\n *\n * Please refer to the [calendars guide](#Gantt/guides/basics/calendars.md) for details\n *\n * @extends SchedulerPro/model/CalendarIntervalModel\n *\n * @typings SchedulerPro.model.CalendarIntervalModel -> SchedulerPro.model.SchedulerProCalendarIntervalModel\n */\nexport default class CalendarIntervalModel extends SchedulerProCalendarIntervalModel {}\n","import Model from '../../Core/data/Model.js';\nimport Store from '../../Core/data/Store.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport { GanttProjectMixin, ProjectConstraintInterval } from '../../Engine/quark/model/gantt/GanttProjectMixin.js';\nimport ProjectModelTimeZoneMixin from '../../Scheduler/model/mixin/ProjectModelTimeZoneMixin.js';\nimport { DateConstraintInterval } from '../../Engine/quark/model/scheduler_pro/HasDateConstraintMixin.js';\nimport { DependencyConstraintInterval } from '../../Engine/quark/model/scheduler_pro/ScheduledByDependenciesEarlyEventMixin.js';\nimport TimeSpan from '../../Scheduler/model/TimeSpan.js';\nimport ProjectCurrentConfig from '../../Scheduler/model/mixin/ProjectCurrentConfig.js';\nimport ProjectModelCommon from '../../Scheduler/model/mixin/ProjectModelCommon.js';\nimport ProjectCrudManager from '../../SchedulerPro/data/mixin/ProjectCrudManager.js';\nimport ProjectChangeHandlerMixin from '../../SchedulerPro/model/mixin/ProjectChangeHandlerMixin.js';\nimport AssignmentStore from '../data/AssignmentStore.js';\nimport CalendarManagerStore from '../data/CalendarManagerStore.js';\nimport DependencyStore from '../data/DependencyStore.js';\nimport ResourceStore from '../data/ResourceStore.js';\nimport TaskStore from '../data/TaskStore.js';\nimport AssignmentModel from './AssignmentModel.js';\nimport CalendarModel from './CalendarModel.js';\nimport DependencyModel from './DependencyModel.js';\nimport ResourceModel from './ResourceModel.js';\nimport TaskModel from './TaskModel.js';\nimport StateTrackingManager from '../../SchedulerPro/data/stm/StateTrackingManager.js';\n\n/**\n * @module Gantt/model/ProjectModel\n */\n\n/**\n * This class represents a global project of your Project plan or Gantt - a central place for all data.\n *\n * It holds and links the stores usually used by Gantt:\n *\n * - {@link Gantt/data/TaskStore}\n * - {@link Gantt/data/ResourceStore}\n * - {@link Gantt/data/AssignmentStore}\n * - {@link Gantt/data/DependencyStore}\n * - {@link Gantt/data/CalendarManagerStore}\n * - {@link #config-timeRangeStore TimeRangeStore}\n *\n * The project uses a scheduling engine to calculate dates, durations and such. It is also responsible for\n * handling references between models, for example to link an task via an assignment to a resource. These operations\n * are asynchronous, a fact that is hidden when working in the Gantt UI but which you must know about when performing\n * operations on the data level.\n *\n * When there is a change to data that requires something else to be recalculated, the project schedules a calculation\n * (a commit) which happens moments later. It is also possible to trigger these calculations directly. This flow\n * illustrates the process:\n *\n * 1. Something changes which requires the project to recalculate, for example adding a new task:\n *\n * ```javascript\n * const [task] = project.taskStore.add({ startDate, endDate });\n * ```\n *\n * 2. A recalculation is scheduled, thus:\n *\n * ```javascript\n * task.duration; // <- Not yet calculated\n * ```\n *\n * 3. Calculate now instead of waiting for the scheduled calculation\n *\n * ```javascript\n * await project.commitAsync();\n *\n * task.duration; // <- Now available\n * ```\n *\n * Please refer to [this guide](#Gantt/guides/data/project_data.md) for more information.\n *\n * ## Built in CrudManager\n *\n * Gantt's project has a {@link Scheduler/crud/AbstractCrudManagerMixin CrudManager} built in. Using it is the recommended way of\n * syncing data between Gantt and a backend. Example usage:\n *\n * ```javascript\n * const gantt = new Gantt({\n *     project : {\n *         // Configure urls used by the built in CrudManager\n *         transport : {\n *             load : {\n *                 url : 'php/load.php'\n *             },\n *             sync : {\n *                 url : 'php/sync.php'\n *             }\n *         }\n *     }\n * });\n *\n * // Load data from the backend\n * gantt.project.load()\n * ```\n *\n * For more information on CrudManager, see Schedulers docs on {@link Scheduler/data/CrudManager}.\n * For a detailed description of the protocol used by CrudManager, please see the\n * [Crud manager guide](#Gantt/guides/data/crud_manager.md)\n *\n * You can access the current Project data changes anytime using the {@link #property-changes} property.\n *\n * ## Working with inline data\n *\n * The project provides an {@link #property-inlineData} getter/setter that can\n * be used to manage data from all Project stores at once. Populating the stores this way can\n * be useful if you do not want to use the CrudManager for server communication but instead load data using Axios\n * or similar.\n *\n * ### Getting data\n * ```javascript\n * const data = gantt.project.inlineData;\n *\n * // use the data in your application\n * ```\n *\n * ### Setting data\n * ```javascript\n * // Get data from server manually\n * const data = await axios.get('/project?id=12345');\n *\n * // Feed it to the project\n * gantt.project.inlineData = data;\n * ```\n *\n * See also {@link #function-loadInlineData}\n *\n * ### Getting changed records\n *\n * You can access the changes in the current Project dataset anytime using the {@link #property-changes} property. It\n * returns an object with all changes:\n *\n * ```javascript\n * const changes = project.changes;\n *\n * console.log(changes);\n *\n * > {\n *   tasks : {\n *       updated : [{\n *           name : 'My task',\n *           id   : 12\n *       }]\n *   },\n *   assignments : {\n *       added : [{\n *           event      : 12,\n *           resource   : 7,\n *           units      : 100,\n *           $PhantomId : 'abc123'\n *       }]\n *     }\n * };\n * ```\n *\n * ## Monitoring data changes\n *\n * While it is possible to listen for data changes on the projects individual stores, it is sometimes more convenient\n * to have a centralized place to handle all data changes. By listening for the {@link #event-change change event} your\n * code gets notified when data in any of the stores changes. Useful for example to keep an external data model up to\n * date:\n *\n * ```javascript\n * const gantt = new Gantt({\n *     project: {\n *         listeners : {\n *             change({ store, action, records }) {\n *                 const { $name } = store.constructor;\n *\n *                 if (action === 'add') {\n *                     externalDataModel.add($name, records);\n *                 }\n *\n *                 if (action === 'remove') {\n *                     externalDataModel.remove($name, records);\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * ## Processing the data loaded from the server\n *\n * If you want to process the data received from the server after loading, you can use\n * the {@link #event-beforeLoadApply} or {@link #event-beforeSyncApply} events:\n *\n * ```javascript\n * const gantt = new Gantt({\n *     project: {\n *         listeners : {\n *             beforeLoadApply({ response }) {\n *                 // do something with load-response object before it is provided to all the project stores\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * ## Built in StateTrackingManager\n *\n * The project also has a built in {@link Core/data/stm/StateTrackingManager} (STM for short), that\n * handles undo/redo for the project stores (additional stores can also be added). By default, it is only used while\n * editing tasks using the task editor, the editor updates tasks live and uses STM to rollback changes if canceled. But\n * you can enable it to track all project store changes:\n *\n * ```javascript\n * // Enable automatic transaction creation and start recording\n * project.stm.autoRecord = true;\n * project.stm.enable();\n *\n * // Undo a transaction\n * project.stm.undo();\n *\n * // Redo\n * project.stm.redo();\n * ```\n *\n * Check out the `undoredo` demo to see it in action.\n *\n * @extends Core/data/Model\n *\n * @mixes SchedulerPro/data/mixin/ProjectCrudManager\n * @mixes SchedulerPro/model/mixin/ProjectChangeHandlerMixin\n * @mixes Core/mixin/Events\n * @mixes Scheduler/model/mixin/ProjectModelTimeZoneMixin\n *\n * @typings SchedulerPro.model.ProjectModel -> SchedulerPro.model.SchedulerProProjectModel\n */\nexport default class ProjectModel extends GanttProjectMixin.derive(Model).mixin(\n    ProjectChangeHandlerMixin,\n    ProjectCurrentConfig,\n    ProjectCrudManager,\n    ProjectModelTimeZoneMixin,\n    ProjectModelCommon\n) {\n    //region Config\n\n    static $name = 'ProjectModel';\n\n    /**\n     * @hidefields id, readOnly, children, parentId, parentIndex\n     */\n\n    /**\n     * Silences propagations caused by the project loading.\n     *\n     * Applying the loaded data to the project occurs in two basic stages:\n     *\n     * 1. Data gets into the engine graph which triggers changes propagation\n     * 2. The changes caused by the propagation get written to related stores\n     *\n     * Setting this flag to `true` makes the component perform step 2 silently without triggering events causing reactions on those changes\n     * (like sending changes back to the server if `autoSync` is enabled) and keeping stores in unmodified state.\n     *\n     * This is safe if the loaded data is consistent so propagation doesn't really do any adjustments.\n     * By default the system treats the data as consistent so this option is `true`.\n     *\n     * ```javascript\n     * new Gantt({\n     *     project : {\n     *         // We want scheduling engine to recalculate the data properly\n     *         // so then we could save it back to the server\n     *         silenceInitialCommit : false,\n     *         ...\n     *     }\n     *     ...\n     * })\n     * ```\n     *\n     * @config {Boolean} silenceInitialCommit\n     * @default true\n     * @category Advanced\n     */\n\n    /**\n     * Maximum range the project calendars can iterate.\n     * The value is defined in milliseconds and by default equals `5 years` roughly.\n     * ```javascript\n     * new Gantt({\n     *     project : {\n     *         // adjust calendar iteration limit to 10 years roughly:\n     *         // 10 years expressed in ms\n     *         maxCalendarRange : 10 * 365 * 24 * 3600000,\n     *         ...\n     *     }\n     * });\n     * ```\n     * @config {Number} maxCalendarRange\n     * @default 157680000000\n     * @category Advanced\n     */\n\n    /**\n     * When `true` the project manually scheduled tasks will adjust their proposed start/end dates\n     * to skip non working time.\n     *\n     * @field {Boolean} skipNonWorkingTimeWhenSchedulingManually\n     * @default false\n     */\n\n    /**\n     * This config manages DST correction in the scheduling engine. It only has effect when DST transition hour is\n     * working time. Usually DST transition occurs on Sunday, so with non working weekends the DST correction logic\n     * is not involved.\n     *\n     * If **true**, it will add/remove one hour when calculating duration from start/end dates. For example:\n     * Assume weekends are working and on Sunday, 2020-10-25 at 03:00 clocks are set back 1 hour. Assume there is a task:\n     *\n     * ```javascript\n     * {\n     *     startDate    : '2020-10-20',\n     *     duration     : 10,\n     *     durationUnit : 'day'\n     * }\n     * ```\n     * It will end on 2020-10-29 23:00. Because of the DST transition Sunday is actually 25 hours long and when the\n     * Gantt project calculates the end date it converts days to hours multiplying by 24. If you're setting duration\n     * and want task to end on the end of the day you should manually correct for DST, like so:\n     *\n     * ```javascript\n     * {\n     *     startDate    : '2020-10-20',\n     *     duration     : 10 * 24 + 1,\n     *     durationUnit : 'hour'\n     * },\n     * ```\n     *\n     * If task has start and end dates it will correct for DST twice:\n     *\n     * ```javascript\n     * {\n     *     startDate    : '2020-10-20',\n     *     endDate      : '2020-10-30'\n     * }\n     * ```\n     * This task will end on 2020-10-29 22:00 which is a known quirk.\n     *\n     * If **false**, the Gantt project will not add DST correction which fixes the quirk mentioned above and such task\n     * will end on 2020-10-30 exactly, having hours duration of 10 days * 24 hours + 1 hour.\n     *\n     * Also, for this task days duration will be a floating point number due to extra (or missing) hour:\n     *\n     * ```javascript\n     * task.getDuration('day')  // 10.041666666666666\n     * task.getDuration('hour') // 241\n     * ```\n     *\n     * @config {Boolean} adjustDurationToDST\n     * @default false\n     * @category Advanced\n     */\n    // <remove-on-release>\n    // TODO: This config is introduced only to make behavior transition smooth. If nobody complains about it for\n    //  a couple of releases, it should be removed\n    // </remove-on-release>\n\n    /**\n     * Set to `true` to enable calculation progress notifications.\n     * When enabled, the project fires {@link #event-progress} events and the Gantt chart load mask reacts by showing a progress bar for the Engine calculations.\n     *\n     * **Note**: Enabling progress notifications will impact calculation performance, since it needs to pause calculations to allow the UI to redraw.\n     *\n     * @config {Boolean} enableProgressNotifications\n     * @category Advanced\n     */\n    /**\n     * Enables/disables the calculation progress notifications.\n     * @member {Boolean} enableProgressNotifications\n     * @category Advanced\n     */\n\n    /**\n     * Returns current Project changes as an object consisting of added/modified/removed arrays of records for every\n     * managed store. Returns `null` if no changes exist. Format:\n     *\n     * ```javascript\n     * {\n     *     resources : {\n     *         added    : [{ name : 'New guy' }],\n     *         modified : [{ id : 2, name : 'Mike' }],\n     *         removed  : [{ id : 3 }]\n     *     },\n     *     events : {\n     *         modified : [{  id : 12, name : 'Cool task' }]\n     *     },\n     *     ...\n     * }\n     * ```\n     *\n     * @member {Object} changes\n     * @readonly\n     * @category Models & Stores\n     */\n\n    // region Events\n\n    /**\n     * Fired during the Engine calculation if {@link #config-enableProgressNotifications} config is `true`\n     * @event progress\n     * @param {Number} total The total number of operations\n     * @param {Number} remaining The number of remaining operations\n     * @param {'storePopulation'|'propagating'} phase The phase of the calculation, either 'storePopulation'\n     * when data is getting loaded, or 'propagating' when data is getting calculated\n     */\n\n    /**\n     * Fired when the Engine detects a computation cycle.\n     * @event cycle\n     * @param {Object} schedulingIssue Scheduling error describing the case:\n     * @param {Function} schedulingIssue.getDescription Returns the cycle description\n     * @param {Object} schedulingIssue.cycle Object providing the cycle info\n     * @param {Function} schedulingIssue.getResolutions Returns possible resolutions\n     * @param {Function} continueWithResolutionResult Function to call after a resolution is chosen to\n     * proceed with the Engine calculations:\n     * ```javascript\n     * project.on('cycle', ({ continueWithResolutionResult }) => {\n     *     // cancel changes in case of a cycle\n     *     continueWithResolutionResult(EffectResolutionResult.Cancel);\n     * })\n     * ```\n     */\n\n    /**\n     * Fired when the Engine detects a scheduling conflict.\n     *\n     * @event schedulingConflict\n     * @param {Object} schedulingIssue The conflict details:\n     * @param {Function} schedulingIssue.getDescription Returns the conflict description\n     * @param {Object[]} schedulingIssue.intervals Array of conflicting intervals\n     * @param {Function} schedulingIssue.getResolutions Function to get possible resolutions\n     * @param {Function} continueWithResolutionResult Function to call after a resolution is chosen to\n     * proceed with the Engine calculations:\n     * ```javascript\n     * project.on('schedulingConflict', ({ schedulingIssue, continueWithResolutionResult }) => {\n     *     // apply the first resolution and continue\n     *     schedulingIssue.getResolutions()[0].resolve();\n     *     continueWithResolutionResult(EffectResolutionResult.Resume);\n     * })\n     * ```\n     */\n\n    /**\n     * Fired when the Engine detects a calendar misconfiguration when the calendar does\n     * not provide any working periods of time which makes usage impossible.\n     * @event emptyCalendar\n     * @param {Object} schedulingIssue Scheduling error describing the case:\n     * @param {Function} schedulingIssue.getDescription Returns the error description\n     * @param {Function} schedulingIssue.getCalendar Returns the calendar that must be fixed\n     * @param {Function} schedulingIssue.getResolutions Returns possible resolutions\n     * @param {Function} continueWithResolutionResult Function to call after a resolution is chosen to\n     * proceed with the Engine calculations:\n     * ```javascript\n     * project.on('emptyCalendar', ({ schedulingIssue, continueWithResolutionResult }) => {\n     *     // apply the first resolution and continue\n     *     schedulingIssue.getResolutions()[0].resolve();\n     *     continueWithResolutionResult(EffectResolutionResult.Resume);\n     * })\n     * ```\n     */\n\n    /**\n     * Fired when the engine has finished its calculations and the results has been written back to the records.\n     *\n     * ```javascript\n     * gantt.project.on({\n     *     dataReady({ records }) {\n     *         console.log('Calculations finished');\n     *         for (const record of records) {\n     *             console.log(`Modified #${record.id}: ${JSON.stringify(record.modifications)}`);\n     *         }\n     *         // Output:\n     *         // Modified #12: {\"endDate\":null,\"duration\":7200000,\"id\":12}\n     *         // Modified #1: {\"percentDone\":49.99998611112847,\"id\":1}\n     *         // Modified #1000: {\"percentDone\":49.99965834045124,\"id\":1000}\n     *     }\n     * });\n     *\n     * gantt.project.taskStore.first.duration = 10;\n     *\n     * // At some point a bit later it will log 'Calculations finished', etc.\n     * ```\n     *\n     * @event dataReady\n     * @param {Gantt.model.ProjectModel} source The project\n     * @param {Boolean} isInitialCommit Flag that shows if this commit is initial\n     * @param {Set} records Set of all {@link Core.data.Model}s that were modified in the completed transaction.\n     * Use the {@link Core.data.Model#property-modifications} property of each Model to identify\n     * modified fields.\n     */\n\n    //endregion\n\n    static get defaults() {\n        return {\n            /**\n             * Whether to include \"As soon as possible\" and \"As late as possible\" in the list of the constraints,\n             * for compatibility with the MS Project. Enabled by default.\n             *\n             * Note, that when enabling this option, you can not have a regular constraint on the task and ASAP/ALAP flag\n             * in the same time.\n             *\n             * See also docs of the {@link Gantt.model.TaskModel#field-direction direction} field.\n             *\n             * @config {Boolean} includeAsapAlapAsConstraints\n             * @default true\n             */\n\n            /**\n             * If this flag is set to `true` (default) when a start/end date is set on the event, a corresponding\n             * `start-no-earlier/later-than` constraint is added, automatically. This is done in order to\n             * keep the event \"attached\" to this date, according to the user intention.\n             *\n             * Depending on your use case, you might want to disable this behaviour.\n             *\n             * @field {Boolean} addConstraintOnDateSet\n             * @default true\n             */\n\n            /**\n             * The number of hours per day.\n             *\n             * **Please note:** the value **does not define** the amount of **working** time per day\n             * for that purpose one should use calendars.\n             *\n             * The value is used when converting the duration from one unit to another.\n             * So when user enters a duration of, for example, `5 days` the system understands that it\n             * actually means `120 hours` and schedules accordingly.\n             * @field {Number} hoursPerDay\n             * @default 24\n             */\n\n            /**\n             * The number of days per week.\n             *\n             * **Please note:** the value **does not define** the amount of **working** time per week\n             * for that purpose one should use calendars.\n             *\n             * The value is used when converting the duration from one unit to another.\n             * So when user enters a duration of, for example, `2 weeks` the system understands that it\n             * actually means `14 days` (which is then converted to {@link #field-hoursPerDay hours}) and\n             * schedules accordingly.\n             * @field {Number} daysPerWeek\n             * @default 7\n             */\n\n            /**\n             * The number of days per month.\n             *\n             * **Please note:** the value **does not define** the amount of **working** time per month\n             * for that purpose one should use calendars.\n             *\n             * The value is used when converting the duration from one unit to another.\n             * So when user enters a duration of, for example, `1 month` the system understands that it\n             * actually means `30 days` (which is then converted to {@link #field-hoursPerDay hours}) and\n             * schedules accordingly.\n             * @field {Number} daysPerMonth\n             * @default 30\n             */\n\n            /**\n             * The source of the calendar for dependencies (the calendar used for taking dependencies lag into account).\n             * Possible values are:\n             *\n             * - `ToEvent` - successor calendar will be used (default);\n             * - `FromEvent` - predecessor calendar will be used;\n             * - `Project` - the project calendar will be used.\n             *\n             * @field {String} dependenciesCalendar\n             * @default 'ToEvent'\n             */\n\n            /**\n             * The project calendar.\n             * @config {String|CalendarModelConfig|Gantt.model.CalendarModel} calendar\n             */\n\n            /**\n             * The project calendar.\n             * @field {Gantt.model.CalendarModel} calendar\n             */\n\n            /**\n             * `true` to enable automatic {@link Gantt/model/TaskModel#field-percentDone % done} calculation for summary\n             * tasks, `false` to disable it.\n             * @field {Boolean} autoCalculatePercentDoneForParentTasks\n             * @default true\n             */\n\n            /**\n             * State tracking manager instance the project relies on\n             * @member {Core.data.stm.StateTrackingManager} stm\n             * @category Advanced\n             */\n            /**\n             * Configuration options to provide to the STM manager\n             *\n             * @config {StateTrackingManagerConfig|Core.data.stm.StateTrackingManager} stm\n             * @category Advanced\n             */\n\n            /**\n             * The {@link Gantt.data.TaskStore store} holding the task information.\n             *\n             * See also {@link Gantt.model.TaskModel}\n             * @member {Gantt.data.TaskStore} eventStore\n             * @category Models & Stores\n             */\n            /**\n             * A {@link Gantt.data.TaskStore} instance or a config object.\n             * @config {Gantt.data.TaskStore|Object} eventStore\n             * @category Models & Stores\n             */\n\n            /**\n             * An alias for the {@link #property-eventStore}.\n             *\n             * See also {@link Gantt.model.TaskModel}\n             * @member {Gantt.data.TaskStore} taskStore\n             * @category Models & Stores\n             */\n            /**\n             * An alias for the {@link #config-eventStore}.\n             * @config {Gantt.data.TaskStore|TaskStoreConfig} taskStore\n             * @category Models & Stores\n             */\n\n            /**\n             * The {@link Gantt.data.DependencyStore store} holding the dependency information.\n             *\n             * See also {@link Gantt.model.DependencyModel}\n             * @member {Gantt.data.DependencyStore} dependencyStore\n             * @category Models & Stores\n             */\n            /**\n             * A {@link Gantt.data.DependencyStore} instance or a config object.\n             * @config {Gantt.data.DependencyStore|DependencyStoreConfig} dependencyStore\n             * @category Models & Stores\n             */\n\n            /**\n             * The {@link Gantt.data.ResourceStore store} holding the resources that can be assigned to the tasks in the\n             * task store.\n             *\n             * See also {@link Gantt.model.ResourceModel}\n             * @member {Gantt.data.ResourceStore} resourceStore\n             * @category Models & Stores\n             */\n            /**\n             * A {@link Gantt.data.ResourceStore} instance or a config object.\n             * @config {Gantt.data.ResourceStore|ResourceStoreConfig} resourceStore\n             * @category Models & Stores\n             */\n\n            /**\n             * The {@link Gantt.data.AssignmentStore store} holding the assignment information.\n             *\n             * See also {@link Gantt.model.AssignmentModel}\n             * @member {Gantt.data.AssignmentStore} assignmentStore\n             * @category Models & Stores\n             */\n            /**\n             * An {@link Gantt.data.AssignmentStore} instance or a config object.\n             * @config {Gantt.data.AssignmentStore|AssignmentStoreConfig} assignmentStore\n             * @category Models & Stores\n             */\n\n            /**\n             * The {@link Gantt.data.CalendarManagerStore store} holding the calendar information.\n             *\n             * See also {@link Gantt.model.CalendarModel}\n             * @member {Gantt.data.CalendarManagerStore} calendarManagerStore\n             * @category Models & Stores\n             */\n            /**\n             * A {@link Gantt.data.CalendarManagerStore} instance or a config object.\n             * @config {Gantt.data.CalendarManagerStore|CalendarManagerStoreConfig} calendarManagerStore\n             * @category Models & Stores\n             */\n\n            /**\n             * The {@link Core.data.Store store} containing time ranges to be visualized.\n             *\n             * See also {@link Scheduler.model.TimeSpan}\n             * @member {Core.data.Store} timeRangeStore\n             * @category Models & Stores\n             */\n\n            /**\n             * Returns an array of critical paths.\n             * Each _critical path_ is an array of critical path nodes.\n             * Each _critical path node_ is an object which contains {@link Gantt/model/TaskModel#field-critical critical task}\n             * and {@link Gantt/model/DependencyModel dependency} leading to the next critical path node.\n             * Dependency is missing if it is the last critical path node in the critical path.\n             * To highlight critical paths, enable {@link Gantt/feature/CriticalPaths} feature.\n             *\n             * ```javascript\n             * // This is an example of critical paths structure\n             * [\n             *      // First path\n             *      [\n             *          {\n             *              event : Gantt.model.TaskModel\n             *              dependency : Gantt.model.DependencyModel\n             *          },\n             *          {\n             *              event : Gantt.model.TaskModel\n             *          }\n             *      ],\n             *      // Second path\n             *      [\n             *          {\n             *              event : Gantt.model.TaskModel\n             *          }\n             *      ]\n             *      // and so on....\n             * ]\n             * ```\n             *\n             * For more details on the _critical path method_ theory please check\n             * [this article](https://en.wikipedia.org/wiki/Critical_path_method).\n             *\n             * @member {Array[]} criticalPaths\n             * @category Scheduling\n             */\n\n            // root should be always expanded\n            expanded : true\n        };\n    }\n\n    static get defaultConfig() {\n        return {\n            projectConstraintIntervalClass    : ProjectConstraintInterval,\n            dateConstraintIntervalClass       : DateConstraintInterval,\n            dependencyConstraintIntervalClass : DependencyConstraintInterval,\n\n            /**\n             * The constructor of the event model class, to be used in the project. Will be set as the {@link Core.data.Store#config-modelClass modelClass}\n             * property of the {@link #property-eventStore}\n             *\n             * @config {Gantt.model.TaskModel} [taskModelClass]\n             * @typings {typeof TaskModel}\n             * @category Models & Stores\n             */\n            taskModelClass : TaskModel,\n\n            /**\n             * The constructor of the dependency model class, to be used in the project. Will be set as the {@link Core.data.Store#config-modelClass modelClass}\n             * property of the {@link #property-dependencyStore}\n             *\n             * @config {Gantt.model.DependencyModel} [dependencyModelClass]\n             * @typings {typeof DependencyModel}\n             * @category Models & Stores\n             */\n            dependencyModelClass : DependencyModel,\n\n            /**\n             * The constructor of the resource model class, to be used in the project. Will be set as the {@link Core.data.Store#config-modelClass modelClass}\n             * property of the {@link #property-resourceStore}\n             *\n             * @config {Gantt.model.ResourceModel} [resourceModelClass]\n             * @typings {typeof ResourceModel}\n             * @category Models & Stores\n             */\n            resourceModelClass : ResourceModel,\n\n            /**\n             * The constructor of the assignment model class, to be used in the project. Will be set as the {@link Core.data.Store#config-modelClass modelClass}\n             * property of the {@link #property-assignmentStore}\n             *\n             * @config {Gantt.model.AssignmentModel} [assignmentModelClass]\n             * @typings {typeof AssignmentModel}\n             * @category Models & Stores\n             */\n            assignmentModelClass : AssignmentModel,\n\n            /**\n             * The constructor of the calendar model class, to be used in the project. Will be set as the {@link Core.data.Store#config-modelClass modelClass}\n             * property of the {@link #property-calendarManagerStore}\n             *\n             * @config {Gantt.model.CalendarModel} [calendarModelClass]\n             * @typings {typeof CalendarModel}\n             * @category Models & Stores\n             */\n            calendarModelClass : CalendarModel,\n\n            /**\n             * The constructor to create an task store instance with. Should be a class, subclassing the {@link Gantt.data.TaskStore}\n             * @config {Gantt.data.TaskStore}\n             * @typings {typeof TaskStore}\n             * @category Models & Stores\n             */\n            taskStoreClass : TaskStore,\n\n            /**\n             * The constructor to create a dependency store instance with. Should be a class, subclassing the {@link Gantt.data.DependencyStore}\n             * @config {Gantt.data.DependencyStore}\n             * @typings {typeof DependencyStore}\n             * @category Models & Stores\n             */\n            dependencyStoreClass : DependencyStore,\n\n            /**\n             * The constructor to create a dependency store instance with. Should be a class, subclassing the {@link Gantt.data.ResourceStore}\n             * @config {Gantt.data.ResourceStore}\n             * @typings {typeof ResourceStore}\n             * @category Models & Stores\n             */\n            resourceStoreClass : ResourceStore,\n\n            /**\n             * The constructor to create a dependency store instance with. Should be a class, subclassing the {@link Gantt.data.AssignmentStore}\n             * @config {Gantt.data.AssignmentStore}\n             * @typings {typeof AssignmentStore}\n             * @category Models & Stores\n             */\n            assignmentStoreClass : AssignmentStore,\n\n            /**\n             * The constructor to create a calendar store instance with. Should be a class, subclassing the {@link Gantt.data.CalendarManagerStore}\n             * @config {Gantt.data.CalendarManagerStore}\n             * @typings {typeof CalendarManagerStore}\n             * @category Models & Stores\n             */\n            calendarManagerStoreClass : CalendarManagerStore,\n\n            /**\n             * Start date of the project in the ISO 8601 format. Setting this date will constrain all other tasks in the\n             * project to start no earlier than it.\n             *\n             * If this date is not provided, it will be calculated as the earliest date among all tasks.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * @field {Date} startDate\n             * @accepts {String|Date}\n             */\n\n            /**\n             * End date of the project in the ISO 8601 format.\n             * The value is calculated as the latest date among all tasks.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * @field {Date} endDate\n             * @accepts {String|Date}\n             */\n\n            /**\n             * The scheduling direction of the project tasks.\n             * The `Forward` direction corresponds to the As-Soon-As-Possible (ASAP) scheduling,\n             * `Backward` - to As-Late-As-Possible (ALAP).\n             *\n             * <div class=\"note\">When using backward scheduling on the project, you should either make\n             * both start and end date fields persistent on all tasks, or make both start and end date fields on\n             * the project persistent. This is because for initial calculation, Gantt will need to have the project's\n             * end date upfront, before performing calculations.</div>\n             *\n             * To set the scheduling direction of the individual tasks, use the {@link Gantt.model.TaskModel#field-direction}\n             * field of the TaskModel.\n             *\n             * @field {'Forward'|'Backward'} direction\n             * @default 'Forward'\n             */\n\n            /**\n             * The initial data, to fill the {@link #property-taskStore taskStore} with.\n             * Should be an array of {@link Gantt.model.TaskModel TaskModels} or configuration objects.\n             *\n             * @config {TaskModelConfig[]|Gantt.model.TaskModel[]}\n             * @category Legacy inline data\n             */\n            tasksData : null,\n\n            // What is actually used to hold initial tasks, tasksData is transformed in construct()\n            /**\n             * Alias to {@link #config-tasksData}.\n             *\n             * @config {TaskModelConfig[]|Gantt.model.TaskModel[]}\n             * @category Legacy inline data\n             */\n            eventsData : null,\n\n            /**\n             * The initial data, to fill the {@link #property-dependencyStore dependencyStore} with.\n             * Should be an array of {@link Gantt.model.DependencyModel DependencyModels} or configuration objects.\n             *\n             * @config {DependencyModelConfig[]|Gantt.model.DependencyModel[]}\n             * @category Legacy inline data\n             */\n            dependenciesData : null,\n\n            /**\n             * The initial data, to fill the {@link #property-resourceStore resourceStore} with.\n             * Should be an array of {@link Gantt.model.ResourceModel ResourceModels} or configuration objects.\n             *\n             * @config {ResourceModelConfig[]|Gantt.model.ResourceModel[]}\n             * @category Legacy inline data\n             */\n            resourcesData : null,\n\n            /**\n             * The initial data, to fill the {@link #property-assignmentStore assignmentStore} with.\n             * Should be an array of {@link Gantt.model.AssignmentModel AssignmentModels} or configuration objects.\n             *\n             * @config {AssignmentModelConfig[]|Gantt.model.AssignmentModel[]}\n             * @category Legacy inline data\n             */\n            assignmentsData : null,\n\n            /**\n             * The initial data, to fill the {@link #property-calendarManagerStore calendarManagerStore} with.\n             * Should be an array of {@link Gantt.model.CalendarModel CalendarModels} or configuration objects.\n             *\n             * @config {CalendarModelConfig[]|Gantt.model.CalendarModel[]}\n             * @category Legacy inline data\n             */\n            calendarsData : null,\n\n            /**\n             * Store that holds time ranges (using the {@link Scheduler.model.TimeSpan} model or subclass thereof) for\n             * {@link Scheduler.feature.TimeRanges} feature. A store will be automatically created if none is specified.\n             * @config {StoreConfig|Core.data.Store}\n             * @category Models & Stores\n             */\n            timeRangeStore : {\n                modelClass : TimeSpan,\n                storeId    : 'timeRanges'\n            },\n\n            /**\n             * Set to `true` to reset the undo/redo queues of the internal {@link Core.data.stm.StateTrackingManager}\n             * after the Project has loaded. Defaults to `false`\n             * @config {Boolean} resetUndoRedoQueuesAfterLoad\n             * @category Advanced\n             */\n\n            convertEmptyParentToLeaf : false,\n\n            supportShortSyncResponseNote : 'Note: Please consider enabling \"supportShortSyncResponse\" option to allow less detailed sync responses (https://bryntum.com/products/gantt/docs/api/Gantt/model/ProjectModel#config-supportShortSyncResponse)',\n\n            /**\n             * Enables early rendering in Gantt, by postponing calculations to after the first refresh.\n             *\n             * Requires task data loaded in Gantt to be pre-normalized to function as intended, since it will be used to\n             * render tasks before engine has normalized the data. Given un-normalized data tasks will snap into place\n             * when calculations are finished.\n             *\n             * The Gantt chart will be read-only until the initial calculations are finished.\n             *\n             * @config {Boolean}\n             * @default\n             * @category Advanced\n             */\n            delayCalculation : true,\n\n            eventStore           : {},\n            assignmentStore      : {},\n            resourceStore        : {},\n            dependencyStore      : {},\n            calendarManagerStore : {},\n\n            stmClass : StateTrackingManager\n        };\n    }\n\n    static get configurable() {\n        return {\n\n            /**\n             * Get/set {@link #property-taskStore} data.\n             *\n             * Always returns an array of {@link Gantt.model.TaskModel TaskModels} but also accepts an array of\n             * its configuration objects as input.\n             *\n             * @member {Gantt.model.TaskModel[]} tasks\n             * @accepts {Gantt.model.TaskModel[]|TaskModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-taskStore}. Should be an array of\n             * {@link Gantt.model.TaskModel TaskModels} or its configuration objects.\n             *\n             * @config {Gantt.model.TaskModel[]|TaskModelConfig[]}\n             * @category Inline data\n             */\n            tasks : null,\n\n            /**\n             * Get/set {@link #property-resourceStore} data.\n             *\n             * Always returns an array of {@link Gantt.model.ResourceModel ResourceModels} but also accepts an array\n             * of its configuration objects as input.\n             *\n             * @member {Gantt.model.ResourceModel[]} resources\n             * @accepts {Gantt.model.ResourceModel[]|ResourceModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-resourceStore}. Should be an array of\n             * {@link Gantt.model.ResourceModel ResourceModels} or its configuration objects.\n             *\n             * @config {Gantt.model.ResourceModel[]|ResourceModelConfig[]}\n             * @category Inline data\n             */\n            resources : null,\n\n            /**\n             * Get/set {@link #property-assignmentStore} data.\n             *\n             * Always returns an array of {@link Gantt.model.AssignmentModel AssignmentModels} but also accepts an\n             * array of its configuration objects as input.\n             *\n             * @member {Gantt.model.AssignmentModel[]} assignments\n             * @accepts {Gantt.model.AssignmentModel[]|AssignmentModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-assignmentStore}. Should be an array of\n             * {@link Gantt.model.AssignmentModel AssignmentModels} or its configuration objects.\n             *\n             * @config {Gantt.model.AssignmentModel[]|AssignmentModelConfig[]}\n             * @category Inline data\n             */\n            assignments : null,\n\n            /**\n             * Get/set {@link #property-dependencyStore} data.\n             *\n             * Always returns an array of {@link Gantt.model.DependencyModel DependencyModels} but also accepts an\n             * array of its configuration objects as input.\n             *\n             * @member {Gantt.model.DependencyModel[]} dependencies\n             * @accepts {Gantt.model.DependencyModel[]|DependencyModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-dependencyStore}. Should be an array of\n             * {@link Gantt.model.DependencyModel DependencyModels} or its configuration objects.\n             *\n             * @config {Gantt.model.DependencyModel[]|DependencyModelConfig[]}\n             * @category Inline data\n             */\n            dependencies : null,\n\n            /**\n             * Get/set {@link #property-timeRangeStore} data.\n             *\n             * Always returns an array of {@link Scheduler.model.TimeSpan TimeSpans} but also accepts an\n             * array of its configuration objects as input.\n             *\n             * @member {Scheduler.model.TimeSpan[]} timeRanges\n             * @accepts {Scheduler.model.TimeSpan[]|TimeSpanConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-timeRangeStore}. Should be an array of\n             * {@link Scheduler.model.TimeSpan TimeSpans} or its configuration objects.\n             *\n             * @config {Scheduler.model.TimeSpan[]|TimeSpanConfig[]}\n             * @category Inline data\n             */\n            timeRanges : null,\n\n            /**\n             * Get/set {@link #property-calendarManagerStore} data.\n             *\n             * Always returns a {@link Gantt.model.CalendarModel} array but also accepts an array of its configuration\n             * objects as input.\n             *\n             * @member {Gantt.model.CalendarModel[]} calendars\n             * @accepts {Gantt.model.CalendarModel[]|CalendarModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-calendarManagerStore}. Should be a\n             * {@link Gantt.model.CalendarModel} array or its configuration objects.\n             *\n             * @config {Gantt.model.CalendarModel[]|CalendarModelConfig[]}\n             * @category Inline data\n             */\n            calendars : null,\n\n            /**\n             * The initial data, to fill the {@link #property-timeRangeStore} with.\n             * Should be an array of {@link Scheduler.model.TimeSpan TimeSpans} or configuration objects.\n             *\n             * @config {TimeSpanConfig[]|Scheduler.model.TimeSpan[]}\n             * @category Legacy inline data\n             */\n            timeRangesData : null,\n\n            // <remove-on-release>\n            // TODO: Make public?\n            // </remove-on-release>\n            syncDataOnLoad : null,\n\n            /**\n             * Set to `true` to make STM ignore changes coming from the backend. This will allow user to only undo redo\n             * local changes.\n             * @prp {Boolean}\n             */\n            ignoreRemoteChangesInSTM : false\n        };\n    }\n\n    //endregion\n\n    construct(...args) {\n        const config = args[0] || {};\n\n        // put config to arguments (passed to the parent class \"construct\")\n        args[0] = config;\n\n        if ('tasksData' in config) {\n            config.eventsData   = config.tasksData;\n            delete config.tasksData;\n        }\n\n        if ('taskStore' in config) {\n            config.eventStore = config.taskStore;\n            delete config.taskStore;\n        }\n\n        // Maintain backwards compatibility\n        // default config will be exposed later and won't be applied if a value is exists,\n        // but we should sync eventModelClass/eventStoreClass with taskModelClass/taskStoreClass before all further actions\n        // to apply the correct value in all mixins that uses eventModelClass/eventStoreClass properties only\n        config.eventModelClass = config.taskModelClass || config.eventModelClass || this.getDefaultConfiguration().taskModelClass || this.defaultEventModelClass;\n        config.eventStoreClass = config.taskStoreClass || config.eventStoreClass || this.getDefaultConfiguration().taskStoreClass || this.defaultEventStoreClass;\n\n        super.construct(...args);\n    }\n\n    //region Attaching stores\n\n    // Attach to a store, relaying its change events\n    attachStore(store) {\n        if (this.syncDataOnLoad) {\n            store.syncDataOnLoad = this.syncDataOnLoad;\n        }\n\n        store.ion({\n            name    : store.$$name,\n            change  : 'relayStoreChange',\n            thisObj : this\n        });\n\n        super.attachStore(store);\n    }\n\n    // Detach a store, stop relaying its change events\n    detachStore(store) {\n        store && this.detachListeners(store.$$name);\n        super.detachStore(store);\n    }\n\n    relayStoreChange(event) {\n        super.relayStoreChange(event);\n        /**\n         * Fired when data in any of the projects stores changes.\n         *\n         * Basically a relayed version of each stores own change event, decorated with which store it originates from.\n         * See the {@link Core.data.Store#event-change store change event} documentation for more information.\n         *\n         * @event change\n         * @param {Gantt.model.ProjectModel} source This project\n         * @param {Core.data.Store} store Affected store\n         * @param {'remove'|'removeAll'|'add'|'updatemultiple'|'clearchanges'|'filter'|'update'|'dataset'|'replace'} action\n         * Name of action which triggered the change. May be one of the options listed above.\n         * @param {Core.data.Model} record Changed record, for actions that affects exactly one record (`'update'`)\n         * @param {Core.data.Model[]} records Changed records, passed for all actions except `'removeAll'`\n         * @param {Object} changes Passed for the `'update'` action, info on which record fields changed\n         */\n        return this.trigger('change', { store : event.source, ...event, source : this });\n    }\n\n    //endregion\n\n    get defaultEventModelClass() {\n        return TaskModel;\n    }\n\n    get defaultEventStoreClass() {\n        return TaskStore;\n    }\n\n    set taskStore(store) {\n        this.eventStore = store;\n    }\n\n    get taskStore() {\n        return this.eventStore;\n    }\n\n    get timeRangeStore() {\n        return this._timeRangeStore;\n    }\n\n    set timeRangeStore(store) {\n        const me = this;\n\n        me.detachStore(me._timeRangeStore);\n\n        me._timeRangeStore = Store.getStore(store, Store);\n\n        if (!me._timeRangeStore.storeId) {\n            me._timeRangeStore.storeId = 'timeRanges';\n        }\n\n        me.attachStore(me._timeRangeStore);\n    }\n\n    async tryInsertChild() {\n        return this.tryPropagateWithChanges(() => {\n            this.insertChild(...arguments);\n        });\n    }\n\n    /**\n     * Overrides the project owned store identifiers calculation and launches rescheduling.\n     * @method setCalculations\n     * @param {Object} calculations Object providing new _engine_ fields calculation function names.\n     * The object is grouped by store identifiers. For example below code\n     * overrides task {@link Gantt/model/TaskModel#field-startDate}, {@link Gantt/model/TaskModel#field-endDate}\n     * and {@link Gantt/model/TaskModel#field-duration} calculation so\n     * the fields will always simply return their current values:\n     *\n     * ```javascript\n     * // task startDate, endDate and duration will use their userProvidedValue method\n     * // which simply returns their current values as-is\n     * const oldCalculations = await project.setCalculations({\n     *     tasks : {\n     *         startDate : \"userProvidedValue\",\n     *         endDate   : \"userProvidedValue\",\n     *         duration  : \"userProvidedValue\"\n     *     }\n     * })\n     * ```\n     * @returns {Promise} Promise that resolves with an object having the overridden calculations.\n     * The object can be used to toggle the calculations back in the future:\n     * ```javascript\n     * // override event duration calculation\n     * const oldCalculations = await project.setCalculations({\n     *     events : {\n     *         duration  : \"userProvidedValue\"\n     *     }\n     * })\n     * // revert the duration calculation back\n     * project.setCalculations(oldCalculations)\n     * ```\n     * @category Advanced\n     */\n\n    /**\n     * Returns a calendar of the project. If task has never been assigned a calendar a project's calendar will be returned.\n     *\n     * @method getCalendar\n     * @returns {Gantt.model.CalendarModel}\n     * @category Scheduling\n     */\n\n    /**\n     * Sets the calendar of the project. Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method setCalendar\n     * @param {Gantt.model.CalendarModel} calendar The new calendar.\n     * @async\n     * @propagating\n     * @category Scheduling\n     */\n\n    /**\n     * Causes the scheduling engine to re-evaluate the task data and all associated data and constraints\n     * and apply necessary changes.\n     * @async\n     * @function propagate\n     * @propagating\n     * @category Scheduling\n     */\n\n    /**\n     * Suspend {@link #function-propagate propagation} processing. When propagation is suspended,\n     * calls to {@link #function-propagate} do not proceed, instead a propagate call is deferred\n     * until a matching {@link #function-resumePropagate} is called.\n     * @function suspendPropagate\n     * @category Scheduling\n     */\n\n    /**\n     * Resume {@link #function-propagate propagation}. If propagation is resumed (calls may be nested\n     * which increments a suspension counter), then if a call to propagate was made during suspension,\n     * {@link #function-propagate} is executed.\n     * @param {Boolean} [trigger] Pass `false` to inhibit automatic propagation if propagate was requested during suspension.\n     * @async\n     * @function resumePropagate\n     * @category Scheduling\n     */\n\n    /**\n     * Accepts a \"data package\" consisting of data for the projects stores, which is then loaded into the stores.\n     *\n     * The package can hold data for EventStore, AssignmentStore, ResourceStore, DependencyStore and Calendar Manager.\n     * It uses the same format as when creating a project with inline data:\n     *\n     * ```javascript\n     * await project.loadInlineData({\n     *     eventsData       : [...],\n     *     resourcesData    : [...],\n     *     assignmentsData  : [...],\n     *     dependenciesData : [...],\n     *     calendarsData    : [...]\n     * });\n     * ```\n     *\n     * After populating the stores it commits the project, starting its calculations. By awaiting `loadInlineData()` you\n     * can be sure that project calculations are finished.\n     *\n     * @function loadInlineData\n     * @param {Object} dataPackage A data package as described above\n     * @fires load\n     * @async\n     * @category Inline data\n     */\n\n    /**\n     * Project changes (CRUD operations to records in its stores) are automatically committed on a buffer to the\n     * underlying graph based calculation engine. The engine performs it calculations async.\n     *\n     * By calling this function, the commit happens right away. And by awaiting it you are sure that project\n     * calculations are finished and that references between records are up to date.\n     *\n     * The returned promise is resolved with an object. If that object has `rejectedWith` set, there has been a conflict and the calculation failed.\n     *\n     * ```javascript\n     * // Move a task in time\n     * taskStore.first.shift(1);\n     *\n     * // Trigger calculations directly and wait for them to finish\n     * const result = await project.commitAsync();\n     *\n     * if (result.rejectedWith) {\n     *     // there was a conflict during the scheduling\n     * }\n     * ```\n     *\n     * @async\n     * @propagating\n     * @function commitAsync\n     * @category Scheduling\n     */\n\n    //region JSON\n\n    /**\n     * Returns the data from the records of the projects stores, in a format that can be consumed by `loadInlineData()`.\n     *\n     * Used by JSON.stringify to correctly convert this record to json.\n     *\n     *\n     * ```javascript\n     * const project = new ProjectModel({\n     *     eventsData       : [...],\n     *     resourcesData    : [...],\n     *     assignmentsData  : [...],\n     *     dependenciesData : [...]\n     * });\n     *\n     * const json = project.toJSON();\n     *\n     * // json:\n     * {\n     *     eventsData : [...],\n     *     resourcesData : [...],\n     *     dependenciesData : [...],\n     *     assignmentsData : [...]\n     * }\n     * ```\n     *\n     * Output can be consumed by `loadInlineData()`:\n     *\n     * ```javascript\n     * const json = project.toJSON();\n     *\n     * // Plug it back in later\n     * project.loadInlineData(json);\n     * ```\n     *\n     * @returns {Object}\n     * @category Inline data\n     */\n    toJSON() {\n        return {\n            eventsData       : this.eventStore.toJSON(),\n            resourcesData    : this.resourceStore.toJSON(),\n            dependenciesData : this.dependencyStore.toJSON(),\n            assignmentsData  : this.assignmentStore.toJSON()\n        };\n    }\n\n    /**\n     * Get or set project data (records from its stores) as a JSON string.\n     *\n     * Get a JSON string:\n     *\n     * ```javascript\n     * const project = new ProjectModel({\n     *     eventsData       : [...],\n     *     resourcesData    : [...],\n     *     assignmentsData  : [...],\n     *     dependenciesData : [...]\n     * });\n     *\n     * const jsonString = project.json;\n     *\n     * // jsonString:\n     * '{\"eventsData\":[...],\"resourcesData\":[...],...}'\n     * ```\n     *\n     * Set a JSON string (to populate the project stores):\n     *\n     * ```javascript\n     * project.json = '{\"eventsData\":[...],\"resourcesData\":[...],...}'\n     * ```\n     *\n     * @property {String}\n     * @category Inline data\n     */\n    get json() {\n        return super.json;\n    }\n\n    set json(json) {\n        if (typeof json === 'string') {\n            json = StringHelper.safeJsonParse(json);\n        }\n\n        this.loadInlineData(json);\n    }\n\n    //endregion\n\n    //#region Inline data\n\n    get tasks() {\n        return this.taskStore.allRecords;\n    }\n\n    updateTasks(events) {\n        this.taskStore.data = events;\n    }\n\n    get calendars() {\n        return this.calendarManagerStore.allRecords;\n    }\n\n    updateCalendars(calendars) {\n        this.calendarManagerStore.data = calendars;\n    }\n\n    updateTimeRangesData(ranges) {\n        this.timeRangeStore.data = ranges;\n    }\n\n    /**\n     * Get or set data of project stores. The returned data is identical to what\n     * {@link #function-toJSON} returns:\n     *\n     * ```javascript\n     *\n     * const data = scheduler.project.inlineData;\n     *\n     * // data:\n     * {\n     *     eventsData : [...],\n     *     resourcesData : [...],\n     *     dependenciesData : [...],\n     *     assignmentsData : [...]\n     * }\n     *\n     *\n     * // Plug it back in later\n     * scheduler.project.inlineData = data;\n     * ```\n     *\n     * @member {Object} inlineData\n     * @category Inline data\n     */\n    get inlineData() {\n        return this.toJSON();\n    }\n\n    set inlineData(inlineData) {\n        this.json = inlineData;\n    }\n\n    //#endregion\n\n    afterChange(toSet, wasSet) {\n        super.afterChange(...arguments);\n\n        if (wasSet.calendar) {\n            this.trigger('calendarChange');\n        }\n    }\n\n    refreshWbs(options) {\n        const\n            me = this,\n            children = me.unfilteredChildren ?? me.children;\n\n        if (children?.length) {\n            // We leverage the refreshWbs() method of TaskModel (our children) to do the work. This node does not\n            // have a wbsValue, so we pass -1 for the index to skip on to just our children.\n            children[0].refreshWbs?.call(me, options, -1);\n        }\n    }\n}\n\nProjectModel.applyConfigs = true;\n","import ProjectModel from './ProjectModel.js';\nimport ProjectWebSocketHandlerMixin from '../../SchedulerPro/model/mixin/ProjectWebSocketHandlerMixin.js';\n\nexport default class WebSocketProjectModel extends ProjectWebSocketHandlerMixin(ProjectModel) {\n    static $name = 'WebSocketProjectModel';\n}\n","import AsyncHelper from '../../Core/helper/AsyncHelper.js';\nimport DH from '../../Core/helper/DateHelper.js';\nimport RandomGenerator from '../../Core/helper/util/RandomGenerator.js';\n\n/**\n * @module Gantt/util/ProjectGenerator\n */\n\nconst\n    year                = new Date().getFullYear(),\n    earlyMondayThisYear = DH.add(DH.startOf(new Date(year, 0, 5), 'week'), 1 - DH.weekStartDay, 'day'),\n    rnd                 = new RandomGenerator();\n\nfunction getNum(id, token) {\n    return parseInt('' + id + token);\n}\n\n/**\n * An internal utility class which generates sample project data for Examples and Tests.\n */\n\nexport default class ProjectGenerator {\n    static async generateAsync(requestedTaskCount, maxProjectSize, progressCallback = null, startDate = earlyMondayThisYear, log = true) {\n        const\n            config = {\n                startDate,\n                tasksData        : [],\n                dependenciesData : []\n            },\n            blockCount = Math.ceil(requestedTaskCount / 10),\n            projectSize = Math.ceil(maxProjectSize / 10),\n            generator = this.generateBlocks(blockCount, projectSize, config.startDate);\n\n        let count = 0,\n            duration = 0,\n            taskCount = 0,\n            dependencyCount = 0;\n\n        log && console.time('generate');\n\n        for (const block of generator) {\n            config.tasksData.push(...block.tasksData);\n            config.dependenciesData.push(...block.dependenciesData);\n\n            if (block.projectDuration) {\n                duration = Math.max(block.projectDuration, duration);\n            }\n\n            taskCount += block.taskCount;\n            dependencyCount += block.dependencyCount;\n\n            if (++count % 1000 === 0) {\n                progressCallback?.(taskCount, dependencyCount, false);\n                await AsyncHelper.animationFrame();\n            }\n        }\n\n        progressCallback?.(taskCount, dependencyCount, true);\n\n        config.endDate = DH.add(config.startDate, Math.max(duration, 30), 'days');\n\n        log && console.timeEnd('generate');\n\n        return config;\n    }\n\n    static * generateBlocks(count, projectSize, startDate) {\n        let currentId        = 1,\n            dependencyId     = 1,\n            projectDuration  = 0,\n            blockDuration    = 0,\n            sumDuration      = 0,\n            currentDuration  = 0,\n            currentStartDate = startDate,\n            finishedDuration = 0;\n\n        function rndDuration(addToTotal = true, resetSum = false) {\n            const value = rnd.nextRandom(5) + 2;\n\n            if (addToTotal) {\n                blockDuration += value;\n            }\n\n            if (resetSum) {\n                sumDuration = 0;\n            }\n\n            sumDuration += value;\n            currentDuration = value;\n\n            return value;\n        }\n\n        function nextStartDate(offset = currentDuration) {\n            currentStartDate = DH.add(currentStartDate, offset, 'days');\n            return currentStartDate;\n        }\n\n        function calculateEndDate() {\n            return DH.add(currentStartDate, currentDuration, 'days');\n        }\n\n        function storePercentDone(children) {\n            finishedDuration = 0;\n\n            for (const task of children) {\n                finishedDuration += task.duration * task.percentDone;\n            }\n\n            return children;\n        }\n\n        for (let i = 0; i < count; i++) {\n            const\n                blockStartId = currentId,\n                block = {\n                    tasksData : [\n                        {\n                            id        : currentId++,\n                            name      : 'Parent ' + blockStartId,\n                            startDate : nextStartDate(i > 0 ? currentDuration : 0),\n                            expanded  : true,\n                            inactive  : false,\n                            children  : [\n                                {\n                                    id        : currentId++,\n                                    name      : 'Sub-parent ' + getNum(blockStartId, 1),\n                                    startDate : nextStartDate(0),\n                                    expanded  : true,\n                                    inactive  : false,\n                                    children  : storePercentDone([\n                                        {\n                                            id          : currentId++,\n                                            name        : 'Task ' + getNum(blockStartId, 11),\n                                            startDate   : nextStartDate(0),\n                                            duration    : rndDuration(true, true),\n                                            effort      : currentDuration,\n                                            effortUnit  : 'day',\n                                            endDate     : calculateEndDate(),\n                                            percentDone : rnd.nextRandom(100),\n                                            inactive    : false\n                                        },\n                                        {\n                                            id          : currentId++,\n                                            name        : 'Task ' + getNum(blockStartId, 12),\n                                            startDate   : nextStartDate(),\n                                            duration    : rndDuration(),\n                                            effort      : currentDuration,\n                                            effortUnit  : 'day',\n                                            endDate     : calculateEndDate(),\n                                            percentDone : rnd.nextRandom(100),\n                                            inactive    : false\n                                        },\n                                        {\n                                            id          : currentId++,\n                                            name        : 'Task ' + getNum(blockStartId, 13),\n                                            startDate   : nextStartDate(),\n                                            duration    : rndDuration(),\n                                            effort      : currentDuration,\n                                            effortUnit  : 'day',\n                                            endDate     : calculateEndDate(),\n                                            percentDone : rnd.nextRandom(100),\n                                            inactive    : false\n                                        },\n                                        {\n                                            id          : currentId++,\n                                            name        : 'Task ' + getNum(blockStartId, 14),\n                                            startDate   : nextStartDate(),\n                                            duration    : rndDuration(),\n                                            effort      : currentDuration,\n                                            effortUnit  : 'day',\n                                            endDate     : calculateEndDate(),\n                                            percentDone : rnd.nextRandom(100),\n                                            inactive    : false\n                                        }\n                                    ]),\n                                    duration    : sumDuration,\n                                    effort      : sumDuration,\n                                    effortUnit  : 'day',\n                                    percentDone : finishedDuration / sumDuration,\n                                    endDate     : calculateEndDate()\n                                },\n                                {\n                                    id        : currentId++,\n                                    name      : 'Sub-parent ' + getNum(blockStartId, 2),\n                                    startDate : nextStartDate(),\n                                    expanded  : true,\n                                    inactive  : false,\n                                    children  : storePercentDone([\n                                        {\n                                            id          : currentId++,\n                                            name        : 'Task ' + getNum(blockStartId, 21),\n                                            startDate   : nextStartDate(0),\n                                            duration    : rndDuration(true, true),\n                                            effort      : currentDuration,\n                                            effortUnit  : 'day',\n                                            endDate     : calculateEndDate(),\n                                            percentDone : rnd.nextRandom(100),\n                                            inactive    : false\n                                        },\n                                        {\n                                            id          : currentId++,\n                                            name        : 'Task ' + getNum(blockStartId, 22),\n                                            startDate   : nextStartDate(),\n                                            duration    : rndDuration(),\n                                            effort      : currentDuration,\n                                            effortUnit  : 'day',\n                                            endDate     : calculateEndDate(),\n                                            percentDone : rnd.nextRandom(100),\n                                            inactive    : false\n                                        },\n                                        {\n                                            id          : currentId++,\n                                            name        : 'Task ' + getNum(blockStartId, 23),\n                                            startDate   : nextStartDate(),\n                                            duration    : rndDuration(),\n                                            effort      : currentDuration,\n                                            effortUnit  : 'day',\n                                            endDate     : calculateEndDate(),\n                                            percentDone : rnd.nextRandom(100),\n                                            inactive    : false\n                                        }\n                                    ]),\n                                    duration    : sumDuration,\n                                    effort      : sumDuration,\n                                    effortUnit  : 'day',\n                                    percentDone : finishedDuration / sumDuration,\n                                    endDate     : calculateEndDate()\n                                }\n                            ],\n                            duration   : blockDuration,\n                            effort     : blockDuration,\n                            effortUnit : 'day',\n                            endDate    : calculateEndDate()\n                        }\n                    ],\n\n                    dependenciesData : [\n                        { id : dependencyId++, fromEvent : blockStartId + 2, toEvent : blockStartId + 3 },\n                        { id : dependencyId++, fromEvent : blockStartId + 3, toEvent : blockStartId + 4 },\n                        { id : dependencyId++, fromEvent : blockStartId + 4, toEvent : blockStartId + 5 },\n                        { id : dependencyId++, fromEvent : blockStartId + 5, toEvent : blockStartId + 7 },\n                        { id : dependencyId++, fromEvent : blockStartId + 7, toEvent : blockStartId + 8 },\n                        { id : dependencyId++, fromEvent : blockStartId + 8, toEvent : blockStartId + 9 }\n                    ],\n\n                    taskCount       : 10,\n                    dependencyCount : 5\n                };\n\n            const\n                parent     = block.tasksData[0],\n                subParent1 = parent.children[0],\n                subParent2 = parent.children[1];\n\n            parent.percentDone = (subParent1.duration * subParent1.percentDone + subParent2.duration * subParent2.percentDone) / parent.duration;\n\n            projectDuration += blockDuration;\n            blockDuration = 0;\n            block.projectDuration = projectDuration;\n\n            if (i % projectSize !== 0) {\n                block.dependenciesData.push({\n                    id        : dependencyId++,\n                    fromEvent : blockStartId - 2,\n                    toEvent   : blockStartId + 2,\n                    type      : 2,\n                    lag       : 0,\n                    lagUnit   : 'd'\n                });\n                block.dependencyCount++;\n            }\n            else {\n                projectDuration = 0;\n            }\n\n            currentId++;\n\n            yield block;\n        }\n    }\n}\n","import Parser from '../../Core/util/Parser.js';\n\nconst { defineParser, alt, seq, string, regexp, succeed, red, isSuccess } = Parser;\n\n/**\n * @module Gantt/util/ResourceAssignmentParser\n */\n\n/**\n * Consumes string while it won't hit [ or , character, value parsed will be trimmed of spaces\n *\n * Example: Maxim Bazhenov [100%] rest -> Maxim Bazhenov\n */\nconst resourceNamePEG = defineParser(\n    red(\n        regexp('[^\\\\[\\\\,]+'),\n        name => ({\n            resourceName : name.trim(),\n            units        : 100,\n            match        : name\n        })\n    )\n);\n\n/**\n * Consumes string while it provides numbers or spaces, value parsed them will be filtered of spaces\n * and just compacted number will be used.\n *\n * Example: 12 34 0 rest -> 12340\n */\nconst integerPEG = defineParser(\n    red(\n        regexp('[0-9\\\\s]+'),\n        (value) => ({\n            value : value.split(/\\s*/).join(''),\n            match : value\n        })\n    )\n);\n\n/**\n * Consumes one character either (decimal separator) '.' or ','\n *\n * Example: , rest -> ,\n */\nconst decimalSeparatorPEG = defineParser(\n    red(\n        alt(\n            string('.'),\n            string(',')\n        ),\n        (value) => ({\n            value,\n            match : value\n        })\n    )\n);\n\n/**\n * Consumes units number which might be given as:\n * - number with integer, decimal separator and fractional parts\n * - decimal separator and fractional part, so integer part will be considered 0\n * - just integer\n * value parsed will be transformed into Number type\n *\n * Example:\n * 10.2 rest -> 10.2\n * .2 rest -> 0.2\n * 100 rest -> 100\n */\nconst unitsNumberPEG = defineParser(\n    alt(\n        red(\n            seq(\n                () => integerPEG,\n                () => decimalSeparatorPEG,\n                () => integerPEG\n            ),\n            (integer, sep, fractional) => ({\n                value : Number(`${integer.value}.${fractional.value}`),\n                match : [integer.match, sep.match, fractional.match].join('')\n            })\n        ),\n        red(\n            seq(\n                () => decimalSeparatorPEG,\n                () => integerPEG\n            ),\n            (sep, fractional) => ({\n                value : Number(`0.${fractional.value}`),\n                match : [sep.match, fractional.match].join('')\n            })\n        ),\n        red(\n            () => integerPEG,\n            (value) => ({\n                value : Number(`${value.value}`),\n                match : value.match\n            })\n        )\n    )\n);\n\n/**\n * Consumes units with %, strips spaces between units number and % character.\n *\n * Example:\n * 70.5  % rest -> 70.5\n */\nconst unitsPersentagePEG = defineParser(\n    alt(\n        red(\n            seq(\n                () => unitsNumberPEG,\n                regexp('\\\\s*\\\\%')\n            ),\n            (units, perc) => ({\n                value : units.value,\n                match : [units.match, perc].join('')\n            })\n        ),\n        red(\n            () => unitsNumberPEG,\n            (units) => ({\n                value : units.value,\n                match : units.match\n            })\n        )\n    )\n);\n\n/**\n * Consumes units designation string, which should look like [ units with or without % ].\n * Strips spaces before and after [, ] characters.\n *\n * Example:\n * [ 70.2 % ] rest -> 70.2\n */\nconst unitsDesignationPEG = defineParser(\n    red(\n        seq(\n            regexp('\\\\s*\\\\[\\\\s*'),\n            () => unitsPersentagePEG,\n            regexp('\\\\s*\\\\]')\n        ),\n        (startSep, units, endSep) => ({\n            units : units.value,\n            match : [startSep, units.match, endSep].join('')\n        })\n    )\n);\n\n/**\n * Consumes just single , character stripping spaces before and after\n *\n * Example:\n *     ,     rest -> ,\n */\nconst commaPEG = defineParser(\n    red(\n        regexp('\\\\s*,\\\\s*'),\n        (value) => ({\n            value,\n            match : value\n        })\n    )\n);\n\n/**\n * Consumes resource assignment string which consists of resources assignment entries separated by , character.\n * Each entry contains following parts:\n * - resource name (mandatory)\n * - units designation (optional, default is 100)\n *\n * Example:\n * Maxim Bazhenov, Mats Bryntse [90], Johan Isaksson [50 %] -> Successful parse result\n *\n * See {@link #function-parse} for parse result analysis\n */\nconst raPEG = defineParser(\n    alt(\n        seq(\n            () => resourceNamePEG,\n            () => unitsDesignationPEG,\n            alt(\n                seq(\n                    () => commaPEG,\n                    () => raPEG\n                ),\n                succeed('')\n            )\n        ),\n        seq(\n            () => resourceNamePEG,\n            alt(\n                seq(\n                    () => commaPEG,\n                    () => raPEG\n                ),\n                succeed('')\n            )\n        )\n    )\n);\n\n/**\n * Parses resource assignment string into structured set of objects\n *\n * The string format is: `Resource Name [Units%], Other name, ...` where units part is optional as well as % sign\n *\n * @returns {Object} Structured information about parsed assignments\n */\nexport const parse = (str) => {\n    let gotSuccess = false, result = [], rest = '';\n\n    raPEG(str, (possibleResult) => {\n        if (isSuccess(possibleResult)) {\n            const [, structuredResult, unstracturedRest] = possibleResult;\n\n            if (structuredResult.length > result.length) {\n                result = structuredResult;\n                rest = unstracturedRest;\n                gotSuccess = true;\n            }\n        }\n    });\n\n    let position = 0;\n\n    return gotSuccess ? {\n        rest,\n        assignments : result.reduce(\n            (result, part) => {\n                let currentResource;\n\n                if (typeof part == 'object') {\n                    if (Object.prototype.hasOwnProperty.call(part, 'resourceName')) {\n                        currentResource = Object.assign({ position }, part);\n                        result.push(currentResource);\n                    }\n                    else {\n                        currentResource = result[result.length - 1];\n                        if (Object.prototype.hasOwnProperty.call(part, 'units')) {\n                            currentResource.units = part.units;\n                        }\n                        currentResource.match += part.match;\n                    }\n\n                    position += part.match.length;\n                }\n\n                return result;\n            },\n            []\n        )\n    } : false;\n};\n\n/**\n * Composes parsable string from parse result object\n *\n * @param {Object} result Parse result like object\n * @param {Boolean} [exactIfPossible=false] Set to true to compose exactly like it was given to {@link #function-parse} and if parse result reverse composition information is available.\n * @returns {String}\n */\nexport const compose = (parseResult, exactIfPossible = false) => {\n    let result = '';\n\n    if (parseResult.assignments) {\n        result += parseResult.assignments.reduce(\n            (str, { resourceName, units, match }) => {\n                if (match && exactIfPossible) {\n                    str += match;\n                }\n                else {\n                    str += (str.length ? ', ' : '') + `${resourceName} [${units}%]`;\n                }\n\n                return str;\n            },\n            result\n        );\n    }\n\n    if (parseResult.rest) {\n        result += parseResult.rest;\n    }\n\n    if (!exactIfPossible) {\n        result = result.trim();\n    }\n\n    return result;\n};\n\n/**\n * Normalizes the given string by parsing it and recomposing it back thus omitting all optional parts\n *\n * @param {String} str\n * @returns {String}\n */\nexport const normalize = (str) => compose(parse(str));\n\nexport default {\n    parse,\n    compose,\n    normalize\n};\n","import BrowserHelper from '../../../Core/helper/BrowserHelper.js';\nimport DH from '../../../Core/helper/DateHelper.js';\nimport GridFeatureManager from '../../../Grid/feature/GridFeatureManager.js';\nimport InstancePlugin from '../../../Core/mixin/InstancePlugin.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\nimport XMLHelper from '../../../Core/helper/XMLHelper.js';\nimport Model from '../../../Core/data/Model.js';\n\nconst\n    // <remove-on-release>\n    // TODO: some early date to safely not intersect w/ some calendar exceptions\n    // </remove-on-release>\n    MIN_DATE = DH.clearTime(new Date(1900, 5, 15)),\n    taskUnitMap = {\n        minute : 3,\n        hour   : 5,\n        day    : 7,\n        week   : 9,\n        month  : 11\n    },\n    projectUnitMap = {\n        minute : 1,\n        hour   : 2,\n        day    : 3,\n        week   : 4,\n        month  : 5\n    },\n    constraintMap = {\n        finishnoearlierthan : 6,\n        finishnolaterthan   : 7,\n        mustfinishon        : 3,\n        muststarton         : 2,\n        startnoearlierthan  : 4,\n        startnolaterthan    : 5\n    },\n    typeMap = {\n        FixedDuration : 1,\n        FixedUnits    : 0,\n        FixedEffort   : 2,\n        Normal        : 0\n    },\n    dependencyTypeMap = {\n        0 : 3,\n        1 : 2,\n        2 : 1,\n        3 : 0\n    };\n\n/**\n * @module Gantt/feature/export/MspExport\n */\n\n/**\n * A feature that allows exporting Gantt to Microsoft Project without involving a server.\n *\n * [Microsoft Project XML specification](https://docs.microsoft.com/en-us/office-project/xml-data-interchange/introduction-to-project-xml-data)\n *\n * This feature supports exporting to an XML format that can be imported by MS Project Professional 2013 / 2019.\n *\n * Here is an example of how to add the feature:\n *\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         mspExport : {\n *             // Choose the filename for the exported file\n *             filename : 'Gantt Export'\n *         }\n *     }\n * });\n * ```\n *\n * And how to trigger an export:\n *\n * ```javascript\n * gantt.features.mspExport.export({\n *     filename : 'Gantt Export'\n * })\n * ```\n *\n * ## Processing of exported data\n *\n * Use the {@link #event-dataCollected} event to process exported data before it is written to the XML-file:\n *\n * ```javascript\n * // set listener on Gantt construction step\n * const gantt = new Gantt({\n *     ---\n *     features : {\n *         mspExport : {\n *             listeners : {\n *                 dataCollected : {{ data }} => {\n *                     // patch <Project><Name> tag content\n *                     data.Name = 'My Cool Project';\n *                 }\n *             }\n *         }\n *     }\n * });\n *\n * // set listener at runtime\n * gantt.features.mspExport.on({\n *     dataCollected : {{ data }} => {\n *         // patch <Project><Name> tag content\n *         data.Name = 'My Cool Project';\n *     }\n * })\n * ```\n *\n * @classtype mspExport\n *\n * @extends Core/mixin/InstancePlugin\n * @feature\n * @demo Gantt/msprojectexport\n */\nexport default class MspExport extends InstancePlugin {\n\n    static $name = 'MspExport';\n\n    resourceCalendar = new Map();\n\n    static configurable = {\n        /**\n         * Name of the exported file (including extension)\n         * @config {String}\n         * @default\n         */\n        filename : null,\n\n        /**\n         * Defines how dates are formatted for MS Project. Information about formats can be found in {@link Core.helper.DateHelper}\n         * @config {String}\n         * @default\n         */\n        dateFormat : 'YYYY-MM-DDTHH:mm:ss',\n\n        /**\n         * Defines how time is formatted for MSProject. Information about formats can be found in {@link Core.helper.DateHelper}\n         * @config {String}\n         * @default\n         */\n        timeFormat : 'HH:mm:ss',\n\n        /**\n         * Defines the version used for MSProject (2013 or 2019)\n         * @config {Number}\n         * @default\n         */\n        msProjectVersion : 2019\n    };\n\n    /**\n     * Generate the export data to generate the XML.\n     * @returns {Object} Gantt data on MS Project structure to generate the XML\n     * @private\n     */\n    generateExportData() {\n        const me = this;\n\n        me.tasks = me.collectProjectTasks();\n\n        return {\n            ...me.getMsProjectConfig(),\n            Calendars : {\n                Calendar : me.getCalendarsData()\n            },\n            Tasks : {\n                Task : me.getTasksData()\n            },\n            Resources : {\n                Resource : me.getResourcesData()\n            },\n            Assignments : {\n                Assignment : me.getAssignmentsData()\n            }\n        };\n    }\n\n    /**\n     * Generates and downloads the .XML file.\n     * @param {Object} [config] Optional configuration object, which overrides the initial settings of the feature/exporter.\n     * @param {String} [config.filename] The filename to use\n     */\n    export(config = {}) {\n        const me = this;\n\n        if (me.disabled) {\n            return;\n        }\n\n        me.resourceCalendar.clear();\n\n        config = ObjectHelper.assign({}, me.config, config);\n\n        if (!config.filename) {\n            config.filename = `${me.client.$$name}.xml`;\n        }\n\n        /**\n         * Fires on the owning Gantt before export starts. Return `false` to cancel the export.\n         * @event beforeMspExport\n         * @preventable\n         * @on-owner\n         * @param {Object} config Export config\n         */\n        if (me.client.trigger('beforeMspExport', { config }) !== false) {\n\n            const data = me.generateExportData(config);\n\n            /**\n             * Fires when project data is collected to an object\n             * that is going to be exported as XML text.\n             *\n             * The event can be used to modify exported data before it is written to the XML-file:\n             *\n             * ```javascript\n             * const gantt = new Gantt({\n             *     ---\n             *     features : {\n             *         mspExport : {\n             *             listeners : {\n             *                 // listener to process exported data\n             *                 dataCollected : {{ data }} => {\n             *                     // patch <Project><Name> tag content\n             *                     data.Name = 'My Cool Project';\n             *                 }\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             * @event dataCollected\n             * @param {Object} config Export config\n             * @param {Object} data Collected data to export\n             */\n            me.trigger('dataCollected', { config, data });\n\n            const\n                fileContent = me.convertToXml(data),\n                eventParams = { config, data, fileContent };\n\n            /**\n             * Fires on the owning Gantt when project content is exported\n             * to XML, before the XML is downloaded by the browser.\n             * @event mspExport\n             * @on-owner\n             * @param {Object} config Export config\n             * @param {String} fileContent Exported XML-file content\n             */\n            me.client.trigger('mspExport', eventParams);\n\n            BrowserHelper.download(config.filename, `data:text/xml;charset=utf-8,${encodeURIComponent(eventParams.fileContent)}`);\n        }\n    }\n\n    /**\n     * Convert Object data to XML.\n     * @param {Object} data The Object with data.\n     * @returns {String} The XML data.\n     * @private\n     */\n    convertToXml(data) {\n        return XMLHelper.convertFromObject(data, {\n            rootName            : 'Project',\n            elementName         : '',\n            xmlns               : 'http://schemas.microsoft.com/project',\n            rootElementForArray : false\n        });\n    }\n\n    /**\n     * Get the XML configurations in MS Project format.\n     * @returns {Object} MS Project configurations for the XML\n     * @private\n     */\n    getMsProjectConfig() {\n        const\n            me = this,\n            dateFormat = me.dateFormat,\n            { project } = me.client,\n            fileName = me.filename || me.client.$$name;\n\n        return {\n            CalendarUID                : me.getCalendarUID(project.effectiveCalendar),\n            CreationDate               : DH.format(new Date(), dateFormat),\n            SplitsInProgressTasks      : 0,\n            MoveCompletedEndsBack      : 0,\n            MoveRemainingStartsBack    : 0,\n            MoveRemainingStartsForward : 0,\n            MoveCompletedEndsForward   : 0,\n            NewTaskStartDate           : 0,\n            DaysPerMonth               : project.daysPerMonth,\n            FinishDate                 : DH.format(project.endDate, dateFormat),\n            MinutesPerDay              : project.hoursPerDay * 60,\n            MinutesPerWeek             : project.daysPerWeek * project.hoursPerDay * 60,\n            Name                       : fileName,\n            ScheduleFromStart          : project.direction === 'Forward' ? 1 : 0,\n            StartDate                  : DH.format(project.startDate, dateFormat),\n            Title                      : fileName,\n            WorkFormat                 : projectUnitMap[project.effortUnit],\n            ProjectExternallyEdited    : 0\n        };\n    }\n\n    /**\n     * Format Calendars from Gantt to MS Project format.\n     * @returns {Array} Calendars array formatted\n     * @private\n     */\n    getCalendarsData() {\n        const\n            me = this,\n            {\n                calendarManagerStore,\n                project\n            } = me.client,\n            { effectiveCalendar } = project,\n            calendars             = calendarManagerStore.allRecords || [];\n\n        // if project's calendar is not included on calendars array, include it\n        if (!calendarManagerStore.getByInternalId(effectiveCalendar.internalId)) {\n            calendars.push(effectiveCalendar);\n        }\n\n        // Each resource in MS Project data model has its own calendar\n        // so let's make dummy calendars for all resources\n\n        me.client.resources.forEach(resource => {\n            const calendar = new resource.effectiveCalendar.constructor({ name : resource.name });\n\n            // parent calendar for this dummy will be the real calendar the resource uses\n            calendar.parent = resource.effectiveCalendar;\n\n            calendar.isResourceCalendar = true;\n\n            // remember the resource calendar\n            me.resourceCalendar.set(resource, calendar);\n\n            calendars.push(calendar);\n        });\n\n        return calendars.map(calendar => {\n            const uid = me.getCalendarUID(calendar);\n\n            let\n                calendarName    = calendar.name || calendar.internalId,\n                baseCalendarUID = 0,\n                isBaseCalendar  = 0;\n\n            // MS Project does not support calendars hierarchy fully\n            // it has two level hierarchy:\n            // - first level - so called base calendars\n            // - second level - any other calendars (including resource calendars) that extend the base ones\n\n            if (!calendar.isResourceCalendar) {\n                calendarName    += ' - imported';\n                // all non-dummy calendars we import as base calendars (the one that can be extended in MSP)\n                isBaseCalendar  = 1;\n            }\n            else {\n                baseCalendarUID = me.getCalendarUID(calendar.parent, 0);\n            }\n\n            return {\n                ID              : uid,\n                UID             : uid,\n                BaseCalendarUID : baseCalendarUID,\n                // all non-dummy calendars we import as base calendars (the one that can be extended in MSP)\n                IsBaseCalendar  : isBaseCalendar,\n                Name            : calendarName,\n                WeekDays        : {\n                    WeekDay : me.formatWeekDays(calendar)\n                }\n                // <remove-on-release>\n                // TODO:\n                // WorkWeeks : {\n                //     WorkWeek : this.formatWorkWeeks(calendar)\n                // }\n                // </remove-on-release>\n            };\n        });\n    }\n\n    /**\n     * Format intervals to MS project format for the WeekDays property.\n     * @param {Array} calendar Array of intervals data.\n     * @returns {Array} Array with data formatted\n     * @private\n     */\n    formatWeekDays(calendar) {\n        const\n            { timeFormat } = this,\n            ticks          = [],\n            daysData       = {};\n\n        let startDate = MIN_DATE,\n            endDate;\n\n        for (let i = 0; i < 7; i++) {\n            // week day index\n            const day = startDate.getDay();\n\n            daysData[day] = {\n                DayType    : day + 1,\n                DayWorking : 0\n            };\n\n            endDate = DH.clearTime(DH.add(startDate, 1, 'day'));\n\n            ticks.push({ startDate, endDate });\n\n            // proceed to next day\n            startDate = endDate;\n        }\n\n        // clone original calendar to get rid of its existing caches\n        calendar = calendar.copy();\n\n        const\n            // dummy calendar with 7 day borders ..to force forEachAvailabilityInterval to stop on each day start\n            dummyCalendar        = new calendar.constructor({ intervals : ticks }),\n            calendarsCombination = this.client.project.combineCalendars([calendar, dummyCalendar]);\n\n        calendarsCombination.forEachAvailabilityInterval(\n            { startDate : MIN_DATE, endDate },\n            (startDate, endDate, calendarCacheInterval) => {\n                const\n                    calendarsStatus   = calendarCacheInterval.getCalendarsWorkStatus(),\n                    dayData           = daysData[startDate.getDay()];\n\n                // if the calendar has working interval for that period\n                if (calendarsStatus.get(calendar)) {\n                    // consider the day as working\n                    dayData.DayWorking = 1;\n\n                    dayData.WorkingTimes = dayData.WorkingTimes || { WorkingTime : [] };\n\n                    // put that time range\n                    dayData.WorkingTimes.WorkingTime.push({\n                        FromTime : DH.format(startDate, timeFormat),\n                        ToTime   : DH.format(endDate, timeFormat)\n                    });\n                }\n            }\n        );\n\n        return Object.values(daysData);\n    }\n\n    /**\n     * Format intervals to MS project format for the WorkWeeks property.\n     * @param {Array} Array of intervals data.\n     * @returns {Array} Array with data formatted\n     * @private\n     */\n    // <remove-on-release>\n    // formatWorkWeeks(calendar) {\n    //     // TODO: implement\n    // }\n    // </remove-on-release>\n\n    collectProjectTasks() {\n        const result = [];\n\n        this.client.store.rootNode.traverse(node => result.push(node), true);\n\n        return result;\n    }\n\n    /**\n     * Format Tasks from Gantt to MS Project format.\n     * @returns {Array} Tasks array formatted\n     * @private\n     */\n    getTasksData() {\n        const\n            me             = this,\n            { project }    = me.client,\n            isForward      = project.direction == 'Forward',\n            { dateFormat, tasks } = me;\n\n        return tasks.map(task => {\n            const\n                { startDate, endDate, wbsCode } = task,\n                // filter out broken dependencies\n                predecessors     = task.predecessors.filter(({ fromEvent }) => fromEvent),\n                durationMs       = project.convertDuration(task.duration, task.durationUnit, 'millisecond'),\n                effortMs         = project.convertDuration(task.effort, task.effortUnit, 'millisecond'),\n                actualDurationMs = task.percentDone * 0.01 * durationMs,\n                startDateStr     = DH.format(startDate, dateFormat),\n                endDateStr       = DH.format(endDate, dateFormat),\n                durationStr      = MspExport.convertDurationToMspDuration(durationMs, 'ms'),\n                uid              = me.getTaskUID(task),\n                result           = {\n                    UID               : uid,\n                    Name              : task.name,\n                    Active            : me.inactive ? 0 : 1,\n                    Manual            : task.manuallyScheduled ? 1 : 0,\n                    Type              : task.isLeaf ? typeMap[task.schedulingMode] : 1,\n                    IsNull            : startDate && endDate ? 0 : 1,\n                    WBS               : wbsCode,\n                    OutlineNumber     : wbsCode,\n                    OutlineLevel      : wbsCode.split('.').length,\n                    Start             : startDateStr,\n                    Finish            : endDateStr,\n                    Duration          : durationStr,\n                    ManualStart       : startDateStr,\n                    ManualFinish      : endDateStr,\n                    ManualDuration    : durationStr,\n                    DurationFormat    : taskUnitMap[task.durationUnit],\n                    Work              : MspExport.convertDurationToMspDuration(effortMs, 'ms'),\n                    EffortDriven      : task.effortDriven ? 1 : 0,\n                    Estimated         : 0,\n                    Milestone         : task.isMilestone ? 1 : 0,\n                    Summary           : task.isLeaf ? 0 : 1,\n                    PercentComplete   : Math.round(task.percentDone),\n                    ActualStart       : startDateStr,\n                    ActualDuration    : MspExport.convertDurationToMspDuration(actualDurationMs, 'ms'),\n                    RemainingDuration : MspExport.convertDurationToMspDuration(durationMs - actualDurationMs, 'ms'),\n                    PredecessorLink   : predecessors.map(predecessor => ({\n                        LagFormat      : taskUnitMap[predecessor.lagUnit],\n                        LinkLag        : project.convertDuration(predecessor.lag, predecessor.lagUnit, 'minute') * 10,\n                        PredecessorUID : me.getTaskUID(predecessor.fromEvent),\n                        Type           : dependencyTypeMap[predecessor.type]\n                    })),\n                    Baseline : task.baselines.map((baseline, index) => ({\n                        Number   : index,\n                        Finish   : DH.format(baseline.endDate, dateFormat),\n                        Start    : DH.format(baseline.startDate, dateFormat),\n                        Duration : MspExport.convertDurationToMspDuration(baseline.duration, baseline.durationUnit)\n                    })),\n                    IgnoreResourceCalendar : task.ignoreResourceCalendar ? 1 : 0,\n                    Rollup                 : task.rollup ? 1 : 0,\n                    ConstraintType         : task.constraintType ? constraintMap[task.constraintType] : (isForward ? 0 : 1),\n                    CalendarUID            : me.getCalendarUID(task.calendar)\n                };\n\n            if (task.constraintDate) {\n                result.ConstraintDate = DH.format(task.constraintDate, dateFormat);\n            }\n\n            if (task.deadlineDate) {\n                result.Deadline = DH.format(task.deadlineDate, dateFormat);\n            }\n\n            if (task.note) {\n                result.Notes = task.note;\n            }\n\n            return result;\n        });\n    }\n\n    getTaskUID(task) {\n        return task.internalId;\n    }\n\n    getCalendarUID(calendar, fallbackValue = -1) {\n        return calendar && !calendar.isRoot ? calendar.internalId : fallbackValue;\n    }\n\n    /**\n     * Format Resources from Gantt to MS Project format.\n     * @returns {Array} Resources array formatted\n     * @private\n     */\n    getResourcesData() {\n        return this.client.resources.map(resource => ({\n            UID         : resource.internalId,\n            Name        : resource.name,\n            Type        : 1,\n            MaxUnits    : '1.00',\n            PeakUnits   : '1.00',\n            // seems for version 2013 setting the calendar id it breaks so only Project level calendar is importable\n            CalendarUID : this.msProjectVersion === 2013 ? null : this.getCalendarUID(this.resourceCalendar.get(resource))\n        }));\n    }\n\n    /**\n     * Format Assignments from Gantt to MS Project format.\n     * @returns {Array} Assignments array formatted\n     * @private\n     */\n    getAssignmentsData() {\n        const result = [];\n\n        // for version 2013 the assignments doesn't work\n        if (this.msProjectVersion === 2013) {\n            return result;\n        }\n\n        const { project } = this.client;\n\n        for (const task of this.tasks) {\n            const\n                assigned    = task.assigned,\n                taskUID     = this.getTaskUID(task),\n                percentDone = Math.round(task.percentDone),\n                start       = DH.format(task.startDate, this.dateFormat),\n                finish      = DH.format(task.endDate, this.dateFormat);\n\n            if (assigned.size) {\n                for (const assignment of assigned) {\n                    const\n                        assignmentWorkMs          = project.convertDuration(assignment.effort, task.effortUnit, 'millisecond'),\n                        actualAssignmentWorkMs    = project.convertDuration(assignment.actualEffort, task.effortUnit, 'millisecond'),\n                        remainingAssignmentWorkMs = assignmentWorkMs - actualAssignmentWorkMs;\n\n                    result.push({\n                        UpdateNeeded        : 0,\n                        UID                 : assignment.internalId,\n                        TaskUID             : taskUID,\n                        ResourceUID         : assignment.resource.internalId,\n                        PercentWorkComplete : percentDone,\n                        Work                : MspExport.convertDurationToMspDuration(assignmentWorkMs, 'ms'),\n                        ActualWork          : MspExport.convertDurationToMspDuration(actualAssignmentWorkMs, 'ms'),\n                        RemainingWork       : MspExport.convertDurationToMspDuration(remainingAssignmentWorkMs, 'ms'),\n                        Start               : start,\n                        Finish              : finish,\n                        Units               : assignment.units / 100\n                    });\n                }\n            }\n            else {\n                const\n                    effortMs       = project.convertDuration(task.effort, task.effortUnit, 'millisecond'),\n                    actualEffortMs = effortMs * percentDone * 0.01,\n                    effortStr      = MspExport.convertDurationToMspDuration(effortMs, 'ms');\n\n                result.push({\n                    UID                 : Model._internalIdCounter++,\n                    TaskUID             : taskUID,\n                    ResourceUID         : -65535,\n                    PercentWorkComplete : percentDone,\n                    ActualWork          : MspExport.convertDurationToMspDuration(actualEffortMs, 'ms'),\n                    RemainingWork       : MspExport.convertDurationToMspDuration(effortMs - actualEffortMs, 'ms'),\n                    Start               : start,\n                    Finish              : finish,\n                    Units               : 1,\n                    Work                : effortStr\n                });\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Convert to MS Project Span Date Time format.\n     * @param {Number} value The value to be converted.\n     * @param {String} unit The unit of the value to be converted\n     * @returns {String} The value formatted to \"PTnHnMnS\". E.g: PT10H30M, PT6H20M13S\n     * @private\n     */\n    static convertDurationToMspDuration(value, unit) {\n        if (value == null) {\n            return '';\n        }\n\n        const\n            delta = DH.getDelta(DH.as('ms', value, unit), { ignoreLocale : true, maxUnit : 'hour' }),\n            { hour = 0, minute = 0, second = 0 } = delta;\n\n        return `PT${hour}H${minute}M${second}S`;\n    }\n}\n\nGridFeatureManager.registerFeature(MspExport, false, 'Gantt');\n","import Base from '../../../Core/Base.js';\nimport DomDataStore from '../../../Core/data/DomDataStore.js';\n\n/**\n * @module Gantt/view/mixin/GanttDom\n */\n\nconst hyphenRe = /-/g;\n\n/**\n * An object which encapsulates a Gantt timeline tick context based on a DOM event. This will include\n * the row (task) information and the tick and time information for a DOM pointer event detected\n * in the timeline.\n * @typedef {Object} GanttTimelineContext\n * @property {Event} domEvent The DOM event which triggered the context change.\n * @property {HTMLElement} eventElement If the `domEvent` was on an event bar, this will be the event bar element.\n * @property {HTMLElement} cellElement The cell element under the `domEvent`\n * @property {Date} date The date corresponding to the `domEvent` position in the timeline\n * @property {Scheduler.model.TimeSpan} tick A {@link Scheduler.model.TimeSpan} record which encapsulates the contextual tick\n * @property {Number} tickIndex The contextual tick index. This may be fractional.\n * @property {Number} tickParentIndex The integer contextual tick index.\n * @property {Date} tickStartDate The start date of the contextual tick.\n * @property {Date} tickEndDate The end date of the contextual tick.\n * @property {Grid.row.Row} row The contextual {@link Grid.row.Row}\n * @property {Number} index The contextual row index\n * @property {Gantt.model.TaskModel} [taskRecord] The contextual task record (if any) if the event source is a `Gantt`\n */\n\n/**\n * Fired when the pointer-activated {@link Scheduler.view.mixin.TimelineDomEvents#property-timelineContext} has changed.\n * @event timelineContextChange\n * @override // this has different TimelineContext type from the one in TimelineDomEvents\n * @param {GanttTimelineContext} oldContext The tick/task context being deactivated.\n * @param {GanttTimelineContext} context The tick/task context being activated.\n */\n\n/**\n * Mixin with TaskModel <-> HTMLElement mapping functions\n *\n * @mixin\n */\nexport default Target => class GanttDom extends (Target || Base) {\n    static get $name() {\n        return 'GanttDom';\n    }\n\n    // Alias for resolveTaskRecord method to satisfy the scheduler naming requirements.\n    resolveEventRecord(element) {\n        return this.resolveTaskRecord(element);\n    }\n\n    /**\n     * Returns the task record for a DOM element\n     * @param {HTMLElement} element The DOM node to lookup\n     * @returns {Gantt.model.TaskModel} The task record\n     */\n    resolveTaskRecord(element) {\n        const eventElement = element.closest(this.eventSelector);\n\n        return eventElement ? this.store.getById(eventElement.dataset.taskId) : this.getRecordFromElement(element);\n    }\n\n    /**\n     * Product agnostic method which yields the {@link Gantt.model.TaskModel} record which underpins the row which\n     * encapsulates the passed element. The element can be a grid cell, or an event element, and the result\n     * will be a {@link Gantt.model.TaskModel}\n     * @param {HTMLElement|Event} elementOrEvent The HTML element or DOM event to resolve a record from\n     * @returns {Gantt.model.TaskModel} The resource corresponding to the element, or null if not found.\n     */\n    resolveRowRecord(elementOrEvent) {\n        return this.resolveTaskRecord(elementOrEvent);\n    }\n\n    /**\n     * Relays keydown events as taskKeyDown if we have a selected task(s).\n     * @private\n     */\n    onElementKeyDown(event) {\n        const taskRecord = this.resolveTaskRecord(event.target);\n\n        super.onElementKeyDown(event);\n\n        if (taskRecord) {\n            this.trigger('taskKeyDown', {\n                taskRecord,\n                event\n            });\n        }\n    }\n\n    /**\n     * Relays keyup events as taskKeyUp if we have a selected task(s).\n     * @private\n     */\n    onElementKeyUp(event) {\n        const taskRecord = this.resolveTaskRecord(event.target);\n\n        super.onElementKeyUp(event);\n\n        if (taskRecord) {\n            this.trigger('taskKeyUp', {\n                taskRecord,\n                event\n            });\n        }\n    }\n\n    /**\n     * Returns the HTMLElement representing a task record.\n     *\n     * @param {Gantt.model.TaskModel} taskRecord A task record\n     * @param {Boolean} [inner] Specify `false` to return the task wrapper element\n     *\n     * @returns {HTMLElement} The element representing the task record\n     */\n    getElementFromTaskRecord(taskRecord, inner = true) {\n        return this.taskRendering.getElementFromTaskRecord(taskRecord, inner);\n    }\n\n    // <remove-on-release>\n    // TODO: since we have decided to call tasks events then the method being aliased should be renamed\n    // </remove-on-release>\n    // Alias to make scheduler features applied to Gantt happy\n    getElementFromEventRecord(eventRecord) {\n        return this.getElementFromTaskRecord(eventRecord);\n    }\n\n    /**\n     * Generates the element `id` for a task element. This is used when\n     * recycling an event div which has been moved from one resource to\n     * another. The event is assigned its new render id *before* being\n     * returned to the free pool, so that when the render engine requests\n     * a div from the free pool, the same div will be returned and it will\n     * smoothly transition to its new position.\n     * @param {Scheduler.model.EventModel} taskRecord\n     * @private\n     */\n    getEventRenderId(taskRecord) {\n        // <remove-on-release>\n        // TODO: use DomHelper.makeValidId or StringHelper.createId. Cannot currently since they strip out ids that only contains numbers\n        // </remove-on-release>\n        return `${this.id.toString().replace(hyphenRe, '_')}-${taskRecord.id}`;\n    }\n\n    /**\n     * In Gantt, the task is the row, so it's valid to resolve a mouse event on a task to the TimeAxisColumn's cell.\n     *\n     * This method find the cell location of the passed event. It returns an object describing the cell.\n     * @param {Event} event A Mouse, Pointer or Touch event targeted at part of the grid.\n     * @returns {Object} An object containing the following properties:\n     * - `cellElement` - The cell element clicked on.\n     * - `columnId` - The `id` of the column clicked under.\n     * - `record` - The {@link Core.data.Model record} clicked on.\n     * - `id` - The `id` of the {@link Core.data.Model record} clicked on.\n     * @private\n     * @category Events\n     */\n    getEventData(event) {\n        const\n            me     = this,\n            record = me.resolveTimeSpanRecord(event.target);\n\n        // If the event was on a task, then we're in one of the TimeAxisColumn's cells.\n        if (record) {\n            const\n                cellElement = me.getCell({\n                    record,\n                    column : me.timeAxisColumn\n                }),\n                cellData = DomDataStore.get(cellElement),\n                id       = cellData.id,\n                columnId = cellData.columnId;\n\n            return {\n                cellElement,\n                cellData,\n                columnId,\n                id,\n                record,\n                cellSelector : { id, columnId }\n            };\n        }\n        else {\n            return super.getEventData(event);\n        }\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport Rectangle from '../../../Core/helper/util/Rectangle.js';\nimport DH from '../../../Core/helper/DateHelper.js';\n\n/**\n * @module Gantt/view/mixin/GanttRegions\n */\n\n/**\n * Functions to get regions (bounding boxes) for gantt, tasks etc.\n *\n * @mixin\n */\nexport default Target => class GanttRegions extends (Target || Base) {\n    static get $name() {\n        return 'GanttRegions';\n    }\n\n    /**\n     * Gets the region represented by the timeline and optionally only for a single task. Returns `null` if passed a\n     * task that is filtered out or not part of the task store.\n     * @param {Gantt.model.TaskModel} taskRecord (optional) The task record\n     * @returns {Core.helper.util.Rectangle|null} The region of the schedule\n     */\n    getScheduleRegion(taskRecord, local = true, dateConstraints) {\n        const\n            me                                   = this,\n            { timeAxisSubGridElement, timeAxis } = me;\n\n        let region;\n\n        if (taskRecord) {\n            const\n                taskElement = me.getElementFromTaskRecord(taskRecord),\n                row         = me.getRowById(taskRecord.id);\n\n            if (!row) {\n                return null;\n            }\n\n            region = Rectangle.from(row.getElement('normal'), timeAxisSubGridElement);\n\n            if (taskElement) {\n                const taskRegion = Rectangle.from(taskElement, timeAxisSubGridElement);\n\n                region.y      = taskRegion.y;\n                region.bottom = taskRegion.bottom;\n            }\n            else {\n                region.y += me.barMargin;\n                region.bottom -= me.barMargin;\n            }\n        }\n        else {\n            // <remove-on-release>\n            // TODO: This is what the function that was removed here did.\n            // The coordinate space needs to be sorted out here!\n            // </remove-on-release>\n            region       = Rectangle.from(timeAxisSubGridElement).moveTo(null, 0);\n            region.width = timeAxisSubGridElement.scrollWidth;\n\n            region.y      = region.y + me.barMargin;\n            region.bottom = region.bottom - me.barMargin;\n        }\n\n        const\n            taStart        = timeAxis.startDate,\n            taEnd          = timeAxis.endDate,\n            { start, end } = dateConstraints || {};\n\n        if (start && end && !timeAxis.timeSpanInAxis(start, end)) {\n            return null;\n        }\n\n        if (!start && !end) {\n            dateConstraints = me.getDateConstraints?.(taskRecord) || {\n                start : taStart,\n                end   : taEnd\n            };\n        }\n\n        let startX = me.getCoordinateFromDate(dateConstraints.start ? DH.max(taStart, dateConstraints.start) : taStart),\n            endX   = me.getCoordinateFromDate(dateConstraints.end ? DH.min(taEnd, dateConstraints.end) : taEnd);\n\n        if (!local) {\n            startX = me.translateToPageCoordinate(startX);\n            endX   = me.translateToPageCoordinate(endX);\n        }\n\n        region.x     = Math.min(startX, endX);\n        region.width = Math.max(startX, endX) - Math.min(startX, endX);\n\n        return region;\n    }\n\n    translateToPageCoordinate(x) {\n        const element = this.timeAxisSubGridElement;\n\n        return x + element.getBoundingClientRect().left - element.scrollLeft;\n    }\n\n    // Decide if a record is inside a collapsed tree node, or inside a collapsed group (using grouping feature)\n    isRowVisible(taskRecord) {\n        // records in collapsed groups/branches etc. are removed from processedRecords\n        return this.store.indexOf(taskRecord) >= 0;\n    }\n\n    /**\n     * Get the region for a specified task\n     * @param {Gantt.model.TaskModel} taskRecord\n     * @param {Boolean} [includeOutside]\n     * @param {Boolean} [inner] Specify true to return the box for the task bar within the wrapper.\n     * @returns {Core.helper.util.Rectangle}\n     */\n    getTaskBox(taskRecord, includeOutside = false, inner = false) {\n        return this.taskRendering.getTaskBox(...arguments);\n    }\n\n    getSizeAndPosition() {\n        return this.taskRendering.getSizeAndPosition(...arguments);\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\n\n/**\n * @module Gantt/view/mixin/GanttScroll\n */\n\nconst defaultScrollOptions = {\n    block      : 'nearest',\n    edgeOffset : 20\n};\n\n/**\n * Functions for scrolling to tasks, dates etc.\n *\n * @mixin\n */\nexport default Target => class GanttScroll extends (Target || Base) {\n    static get $name() {\n        return 'GanttScroll';\n    }\n\n    /**\n     * Scrolls a task record into the viewport.\n     *\n     * @param {Gantt.model.TaskModel} taskRecord The task record to scroll into view\n     * @param {ScrollOptions} [options] How to scroll.\n     * @returns {Promise} A Promise which resolves when the scrolling is complete.\n     */\n    scrollTaskIntoView(taskRecord, options = defaultScrollOptions) {\n        let taskStart = taskRecord.startDate,\n            taskEnd   = taskRecord.endDate;\n\n        const me = this;\n\n        if (options.edgeOffset == null) {\n            options.edgeOffset = 20;\n        }\n\n        if (!taskRecord.isScheduled) {\n            return this.scrollRowIntoView(taskRecord, options);\n        }\n\n        if (me.timeAxisSubGrid.collapsed) {\n            return;\n        }\n\n        taskStart = taskStart || taskEnd;\n        taskEnd   = taskEnd || taskStart;\n\n        const taskIsOutside = taskStart < me.timeAxis.startDate | ((taskEnd > me.timeAxis.endDate) << 1);\n\n        // Make sure task is within TimeAxis time span unless extendTimeAxis passed as false.\n        // The TaskEdit feature passes false because it must not mutate the TimeAxis.\n        // Bitwise flag:\n        //  1 === start is before TimeAxis start.\n        //  2 === end is after TimeAxis end.\n        if (taskIsOutside && options.extendTimeAxis !== false) {\n            const currentTimeSpanRange = me.timeAxis.endDate - me.timeAxis.startDate;\n            let startAnchorPoint, endAnchorPoint;\n\n            // Event is too wide, expand the range to encompass it.\n            if (taskIsOutside === 3) {\n                me.timeAxis.setTimeSpan(\n                    new Date(taskStart.valueOf() - currentTimeSpanRange / 2),\n                    new Date(taskEnd.getTime() + currentTimeSpanRange / 2)\n                );\n            }\n            // Event is partially or wholly outside but will fit.\n            // Move the TimeAxis to include it. Attempt to maintain visual position.\n            else {\n                startAnchorPoint = me.getCoordinateFromDate((taskIsOutside & 1) ? taskEnd : taskStart);\n\n                // Event starts before\n                if (taskIsOutside & 1) {\n                    me.timeAxis.setTimeSpan(\n                        new Date(taskStart),\n                        new Date(taskStart.valueOf() + currentTimeSpanRange)\n                    );\n                }\n                // Event ends after\n                else {\n                    me.timeAxis.setTimeSpan(\n                        new Date(taskEnd.valueOf() - currentTimeSpanRange),\n                        new Date(taskEnd)\n                    );\n                }\n                // Restore view to same relative scroll position.\n                endAnchorPoint = (taskIsOutside & 1)\n                    ? me.getCoordinateFromDate(taskEnd)\n                    : me.getCoordinateFromDate(taskStart);\n\n                me.timeAxisSubGrid.scrollable.scrollBy(endAnchorPoint - startAnchorPoint);\n            }\n        }\n\n        // Establishing element to scroll to\n        const el = me.getElementFromTaskRecord(taskRecord);\n\n        if (el) {\n            const scroller = me.timeAxisSubGrid.scrollable;\n\n            // Scroll into view with animation and highlighting if needed.\n            return scroller.scrollIntoView(el, options);\n        }\n        else {\n            // Event not rendered, scroll to calculated location\n            return me.scrollUnrenderedTaskIntoView(taskRecord, options);\n        }\n    }\n\n    /**\n     * Scrolls an unrendered task into view. Internal function used from #scrollTaskIntoView.\n     * @private\n     */\n    scrollUnrenderedTaskIntoView(taskRec, options = defaultScrollOptions) {\n        if (options.edgeOffset == null) {\n            options.edgeOffset = 20;\n        }\n\n        const\n            me               = this,\n            scroller         = me.timeAxisSubGrid.scrollable,\n            box              = me.getTaskBox(taskRec),\n            scrollerViewport = scroller.viewport,\n            targetRect       = box.translate(scrollerViewport.x - scroller.x, scrollerViewport.y - scroller.y);\n\n        let result           = scroller.scrollIntoView(targetRect, Object.assign({}, options, { highlight : false }));\n\n        if (options.highlight || options.focus) {\n            const detacher = me.ion({\n                renderTask({ taskRecord, element }) {\n                    if (taskRecord === taskRec) {\n                        detacher();\n                        result = result.then(() => {\n                            options.highlight && DomHelper.highlight(element);\n                            options.focus && element.focus();\n                        });\n                    }\n                }\n            });\n        }\n        else {\n            // Task is painter asynchronously after scroll, need to wait for corresponding event from the view\n            result = Promise.all([\n                result,\n                new Promise(resolve => {\n                    const detacher = me.ion({\n                        renderTask({ taskRecord }) {\n                            if (taskRecord === taskRec) {\n                                detacher();\n                                resolve();\n                            }\n                        }\n                    });\n                })\n            ]);\n        }\n\n        return result;\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Gantt/view/mixin/GanttState\n */\n\n/**\n * Mixin for Gantt that handles state. It serializes the following gantt properties:\n *\n * * barMargin\n * * tickSize\n * * zoomLevel\n *\n * See {@link Grid.view.mixin.GridState} and {@link Core.mixin.State} for more information on state.\n *\n * @mixin\n */\nexport default Target => class GanttState extends (Target || Base) {\n    static get $name() {\n        return 'GanttState';\n    }\n\n    updateProject(project, old) {\n        super.updateProject(project, old);\n\n        this.detachListeners('suspendStateDuringDelayedCalculation');\n\n        // Delay calculation code path involves changing readOnly of the Gantt panel. This will also\n        // trigger state change, we don't need that. So we pause `triggerUpdate` listener to not trigger `stateChange`\n        if (project?.delayCalculation) {\n            project.ion({\n                name                  : 'suspendStateDuringDelayedCalculation',\n                delayCalculationStart : {\n                    fn   : 'suspendStateListener',\n                    prio : 10\n                },\n                delayCalculationEnd : {\n                    fn   : 'resumeStateListener',\n                    prio : -10\n                },\n                thisObj : this\n            });\n        }\n    }\n\n    suspendStateListener() {\n        this.stateListenerSuspended = (this.stateListenerSuspended || 0) + 1;\n    }\n\n    resumeStateListener() {\n        const me = this;\n\n        me.stateListenerSuspended = (me.stateListenerSuspended || 1) - 1;\n\n        if (!me.stateListenerSuspended && me.isSaveStatePending) {\n            me.saveState({ immediate : true });\n        }\n    }\n\n    saveState(...args) {\n        if (!this.stateListenerSuspended) {\n            return super.saveState(...args);\n        }\n    }\n\n    /**\n     * Gets or sets gantt's state. Check out {@link Gantt.view.mixin.GanttState} mixin for details.\n     * @member {Object} state\n     * @member {Object} state\n     * @property {Object[]} state.columns\n     * @property {Number} state.rowHeight\n     * @property {Object} state.scroll\n     * @property {Number} state.scroll.scrollLeft\n     * @property {Number} state.scroll.scrollTop\n     * @property {Array} state.selectedRecords\n     * @property {String} state.style\n     * @property {String} state.selectedCell\n     * @property {Object} state.store\n     * @property {Object} state.store.sorters\n     * @property {Object} state.store.groupers\n     * @property {Object} state.store.filters\n     * @property {Object} state.subGrids\n     * @property {Number} state.barMargin\n     * @property {Number} state.zoomLevel\n     * @category State\n     */\n\n    /**\n     * Apply previously stored state.\n     * @param {Object} state\n     * @private\n     */\n    applyState(state) {\n        const me = this;\n\n        // Applying sorters too early might lead to unexpected results if fields in the incoming dataset will be changed\n        // after initial commit\n        // state.store might be undefined if responsive level is being applied\n        if (!me.project.isInitialCommitPerformed && (state.store?.sorters || state.store?.filters)) {\n            const storeState = state.store;\n\n            me.project.commitAsync().then(() => {\n                if (!me.isDestroyed) {\n                    me.suspendRefresh();\n                    me.store.state = storeState;\n                    me.resumeRefresh(true);\n                }\n            });\n\n            delete state.store;\n        }\n\n        // Restoring selected cell and records during startup attempts to access task DOM elements which are not yet\n        // rendered. So we filter out these props and apply them in onPaint handler\n        const specialKeys = ['selectedCell', 'selectedRecords'];\n        if (specialKeys.some(key => key in state)) {\n            const subState = {};\n\n            // Copy special keys to a partial state object to apply later\n            specialKeys.forEach(key => {\n                if (key in state) {\n                    subState[key] = state[key];\n\n                    delete state[key];\n                }\n            });\n\n            // Create fixer method that will apply state after\n            me._applyStateAfterPaint = () => {\n                me._applyStateAfterPaint = null;\n\n                me.suspendRefresh();\n                Object.keys(subState).forEach(key => me[key] = subState[key]);\n                me.resumeRefresh(true);\n            };\n        }\n\n        super.applyState(state);\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n\n    onPaint(...args) {\n        super.onPaint(...args);\n\n        const me = this;\n\n        if (me._applyStateAfterPaint) {\n            if (!me.project.isInitialCommitPerformed) {\n                me.project.ion({\n                    commitFinalized() {\n                        me._applyStateAfterPaint();\n                    },\n                    thisObj : me,\n                    once    : true\n                });\n            }\n            else {\n                me._applyStateAfterPaint();\n            }\n        }\n    }\n};\n","import Base from '../../../Core/Base.js';\nimport ProjectConsumer from '../../../Scheduler/data/mixin/ProjectConsumer.js';\nimport ProjectModel from '../../model/ProjectModel.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\n\n/**\n * @module Gantt/view/mixin/GanttStores\n */\n\n/**\n * Functions for store assignment and store event listeners.\n * Properties are aliases to corresponding\n * ones of Gantt's {@link Gantt.model.ProjectModel project} instance.\n *\n * @mixin\n */\nexport default Target => class GanttStores extends ProjectConsumer(Target || Base) {\n    static get $name() {\n        return 'GanttStores';\n    }\n\n    // This is the static definition of the Stores we consume from the project, and\n    // which we must provide *TO* the project if we or our CrudManager is configured\n    // with them.\n    // The property name is the store name, and within that there is the dataName which\n    // is the property which provides static data definition. And there is a listeners\n    // definition which specifies the listeners *on this object* for each store.\n    //\n    // To process incoming stores, implement an updateXxxxxStore method such\n    // as `updateEventStore(eventStore)`.\n    //\n    // To process an incoming Project implement `updateProject`. __Note that\n    // `super.updateProject(...arguments)` must be called first.__\n    static get projectStores() {\n        return {\n            calendarManagerStore : {},\n\n            resourceStore : {\n                dataName : 'resources'\n            },\n\n            eventStore : {\n                dataName : 'events'\n            },\n\n            assignmentStore : {\n                dataName : 'assignments'\n            },\n\n            dependencyStore : {\n                dataName : 'dependencies'\n            }\n        };\n    }\n\n    static get configurable() {\n        return {\n            // Overridden. ProjectConsumer defaults to Scheduler's ProjectModel\n            projectModelClass : ProjectModel,\n\n            /**\n             * Inline tasks, will be loaded into an internally created TaskStore.\n             * @config {Gantt.model.TaskModel[]|TaskModelConfig[]}\n             * @category Data\n             */\n            tasks : null,\n\n            /**\n             * The {@link Gantt.data.TaskStore} holding the tasks to be rendered into the Gantt.\n             * @config {Gantt.data.TaskStore}\n             * @category Data\n             */\n            taskStore : null\n        };\n    }\n\n    updateProject(project, oldProject) {\n        super.updateProject(project, oldProject);\n\n        this.detachListeners('ganttStores');\n\n        this.bindCrudManager(project);\n\n        project?.ion({\n            name    : 'ganttStores',\n            refresh : 'internalOnProjectRefresh',\n            thisObj : this\n        });\n    }\n\n    get replica() {\n        return this.project.replica;\n    }\n\n    internalOnProjectRefresh({ isInitialCommit, isCalculated }) {\n        const\n            me = this,\n            {\n                project,\n                visibleDate = {}\n            }  = me;\n\n        if (!me.isPainted) {\n            return;\n        }\n\n        if (!me.appliedViewStartDate && !('startDate' in me.initialConfig) && project.startDate) {\n            const\n                requestedVisibleDate   = visibleDate?.date,\n                { startDate, endDate } = project,\n                min                    = requestedVisibleDate ? DateHelper.min(startDate, requestedVisibleDate) : startDate,\n                max                    = requestedVisibleDate\n                    ? (endDate\n                        ? DateHelper.max(endDate, requestedVisibleDate)\n                        : DateHelper.add(min, me.visibleDateRange.endDate - me.visibleDateRange.startDate))\n                    : endDate;\n\n            // if managed to calculated start/end dates\n            if (min && max) {\n                me.setTimeSpan(min, max, { ...visibleDate, visibleDate : requestedVisibleDate });\n                me.appliedViewStartDate = true;\n            }\n        }\n\n        // Transition all refreshes except the initial one or any used for early rendering\n        if (!isInitialCommit && isCalculated) {\n            me.refreshWithTransition();\n        }\n        // No transition on initial refresh, nothing to transition and don't want to delay dependency drawing more\n        // than necessary\n        else {\n            me.refresh();\n        }\n\n        me.trigger('projectRefresh', { isInitialCommit, isCalculated });\n    }\n\n    //endregion\n\n    //region Inline data\n\n    //region Store & model docs\n\n    // Configs\n\n    /**\n     * Inline resources, will be loaded into the backing project's ResourceStore.\n     * @config {Gantt.model.ResourceModel[]|ResourceModelConfig[]} resources\n     * @category Data\n     */\n\n    /**\n     * Inline assignments, will be loaded into the backing project's AssignmentStore.\n     * @config {Gantt.model.AssignmentModel[]|AssignmentModelConfig[]} assignments\n     * @category Data\n     */\n\n    /**\n     * Inline dependencies, will be loaded into the backing project's DependencyStore.\n     * @config {Gantt.model.DependencyModel[]|DependencyModelConfig[]} dependencies\n     * @category Data\n     */\n\n    /**\n     * Inline time ranges, will be loaded into the backing project's time range store.\n     * @config {Scheduler.model.TimeSpan[]|TimeSpanConfig[]} timeRanges\n     * @category Data\n     */\n\n    /**\n     * Inline calendars, will be loaded into the backing project's CalendarManagerStore.\n     * @config {Gantt.model.CalendarModel[]|CalendarModelConfig[]} calendars\n     * @category Data\n     */\n\n    // Properties\n\n    /**\n     * Get/set resources, applies to the backing project's ResourceStore.\n     * @member {Gantt.model.ResourceModel[]} resources\n     * @accepts {Gantt.model.ResourceModel[]|ResourceModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set assignments, applies to the backing project's AssignmentStore.\n     * @member {Gantt.model.AssignmentModel[]} assignments\n     * @accepts {Gantt.model.AssignmentModel[]|AssignmentModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set dependencies, applies to the backing projects DependencyStore.\n     * @member {Gantt.model.DependencyModel[]} dependencies\n     * @accepts {Gantt.model.DependencyModel[]|DependencyModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set time ranges, applies to the backing project's TimeRangeStore.\n     * @member {Scheduler.model.TimeSpan[]} timeRanges\n     * @accepts {Scheduler.model.TimeSpan[]|TimeSpanConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set calendars, applies to the backing projects CalendarManagerStore.\n     * @member {Gantt.model.CalendarModel[]} calendars\n     * @accepts {Gantt.model.CalendarModel[]|CalendarModelConfig[]}\n     * @category Data\n     */\n\n    //endregion\n\n    get timeRanges() {\n        return this.project.timeRanges;\n    }\n\n    set timeRanges(timeRanges) {\n        this.project.timeRanges = timeRanges;\n    }\n\n    get calendars() {\n        return this.project.calendars;\n    }\n\n    set calendars(calendars) {\n        this.project.calendars = calendars;\n    }\n\n    //endregion\n\n    //region TaskStore\n\n    get usesDisplayStore() {\n        return this.store !== this.taskStore;\n    }\n\n    /**\n     * Get/set tasks, applies to the backing project's EventStore.\n     * Returns a flat array of all tasks in the task store.\n     * @member {Gantt.model.TaskModel[]} tasks\n     * @accepts {Gantt.model.TaskModel[]|TaskModelConfig[]}\n     * @category Data\n     */\n    get tasks() {\n        return this.project.eventStore.allRecords;\n    }\n\n    changeTasks(tasks) {\n        const { project } = this;\n\n        if (this.buildingProjectConfig) {\n            // Set the property in the project config object.\n            project.eventsData = tasks;\n        }\n        else {\n            // Live update the project when in use.\n            project.eventStore.data = tasks;\n        }\n    }\n\n    /**\n     * Get/set the task store instance of the backing project.\n     * @member {Gantt.data.TaskStore} taskStore\n     * @category Data\n     */\n    changeTaskStore(taskStore) {\n        const { project } = this;\n\n        if (this.buildingProjectConfig) {\n            // Set the property in the project config object.\n            // Must not go through the updater. It's too early to\n            // inform host of store change.\n            project.eventStore = taskStore;\n            return;\n        }\n\n        // Live update the project when in use.\n        if (!this.initializingProject) {\n            if (project.eventStore !== taskStore) {\n                project.setEventStore(taskStore);\n                taskStore = project.eventStore;\n            }\n        }\n        return taskStore;\n    }\n\n    updateEventStore(eventStore) {\n        const me = this;\n\n        eventStore.metaMapId = me.id;\n\n        // taskStore is used for rows (store) and tasks\n        me.taskStore = me.store = eventStore;\n    }\n\n    bindStore(store) {\n        super.bindStore(store);\n\n        this.timeAxisViewModel.store = store;\n\n        // Occasionally we need to track batched changes.\n        // TaskResize requires this as it changes the endDate with task batched.\n        this.detachListeners('storeBatchedUpdateListener');\n\n        store.ion({\n            name          : 'storeBatchedUpdateListener',\n            batchedUpdate : 'onEventStoreBatchedUpdate',\n            thisObj       : this\n        });\n    }\n\n    /**\n     * Listener to the batchedUpdate event which fires when a field is changed on a record which\n     * is batch updating. Occasionally UIs must keep in sync with batched changes.\n     * For example, the TaskResize feature performs batched updating of the startDate/endDate\n     * and it tells its client to listen to batchedUpdate.\n     * @private\n     */\n    onEventStoreBatchedUpdate(event) {\n        const me = this;\n\n        if (me.listenToBatchedUpdates) {\n            const wasEnabled = me.enableEventAnimations;\n\n            // This pathway is used from TaskResize during dragging, so we do not\n            // want the size animating. It should follow the pointer in real time.\n            me.enableEventAnimations = false;\n            me.onStoreUpdateRecord(event);\n            me.enableEventAnimations = wasEnabled;\n        }\n    }\n\n    //endregion\n\n    //region Internal\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n\n    //endregion\n};\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Gantt/view/mixin/GanttTimelineDateMapper\n */\n\nexport default Target => class GanttTimelineDateMapper extends (Target || Base) {\n    static get $name() {\n        return 'GanttTimelineDateMapper';\n    }\n\n    /**\n     * Method to get a displayed end date value, see {@link Gantt/view/mixin/GanttTimelineDateMapper#function-getFormattedEndDate} for more info.\n     * @private\n     * @param {Date} endDate The date to format\n     * @param {Date} startDate The start date\n     * @returns {Date} The date value to display\n     */\n    getDisplayEndDate(endDate, startDate) {\n        return endDate;\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Gantt/view/mixin/TaskNavigation\n */\nconst animate100 = {\n    animate : 100\n};\n\n/**\n * Mixin that tracks event or assignment selection by clicking on one or more events in the scheduler.\n * @mixin\n */\nexport default Target => class TaskNavigation extends (Target || Base) {\n    static get $name() {\n        return 'TaskNavigation';\n    }\n\n    static get defaultConfig() {\n        return {\n            navigator : {\n                inlineFlow : false,\n                prevKey    : 'ArrowUp',\n                nextKey    : 'ArrowDown',\n                keys       : {\n                    Enter : 'onTaskEnterKey'\n                }\n            },\n\n            isNavigationKey : {\n                ArrowDown  : 1,\n                ArrowUp    : 1,\n                ArrowLeft  : 0,\n                ArrowRight : 0\n            }\n        };\n    }\n\n    processEvent(event) {\n        const me = this,\n            eventElement = event.target.closest(me.eventSelector);\n\n        if (!me.navigator.disabled && eventElement) {\n            event.taskRecord = event.eventRecord = me.resolveTaskRecord(eventElement);\n        }\n\n        return event;\n    }\n\n    normalizeTarget(event) {\n        return event.taskRecord;\n    }\n\n    // Makes sure you a click on a task that is already focused will call cell selection\n    onElementMouseDown(event) {\n        const\n            me               = this,\n            { _focusedCell } = me,\n            taskEl           = event.target.closest(me.navigator.itemSelector),\n            isFocused        = taskEl && taskEl === _focusedCell?.target;\n\n        super.onElementMouseDown(event);\n\n        if (isFocused && me.lastNavigationEvent !== event) {\n            me.onCellNavigate?.(me, _focusedCell, _focusedCell, true);\n            me.lastNavigationEvent = event; // Saved the navigation event so to not process this event twice\n        }\n    }\n\n    selectEvent(record, preserveSelection = false) {\n        if (!this.isSelected(record)) {\n            // Select row without scrolling any column into view\n            this.selectRow({\n                record         : record.id,\n                column         : false,\n                addToSelection : preserveSelection\n            });\n        }\n    }\n\n    deselectEvent(record) {\n        this.deselectRow(record.id);\n    }\n\n    getNext(taskRecord) {\n        const\n            me        = this,\n            { store } = me;\n\n        for (let rowIdx = store.indexOf(taskRecord) + 1; rowIdx < store.count; rowIdx++) {\n            const nextTask = store.getAt(rowIdx);\n\n            // Skip tasks which are outside the TimeAxis\n            if (me.isInTimeAxis(nextTask)) {\n                return nextTask;\n            }\n        }\n    }\n\n    getPrevious(taskRecord) {\n        const\n            me        = this,\n            { store } = me;\n\n        for (let rowIdx = store.indexOf(taskRecord) - 1; rowIdx >= 0; rowIdx--) {\n            const prevTask = store.getAt(rowIdx);\n\n            // Skip tasks which are outside the TimeAxis\n            if (me.isInTimeAxis(prevTask)) {\n                return prevTask;\n            }\n        }\n    }\n\n    set activeEvent(record) {\n        this.navigator.activeItem = this.getElementFromTaskRecord(record, false);\n    }\n\n    get activeEvent() {\n        const { activeItem } = this.navigator;\n\n        if (activeItem) {\n            return this.resolveTaskRecord(activeItem);\n        }\n    }\n\n    async navigateTo(targetEvent, {\n        scrollIntoView = true,\n        uiEvent        = {}\n    }) {\n        const\n            me                      = this,\n            { navigator }           = me,\n            { skipScrollIntoView }  = navigator;\n\n        if (targetEvent) {\n            if (scrollIntoView) {\n                // No key processing during scroll\n                navigator.disabled = true;\n                await me.scrollTaskIntoView(targetEvent, animate100);\n                navigator.disabled = false;\n            }\n            else {\n                navigator.skipScrollIntoView = true;\n            }\n\n            // Panel can be destroyed before promise is resolved\n            if (!me.isDestroyed) {\n                me.activeEvent = targetEvent;\n                navigator.skipScrollIntoView = skipScrollIntoView;\n                navigator.trigger('navigate', {\n                    event : uiEvent,\n                    item  : me.getElementFromTaskRecord(targetEvent, false)\n                });\n            }\n        }\n    }\n\n    clearEventSelection() {\n        this.deselectAll();\n    }\n\n    onTaskEnterKey() {\n        // Empty, to be chained by features (used by TaskEdit)\n    }\n\n    // OVERRIDE for EventNavigation#onDeleteKey\n    onDeleteKey(keyEvent) {\n        const record = keyEvent.eventRecord;\n\n        if (!this.readOnly && this.enableDeleteKey && record) {\n            this.removeEvents([record]);\n        }\n    }\n\n    onGridBodyFocusIn(focusEvent) {\n        // Task navigation only has a say when navigation is inside the TimeAxisSubGrid\n        if (this.timeAxisSubGridElement.contains(focusEvent.target)) {\n            const\n                me                  = this,\n                { navigationEvent } = me,\n                { target }          = focusEvent,\n                eventFocus          = target.closest(me.navigator.itemSelector),\n                task                = eventFocus ? me.resolveTaskRecord(target) : me.getRecordFromElement(target),\n                destinationCell     = me.normalizeCellContext({\n                    rowIndex : me.store.indexOf(task),\n                    column   : me.timeAxisColumn,\n                    target\n                });\n\n            // Don't take over what the event navigator does if it's doing task navigation.\n            // Just silently cache our actionable location.\n            if (eventFocus) {\n                if (me.lastNavigationEvent !== navigationEvent) {\n                    const { _focusedCell } = me;\n\n                    me._focusedCell = destinationCell;\n                    me.onCellNavigate?.(me, _focusedCell, destinationCell, true);\n                    // Saved the navigation event so to not process this event twice\n                    me.lastNavigationEvent = navigationEvent;\n                }\n                return;\n            }\n\n            // Try to focus the task.\n            me.navigateTo(task, {\n                scrollIntoView : Boolean(navigationEvent?.type !== 'mousedown'),\n                uiEvent        : navigationEvent\n            });\n            return;\n        }\n\n        super.onGridBodyFocusIn(focusEvent);\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport DomSync from '../../../Core/helper/DomSync.js';\nimport DomClassList from '../../../Core/helper/util/DomClassList.js';\nimport Rectangle from '../../../Core/helper/util/Rectangle.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\nimport StringHelper from '../../../Core/helper/StringHelper.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\n\n// <remove-on-release>\n// TODO: No need to keep this as an \"orientation\", make it a mixin for Gantt instead\n// </remove-on-release>\n\n/**\n * @module Gantt/view/orientation/NewTaskRendering\n * @internal\n */\n\nconst\n    releaseEventActions  = {\n        releaseElement : 1, // Not used at all at the moment\n        reuseElement   : 1  // Used by some other element\n    },\n    renderEventActions   = {\n        newElement      : 1,\n        reuseOwnElement : 1,\n        reuseElement    : 1\n    };\n\n/**\n * Handles rendering of tasks, using the following strategy:\n *\n * 1. When a row is rendered, it collects a DOM config for its task bar and stores in a map (row -> config)\n * 2. When a rendering pass is done, it syncs the DOM configs from the map to DOM\n *\n * The need for caching with this approach is minimal, only the map needs to be kept up to date with available rows.\n *\n * @internal\n * @extends Core/Base\n */\nexport default class NewTaskRendering extends Base {\n\n    //region Config & Init\n\n    static get properties() {\n        return {\n            rowMap : new Map()\n        };\n    }\n\n    construct(gantt) {\n        this.gantt = gantt;\n\n        gantt.rowManager.ion({\n            renderDone      : 'onRenderDone',\n            removeRows      : 'onRemoveRows',\n            beforeRowHeight : 'onBeforeRowHeightChange',\n            renderRow       : 'onRenderRow',\n            thisObj         : this\n        });\n\n        super.construct({});\n    }\n\n    init() {}\n\n    //endregion\n\n    //region View hooks\n\n    refreshRows() {}\n\n    onTimeAxisViewModelUpdate() {\n        // Update view bounds\n        this.updateFromHorizontalScroll(this.gantt.timeAxisSubGrid.scrollable.x);\n    }\n\n    onViewportResize() {}\n\n    onDragAbort() {}\n\n    onBeforeRowHeightChange(event) {\n        const { gantt } = this;\n\n        if (gantt.foregroundCanvas) {\n            //gantt.element.classList.add('b-notransition');\n            gantt.foregroundCanvas.style.fontSize = `${(event?.height ?? gantt.rowHeight) - gantt.resourceMargin * 2}px`;\n            //gantt.element.classList.remove('b-notransition');\n        }\n    }\n\n    //endregion\n\n    //region Region & coordinates\n\n    get visibleDateRange() {\n        return this._visibleDateRange;\n    }\n\n    // <remove-on-release>\n    // TODO: Replace calls with generator below\n    // </remove-on-release>\n    getTaskBox(taskRecord, includeOutside = false, inner = false) {\n        const\n            { gantt }           = this,\n            { isBatchUpdating } = taskRecord,\n            { store }           = gantt,\n            startDate           = isBatchUpdating ? taskRecord.get('startDate') : taskRecord.startDate,\n            endDate             = isBatchUpdating ? taskRecord.get('endDate') : taskRecord.endDate;\n\n        if (inner) {\n            const innerElement = this.getElementFromTaskRecord(taskRecord);\n\n            if (innerElement) {\n                return Rectangle.from(innerElement, gantt.timeAxisSubGridElement);\n            }\n        }\n\n        // A task that gets startDate during initial propagation, which seems not have happened yet.\n        // Or a removed task (this fn is also used for baselines). Nothing to render then\n        if (!startDate || !endDate || (taskRecord.isTask && (store.isDestroyed || !store.isAvailable(taskRecord)))) {\n            return null;\n        }\n\n        const positionData = this.getSizeAndPosition(taskRecord, includeOutside, inner);\n\n        if (!positionData) {\n            return null;\n        }\n\n        const\n            { position, width } = positionData,\n            top = gantt.rowManager.calculateTop(store.indexOf(taskRecord.isBaseline ? taskRecord.task : taskRecord)) + gantt.resourceMargin,\n            height = gantt.rowHeight - gantt.resourceMargin * 2,\n            bounds = new Rectangle(position, top, width, height);\n\n        // Position always correct in Gantt, since there is no stacking\n        bounds.layout = true;\n\n        return bounds;\n    }\n\n    // returns an object with `position` + `width`. If task is not inside current time axis, position is -1\n    getSizeAndPosition(taskRecord, includeOutside, inner) {\n        const\n            me                   = this,\n            { gantt }            = me,\n            { timeAxis }         = gantt,\n            viewStart            = timeAxis.startDate,\n            viewEnd              = timeAxis.endDate,\n            isMilestone          = taskRecord.milestone,\n            // Ensure dependencies feature is present (=== false if not)\n            horizontalAdjustment = isMilestone ? gantt.features.dependencies.pathFinder?.startArrowMargin : 0;\n\n        let\n            // Must use Model.get in order to get latest values in case we are inside a batch.\n            // TaskResize changes the endDate using batching to enable a tentative change\n            // via the batchedUpdate event which is triggered when changing a field in a batch.\n            // Fall back to accessor if propagation has not populated date fields.\n            taskStart            = taskRecord.isBatchUpdating ? taskRecord.get('startDate') : taskRecord.startDate,\n            // Might get here before engine has normalized\n            taskEnd              = taskRecord.isBatchUpdating\n                ? taskRecord.get('endDate')\n                : taskRecord.endDate || (taskRecord.duration != null\n                    ? DateHelper.add(taskStart, taskRecord.duration, taskRecord.durationUnit) : null),\n            startCoordinate, endCoordinate;\n\n        // Early bailout for tasks that are fully out of timeaxis\n        if (!includeOutside && (taskEnd < viewStart || taskStart > viewEnd)) {\n            return null;\n        }\n\n        // The calls using `includeOutside` are not used during task rendering, but when rendering dependencies.\n        // In those cases the lines are expected to be drawn even to tasks fully out of view, clipped to view bounds\n        if (includeOutside && taskStart < viewStart) {\n            startCoordinate = gantt.getCoordinateFromDate(viewStart) - horizontalAdjustment;\n        }\n        else if (includeOutside && taskStart > viewEnd) {\n            startCoordinate = gantt.getCoordinateFromDate(viewEnd) + horizontalAdjustment;\n        }\n        // Starts before view and ends in or after view, approximate startCoordinate\n        else if (taskStart < viewStart) {\n            const\n                // Using seconds instead of ms in a try to not loose to much precision in year views\n                pxPerSecond      = gantt.timeAxisViewModel.getSingleUnitInPixels('second'),\n                secondsOutOfView = (timeAxis.startMS - taskRecord.startDateMS) / 1000, // taskRecord.startDateMS is cached in TimeSpan\n                pxOutOfView      = secondsOutOfView * pxPerSecond;\n\n            startCoordinate = gantt.getCoordinateFromDate(viewStart) - pxOutOfView;\n        }\n        // The \"normal\" case, somewhere in the timeaxis\n        else {\n            if (gantt.fillTicks && !isMilestone && (!taskRecord.isBatchUpdating || gantt.snap)) {\n                const\n                    tick = timeAxis.getSnappedTickFromDate(taskStart);\n\n                taskStart = tick.startDate;\n            }\n            startCoordinate = gantt.getCoordinateFromDate(taskStart);\n        }\n\n        if (!isMilestone) {\n            // Same logic applies to `includeOutside` for end date, clip to view\n            if (includeOutside && taskEnd < viewStart) {\n                endCoordinate = gantt.getCoordinateFromDate(viewStart);\n            }\n            else if (includeOutside && taskEnd > viewEnd) {\n                endCoordinate = gantt.getCoordinateFromDate(viewEnd);\n            }\n            // Starts in or before view and ends outside, approximate end\n            else if (taskEnd > viewEnd) {\n                const\n                    pxPerSecond      = gantt.timeAxisViewModel.getSingleUnitInPixels('second'),\n                    secondsOutOfView = (taskRecord.endDateMS - timeAxis.endMS) / 1000, // taskRecord.endDateMS is cached in TimeSpan\n                    pxOutOfView      = secondsOutOfView * pxPerSecond;\n\n                endCoordinate = gantt.getCoordinateFromDate(viewEnd) + pxOutOfView;\n            }\n            else {\n                if (gantt.fillTicks && (!taskRecord.isBatchUpdating || gantt.snap)) {\n                    const\n                        tickIdx = Math.ceil(gantt.timeAxis.getTickFromDate(taskEnd)) - 1,\n                        tick    = gantt.timeAxis.getAt(tickIdx);\n\n                    taskEnd = tick.endDate;\n                }\n                endCoordinate = gantt.getCoordinateFromDate(taskEnd);\n            }\n        }\n\n        let width = isMilestone ? 0 : Math.abs(startCoordinate - endCoordinate);\n\n        // Requesting diamond width, in viewport space\n        if (inner && isMilestone && taskStart > viewStart && taskStart < viewEnd) {\n            // By default as wide as it is high\n            width = gantt.rowHeight - gantt.resourceMargin * 2;\n            startCoordinate -= width / 2;\n        }\n\n        if (!includeOutside && startCoordinate + width < 0) {\n            return null;\n        }\n\n        return {\n            position : startCoordinate,\n            width\n        };\n    }\n\n    getRowRegion(taskRecord, startDate, endDate) {\n        const\n            { gantt } = this,\n            row       = gantt.getRowFor(taskRecord);\n\n        // might not be rendered\n        if (!row) {\n            return null;\n        }\n\n        const\n            rowElement = row.getElement(gantt.timeAxisSubGrid.region),\n            taStart    = gantt.timeAxis.startDate,\n            taEnd      = gantt.timeAxis.endDate,\n            start      = startDate ? DateHelper.max(taStart, startDate) : taStart,\n            end        = endDate ? DateHelper.min(taEnd, endDate) : taEnd,\n            startX     = gantt.getCoordinateFromDate(start),\n            endX       = gantt.getCoordinateFromDate(end, true, true),\n            y          = row.top + gantt.scrollTop,\n            x          = Math.min(startX, endX),\n            bottom     = y + rowElement.offsetHeight;\n\n        return new Rectangle(x, y, Math.max(startX, endX) - x, bottom - y);\n    }\n\n    getDateFromXY(xy, roundingMethod, local) {\n        let coord = xy[0];\n\n        if (!local) {\n            coord = this.translateToScheduleCoordinate(coord);\n        }\n\n        return this.gantt.timeAxisViewModel.getDateFromPosition(coord, roundingMethod);\n    }\n\n    translateToScheduleCoordinate(x) {\n        // Get rid of fractional pixels, to not end up with negative fractional values for pos\n        const pos = x - Math.floor(this.gantt.timeAxisSubGridElement.getBoundingClientRect().left);\n        return pos + this.gantt.scrollLeft;\n    }\n\n    translateToPageCoordinate(x) {\n        const element = this.gantt.timeAxisSubGridElement;\n        return x + element.getBoundingClientRect().left - element.scrollLeft;\n    }\n\n    //endregion\n\n    //region Element <-> Record mapping\n\n    getElementFromTaskRecord(taskRecord, inner = true) {\n        const { syncIdMap } = this.gantt.foregroundCanvas;\n\n        let wrapper = syncIdMap?.[taskRecord.id];\n\n        // For linked tasks, we might be trying to find element for the original. If none found, we also check linked\n        // tasks. Needed for dependencies, since they point to original tasks, not linked ones.\n        if (!wrapper && taskRecord.hasLinks && syncIdMap) {\n            taskRecord.forEachLinked((store, linked) => {\n                if (syncIdMap[linked.id]) {\n                    wrapper = syncIdMap[linked.id];\n                }\n            });\n        }\n\n        return inner ? wrapper?.syncIdMap.task : wrapper;\n    }\n\n    //endregion\n\n    //region Dependency connectors\n\n    // Cannot be moved from this file, called from currentOrientation.xx\n\n    /**\n     * Gets displaying item start side\n     *\n     * @param {Gantt.model.TaskModel} taskRecord\n     * @returns {String} 'left' / 'right' / 'top' / 'bottom'\n     */\n    getConnectorStartSide(taskRecord) {\n        return this.gantt.rtl ? 'right' : 'left';\n    }\n\n    /**\n     * Gets displaying item end side\n     *\n     * @param {Gantt.model.TaskModel} taskRecord\n     * @returns {String} 'left' / 'right' / 'top' / 'bottom'\n     */\n    getConnectorEndSide(taskRecord) {\n        return this.gantt.rtl ? 'left' : 'right';\n    }\n\n    //endregion\n\n    //region Rendering\n\n    onRenderRow({ row, record }) {\n        // indicate inactive task rows\n        row.assignCls({ 'b-inactive' : record.inactive });\n    }\n\n    onRemoveRows({ rows }) {\n        rows.forEach(row => this.rowMap.delete(row));\n        !this.gantt.refreshSuspended && this.onRenderDone();\n    }\n\n    // Update header range on horizontal scroll. No need to draw any tasks, Gantt only cares about vertical scroll\n    updateFromHorizontalScroll(scrollX) {\n        const\n            me            = this,\n            { gantt }     = me,\n            {\n                timeAxisSubGrid,\n                timeAxis,\n                rtl\n            }             = gantt,\n            { width }     = timeAxisSubGrid,\n            { totalSize } = gantt.timeAxisViewModel,\n            start         = scrollX,\n            // If there are few pixels left from the right most position then just render all remaining ticks,\n            // there wouldn't be many. It makes end date reachable with more page zoom levels while not having any poor\n            // implications.\n            // 5px to make TimeViewRangePageZoom test stable in puppeteer.\n            returnEnd     = timeAxisSubGrid.scrollable.maxX !== 0 && Math.abs(timeAxisSubGrid.scrollable.maxX) <= Math.round(start) + 5,\n            startDate     = gantt.getDateFromCoord({ coord : Math.max(0, start), ignoreRTL : true }),\n            endDate       = returnEnd ? timeAxis.endDate : (gantt.getDateFromCoord({ coord : start + width, ignoreRTL : true }) || timeAxis.endDate);\n\n        if (startDate && !gantt._viewPresetChanging) {\n            me._visibleDateRange = { startDate, endDate, startMS : startDate.getTime(), endMS : endDate.getTime() };\n            me.viewportCoords  = rtl\n                // RTL starts all the way to the right (and goes in opposite direction)\n                ? { left : totalSize - scrollX - width, right : totalSize - scrollX }\n                // LTR all the way to the left\n                : { left : scrollX, right : scrollX + width };\n\n            // Update timeaxis header making it display the new dates\n            const range = gantt.timeView.range = { startDate, endDate };\n\n            gantt.onVisibleDateRangeChange(range);\n        }\n    }\n\n    internalPopulateTaskRenderData(renderData, taskRecord) {\n        const\n            { gantt }   = this,\n            taskContent = {\n                className : 'b-gantt-task-content',\n                dataset   : {\n                    taskBarFeature : 'content'\n                },\n                children : []\n            };\n\n        if (renderData) {\n            let resizable = (taskRecord.isResizable === undefined ? true : taskRecord.isResizable);\n\n            if (renderData.startsOutsideView) {\n                if (resizable === true) {\n                    resizable = 'end';\n                }\n                else if (resizable === 'start') {\n                    resizable = false;\n                }\n            }\n            if (renderData.endsOutsideView) {\n                if (resizable === true) {\n                    resizable = 'start';\n                }\n                else if (resizable === 'end') {\n                    resizable = false;\n                }\n            }\n\n            Object.assign(renderData, {\n                iconCls    : new DomClassList(taskRecord.taskIconCls),\n                id         : gantt.getEventRenderId(taskRecord),\n                style      : taskRecord.style || '',\n                taskId     : taskRecord.id,\n                // Classes for the wrapping div\n                wrapperCls : new DomClassList({\n                    [gantt.eventCls + '-wrap']   : 1,\n                    [`${gantt.eventCls}-parent`] : taskRecord.isParent,\n                    'b-milestone-wrap'           : taskRecord.milestone,\n                    'b-inactive'                 : taskRecord.inactive,\n                    'b-expanded'                 : taskRecord.isExpanded(gantt.store),\n                    'b-readonly'                 : taskRecord.readOnly,\n                    'b-linked'                   : taskRecord.isLinked,\n                    'b-original'                 : taskRecord.hasLinks,\n                    'b-temporary'                : !taskRecord.project\n                }),\n                // Task record cls property is now a DomClassList, so clone it\n                // so that it can be manipulated here and by renderers.\n                cls          : taskRecord.isResourceTimeRange ? new DomClassList() : taskRecord.cls.clone(),\n                // Extra DOMConfigs to add to the tasks row, for example for indicators\n                extraConfigs : []\n            });\n\n            // Gather event element classes as keys to add to the renderData.cls DomClassList.\n            // Truthy value means the key will be added as a class name.\n            Object.assign(renderData.cls, {\n                [gantt.eventCls]                       : 1,\n                [gantt.generatedIdCls]                 : taskRecord.hasGeneratedId,\n                [gantt.dirtyCls]                       : taskRecord.modifications,\n                [gantt.committingCls]                  : taskRecord.isCommitting,\n                [gantt.endsOutsideViewCls]             : renderData.endsOutsideView,\n                [gantt.startsOutsideViewCls]           : renderData.startsOutsideView,\n                [gantt.fixedEventCls]                  : taskRecord.isDraggable === false,\n                [`b-sch-event-resizable-${resizable}`] : 1,\n                'b-milestone'                          : taskRecord.milestone,\n                // 'b-critical'                           : taskRecord.critical,\n                'b-task-started'                       : taskRecord.isStarted,\n                'b-task-finished'                      : taskRecord.isCompleted,\n                'b-task-selected'                      : gantt.selectedRecords.includes(taskRecord)\n            });\n\n            const\n                eventStyle = taskRecord.eventStyle || gantt.eventStyle,\n                eventColor = taskRecord.eventColor || gantt.eventColor;\n\n            renderData.eventColor = eventColor;\n            renderData.eventStyle = eventStyle;\n\n            if (gantt.taskRenderer) {\n                // User has specified a renderer fn, either to return a simple string, or an object\n                const value = gantt.taskRenderer.call(gantt.taskRendererThisObj || gantt, {\n                    taskRecord,\n                    renderData\n                });\n\n                // If the user's renderer coerced it into a string, recreate a DomClassList.\n                if (typeof renderData.cls === 'string') {\n                    renderData.cls = new DomClassList(renderData.cls);\n                }\n\n                // Same goes for iconCls\n                if (typeof renderData.iconCls === 'string') {\n                    renderData.iconCls = new DomClassList(renderData.iconCls);\n                }\n\n                if (typeof renderData.wrapperCls === 'string') {\n                    renderData.wrapperCls = new DomClassList(renderData.wrapperCls);\n                }\n\n                let childContent = null;\n\n                // Likely HTML content\n                if (StringHelper.isHtml(value)) {\n                    childContent = {\n                        tag  : 'span',\n                        html : value\n                    };\n                }\n                // DOM config or plain string can be used as is\n                else if (typeof value === 'string' || typeof value === 'object') {\n                    childContent = value;\n                }\n                // Other, use string\n                else if (value != null) {\n                    childContent = String(value);\n                }\n\n                if (childContent) {\n                    if (Array.isArray(childContent)) {\n                        taskContent.children.push(...childContent);\n                    }\n                    else {\n                        taskContent.children.push(childContent);\n                    }\n                    renderData.cls.add('b-has-content');\n                }\n            }\n\n            // If there are any iconCls entries...\n            renderData.cls['b-sch-event-withicon'] = renderData.iconCls.length;\n\n            // renderers have last say on style & color\n            renderData.wrapperCls[`b-sch-style-${renderData.eventStyle}`] = renderData.eventStyle;\n\n            if (DomHelper.isNamedColor(renderData.eventColor)) {\n                renderData.wrapperCls[`b-sch-color-${renderData.eventColor}`] = renderData.eventColor;\n            }\n            else if (renderData.eventColor) {\n                const style = `background-color:${renderData.eventColor};`;\n\n                renderData.style = style + renderData.style;\n                renderData.wrapperCls['b-sch-custom-color'] = 1;\n                renderData._customColorStyle = style;\n            }\n            else {\n                renderData.wrapperCls['b-sch-color-none'] = 1;\n            }\n\n            // Milestones has to apply styling to b-sch-task-content\n            if (renderData.style && taskRecord.isMilestone && taskContent) {\n                taskContent.style = renderData.style;\n                delete renderData.style;\n            }\n\n            if (renderData.iconCls?.length) {\n                taskContent.children.unshift({\n                    tag       : 'i',\n                    className : renderData.iconCls\n                });\n            }\n\n            // if we have some children collected or it's a milestone (milestone styling needs content element presence)\n            if (taskContent.children.length || taskRecord.milestone) {\n                renderData.children.push(taskContent);\n            }\n        }\n\n        renderData.taskContent = taskContent;\n\n        renderData.wrapperChildren = [];\n    }\n\n    populateTaskRenderData(renderData, taskRecord) {\n        this.internalPopulateTaskRenderData(...arguments);\n\n        // Method which features may chain in to\n        this.gantt.onTaskDataGenerated(renderData);\n    }\n\n    // This method is a single entry point to get complete render data for the task\n    getTaskRenderData(row, taskRecord) {\n        const\n            me   = this,\n            box  = me.getTaskBox(taskRecord, false, false, row),\n            data = {\n                taskRecord,\n                // <remove-on-release>\n                // TODO: Deprecate task\n                // </remove-on-release>\n                task     : taskRecord,\n                row,\n                children : []\n            };\n\n        if (box) {\n            Object.assign(data, {\n                isTask : true,\n                top    : box.top,\n                left   : box.left,\n                width  : box.width,\n                height : box.height\n            });\n        }\n        else {\n            // Calculate top position, used by Baselines feature to position its elements\n            data.top = row.top + me.gantt.resourceMargin;\n        }\n\n        me.populateTaskRenderData(data, taskRecord);\n\n        return data;\n    }\n\n    // This method generates DOM config from the render data\n    getTaskDOMConfig(data) {\n        return {\n            className : data.wrapperCls,\n            tabIndex  : '0',\n            children  : [\n                {\n                    className : data.cls,\n                    style     : (data.internalStyle || '') + (data.style || ''),\n                    children  : data.children,\n                    dataset   : {\n                        // Each feature putting contents in the task wrap should have this to simplify syncing and\n                        // element retrieval after sync\n                        taskFeature : 'task'\n                    },\n                    syncOptions : {\n                        syncIdField : 'taskBarFeature'\n                    }\n                },\n                ...data.wrapperChildren\n            ],\n            style : {\n                top    : data.top,\n                left   : data.left - (this.gantt.rtl ? data.width : 0),\n                // DomHelper appends px to dimensions when using numbers\n                width  : data.width,\n                zIndex : data.zIndex\n            },\n            dataset : {\n                taskId : data.taskId\n            },\n            // Will not be part of DOM, but attached to the element\n            elementData : data,\n            // Options for this level of sync, lower levels can have their own\n            syncOptions : {\n                syncIdField      : 'taskFeature',\n                // Remove instead of release when a feature is disabled\n                releaseThreshold : 0\n            }\n        };\n    }\n\n    // Called per row in \"view\", collect configs\n    renderer({ row, record : taskRecord }) {\n        const\n            me   = this,\n            data = me.getTaskRenderData(row, taskRecord);\n\n        let config;\n\n        if (data.isTask) {\n            config = me.getTaskDOMConfig(data);\n            me.gantt.trigger('beforeRenderTask', { renderData : data, domConfig : config });\n        }\n        else if (data.extraConfigs.length === 0) {\n            me.rowMap.delete(row);\n            return;\n        }\n\n        // Store DOM configs\n        me.rowMap.set(row, [config, ...data.extraConfigs]);\n    }\n\n    // Called when the current row rendering \"pass\" is complete, sync collected configs to DOM\n    onRenderDone() {\n        const\n            { gantt } = this,\n            configs   = Array.from(this.rowMap.values()).flat();\n\n        // Give features a chance to inject or manipulate task configs\n        gantt.onBeforeTaskSync(configs);\n\n        DomSync.sync({\n            domConfig : {\n                onlyChildren : true,\n                children     : configs\n            },\n            targetElement : gantt.foregroundCanvas,\n            syncIdField   : 'taskId',\n\n            // Called by DomHelper when it creates, releases or reuses elements\n            callback({ action, domConfig, lastDomConfig, targetElement : element }) {\n                // If element is a task wrap, trigger appropriate events\n                if (action !== 'none' && domConfig && domConfig.className && domConfig.className[gantt.eventCls + '-wrap']) {\n                    const\n                        // Some actions are considered first a release and then a render (reusing another element).\n                        // This gives clients code a chance to clean up before reusing an element\n                        isRelease = releaseEventActions[action],\n                        isRender  = renderEventActions[action];\n\n                    // If we are reusing an element that was previously released we should not trigger again\n                    if (isRelease && lastDomConfig?.elementData?.isTask) {\n                        const\n                            event = {\n                                renderData : lastDomConfig.elementData,\n                                taskRecord : lastDomConfig.elementData.taskRecord,\n                                element\n                            };\n\n                        // This event is documented on Gantt\n                        gantt.trigger('releaseTask', event);\n                    }\n\n                    // Trigger only for actual tasks, not indicators or baselines\n                    if (isRender && domConfig?.elementData?.isTask) {\n                        const\n                            event = {\n                                renderData : domConfig.elementData,\n                                taskRecord : domConfig.elementData.taskRecord,\n                                element\n                            };\n\n                        event.reusingElement = action === 'reuseElement';\n                        // This event is documented on Gantt\n                        gantt.trigger('renderTask', event);\n                    }\n                }\n            }\n        });\n    }\n\n    // Redraws a single task by rerendering its cell\n    redraw(taskRecord) {\n        // Refresh cell, will call `renderer` above and update its DOM config\n        if (this.gantt.rowManager.refreshCell(taskRecord, this.gantt.timeAxisColumn.id)) {\n            // Update DOM\n            this.onRenderDone();\n        }\n    }\n\n    //endregion\n}\n","import TimelineBase from '../../Scheduler/view/TimelineBase.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport VersionHelper from '../../Core/helper/VersionHelper.js';\n\nimport NewTaskRendering from './orientation/NewTaskRendering.js';\n\nimport CrudManagerView from '../../Scheduler/crud/mixin/CrudManagerView.js';\nimport CurrentConfig from '../../Scheduler/view/mixin/CurrentConfig.js';\nimport TransactionalFeatureMixin from '../../Scheduler/view/mixin/TransactionalFeatureMixin.js';\nimport ProjectProgressMixin from '../../SchedulerPro/view/mixin/ProjectProgressMixin.js';\nimport GanttDom from './mixin/GanttDom.js';\nimport GanttRegions from './mixin/GanttRegions.js';\nimport GanttScroll from './mixin/GanttScroll.js';\nimport GanttState from './mixin/GanttState.js';\nimport GanttStores from './mixin/GanttStores.js';\nimport GanttTimelineDateMapper from './mixin/GanttTimelineDateMapper.js';\nimport TaskNavigation from './mixin/TaskNavigation.js';\n\nimport EventNavigation from '../../Scheduler/view/mixin/EventNavigation.js';\n\nimport '../localization/En.js';\nimport '../../Gantt/column/TimeAxisColumn.js';\n\n// Always required features\nimport '../../Grid/feature/Tree.js';\nimport '../../Grid/feature/RegionResize.js';\nimport '../../Scheduler/feature/RowReorder.js';\nimport '../feature/Dependencies.js';\n\nimport NameColumn from '../column/NameColumn.js';\n\nimport { DependencyType } from '../../Engine/scheduling/Types.js';\nimport Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\n\nimport Toast from '../../Core/widget/Toast.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport DomSync from '../../Core/helper/DomSync.js';\nimport SchedulingIssueResolution from '../../SchedulerPro/view/mixin/SchedulingIssueResolution.js';\n\n/**\n * @module Gantt/view/GanttBase\n */\n\nconst emptyObject = Object.freeze({});\n\nlet newTaskCount = 0;\n\n/**\n * A thin base class for {@link Gantt/view/Gantt}. Does not include any features by default, allowing smaller\n * custom-built bundles if used in place of {@link Gantt/view/Gantt}.\n *\n * @mixes Gantt/view/mixin/GanttDom\n * @mixes Gantt/view/mixin/GanttRegions\n * @mixes Gantt/view/mixin/GanttScroll\n * @mixes Gantt/view/mixin/GanttState\n * @mixes Gantt/view/mixin/GanttStores\n * @mixes Scheduler/crud/mixin/CrudManagerView\n * @mixes Scheduler/view/mixin/EventNavigation\n * @mixes Scheduler/view/mixin/TransactionalFeatureMixin\n * @mixes Gantt/view/mixin/TaskNavigation\n * @mixes SchedulerPro/view/mixin/ProjectProgressMixin\n * @mixes SchedulerPro/view/mixin/SchedulingIssueResolution\n *\n * @features Scheduler/feature/ColumnLines\n * @features Scheduler/feature/EventFilter\n * @features Scheduler/feature/HeaderZoom\n * @features Scheduler/feature/Labels\n * @features Scheduler/feature/NonWorkingTime\n * @features Scheduler/feature/Pan\n * @features Scheduler/feature/RowReorder\n * @features Scheduler/feature/ScheduleMenu\n * @features Scheduler/feature/ScheduleTooltip\n * @features Scheduler/feature/Summary\n * @features Scheduler/feature/TimeAxisHeaderMenu\n * @features Scheduler/feature/TimeRanges\n *\n * @features SchedulerPro/feature/PercentBar\n * @features SchedulerPro/feature/DependencyEdit\n * @features SchedulerPro/feature/EventSegments\n *\n * @features Gantt/feature/Baselines\n * @features Gantt/feature/CellEdit\n * @features Gantt/feature/CriticalPaths\n * @features Gantt/feature/Dependencies\n * @features Gantt/feature/Indicators\n * @features Gantt/feature/Labels\n * @features Gantt/feature/ParentArea\n * @features Gantt/feature/ProgressLine\n * @features Gantt/feature/ProjectLines\n * @features Gantt/feature/Rollups\n * @features Gantt/feature/Summary\n * @features Gantt/feature/TaskCopyPaste\n * @features Gantt/feature/TaskDrag\n * @features Gantt/feature/TaskDragCreate\n * @features Gantt/feature/TaskEdit\n * @features Gantt/feature/TaskMenu\n * @features Gantt/feature/TaskNonWorkingTime\n * @features Gantt/feature/TaskResize\n * @features Gantt/feature/TaskSegmentDrag\n * @features Gantt/feature/TaskSegmentResize\n * @features Gantt/feature/TaskTooltip\n * @features Gantt/feature/TreeGroup\n * @features Gantt/feature/Versions\n *\n * @features Gantt/feature/export/MspExport\n * @features Gantt/feature/export/PdfExport\n * @features Gantt/feature/export/exporter/MultiPageExporter\n * @features Gantt/feature/export/exporter/MultiPageVerticalExporter\n * @features Gantt/feature/export/exporter/SinglePageExporter\n *\n * @extends Scheduler/view/TimelineBase\n * @widget\n */\nexport default class GanttBase extends TimelineBase.mixin(\n    CrudManagerView,\n    GanttDom,\n    GanttRegions,\n    GanttScroll,\n    GanttStores,\n    GanttState,\n    GanttTimelineDateMapper,\n    EventNavigation,\n    TaskNavigation,\n    ProjectProgressMixin,\n    SchedulingIssueResolution,\n    TransactionalFeatureMixin,\n    CurrentConfig\n) {\n\n    //region Task interaction events\n\n    /**\n     * Triggered after a mousedown on a task bar.\n     * @event taskMouseDown\n     * @param {Gantt.view.Gantt} source The Gantt instance\n     * @param {Gantt.model.TaskModel} taskRecord The Task record\n     * @param {MouseEvent} event The native browser event\n     */\n\n    /**\n     * Triggered after a mouseup on a task bar.\n     * @event taskMouseUp\n     * @param {Gantt.view.Gantt} source The Gantt instance\n     * @param {Gantt.model.TaskModel} taskRecord The Task record\n     * @param {MouseEvent} event The native browser event\n     */\n\n    /**\n     * Triggered after a click on a task bar.\n     * @event taskClick\n     * @param {Gantt.view.Gantt} source The Gantt instance\n     * @param {Gantt.model.TaskModel} taskRecord The Task record\n     * @param {MouseEvent} event The native browser event\n     */\n\n    /**\n     * Triggered after a doubleclick on a task.\n     * @event taskDblClick\n     * @param {Gantt.view.Gantt} source The Gantt instance\n     * @param {Gantt.model.TaskModel} taskRecord The Task record\n     * @param {MouseEvent} event The native browser event\n     */\n\n    /**\n     * Triggered after a rightclick (or long press on a touch device) on a task.\n     * @event taskContextMenu\n     * @param {Gantt.view.Gantt} source The Gantt instance\n     * @param {Gantt.model.TaskModel} taskRecord The Task record\n     * @param {MouseEvent} event The native browser event\n     */\n\n    /**\n     * Triggered after a mouseover on a task.\n     * @event taskMouseOver\n     * @param {Gantt.view.Gantt} source The Gantt instance\n     * @param {Gantt.model.TaskModel} taskRecord The Task record\n     * @param {MouseEvent} event The native browser event\n     */\n\n    /**\n     * Triggered for mouseout from a task.\n     * @event taskMouseOut\n     * @param {Gantt.view.Gantt} source The Gantt instance\n     * @param {Gantt.model.TaskModel} taskRecord The Task record\n     * @param {MouseEvent} event The native browser event\n     */\n\n    /**\n     * Triggered when a keydown event is observed if there are selected tasks.\n     * @event taskKeyDown\n     * @param {Gantt.view.Gantt} source This Gantt\n     * @param {Gantt.model.TaskModel} taskRecord Task record\n     * @param {KeyboardEvent} event Browser event\n     */\n\n    /**\n     * Triggered when a keyup event is observed if there are selected tasks.\n     * @event taskKeyUp\n     * @param {Gantt.view.Gantt} source This Gantt\n     * @param {Gantt.model.TaskModel} eventRecord Task record\n     * @param {KeyboardEvent} event Browser event\n     */\n\n    //endregion\n\n    //region Other events\n\n    /**\n     * Task is rendered, its element is available in DOM.\n     * @event renderTask\n     * @param {Gantt.view.Gantt} source The Gantt instance\n     * @param {Object} renderData Task render data\n     * @param {Gantt.model.TaskModel} taskRecord Rendered task\n     * @param {HTMLElement} element Task element\n     */\n\n    /**\n     * Task is released, no longer in view/removed. A good spot for cleaning custom things added in a `renderTask`\n     * listener up, if needed.\n     * @event releaseTask\n     * @param {Gantt.view.Gantt} source The Gantt instance\n     * @param {Object} renderData Task render data\n     * @param {Gantt.model.TaskModel} taskRecord Rendered task\n     * @param {HTMLElement} element Task element\n     */\n\n    //endregion\n\n    // For documentation & typings purposes\n\n    /**\n     * Returns the dependency record for a DOM element\n     *\n     * *NOTE: Only available when the {@link Gantt/feature/Dependencies Dependencies} feature is enabled.*\n     *\n     * @function resolveDependencyRecord\n     * @param {HTMLElement} element The dependency line element\n     * @returns {Gantt.model.DependencyModel} The dependency record\n     * @category Feature shortcuts\n     */\n\n    //endregion\n\n    //region Config\n\n    static $name = 'GanttBase';\n\n    // Factoryable type name\n    static get type() {\n        return 'ganttbase';\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Get/set the gantt's read-only state. When set to `true`, any UIs for modifying data are disabled.\n             * @member {Boolean} readOnly\n             * @category Common\n             */\n            /**\n             * Configure as `true` to make the gantt read-only, by disabling any UIs for modifying data.\n             *\n             * __Note that checks MUST always also be applied at the server side.__\n             * @config {Boolean} readOnly\n             * @default false\n             * @category Common\n             */\n\n            /**\n             * The {@link Gantt.model.ProjectModel} instance containing the data visualized by the Gantt chart.\n             * @member {Gantt.model.ProjectModel} project\n             * @category Data\n             */\n\n            /**\n             * A {@link Gantt.model.ProjectModel} instance or a config object. The project holds all Gantt data.\n             * @config {Gantt.model.ProjectModel|ProjectModelConfig}\n             * @category Data\n             */\n            project : null,\n\n            /**\n             * The path for resource images, used by various widgets such as the resource assignment column.\n             * @config {String}\n             * @category Common\n             */\n            resourceImageFolderPath : null,\n\n            /**\n             * The file name of an image file to use when a resource has no image, or its image cannot be loaded.\n             * @config {String}\n             * @category Common\n             */\n            defaultResourceImageName : null,\n\n            /**\n             * True to toggle the collapsed/expanded state when clicking a parent task bar.\n             * @member {Boolean} toggleParentTasksOnClick\n             * @category Common\n             */\n            /**\n             * True to toggle the collapsed/expanded state when clicking a parent task bar.\n             * @config {Boolean}\n             * @default true\n             * @category Common\n             */\n            toggleParentTasksOnClick : true,\n\n            /**\n             * True to scroll the task bar into view when clicking a cell, you can also pass a\n             * {@link #function-scrollTaskIntoView scroll config} object.\n             * @config {Boolean|ScrollOptions}\n             * @category Common\n             */\n            scrollTaskIntoViewOnCellClick : false,\n\n            // data for the stores, in the topological order\n            calendars    : null,\n            resources    : null,\n            tasks        : null,\n            dependencies : null,\n            assignments  : null,\n\n            eventCls                : 'b-gantt-task',\n            eventBarTextField       : null,\n            eventLayout             : 'none',\n            eventSelectionDisable   : true,\n            /**\n             * Task color used by default. Tasks can specify their own {@link Gantt.model.TaskModel#field-eventColor},\n             * which will override this config.\n             *\n             * For available standard colors, see\n             * {@link Scheduler/model/mixin/EventModelMixin#typedef-EventColor}.\n             *\n             * @prp {EventColor} eventColor\n             * @category Scheduled events\n             */\n            eventColor              : null,\n            eventStyle              : null,\n            rowHeight               : 45,\n            scheduledEventName      : 'task',\n            eventScrollMode         : 'move',\n            overScheduledEventClass : 'b-gantt-task-hover',\n            mode                    : 'horizontal',\n            //fixedRowHeight          : true, // Not working with exporter, no time to investigate why currently\n\n            timeCellCls : 'b-sch-timeaxis-cell',\n\n            // <remove-on-release>\n            // TODO: This will be brought in by the TaskNavigation mixin when it is implemented\n            // </remove-on-release>\n            focusCls : 'b-active',\n\n            /**\n             * An empty function by default, but provided so that you can override it. This function is called each time\n             * a task is rendered into the gantt to render the contents of the task.\n             *\n             * Returning a string will display it in the task bar, it accepts both plain text or HTML. It is also\n             * possible to return a DOM config object which will be synced to the task bars content.\n             *\n             * ```javascript\n             * // using plain string\n             * new Gantt({\n             *    taskRenderer : ({ taskRecord }) => StringHelper.encodeHtml(taskRecord.name)\n             * });\n             *\n             * // using html string\n             * new Gantt({\n             *    taskRenderer : ({ taskRecord }) => StringHelper.xss`${taskRecord.id} <b>${taskRecord.name}</b>`\n             * });\n             *\n             * // using DOM config\n             * new Gantt({\n             *    taskRenderer({ taskRecord }) {\n             *       return {\n             *           tag  : 'b',\n             *           html : StringHelper.encodeHtml(taskRecord.name)\n             *       }\n             *    }\n             * });\n             * ```\n             *\n             * @param {Object} detail An object containing the information needed to render a Task.\n             * @param {Gantt.model.TaskModel} detail.taskRecord The task record.\n             * @param {Object} detail.renderData An object containing details about the task rendering.\n             * @param {Core.helper.util.DomClassList|String} detail.renderData.cls An object whose property names represent the CSS class names\n             * to be added to the tasks's element. Set a property's value to truthy or falsy to add or remove the class\n             * name based on the property name. Using this technique, you do not have to know whether the class is already\n             * there, or deal with concatenation.\n             * @param {String|Object<String,String>} detail.renderData.style Inline styles for the task bar DOM element. Use either\n             * 'border: 1px solid black' or { border: '1px solid black' }\n             * @param {Core.helper.util.DomClassList|String} detail.renderData.wrapperCls An object whose property names represent the CSS class names\n             * to be added to the event wrapper element. Set a property's value to truthy or falsy to add or remove the class\n             * name based on the property name. Using this technique, you do not have to know whether the class is already\n             * there, or deal with concatenation.\n             * @param {Core.helper.util.DomClassList|String} detail.renderData.iconCls An object whose property names represent the CSS class\n             * names to be added to a task icon element.\n             * @param {Scheduler.model.TimeSpan[]|TimeSpanConfig[]} indicators An array that can be populated with\n             * TimeSpan records or their config objects to have them rendered in the task row\n             * @returns {String} A simple string creating the actual HTML\n             * @config {Function}\n             * @category Scheduled events\n             */\n            taskRenderer : null,\n\n            /**\n             * A callback function or a set of `name: value` properties to apply on tasks created using the task context menu.\n             * Be aware that `name` value will be ignored since it's auto generated and may be configured with localization.\n             *\n             * Example:\n             * ```javascript\n             * // Object form:\n             * newTaskDefaults : {\n             *    duration          : 3,\n             *    manuallyScheduled : true,\n             *    percentDone       : 15\n             * }\n             * ```\n             *\n             * ```javascript\n             * // Function form:\n             * newTaskDefaults : (targetRecord) => {\n             *    return {\n             *        duration          : targetRecord.duration,\n             *        manuallyScheduled : targetRecord.manuallyScheduled\n             *    }\n             * }\n             * ```\n             * @config {Object|Function}\n             */\n            newTaskDefaults : {},\n\n            /**\n             * A task field (id, wbsCode, sequenceNumber etc) that will be used when displaying and editing linked tasks.\n             * @config {String} dependencyIdField\n             * @default 'id'\n             * @category Common\n             */\n            dependencyIdField : 'id',\n\n            /**\n             * Returns dates that will constrain resize and drag operations. The method will be called with the\n             * task being dragged.\n             * @param {Gantt.model.TaskModel} taskRecord The task record being moved or resized.\n             * @returns {Object} Constraining object containing `start` and `end` constraints. Omitting either\n             * will mean that end is not constrained. So you can prevent a resize or move from moving *before*\n             * a certain time while not constraining the end date.\n             * @returns {Date} [return.start] Start date\n             * @returns {Date} [return.end] End date\n             * @config {Function}\n             * @category Scheduled events\n             */\n            getDateConstraints : null,\n\n            /**\n             * If set to `true` this will show a color field in the {@link Gantt.feature.TaskEdit} editor and also a\n             * picker in the {@link Gantt.feature.TaskMenu}. Both enables the user to choose a color which will be\n             * applied to the task bar's background. See TaskModel's {@link Gantt.model.TaskModel#field-eventColor}\n             * config.\n             * @config {Boolean}\n             * @default false\n             * @category Misc\n             */\n            showTaskColorPickers : null\n        };\n    }\n\n    static configurable = {\n        /**\n         * See {@link Gantt.view.Gantt#keyboard-shortcuts Keyboard shortcuts} for details\n         * @config {Object<String,String>} keyMap\n         * @category Common\n         */\n        keyMap : {\n            'Alt+Shift+ArrowLeft'  : 'outdent',\n            'Alt+Shift+ArrowRight' : 'indent'\n        }\n    };\n\n    timeCellSelector = '.b-sch-timeaxis-cell';\n\n    get isGantt() {\n        return true;\n    }\n\n    //endregion\n\n    //region Init\n\n    construct(config = {}) {\n        const\n            me              = this,\n            hasInlineStores = Boolean(config.calendars || config.taskStore || config.dependencyStore || config.resourceStore || config.assignmentStore),\n            hasInlineData   = Boolean(config.calendars || config.tasks || config.dependencies || config.resources || config.assignments);\n\n        // <remove-on-release>\n        // TODO: Config system to be enhanced to merge object properties from the hierarchy's\n        // defaultConfig set so that each class level could just declare the features it requires.\n        // </remove-on-release>\n        if (!config.features) {\n            const defaults = me.getDefaultConfiguration().features;\n            config.features = defaults && typeof defaults === 'object' ? defaults : {};\n        }\n\n        // gantt is always a tree\n        if (!('tree' in config.features)) {\n            config.features.tree = true;\n        }\n\n        // disable group feature by default\n        if (!('group' in config.features)) {\n            config.features.group = false;\n        }\n\n        const { project } = config;\n\n        if (project && (hasInlineStores || hasInlineData)) {\n            throw new Error('Providing both project and inline data is not supported');\n        }\n\n        // gather all data in the ProjectModel instance\n        if (!project?.isModel) {\n            config.project = ObjectHelper.assign({\n                calendarsData    : config.calendars,\n                eventsData       : config.tasks,\n                dependenciesData : config.dependencies,\n                resourcesData    : config.resources,\n                assignmentsData  : config.assignments,\n\n                resourceStore   : config.resourceStore,\n                eventStore      : config.taskStore,\n                assignmentStore : config.assignmentStore,\n                dependencyStore : config.dependencyStore,\n                timeRangeStore  : config.timeRangeStore\n            }, project);\n\n            delete config.resourceStore;\n            delete config.taskStore;\n            delete config.assignmentStore;\n            delete config.dependencyStore;\n            delete config.timeRangeStore;\n\n            delete config.calendars;\n            delete config.resources;\n            delete config.tasks;\n            delete config.assignments;\n            delete config.dependencies;\n        }\n        // EOF data gathering\n\n        super.construct(config);\n\n        me.ion({\n            taskclick  : 'onTaskBarClick',\n            cellClick  : 'onNonTimeAxisCellClick',\n            toggleNode : 'onToggleParentNode'\n        });\n    }\n\n    changeColumns(columns, currentStore) {\n        if (columns) {\n            let cols = columns;\n\n            if (!Array.isArray(columns)) {\n                cols = columns.data;\n\n                // Need to pull the taskstore in, to make sure any fields added by columns are added to it\n                this._thisIsAUsedExpression(this.taskStore);\n            }\n\n            // Always include the name column\n            if (!cols.some(column => {\n                const constructor = column instanceof Column ? column.constructor : ColumnStore.getColumnClass(column.type) || Column;\n\n                return constructor === NameColumn || constructor.prototype instanceof NameColumn;\n            })) {\n                cols.unshift({\n                    type : 'name'\n                });\n            }\n        }\n\n        return super.changeColumns(columns, currentStore);\n    }\n\n    // Overrides TimelineBase to supply taskStore as its store (which is only used in passed events)\n    set timeAxisViewModel(timeAxisViewModel) {\n        super.timeAxisViewModel = timeAxisViewModel;\n\n        if (this.store) {\n            this.timeAxisViewModel.store = this.store;\n        }\n    }\n\n    get timeAxisViewModel() {\n        return super.timeAxisViewModel;\n    }\n\n    //endregion\n\n    //region Overrides\n\n    onPaintOverride() {\n        // Internal procedure used for paint method overrides\n        // Not used in onPaint() because it may be chained on instance and Override won't be applied\n    }\n\n    //endregion\n\n    //region Events\n\n    resumeRefresh(trigger) {\n\n        super.resumeRefresh(false);\n\n        if (!this.refreshSuspended && trigger && this.isPainted) {\n            if (!this.rowManager.topRow) {\n                // <remove-on-release>\n                // TODO: investigate why we need this\n                // </remove-on-release>\n                this.rowManager.reinitialize();\n            }\n            else {\n                this.refreshWithTransition();\n            }\n        }\n    }\n\n    // <remove-on-release>\n    // TODO: scheduler doesn't need that code and it shouldn't be needed in gantt too\n    // </remove-on-release>\n    // Overriding grids behaviour to ignore individual updates caused by propagation\n    onStoreUpdateRecord(params) {\n        if (!this.project.isBatchingChanges) {\n            let result;\n\n            this.runWithTransition(() => {\n                result = super.onStoreUpdateRecord(params);\n            }, !this.refreshSuspended);\n\n            return result;\n        }\n    }\n\n    // Transition batch changes\n    onStoreDataChange(params) {\n        this.runWithTransition(() => {\n            super.onStoreDataChange(params);\n        }, params.action === 'batch');\n    }\n\n    // Features can hook into this to add to generated task data\n    onTaskDataGenerated() {}\n\n    // Features can hook into this to manipulate visible task configs before they are DomSynced\n    onBeforeTaskSync() {}\n\n    onTaskBarClick({ taskRecord }) {\n        if (this.toggleParentTasksOnClick && !taskRecord.isLeaf) {\n            this.toggleCollapse(taskRecord);\n        }\n    }\n\n    onNonTimeAxisCellClick({ record, column }) {\n        const { scrollTaskIntoViewOnCellClick } = this;\n        if (column.type !== 'timeAxis' && scrollTaskIntoViewOnCellClick && record.isScheduled) {\n            this.scrollTaskIntoView(record, scrollTaskIntoViewOnCellClick === true\n                ? { animate : true, block : 'center', y : false }\n                : scrollTaskIntoViewOnCellClick\n            );\n        }\n    }\n\n    onToggleParentNode({ record }) {\n        // Repaint parent node on collapse / expand (unless in a collapsed parent, happens on collapse all)\n        record.parent.isExpanded(this.taskStore) && this.taskRendering.redraw(record);\n    }\n\n    // Grid row selection change\n    afterSelectionChange({ selectedRecords, deselectedRecords }) {\n        const me = this;\n\n        function setTaskSelection(record, selected) {\n            const taskElement = me.getElementFromTaskRecord(record);\n            if (taskElement) {\n                DomSync[selected ? 'addCls' : 'removeCls']('b-task-selected', taskElement);\n            }\n        }\n\n        selectedRecords?.map(record => setTaskSelection(record, true));\n        deselectedRecords?.map(record => setTaskSelection(record, false));\n    }\n\n    //endregion\n\n    //region TimelineBase implementations\n\n    // Overrides grid to take project loading into account\n    toggleEmptyText() {\n        const\n            me = this;\n        if (me.bodyContainer && me.rowManager) {\n            DomHelper.toggleClasses(me.bodyContainer, 'b-grid-empty', !(me.rowManager.rowCount || me.project.isLoadingOrSyncing));\n        }\n    }\n\n    // Gantt only has one orientation, but TimelineBase expects this to work to call correct rendering code\n    get currentOrientation() {\n        const me = this;\n\n        if (!me._currentOrientation) {\n            //me.taskRendering = me._currentOrientation = new TaskRendering(me);\n            me.taskRendering = me._currentOrientation = new NewTaskRendering(me);\n        }\n\n        return me._currentOrientation;\n    }\n\n    getTimeSpanMouseEventParams(taskElement, event) {\n        const taskRecord = this.resolveTaskRecord(taskElement);\n\n        return !taskRecord ? null : {\n            taskRecord,\n            taskElement,\n            event\n        };\n    }\n\n    getScheduleMouseEventParams(cellData) {\n        return {\n            taskRecord : this.store.getById(cellData.id)\n        };\n    }\n\n    // Used by shared features to resolve an event or task\n    resolveTimeSpanRecord(element) {\n        return this.resolveTaskRecord(element);\n    }\n\n    repaintEventsForResource(taskRecord) {\n        this.taskRendering.redraw(taskRecord);\n    }\n\n    // Used by the dependencies feature to keep it orientation (vertical, horizontal) independent\n    get visibleResources() {\n        return {\n            first : this.store.getById(this.firstVisibleRow?.id),\n            last  : this.store.getById(this.lastVisibleRow?.id)\n        };\n    }\n\n    //endregion\n\n    //region Feature hooks\n\n    /**\n     * Populates the task context menu. Chained in features to add menu items.\n     * @param {Object} options Contains menu items and extra data retrieved from the menu target.\n     * @param {Grid.column.Column} options.column Column for which the menu will be shown.\n     * @param {Gantt.model.TaskModel} options.taskRecord The reference task record\n     * @param {Scheduler.model.ResourceModel} options.resourceRecord The context resource.\n     * @param {Scheduler.model.AssignmentModel} options.assignmentRecord The context assignment if any.\n     * @param {Object<String,MenuItemConfig>} options.items A named object to describe menu items.\n     * @internal\n     */\n    populateTaskMenu() {}\n\n    //endregion\n\n    // region ContextMenu API\n\n    async addTask(referenceTask, options = emptyObject) {\n        const\n            me = this,\n            {\n                milestone,\n                asPredecessor,\n                asSuccessor\n            } = options,\n            project   = me.project,\n            parent    = referenceTask.parent,\n            defaults  = typeof me.newTaskDefaults == 'function' ? me.newTaskDefaults(referenceTask) : me.newTaskDefaults,\n            newRecord = me.taskStore.modelClass.new({\n                // use reference task values only if not provided in newTaskDefaults\n                startDate    : referenceTask.startDate,\n                duration     : referenceTask.duration,\n                durationUnit : referenceTask.durationUnit\n            }, defaults, options.data);\n\n        /**\n         * Fires when adding a task from the UI to allow data mutation.\n         * @event beforeTaskAdd\n         * @param {Gantt.view.Gantt} source The Gantt instance\n         * @param {Gantt.model.TaskModel} taskRecord The task\n         */\n        me.trigger('beforeTaskAdd', { taskRecord : newRecord });\n\n        if (!newRecord.name) {\n            newRecord.name = `${me.L(milestone ? 'L{Gantt.New milestone}' : 'L{Gantt.New task}')} ${++newTaskCount}`;\n        }\n\n        project.suspendChangesTracking();\n\n        if (options.asChild) {\n            referenceTask.insertChild(newRecord, options.at === 'end' ? null : referenceTask.firstChild);\n        }\n        else if (options.above) {\n            parent.insertChild(newRecord, referenceTask);\n        }\n        else {\n            parent.insertChild(newRecord, referenceTask.nextSibling);\n        }\n\n        // Do not trigger change check, we've added a new record so project will trigger event anyway\n        project.resumeChangesTracking(true);\n\n        if (milestone) {\n            await project.commitAsync();\n            await newRecord.convertToMilestone();\n        }\n        else {\n            await project.commitAsync();\n        }\n\n        // run propagation to handle the new task record\n        // and then add a dependency if needed\n        if (asSuccessor) {\n            me.dependencyStore.add({\n                fromEvent : referenceTask,\n                toEvent   : newRecord,\n                type      : DependencyType.EndToStart,\n                fromSide  : 'right',\n                toSide    : 'left'\n            });\n        }\n        else if (asPredecessor) {\n            me.dependencyStore.add({\n                fromEvent : newRecord,\n                toEvent   : referenceTask,\n                type      : DependencyType.EndToStart,\n                fromSide  : 'right',\n                toSide    : 'left'\n            });\n        }\n\n        if (asSuccessor || asPredecessor) {\n            // wait for immediate commit to handle the new dependency\n            await project.commitAsync();\n        }\n\n        return newRecord;\n    }\n\n    /**\n     * Adds a new task above the passed reference task\n     * @param {Gantt.model.TaskModel} taskRecord The reference task record\n     * @param {Object} [options] Options for creating the new task\n     * @param {TaskModelConfig} [options.data] Data for the new task\n     * @returns {Gantt.model.TaskModel} A promise which yields the added task\n     * @async\n     */\n    addTaskAbove(taskRecord, options) {\n        return this.addTask(taskRecord, { ...options, above : true });\n    }\n\n    /**\n     * Adds a new task below the passed reference task\n     * @param {Gantt.model.TaskModel} taskRecord The reference task record\n     * @param {Object} [options] Options for creating the new task\n     * @param {TaskModelConfig} [options.data] Data for the new task\n     * @returns {Gantt.model.TaskModel} A promise which yields the added task\n     * @async\n     */\n    addTaskBelow(taskRecord, options) {\n        return this.addTask(taskRecord, options);\n    }\n\n    /**\n     * Adds a new milestone task below the passed reference task\n     * @param {Gantt.model.TaskModel} taskRecord The reference task record\n     * @param {Object} [options] Options for creating the new milestone\n     * @param {TaskModelConfig} [options.data] Data for the new milestone\n     * @returns {Gantt.model.TaskModel} A promise which yields the added task\n     * @async\n     */\n    addMilestoneBelow(taskRecord, options) {\n        return this.addTask(taskRecord, { ...options, milestone : true });\n    }\n\n    /**\n     * Adds a new subtask to the passed reference task\n     * @param {Gantt.model.TaskModel} taskRecord The reference task record\n     * @param {Object} [options] Options for creating the new subtask\n     * @param {'start'|'end'} [options.at='start'] Where to insert the new subtask in the parent's children.\n     * @param {TaskModelConfig} [options.data] Data for the new task\n     * @returns {Gantt.model.TaskModel} A promise which yields the added task\n     * @async\n     */\n    addSubtask(taskRecord, options) {\n        const promise = this.addTask(taskRecord, { ...options, asChild : true });\n\n        this.toggleCollapse(taskRecord, false);\n\n        return promise;\n    }\n\n    /**\n     * Adds a successor task to the passed reference task\n     * @param {Gantt.model.TaskModel} taskRecord The reference task record\n     * @param {Object} [options] Options for creating the new task\n     * @param {TaskModelConfig} [options.data] Data for the new task\n     * @returns {Gantt.model.TaskModel} A promise which yields the added task\n     * @async\n     */\n    addSuccessor(taskRecord, options) {\n        return this.addTask(taskRecord, { ...options, asSuccessor : true });\n    }\n\n    /**\n     * Adds a predecessor task to the passed reference task\n     * @param {Gantt.model.TaskModel} taskRecord The reference task record\n     * @param {Object} [options] Options for creating the new task\n     * @param {TaskModelConfig} [options.data] Data for the new task\n     * @returns {Gantt.model.TaskModel} A promise which yields the added task\n     * @async\n     */\n    addPredecessor(taskRecord, options) {\n        return this.addTask(taskRecord, { ...options, above : true, asPredecessor : true });\n    }\n\n    /**\n     * Increase the indentation level of one or more tasks in the tree. Has no effect if {@link Gantt.feature.TreeGroup}\n     * has regrouped the tree.\n     * @param {Gantt.model.TaskModel[]|Gantt.model.TaskModel} tasks The task(s) to indent.\n     * @returns {Promise} A promise which resolves if operation is successful\n     */\n    async indent(tasks) {\n        const me = this;\n\n        if (me.isTreeGrouped) {\n            return;\n        }\n\n        // If called by keyboard shortcut\n        if (!tasks || tasks instanceof Event) {\n            tasks = me.selectedRecords;\n        }\n\n        // Might be indenting or outdenting already\n        await this.project.commitAsync();\n\n        const result = await me.taskStore.indent(tasks);\n\n        // If `false`, the scheduling engine has found a reason that the operation could not happen.\n        if (!result) {\n            Toast.show({\n                rootElement : me.rootElement,\n                html        : me.L('L{Gantt.changeRejected}')\n            });\n        }\n\n        return result;\n    }\n\n    /**\n     * Decrease the indentation level of one or more tasks in the tree. Has no effect if {@link Gantt.feature.TreeGroup}\n     * has regrouped the tree.\n     *\n     * @param {Gantt.model.TaskModel[]|Gantt.model.TaskModel} tasks The task(s) to outdent.\n     * @returns {Promise} A promise which resolves if operation is successful\n     */\n    async outdent(tasks) {\n        const me = this;\n\n        if (me.isTreeGrouped) {\n            return;\n        }\n\n        // If called by keyboard shortcut\n        if (!tasks || tasks instanceof Event) {\n            tasks = me.selectedRecords;\n        }\n\n        // Might be indenting or outdenting already\n        await this.project.commitAsync();\n\n        const result = await me.taskStore.outdent(tasks);\n\n        // If `false`, the scheduling engine has found a reason that the operation could not happen.\n        if (!result) {\n            Toast.show({\n                rootElement : me.rootElement,\n                html        : me.L('L{Gantt.changeRejected}')\n            });\n        }\n\n        return result;\n    }\n\n    // endregion\n\n    // the 4 methods below are required since super cannot be called from GanttDom mixin\n\n    onElementKeyDown(event) {\n        super.onElementKeyDown(event);\n    }\n\n    onElementKeyUp(event) {\n        super.onElementKeyUp(event);\n    }\n\n    onElementMouseOver(event) {\n        super.onElementMouseOver(event);\n    }\n\n    onElementMouseOut(event) {\n        super.onElementMouseOut(event);\n    }\n}\n\n// Register this widget type with its Factory\nGanttBase.initClass();\n\nVersionHelper.setVersion('gantt', '5.5.0');\n","import GanttBase from './GanttBase.js';\n\n// Based on thin GridBase, need to pull in default Grid features also\nimport '../../Grid/feature/ColumnDragToolbar.js';\nimport '../../Grid/feature/ColumnPicker.js';\nimport '../../Grid/feature/ColumnReorder.js';\nimport '../../Grid/feature/ColumnResize.js';\nimport '../../Grid/feature/CellMenu.js';\nimport '../../Grid/feature/HeaderMenu.js';\nimport '../../Grid/feature/Filter.js';\nimport '../../Grid/feature/FilterBar.js';\nimport '../../Grid/feature/Sort.js';\nimport '../../Grid/feature/Stripe.js';\nimport '../../Grid/column/CheckColumn.js'; // For checkbox selection mode\n\nimport '../../Grid/feature/RowReorder.js';\n\nimport '../../Scheduler/feature/ColumnLines.js';\nimport '../../Scheduler/feature/EventFilter.js';\nimport '../../Scheduler/feature/EventMenu.js';\nimport '../../Scheduler/feature/NonWorkingTime.js';\nimport '../../Scheduler/feature/ScheduleMenu.js';\nimport '../../Scheduler/feature/ScheduleTooltip.js';\nimport '../../Scheduler/feature/TimeAxisHeaderMenu.js';\n\nimport '../../SchedulerPro/feature/PercentBar.js';\nimport '../../SchedulerPro/feature/EventSegments.js';\n\nimport '../feature/CellEdit.js';\nimport '../feature/CriticalPaths.js';\nimport '../feature/Dependencies.js';\nimport '../feature/TaskCopyPaste.js';\nimport '../feature/TaskDrag.js';\nimport '../feature/TaskDragCreate.js';\nimport '../feature/TaskEdit.js';\nimport '../feature/TaskMenu.js';\nimport '../feature/TaskResize.js';\nimport '../feature/TaskSegmentDrag.js';\nimport '../feature/TaskSegmentResize.js';\nimport '../feature/TaskTooltip.js';\n\n/**\n * @module Gantt/view/Gantt\n */\n\n/**\n * <h2>Summary</h2>\n * The <b>Gantt</b> widget is the main component that visualizes the project data contained in a\n * {@link Gantt/model/ProjectModel} instance. The Gantt view is implemented as a TreeGrid consisting of a left section\n * showing the task hierarchy (or WBS) and a right section showing a graphical representation of the tasks on the time\n * axis. Task relationships (or \"dependencies\") are rendered as arrows between the tasks and in the background you can\n * (optionally) render non-working time too.\n *\n * The view is very interactive by default:\n *  * hovering over elements shows informative tooltips\n *  * right-clicking various elements shows context menus\n *  * double-clicking the task name shows an inline editor\n *  * double-clicking a task bar opens a detailed task editor popup\n *  * task bars can be dragged and resized\n *  * task progress can be changed by drag drop\n *  * task dependencies can be created by drag drop\n *\n * The Gantt view is very easy to use and is fully functional with minimal configuration yet\n * it is highly configurable through many configuration options and features.\n *\n * The minimum configuration consists of a {@link #config-project} and {@link Grid/view/Grid#config-columns}.\n * (If you only want to show the \"Name\" column, you can even omit `columns` as it's the default column set.)\n *\n * {@inlineexample Gantt/view/Gantt.js}\n * ## Inheriting from Bryntum Grid\n * Bryntum Gantt inherits from Bryntum Grid, meaning that most features available in the grid are also available\n * for the Gantt component. Common features include columns, cell editing, context menus, row grouping, sorting and more.\n * Note: If you want to use the Grid component standalone, e.g. to use drag-from-grid functionality, you need a separate\n * license for the Grid component.\n *\n * For more information on configuring columns, filtering, search etc. please see the {@link Grid.view.Grid Grid API docs}.\n * <h2>Configuring data for Gantt</h2>\n * The central place for all data visualized in the Gantt chart is the {@link Gantt/model/ProjectModel} instance, passed as the {@link #config-project}\n * configuration option when configuring the Gantt.\n *\n * For details related to the Gantt data structure / updating data / loading and saving data to the server,\n * adding custom fields and other information, please refer to the\n * [Project data guide](#Gantt/guides/data/project_data.md).\n *\n * <h2>Configuring columns</h2>\n * The only mandatory column is the <code>name</code> column which is of type {@link Gantt/column/NameColumn}.\n * It is a tree column that shows the project WBS structure, and allows inline editing of the\n * {@link Gantt/model/TaskModel#field-name} field.\n *\n * The Gantt chart ships with lots of predefined columns (such as {@link Gantt/column/PercentDoneColumn}) but you can of course add your own columns too, showing any additional data in your data model.\n *\n * {@inlineexample Gantt/view/GanttColumns.js}\n *\n * <h2>Advanced configurations</h2>\n * Almost any aspect of Bryntum Gantt can be configured. The included examples cover most of the supported configuration options.\n * To see some of the features in action, please click on the links below:\n *\n *  * [Labels](../examples/labels/)\n *  * [Tooltips](../examples/tooltips)\n *  * [Time Ranges](../examples/timeranges/)\n *  * [Resource Picker](../examples/resourceassignment/)\n *  * [Task Menu](../examples/taskmenu/)\n *  * [Task Editor](../examples/taskeditor/)\n *  * [Undo/Redo](../examples/undoredo/)\n *  * [Advanced](../examples/advanced)\n *\n * {@region Keyboard shortcuts}\n * Gantt has the following default keyboard shortcuts:\n *\n * | Keys                       | Action    | Action description                |\n * |----------------------------|-----------|-----------------------------------|\n * | `Alt`+`Shift`+`ArrowRight` | *indent*  | Indents currently selected tasks  |\n * | `Alt`+`Shift`+`ArrowLeft`  | *outdent* | Outdents currently selected tasks |\n *\n * <div class=\"note\">Please note that <code>Ctrl</code> is the equivalent to <code>Command</code> and <code>Alt</code>\n * is the equivalent to <code>Option</code> for Mac users</div>\n *\n * As Gantt is a subclass of Grid, many of Grid's {@link Grid.view.Grid#keyboard-shortcuts keyboard-shortcuts}\n * works for Gantt as well.\n *\n * For more information on how to customize keyboard shortcuts, please see\n * [our guide](#Gantt/guides/customization/keymap.md).\n * {@endregion}\n *\n * @extends Gantt/view/GanttBase\n * @classType gantt\n * @widget\n */\nexport default class Gantt extends GanttBase {\n\n    /**\n     * **This config is not used in the Gantt**\n     * @private\n     * @config {Scheduler.crud.AbstractCrudManagerMixin} crudManagerClass\n     */\n\n    /**\n     * **This config is not used in the Gantt. Please use {@link #config-project} config instead**\n     * @private\n     * @config {Object|Scheduler.crud.AbstractCrudManagerMixin} crudManager\n     */\n\n    static get $name() {\n        return 'Gantt';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'gantt';\n    }\n}\n\n// Register this widget type with its Factory\nGantt.initClass();\n"],"names":["__decorate","this","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","ConstrainedByParentMixin","Mixin","BaseEventMixin","HasChildrenMixin","ConstrainedEarlyEventMixin","base","superProto","prototype","maybeSkipNonWorkingTime","date","isForward","childEvents","$","size","call","calculateStartDateConstraintIntervals","intervals","parentEvent","graph","parentIntervals","startDateConstraintIntervals","push","apply","calculateEndDateConstraintIntervals","endDateConstraintIntervals","calculateEarlyStartDateConstraintIntervals","earlyStartDateConstraintIntervals","manuallyScheduled","effectiveDirection","direction","Direction","Forward","ManuallyScheduledParentConstraintInterval","new","owner","side","ConstraintIntervalSide","Start","startDate","calculateEarlyEndDateConstraintIntervals","earlyEndDateConstraintIntervals","DisableManuallyScheduledConflictResolution","Localizable","ConflictResolution","$name","construct","event","interval","getDescription","format","L","name","id","resolve","ManuallyScheduledParentConstraintIntervalDescription","ConstraintIntervalDescription","tpl","End","getDescriptionParameters","DateHelper","endDate","ConstraintInterval","descriptionBuilderClass","isAffectedByTransaction","transaction","activeTransaction","manuallyScheduledQuark","entries","get","baseRevision","hasIdentifier","$$","isShadow","getResolutions","resolutions","resetManuallyScheduledConflictResolutionClass","prototypeValue","ConstrainedLateEventMixin","calculateLateStartDateConstraintIntervals","lateStartDateConstraintIntervals","calculateLateEndDateConstraintIntervals","lateEndDateConstraintIntervals","Backward","shouldRollupChildLateStartDate","childEvent","calculateMinChildrenLateStartDate","result","MAX_DATE","subEventsIterator","subEventsIterable","childDate","hasSubEvents","minChildrenLateStartDate","lateStartDate","getTime","calculateLateStartDateRaw","isConstrainedLate","concat","effectiveInterval","calculateEffectiveConstraintInterval","isIntervalEmpty","conflict","ConflictEffect","intersectionOf","EffectResolutionResult","Cancel","Reject","isDateFinite","shouldRollupChildLateEndDate","calculateMaxChildrenLateEndDate","MIN_DATE","maxChildrenLateEndDate","lateEndDate","calculateLateStartDate","lateStartDateRaw","calculateLateEndDateRaw","calculateLateEndDate","lateEndDateRaw","calculateTotalSlack","earlyStartDate","earlyStartDateRaw","earlyEndDate","earlyEndDateRaw","slackUnit","endSlack","calculateProjectedDuration","calculateCritical","totalSlack","startDateIntervals","endDateIntervals","Boolean","calculateStartDatePure","unscheduled","calculateMinChildrenStartDate","calculateStartDateProposed","calculateEndDatePure","calculateMaxChildrenEndDate","calculateEndDateProposed","field","lazy","EarlyLateLazyness","model_field","type","persist","converter","dateConverter","persistent","defaultValue","TimeUnit","Day","normalizeUnit","calculate","ScheduledByDependenciesLateEventMixin","ScheduledByDependenciesEarlyEventMixin","shouldSuccessorAffectScheduling","dependency","toEvent","isAtomicValue","active","inactive","project","getProject","dependencyConstraintIntervalClass","outgoingDeps","successor","successorDate","DependencyType","StartToStart","StartToEnd","lag","lagUnit","lagMS","$convertDuration","Millisecond","calendar","version","skipNonWorkingTime","calculateStartDate","unshift","EndToEnd","EndToStart","calculateEffectiveDirection","projectDirection","ownConstraintType","constraintType","ConstraintType","MustStartOn","MustFinishOn","constraintDate","hasSuccessor","undefined","dependencyType","successorDirection","endDateDirection","startDateDirection","kind","enforcedBy","inheritedFrom","fixedEffortSEDWUGraphDescription","CycleDescription","variables","Set","StartDateVar","EndDateVar","DurationVar","EffortVar","UnitsVar","formulas","endDateByEffortFormula","durationFormula","unitsFormula","effortFormula","startDateByEffortFormula","startDateFormula","endDateFormula","fixedEffortSEDWUForward","CycleResolution","description","defaultResolutionFormulas","fixedEffortSEDWUBackward","FixedEffortMixin","HasSchedulingModeMixin","prepareDispatcher","YIELD","schedulingMode","effectiveSchedulingMode","SchedulingMode","FixedEffort","cycleDispatcher","HasProposedValue","assigned","addProposedValueFlag","addKeepIfPossibleFlag","cycleResolutionContext","Y","effectiveSchedulingModeSync","None","fixedUnitsSEDWUGraphDescription","fixedUnitsSEDWUForwardNonEffortDriven","fixedUnitsSEDWUForwardEffortDriven","fixedUnitsSEDWUBackwardNonEffortDriven","fixedUnitsSEDWUBackwardEffortDriven","FixedUnitsMixin","FixedUnits","effortDriven","InactiveEventMixin","writeInactive","me","quark","_this$stm","isLoading","constructor","write","children","stm","isRestoring","child","calculateInactive","ProposedOrPrevious","subEvents","activeCnt","subEvent","shouldRollupChildEffort","shouldRollupChildPercentDoneSummaryData","shouldRollupChildStartDate","shouldRollupChildEndDate","shouldRollupChildEarlyStartDate","shouldRollupChildEarlyEndDate","GanttEvent","MixinAny","SchedulerProEvent","HasCriticalPathsMixin","calculateCriticalPaths","paths","pathsToProcess","events","eventsToProcess","projectEndDate","shift","eventIsCritical","critical","eventIsActive","eventEndDate","path","taskIndex","node","criticalPredecessorNodes","incomingDeps","fromEvent","pathCopy","slice","reverse","GanttProjectMixin","SchedulerProProjectMixin","HasEffortMixin","nonEqual","calculateNonEqual","isGanttProjectMixin","afterConfigure","projectConstraintIntervalClass","ProjectConstraintInterval","unsafeCalculateInitialMinChildrenStartDateDeep","calculateEndDate","unsafeCalculateInitialMaxChildrenEndDateDeep","getDefaultEventModelClass","getDefaultAssignmentModelClass","SchedulerProAssignmentMixin","getDefaultResourceModelClass","SchedulerProResourceMixin","getDefaultEventStoreClass","ChronoEventTreeStoreMixin","getType","ProjectType","Gantt","UnsafeProposedOrPreviousValueOf","toProcess","getDependencyCycleDetectionIdentifiers","equality","ProjectConstraintIntervalDescription","dateQuark","AddNewColumn","Column","defaults","text","cls","draggable","sortable","exportable","editor","doDestroy","_this$_combo","_combo","destroy","combo","columns","grid","Combo","placeholder","triggers","autoExpand","store","ganttColumnStore","displayField","monitorResize","picker","align","axisLock","minWidth","onItem","record","columnRecord","newColumn","value","region","insert","indexOf","element","focus","onBeforeShow","forElement","syncInputFieldValue","input","internalListeners","keydown","stopImmediatePropagation","Store","data","values","ColumnStore","columnTypes","reduce","col","$meta","fields","exposedData","exposeProperties","isGanttColumn","optionalL","filters","colRecord","some","gridCol","sorters","headerRenderer","column","headerElement","render","onKeyDown","updateLocalization","registerColumnType","_$name","GanttDateColumn","DateColumn","instantUpdate","width","step","gantt","explicitFormat","ion","displayDateFormatChange","set","displayDateFormat","BaselineStartDateColumn","BaselineEndDateColumn","BaselineDurationColumn","DurationColumn","BaselineDurationVarianceColumn","BaselineStartVarianceColumn","BaselineEndVarianceColumn","CalendarPicker","refreshCalendars","calendars","map","_store","isDefault","initClass","CalendarColumn","clearable","allowInvalid","afterConstruct","defaultCalendar","calendarManagerStore","changePreCommit","refresh","thisObj","allRecords","renderer","model","getById","ConstraintDateColumn","directionMap","ConstraintTypeColumn","filterable","filterField","includeAsapAlapAsConstraints","ConstraintTypePicker","localize","DeadlineDateColumn","EarlyEndDateColumn","EarlyStartDateColumn","EffortColumn","defaultEditor","EffortField","EndDateColumn","editorCfg","IgnoreResourceCalendarColumn","CheckColumn","InactiveColumn","LateEndDateColumn","LateStartDateColumn","ManuallyScheduledColumn","MilestoneColumn","suppressNoModelFieldWarning","NameColumn","TreeColumn","NoteColumn","trim","PercentDoneColumn","NumberColumn","circleHeightPercentage","unit","min","max","config","showCircle","htmlEncode","defaultRenderer","isExport","getFormattedPercentDone","className","style","height","rowHeight","dataset","toggleTypes","from","to","fromTo","buildDependencySuffixRe","RegExp","dependencyTypes","join","dependencySuffixRe","DependencyField","configurable","listCls","valueField","validateFilter","minChars","clearTextOnPickerHide","floating","scrollAction","itemsFocusable","activateOnMouseover","maxHeight","minHeight","scrollable","overflowY","autoShow","focusOnHover","delimiter","dependencyStore","otherSide","ourSide","multiSelect","chipView","validateOnInput","dependencyIdField","eventRecord","dependencies","Collection","extraKeys","startCollection","delimiterRegEx","localizeDependencies","LocaleManager","locale","internalOnInput","clearError","isValid","TextField","invalidValueError","onInternalKeyDown","keyEvent","syncInvalid","_super$onInternalKeyD","pickerVisible","onTriggerClick","doFilter","filterInput","changeStore","chain","excludeCollapsedRecords","changePicker","oldPicker","filter","filterOnInput","clear","filterFieldInput","now","reconfigure","Objects","merge","itemTpl","listItemTpl","pickerAlignElement","anchor","overlayAnchor","inlinePicker","Math","count","navigator","keyEventTarget","processEvent","e","hidePicker","onPredecessorClick","bind","getItemClasses","task","List","getBy","getConnectorString","toLowerCase","show","Rectangle","client","deflate","once","contentElement","destroyProperties","updateEventRecord","fillFromMaster","onPickerShow","source","offsetWidth","firstChild","insertBefore","taskName","StringHelper","encodeHtml","idField","taskIdentifier","isPhantom","String","parseDependencies","dependenciesCollection","dep","modelClass","inputting","inputValue","dependenciesToString","list","item","box","closest","noselect","trigger","userAction","remove","copy","skipFieldIdentifiers","add","createRecord","eventIdField","eventField","getEventId","isModel","sort","a","b","Dependencies","getLocalizedDependencyType","getLag","_this$owner","taskStore","split","DependencyModel","dependencyText","idLen","linkedTask","linkedTaskId","substr","find","remainder","Type","edgeAndLag","exec","toUpperCase","parsedLag","parseDuration","durationUnit","magnitude","needsInputSync","hasNoProject","v","depIsValid","DependencyColumn","Delayable","taskRecord","_linkedTask$dependenc","includes","toString","getFilterableValue","finalizeCellEdit","inputField","oldValue","editorContext","toValidate","oldDependencies","commitAsync","isDestroyed","results","Promise","all","isValidDependencyModel","valid","every","isPredecessor","eventStore","PredecessorColumn","canFillValue","AssignmentsManipulationStore","AssignmentStore","defaultConfig","storage","callOnFunctions","projectEvent","floatAssignedResources","liveFloatAssignedResources","addSorter","fn","defaultSort","_projectEvent","_projectEvent$getProj","generation","_projectEventGeneration","assignmentStore","_assignmentStoreGeneration","_projectEvent$getProj2","removeAll","_floatAssignedResources","resourceStore","resourceDataSource","getFieldDefinition","dataSource","eventDataSource","storeData","forEach","resource","existingAssignment","getAssignmentForEventAndResource","assign","units","eventId","resourceId","includeFilteredOutRecords","includeCollapsedGroupRecords","toValue","query","toValueString","lhs","rhs","resourceName","localeCompare","onUpdate","changes","isConfiguring","hasOwnProperty","AssignmentModel","SchedulerProAssignmentModel","serialize","isEqual","isSerializableEqual","localeName","localeDesc","localeCode","Save","Inactive","baselineStart","baselineEnd","baselineDuration","startVariance","endVariance","durationVariance","Calendar","TotalSlackColumn","Deadline","Duration","Effort","Finish","EventModeColumn","Manual","Auto","Milestone","Name","Note","Predecessors","ResourceAssignmentColumn","RollupColumn","Rollup","SchedulingModeColumn","SchedulingDirectionColumn","schedulingDirection","SequenceColumn","Sequence","ShowInTimelineColumn","StartDateColumn","SuccessorColumn","Successors","TaskCopyPaste","copyTask","cutTask","pasteTask","WBSColumn","WBS","renumber","invalidDependencyFormat","ProjectLines","TaskTooltip","Complete","AssignmentGrid","Units","unitsTpl","Edit","Indent","Outdent","Add","Successor","Predecessor","changeRejected","linkTasks","unlinkTasks","color","EventSegments","splitTask","Indicators","earlyDates","lateDates","deadlineDate","Versions","indented","outdented","cut","pasted","deletedTasks","LocaleHelper","publishLocale","ResourceAssignmentGridResourceColumn","ResourceInfoColumn","showEventCount","flex","useNameAsImageName","cellElement","isSpecialRow","Grid","resourceImageExtension","resourceColumn","unitsColumn","localeClass","round","selectionMode","checkboxOnly","showCheckAll","features","group","filterBar","contextMenu","disableGridRowModelWarning","selectionChange","selected","deselected","assignment","selectedRecords","as","assignments","existingAs","oldStore","_me$storeDetacher","AssignmentManipulationStore","_me$_projectEvent","storeDetacher","update","clone","onAssignmentUpdate","deselectRow","selectRow","scrollIntoView","addToSelection","AssignmentPicker","trapFocus","bbar","ref","configure","selectedRecordCollection","originalSelected","_me$bbar$widgetMap$sa","_me$bbar$widgetMap$ca","widgetMap","saveBtn","click","cancelBtn","onSaveClick","hide","onCancelClick","AssignmentField","editingRecords","xss","overflowX","expand","handler","editable","pickerWidth","tooltipTemplate","onChipClose","records","showPicker","deselectRows","tooltip","assignmentRecords","PickerField","focusPicker","ObjectHelper","readOnly","resourceImagePath","resourceImageFolderPath","valueCollection","isDestroying","clearFilters","containsFocus","changeProjectEvent","updateStore","detachListeners","change","_assignments","ourStoreVersion","copyData","hasChanged","initialValue","onPickerKeyDown","compareDocumentPosition","bodyContainer","document","DOCUMENT_POSITION_FOLLOWING","focusedCell","isActionable","cacheCurrentValue","Array","isArray","_value","rec","resourceNameRegExp","replace","internalCellCls","index","showAvatars","sideMargin","task1","task2","a1","a2","regexp","test","alwaysClearCell","repaintOnResize","rendererWithAvatars","avatarRendering","AvatarRendering","forSelector","beforeShow","_me$avatarTooltipTemp","resourceRecord","assignmentRecord","overflowCount","overflowAssignments","activeTarget","elementData","avatarTooltipTemplate","items","showAllNames","html","avatarTooltip","enableResourceDragging","paint","setupDragging","beforeCellEditStart","onBeforeCellEditStart","finishCellEdit","onDoneCellEdit","cancelCellEdit","beforeRenderRows","calculateAvatarSize","rowManager","beforeRowHeight","onResourceUpdate","beginGridMeasuring","classList","cellStyles","globalThis","getComputedStyle","padding","parseInt","paddingTop","avatarMaxSize","endGridMeasuring","_this$avatarRendering","_this$dragHelper","dragHelper","changesApplied","onEditorChangesApplied","getCell","columnId","_source$project","propagatingLoadChanges","refreshColumn","_chipView","ChipView","parent","closable","triggerPaint","val","chipViewWrap","querySelector","DomHelper","createElement","replaceValues","silent","chipCloneElement","cloneNode","removeAttribute","innerHTML","appendChild","nbrVisible","floor","isLastOverflowing","imgConfig","renderAvatar","tag","imageUrl","image","avatar","getResourceAvatar","initials","eventColor","iconCls","defaultImageUrl","defaultAvatar","defaultResourceImageName","toClipboardString","safeJsonStringify","fromClipboardString","string","parsedAssignments","safeJsonParse","newAssignments","assignmentData","range","cs","calculateFillValue","JSON","stringify","rowReorder","targetSelector","subGrid","DragHelper","cloneTarget","onDragStart","context","grabbed","enableScrollingCloseToEdges","onDrag","targetTask","resolveTaskRecord","resources","onDrop","validDropTarget","display","unassign","resourceAssignmentCell","avatarContainer","animateProxyTo","disableScrollingCloseToEdges","getEnforcedName","isRoot","tooltipRenderer","_tooltipRenderer","SchedulingDirectionPicker","SchedulingModePicker","FunctionHelper","createSequence","onEditorLocaleChange","groupable","durationUnitField","operator","asMilliseconds","roundValue","milliseconds","Error","wbsValue","match","headerMenuItems","icon","rootNode","refreshWbs","internalRenderer","renderText","widget","onCheckboxChange","checked","TimeAxisColumn","SchedulerTimeAxisColumn","enableCellContextMenu","SchedulerProAssignmentStore","loadPriority","syncPriority","CalendarModel","SchedulerProCalendarModel","CalendarManagerStore","SchedulerProCalendarManagerStore","SchedulerProDependencyModel","args","fromTask","toTask","_this$fromEvent","_this$toEvent","persistableData","shouldRecordFieldChange","fieldName","newValue","DependencyStore","SchedulerProDependencyStore","ResourceModel","SchedulerProResourceModel","ResourceStore","SchedulerProResourceStore","Baseline","TimeSpan","isBaseline","milestone","isLeaf","duration","convertToMilestone","convertToRegular","setMilestone","setDuration","normalize","hasDuration","setData","run","variance","getDurationInUnit","fullDuration","diff","WbsField","DataField","convert","Wbs","compare","applyBaselineDefaults","baselines","baseline","hasData","descendingWbsSorter","s","ascending","isReversed","firstChildWbs","childWbs","n","refreshWbsOptions","deep","refreshWbsOnJoinOptions","TaskModel","derive","mixin","PartOfProject","PercentDoneMixin","isDomClassList","storeClass","$manuallyScheduled","getDefaultSegmentModelClass","EventSegmentModel","endBatch","isPersistable","wasPersistable","stores","updateModifiedBagForRecord","isTask","isTaskModel","isEvent","wbsCode","processBaselinesStoreData","$initializedBaselines","baselinesField","fieldMap","init","assignInitables","meta","baselinesStore","hasBaselines","_this$baselines","originalData","setBaseline","missingBaselines","fill","getAt","successors","setSuccessors","replaceDependencies","dependencyRecords","isSuccessors","updated","toAdd","toRemove","currentSet","depsArr","existingDep","has","predecessors","setPredecessors","currentAssignments","removedAssignments","current","newAss","currentAssignment","isDelayingCalculation","findItem","isDraggable","isResizable","resizable","isEditable","isMilestone","isFieldModified","allDependencies","_this$project","predecessorTasks","successorTasks","previousSiblingsTotalCount","previousSibling","parentIndex","descendantCount","sequenceNumber","allIndexOf","code","isSubProject","subProject","isProject","bubbleWhile","t","fullEffort","effortUnit","effort","setEffort","$linkedResources","_this$resources","flatMap","$links","inSetNormalize","joinStore","useOrderedTree","firstStore","useOrderedTreeForWbs","generatedParent","_me$nextSibling","_me$previousSibling","isLoadingData","nextSibling","options","orderedParentIndex","unfilteredIndex","wbs","append","orderedChildren","unfilteredChildren","_taskStore$sorters","findIndex","tryInsertChild","tryPropagateWithChanges","insertChild","updateDependencies","isScheduled","DependencyBaseModel","setLag","calculateDurationMs","moveTaskPinningSuccessors","bubble","setStartDatePinningSuccessors","promise","setStartDate","setEndDatePinningSuccessors","getCurrentConfig","segments","segment","convertEmptyParentToLeaf","refreshWbsForChildrenOptions","wbsAuto","freeze","wbsManual","sortByWbs","TaskStore","AjaxStore","DayIndexMixin","GetEventsMixin","storeId","tree","wbsMode","outdentIgnoringSiblings","forceWbsOrderForChanges","changeWbsMode","action","indent","nodes","isProjectModel","beginBatch","newParent","toggleCollapse","refreshWbsForChildren","up","outdent","newChildren","orderedBeforeNode","nextOrderedSibling","onNodeAddChild","isMove","wbsRefreshed","oldParent","oldParentId","onNodeRemoveChild","flags","unfiltered","applyChangeset","transformFn","rest","modified","altered","isSorted","isGrouped","parentId","_node$parent","currentGrandparentId","originalNodeAbove","log","_originalNodeAbove$pa","nodeAboveIndex","afterChangesetApplied","modifiedParents","afterPerformSort","opts","parents","getTotalTimeSpan","getEventsForResource","isPartOfStore","isDateRangeAvailable","start","end","excludeEvent","allEvents","isAssignment","currentEvent","eventToRemove","delete","intersectSpans","tasks","getEventsLinkingDependency","added","removed","baselineSelector","Baselines","TooltipBase","recordType","pluginConfig","updateRenderer","tipId","doDisable","disable","refreshWithTransition","resolveTimeSpanRecord","baselineElement","template","displayDuration","formatDuration","startClockHtml","endClockHtml","getLocalizedNameOfUnit","getTaskDOMConfig","top","rtl","position","transform","taskId","baselineBox","taskRendering","getTaskBox","inset","timeAxisSubGrid","totalFixedWidth","left","renderData","baselineRecord","flat","syncOptions","syncIdField","onTaskDataGenerated","extraConfigs","wrapperCls","disabled","GridFeatureManager","registerFeature","CellEdit","SchedulerProCellEdit","addNewAtEnd","cfg","onProjectChange","cancelEditing","getEditorForCell","_inputField$loadEvent","loadEvent","doAddNewAtEnd","addToCurrentParent","newTaskDefaults","queue","newTask","addTaskBelow","last","getRowFor","displayRecordAtBottom","onCellEditStart","suspendAutoSync","afterCellEdit","resumeAutoSync","CriticalPaths","InstancePlugin","criticalDependencyCls","unhighlightCriticalPaths","highlightCriticalPaths","graphReady","getDependenciesFeature","foregroundCanvas","setupObserver","destroyObserver","criticalPathObserver","getGraph","observe","criticalPaths","removeCriticalCls","highlight","_this$client$project","_this$client$project$","removeIdentifier","contains","unhighlight","fromBoxSide","toBoxSide","criticalPathSorter","num","SchedulerProDependencies","terminalSides","highlightDependenciesOnEventHover","fromSide","toSide","fullLag","pathFinderConfig","otherHorizontalMargin","otherVerticalMargin","isGantt","createMarkers","endMarker","setAttribute","retainElement","svgCanvas","rowStore","attachToResourceStore","getDependencyKey","getAssignmentElement","getElementFromTaskRecord","getAssignmentBounds","isExporting","relativeTo","isEngineReady","isDependencyVisible","_dependency$fromEvent","_dependency$toEvent","drawDependency","batch","forceBoxes","domConfigs","topIndex","firstVisibleRow","dataIndex","bottomIndex","lastVisibleRow","startMS","endMS","visibleDateRange","isAvailable","fromIndex","toIndex","fromDateMS","startDateMS","toDateMS","endDateMS","lineDomConfigs","getDomConfigs","afterDrawDependency","domSync","getDependenciesToConsider","startIndex","endIndex","_super$getDependencie","criticalFeature","enabled","adjustLineDef","lineDef","startBox","endBox","arrowMargin","pathFinder","startArrowMargin","startRowBox","getRecordCoords","endRowBox","startBoxEnd","getEnd","endBoxStart","getStart","endBoxEnd","sourceEndsBeforeStart","bottom","y","endSide","x","right","startSide","boxesReversed","otherBoxes","drawForTask","VersionHelper","deprecate","getHoverTipHtml","resolveDependencyRecord","createDependency","hoverDelay","layoutStyle","flexDirection","defaultIndicators","indicator","encodedName","startText","indicators","_indicators","_indicatorAccessors","_indicatorStatus","enumerable","createIndicatorDOMConfig","timeAxis","timeAxisViewModel","fillTicks","startTick","getSnappedTickFromDate","endTick","getPositionFromDate","abs","DomClassList","rowOffsetHeight","resourceMargin","taskRecordId","usedIndicators","indicatorFn","timeSpan","timeSpanInAxis","lastDomConfig","Labels","SchedulerLabels","onEventDataGenerated","ParentArea","highlighted","Map","highlightParent","parentRecord","descendants","visibleDescendantCount","domConfig","onBeforeTaskSync","configs","row","ProgressLine","statusDate","Date","drawLineOnlyWhenStatusDateVisible","lineCls","containerCls","scheduleDraw","createOnFrame","lineSegments","attachToClient","rendered","draw","_statusDate","getSVGCanvas","_svgCanvas","svg","createElementNS","attachToProject","attachToRowManager","translaterow","rerender","changetotalheight","horizontalscroll","togglenode","taskdrag","taskdragabortfinalized","aftertaskdrop","timelineviewportresize","onPaint","onProjectRefresh","onTranslateRow","lastTop","onTaskDrag","taskRecords","dragData","updateLineForTask","timeDiff","shouldDrawProgressLine","collapsed","dateInAxis","getStatusDateX","getCoordinateFromDate","getRenderData","statusDateX","viewBox","timeAxisSubGridElement","getBoundingClientRect","viewXY","scrollLeft","el","isAnimating","transitionend","lines","getLineSegmentRenderData","line","drawLineSegment","segmentBelongsToTask","getAttribute","ArrayHelper","getRecordFromElement","elements","normal","lineDefinitions","point","isStatusLineTask","calculateCoordinateForTask","x1","y1","x2","y2","ns","class","isTimeSpanInAxis","isInProgress","isStarted","isCompleted","translateBy","isZeroDuration","progressBarEl","totalSize","AbstractTimeRanges","AttachToProjectMixin","showHeaderElements","startConfigure","renderRanges","shouldRenderRange","timeRanges","rollupCls","rollupSelector","Rollups","attachToTaskStore","getTipHtml","rawElements","elementsFromPoint","pageX","pageXOffset","pageY","pageYOffset","rollupElements","pieces","getFormattedDate","endDateValue","getDisplayEndDate","endText","clockTemplate","onStoreUpdateRecord","rollup","redraw","wrapperChildren","durationMS","taskFeature","positionData","getSizeAndPosition","rollupTaskId","Summary","TimelineSummary","summaries","isGanttBase","updateTaskStore","bindStore","updateTimelineSummaries","summaryContainer","summaryBarElement","tick","tipHtml","valueHtml","label","_tipHtml","TransactionalFeature","RowCopyPaste","copyRecordText","cutRecordText","pasteRecordText","beforeRenderTask","entityName","populateCellMenu","usesDisplayStore","paste","isActionAvailable","setIsCut","onBeforeRenderTask","extractParents","idMap","generateNames","isCut","depsToCopy","extractDependencies","insertCopiedRecords","toInsert","recordReference","startFeatureTransaction","finishFeatureTransaction","depsMap","deps","predecessor","TaskDrag","DragBase","validatorFn","validatorFnThisObj","pinSuccessors","tooltipCls","capitalizedEventName","changePinSuccessors","EventHelper","toSpecialKey","getDraggableElement","drag","resolveEventRecord","eventElement","isElementDraggable","_client","matches","prevented","triggerBeforeEventDrag","eventType","triggerEventDrag","draggedEntities","changed","triggerDragStart","triggerDragAbort","triggerDragAbortFinalized","rejectFeatureTransaction","triggerAfterDrop","currentOverClient","getProductDragContext","dd","getMinimalDragData","info","getElementFromContext","getTaskScheduleRegion","dateConstraints","getScheduleRegion","getDateConstraints","_this$client$getDateC","_this$client","setupProductDragData","taskRegion","relatedRecords","getRelatedRecords","eventBarEls","scheduleRegion","setupConstraints","snapPixelAmount","include","getCoordinate","coord","checkDragValidity","isValidDrop","updateRecords","browserEvent","oldStartDate","getRecordElement","TaskDragCreate","DragCreateBase","preventMultiple","setupDragContext","_event$target$closest","_event$target","timeAxisColumn","cellCls","Draggable","scrollManager","rowRecord","startDrag","draggingEnd","startEvent","mousedownDate","beginListeningForBatchedUpdates","resolution","weekStartDay","ceil","handleBeforeDragCreate","onAborted","itemElement","_me$gantt$getDateCons","_me$gantt","checkValidity","dragging","createValidatorFn","isRowEmpty","cancelBatch","endListeningForBatchedUpdates","TaskEditor","GanttTaskEditor","TaskEdit","SchedulerProTaskEdit","triggerEvent","saveAndCloseOnEnter","editorClass","editTask","editEvent","onActivateEditor","taskElement","onTaskEnterKey","populateTaskMenu","selection","weight","onEventEnterKey","scrollTaskIntoView","scrollEventIntoView","TaskMenu","EventMenu","processItems","cellMenu","console","warn","getDataFromEvent","targetElement","getTargetElementFromEvent","getCellDataFromEvent","callChainablePopulateMenuMethod","eventParams","cellData","shouldShowMenu","getElementFromRecord","isTreeGrouped","multiSelected","hidden","isParent","deleteTask","cellMenuItems","showTaskColorPickers","taskColor","populateItemsWithData","_items$taskColor","menu","colorMenu","changeItems","addTaskAbove","addMilestoneBelow","subtask","at","addSubtask","addSuccessor","addPredecessor","separator","featureClass","casedEventName","dblclick","contextmenu","TaskNonWorkingTime","idPrefix","maxTimeAxisUnit","mode","properties","rowMap","taskMap","prio","beforeToggleNode","firstPaint","mouseEventsDetacher","on","delegate","updateMode","onTimeAxisReconfigure","effectiveCalendar","calendarIntervals","getCalendarIntervalsToRender","barMode","shouldPaint","compareUnits","oneTickMs","first","ranges","getNonWorkingTimeRanges","createIntervalDOMConfig","isNonWorking","changeTooltip","old","Tooltip","showOnHover","hideDelay","anchorToTarget","trackMouse","getHtml","handleMouseEvent","domEvent","feature","TaskResize","EventResize","draggingItemCls","resizingItemInnerCls","onDragItemMouseMove","isTaskElementDraggable","isEventElementDraggable","basicValidityCheck","getBeforeResizeParams","setupProductResizeContext","_gantt$getDateConstra","internalUpdateRecord","timespanRecord","toSet","cancelEventRecordBatch","setEndDate","triggerEventResizeStart","triggerEventResizeEnd","TaskSegmentDrag","isEventSegment","isSegmented","triggerBeforeEventDropFinalize","eventData","onInternalInvalidDrop","abort","mainTaskElement","initialMainTaskElementWidth","buildDragHelperConfig","mainTaskRegion","translate","parseFloat","updateDragContext","dirty","nextSegment","clientX","startClientX","minDate","maxDate","previousSegment","TaskSegmentResize","EventSegmentResize","leftHandle","isTaskSegmentElementDraggable","decimalPrecision","renderedPercentDone","monitorRecordUpdate","TreeGroup","GridTreeGroup","delayable","updateParents","root","_root$children","WalkHelper","postWalk","_task$children","minStartDate","maxEndDate","percentDone","Number","MAX_SAFE_INTEGER","processTransformedData","transformedData","onTaskStoreChange","suspendRefresh","resumeRefresh","applyLevels","levels","GanttVersions","SchedulerProVersions","knownBaseTypes","taskMenuItem","isMultiple","transactionDescription","BASELINE_RATIO","GanttExporterMixin","prepareComponent","fgCanvasEl","removeEachSelector","collectEvents","rows","addedRows","normalRows","exportMeta","subGrids","rowConfig","eventsMap","outerHTML","offsetParent","renderEvents","renderBaselines","hasActiveFeature","offset","topRowOffset","offsetHeight","currentOrientation","getTaskRenderData","taskDOMConfig","DomSync","sync","extrasArray","getEventBox","eventsBoxes","startX","endX","firstRowHTML","firstRowTop","lastRowTop","firstRowIndex","estimatedY","MultiPageExporter","SchedulerMultiPageExporter","MultiPageVerticalExporter","SchedulerMultiPageVerticalExporter","SinglePageExporter","SchedulerSinglePageExporter","PdfExport","SchedulerPdfExport","exporters","CalendarIntervalModel","SchedulerProCalendarIntervalModel","ProjectModel","Model","ProjectChangeHandlerMixin","ProjectCurrentConfig","ProjectCrudManager","ProjectModelTimeZoneMixin","ProjectModelCommon","expanded","dateConstraintIntervalClass","DateConstraintInterval","DependencyConstraintInterval","taskModelClass","dependencyModelClass","resourceModelClass","assignmentModelClass","calendarModelClass","taskStoreClass","dependencyStoreClass","resourceStoreClass","assignmentStoreClass","calendarManagerStoreClass","tasksData","eventsData","dependenciesData","resourcesData","assignmentsData","calendarsData","timeRangeStore","supportShortSyncResponseNote","delayCalculation","stmClass","StateTrackingManager","timeRangesData","syncDataOnLoad","ignoreRemoteChangesInSTM","eventModelClass","getDefaultConfiguration","defaultEventModelClass","eventStoreClass","defaultEventStoreClass","attachStore","$$name","detachStore","relayStoreChange","_timeRangeStore","getStore","toJSON","json","loadInlineData","updateTasks","updateCalendars","updateTimeRangesData","inlineData","afterChange","wasSet","_children$0$refreshWb","applyConfigs","WebSocketProjectModel","ProjectWebSocketHandlerMixin","year","getFullYear","earlyMondayThisYear","DH","startOf","rnd","RandomGenerator","getNum","token","ProjectGenerator","generateAsync","requestedTaskCount","maxProjectSize","progressCallback","blockCount","projectSize","generator","generateBlocks","taskCount","dependencyCount","time","block","projectDuration","AsyncHelper","animationFrame","timeEnd","currentId","dependencyId","blockDuration","sumDuration","currentDuration","currentStartDate","finishedDuration","rndDuration","addToTotal","resetSum","nextRandom","nextStartDate","storePercentDone","blockStartId","subParent1","subParent2","defineParser","alt","seq","succeed","red","isSuccess","Parser","resourceNamePEG","integerPEG","decimalSeparatorPEG","unitsNumberPEG","integer","sep","fractional","unitsPersentagePEG","perc","unitsDesignationPEG","startSep","endSep","commaPEG","raPEG","parse","str","gotSuccess","possibleResult","structuredResult","unstracturedRest","part","currentResource","compose","parseResult","exactIfPossible","clearTime","taskUnitMap","minute","hour","day","week","month","projectUnitMap","constraintMap","finishnoearlierthan","finishnolaterthan","mustfinishon","muststarton","startnoearlierthan","startnolaterthan","typeMap","FixedDuration","Normal","dependencyTypeMap","MspExport","resourceCalendar","filename","dateFormat","timeFormat","msProjectVersion","generateExportData","collectProjectTasks","getMsProjectConfig","Calendars","getCalendarsData","Tasks","Task","getTasksData","Resources","Resource","getResourcesData","Assignments","Assignment","getAssignmentsData","export","fileContent","convertToXml","BrowserHelper","download","encodeURIComponent","XMLHelper","convertFromObject","rootName","elementName","xmlns","rootElementForArray","fileName","CalendarUID","getCalendarUID","CreationDate","SplitsInProgressTasks","MoveCompletedEndsBack","MoveRemainingStartsBack","MoveRemainingStartsForward","MoveCompletedEndsForward","NewTaskStartDate","DaysPerMonth","daysPerMonth","FinishDate","MinutesPerDay","hoursPerDay","MinutesPerWeek","daysPerWeek","ScheduleFromStart","StartDate","Title","WorkFormat","ProjectExternallyEdited","getByInternalId","internalId","isResourceCalendar","uid","calendarName","baseCalendarUID","isBaseCalendar","ID","UID","BaseCalendarUID","IsBaseCalendar","WeekDays","WeekDay","formatWeekDays","ticks","daysData","getDay","DayType","DayWorking","dummyCalendar","calendarsCombination","combineCalendars","forEachAvailabilityInterval","calendarCacheInterval","calendarsStatus","getCalendarsWorkStatus","dayData","WorkingTimes","WorkingTime","FromTime","ToTime","traverse","durationMs","convertDuration","effortMs","actualDurationMs","startDateStr","endDateStr","durationStr","convertDurationToMspDuration","getTaskUID","Active","IsNull","OutlineNumber","OutlineLevel","ManualStart","ManualFinish","ManualDuration","DurationFormat","Work","EffortDriven","Estimated","PercentComplete","ActualStart","ActualDuration","RemainingDuration","PredecessorLink","LagFormat","LinkLag","PredecessorUID","IgnoreResourceCalendar","ignoreResourceCalendar","ConstraintDate","note","Notes","fallbackValue","MaxUnits","PeakUnits","taskUID","finish","assignmentWorkMs","actualAssignmentWorkMs","actualEffort","remainingAssignmentWorkMs","UpdateNeeded","TaskUID","ResourceUID","PercentWorkComplete","ActualWork","RemainingWork","actualEffortMs","effortStr","_internalIdCounter","delta","getDelta","ignoreLocale","maxUnit","second","hyphenRe","Target","GanttDom","Base","eventSelector","resolveRowRecord","elementOrEvent","onElementKeyDown","onElementKeyUp","inner","getElementFromEventRecord","getEventRenderId","getEventData","DomDataStore","cellSelector","widgetClass","GanttRegions","local","getRowById","getElement","barMargin","moveTo","scrollWidth","taStart","taEnd","_me$getDateConstraint","translateToPageCoordinate","isRowVisible","includeOutside","defaultScrollOptions","edgeOffset","GanttScroll","taskStart","taskEnd","scrollRowIntoView","taskIsOutside","extendTimeAxis","currentTimeSpanRange","startAnchorPoint","endAnchorPoint","setTimeSpan","valueOf","scrollBy","scroller","scrollUnrenderedTaskIntoView","taskRec","scrollerViewport","viewport","targetRect","detacher","renderTask","then","GanttState","updateProject","delayCalculationStart","delayCalculationEnd","suspendStateListener","stateListenerSuspended","resumeStateListener","isSaveStatePending","saveState","immediate","applyState","state","_state$store","_state$store2","isInitialCommitPerformed","storeState","specialKeys","subState","_applyStateAfterPaint","keys","commitFinalized","GanttStores","ProjectConsumer","projectStores","dataName","projectModelClass","oldProject","bindCrudManager","replica","internalOnProjectRefresh","isInitialCommit","isCalculated","visibleDate","isPainted","appliedViewStartDate","initialConfig","requestedVisibleDate","changeTasks","buildingProjectConfig","changeTaskStore","initializingProject","setEventStore","updateEventStore","metaMapId","batchedUpdate","onEventStoreBatchedUpdate","listenToBatchedUpdates","wasEnabled","enableEventAnimations","GanttTimelineDateMapper","animate100","animate","TaskNavigation","inlineFlow","prevKey","nextKey","Enter","isNavigationKey","ArrowDown","ArrowUp","ArrowLeft","ArrowRight","normalizeTarget","onElementMouseDown","_focusedCell","taskEl","itemSelector","isFocused","lastNavigationEvent","_me$onCellNavigate","onCellNavigate","selectEvent","preserveSelection","isSelected","deselectEvent","getNext","rowIdx","nextTask","isInTimeAxis","getPrevious","prevTask","activeEvent","activeItem","navigateTo","targetEvent","uiEvent","skipScrollIntoView","clearEventSelection","deselectAll","onDeleteKey","enableDeleteKey","removeEvents","onGridBodyFocusIn","focusEvent","navigationEvent","eventFocus","destinationCell","normalizeCellContext","rowIndex","_me$onCellNavigate2","releaseEventActions","releaseElement","reuseElement","renderEventActions","newElement","reuseOwnElement","NewTaskRendering","renderDone","removeRows","renderRow","refreshRows","onTimeAxisViewModelUpdate","updateFromHorizontalScroll","onViewportResize","onDragAbort","onBeforeRowHeightChange","fontSize","_visibleDateRange","isBatchUpdating","innerElement","calculateTop","bounds","layout","_gantt$features$depen","viewStart","viewEnd","horizontalAdjustment","startCoordinate","endCoordinate","pxPerSecond","getSingleUnitInPixels","secondsOutOfView","pxOutOfView","snap","tickIdx","getTickFromDate","getRowRegion","rowElement","scrollTop","getDateFromXY","xy","roundingMethod","translateToScheduleCoordinate","getDateFromPosition","pos","_wrapper","syncIdMap","wrapper","hasLinks","forEachLinked","linked","getConnectorStartSide","getConnectorEndSide","onRenderRow","assignCls","onRemoveRows","refreshSuspended","onRenderDone","scrollX","returnEnd","maxX","getDateFromCoord","ignoreRTL","_viewPresetChanging","viewportCoords","timeView","onVisibleDateRangeChange","internalPopulateTaskRenderData","taskContent","taskBarFeature","_renderData$iconCls","startsOutsideView","endsOutsideView","taskIconCls","eventCls","isExpanded","isLinked","isResourceTimeRange","generatedIdCls","hasGeneratedId","dirtyCls","modifications","committingCls","isCommitting","endsOutsideViewCls","startsOutsideViewCls","fixedEventCls","eventStyle","taskRenderer","taskRendererThisObj","childContent","isHtml","isNamedColor","_customColorStyle","populateTaskRenderData","tabIndex","internalStyle","zIndex","releaseThreshold","onlyChildren","callback","_lastDomConfig$elemen","_domConfig$elementDat","isRelease","isRender","reusingElement","refreshCell","emptyObject","newTaskCount","GanttBase","TimelineBase","CrudManagerView","EventNavigation","ProjectProgressMixin","SchedulingIssueResolution","TransactionalFeatureMixin","CurrentConfig","toggleParentTasksOnClick","scrollTaskIntoViewOnCellClick","eventBarTextField","eventLayout","eventSelectionDisable","scheduledEventName","eventScrollMode","overScheduledEventClass","timeCellCls","focusCls","keyMap","timeCellSelector","hasInlineStores","hasInlineData","taskclick","cellClick","toggleNode","changeColumns","currentStore","cols","_thisIsAUsedExpression","getColumnClass","onPaintOverride","topRow","reinitialize","params","isBatchingChanges","runWithTransition","onStoreDataChange","onTaskBarClick","onNonTimeAxisCellClick","onToggleParentNode","afterSelectionChange","deselectedRecords","setTaskSelection","toggleEmptyText","toggleClasses","rowCount","isLoadingOrSyncing","_currentOrientation","getTimeSpanMouseEventParams","getScheduleMouseEventParams","repaintEventsForResource","visibleResources","_this$firstVisibleRow","_this$lastVisibleRow","addTask","referenceTask","asPredecessor","asSuccessor","newRecord","suspendChangesTracking","asChild","above","resumeChangesTracking","Event","Toast","rootElement","onElementMouseOver","onElementMouseOut","setVersion"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMuqB,eAAe,SAASC,iBAA2B,CAAC;EACrE,WAAWtZ,aAAaA,GAAG;IACvB,OAAO;AACH5E,MAAAA,UAAU,EAAG6B,eAAe;AAC5B;AACZ;AACA;AACA;AACYob,MAAAA,YAAY,EAAG,GAAG;AAClB;AACZ;AACA;AACA;AACYC,MAAAA,YAAY,EAAG,GAAA;KAClB,CAAA;AACL,GAAA;AACJ,CAAA;AACAe,eAAe,CAACvqB,MAAM,GAAG,iBAAiB;;AC/C1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMyqB,aAAa,SAASC,eAAyB,CAAC;AACjE;AACJ;AACA;AACA;AACA;AACA;AALI,CAAA;AAOJD,aAAa,CAACzqB,MAAM,GAAG,eAAe;;AC/BtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM2qB,aAAa,SAASC,eAAyB,CAAC;EACjE,WAAW1Z,aAAaA,GAAG;IACvB,OAAO;AACH5E,MAAAA,UAAU,EAAGme,aAAa;AAC1B;AACZ;AACA;AACA;AACYlB,MAAAA,YAAY,EAAG,GAAG;AAClB;AACZ;AACA;AACA;AACYC,MAAAA,YAAY,EAAG,GAAA;KAClB,CAAA;AACL,GAAA;AACJ,CAAA;AACAmB,aAAa,CAAC3qB,MAAM,GAAG,eAAe;;ACnCtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM6qB,QAAQ,SAASC,QAAQ,CAAC;AAC3C;AACA,EAAA,OAAO/rB,MAAM,GAAG;AACZ;AACR;AACA;AACA;AACQ,EAAA;AACIlU,IAAAA,IAAI,EAAM,MAAM;AAChB4F,IAAAA,OAAO,EAAG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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMkJ,SAAS,SAAS50B,UAAU,CAAC60B,MAAM,CAACrC,QAAQ,CAAC,CAACsC,KAAK,CACpEC,aAAa,EACbC,gBACJ,CAAC,CAAC;AACE;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,WAAWvuB,MAAMA,GAAG;IAChlU,MAAAA,IAAI,EAAQ,KAAK;MACjBopB,SAAS,EAAIvW,KAAK,IAAK;QACnB,OAAOA,KAAK,CAAC6vB,cAAc,GAAG7vB,KAAK,CAACkS,QAAQ,EAAE,GAAGlS,KAAK,CAAA;OACzD;AACDjN,MAAAA,OAAO,EAAG,IAAA;KACb;AACD;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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GAAC,KAAM,CAAAD,CAAC,KAAA,IAAA,IAADA,CAAC,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAADA,CAAC,CAAEzU,QAAQ,OAAK0U,CAAC,KAAA,IAAA,IAADA,CAAC,KAADA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAC,CAAE1U,QAAQ,CAAI,GAAA,CAAC,GAAGyU,CAAC,aAADA,CAAC,KAAA,KAAA,CAAA,IAADA,CAAC,CAAEzU,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;AACnH;AACAwgB,EAAAA,KAAK,GAAgBklB,GAAG,IAAI70B,IAAI,CAAC2P,KAAK,CAACklB,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM/wB,YAAY,SAASgxB,cAAwB,CAAC;AAC/D;EACA,OAAOv0C,KAAK,GAAG,cAAc,CAAA;AAC7B,EAAA,OAAOwb,YAAY,GAAG;AAClBg5B,IAAAA,aAAa,EAAuB,CAAC,MAAM,EAAE,OAAO,CAAC;AACrDC,IAAAA,iCAAiC,EAAG,IAAI;IACxChiB,eAAeA,CAAC1rB,UAAU,EAAE;MACxB,IAAI,CAACA,UAAU,EAAE;AACb,QAAA,OAAO,IAAI,CAAA;AACf,OAAA;MACA,MACI4F,EAAE,GAAuB,IAAI;AAC7B,QAAA;AAAEoQ,UAAAA,iBAAAA;SAAmB,GAAIpQ,EAAE,CAAC+T,MAAM;AAClC,QAAA;UAAEtR,SAAS;AAAEpI,UAAAA,OAAAA;AAAQ,SAAC,GAAGD,UAAU,CAAA;MACvC,OAAO;AACHkG,QAAAA,QAAQ,EAAG,CAAC;AACRwN,UAAAA,SAAS,EAAG,0BAA0B;AACtCxN,UAAAA,QAAQ,EAAI,CACR;AAAEotB,YAAAA,GAAG,EAAG,OAAO;AAAE9oB,YAAAA,IAAI,EAAG5E,EAAE,CAACrM,CAAC,CAAC,SAAS,CAAA;AAAE,WAAC,EACzC;YAAEiR,IAAI,EAAI,GAAEnC,SAAS,CAAC7O,IAAK,CAAG6O,CAAAA,EAAAA,SAAS,CAAC2N,iBAAiB,CAAE,CAAA,CAAA;AAAE,WAAC,EAC9D;YAAEtC,SAAS,EAAI,CAAc1T,YAAAA,EAAAA,UAAU,CAAC2tC,QAAQ,IAAIP,WAAW,CAACptC,UAAU,CAACb,IAAI,CAAE,CAAA,CAAA;AAAE,WAAC,EACpF;AAAEm0B,YAAAA,GAAG,EAAG,OAAO;AAAE9oB,YAAAA,IAAI,EAAG5E,EAAE,CAACrM,CAAC,CAAC,OAAO,CAAA;AAAE,WAAC,EACvC;YAAEiR,IAAI,EAAI,GAAEvK,OAAO,CAACzG,IAAK,CAAGyG,CAAAA,EAAAA,OAAO,CAAC+V,iBAAiB,CAAE,CAAA,CAAA;AAAE,WAAC,EAC1D;YAAEtC,SAAS,EAAI,CAAc1T,YAAAA,EAAAA,UAAU,CAAC4tC,MAAM,IAAIP,SAAS,CAACrtC,UAAU,CAACb,IAAI,CAAE,CAAA,CAAA;AAAE,WAAC,EAChFa,UAAU,CAACc,GAAG,GAAG;AAAEwyB,YAAAA,GAAG,EAAG,OAAO;AAAE9oB,YAAAA,IAAI,EAAG5E,EAAE,CAACrM,CAAC,CAAC,uBAAuB,CAAA;AAAE,WAAC,GAAG,IAAI,EAC/EyG,UAAU,CAACc,GAAG,GAAG;YAAE0J,IAAI,EAAGxK,UAAU,CAAC6tC,OAAAA;AAAQ,WAAC,GAAG,IAAI,CAAA;SAE5D,CAAA;OACJ,CAAA;KACJ;AACDC,IAAAA,gBAAgB,EAAG;AACfC,MAAAA,qBAAqB,EAAG,CAAC;AACzBC,MAAAA,mBAAmB,EAAK,CAAA;AAC5B,KAAA;GACH,CAAA;AACD;AACA;AACA90C,EAAAA,SAASA,CAAC+V,KAAK,EAAEmE,MAAM,GAAG,EAAE,EAAE;AAC1B;IACA,IAAInE,KAAK,CAACg/B,OAAO,EAAE;MACf,IAAI,CAACh/B,KAAK,GAAGA,KAAK,CAAA;AACtB,KAAA;AACA,IAAA,KAAK,CAAC/V,SAAS,CAAC+V,KAAK,EAAEmE,MAAM,CAAC,CAAA;AAClC,GAAA;AACA;AACA;AACA;AACA86B,EAAAA,aAAaA,GAAG;IACZ,KAAK,CAACA,aAAa,EAAE,CAAA;IACrB,MAAMC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACtb,SAAS,CAAC,IAAI,CAAC,CAAA;AAChDsb,IAAAA,SAAS,CAACC,YAAY,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAA;IAChDD,SAAS,CAACE,aAAa,GAAG,IAAI,CAAA;IAC9B,IAAI,CAAC10B,MAAM,CAAC20B,SAAS,CAACtb,WAAW,CAACmb,SAAS,CAAC,CAAA;AAChD,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAII,QAAQA,GAAG;AACX,IAAA,OAAO,IAAI,CAAC50B,MAAM,CAAClO,KAAK,CAAA;AAC5B,GAAA;AACA;EACA+iC,qBAAqBA,CAAC,GAAG/V,IAAI,EAAE;AAC3B;AACA,IAAA,IAAI,CAAC,IAAI,CAACxpB,KAAK,EAAE;AACb,MAAA,KAAK,CAACu/B,qBAAqB,CAAC,GAAG/V,IAAI,CAAC,CAAA;AACxC,KAAA;AACJ,GAAA;AACAgW,EAAAA,gBAAgBA,CAACzuC,UAAU,EAAE,GAAGy4B,IAAI,EAAE;AAClC,IAAA,IAAI,CAAC,IAAI,CAACxpB,KAAK,EAAE;AACb,MAAA,KAAK,CAACw/B,gBAAgB,CAACzuC,UAAU,EAAE,GAAGy4B,IAAI,CAAC,CAAA;AAC/C,KAAA;IACA,OAAOz4B,UAAU,CAACvG,EAAE,CAAA;AACxB,GAAA;AACA;EACAi1C,oBAAoBA,CAACt1B,IAAI,EAAE;AACvB,IAAA,IAAI,CAAC,IAAI,CAACnK,KAAK,EAAE;AACb,MAAA,OAAO,KAAK,CAACy/B,oBAAoB,CAACt1B,IAAI,CAAC,CAAA;AAC3C,KAAA;AACA,IAAA,OAAO,IAAI,CAACO,MAAM,CAACg1B,wBAAwB,CAACv1B,IAAI,CAAC,CAAA;AACrD,GAAA;AACA;EACAw1B,mBAAmBA,CAACx1B,IAAI,EAAE;AACtB,IAAA,IAAI,CAAC,IAAI,CAACnK,KAAK,EAAE;AACb,MAAA,OAAO,KAAK,CAAC2/B,mBAAmB,CAACx1B,IAAI,CAAC,CAAA;AAC1C,KAAA;IACA,MACI;AAAEO,QAAAA,MAAAA;AAAO,OAAC,GAAG,IAAI;AACjBlN,MAAAA,OAAO,GAAMkN,MAAM,CAACg1B,wBAAwB,CAACv1B,IAAI,CAAC,CAAA;AACtD,IAAA,IAAI3M,OAAO,IAAI,CAACkN,MAAM,CAACk1B,WAAW,EAAE;MAChC,OAAOn1B,SAAS,CAAC1F,IAAI,CAACvH,OAAO,EAAE,IAAI,CAACqiC,UAAU,CAAC,CAAA;AACnD,KAAA;AACA,IAAA,OAAOn1B,MAAM,CAACo1B,aAAa,IAAIp1B,MAAM,CAAC8vB,UAAU,CAACrwB,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;AACtE,GAAA;AACA;AACA;EACA41B,mBAAmBA,CAAChvC,UAAU,EAAE;IAAA,IAAAivC,qBAAA,EAAAC,mBAAA,CAAA;AAC5B,IAAA,IAAI,CAAC,IAAI,CAACjgC,KAAK,EAAE;AACb,MAAA,OAAO,KAAK,CAAC+/B,mBAAmB,CAAChvC,UAAU,CAAC,CAAA;AAChD,KAAA;IACA,OAAO,CAAA,CAAAivC,qBAAA,GAAAjvC,UAAU,CAACqI,SAAS,MAAA,IAAA,IAAA4mC,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAApBA,qBAAA,CAAsBxM,WAAW,MAAAyM,CAAAA,mBAAA,GAAIlvC,UAAU,CAACC,OAAO,cAAAivC,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAlBA,mBAAA,CAAoBzM,WAAW,CAAA,CAAA;AAC/E,GAAA;AACA;AACA;EACA0M,cAAcA,CAACnvC,UAAU,EAAEovC,KAAK,GAAG,KAAK,EAAEC,UAAU,GAAG,IAAI,EAAE;AACzD,IAAA,IAAI,CAAC,IAAI,CAACpgC,KAAK,EAAE;MACb,OAAO,KAAK,CAACkgC,cAAc,CAACnvC,UAAU,EAAEovC,KAAK,EAAEC,UAAU,CAAC,CAAA;AAC9D,KAAA;IACA,MACIzpC,EAAE,GAAuB,IAAI;AAC7B,MAAA;QACI0pC,UAAU;AACV31B,QAAAA,MAAAA;AACJ,OAAC,GAAG/T,EAAE;AACN,MAAA;AAAE6F,QAAAA,KAAAA;AAAM,OAAC,GAAgBkO,MAAM;AAC/B41B,MAAAA,QAAQ,GAAiB51B,MAAM,CAAC61B,eAAe,CAACC,SAAS;AACzDC,MAAAA,WAAW,GAAc/1B,MAAM,CAACg2B,cAAc,CAACF,SAAS;AACxD,MAAA;QAAEG,OAAO;AAAEC,QAAAA,KAAAA;OAAO,GAAOl2B,MAAM,CAACm2B,gBAAgB;AAChD,MAAA;QAAEznC,SAAS;AAAEpI,QAAAA,OAAAA;AAAQ,OAAC,GAAGD,UAAU,CAAA;AACvC,IAAA,IAAIyL,KAAK,CAACskC,WAAW,CAAC1nC,SAAS,CAAC,IAAIoD,KAAK,CAACskC,WAAW,CAAC9vC,OAAO,CAAC,EAAE;AAC5D,MAAA,MACI+vC,SAAS,GAAIvkC,KAAK,CAACe,OAAO,CAACnE,SAAS,CAAC;AACrC4nC,QAAAA,OAAO,GAAMxkC,KAAK,CAACe,OAAO,CAACvM,OAAO,CAAC;AACnCiwC,QAAAA,UAAU,GAAGx3B,IAAI,CAACxF,GAAG,CAAC7K,SAAS,CAAC8nC,WAAW,EAAElwC,OAAO,CAACkwC,WAAW,CAAC;AACjEC,QAAAA,QAAQ,GAAK13B,IAAI,CAACvF,GAAG,CAAC9K,SAAS,CAACgoC,SAAS,EAAEpwC,OAAO,CAACowC,SAAS,CAAC,CAAA;AACjE;MACA,IAAI12B,MAAM,CAACk1B,WAAW,IAAImB,SAAS,IAAI,IAAI,IAAIC,OAAO,IAAI,IAAI,IAAI;AAC9D;AACCD,MAAAA,SAAS,GAAGT,QAAQ,IAAIU,OAAO,GAAGV,QAAQ;AAC3C;AACCS,MAAAA,SAAS,GAAGN,WAAW,IAAIO,OAAO,GAAGP,WAAY;AAClD;AACCQ,MAAAA,UAAU,GAAGN,OAAO,IAAIQ,QAAQ,GAAGR,OAAQ;AAC5C;AACCM,MAAAA,UAAU,GAAGL,KAAK,IAAIO,QAAQ,GAAGP,KAAM,CAC3C,EAAE;AACC,QAAA,MAAMS,cAAc,GAAG1qC,EAAE,CAAC2qC,aAAa,CAACvwC,UAAU,EAAEqI,SAAS,EAAEpI,OAAO,EAAEovC,UAAU,CAAC,CAAA;AACnF,QAAA,IAAIiB,cAAc,EAAE;UAChBhB,UAAU,CAACjgC,GAAG,CAACrP,UAAU,CAACvG,EAAE,EAAE62C,cAAc,CAAC,CAAA;AACjD,SAAA;AACA;aACK;AACDhB,UAAAA,UAAU,CAAC7H,MAAM,CAACznC,UAAU,CAACvG,EAAE,CAAC,CAAA;AACpC,SAAA;AACJ,OAAA;AACA;AACA;AACAmM,MAAAA,EAAE,CAAC4qC,mBAAmB,CAACxwC,UAAU,EAAEgwC,SAAS,EAAEC,OAAO,EAAEC,UAAU,EAAEE,QAAQ,CAAC,CAAA;AAChF,KAAA;IACA,IAAI,CAAChB,KAAK,EAAE;MACRxpC,EAAE,CAAC6qC,OAAO,EAAE,CAAA;AAChB,KAAA;AACJ,GAAA;AACA;AACA;EACAC,yBAAyBA,CAACd,OAAO,EAAEC,KAAK,EAAEc,UAAU,EAAEC,QAAQ,EAAE;AAAA,IAAA,IAAAC,qBAAA,CAAA;IAC5D,MACI36B,YAAY,IAAA26B,qBAAA,GAAM,KAAK,CAACH,yBAAyB,cAAAG,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA/BA,qBAAA,CAAA15C,IAAA,OAAkCy4C,OAAO,EAAEC,KAAK,EAAEc,UAAU,EAAEC,QAAQ,CAAC;AACzFE,MAAAA,eAAe,GAAG,IAAI,CAACn3B,MAAM,CAAC8O,QAAQ,CAACmkB,aAAa,CAAA;IACxD,IAAI12B,YAAY,IAAI46B,eAAe,KAAA,IAAA,IAAfA,eAAe,KAAfA,KAAAA,CAAAA,IAAAA,eAAe,CAAEC,OAAO,EAAE;MAC1C,OAAOnjB,KAAK,CAAC5Z,IAAI,CAACkC,YAAY,CAAC,CAACmG,IAAI,CAACixB,kBAAkB,CAAC,CAAA;AAC5D,KAAA;AACA,IAAA,OAAOp3B,YAAY,CAAA;AACvB,GAAA;AACA86B,EAAAA,aAAaA,CAAChxC,UAAU,EAAEixC,OAAO,EAAE;IAC/B,MAAMrrC,EAAE,GAAG,IAAI,CAAA;AACf;AACA,IAAA,IAAI,CAACA,EAAE,CAACqJ,KAAK,EAAE;AACX,MAAA,OAAOgiC,OAAO,CAAA;AAClB,KAAA;IACA,MACI;AAAE9H,QAAAA,GAAAA;OAAK,GAAgBvjC,EAAE,CAACqJ,KAAK;AAC/B,MAAA;QAAEiiC,QAAQ;AAAEC,QAAAA,MAAAA;AAAO,OAAC,GAAGF,OAAO;AAC9BG,MAAAA,WAAW,GAAYxrC,EAAE,CAACyrC,UAAU,CAACC,gBAAgB;AACrDC,MAAAA,WAAW,GAAY3rC,EAAE,CAAC+T,MAAM,CAAC63B,eAAe,CAACxxC,UAAU,CAACqI,SAAS,EAAE,IAAI,CAAC;AAC5EopC,MAAAA,SAAS,GAAc7rC,EAAE,CAAC+T,MAAM,CAAC63B,eAAe,CAACxxC,UAAU,CAACC,OAAO,EAAE,IAAI,CAAC;MAC1EyxC,WAAW,GAAYrpB,KAAK,CAAC6oB,QAAQ,CAACS,MAAM,CAACxI,GAAG,CAAC,CAAC;MAClDyI,WAAW,GAAYvpB,KAAK,CAAC8oB,MAAM,CAACU,QAAQ,CAAC1I,GAAG,CAAC,CAAC;MAClD2I,SAAS,GAAczpB,KAAK,CAAC8oB,MAAM,CAACQ,MAAM,CAACxI,GAAG,CAAC,CAAC;AAChD;AACA;MACA4I,qBAAqB,GAAG5I,GAAG,GACpByI,WAAW,IAAIF,WAAW,IAAII,SAAS,IAAKJ,WAAW,GAAGN,WAAY,GACtEQ,WAAW,IAAIF,WAAW,IAAII,SAAS,IAAKJ,WAAW,GAAGN,WAAa,CAAA;AAClF,IAAA,IACIpxC,UAAU,CAACb,IAAI,KAAKwB,cAAc,CAACc,UAAU;AAC7C;AACAyvC,IAAAA,QAAQ,CAACc,MAAM,GAAGb,MAAM,CAACc,CAAC;AAC1B;AACA;AACAF,IAAAA,qBAAqB,EACvB;AACE;MACAd,OAAO,CAACiB,OAAO,GAAG,KAAK,CAAA;AACvB;AACA;AACA;AACA,MAAA,IAAI,CAAClyC,UAAU,CAACC,OAAO,CAAC05B,SAAS,EAAE;AAC/B,QAAA,IAAIwP,GAAG,EAAE;UACLgI,MAAM,CAACgB,CAAC,GAAGhB,MAAM,CAACiB,KAAK,GAAGhB,WAAW,GAAG,CAAC,CAAA;AAC7C,SAAC,MACI;AACDD,UAAAA,MAAM,CAACpiC,KAAK,GAAGqiC,WAAW,GAAG,CAAC,CAAA;AAClC,SAAA;AACJ,OAAA;AACJ,KAAA;IACA,OAAO;AACH,MAAA,GAAGH,OAAO;AACV;AACAC,MAAAA,QAAQ,EAAQC,MAAM;AACtBA,MAAAA,MAAM,EAAUD,QAAQ;MACxBgB,OAAO,EAASjB,OAAO,CAACoB,SAAS;MACjCA,SAAS,EAAOpB,OAAO,CAACiB,OAAO;AAC/BI,MAAAA,aAAa,EAAG,IAAI;AACpB;AACAC,MAAAA,UAAU,EAAM,CACZ;QACIrL,KAAK,EAAIgK,QAAQ,CAACiB,CAAC;QACnBhL,GAAG,EAAM+J,QAAQ,CAACkB,KAAK;QACvBlJ,GAAG,EAAMqI,WAAW,CAACU,CAAC;QACtBD,MAAM,EAAGT,WAAW,CAACS,MAAAA;AACzB,OAAC,EACD;QACI9K,KAAK,EAAIiK,MAAM,CAACgB,CAAC;QACjBhL,GAAG,EAAMgK,MAAM,CAACiB,KAAK;QACrBlJ,GAAG,EAAMuI,SAAS,CAACQ,CAAC;QACpBD,MAAM,EAAGP,SAAS,CAACO,MAAAA;OACtB,CAAA;KAER,CAAA;AACL,GAAA;AACA;AACJ;AACA;AACA;AACIQ,EAAAA,WAAWA,GAAG;IACVC,aAAa,CAACC,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,gDAAgD,CAAC,CAAA;IAC3F,IAAI,CAAC9hC,OAAO,EAAE,CAAA;AAClB,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACI+hC,EAAAA,eAAeA,CAAC;AAAEnjB,IAAAA,YAAAA;AAAa,GAAC,EAAE;AAC9B,IAAA,MAAMxvB,UAAU,GAAG,IAAI,CAAC4yC,uBAAuB,CAACpjB,YAAY,CAAC,CAAA;AAC7D,IAAA,OAAO,IAAI,CAAC9D,eAAe,CAAC1rB,UAAU,CAAC,CAAA;AAC3C,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;EACI,MAAM6yC,gBAAgBA,CAAC1lC,IAAI,EAAE;IACzB,MACIvH,EAAE,GAAW,IAAI;AACjB,MAAA;QACIuU,MAAM;QACN5kB,MAAM;QACNo4C,QAAQ;AACRC,QAAAA,MAAAA;AACJ,OAAC,GAAYzgC,IAAI;AACjBhO,MAAAA,IAAI,GAAS,CAACwuC,QAAQ,KAAK,OAAO,GAAG,CAAC,GAAG,CAAC,KAAKC,MAAM,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;AACxE5tC,MAAAA,UAAU,GAAG4F,EAAE,CAAC8P,eAAe,CAACqG,GAAG,CAAC;AAChC1T,QAAAA,SAAS,EAAG8R,MAAM;AAClBla,QAAAA,OAAO,EAAK1K,MAAM;AAClB4J,QAAAA,IAAAA;OACH,CAAC,CAAC,CAAC,CAAC,CAAA;IACT,MAAMyG,EAAE,CAAC8P,eAAe,CAACrV,OAAO,CAAC0e,WAAW,EAAE,CAAA;AAC9C,IAAA,OAAO/e,UAAU,CAAA;AACrB,GAAA;AACA;AACJ,CAAA;;AACAwc,YAAY,CAAC7N,MAAM,GAAG,cAAc,CAAA;AAAE47B,kBAAkB,CAACC,eAAe,CAAChuB,YAAY,EAAE,IAAI,EAAE,OAAO,CAAC;;ACvYrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMqK,UAAU,SAASohB,WAAW,CAAC;AAChD;EACA,WAAWhvC,KAAKA,GAAG;AACf,IAAA,OAAO,YAAY,CAAA;AACvB,GAAA;EACA,WAAW4mB,aAAaA,GAAG;IACvB,OAAO;AACHpV,MAAAA,GAAG,EAAW,sBAAsB;AAAE;AACtCwkB,MAAAA,W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SAAS,CAAA;AAAE47B,kBAAkB,CAACC,eAAe,CAAC2Q,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC;;ACxLvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMyB,OAAO,SAASC,eAAe,CAAC;AACjD;EACA,WAAW5jD,KAAKA,GAAG;AACf,IAAA,OAAO,SAAS,CAAA;AACpB,GAAA;EACA,WAAWwb,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYqoC,MAAAA,SAAS,EAAG,IAAI;AAChB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY/rC,MAAAA,QAAQ,EAAG,IAAA;KACd,CAAA;AACL,GAAA;AACA;EACA,WAAWo3B,YAAYA,GAAG;AACtB,IAAA,MAAM/0B,MAAM,GAAG,KAAK,CAAC+0B,YAAY,CAAA;IACjC/0B,MAAM,CAACoE,KAAK,CAAC9f,IAAI,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAA;AACjD,IAAA,OAAO0b,MAAM,CAAA;AACjB,GAAA;AACA;AACA;AACAla,EAAAA,SAASA,CAAC+V,KAAK,EAAEmE,MAAM,EAAE;AACrB,IAAA,KAAK,CAACla,SAAS,CAAC+V,KAAK,EAAEmE,MAAM,CAAC,CAAA;AAC9B;IACA,IAAInE,KAAK,CAAC8tC,WAAW,E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CAAC0M,IAAI,EAAE;AACxC1T,YAAAA,EAAE,EAAU0I,SAAS;AACrB8R,YAAAA,EAAE,EAAU9R,SAAS;YACrBlC,OAAO,EAAKu+C,KAAK,CAAC/9C,SAAS,CAACR,OAAO,CAACxG,EAAE,CAAC,CAACA,EAAE;AAC1Ck/B,YAAAA,MAAM,EAAMx2B,SAAS;AACrB6R,YAAAA,IAAI,EAAQ7R,SAAS;YACrBkG,SAAS,EAAGm2C,KAAK,CAACplC,IAAI,CAAC3f,EAAE,CAAC,CAACA,EAAE;AAC7Bi/B,YAAAA,QAAQ,EAAIv2B,SAAAA;AAChB,WAAC,CAAC,CAAC,CAAA;AACP,SAAA;AACJ,OAAC,CAAC,CAAA;AACF,MAAA,OAAOg9C,IAAI,CAAA;KACd,EAAE,EAAE,CAAC,CAAA;AACV,GAAA;AACJ,CAAA;AACAh6B,aAAa,CAACxW,MAAM,GAAG,eAAe,CAAA;AAAE47B,kBAAkB,CAACC,eAAe,CAACrlB,aAAa,EAAE,IAAI,EAAE,OAAO,CAAC;;ACzJxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMk6B,QAAQ,SAAS3B,oBAAoB,CAAC4B,QAAQ,CAAC,CAAC;AACjE;EACA,WAAWrmD,KAAKA,GAAG;AACf,IAAA,OAAO,UAAU,CAAA;AACrB,GAAA;EACA,WAAWwb,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACY8qC,WAAW,EAAGA,CAAC5H,WAAW,EAAEh/C,SAAS,EAAEkhC,QAAQ,EAAE1gC,KAAK,KAAK,IAAI;AAC/D;AACZ;AACA;AACA;AACYqmD,MAAAA,kBAAkB,EAAG,IAAI;AACzB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,aAAa,EAAG,KAAK;AACrBC,MAAAA,UAAU,EAAG,0BAA0B;AACvCC,MAAAA,oBAAoB,EAAG,IAAA;KAC1B,CAAA;AACL,GAAA;AACAnvC,EAAAA,cAAcA,GAAG;IACb,IAAI,CAACmvC,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,IAAI,IAAI,CAAChmC,MAAM,CAACgmC,oBAAoB,CAAA;AACzF,IAAA,KAAK,CAACnvC,cAAc,CAAC,GAAG7a,SAAS,CAAC,CAAA;AACtC,GAAA;EACAiqD,mBAAmBA,CAACvzC,KAAK,EAAE;AACvB,IAAA,OAAOwzC,WAAW,CAACC,YAAY,CAACzzC,KAAK,CAAC,CAAA;AAC1C,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACAnT,EAAAA,SAASA,CAAC+V,KAAK,EAAEmE,MAAM,EAA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j2C,MAAM,GAAG,YAAY;;ACjDhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY6mD,MAAAA,YAAY,EAAG,IAAA;AACf;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;KACS,CAAA;AACL,GAAA;;EACA,WAAW7d,YAAYA,GAAG;AACtB,IAAA,MAAM/0B,MAAM,GAAG,KAAK,CAAC+0B,YAAY,CAAA;AACjC/0B,IAAAA,MAAM,CAACoE,KAAK,CAAC9f,IAAI,CAAC,kBAAkB,CAAC,CAAA;AACrC,IAAA,OAAO0b,MAAM,CAAA;AACjB,GAAA;AACA;AACAla,EAAAA,SAASA,CAAC+V,KAAK,EAAEmE,MAAM,GAAG,EAAE,EAAE;AAC1B,IAAA,KAAK,CAACla,SAAS,CAAC,GAAGvD,SAAS,CAAC,CAAA;IAC7B,IAAI,CAACsZ,KAAK,GAAGA,KAAK,CAAA;AAClB,IAAA,IAAIA,KAAK,CAACwZ,QAAQ,CAACw9B,QAAQ,EAAE;AACzBC,MAAAA,OAAO,CAACC,IAAI,CAAC,6JAA6J,CAAC,CAAA;AAC3Kl3C,MAAAA,KAAK,CAACwZ,QAAQ,CAACw9B,QAAQ,CAAC3b,QAAQ,GAAG,IAAI,CAAA;AAC3C,KAAA;AACJ,GAAA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;EACA8b,gBAAgBA,CAACjtD,KAAK,EAAE;IACpB,MACI;AAAEwgB,QAAAA,MAAAA;AAAO,OAAC,GAAM,IAAI;AACpB0sC,MAAAA,aAAa,GAAG,IAAI,CAACC,yBAAyB,CAACntD,KAAK,CAAC;AAC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K,EAAE;AACpC,IAAA,KAAK,CAAC0yD,qBAAqB,CAACrL,SAAS,EAAErnD,KAAK,CAAC,CAAA;IAC7C,IAAIA,KAAK,CAACwnD,OAAO,EAAE;MACf,IAAI,CAAC1B,wBAAwB,EAAE,CAAA;AACnC,KAAC,MACI;MACD,IAAI,CAAC8B,wBAAwB,EAAE,CAAA;AACnC,KAAA;AACJ,GAAA;AACA;AACJ,CAAA;;AACA6J,UAAU,CAACj8C,MAAM,GAAG,YAAY,CAAA;AAAE47B,kBAAkB,CAACC,eAAe,CAACogB,UAAU,EAAE,IAAI,EAAE,OAAO,CAAC;;ACnO/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMkB,eAAe,SAASzM,QAAQ,CAAC;AAClD;EACA,OAAOpmD,KAAK,GAAG,iBAAiB,CAAA;EAChC,WAAWwb,YAAYA,GAAG;IACtB,OAAO;AACHkrC,MAAAA,oBAAoB,EAAG,aAAA;KAC1B,CAAA;AACL,GAAA;EACA,WAAWxX,YAAYA,GAAG;IACtB,OAAO;AACH3wB,MAAAA,KAAK,EAAG,CAAC,SAAS,EAAE,wBAAwB,CAAA;KAC/C,CAAA;AACL,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;EACAyzC,sBAAsBA,CAAC3F,WAAW,EAAElnC,UAAU,EAAEu6B,EAAE,EAAEx/C,KAAK,EAAE;IACvD,MAAMyM,EAAE,GAAG,IAAI,CAAA;AACf;AACA,IAAA,IAAIA,EAAE,CAAC0kC,QAAQ,IAAK,CAAClsB,UAAU,CAAC2tC,c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AM,CAAA;AACjB,GAAA;AACJ,CAAC;;AC3HD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM81D,iBAAiB,SAASnC,kBAAkB,CAACoC,mBAA0B,CAAC,CAAC;EAC1F,WAAWz4D,KAAKA,GAAG;AACf,IAAA,OAAO,mBAAmB,CAAA;AAC9B,GAAA;EACA,WAAWkG,IAAIA,GAAG;AACd,IAAA,OAAO,WAAW,CAAA;AACtB,GAAA;AACJ,CAAA;AACAsyD,iBAAiB,CAAC9iD,MAAM,GAAG,mBAAmB;;ACpD9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMgjD,yBAAyB,SAASrC,kBAAkB,CAACsC,2BAAkC,CAAC,CAAC;EAC1G,WAAW34D,KAAKA,GAAG;AACf,IAAA,OAAO,2BAA2B,CAAA;AACtC,GAAA;EACA,WAAWkG,IAAIA,GAAG;AACd,IAAA,OAAO,mBAAmB,CAAA;AAC9B,GAAA;AACJ,CAAA;AACAwyD,yBAAyB,CAAChjD,MAAM,GAAG,2BAA2B;;ACtD9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMkjD,kBAAkB,SAASvC,kBAAkB,CAACwC,oBAA2B,CAAC,CAAC;EAC5F,WAAW74D,KAAKA,GAAG;AACf,IAAA,OAAO,oBAAoB,CAAA;AAC/B,GAAA;EACA,WAAWkG,IAAIA,GAAG;AACd,IAAA,OAAO,YAAY,CAAA;AACvB,GAAA;AACJ,CAAA;AACA0yD,kBAAkB,CAACljD,MAAM,GAAG,oBAAoB;;ACnDhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMojD,SAAS,SAASC,WAAkB,CAAC;EACtD,WAAW/4D,KAAKA,GAAG;AACf,IAAA,OAAO,WAAW,CAAA;AACtB,GAAA;EACA,WAAW4mB,aAAaA,GAAG;IACvB,OAAO;AACHoyC,MAAAA,SAAS,EAAG,CAACJ,kBAAkB,EAAEJ,iBAAiB,EAAEE,yBAAyB,CAAA;KAChF,CAAA;AACL,GAAA;AACJ,CAAA;AACAI,SAAS,CAACpjD,MAAM,GAAG,WAAW,CAAA;AAAE47B,kBAAkB,CAACC,eAAe,CAACunB,SAAS,EAAE,KAAK,EAAE,OAAO,CAAC;;ACpG7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMG,qBAAqB,SAASC,uBAAiC,CAAC,EAAA;AACrFD,qBAAqB,CAACvjD,MAAM,GAAG,uBAAuB;;ACQte,MAAMyjD,YAAY,SAAS3pD,iBAAiB,CAACqzB,MAAM,CAACu2B,KAAK,CAAC,CAACt2B,KAAK,CAC3Eu2B,yBAAyB,EACzBC,oBAAoB,EACpBC,kBAAkB,EAClBC,yBAAyB,EACzBC,kBACJ,CAAC,CAAC;AACE;EACA,OAAOz5D,KAAK,GAAG,cAAcsR,QAAQA,GAAG;IAClooD,MAAAA,QAAQ,EAAG,IAAA;KACd,CAAA;AACL,GAAA;EACA,WAAW9yC,aAAaA,GAAG;IACvB,OAAO;AACH7W,MAAAA,8BAA8B,EAAMC,yBAAyB;AAC7D2pD,MAAAA,2BAA2B,EAASC,sBAAsB;AAC1DtyD,MAAAA,iCAAiC,EAAGuyD,4BAA4B;AAChE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,cAAc,EAAGl3B,SAAS;AAC1B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYm3B,MAAAA,oBAAoB,EAAGl2C,eAAe;AACtC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYm2C,MAAAA,kBAAkB,EAAG75B,aAAa;AAClC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACY85B,MAAAA,oBAAoB,EAAGxwC,eAAe;AACtC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYywC,MAAAA,kBAAkB,EAAG/6B,aAAa;AAClC;AACZ;AACA;AACA;AACA;AACA;AACYg7B,MAAAA,cAAc,EAAGxvB,SAAS;AAC1B;AACZ;AACA;AACA;AACA;AACA;AACYyvB,MAAAA,oBAAoB,EAAGn6B,eAAe;AACtC;AACZ;AACA;AACA;AACA;AACA;AACYo6B,MAAAA,kBAAkB,EAAGh6B,aAAa;AAClC;AACZ;AACA;AACA;AACA;AACA;AACYi6B,MAAAA,oBAAoB,EAAG3zC,eAAe;AACtC;AACZ;AACA;AACA;AACA;AACA;AACY4zC,MAAAA,yBAAyB,EAAGl7B,oBAAoB;AAChD;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACYm7B,MAAAA,SAAS,EAAG,IAAI;AAChB;AACA;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,UAAU,EAAG,IAAI;AACjB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,gBAAgB,EAAG,IAAI;AACvB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,aAAa,EAAG,IAAI;AACpB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,eAAe,EAAG,IAAI;AACtB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,aAAa,EAAG,IAAI;AACpB;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,cAAc,EAAG;AACb94C,QAAAA,UAAU,EAAGwe,QAAQ;AACrBuK,QAAAA,OAAO,EAAM,YAAA;OAChB;AACD;AACZ;AACA;AACA;AACA;AACA;AACYV,MAAAA,wBAAwB,EAAG,KAAK;AAChC0wB,MAAAA,4BAA4B,EAAG,+MAA+M;AAC9O;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,gBAAgB,EAAG,IAAI;MACvBz0C,UAAU,EAAa,EAAE;MACzBkB,eAAe,EAAQ,EAAE;MACzBK,aAAa,EAAU,EAAE;MACzBrL,eAAe,EAAQ,EAAE;MACzBhF,oBAAoB,EAAG,EAAE;AACzBwjD,MAAAA,QAAQ,EAAGC,oBAAAA;KACd,CAAA;AACL,GAAA;EACA,WAAW1/C,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACYkzB,MAAAA,KAAK,EAAG,IAAI;AACZ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACYjS,MAAAA,SAAS,EAAG,IAAI;AAChB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACYtM,MAAAA,WAAW,EAAG,IAAI;AAClB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACYlT,MAAAA,YAAY,EAAG,IAAI;AACnB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACY8kC,MAAAA,UAAU,EAAG,IAAI;AACjB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACYhrC,MAAAA,SAAS,EAAG,IAAI;AAChB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYokD,MAAAA,cAAc,EAAG,IAAI;AACrBC,MAAAA,cAAc,EAAG,IAAI;AACrB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,wBAAwB,EAAG,KAAA;KAC9B,CAAA;AACL,GAAA;AACA;EACAp7D,SAASA,CAAC,GAAGu/B,IAAI,EAAE;IACf,MAAMrlB,MAAM,GAAGqlB,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;AAC5B;AACAA,IAAAA,IAAI,CAAC,CAAC,CAAC,GAAGrlB,MAAM,CAAA;IAChB,IAAI,WAAW,IAAIA,MAAM,EAAE;AACvBA,MAAAA,MAAM,CAACsgD,UAAU,GAAKtgD,MAAM,CAACqgD,SAAS,CAAA;MACtC,OAAOrgD,MAAM,CAACqgD,SAAS,CAAA;AAC3B,KAAA;IACA,IAAI,WAAW,IAAIrgD,MAAM,EAAE;AACvBA,MAAAA,MAAM,CAACoM,UAAU,GAAGpM,MAAM,CAACwJ,SAAS,CAAA;MACpC,OAAOxJ,MAAM,CAACwJ,SAAS,CAAA;AAC3B,KAAA;AACA;AACA;AACA;AACA;IACAxJ,MAAM,CAACmhD,eAAe,GAAGnhD,MAAM,CAAC2/C,cAAc,IAAI3/C,MAAM,CAACmhD,eAAe,IAAI,IAAI,CAACC,uBAAuB,EAAE,CAACzB,cAAc,IAAI,IAAI,CAAC0B,sBAAsB,CAAA;IACxJrhD,MAAM,CAACshD,eAAe,GAAGthD,MAAM,CAACggD,cAAc,IAAIhgD,MAAM,CAACshD,eAAe,IAAI,IAAI,CAACF,uBAAuB,EAAE,CAACpB,cAAc,IAAI,IAAI,CAACuB,sBAAsB,CAAA;AACxJ,IAAA,KAAK,CAACz7D,SAAS,CAAC,GAAGu/B,IAAI,CAAC,CAAA;AAC5B,GAAA;AACA;AACA;EACAm8B,WAAWA,CAACnpD,KAAK,EAAE;IACf,IAAI,IAAI,CAAC4oD,cAAc,EAAE;AACrB5oD,MAAAA,KAAK,CAAC4oD,cAAc,GAAG,IAAI,CAACA,cAAc,CAAA;AAC9C,KAAA;IACA5oD,KAAK,CAAC0D,GAAG,CAAC;MACN3V,IAAI,EAAMiS,KAAK,CAACopD,MAAM;AACtB/nC,MAAAA,MAAM,EAAI,kBAAkB;AAC5Bjc,MAAAA,OAAO,EAAG,IAAA;AACd,KAAC,CAAC,CAAA;AACF,IAAA,KAAK,CAAC+jD,WAAW,CAACnpD,KAAK,CAAC,CAAA;AAC5B,GAAA;AACA;EACAqpD,WAAWA,CAACrpD,KAAK,EAAE;IACfA,KAAK,IAAI,IAAI,CAACohB,eAAe,CAACphB,KAAK,CAACopD,MAAM,CAAC,CAAA;AAC3C,IAAA,KAAK,CAACC,WAAW,CAACrpD,KAAK,CAAC,CAAA;AAC5B,GAAA;EACAspD,gBAAgBA,CAAC57D,KAAK,EAAE;AACpB,IAAA,KAAK,CAAC47D,gBAAgB,CAAC57D,KAAK,CAAC,CAAA;AAC7B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,IAAA,OAAO,IAAI,CAACuiB,OAAO,CAAC,QAAQ,EAAE;MAAEjQ,KAAK,EAAGtS,KAAK,CAACghB,MAAM;AAAE,MAAA,GAAGhhB,KAAK;AAAEghB,MAAAA,MAAM,EAAG,IAAA;AAAK,KAAC,CAAC,CAAA;AACpF,GAAA;AACA;EACA,IAAIs6C,sBAAsBA,GAAG;AACzB,IAAA,OAAO54B,SAAS,CAAA;AACpB,GAAA;EACA,IAAI84B,sBAAsBA,GAAG;AACzB,IAAA,OAAO/wB,SAAS,CAAA;AACpB,GAAA;EACA,IAAIhnB,SAASA,CAACnR,KAAK,EAAE;IACjB,IAAI,CAAC+T,UAAU,GAAG/T,KAAK,CAAA;AAC3B,GAAA;EACA,IAAImR,SAASA,GAAG;IACZ,OAAO,IAAI,CAAC4C,UAAU,CAAA;AAC1B,GAAA;EACA,IAAIu0C,cAAcA,GAAG;IACjB,OAAO,IAAI,CAACiB,eAAe,CAAA;AAC/B,GAAA;EACA,IAAIjB,cAAcA,CAACtoD,KAAK,EAAE;IACtB,MAAM7F,EAAE,GAAG,IAAI,CAAA;AACfA,IAAAA,EAAE,CAACkvD,WAAW,CAAClvD,EAAE,CAACovD,eAAe,CAAC,CAAA;IAClCpvD,EAAE,CAACovD,eAAe,GAAG9nD,KAAK,CAAC+nD,QAAQ,CAACxpD,KAAK,EAAEyB,KAAK,CAAC,CAAA;AACjD,IAAA,IAAI,CAACtH,EAAE,CAACovD,eAAe,CAAChxB,OAAO,EAAE;AAC7Bp+B,MAAAA,EAAE,CAACovD,eAAe,CAAChxB,OAAO,GAAG,YAAY,CAAA;AAC7C,KAAA;AACAp+B,IAAAA,EAAE,CAACgvD,WAAW,CAAChvD,EAAE,CAACovD,eAAe,CAAC,CAAA;AACtC,GAAA;EACA,MAAM3yB,cAAcA,GAAG;AACnB,IAAA,OAAO,IAAI,CAACC,uBAAuB,CAAC,MAAM;AACtC,MAAA,IAAI,CAACC,WAAW,CAAC,GAAG5sC,SAAS,CAAC,CAAA;AAClC,KAAC,CAAC,CAAA;AACN,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIu/D,EAAAA,MAAMA,GAAG;IACL,OAAO;AACHxB,MAAAA,UAAU,EAAS,IAAI,CAACl0C,UAAU,CAAC01C,MAAM,EAAE;AAC3CtB,MAAAA,aAAa,EAAM,IAAI,CAAC7yC,aAAa,CAACm0C,MAAM,EAAE;AAC9CvB,MAAAA,gBAAgB,EAAG,IAAI,CAACj+C,eAAe,CAACw/C,MAAM,EAAE;AAChDrB,MAAAA,eAAe,EAAI,IAAI,CAACnzC,eAAe,CAACw0C,MAAM,EAAC;KAClD,CAAA;AACL,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIC,IAAIA,GAAG;IACP,OAAO,KAAK,CAACA,IAAI,CAAA;AACrB,GAAA;EACA,IAAIA,IAAIA,CAACA,IAAI,EAAE;AACX,IAAA,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;AAC1BA,MAAAA,IAAI,GAAG36C,YAAY,CAAC8Z,aAAa,CAAC6gC,IAAI,CAAC,CAAA;AAC3C,KAAA;AACA,IAAA,IAAI,CAACC,cAAc,CAACD,IAAI,CAAC,CAAA;AAC7B,GAAA;AACA;AACA;EACA,IAAIxtB,KAAKA,GAAG;AACR,IAAA,OAAO,IAAI,CAAC/qB,SAAS,CAAC9L,UAAU,CAAA;AACpC,GAAA;EACAukD,WAAWA,CAA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AAY,GAAG,CAAC,CAAA;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,SAAS,SAASC,YAAY,CAACj5C,KAAK,CACrDk5C,eAAe,EACfrQ,QAAQ,EACRc,YAAY,EACZe,WAAW,EACX0C,WAAW,EACXrB,UAAU,EACViD,uBAAuB,EACvBmK,wBAAe,EACfhK,cAAc,EACdiK,oBAAoB,EACpBC,yBAAyB,EACzBC,yBAAyB,EACzBC,ar8E,KAAK,GAAG,WAAW,CAAA;AAC1B;EACA,WAAWkG,IAAIA,GAAG;AACd,IAAA,OAAO,WAAW,CAAA;AACtB,GAAA;EACA,WAAW0gB,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACYxf,MAAAA,OAAO,EAAG,IAAI;AACd;AACZ;AACA;AACA;AACA;AACYisB,MAAAA,uBAAuB,EAAG,IAAI;AAC9B;AACZ;AACA;AACA;AACA;AACY0H,MAAAA,wBAAwB,EAAG,IAAI;AAC/B;AACZ;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACYuhD,MAAAA,wBAAwB,EAAG,IAAI;AAC/B;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,6BAA6B,EAAG,KAAK;AACrC;AACAxlE,MAAAA,SAAS,EAAM,IAAI;AACnB0lB,MAAAA,SAAS,EAAM,IAAI;AACnBiS,MAAAA,KAAK,EAAU,IAAI;AACnBzxB,MAAAA,YAAY,EAAG,IAAI;AACnBkT,MAAAA,WAAW,EAAI,IAAI;AACnBwpD,MAAAA,QAAQ,EAAkB,cAAc;AACxC6C,MAAAA,iBAAiB,EAAS,IAAI;AAC9BC,MAAAA,WAAW,EAAe,MAAM;AAChCC,MAAAA,qBAAqB,EAAK,IAAI;AAC9B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY/hD,MAAAA,UAAU,EAAgB,IAAI;AAC9B6/C,MAAAA,UAAU,EAAgB,IAAI;AAC9B5/D,MAAAA,SAAS,EAAiB,EAAE;AAC5B+hE,MAAAA,kBAAkB,EAAQ,MAAM;AAChCC,MAAAA,eAAe,EAAW,MAAM;AAChCC,MAAAA,uBAAuB,EAAG,oBAAoB;AAC9CrtB,MAAAA,IAAI,EAAsB,YAAY;AACtC;AACAstB,MAAAA,WAAW,EAAG,qBAAqB;AACnCC,MAAAA,QAAQ,EAAG,UAAU;AACrB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYtC,MAAAA,YAAY,EAAG,IAAI;AACnB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACYtoC,eAAe,EAAG,EAAE;AACpB;AACZ;AACA;AACA;AACA;AACA;AACYp1B,MAAAA,iBAAiB,EAAG,IAAI;AACxB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY0rC,MAAAA,kBAAkB,EAAG,IAAI;AACzB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYyF,MAAAA,oBAAoB,EAAG,IAAA;KAC1B,CAAA;AACL,GAAA;AACA,EAAA,OAAO1yC,YAAY,GAAG;AAClB;AACR;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CAAA;AACA;AACA47E,SAAS,CAAC3kE,SAAS,EAAE,CAAA;AACrBqiC,aAAa,CAAC0mC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;AAC1CpE,SAAS,CAACpmE,MAAM,GAAG,WAAW;;ACzzB9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM7E,KAAK,SAASirE,SAAS,CAAC;AACzC;AACJ;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;EACI,WAAW97E,KAAKA,GAAG;AACf,IAAA,OAAO,OAAO,CAAA;AAClB,GAAA;AACA;EACA,WAAWkG,IAAIA,GAAG;AACd,IAAA,OAAO,OAAO,CAAA;AAClB,GAAA;AACJ,CAAA;AACA;AACA2K,KAAK,CAACsG,SAAS,EAAE,CAAA;AACjBtG,KAAK,CAAC6E,MAAM,GAAG,OAAO;;;;"}