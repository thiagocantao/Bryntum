{"version":3,"file":"schedulerpro.module.thin.js","sources":["../../../SchedulerPro/lib/SchedulerPro/column/ResourceCalendarColumn.js","../../../SchedulerPro/lib/SchedulerPro/model/EventModel.js","../../../SchedulerPro/lib/SchedulerPro/data/EventStore.js","../../../SchedulerPro/lib/SchedulerPro/model/ResourceUtilizationModel.js","../../../SchedulerPro/lib/SchedulerPro/data/ResourceUtilizationStore.js","../../../SchedulerPro/lib/SchedulerPro/eventlayout/ProHorizontalLayout.js","../../../SchedulerPro/lib/SchedulerPro/eventlayout/ProHorizontalLayoutStack.js","../../../SchedulerPro/lib/SchedulerPro/eventlayout/ProHorizontalLayoutPack.js","../../../SchedulerPro/lib/SchedulerPro/feature/CalendarHighlight.js","../../../SchedulerPro/lib/SchedulerPro/feature/DependencyEdit.js","../../../SchedulerPro/lib/SchedulerPro/feature/EventBuffer.js","../../../SchedulerPro/lib/SchedulerPro/feature/EventSegmentDrag.js","../../../SchedulerPro/lib/SchedulerPro/feature/NestedEvents.js","../../../SchedulerPro/lib/SchedulerPro/feature/ResourceNonWorkingTime.js","../../../SchedulerPro/lib/SchedulerPro/feature/TimeSpanHighlight.js","../../../SchedulerPro/lib/SchedulerPro/model/changelog/ChangeLogPropertyUpdate.js","../../../SchedulerPro/lib/SchedulerPro/model/ProjectModel.js","../../../SchedulerPro/lib/SchedulerPro/view/mixin/SchedulerProEventRendering.js","../../../SchedulerPro/lib/SchedulerPro/view/ResourceHistogram.js","../../../SchedulerPro/lib/SchedulerPro/view/ResourceUtilization.js","../../../SchedulerPro/lib/SchedulerPro/view/orientation/ProHorizontalRendering.js","../../../SchedulerPro/lib/SchedulerPro/view/orientation/ProVerticalRendering.js","../../../SchedulerPro/lib/SchedulerPro/view/SchedulerProBase.js","../../../SchedulerPro/lib/SchedulerPro/view/SchedulerPro.js","../../../SchedulerPro/lib/SchedulerPro/widget/Timeline.js","../../../SchedulerPro/lib/SchedulerPro/widget/VersionGrid.js","../../../SchedulerPro/bundle/entry.thin.js"],"sourcesContent":["import Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport AttachToProjectMixin from '../../Scheduler/data/mixin/AttachToProjectMixin.js';\nimport CalendarField from '../widget/CalendarField.js';\n\n/**\n * @module SchedulerPro/column/ResourceCalendarColumn\n */\n\n/**\n * A column that displays (and allows user to update) the current {@link SchedulerPro.model.CalendarModel calendar} of\n * the resource.\n *\n * Default editor is a {@link SchedulerPro.widget.CalendarField CalendarField}.\n *\n * {@inlineexample SchedulerPro/column/ResourceCalendarColumn.js}\n * @mixes Scheduler/data/mixin/AttachToProjectMixin\n * @extends Grid/column/Column\n * @classType resourceCalendar\n * @column\n */\nexport default class ResourceCalendarColumn extends Column.mixin(AttachToProjectMixin) {\n\n    //region Config\n\n    static get $name() {\n        return 'ResourceCalendarColumn';\n    }\n\n    static get type() {\n        return 'resourceCalendar';\n    }\n\n    static get defaults() {\n        return {\n            field  : 'calendar',\n            text   : 'Calendar',\n            editor : {\n                type         : CalendarField.type,\n                clearable    : true,\n                allowInvalid : false\n            }\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    attachToProject(project) {\n        if (project) {\n            // Store default calendar to filter out this value\n            this.defaultCalendar = project.defaultCalendar;\n\n            this.editor.store = project.calendarManagerStore;\n        }\n    }\n\n    attachToResourceStore(resourceStore) {\n        super.attachToResourceStore(resourceStore);\n\n        if (resourceStore) {\n            resourceStore.ion({\n                name    : 'resourceStore',\n                update  : 'onResourceUpdate',\n                thisObj : this\n            });\n        }\n    }\n\n    //endregion\n\n    //region Events\n\n    // Event rendering does not update cells when engine updates a resource, instead we do a minimal update here\n    onResourceUpdate({ record, changes }) {\n        const change = changes[this.field];\n\n        if (change) {\n            // Ignore \"normalization\" of id -> instance, won't affect our appearance\n            if (typeof change.oldValue === 'string' && change.value?.id === change.oldValue) {\n                return;\n            }\n            this.refreshCell(record);\n        }\n    }\n\n    //endregion\n\n    //region Render\n\n    renderer({ value }) {\n        if (value?.id) {\n            const record = this.editor.store.getById(value.id);\n            return record?.getValue(this.editor.displayField) || '';\n        }\n        else {\n            return '';\n        }\n    }\n\n    //endregion\n\n}\n\nColumnStore.registerColumnType(ResourceCalendarColumn);\n","import PartOfProject from '../data/mixin/PartOfProject.js';\nimport PercentDoneMixin from './mixin/PercentDoneMixin.js';\nimport { SchedulerProEvent } from '../../Engine/quark/model/scheduler_pro/SchedulerProEvent.js';\nimport Duration from '../../Core/data/Duration.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport EventModelMixin from '../../Scheduler/model/mixin/EventModelMixin.js';\nimport TimeSpan from '../../Scheduler/model/TimeSpan.js';\nimport RecurringTimeSpan from '../../Scheduler/model/mixin/RecurringTimeSpan.js';\nimport EventSegmentModel from './EventSegmentModel.js';\n\n/**\n * @module SchedulerPro/model/EventModel\n */\n\n/**\n * This class represent a single event in your schedule, usually added to a {@link SchedulerPro.data.EventStore}.\n *\n * It is a subclass of the {@link Scheduler.model.TimeSpan}, which is in turn subclass of {@link Core.data.Model}.\n * Please refer to documentation of that class to become familiar with the base interface of the event.\n *\n * ## Async date calculations\n *\n * A record created from an `EventModel` is normally part of an `EventStore`, which in turn is part of a project. When\n * dates or the duration of an event is changed, the project performs async calculations to normalize the other fields.\n * For example if `duration` is change, it will calculate `endDate`.\n *\n * As a result of this being an async operation, the values of other fields are not guaranteed to be up to date\n * immediately after a change. To ensure data is up to date, await the calculations to finish.\n *\n * For example, `endDate` is not up to date after this operation:\n *\n * ```javascript\n * eventRecord.duration = 5;\n * // endDate not yet calculated\n * ```\n *\n * But if calculations are awaited it is up to date:\n *\n * ```javascript\n * eventRecord.duration = 5;\n * await eventRecord.project.commitAsync();\n * // endDate is calculated\n * ```\n *\n * As an alternative, you can also use `setAsync()` to trigger calculations directly after the change:\n *\n * ```javascript\n * await eventRecord.setAsync({ duration : 5});\n * // endDate is calculated\n * ```\n *\n * ## Subclassing the Event model class\n * The Event model has a few predefined fields as seen below. If you want to add new fields or change the options for\n * the existing fields, you can do that by subclassing this class (see example below).\n *\n * ```javascript\n * class MyEvent extends EventModel {\n *\n *     static get fields() {\n *         return [\n *            // Add new field\n *            { name: 'myField', type : 'number', defaultValue : 0 }\n *         ];\n *     },\n *\n *     myCheckMethod() {\n *         return this.myField > 0\n *     },\n *\n *     ...\n * });\n * ```\n *\n * If you in your data want to use other names for the startDate, endDate, resourceId and name fields you can configure\n * them as seen below:\n * ```javascript\n * class MyEvent extends EventModel {\n *\n *     static get fields() {\n *         return [\n *            { name: 'startDate', dataSource 'taskStart' },\n *            { name: 'endDate', dataSource 'taskEnd', format: 'YYYY-MM-DD' },\n *            { name: 'resourceId', dataSource 'userId' },\n *            { name: 'name', dataSource 'taskTitle' },\n *         ];\n *     },\n *     ...\n * });\n * ```\n *\n * Please refer to {@link Core.data.Model} for additional details.\n *\n * @extends Scheduler/model/TimeSpan\n * @mixes Scheduler/model/mixin/RecurringTimeSpan\n * @mixes Scheduler/model/mixin/EventModelMixin\n * @mixes SchedulerPro/model/mixin/PercentDoneMixin\n * @mixes SchedulerPro/data/mixin/PartOfProject\n *\n * @typings Scheduler.model.EventModel -> Scheduler.model.SchedulerEventModel\n */\nexport default class EventModel extends SchedulerProEvent.derive(TimeSpan).mixin(\n    RecurringTimeSpan,\n    PartOfProject,\n    EventModelMixin,\n    PercentDoneMixin\n) {\n\n    /**\n     * Returns the event store this event is part of.\n     *\n     * @member {SchedulerPro.data.EventStore} eventStore\n     * @readonly\n     * @typings Scheduler.model.TimeSpan:eventStore -> {Scheduler.data.EventStore||SchedulerPro.data.EventStore}\n     */\n\n    /**\n     * If given resource is assigned to this event, returns a {@link SchedulerPro.model.AssignmentModel} record.\n     * Otherwise returns `null`\n     *\n     * @method getAssignmentFor\n     * @param {SchedulerPro.model.ResourceModel} resource The instance of {@link SchedulerPro.model.ResourceModel}\n     *\n     * @returns {SchedulerPro.model.AssignmentModel|null}\n     */\n\n    /**\n     * This method assigns a resource to this event.\n     *\n     * Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method assign\n     * @param {SchedulerPro.model.ResourceModel} resource The instance of {@link SchedulerPro.model.ResourceModel}\n     * @param {Number} [units=100] The `units` field of the new assignment\n     *\n     * @async\n     * @propagating\n     */\n\n    /**\n     * This method unassigns a resource from this event.\n     *\n     * Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method unassign\n     * @param {SchedulerPro.model.ResourceModel} resource The instance of {@link SchedulerPro.model.ResourceModel}\n     *\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Sets the calendar of the event. Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method setCalendar\n     * @param {SchedulerPro.model.CalendarModel} calendar The new calendar. Provide `null` to fall back to the project calendar.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Returns the event calendar.\n     *\n     * @method getCalendar\n     * @returns {SchedulerPro.model.CalendarModel} The event calendar.\n     */\n\n    /**\n     * Either activates or deactivates the task depending on the passed value.\n     * Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method setInactive\n     * @param {Boolean} inactive `true` to deactivate the task, `false` to activate it.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Sets the start date of the event. Will cause the schedule to be updated - returns a `Promise`\n     *\n     * Note, that the actually set start date may be adjusted, according to the calendar, by skipping the non-working time forward.\n     *\n     * @method setStartDate\n     * @param {Date} date The new start date.\n     * @param {Boolean} [keepDuration=true] Whether to keep the duration (and update the end date), while changing the start date, or vice-versa.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Sets the end date of the event. Will cause the schedule to be updated - returns a `Promise`\n     *\n     * Note, that the actually set end date may be adjusted, according to the calendar, by skipping the non-working time backward.\n     *\n     * @method setEndDate\n     * @param {Date} date The new end date.\n     * @param {Boolean} [keepDuration=false] Whether to keep the duration (and update the start date), while changing the end date, or vice-versa.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Updates the duration (and optionally unit) of the event. Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method setDuration\n     * @param {Number} duration New duration value\n     * @param {String} [unit] New duration unit\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Sets the constraint type and (optionally) constraining date to the event.\n     *\n     * @method setConstraint\n     * @param {'finishnoearlierthan'|'finishnolaterthan'|'mustfinishon'|'muststarton'|'startnoearlierthan'|'startnolaterthan'|null} constraintType\n     * Constraint type, please refer to the {@link #field-constraintType} for the valid\n     * values.\n     * @param {Date} [constraintDate] Constraint date.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Updates the {@link #field-effort} (and optionally {@link #field-effortUnit unit}) of the event.\n     * Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method setEffort\n     * @param {Number} effort New effort value\n     * @param {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} [unit] New effort\n     * unit\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Sets {@link #field-segments} field value.\n     *\n     * @method\n     * @name setSegments\n     * @param {SchedulerPro.model.EventSegmentModel[]} segments Array of segments or null to make the event not segmented.\n     * @returns {Promise}\n     * @propagating\n     */\n\n    /**\n     * Splits the event into segments.\n     * @method splitToSegments\n     * @param {Date} from The date to split this event at.\n     * @param {Number} [lag=1] Split duration.\n     * @param {String} [lagUnit] Split duration unit.\n     * @returns {Promise}\n     * @propagating\n     */\n\n    /**\n     * Merges the event segments.\n     * The method merges two provided event segments (and all the segment between them if any).\n     * @method mergeSegments\n     * @param {SchedulerPro.model.EventSegmentModel} [segment1] First segment to merge.\n     * @param {SchedulerPro.model.EventSegmentModel} [segment2] Second segment to merge.\n     * @returns {Promise}\n     * @propagating\n     */\n\n    /**\n     * Sets the event {@link #field-ignoreResourceCalendar} field value and triggers rescheduling.\n     *\n     * @method setIgnoreResourceCalendar\n     * @param {Boolean} ignore Provide `true` to ignore the calendars of the assigned resources\n     * when scheduling the event. If `false` the event performs only when\n     * its own {@link #field-calendar} and some of the assigned\n     * resource calendars allow that.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Returns the event {@link #field-ignoreResourceCalendar} field value.\n     *\n     * @method getIgnoreResourceCalendar\n     * @returns {Boolean} The event {@link #field-ignoreResourceCalendar} field value.\n     */\n\n    /**\n     * The event first segment or null if the event is not segmented.\n     * @member {SchedulerPro.model.EventSegmentModel} firstSegment\n     */\n\n    /**\n     * The event last segment or null if the event is not segmented.\n     * @member {SchedulerPro.model.EventSegmentModel} lastSegment\n     */\n\n    //region Config\n\n    static get $name() {\n        return 'EventModel';\n    }\n\n    static isProEventModel = true;\n\n    static get fields() {\n        return [\n            /**\n             * This field is automatically set to `true` when the event is \"unscheduled\" - user has provided an empty\n             * string in one of the UI editors for start date, end date or duration. Such event is not rendered,\n             * and does not affect the schedule of its successors.\n             *\n             * To schedule the event back, enter one of the missing values, so that there's enough information\n             * to calculate start date, end date and duration.\n             *\n             * Note, that setting this field manually does nothing. This field should be persisted, but not updated\n             * manually.\n             *\n             * @field {Boolean} unscheduled\n              * @readonly\n              * @category Scheduling\n             */\n\n            /**\n             * Segments of the event that appear when the event gets {@link #function-splitToSegments}.\n             * @field {SchedulerPro.model.EventSegmentModel[]} segments\n             * @category Scheduling\n             */\n\n            /**\n             * The current status of a task, expressed as the percentage completed (integer from 0 to 100)\n             *\n             * UI fields representing this data field are disabled for summary events.\n             * See {@link #function-isEditable} for details.\n             *\n             * @field {Number} percentDone\n             * @category Scheduling\n             */\n\n            /**\n             * The start date of a time span (or Event / Task).\n             *\n             * Uses {@link Core/helper/DateHelper#property-defaultFormat-static DateHelper.defaultFormat} to convert a\n             * supplied string to a Date. To specify another format, either change that setting or subclass TimeSpan and\n             * change the dateFormat for this field.\n             *\n             * UI fields representing this data field are disabled for summary events\n             * except the {@link #field-manuallyScheduled manually scheduled} events.\n             * See {@link #function-isEditable} for details.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * @field {Date} startDate\n             * @accepts {String|Date}\n             * @category Scheduling\n             */\n\n            /**\n             * The end date of a time span (or Event / Task).\n             *\n             * Uses {@link Core/helper/DateHelper#property-defaultFormat-static DateHelper.defaultFormat} to convert a\n             * supplied string to a Date. To specify another format, either change that setting or subclass TimeSpan and\n             * change the dateFormat for this field.\n             *\n             * UI fields representing this data field are disabled for summary events\n             * except the {@link #field-manuallyScheduled manually scheduled} events.\n             * See {@link #function-isEditable} for details.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * @field {Date} endDate\n             * @accepts {String|Date}\n             * @category Scheduling\n             */\n\n            /**\n             * The numeric part of the timespan's duration (the number of units).\n             *\n             * UI fields representing this data field are disabled for summary events\n             * except the {@link #field-manuallyScheduled manually scheduled} events.\n             * See {@link #function-isEditable} for details.\n             *\n             * @field {Number} duration\n             * @category Scheduling\n             */\n\n            /**\n             * Field storing the event constraint alias or NULL if not constraint set.\n             * Valid values are:\n             * - \"finishnoearlierthan\"\n             * - \"finishnolaterthan\"\n             * - \"mustfinishon\"\n             * - \"muststarton\"\n             * - \"startnoearlierthan\"\n             * - \"startnolaterthan\"\n             *\n             * @field {'finishnoearlierthan'|'finishnolaterthan'|'mustfinishon'|'muststarton'|'startnoearlierthan'|'startnolaterthan'|null} constraintType\n             * @category Scheduling\n             */\n\n            /**\n             * Field defining the constraint boundary date, if applicable.\n             * @field {Date} constraintDate\n             * @category Scheduling\n             */\n\n            /**\n             * When set to `true`, the `startDate` of the event will not be changed by any of its incoming dependencies\n             * or constraints.\n             *\n             * @field {Boolean} manuallyScheduled\n             * @category Scheduling\n             */\n\n            /**\n             * When set to `true` the event becomes inactive and stops taking part in the project scheduling (doesn't\n             * affect linked events and affect its assigned resources allocation).\n             *\n             * @field {Boolean} inactive\n             * @category Scheduling\n             */\n\n            /**\n             * When set to `true` the calendars of the assigned resources\n             * are not taken into account when scheduling the event.\n             *\n             * By default the field value is `false` resulting in that the event performs only when\n             * its own {@link #field-calendar} and some of the assigned\n             * resource calendars allow that.\n\n             * @field {Boolean} ignoreResourceCalendar\n             * @category Scheduling\n             */\n\n            /**\n             * A calculated field storing the _early start date_ of the event.\n             * The _early start date_ is the earliest possible date the event can start.\n             * This value is calculated based on the earliest dates of the event predecessors and the event own constraints.\n             * If the event has no predecessors nor other constraints, its early start date matches the project start date.\n             *\n             * UI fields representing this data field are naturally disabled since the field is readonly.\n             * See {@link #function-isEditable} for details.\n             *\n             * @field {Date} earlyStartDate\n             * @calculated\n             * @readonly\n             * @category Scheduling\n             */\n\n            /**\n             * A calculated field storing the _early end date_ of the event.\n             * The _early end date_ is the earliest possible date the event can finish.\n             * This value is calculated based on the earliest dates of the event predecessors and the event own constraints.\n             * If the event has no predecessors nor other constraints, its early end date matches the project start date plus the event duration.\n             *\n             * UI fields representing this data field are naturally disabled since the field is readonly.\n             * See {@link #function-isEditable} for details.\n             *\n             * @field {Date} earlyEndDate\n             * @calculated\n             * @readonly\n             * @category Scheduling\n             */\n\n            /**\n             * The calendar, assigned to the entity. Allows you to set the time when entity can perform the work.\n             *\n             * All entities are by default assigned to the project calendar, provided as the {@link SchedulerPro.model.ProjectModel#field-calendar} option.\n             *\n             * @field {SchedulerPro.model.CalendarModel} calendar\n             * @category Scheduling\n             */\n\n            /**\n             * The numeric part of the event effort (the number of units).\n             *\n             * @field {Number} effort\n             * @category Scheduling\n             */\n\n            /**\n             * The unit part of the event effort, defaults to \"h\" (hours). Valid values are:\n             *\n             * - \"millisecond\" - Milliseconds\n             * - \"second\" - Seconds\n             * - \"minute\" - Minutes\n             * - \"hour\" - Hours\n             * - \"day\" - Days\n             * - \"week\" - Weeks\n             * - \"month\" - Months\n             * - \"quarter\" - Quarters\n             * - \"year\"- Years\n             *\n             * This field is readonly after creation, to change it use the {@link #function-setEffort} call.\n             * @field {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} effortUnit\n             * @default \"hour\"\n             * @category Scheduling\n             * @readonly\n             */\n\n            /**\n             * This field defines the event scheduling mode. Based on this field some fields of the event\n             * will be \"fixed\" (should be provided by the user) and some - computed.\n             *\n             * Possible values are:\n             *\n             * - `Normal` is the default (and backward compatible) mode. It means the event will be scheduled based on\n             * information about its start/end dates, event own calendar (project calendar if there's no one) and\n             * calendars of the assigned resources.\n             *\n             * - `FixedDuration` mode means, that event has fixed start and end dates, but its effort will be computed\n             * dynamically, based on the assigned resources information. When duration of such event increases,\n             * its effort is increased too. The mode tends to preserve user provided duration so changing effort\n             * results adjusting assignment units and vise-versa assignment changes adjusts effort.\n             *\n             * @field {'Normal'|'FixedDuration'} schedulingMode\n             * @category Scheduling\n             */\n\n            /**\n             * This boolean flag defines what part the data should be updated in the `FixedDuration` scheduling\n             * mode.\n             * If it is `true`, then {@link #field-effort} is kept intact when new duration is provided and\n             * assignment {@link SchedulerPro.model.AssignmentModel#field-units} is updated.\n             * If it is `false`, then assignment {@link SchedulerPro.model.AssignmentModel#field-units} is kept\n             * intact when new duration is provided and {@link #field-effort} is updated.\n             *\n             * @field {Boolean} effortDriven\n             * @default false\n             * @category Scheduling\n             */\n\n            /**\n             * The event effective calendar. Returns the\n             * {@link SchedulerPro.model.ProjectModel#field-calendar project calendar} if the event has no own\n             * {@link #field-calendar} provided.\n             * @member {SchedulerPro.model.CalendarModel} effectiveCalendar\n             */\n\n            /**\n             * Set this to true if this task should be shown in the Timeline widget\n             * @field {Boolean} showInTimeline\n             * @category Common\n             */\n            { name : 'showInTimeline', type : 'boolean', defaultValue : false },\n\n            /**\n             * Note about the event\n             * @field {String} note\n             * @category Common\n             */\n            'note',\n\n            /**\n             * Buffer time before event start. Specified in a human-friendly form as accepted by\n             * {@link Core.helper.DateHelper#function-parseDuration-static}:\n             * ```javascript\n             * // Create event model with a 30 minutes buffer time before the event start\n             * new EventModel({ startDate : '2020-01-01', endDate : '2020-01-02', preamble : '30 minutes' })\n             * ```\n             *\n             * Used by the {@link SchedulerPro.feature.EventBuffer} feature.\n             *\n             * @field {Core.data.Duration} preamble\n             * @accepts {String}\n             * @category Scheduling\n             */\n            {\n                name    : 'preamble',\n                convert : value => value ? new Duration(value) : null\n            },\n            /**\n             * Buffer time after event end. Specified in a human-friendly form as accepted by\n             * {@link Core.helper.DateHelper#function-parseDuration-static}:\n             * ```javascript\n             * // Create event model with a 1 hour buffer time after the event end\n             * new EventModel({ startDate : '2020-01-01', endDate : '2020-01-02', postamble : '1 hour' })\n             * ```\n             *\n             * Used by the {@link SchedulerPro.feature.EventBuffer} feature.\n             *\n             * @field {String} postamble\n             * @accepts {String}\n             * @category Scheduling\n             */\n            {\n                name    : 'postamble',\n                convert : value => value ? new Duration(value) : null\n            }\n        ];\n    }\n\n    getDefaultSegmentModelClass() {\n        return EventSegmentModel;\n    }\n\n    //endregion\n\n    //region EventBuffer\n\n    updateWrapDate(date, duration, forward = true) {\n        duration = new Duration(duration);\n\n        return new Date(date.getTime() + (forward ? 1 : -1) * duration.milliseconds);\n    }\n\n    get startDate() {\n        let dt;\n\n        if (this.isOccurrence) {\n            dt = this.get('startDate');\n        }\n        else {\n            // Micro optimization to avoid expensive super call. super will be hit in Scheduler Pro\n            dt = this._startDate ?? super.startDate;\n        }\n\n        if (this.allDay) {\n            dt = this.constructor.getAllDayStartDate(dt);\n        }\n\n        return dt;\n    }\n\n    set startDate(startDate) {\n        const me = this;\n\n        // Update children when parents startDate changes (ignoring initial data set)\n        // <remove-on-release>\n        // TODO: Handle in engine? Arcady is informed\n        // </remove-on-release>\n        if (me.generation && me.isParent && !me.$ignoreChange) {\n            const timeDiff = DateHelper.diff(me.startDate, startDate);\n\n            if (timeDiff) {\n                // Move all children same amount\n                for (const child of this.children) {\n                    child.startDate = DateHelper.add(child.startDate, timeDiff);\n                }\n            }\n        }\n\n        if (me.batching) {\n            me._startDate = startDate;\n            me.set({ startDate });\n        }\n        else {\n            super.startDate = startDate;\n\n            if (me.preamble) {\n                me.wrapStartDate = null;\n                me.wrapEndDate = null;\n            }\n        }\n    }\n\n    get endDate() {\n        let dt;\n\n        if (this.isOccurrence) {\n            dt = this.get('endDate');\n        }\n        else {\n            // Micro optimization to avoid expensive super call. super will be hit in Scheduler Pro\n            dt = this._endDate ?? super.endDate;\n        }\n\n        if (this.allDay) {\n            dt = this.constructor.getAllDayEndDate(dt);\n        }\n\n        return dt;\n    }\n\n    set endDate(endDate) {\n        const me = this;\n\n        if (me.batching) {\n            me._endDate = endDate;\n            me.set({ endDate });\n        }\n        else {\n            super.endDate = endDate;\n\n            if (me.postamble) {\n                me.wrapStartDate = null;\n                me.wrapEndDate = null;\n            }\n        }\n    }\n\n    /**\n     * Property which encapsulates the effort's magnitude and units.\n     *\n     * UI fields representing this property are disabled for summary events.\n     * See {@link #function-isEditable} for details.\n     *\n     * @property {Core.data.Duration}\n     */\n    get fullEffort() {\n        return new Duration({\n            unit      : this.effortUnit,\n            magnitude : this.effort\n        });\n    }\n\n    set fullEffort(effort) {\n        this.setEffort(effort.magnitude, effort.unit);\n    }\n\n    // Cannot use `convert` method because it might be disabled by `useRawData : true` and we always need to calculate\n    // that value\n    get wrapStartDate() {\n        const\n            me                      = this,\n            { preamble, startDate } = me,\n            wrapStartDate           = me._wrapStartDate;\n\n        let result;\n\n        if (wrapStartDate) {\n            result = wrapStartDate;\n        }\n        else {\n            if (preamble) {\n                result = me.updateWrapDate(startDate, preamble, false);\n                me._wrapStartDate = result;\n            }\n            else {\n                result = startDate;\n            }\n        }\n\n        return result;\n    }\n\n    set wrapStartDate(value) {\n        this._wrapStartDate = value;\n    }\n\n    get wrapEndDate() {\n        const\n            me                     = this,\n            { postamble, endDate } = me,\n            wrapEndDate            = me._wrapEndDate;\n\n        let result;\n\n        if (wrapEndDate) {\n            result = wrapEndDate;\n        }\n        else {\n            if (postamble) {\n                result = me.updateWrapDate(endDate, postamble, true);\n                me._wrapEndDate = result;\n            }\n            else {\n                result = endDate;\n            }\n        }\n\n        return result;\n    }\n\n    set wrapEndDate(value) {\n        this._wrapEndDate = value;\n    }\n\n    set(data) {\n        const isObject = typeof data === 'object';\n        if (data === 'preamble' || (isObject && 'preamble' in data)) {\n            this.wrapStartDate = null;\n        }\n        if (data === 'postamble' || (isObject && 'postamble' in data)) {\n            this.wrapEndDate = null;\n        }\n        return super.set(...arguments);\n    }\n\n    /**\n     * Returns event start date adjusted by {@link #field-preamble} (start date - duration).\n     * @property {Date}\n     * @readonly\n     */\n    get outerStartDate() {\n        return this.wrapStartDate;\n    }\n\n    /**\n     * Returns event end date adjusted by {@link #field-postamble} (end date + duration).\n     * @property {Date}\n     * @readonly\n     */\n    get outerEndDate() {\n        return this.wrapEndDate;\n    }\n\n    //endregion\n\n    /**\n     * Defines if the given event field should be manually editable in UI.\n     * You can override this method to provide your own logic.\n     *\n     * By default, the method defines:\n     * - {@link #field-earlyStartDate}, {@link #field-earlyEndDate} as not editable;\n     * - {@link #field-endDate}, {@link #field-duration} and {@link #field-fullDuration} fields\n     *   as not editable for summary events except the {@link #field-manuallyScheduled manually scheduled} ones;\n     * - {@link #field-percentDone} as not editable for summary events.\n     *\n     * @param {String} fieldName Name of the field\n     * @returns {Boolean} Returns `true` if the field is editable, `false` if it is not and `undefined` if the event has\n     * no such field.\n     */\n    isEditable(fieldName) {\n        switch (fieldName) {\n            // r/o fields\n            case 'earlyStartDate':\n            case 'earlyEndDate':\n                return false;\n\n            // disable percentDone editing for summary tasks\n            case 'percentDone' :\n            case 'renderedPercentDone' :\n                return this.isLeaf;\n\n            // end/duration is allowed to edit for leafs and manually scheduled summaries\n            case 'endDate' :\n            case 'duration' :\n            case 'fullDuration' :\n                return this.isLeaf || this.manuallyScheduled;\n        }\n\n        return super.isEditable(fieldName);\n    }\n\n    // Occurrences are not part of the project, when requesting their stm we retrieve it from the master event instead\n    get stm() {\n        return this.recurringEvent?.stm ?? super.stm;\n    }\n\n    set stm(stm) {\n        super.stm = stm;\n    }\n\n    //region Early render\n\n    get assigned() {\n        const\n            { project }  = this,\n            assigned     = super.assigned;\n\n        // Figure assigned events out before buckets are created  (if part of project)\n        if (project?.isDelayingCalculation && !assigned) {\n            return project.assignmentStore.storage.findItem('event', this);\n        }\n\n        return assigned;\n    }\n\n    set assigned(assigned) {\n        super.assigned = assigned;\n    }\n\n    //endregion\n\n    getCurrentConfig(options) {\n        const\n            { segments } = this,\n            result       = super.getCurrentConfig(options);\n\n        // include segments\n        if (result && segments) {\n            result.segments = segments.map(segment => segment.getCurrentConfig(options));\n        }\n\n        return result;\n    }\n\n}\n","import AjaxStore from '../../Core/data/AjaxStore.js';\nimport GetEventsMixin from '../../Scheduler/data/mixin/GetEventsMixin.js';\nimport DayIndexMixin from '../../Scheduler/data/mixin/DayIndexMixin.js';\nimport EventStoreMixin from '../../Scheduler/data/mixin/EventStoreMixin.js';\nimport RecurringEventsMixin from '../../Scheduler/data/mixin/RecurringEventsMixin.js';\nimport EventModel from '../model/EventModel.js';\nimport PartOfProject from './mixin/PartOfProject.js';\nimport { ChronoEventStoreMixin } from '../../Engine/quark/store/ChronoEventStoreMixin.js';\n\n/**\n * @module SchedulerPro/data/EventStore\n */\n\n/**\n * A store holding all the {@link SchedulerPro.model.EventModel events} to be rendered into a {@link SchedulerPro.view.SchedulerPro Scheduler Pro}.\n *\n * This store only accepts a model class inheriting from {@link SchedulerPro.model.EventModel}.\n *\n * An EventStore is usually connected to a project, which binds it to other related stores (AssignmentStore,\n * ResourceStore and DependencyStore). The project also handles normalization/calculation of the data on the records in\n * the store. For example if a record is added with a `startDate` and an `endDate`, it will calculate the `duration`.\n *\n * The calculations happens async, records are not guaranteed to have up to date data until they are finished. To be\n * certain that calculations have finished, call `await project.commitAsync()` after store actions. Or use one of the\n * `xxAsync` functions, such as `loadDataAsync()`.\n *\n * Using `commitAsync()`:\n *\n * ```javascript\n * eventStore.data = [{ startDate, endDate }, ...];\n *\n * // duration of the record is not yet calculated\n *\n * await eventStore.project.commitAsync();\n *\n * // now it is\n * ```\n *\n * Using `loadDataAsync()`:\n *\n * ```javascript\n * await eventStore.loadDataAsync([{ startDate, endDate }, ...]);\n *\n * // duration is calculated\n * ```\n *\n * @mixes SchedulerPro/data/mixin/PartOfProject\n * @mixes Scheduler/data/mixin/GetEventsMixin\n * @mixes Scheduler/data/mixin/EventStoreMixin\n * @mixes Scheduler/data/mixin/RecurringEventsMixin\n * @extends Core/data/AjaxStore\n *\n * @typings Scheduler.data.EventStore -> Scheduler.data.SchedulerEventStore\n */\nexport default class EventStore extends PartOfProject(RecurringEventsMixin(GetEventsMixin(DayIndexMixin(EventStoreMixin(ChronoEventStoreMixin.derive(AjaxStore)))))) {\n\n    static $name = 'EventStore';\n\n    static get defaultConfig() {\n        return {\n            modelClass : EventModel\n        };\n    }\n\n    //endregion\n\n}\n","import Model from '../../Core/data/Model.js';\n\n/**\n * @module SchedulerPro/model/ResourceUtilizationModel\n */\n\n/**\n * A model representing a {@link SchedulerPro/view/ResourceUtilization} view row.\n * The view rows are of two possible types __resources__ and __assignments__.\n * The model wraps either a resource or an assignment model. And each wrapped resource keeps its corresponding\n * wrapped assignments as its __children__.\n *\n * **NOTE:** You don't normally need to construct this class instances. The view does that automatically\n * by processing the project resources and assignments, wrapping them with this model instances and\n * putting them to its {@link SchedulerPro/view/ResourceUtilization#property-store}.\n *\n * The wrapped model is provided to {@link #config-origin} config and can be retrieved from it:\n *\n * ```javascript\n * // get the real resource representing the first row of the view\n * resourceUtilizationView.store.first.origin\n * ```\n *\n * @extends Core/data/Model\n */\n\nexport default class ResourceUtilizationModel extends Model {\n\n    static $name = 'ResourceUtilizationModel';\n\n    static fields = [\n        /**\n         * Name of the represented resource or the assigned event.\n         * If the model represents an assignment the field value is\n         * automatically set to the assigned event {@link SchedulerPro/model/EventModel#field-name}.\n         * @field {String} name\n         * @category Common\n         */\n        'name',\n        /**\n         * Icon for the corresponding row.\n         * If the model represents an assignment the field value is\n         * automatically set to the assigned event {@link SchedulerPro/model/EventModel#field-iconCls}.\n         * @field {String} iconCls\n         * @category Styling\n         */\n        'iconCls'\n    ];\n\n    /**\n     * A resource or an assignment wrapped by this model.\n     *\n     * ```javascript\n     * // get the real resource representing the first row of the view\n     * resourceUtilizationView.store.first.origin\n     * ```\n     * @config {SchedulerPro.model.ResourceModel|SchedulerPro.model.AssignmentModel} origin\n     */\n\n    construct(data, ...args) {\n        this._childrenIndex = new Map();\n\n        // copy some field values from origin to this model\n        if (data.origin) {\n            Object.assign(data, this.mapOriginValues(data.origin));\n        }\n\n        super.construct(data, ...args);\n\n        if (this.origin && !this.generatedParent) {\n            this.fillChildren();\n        }\n    }\n\n    mapOriginValues(origin) {\n        const result = {};\n\n        if (origin.isResourceModel) {\n            result.name = origin.name;\n        }\n        else if (origin.isAssignmentModel) {\n            result.name    = origin.event?.name;\n            result.iconCls = origin.event?.iconCls;\n        }\n\n        return result;\n    }\n\n    fillChildren() {\n        const\n            me           = this,\n            { children } = me,\n            toRemove     = new Set(children),\n            toAdd        = [];\n\n        if (me.origin?.isResourceModel) {\n            const { assigned } = me.origin;\n\n            for (const assignment of assigned) {\n                if (!me._childrenIndex.has(assignment)) {\n                    toAdd.push(me.constructor.new({ origin : assignment }));\n                }\n                else {\n                    toRemove.delete(me._childrenIndex.get(assignment));\n                }\n            }\n        }\n\n        if (toRemove.size) {\n            this.removeChild([...toRemove]);\n        }\n\n        if (toAdd.length) {\n            this.appendChild(toAdd);\n        }\n    }\n\n    afterRemoveChild(records) {\n        records.forEach(record => this._childrenIndex.delete(record.origin));\n    }\n\n    insertChild(...args) {\n        let added = super.insertChild(...args);\n\n        if (added) {\n            const { stores } = this;\n\n            if (!Array.isArray(added)) {\n                added = [added];\n            }\n\n            if (this.origin?.isResourceModel) {\n                for (const record of added) {\n                    if (record.origin && !this._childrenIndex.has(record.origin)) {\n                        this._childrenIndex.set(record.origin, record);\n                    }\n                }\n            }\n\n            // if the model is already in a store\n            // fill the store real_model -> wrapper_model map\n            if (stores?.length) {\n                for (const store of stores) {\n                    for (const record of added) {\n                        record.traverse(node => node.origin && store.setModelByOrigin(node.origin, node));\n                    }\n                }\n            }\n        }\n\n        return added;\n    }\n\n    getChildByOrigin(origin) {\n        return this._childrenIndex.get(origin);\n    }\n}\n\n// convert empty parents to leaves to allow them to be handled by TreeGroup feature\nResourceUtilizationModel.convertEmptyParentToLeaf = true;\n\nResourceUtilizationModel.exposeProperties();\n","import AjaxStore from '../../Core/data/AjaxStore.js';\nimport ResourceUtilizationModel from '../model/ResourceUtilizationModel.js';\nimport { AbstractPartOfProjectStoreMixin } from '../../Engine/quark/store/mixin/AbstractPartOfProjectStoreMixin.js';\n\n/**\n * @module SchedulerPro/data/ResourceUtilizationStore\n */\n\n/**\n * A store representing {@link SchedulerPro/view/ResourceUtilization} view records.\n * This store accepts a model class inheriting from {@link SchedulerPro/model/ResourceUtilizationModel}.\n *\n * The store is a tree of nodes representing resources on the root level with\n * sub-nodes representing corresponding resource assignments.\n * The store tracks changes made in the {@link #config-project} stores and rebuilds its content automatically.\n * Thus the project config is mandatory and has to be provided.\n *\n * @extends Core/data/AjaxStore\n */\nexport default class ResourceUtilizationStore extends AbstractPartOfProjectStoreMixin.derive(AjaxStore) {\n\n    static $name = 'ResourceUtilizationStore';\n\n    static configurable = {\n        modelClass : ResourceUtilizationModel,\n\n        /**\n         * Project instance to retrieve resources and assignments data from.\n         * @config {SchedulerPro.model.ProjectModel} project\n         */\n        project : null,\n\n        tree : true\n    };\n\n    // Cannot use `static properties = {}`, new Map would pollute the prototype\n    static get properties() {\n        return {\n            _modelByOrigin : new Map()\n        };\n    }\n\n    updateProject(project) {\n        this.setResourceStore(project?.resourceStore);\n        this.setAssignmentStore(project?.assignmentStore);\n        this.setEventStore(project?.eventStore);\n\n        this.fillStoreFromProject();\n    }\n\n    setResourceStore(store) {\n        this.detachListeners('resourceStore');\n\n        // <remove-on-release>\n        // TODO: track assignments & events changes\n        // </remove-on-release>\n        store?.ion({\n            name    : 'resourceStore',\n            change  : this.onResourceStoreDataChanged,\n            thisObj : this\n        });\n    }\n\n    setEventStore(store) {\n        this.detachListeners('eventStore');\n\n        // <remove-on-release>\n        // TODO: track assignments & events changes\n        // </remove-on-release>\n        store?.ion({\n            name    : 'eventStore',\n            update  : this.onEventUpdate,\n            thisObj : this\n        });\n    }\n\n    setAssignmentStore(store) {\n        this.detachListeners('assignmentStore');\n\n        // <remove-on-release>\n        // TODO: track assignments & events changes\n        // </remove-on-release>\n        store?.ion({\n            name    : 'assignmentStore',\n            change  : this.onAssignmentsChange,\n            refresh : this.onAssignmentsRefresh,\n            add     : this.onAssignmentsAdd,\n            update  : this.onAssignmentUpdate,\n            remove  : this.onAssignmentsRemove,\n            thisObj : this\n        });\n    }\n\n    onResourceStoreDataChanged(event) {\n        // 'move' action triggers a remove event first, we wait for the 'add' - no need to fill twice\n        if (event.isMove && event.action === 'remove') {\n            return;\n        }\n\n        this.fillStoreFromProject();\n    }\n\n    onAssignmentsChange() {\n        this.forEach(resourceWrapper => resourceWrapper.fillChildren());\n    }\n\n    onAssignmentsRefresh(event) {\n        if (event.action === 'batch') {\n            this.forEach(resourceWrapper => resourceWrapper.fillChildren());\n        }\n    }\n\n    onAssignmentsAdd({ records }) {\n        records.forEach(record => {\n            const resourceWrapper = this.getModelByOrigin(record?.resource);\n\n            resourceWrapper?.fillChildren();\n        });\n    }\n\n    onAssignmentUpdate({ record, changes }) {\n        // if assignment moved to another resource\n        if ('resource' in changes) {\n            const\n                // get assignment wrapper record\n                assignmentWrapper = this.getModelByOrigin(record),\n                // get new resource wrapper record\n                newResourceWrapper = this.getModelByOrigin(record?.resource);\n\n            // move assignment wrapper to new resource wrapper\n            if (assignmentWrapper && newResourceWrapper) {\n                newResourceWrapper.appendChild(assignmentWrapper);\n            }\n        }\n    }\n\n    onAssignmentsRemove({ records }) {\n        this.remove(records.map(record => this.getModelByOrigin(record)));\n    }\n\n    onEventUpdate({ record, changes }) {\n        if ('name' in changes) {\n            for (const assignment of record.assigned) {\n                const assignmentWrapper = this.getModelByOrigin(assignment);\n\n                assignmentWrapper.set('name', record.name);\n            }\n        }\n    }\n\n    fillStoreFromProject() {\n        const toAdd = [];\n\n        this._project?.resourceStore.forEach(resource => {\n            if (!resource.isSpecialRow) {\n                toAdd.push(this.modelClass.new({ origin : resource }));\n            }\n        });\n\n        this.removeAll();\n        this.add(toAdd);\n\n        /**\n         * Fires when store completes synchronization with original (Event/Resource/Assignment) stores\n         * @event fillFromProject\n         * @internal\n         */\n        this.trigger('fillFromProject');\n    }\n\n    remove() {\n        const removed = super.remove(...arguments);\n\n        // sanitize internal origin->wrapper Map\n        removed?.forEach(record => {\n            this._modelByOrigin.delete(record.origin);\n        });\n\n        return removed;\n    }\n\n    removeAll() {\n        super.removeAll(...arguments);\n\n        this._modelByOrigin.clear();\n    }\n\n    getModelByOrigin(origin) {\n        return this._modelByOrigin.get(origin);\n    }\n\n    setModelByOrigin(origin, model) {\n        return this._modelByOrigin.set(origin, model);\n    }\n}\n","import Base from '../../Core/Base.js';\n\nconst sortFn = (a, b) => {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n};\n\n/**\n * @module SchedulerPro/eventlayout/ProHorizontalLayout\n */\n\n/**\n * Mixin for SchedulerPro horizontal layouts ({@link SchedulerPro.eventlayout.ProHorizontalLayoutPack} and\n * {@link SchedulerPro.eventlayout.ProHorizontalLayoutStack}). Should not be used directly, instead specify\n * {@link Scheduler.view.mixin.SchedulerEventRendering#config-eventLayout} in the SchedulerPro config (`stack`, `pack`\n * or `none`):\n *\n * ```javascript\n * new SchedulerPro({\n *   eventLayout: 'stack'\n * });\n * ```\n *\n * ## Grouping events\n *\n * By default events are not grouped and are laid out inside the row using start and end dates. Using\n * {@link #config-groupBy} config you can group events inside the resource row. Every group will be laid out on its own\n * band, as if layout was applied to each group of events separately.\n *\n * {@inlineexample SchedulerPro/eventlayout/ProHorizontalLayout.js}\n *\n * ### By field value\n *\n * You can specify field name to group events by. The following snippet would put *high* prio events at the top:\n *\n * ```javascript\n * new SchedulerPro({\n *     eventLayout : {\n *         type    : 'stack',\n *         groupBy : 'prio'\n *     },\n *     project : {\n *         eventsData : [\n *             { id : 1, startDate : '2017-02-08', duration : 1, prio : 'low' },\n *             { id : 2, startDate : '2017-02-09', duration : 1, prio : 'high' },\n *             { id : 3, startDate : '2017-02-10', duration : 1, prio : 'high' },\n *         ],\n *         resourcesData : [\n *             { id : 1, name : 'Resource 1' }\n *         ],\n *         assignmentsData : [\n *             { id : 1, resource : 1, event : 1 },\n *             { id : 2, resource : 1, event : 2 },\n *             { id : 3, resource : 1, event : 3 }\n *         ]\n *     }\n * })\n * ```\n *\n * ### Order of groups\n *\n * Groups are **always** sorted ascending. In the example above *high* prio events are above *low* prio events because:\n *\n * ```javascript\n * 'high' < 'low' // true\n * ```\n *\n * If you want to group events in a specific order, you can define it in a\n * special {@link #config-weights} config:\n *\n * ```javascript\n * new SchedulerPro({\n *     eventLayout : {\n *         type    : 'stack',\n *         weights : {\n *             low  : 100,\n *             high : 200\n *         },\n *         groupBy : 'prio'\n *     }\n * });\n * ```\n *\n * This will put *low* prio events at the top.\n *\n * The weight value defaults to `Infinity` unless specified in the weights config explicitly.\n *\n * ### Using a function\n *\n * You can use a custom function to group events. The group function receives an event record as a single argument and\n * is expected to return a non-null value for the group. This allows you to arrange events in any order you like,\n * including grouping by multiple properties at once.\n *\n * The snippet below groups events by duration and priority by creating 4 weights:\n *\n * |       | high prio | low prio |\n * |-------|-----------|----------|\n * | long  |     2     |    10    |\n * | short |     3     |    15    |\n *\n * ```javascript\n * new SchedulerPro({\n *     eventLayout : {\n *         type    : 'stack',\n *         groupBy : event => {\n *             return (event.duration > 2 ? 2 : 3) * (event.prio === 'high' ? 1 : 5);\n *         }\n *     }\n * })\n * ```\n *\n * This will divide events into 4 groups as seen in this demo:\n *\n * {@inlineexample SchedulerPro/eventlayout/ProHorizontalLayout2.js}\n *\n * ## Manual event layout\n *\n * You can provide a custom function to layout events inside the row and set the row size as required using\n * {@link #config-layoutFn}. The function is called with an array of {@link EventRenderData render data} objects. The\n * custom function can iterate over those objects and position them inside the row using `top` and `height` attributes.\n * The function should return the total row height in pixels.\n *\n * Please note that using a custom layout function makes {@link SchedulerPro.view.SchedulerPro#config-rowHeight}\n * obsolete.\n *\n * {@inlineexample SchedulerPro/eventlayout/ProHorizontalLayoutFn.js}\n *\n * ```javascript\n * new SchedulerPro({\n *     eventLayout : {\n *         layoutFn : items => {\n *             // Put event element at random top position\n *             item.top = 100 * Math.random();\n *         }\n *     }\n * });\n * ```\n *\n * @mixin\n */\nexport default Target => class ProHorizontalLayout extends (Target || Base) {\n    static get configurable() {\n        return {\n            /**\n             * Type of horizontal layout. Supported values are `stack`, `pack` and `none`.\n             * @config {'stack'|'pack'|'none'}\n             */\n            type : null,\n\n            /**\n             * The weights config allows you to specify order of the event groups inside the row. Higher weights are\n             * placed further down in the row. If field value is not specified in the weights object, it will be\n             * assigned `Infinity` value and pushed to the bottom.\n             *\n             * Only applicable when {@link #config-groupBy} config is not a function:\n             *\n             * ```javascript\n             * new SchedulerPro({\n             *     eventLayout : {\n             *         type    : 'stack',\n             *         weights : {\n             *             // Events with high prio will be placed at the top, then medium,\n             *             // then low prio events.\n             *             high   : 100,\n             *             medium : 150,\n             *             low    : 200\n             *         },\n             *         groupBy : 'prio'\n             *     }\n             * });\n             * ```\n             *\n             * Only explicitly defined groups are put in separate bands inside the row:\n             *\n             * ```javascript\n             * new SchedulerPro({\n             *     eventLayout : {\n             *         // Pack layout is also supported\n             *         type : 'pack',\n             *         weights : {\n             *             // Events with high prio will be placed at the top. All other\n             *             // events will be put to the same group at the bottom\n             *             high : 100\n             *         },\n             *         groupBy : 'prio'\n             *     }\n             * });\n             * ```\n             * @config {Object<String,Number>}\n             */\n            weights : null,\n\n            /**\n             * Specifies a way to group events inside the row. Can accept either a model field name or a function which\n             * is provided with event record as a single argument and is expected to return group for the event.\n             *\n             * @config {String|Function}\n             */\n            groupBy        : null,\n            groupByThisObj : null,\n\n            /**\n             * Supply a function to manually layout events. It accepts event layout data and should set `top`\n             * and `height` for every provided data item (left and width are calculated according to the event start\n             * date and duration). The function should return the total row height in pixels.\n             *\n             * For example, we can arrange events randomly in the row:\n             * ```javascript\n             * new SchedulerPro({\n             *     eventLayout : {\n             *         layoutFn : items => {\n             *             items.forEach(item => {\n             *                 item.top = Math.round(Math.random() * 100);\n             *                 item.height = Math.round(Math.random() * 100);\n             *             });\n             *\n             *             return 50;\n             *         }\n             *     }\n             * })\n             * ```\n             *\n             * If you need a reference to the scheduler pro instance, you can get that from the function scope (arrow\n             * function doesn't work here):\n             *\n             * ```javascript\n             * new SchedulerPro({\n             *     eventLayout : {\n             *         layoutFn(items) {\n             *             items.forEach(item => {\n             *                 item.top = Math.round(Math.random() * 100);\n             *                 item.height = Math.round(Math.random() * 100);\n             *             });\n             *\n             *             // note `scheduler`, not `schedulerPro`\n             *             return this.scheduler.rowHeight;\n             *         }\n             *     }\n             * })\n             * ```\n             *\n             * @config {Function}\n             * @param {EventRenderData[]} events Unordered array of event render data, sorting may be required\n             * @param {Scheduler.model.ResourceModel} resource The resource for which the events are being laid out.\n             * @returns {Number} Returns total row height\n             */\n            layoutFn : null\n        };\n    }\n\n    /**\n     * This method performs layout on an array of event render data and returns amount of _bands_. Band is a multiplier of a\n     * configured {@link Scheduler.view.Scheduler#config-rowHeight} to calculate total row height required to fit all\n     * events.\n     * This method should not be used directly, it is called by the Scheduler during the row rendering process.\n     * @method applyLayout\n     * @param {EventRenderData[]} events\n     * @param {Scheduler.model.ResourceModel} resource\n     * @returns {Number}\n     */\n\n    /**\n     * This method iterates over events and calculates top position for each of them. Default layouts calculate\n     * positions to avoid events overlapping horizontally (except for the 'none' layout). Pack layout will squeeze events to a single\n     * row by reducing their height, Stack layout will increase the row height and keep event height intact.\n     * This method should not be used directly, it is called by the Scheduler during the row rendering process.\n     * @method layoutEventsInBands\n     * @param {EventRenderData[]} events\n     */\n\n    /**\n     * Returns `true` if event {@link #config-groupBy grouper} is defined.\n     * @type {Boolean}\n     * @readonly\n     */\n    get grouped() {\n        return Boolean(this.groupBy);\n    }\n\n    /**\n     * Returns group for the passed event render data.\n     * @param {EventRenderData} layoutData\n     * @returns {*}\n     */\n    getGroupValue(layoutData) {\n        let result;\n\n        if (layoutData.group != null) {\n            result = layoutData.group;\n        }\n        else {\n            const\n                { groupBy, weights, groupByThisObj = this } = this,\n                { eventRecord }                             = layoutData;\n\n            if (typeof groupBy === 'function') {\n                result = groupBy.call(groupByThisObj, eventRecord);\n            }\n            else {\n                result = eventRecord.getValue(groupBy);\n\n                if (weights) {\n                    // If record value is null or undefined, use infinite weight to move record to the bottom\n                    result = weights[result] ?? Infinity;\n                }\n            }\n\n            layoutData.group = result;\n        }\n\n        return result;\n    }\n\n    /**\n     * Sorts events by group and returns ordered array of groups, or empty array if events are not grouped.\n     * @param {EventRenderData[]} events\n     * @returns {String[]}\n     */\n    getEventGroups(events) {\n        // If group fn is defined, we need to sort events array according to groups\n        if (this.grouped) {\n            const groups = new Set();\n\n            events.sort((a, b) => {\n                const\n                    aValue = this.getGroupValue(a),\n                    bValue = this.getGroupValue(b);\n\n                groups.add(aValue);\n                groups.add(bValue);\n\n                return sortFn(aValue, bValue);\n            });\n\n            return Array.from(groups).sort(sortFn);\n        }\n        else {\n            return [];\n        }\n    }\n};\n","import ProHorizontalLayout from './ProHorizontalLayout.js';\nimport HorizontalLayoutStack from '../../Scheduler/eventlayout/HorizontalLayoutStack.js';\n\n/**\n * @module SchedulerPro/eventlayout/ProHorizontalLayoutStack\n */\n\n/**\n * Handles layout of events within a row (resource) in horizontal mode. Stacks events, increasing row height to fit\n * all overlapping events.\n *\n * This layout is used by default in horizontal mode.\n *\n * This layout supports grouping events inside the resource row. See\n * {@link SchedulerPro.eventlayout.ProHorizontalLayout} for more info.\n *\n * @mixes SchedulerPro/eventlayout/ProHorizontalLayout\n */\nexport default class ProHorizontalLayoutStack extends HorizontalLayoutStack.mixin(ProHorizontalLayout) {\n    static get $name() {\n        return 'ProHorizontalLayoutStack';\n    }\n\n    /**\n     * @hideconfigs type, weights, groupBy, layoutFn\n     */\n\n    // heightRun is used when pre-calculating row heights, taking a cheaper path\n    layoutEventsInBands(events, heightRun = false) {\n        this.getEventGroups(events);\n\n        return super.layoutEventsInBands(events, heightRun);\n    }\n}\n","import ProHorizontalLayout from './ProHorizontalLayout.js';\nimport HorizontalLayoutPack from '../../Scheduler/eventlayout/HorizontalLayoutPack.js';\n\n/**\n * @module SchedulerPro/eventlayout/ProHorizontalLayoutPack\n */\n\n/**\n * Handles layout of events within a row (resource) in horizontal mode. Packs events (adjusts their height) to fit\n * available row height.\n *\n * This layout supports grouping events inside the resource row. See\n * {@link SchedulerPro.eventlayout.ProHorizontalLayout} for more info.\n *\n * @mixes SchedulerPro/eventlayout/ProHorizontalLayout\n */\nexport default class ProHorizontalLayoutPack extends HorizontalLayoutPack.mixin(ProHorizontalLayout) {\n    static get $name() {\n        return 'ProHorizontalLayoutPack';\n    }\n\n    /**\n     * @hideconfigs type, weights, groupBy, layoutFn\n     */\n\n    layoutEventsInBands(events) {\n        const\n            groups = this.getEventGroups(events),\n            // If we don't have any groups, treat it like we have a single group including all events\n            groupCount = groups.length || 1;\n\n        const result = this.packEventsInBands(events, (event, j, slot, slotSize) => {\n            const\n                size              = slotSize / groupCount,\n                groupIndex        = groupCount === 1 ? 0 : groups.indexOf(event.group),\n                adjustedSlotStart = groupIndex / groupCount;\n\n            // This height and top are used to position event in the grouped row\n            event.height = size;\n            event.top    = adjustedSlotStart + slot.start / groupCount + j * size;\n\n            // This height and top are used to layout events in the same band. They emulate a single row which is what\n            // pack logic expects\n            event.inBandHeight = slotSize;\n            event.inBandTop = slot.start + j * slotSize;\n        });\n\n        events.forEach(event => {\n            Object.assign(\n                event,\n                this.bandIndexToPxConvertFn.call(\n                    this.bandIndexToPxConvertThisObj || this,\n                    event.top,\n                    event.height,\n                    event.eventRecord,\n                    event.resourceRecord\n                )\n            );\n        });\n\n        return result;\n    }\n}\n","import ArrayHelper from '../../Core/helper/ArrayHelper.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport ResourceTimeRangesBase from '../../Scheduler/feature/base/ResourceTimeRangesBase.js';\nimport ResourceTimeRangeModel from '../../Scheduler/model/ResourceTimeRangeModel.js';\n\n/**\n * @module SchedulerPro/feature/CalendarHighlight\n */\n\nlet counter = 0;\n\nclass CalendarHighlightModel extends ResourceTimeRangeModel {\n    static get $name() {\n        return 'CalendarHighlightModel';\n    }\n\n    static domIdPrefix = 'calendarhighlight';\n\n    // For nicer DOM, since the records are transient we do not need a fancy UUID\n    static generateId() {\n        return ++counter;\n    }\n}\n\n/**\n * This feature temporarily visualizes {@link SchedulerPro/model/CalendarModel calendars} for the event or resource\n * calendar (controlled by the {@link #config-calendar} config). The calendars are highlighted while a user is creating,\n * dragging or resizing a task. Enabling this feature makes it easier for the end user to understand the underlying\n * rules of the schedule.\n *\n * {@inlineexample SchedulerPro/feature/CalendarHighlight.js}\n *\n * ## Example usage\n *\n * ```javascript\n * new SchedulerPro({\n *     features : {\n *         calendarHighlight : {\n *             // visualize resource calendars while interacting with events\n *             calendar : 'resource'\n *         }\n *     }\n * })\n * ```\n *\n * This feature is **disabled** by default.\n *\n * @extends Scheduler/feature/base/ResourceTimeRangesBase\n * @classtype calendarHighlight\n * @feature\n * @demo SchedulerPro/highlight-event-calendars\n */\nexport default class CalendarHighlight extends ResourceTimeRangesBase {\n\n    //region Config\n\n    static get $name() {\n        return 'CalendarHighlight';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * A string defining which calendar(s) to highlight during drag drop, resize or create flows.\n             * Valid values are `event` or `resource`.\n             *\n             * @config {'event'|'resource'}\n             * @default\n             */\n            calendar : 'event',\n\n            /**\n             * A string defining which calendar(s) to highlight during drag drop, resize or create flows.\n             * Valid values are `event` or `resource`.\n             *\n             * @config {'event'|'resource'}\n             */\n            unhighlightOnDrop : null,\n\n            /**\n             * A callback function which is called when you interact with one or more events (e.g. drag drop) to\n             * highlight only available resources.\n             *\n             * ```javascript\n             * new SchedulerPro({\n             *     features : {\n             *         calendarHighlight : {\n             *             collectAvailableResources({ scheduler, eventRecords }) {\n             *                  const mainEvent = eventRecords[0];\n             *                  return scheduler.resourceStore.query(resource => resource.role === mainEvent.requiredRole || !mainEvent.requiredRole);\n             *              }\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * @param {Object} context A context object\n             * @param {SchedulerPro.view.SchedulerPro} context.scheduler The scheduler instance\n             * @param {Scheduler.model.EventModel[]} context.eventRecords The event records\n             * @returns {Scheduler.model.ResourceModel[]} An array with the available resource records\n             * @config {Function}\n             */\n            collectAvailableResources : null,\n\n            rangeCls                    : 'b-sch-highlighted-calendar-range',\n            resourceTimeRangeModelClass : CalendarHighlightModel,\n            inflate                     : 3\n        };\n    }\n\n    static get pluginConfig() {\n        const config  = super.pluginConfig;\n\n        config.assign = [\n            'highlightEventCalendars',\n            'highlightResourceCalendars',\n            'unhighlightCalendars'\n        ];\n\n        return config;\n    }\n\n    afterConstruct() {\n        super.afterConstruct();\n\n        this.client.ion({\n            eventDragStart   : 'onEventDragStart',\n            eventDragReset   : 'unhighlightCalendars',\n            eventResizeStart : 'onEventResizeStart',\n            eventResizeEnd   : 'unhighlightCalendars',\n            dragCreateStart  : 'onDragCreateStart',\n            afterDragCreate  : 'unhighlightCalendars',\n            thisObj          : this\n        });\n    }\n\n    //endregion\n\n    highlightCalendar(eventRecords, resourceRecords) {\n        eventRecords = ArrayHelper.asArray(eventRecords);\n        resourceRecords = ArrayHelper.asArray(resourceRecords);\n\n        if (this.calendar === 'event') {\n            this.highlightEventCalendars(eventRecords, resourceRecords);\n        }\n        else {\n            this.highlightResourceCalendars(resourceRecords);\n        }\n    }\n\n    // region public APIs\n    /**\n     * Highlights the time spans representing the calendars of the passed event records, and resource records.\n     * @on-owner\n     * @param {Scheduler.model.EventModel[]} eventRecords The event records\n     * @param {Scheduler.model.ResourceModel[]} [resourceRecords] The resource records\n     * @param {Boolean} [clearExisting] Provide `false` to leave previous highlight elements\n     */\n    highlightEventCalendars(eventRecords, resourceRecords, clearExisting = true) {\n        const\n            me                     = this,\n            { client }             = me,\n            { startDate, endDate } = client;\n\n        if (me.disabled) {\n            return;\n        }\n\n        if (clearExisting) {\n            me.unhighlightCalendars();\n        }\n\n        eventRecords = ArrayHelper.asArray(eventRecords);\n\n        if (!resourceRecords) {\n            resourceRecords = eventRecords.flatMap(event => event.$linkedResources);\n        }\n\n        me.highlight = new Map();\n\n        resourceRecords = ArrayHelper.asArray(resourceRecords);\n\n        eventRecords.forEach(eventRecord => {\n            if (!eventRecord.calendar) {\n                return;\n            }\n\n            const timespans = eventRecord.calendar\n                ?.getWorkingTimeRanges(startDate, endDate)\n                .map(timespan => new CalendarHighlightModel(timespan));\n\n            if (timespans) {\n                for (const resourceRecord of resourceRecords) {\n                    me.highlight.set(resourceRecord, timespans);\n                    client.currentOrientation.refreshEventsForResource(resourceRecord, true, false);\n                }\n                if (resourceRecords.length > 0) {\n                    client.currentOrientation.onRenderDone();\n                }\n            }\n        });\n\n        client.syncSplits?.(split => split.highlightEventCalendars(eventRecords, resourceRecords, clearExisting));\n    }\n\n    /**\n     * Highlights the time spans representing the working time calendars of the passed resource records.\n     * @on-owner\n     * @param {Scheduler.model.ResourceModel[]} resourceRecords The resource records\n     * @param {Boolean} [clearExisting] Provide `false` to leave previous highlight elements\n     */\n    highlightResourceCalendars(resourceRecords, clearExisting = true) {\n        const\n            me                                         = this,\n            { startDate, endDate, currentOrientation } = me.client;\n\n        if (me.disabled) {\n            return;\n        }\n\n        if (clearExisting) {\n            me.unhighlightCalendars();\n        }\n\n        // Highlight resource calendars\n        me.highlight = new Map();\n\n        for (const resourceRecord of resourceRecords) {\n            const timespans = resourceRecord.calendar\n                ?.getWorkingTimeRanges(startDate, endDate)\n                .map(timespan => new CalendarHighlightModel(timespan));\n\n            if (timespans) {\n                me.highlight.set(resourceRecord, timespans);\n                currentOrientation.refreshEventsForResource(resourceRecord, true, false);\n            }\n        }\n        if (resourceRecords.length > 0) {\n            currentOrientation.onRenderDone();\n        }\n\n        me.client.syncSplits?.(split => split.highlightResourceCalendars(resourceRecords, clearExisting));\n    }\n\n    /**\n     * Removes all highlight elements.\n     * @on-owner\n     */\n    unhighlightCalendars() {\n        const me = this;\n\n        if (!me.highlight) {\n            // We're not highlighting anything, bail out\n            return;\n        }\n\n        const\n            { currentOrientation } = me.client,\n            resources              = me.highlight.keys();\n\n        me.highlight = null;\n\n        for (const resource of resources) {\n            currentOrientation.refreshEventsForResource(resource, true, false);\n        }\n\n        currentOrientation.onRenderDone();\n\n        me.client.syncSplits?.(split => split.unhighlightCalendars());\n    }\n\n    // endregion\n\n    // region event listeners\n    onEventDragStart({ context }) {\n        if (this.disabled) {\n            return;\n        }\n\n        const\n            me               = this,\n            { client }       = me,\n            { eventRecords } = context,\n            resourceRecords  = context.availableResources =\n                client.features.eventDrag.constrainDragToResource\n                    ? [context.resourceRecord]\n                    : me.collectAvailableResources?.({\n                        scheduler : client,\n                        eventRecords\n                    }) ?? client.resourceStore.records;\n\n        me.highlightCalendar(eventRecords, resourceRecords);\n    }\n\n    onEventResizeStart({ eventRecord, resourceRecord }) {\n        if (!this.disabled) {\n            this.highlightCalendar(eventRecord, [resourceRecord]);\n        }\n    }\n\n    onDragCreateStart({ eventRecord, resourceRecord }) {\n        if (!this.disabled) {\n            this.highlightCalendar(eventRecord, [resourceRecord]);\n        }\n    }\n\n    // endregion\n\n    // Called on render of resources events to get events to render. Add any ranges\n    // (chained function from Scheduler)\n    getEventsToRender(resource, events) {\n        const timespans = this.highlight?.get(resource);\n\n        timespans && events.push(...timespans);\n\n        return events;\n    }\n\n    onEventDataGenerated(renderData) {\n        const { eventRecord } = renderData;\n\n        if (eventRecord.isCalendarHighlightModel) {\n            const { inflate } = this;\n\n            // Flag that we should fill entire row/col\n            renderData.fillSize = this.client.isVertical;\n            // Add our own cls\n            renderData.wrapperCls['b-sch-highlighted-calendar-range'] = 1;\n            // Add label\n            renderData.children.push({\n                className : 'b-sch-event-content',\n                html      : eventRecord.name,\n                dataset   : {\n                    taskBarFeature : 'content'\n                }\n            });\n\n            // Inflate\n            renderData.width += inflate * 2;\n            renderData.height += inflate * 2;\n            renderData.left -= inflate;\n            renderData.top -= inflate;\n\n            // Event data for DOMSync comparison, unique per calendar & resource combination\n            renderData.eventId = `${this.generateElementId(eventRecord)}-resource-${renderData.resourceRecord.id}`;\n        }\n    }\n\n    updateDisabled(disabled, was) {\n        super.updateDisabled(disabled, was);\n\n        if (disabled) {\n            this.unhighlightCalendars();\n        }\n    }\n\n    shouldInclude(eventRecord) {\n        return eventRecord.isCalendarHighlightModel;\n    }\n\n    // No classname on Scheduler's/Gantt's element\n    get featureClass() {}\n}\n\nGridFeatureManager.registerFeature(CalendarHighlight, false, 'SchedulerPro');\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport SchedulerDependencyEdit from '../../Scheduler/feature/DependencyEdit.js';\nimport '../../Core/widget/Checkbox.js';\nimport TransactionalFeature from '../../Scheduler/feature/mixin/TransactionalFeature.js';\n\n/**\n * @module SchedulerPro/feature/DependencyEdit\n */\n\n/**\n * Feature that displays a popup containing fields for editing dependency data.\n *\n * This feature is **off** by default. For info on enabling it, see {@link Grid/view/mixin/GridFeatures}.\n *\n * @extends Scheduler/feature/DependencyEdit\n * @inlineexample SchedulerPro/feature/DependencyEdit.js\n * @demo SchedulerPro/dependencies/\n * @classtype dependencyEdit\n * @feature\n *\n * @typings Scheduler.feature.DependencyEdit -> Scheduler.feature.SchedulerDependencyEdit\n */\nexport default class DependencyEdit extends TransactionalFeature(SchedulerDependencyEdit) {\n    //region Config\n\n    static get $name() {\n        return 'DependencyEdit';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * True to show the lag field for the dependency\n             * @config {Boolean}\n             * @default\n             * @category Editor widgets\n             */\n            showLagField : true,\n\n            editorConfig : {\n                items : {\n                    activeField : {\n                        type  : 'checkbox',\n                        name  : 'active',\n                        label : 'L{Active}'\n                    }\n                }\n            }\n        };\n    }\n    //endregion\n\n    async editDependency(record) {\n        if (await super.editDependency(record)) {\n            await this.startFeatureTransaction();\n        }\n    }\n\n    afterSave() {\n        this.finishFeatureTransaction().then(() => {\n            super.afterSave();\n        });\n    }\n\n    afterDelete() {\n        this.finishFeatureTransaction().then(() => {\n            super.afterDelete();\n        });\n    }\n\n    afterCancel() {\n        this.rejectFeatureTransaction();\n        super.afterCancel();\n    }\n}\n\nGridFeatureManager.registerFeature(DependencyEdit, false);\n","import InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport Tooltip from '../../Core/widget/Tooltip.js';\n\n/**\n * @module SchedulerPro/feature/EventBuffer\n */\n\n/**\n * Feature that allows showing additional time before & after an event, to visualize things like travel time - or the time you\n * need to prepare a room for a meeting + clean it up after.\n *\n * The feature relies on two model fields: {@link SchedulerPro.model.EventModel#field-preamble} and\n * {@link SchedulerPro.model.EventModel#field-postamble} which are used to calculate overall start and end dates used to\n * position the event. Buffer time overlaps the same way events overlap (as you can see in the inline demo below). It\n * should also be noted that buffer time is ignored for milestones.\n *\n * {@inlineexample SchedulerPro/feature/EventBuffer.js}\n *\n * This feature is **disabled** by default\n *\n * @extends Core/mixin/InstancePlugin\n * @classtype eventBuffer\n * @feature\n * @demo SchedulerPro/travel-time\n */\nexport default class EventBuffer extends InstancePlugin {\n    static get $name() {\n        return 'EventBuffer';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Show buffer duration labels\n             * @config {Boolean}\n             * @default\n             */\n            showDuration : true,\n\n            /**\n             * A function which receives data about the buffer time and returns a html string to show in a tooltip when\n             * hovering a buffer time element\n             * @param {Object} data Data\n             * @param {Core.data.Duration} data.duration Buffer time duration\n             * @param {Boolean} data.before `true` if this is a buffer time before the event start, `false` if after\n             * @param {SchedulerPro.model.EventModel} data.eventRecord The event record\n             * @config {Function}\n             */\n            tooltipTemplate : {\n                value   : null,\n                $config : 'nullify'\n            }\n        };\n    }\n\n    static get pluginConfig() {\n        return {\n            chain : ['onEventDataGenerated']\n        };\n    }\n\n    //region Chained methods\n\n    updateTooltipTemplate(tooltipTemplate) {\n        const me = this;\n\n        if (tooltipTemplate) {\n            me.tooltip = Tooltip.new({\n                forElement  : me.client.timeAxisSubGridElement,\n                forSelector : '.b-sch-event-buffer-before,.b-sch-event-buffer-after',\n                align       : {\n                    align  : 'b-t',\n                    offset : [0, 10]\n                },\n                getHtml({ activeTarget }) {\n                    const\n                        eventRecord = me.client.resolveEventRecord(activeTarget),\n                        before      = activeTarget.matches('.b-sch-event-buffer-before'),\n                        duration    = before ? eventRecord.preamble : eventRecord.postamble;\n\n                    return me.tooltipTemplate({ eventRecord, duration, before });\n                }\n            });\n        }\n        else {\n            me.tooltip?.destroy();\n        }\n    }\n\n    onEventDataGenerated({ useEventBuffer, bufferBeforeWidth, bufferAfterWidth, eventRecord, wrapperChildren }) {\n        if (this.enabled && useEventBuffer) {\n            const\n                { isHorizontal }        = this.client,\n                { showDuration }        = this,\n                { preamble, postamble } = eventRecord,\n                sizeProp                = isHorizontal ? 'width' : 'height';\n\n            // Buffer elements should always be there, otherwise animation might get wrong\n            wrapperChildren.push(\n                {\n                    className : {\n                        'b-sch-event-buffer'        : 1,\n                        'b-sch-event-buffer-before' : 1,\n                        'b-buffer-thin'             : !bufferBeforeWidth\n                    },\n                    style    : `${sizeProp}: ${bufferBeforeWidth}px`,\n                    children : (showDuration && preamble) ? [\n                        {\n                            tag       : 'span',\n                            className : 'b-buffer-label',\n                            html      : preamble.toString(true)\n                        }\n                    ] : undefined\n                },\n                {\n                    className : {\n                        'b-sch-event-buffer'       : 1,\n                        'b-sch-event-buffer-after' : 1,\n                        'b-buffer-thin'            : !bufferAfterWidth\n                    },\n                    style    : `${sizeProp}: ${bufferAfterWidth}px`,\n                    children : (showDuration && postamble) ? [\n                        {\n                            tag       : 'span',\n                            className : 'b-buffer-label',\n                            html      : postamble.toString(true)\n                        }\n                    ] : undefined\n                }\n            );\n        }\n    }\n\n    //endregion\n\n    updateShowDuration() {\n        if (!this.isConfiguring) {\n            this.client.refreshWithTransition();\n        }\n    }\n\n    doDisable(disable) {\n        super.doDisable(disable);\n\n        const { client } = this;\n\n        if (!client.isConfiguring && client.isPainted) {\n            // Add a special CSS class to disable certain transitions\n            client.element.classList.add('b-eventbuffer-transition');\n\n            client.refreshWithTransition();\n\n            client.waitForAnimations().then(() => {\n                client.element.classList.remove('b-eventbuffer-transition');\n            });\n        }\n    }\n}\n\nGridFeatureManager.registerFeature(EventBuffer, false, 'SchedulerPro');\n","import EventDrag from '../../Scheduler/feature/EventDrag.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\n\n/**\n * @module SchedulerPro/feature/EventSegmentDrag\n */\n\n/**\n * Allows user to drag and drop event segments within the row.\n *\n * {@inlineexample SchedulerPro/feature/EventSegments.js}\n *\n * This feature is **enabled** by default\n *\n * @extends Scheduler/feature/EventDrag\n * @classtype eventSegmentDrag\n * @feature\n */\nexport default class EventSegmentDrag extends EventDrag {\n    //region Config\n\n    static $name = 'EventSegmentDrag';\n\n    static get defaultConfig() {\n        return {\n            constrainDragToResource : true\n        };\n    }\n\n    static get configurable() {\n        return {\n            capitalizedEventName : 'EventSegment'\n        };\n    }\n\n    static get pluginConfig() {\n        return {\n            chain : ['onPaint', 'isEventElementDraggable']\n        };\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fired on the owning Scheduler to allow implementer to use asynchronous finalization by setting\n     * `context.async = true` in the listener, to show a confirmation popup etc.\n     * ```javascript\n     *  scheduler.on('beforeEventSegmentDropFinalize', ({ context }) => {\n     *      context.async = true;\n     *      setTimeout(() => {\n     *          // async code don't forget to call finalize\n     *          context.finalize();\n     *      }, 1000);\n     *  })\n     * ```\n     *\n     * For synchronous one-time validation, simply set `context.valid` to true or false.\n     * ```javascript\n     *  scheduler.on('beforeEventSegmentDropFinalize', ({ context }) => {\n     *      context.valid = false;\n     *  })\n     * ```\n     * @event beforeEventSegmentDropFinalize\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Object} context\n     * @param {Boolean} context.async Set true to not finalize the drag-drop operation immediately (e.g. to wait for user confirmation)\n     * @param {Scheduler.model.EventModel[]} context.eventRecords Dragged segments\n     * @param {Boolean} context.valid Set this to `false` to abort the drop immediately.\n     * @param {Function} context.finalize Call this method after an **async** finalization flow, to finalize the drag-drop operation. This method accepts one\n     * argument: pass `true` to update records, or `false` to ignore changes\n     */\n\n    /**\n     * Fired on the owning Scheduler after an event segment is dropped\n     * @event afterEventSegmentDrop\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Scheduler.model.EventModel[]} eventRecords Dropped segments\n     * @param {Boolean} valid\n     * @param {Object} context\n     */\n\n    /**\n     * Fired on the owning Scheduler when an event segment is dropped\n     * @event eventSegmentDrop\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Scheduler.model.EventModel[]} eventRecords Dropped segments\n     */\n\n    /**\n     * Fired on the owning Scheduler before event segment dragging starts. Return `false` to prevent the action.\n     * @event beforeEventSegmentDrag\n     * @on-owner\n     * @preventable\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.EventModel[]} eventRecords Segments to drag\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Fired on the owning Scheduler when event segment dragging starts\n     * @event eventSegmentDragStart\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.EventModel[]} eventRecords Dragged segments\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Fired on the owning Scheduler when event segments are dragged\n     * @event eventSegmentDrag\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.EventModel[]} eventRecords Dragged segments\n     * @param {Date} startDate Start date for the current location\n     * @param {Date} endDate End date for the current location\n     * @param {Object} context\n     * @param {Boolean} context.valid Set this to `false` to signal that the current drop position is invalid.\n     */\n\n    /**\n     * Fired on the owning Scheduler after an event segment drag operation has been aborted\n     * @event eventSegmentDragAbort\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.EventModel[]} eventRecords Dragged segments\n     */\n    /**\n     * Fired on the owning Scheduler after an event segment drag operation regardless of the operation being cancelled\n     * or not\n     * @event eventSegmentDragReset\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     */\n    //endregion\n\n    //region Drag events\n\n    getTriggerParams(dragData) {\n        const { assignmentRecords, eventRecords, resourceRecord, browserEvent: event } = dragData;\n\n        return {\n            // `context` is now private, but used in WebSocketHelper\n            context : dragData,\n            eventRecords,\n            resourceRecord,\n            assignmentRecords,\n            event\n        };\n    }\n\n    triggerEventDrag(dragData, start) {\n        this.scheduler.trigger('eventSegmentDrag', Object.assign(this.getTriggerParams(dragData), {\n            startDate : dragData.startDate,\n            endDate   : dragData.endDate\n        }));\n    }\n\n    triggerDragStart(dragData) {\n        this.scheduler.navigator.skipNextClick = true;\n\n        this.scheduler.trigger('eventSegmentDragStart', this.getTriggerParams(dragData));\n    }\n\n    triggerDragAbort(dragData) {\n        this.scheduler.trigger('eventSegmentDragAbort', this.getTriggerParams(dragData));\n    }\n\n    triggerDragAbortFinalized(dragData) {\n        this.scheduler.trigger('eventSegmentDragAbortFinalized', this.getTriggerParams(dragData));\n    }\n\n    triggerAfterDrop(dragData, valid) {\n        this.scheduler.trigger('afterEventSegmentDrop', Object.assign(this.getTriggerParams(dragData), {\n            valid\n        }));\n\n        if (!valid) {\n            // Edge cases:\n            // 1. If this drag was a no-op, and underlying data was changed while drag was ongoing (e.g. web socket\n            // push), we need to manually force a view refresh to ensure a correct render state\n            //\n            // or\n            // 2. Events were removed before we dropped at an invalid point\n            const\n                { assignmentStore, eventStore } = this.client,\n                needRefresh                     = this.dragData.initialAssignmentsState.find(({\n                    resource, assignment\n                }, i) => {\n                    return !assignmentStore.includes(assignment) ||\n                        !eventStore.includes(assignment.event) ||\n                        resource.id !== this.dragData.assignmentRecords[i]?.resourceId;\n                });\n\n            if (needRefresh) {\n                this.client.refresh();\n            }\n        }\n    }\n\n    //endregion\n\n    //region Update records\n\n    /**\n     * Update events being dragged.\n     * @private\n     * @param context Drag data.\n     * @async\n     */\n    async updateRecords(context) {\n        const\n            me             = this,\n            { client }     = me,\n            copyKeyPressed = false;\n\n        let result;\n\n        if (!context.externalDropTarget) {\n            client.eventStore.suspendAutoCommit();\n\n            result = await me.updateSegment(client, context, copyKeyPressed);\n\n            client.eventStore.resumeAutoCommit();\n        }\n\n        // Tell the world there was a successful drop\n        client.trigger('eventSegmentDrop', Object.assign(me.getTriggerParams(context), {\n            isCopy               : copyKeyPressed,\n            event                : context.browserEvent,\n            targetEventRecord    : context.targetEventRecord,\n            targetResourceRecord : context.newResource,\n            externalDropTarget   : context.externalDropTarget\n        }));\n\n        return result;\n    }\n\n    /**\n     * Update assignments being dragged\n     * @private\n     * @async\n     */\n    async updateSegment(client, context) {\n        // The code is written to emit as few store events as possible\n        const\n            me                  = this,\n            isVertical          = client.mode === 'vertical',\n            {\n                eventRecords,\n                assignmentRecords,\n                timeDiff\n            }                   = context;\n\n        client.suspendRefresh();\n\n        let updated = false;\n\n        if (isVertical) {\n            // <remove-on-release>\n            // TODO: Broken after merge, figure it out\n            // </remove-on-release>\n            eventRecords.forEach((draggedEvent, i) => {\n                const eventBar = context.eventBarEls[i];\n\n                delete draggedEvent.instanceMeta(client).hasTemporaryDragElement;\n\n                // If it was created by a call to scheduler.currentOrientation.addTemporaryDragElement\n                // then release it back to be available to DomSync next time the rendered event block\n                // is synced.\n                if (eventBar.dataset.transient) {\n                    eventBar.remove();\n                }\n            });\n        }\n\n        const\n            eventBarEls  = context.eventBarEls.slice(),\n            draggedEvent = context.eventRecord,\n            newStartDate = me.adjustStartDate(context.origStart, timeDiff);\n\n        if (!DateHelper.isEqual(draggedEvent.startDate, newStartDate)) {\n\n            client.endListeningForBatchedUpdates();\n\n            me.cancelBatchUpdate(draggedEvent);\n\n            draggedEvent.startDate = newStartDate;\n\n            updated = true;\n\n            await client.project.commitAsync();\n\n            me.endBatchUpdate?.(draggedEvent);\n        }\n\n        client.resumeRefresh();\n\n        if (assignmentRecords.length > 0) {\n            if (!updated) {\n                context.valid = false;\n            }\n            else {\n                // https://github.com/bryntum/support/issues/630\n                // Force re-render when using fillTicks. If date changed within same tick the element won't actually\n                // change and since we hijacked it for drag it won't be returned to its original position\n                if (client.fillTicks) {\n                    eventBarEls.forEach(el => delete el.lastDomConfig);\n                }\n\n                // Not doing full refresh above, to allow for animations\n                client.refreshWithTransition();\n            }\n        }\n    }\n\n    //endregion\n\n    //region Drag data\n\n    // Prevent event draggind when it starts over a resize handle\n    isEventElementDraggable(eventElement, eventRecord, el, event) {\n        const me = this;\n\n        // ALLOW event drag:\n        // - if segments dragging is disabled or event is not segmented\n        if (me.disabled || !(eventRecord.isEventSegment || eventRecord.segments)) {\n            return true;\n        }\n\n        // otherwise make sure EventDrag is not trying to handle a segment element drag\n        return !el.closest(me.drag.targetSelector);\n    }\n\n    buildDragHelperConfig() {\n        const config = super.buildDragHelperConfig();\n\n        config.targetSelector = '.b-sch-event-segment:not(.b-first)';\n\n        return config;\n    }\n\n    getMinimalDragData(info) {\n        const\n            me                = this,\n            { client }        = me,\n            element           = me.getElementFromContext(info),\n            eventRecord       = client.resolveEventRecord(element),\n            resourceRecord    = client.resolveResourceRecord(element),\n            assignmentRecord  = client.resolveAssignmentRecord(element),\n            assignmentRecords = assignmentRecord ? [assignmentRecord] : [],\n            eventRecords      = [eventRecord];\n\n        return {\n            eventRecord,\n            resourceRecord,\n            assignmentRecord,\n            eventRecords,\n            assignmentRecords\n        };\n    }\n\n    beginBatchUpdate(eventRecord) {\n        eventRecord.event.beginBatch();\n        eventRecord.beginBatch();\n    }\n\n    endBatchUpdate(eventRecord) {\n        // could be no \"event\" if segments got merged after dragging\n        eventRecord.event?.endBatch();\n        eventRecord.endBatch();\n    }\n\n    cancelBatchUpdate(eventRecord) {\n        eventRecord.event?.cancelBatch();\n        eventRecord.cancelBatch();\n    }\n\n    setupProductDragData(info) {\n        const\n            me            = this,\n            { client }    = me,\n            element       = me.getElementFromContext(info),\n            {\n                eventRecord,\n                resourceRecord\n            }             = me.getMinimalDragData(info),\n            eventBarEls   = [],\n            mainEventElement = client.getElementsFromEventRecord(eventRecord.event, resourceRecord, true)[0];\n\n        if (me.constrainDragToResource && !resourceRecord) {\n            throw new Error('Resource could not be resolved for event: ' + eventRecord.id);\n        }\n\n        // We tweak last segment drag in RTL mode so its X-ccordinate is always zero\n        // so we have to tell DragHelper to still process corresponding drop event though\n        // the coordinate hasn't changed\n        me.drag.ignoreSamePositionDrop = !client.rtl || eventRecord.nextSegment;\n\n        // During this batch we want the client's UI to update itself using the proposed changes\n        // Only if startDrag has not already done it\n        if (!client.listenToBatchedUpdates) {\n            client.beginListeningForBatchedUpdates();\n        }\n\n        // Do changes in batch mode while dragging\n        me.beginBatchUpdate(eventRecord);\n\n        const\n            dateConstraints    = me.getDateConstraints?.(resourceRecord, eventRecord),\n            constrainRectangle = me.constrainRectangle = me.getConstrainingRectangle(dateConstraints, resourceRecord, eventRecord),\n            eventRegion        = Rectangle.from(element, client.foregroundCanvas, true),\n            mainEventRegion    = Rectangle.from(mainEventElement, client.foregroundCanvas, true);\n\n        // For segment we shift constrainRectangle by the main event offset\n        constrainRectangle.translate(-mainEventRegion.x);\n\n        super.setupConstraints(\n            constrainRectangle,\n            eventRegion,\n            client.timeAxisViewModel.snapPixelAmount,\n            Boolean(dateConstraints.start)\n        );\n\n        eventBarEls.push(element);\n\n        return {\n            record          : eventRecord,\n            draggedEntities : [eventRecord],\n            dateConstraints : dateConstraints?.start ? dateConstraints : null,\n            eventBarEls,\n            mainEventElement\n        };\n    }\n\n    suspendRecordElementRedrawing() {}\n\n    suspendElementRedrawing() {}\n\n    getDateConstraints(resourceRecord, eventRecord) {\n        let { minDate, maxDate } = super.getDateConstraints(resourceRecord, eventRecord);\n\n        // A segment movement is constrained by its neighbour segments if any\n        if (eventRecord.previousSegment && (!minDate || minDate < eventRecord.previousSegment.endDate)) {\n            minDate = eventRecord.previousSegment.endDate;\n        }\n\n        if (eventRecord.nextSegment && (!maxDate || maxDate < eventRecord.nextSegment.startDate)) {\n            maxDate = eventRecord.nextSegment.startDate;\n        }\n\n        return {\n            start : minDate,\n            end   : maxDate\n        };\n    }\n\n    get tipId() {\n        return `${this.client.id}-segment-drag-tip`;\n    }\n\n    internalSnapToPosition(snapTo) {\n        super.internalSnapToPosition();\n\n        // for RTL we pin last segment to 0px offset ..the main event element will get updated\n        if (this.client.rtl && !this.dragData.eventRecord.nextSegment) {\n            snapTo.x = 0;\n        }\n    }\n\n    updateDragContext(context, event) {\n        super.updateDragContext(...arguments);\n\n        const\n            { client } = this,\n            {\n                dirty,\n                eventRecord,\n                endDate\n            } = this.dragData;\n\n        // If dragging the last segment update the main event width accordingly\n        // need this to update dependency properly while dragging\n        if (dirty && !eventRecord.nextSegment) {\n\n            const { enableEventAnimations } = client;\n\n            client.enableEventAnimations = false;\n\n            eventRecord.event.set('endDate', endDate);\n\n            if (client.features.eventBuffer?.enabled) {\n                eventRecord.event.wrapEndDate = endDate;\n            }\n\n            client.enableEventAnimations = enableEventAnimations;\n        }\n    }\n\n    //endregion\n}\n\nGridFeatureManager.registerFeature(EventSegmentDrag, true, 'SchedulerPro');\nGridFeatureManager.registerFeature(EventSegmentDrag, false, 'ResourceHistogram');\n","import ArrayHelper from '../../Core/helper/ArrayHelper.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport DomSync from '../../Core/helper/DomSync.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\nimport Delayable from '../../Core/mixin/Delayable.js';\nimport InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport AttachToProjectMixin from '../../Scheduler/data/mixin/AttachToProjectMixin.js';\n\n/**\n * @module SchedulerPro/feature/NestedEvents\n */\n\nconst borderWidths     = {\n    border : 1,\n    hollow : 2\n};\n\n// Future improvements might include:\n// * Add info to EventTooltip, parent could display number of children, child could display parent name\n// * Add parent picker to EventEdit\n// * Handle reassigning in editor, what happens if you reassign to a resource that events parent is not assigned to...\n\n// <remove-on-release>\n// TODO: Fix dependencies between parents - needs arcady\n// </remove-on-release>\n\n/**\n * A feature that renders child events nested inside their parent. Requires Scheduler Pro to use a tree event store\n * (normally handled automatically when events in data has children).\n *\n * {@inlineexample SchedulerPro/feature/NestedEvents.js}\n *\n * The feature has configs for {@link #config-eventLayout}, {@link #config-resourceMargin} and {@link #config-barMargin}\n * that are separate from those on Scheduler Pro and only affect nested events.\n *\n * You can by default drag nested events out of their parents and drop any event onto root level events to nest. The\n * drag and drop behaviour can be customized using the {@link #config-constrainDragToParent},\n * {@link #config-allowNestingOnDrop} and {@link #config-allowDeNestingOnDrop} configs.\n *\n * <div class=\"note\">Note that for a nested event to show up for a resource both the parent and the nested event has to\n * be assigned to that resource.</div>\n *\n * ## Parent / children scheduling\n *\n * Scheduler Pro uses a scheduling engine closely related to the one used by Gantt (a subset of it). It for example\n * schedules based on calendars, dependencies and constraints. Part of its default logic is that parent events start and\n * end dates (and thus duration) is defined by their children. This means that if you remove the latest scheduled child\n * of a parent, the parents end date and duration will be adjusted to match the new latest scheduled child.\n *\n * Depending on what you plan to use nested events for in your application, this might not be the desired behaviour. If\n * you want the parent element to keep its dates regardless of its children, you should flag it as\n * {@link SchedulerPro/model/EventModel#field-manuallyScheduled}.\n *\n * A parent defined like this will shrink / grow with its children:\n *\n * ```json\n * {\n *     \"id\"        : 1,\n *     \"startDate\" : \"2022-03-24\",\n *     \"children\"  : [\n *         ...\n *     ]\n * }\n * ```\n *\n * Try removing an event here to see what happens:\n *\n * {@inlineexample SchedulerPro/feature/NestedEventsNotManually.js}\n *\n * A parent with `manuallyScheduled : true` will **not** shrink / grow with is children:\n *\n * ```json\n * {\n *     \"id\"                : 1,\n *     \"startDate\"         : \"2022-03-24\",\n *     \"duration\"          : 10,\n *     \"manuallyScheduled\" : true\n *     \"children\"          : [\n *         ...\n *     ]\n * }\n * ```\n *\n * Try the same thing here:\n *\n * {@inlineexample SchedulerPro/feature/NestedEventsManually.js}\n *\n * <div class=\"note\">Note that this also makes resizing a parent event that is not manually scheduled useless, it would\n * only snap back to the dates defined by its children. To avoid confusion, resizing is therefor turned off for parent\n * events unless they have `manuallyScheduled: true`</div>\n *\n * ## Drag and drop for parent events\n *\n * Normally the dates of a parent event is defined by its children (as described above), with exception for when drag\n * dropping a parent event along the time axis. In this case the operation will update the dates of all the children,\n * which will thus also move the parent event in time.\n *\n * If a parent event is dragged to a new resource, all its children will also be assigned to that resource.\n *\n * ## Caveats\n *\n * Usage of the feature comes with some requirements/caveats:\n * * As already mentioned, it requires a tree event store\n * * Requires using an AssignmentStore, the legacy single assignment mode does not handle tree stores\n * * Scheduler must use stack or overlap {@link SchedulerPro/view/SchedulerPro#config-eventLayout}, pack not supported\n * * {@link Scheduler/feature/Dependencies} are not supported for nested events\n * * {@link Scheduler/feature/EventDragSelect} is not supported\n * * Multi event drag is not supported for nested events\n * * Cannot {@link Scheduler/feature/EventDragCreate} within parent events\n * * {@link Scheduler/feature/Labels} are not supported for nested events\n * * {@link SchedulerPro/feature/EventBuffer} won't work with nested events\n * * {@link SchedulerPro/feature/TaskEdit} does not allow assigning resources or dependencies to nested events\n *\n * This feature is **off** by default. For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * @classtype nestedEvents\n * @feature\n */\nexport default class NestedEvents extends InstancePlugin.mixin(AttachToProjectMixin, Delayable) {\n    static $name = 'NestedEvents';\n\n    //region Config\n\n    static configurable = {\n        /**\n         * This config defines how to handle overlapping nested events. Valid values are:\n         * - `stack`, events use fixed height and stack on top of each other (not supported in vertical mode)\n         * - `pack`, adjusts event height\n         * - `none`, allows events to overlap\n         *\n         * <div class=\"note\">Note that stacking works differently for nested events as compared to normal events (and\n         * not at all in vertical mode). The height of the parent event will never change, all nested events use\n         * {@link #config-eventHeight fixed height} and will stack until all available space is consumed, after which\n         * they will overflow the parent.</div>\n         *\n         * <div class=\"note\">Also note that stacked nested events are clipped by the parent, making it scrollable on\n         * vertical overflow. This cannot be combined with sticky events. If stacking events in your app won't overflow\n         * the parent, you can specify `overflow: visible` on `.b-nested-events-container.b-nested-events-layout-stack`\n         * to not clip and make sticky events work.</div>\n         *\n         * @prp {'stack'|'pack'|'none'}\n         * @default\n         */\n        eventLayout : 'pack',\n\n        /**\n         * Vertical (horizontal in vertical mode) space between nested event bars, in px\n         * @prp {Number}\n         * @default\n         */\n        barMargin : 5,\n\n        /**\n         * Margin above first nested event bar and below last (or before / after in vertical mode), in px\n         * @prp {Number}\n         * @default\n         */\n        resourceMargin : 0,\n\n        /**\n         * Fixed event height (width in vertical mode) to use when configured with `eventLayout : 'stack'`.\n         *\n         * Also accepts an array, used to control height for each level if nesting deeper than 1 level. Make sure you\n         * supply a value for each level, where later values are smaller than earlier ones.\n         *\n         * ```javascript\n         * const scheduler = new SchedulerPro({\n         *     features : {\n         *         nestedEvents : {\n         *         eventHeight : [40, 20]\n         *     }\n         * });\n         * ```\n         *\n         * @prp {Number|Number[]}\n         * @default\n         */\n        eventHeight : 30,\n\n        /**\n         * Space (in px) in a parent element reserved for displaying a title etc. Used to compute available space for\n         * the nested events container inside the parent.\n         *\n         * Setting this config updates the ` --schedulerpro-nested-event-header-height` CSS variable.\n         *\n         * @prp {Number}\n         * @default\n         */\n        headerHeight : 20,\n\n        /**\n         * Constrains dragging of nested events within their parent when configured as `true`, allows them to be\n         * dragged out of it when configured as `false` (the default).\n         * @prp {Boolean}\n         * @default\n         */\n        constrainDragToParent : false,\n\n        /**\n         * Allow an event to be dropped on another to nest it.\n         *\n         * Dropping an event on another will add the dropped event as a child of the target, turning the target into a\n         * parent if it was not already.\n         *\n         * Parent events dropped on another event are ignored.\n         *\n         * @prp {Boolean}\n         * @default\n         */\n        allowNestingOnDrop : true,\n\n        /**\n         * Allow dropping a nested event directly on a resource to de-nest it, turning it into an ordinary event.\n         *\n         * Requires {@link #config-constrainDragToParent} to be configured with `false` to be applicable.\n         *\n         * @prp {Boolean}\n         * @default\n         */\n        allowDeNestingOnDrop : true,\n\n        /**\n         * Constrains resizing of nested events to their parents start and end dates when configured as `true` (the\n         * default), preventing them from changing their parents dates.\n         *\n         * Configure as `false` if you want to allow resizing operations to extend the parents dates (only applies for\n         * parents not configured with `manuallyScheduled: true`).\n         *\n         * <div class=\"note\">Note that when using `eventLayout: stack` the nested events are clipped by the parent, the\n         * part extending outside if not constrained to parent will not be shown until it re-renders after resize. If\n         * stacking events in your app won't overflow the parent, you can specify `overflow: visible` on\n         * `.b-nested-events-container.b-nested-events-layout-stack` to not clip.</div>\n         *\n         * @prp {Boolean}\n         * @default\n         */\n        constrainResizeToParent : true,\n\n        /**\n         * Maximum nesting level for events.\n         *\n         * Larger depths than 2 are not recommended, even if technically possible.\n         *\n         * @prp {Number}\n         * @default\n         */\n        maxNesting : 1\n    };\n\n    static pluginConfig = {\n        before : ['onEventStoreBatchedUpdate'],\n        chain  : [\n            'getEventsToRender', 'processEventDrop', 'processCrossSchedulerEventDrop',\n            'beforeEventDragStart', 'afterEventDragStart', 'afterEventDragAbortFinalized',\n            'checkEventDragValidity', 'afterEventResizeStart', 'afterRenderEvent'\n        ],\n        override : [\n            'getResourceMargin', 'getBarMargin', 'getAppliedResourceHeight', 'getResourceWidth', 'getEventLayout',\n            'getElementFromAssignmentRecord', 'scheduleEvent'\n        ]\n    };\n\n    static delayable = {\n        refreshClient : 'raf'\n    };\n\n    //endregion\n\n    construct(client, config) {\n        super.construct(client, config);\n\n        // EventStore has to be a tree store for the feature to work.\n        // If it starts empty, it might not be flagged as such. Help it out.\n        this.client.eventStore.tree = true;\n    }\n\n    refreshClient() {\n        !this.client.isConfiguring && this.client.refreshWithTransition();\n    }\n\n    doDisable() {\n        this.refreshClient();\n    }\n\n    //region Props\n\n    updateEventLayout(layout) {\n        if (layout === 'stack' && this.client.isVertical) {\n            console.warn('Stacked nested events are not supported in vertical mode');\n        }\n\n        this.refreshClient();\n    }\n\n    updateBarMargin() {\n        this.refreshClient();\n    }\n\n    updateResourceMargin() {\n        this.refreshClient();\n    }\n\n    changeEventHeight(height) {\n        // Always an array for internal use, would be breaking to change it externally\n        this._eventHeights = ArrayHelper.asArray(height);\n\n        return height;\n    }\n\n    updateEventHeight() {\n        this.refreshClient();\n    }\n\n    updateHeaderHeight(height) {\n        this.client.element.style.setProperty('--schedulerpro-nested-event-header-height', `${height}px`);\n        this.refreshClient();\n    }\n\n    // Nested events has their own layout setting\n    getEventLayout(resourceRecord, parentEventRecord) {\n        if (parentEventRecord) {\n            return { type : this.eventLayout };\n        }\n\n        return this.overridden.getEventLayout(resourceRecord);\n    }\n\n    // Specific resource margin for nested events\n    getResourceMargin(resourceRecord, parentEventRecord) {\n        if (parentEventRecord && !parentEventRecord.isRoot) {\n            return this.resourceMargin;\n        }\n\n        return this.overridden.getResourceMargin(resourceRecord);\n    }\n\n    // Specific bar margin for nested events\n    getBarMargin(resourceRecord, parentEventRecord) {\n        if (parentEventRecord && !parentEventRecord.isRoot) {\n            return this.barMargin;\n        }\n\n        return this.overridden.getBarMargin(resourceRecord);\n    }\n\n    // Use height available inside the parent event\n    getAppliedResourceHeight(resourceRecord, parentEventRecord) {\n        const me = this;\n\n        if (parentEventRecord && !parentEventRecord.isRoot) {\n            if (me.eventLayout === 'stack') {\n                const eventHeight = me._eventHeights[parentEventRecord.childLevel];\n                // Layout subtracts resourceMargin * 2, added here to get eventHeight correct after\n                return eventHeight + me.resourceMargin * 2;\n            }\n            else {\n                const borderWidth = borderWidths[me.client.getEventStyle(parentEventRecord, resourceRecord)] ?? 0;\n                return me.currentParentsHeight - me.headerHeight - borderWidth;\n            }\n        }\n\n        return me.overridden.getAppliedResourceHeight(resourceRecord);\n    }\n\n    getResourceWidth(resourceRecord, parentEventRecord) {\n        if (parentEventRecord && !parentEventRecord.isRoot) {\n            return this.currentParentsWidth - this.headerHeight;\n        }\n\n        return this.overridden.getResourceWidth(resourceRecord);\n    }\n\n    //endregion\n\n    //region CRUD listeners\n\n    attachToEventStore(eventStore) {\n        eventStore?.ion({\n            name    : 'eventStore',\n            change  : 'onEventStoreChange',\n            thisObj : this\n        });\n    }\n\n    onEventStoreChange({ records }) {\n        // Refresh if a nested event was changed\n        if (records?.some(r => r.parent && !r.parent.isRoot)) {\n            this.refreshClient();\n        }\n    }\n\n    onEventStoreBatchedUpdate({ records }) {\n        // Refresh if a nested event was changed, and we are listening for batched changes (resizing)\n        if (this.client.listenToBatchedUpdates && records?.some(r => r.parent && !r.parent.isRoot)) {\n            this.refreshClient();\n            // Prevent default handler\n            return false;\n        }\n    }\n\n    //endregion\n\n    //region Drag\n\n    // Move event element to foreground canvas during drag. Has to happen before drag starts for the feature to pick up\n    // correct coordinates to resolve resource by, transition back to on abort etc.\n    beforeEventDragStart(context, dragData) {\n        const\n            me                                 = this,\n            { client }                         = me,\n            { eventRecord, assignmentRecords } = dragData,\n            { parentElement }                  = context.element;\n\n        // Dragging nested events?\n        if (eventRecord.parent && parentElement !== client.foregroundCanvas) {\n            me.isDraggingNestedEvent = true;\n\n            // Remember origin to be able to restore on abort (success redraws so that will be covered anyway)\n            context.originalParentElement = parentElement;\n            context.originalBounds = [];\n\n            for (const assignment of assignmentRecords) {\n                const { event } = assignment;\n\n                // UI should not allow selecting nested events from different parents, but it is programmatically\n                // possible. We only include from the dragged events parent here, behaviour for mixed parents are for\n                // now undefined\n                if (event.parent === eventRecord.parent) {\n                    const eventElement = client.getElementFromAssignmentRecord(assignment, true);\n\n                    context.originalBounds.push({\n                        element : eventElement,\n                        bounds  : Rectangle.from(eventElement, parentElement)\n                    });\n\n                    if (!me.constrainDragToParent && client.features.eventDrag.constrainDragToTimeline) {\n                        // Pull nested events out\n                        const relativeBounds = Rectangle.from(eventElement, client.timeAxisSubGridElement);\n                        eventElement.style.top = `${relativeBounds.top}px`;\n                        eventElement.style.left = `${relativeBounds.left}px`;\n\n                        DomSync.addChild(client.foregroundCanvas, eventElement, assignment.id);\n                    }\n                }\n            }\n        }\n        else {\n            me.isDraggingNestedEvent = false;\n        }\n    }\n\n    // Setup constraints when drag starts if needed\n    afterEventDragStart(context, dragData) {\n        // Constrain to current parent?\n        if (this.isDraggingNestedEvent && this.constrainDragToParent) {\n            const\n                { eventDrag } = this.client.features,\n                { parent }    = dragData.eventRecord,\n                parentBounds  = context.originalParentElement.getBoundingClientRect();\n\n            // Constrain top / bottom\n            eventDrag.setYConstraint(0, parentBounds.height - context.originalBounds[0].bounds.height);\n\n            // For left / right we also have to constrain the dates, otherwise only the element will be constrained\n            eventDrag.setXConstraint(0, parentBounds.width - context.originalBounds[0].bounds.width);\n            dragData.dateConstraints = { start : parent.startDate, end : parent.endDate };\n        }\n    }\n\n    checkEventDragValidity({ targetEventRecord, eventRecord, timeDiff, newResource, resourceRecord }) {\n        const me = this;\n\n        // Disallow dropping on a blank space in a resource if configured to not allow de-nesting\n        // (ignore first round, targetEventRecord cannot be resolved until on next, which we determine here by checking\n        // timeDiff or resource change)\n        if (me.isDraggingNestedEvent && !me.allowDeNestingOnDrop && !targetEventRecord && (timeDiff || newResource !== resourceRecord)) {\n            return {\n                valid   : false,\n                message : me.L('L{deNestingNotAllowed}')\n            };\n        }\n\n        // Disallow dropping on a new parent if configured to not allow nesting\n        if (!me.allowNestingOnDrop && targetEventRecord && targetEventRecord !== eventRecord.parent) {\n            return {\n                valid   : false,\n                message : me.L('L{nestingNotAllowed}')\n            };\n        }\n\n        if (targetEventRecord && targetEventRecord !== eventRecord.parent) {\n            const\n                maxLevel           = me.maxNesting,\n                targetLevel        = targetEventRecord.isParent ? targetEventRecord.childLevel : targetEventRecord.parent.childLevel,\n                maxChildLevel      = Math.max(...eventRecord.allChildren.map(child => child.childLevel)),\n                relativeChildLevel = maxChildLevel - eventRecord.childLevel;\n\n            if (targetLevel + relativeChildLevel >= maxLevel) {\n                return {\n                    valid   : false,\n                    message : me.L('L{nestingNotAllowed}')\n                };\n            }\n        }\n    }\n\n    // Move event to new parent if dropped on a parent or moved out of one\n    processEventDrop({ context, toScheduler, eventRecord, resourceRecord, reassignedFrom, element, eventsToAdd, addedEvents, draggedAssignment }) {\n        const\n            { parent }            = eventRecord,\n            { targetEventRecord } = context;\n\n        let newParent = parent;\n\n        // targetEventRecord is resolved using mouse coords, it might be outside of parent when constrained thus\n        // we have to check if constrained here to not move it out by mistake\n        if (parent !== targetEventRecord && !this.constrainDragToParent) {\n            // Dropped on a new parent and allowed to nest\n            if (targetEventRecord && this.allowNestingOnDrop) {\n                // Allow creating a new parent if dropped on a child of root, otherwise add to the parent\n                newParent = targetEventRecord.isParent ? targetEventRecord : targetEventRecord.parent.isRoot ? targetEventRecord : targetEventRecord.parent;\n                // We resolve resource and targetEventRecord differently (mouse vs element), might get next resource so\n                // we re-resolve here to be sure it is correct\n                const targetResource = this.client.resolveResourceRecord(context.browserEvent);\n                if (targetResource !== resourceRecord) {\n                    resourceRecord = draggedAssignment.resource = targetResource;\n                }\n            }\n            // Dropped directly on resource and allowed to de-nest (cant get here if not allowed, blocked in validation)\n            else {\n                newParent = toScheduler.eventStore.rootNode;\n            }\n\n            if (newParent && newParent !== parent) {\n                addedEvents.push(newParent.appendChild(eventRecord));\n                // Don't want to add it to root when dragging to another scheduler\n                ArrayHelper.remove(eventsToAdd, eventRecord);\n            }\n        }\n\n        // Moved parent to new resource, reassign all children assigned to its previous resource\n        if (eventRecord.isParent && reassignedFrom && reassignedFrom !== resourceRecord) {\n            for (const child of eventRecord.allChildren) {\n                const existingAssignment = child.assignments.find(a => a.resource === reassignedFrom);\n                if (existingAssignment) {\n                    existingAssignment.resource = resourceRecord;\n                }\n            }\n        }\n\n        // Add to new parent (or put back in old) matching outer position. If we don't do this element might get released\n        // on DomSync of foregroundCanvas (also this lets it transition within the parent)\n        if (newParent && !newParent.isRoot) {\n            const\n                newParentElement = this.client.getElementFromEventRecord(newParent, resourceRecord).syncIdMap.nestedEventsContainer,\n                intersection     = newParentElement && Rectangle.from(element, newParentElement);\n\n            // If dropped on a root level leaf it has no nested events container yet\n            if (newParentElement) {\n                element.style.top = `${intersection.top}px`;\n                element.style.left = `${intersection.left}px`;\n\n                // If dropped at the same position in a new parent it won't transition into place if it thinks nothing\n                // changed\n                element.lastDomConfig = null;\n\n                DomSync.addChild(newParentElement, element, element.dataset.syncId);\n            }\n        }\n    }\n\n    // Assign all children to same resource when dropping on another scheduler\n    processCrossSchedulerEventDrop({ eventRecord }) {\n        if (eventRecord.isParent) {\n            for (const child of eventRecord.allChildren) {\n                child.resource = eventRecord.resource;\n            }\n        }\n    }\n\n    // Restore element after abort (back to original parent and position)\n    async afterEventDragAbortFinalized({ originalParentElement, originalBounds }) {\n        if (this.isDraggingNestedEvent) {\n            // Wait for any position transition\n            for (const animation of originalBounds[0].element.getAnimations()) {\n                if (animation.transitionProperty === 'top' || animation.transitionProperty === 'left') {\n                    await animation.finished;\n                }\n            }\n\n            for (const { element, bounds } of originalBounds) {\n                // Move it back\n                element.style.top = `${bounds.top}px`;\n                element.style.left = `${bounds.left}px`;\n                originalParentElement.appendChild(element);\n            }\n        }\n    }\n\n    // Limit resizing to parent bounds if configured to do so (it is the default)\n    afterEventResizeStart(context) {\n        if (this.constrainResizeToParent) {\n            const { parent } = context.timespanRecord;\n            if (parent && !parent.isRoot) {\n                let { startDate, endDate } = parent;\n\n                if (context.dateConstraints) {\n                    startDate = DateHelper.max(startDate, context.dateConstraints.start);\n                    endDate = DateHelper.min(endDate, context.dateConstraints.end);\n                }\n\n                context.dateConstraints = {\n                    start : startDate,\n                    end   : endDate\n                };\n            }\n        }\n    }\n\n    //endregion\n\n    //region Overrides to make scheduler work with nested events\n\n    // Let Scheduler resolve nested events too\n    getElementFromAssignmentRecord(assignmentRecord, returnWrapper) {\n        if (assignmentRecord?.event?.parent && !assignmentRecord.event.parent.isRoot) {\n            const parentElement = this.client.getElementFromEventRecord(assignmentRecord.event.parent, assignmentRecord.resource);\n            return DomSync.getChild(parentElement, `nestedEventsContainer.${assignmentRecord.id}${returnWrapper ? '' : '.event'}`);\n        }\n\n        return this.overridden.getElementFromAssignmentRecord(assignmentRecord, returnWrapper);\n    }\n\n    // Allow scheduling nested events by overriding Schedulers implementation\n    async scheduleEvent({ eventRecord, parentEventRecord, startDate, element }) {\n        // When passed a parent, append to it and assign to its resource\n        if (parentEventRecord) {\n            eventRecord.startDate = startDate;\n            eventRecord = parentEventRecord.appendChild(eventRecord);\n            eventRecord.assign(parentEventRecord.resource);\n\n            // When given an element, it is positioned inside the parent and adopted by DomSync, letting it transition\n            if (element) {\n                const\n                    parentElement = this.client.getElementFromEventRecord(parentEventRecord).syncIdMap.nestedEventsContainer,\n                    eventRect     = Rectangle.from(element, parentElement);\n\n                // Clear translate styles used by DragHelper\n                DomHelper.setTranslateXY(element, 0, 0);\n                DomHelper.setTopLeft(element, eventRect.y, eventRect.x);\n\n                DomSync.addChild(parentElement, element, eventRecord.assignments[0].id);\n            }\n\n            await this.client.project.commitAsync();\n        }\n        else {\n            return this.overridden.scheduleEvent(...arguments);\n        }\n    }\n\n    //endregion\n\n    //region Rendering\n\n    // Hook into event collection to filter out children, since they will be rendered inside their parents\n    getEventsToRender(resourceRecord, eventRecords) {\n        if (!this.disabled) {\n            // Only keep direct children of the root (?. in case someone tries to use a flat store)\n            ArrayHelper.remove(eventRecords, ...eventRecords.filter(eventRecord => eventRecord.isEventModel && !eventRecord.parent.isRoot));\n        }\n\n        return eventRecords;\n    }\n\n    afterRenderEvent({ renderData }) {\n        const\n            { eventRecord } = renderData,\n            { childLevel }  = eventRecord;\n\n        if (eventRecord.isParent) {\n            const\n                me = this,\n                { resourceRecord, width, height, left, top, wrapperCls } = renderData;\n\n            wrapperCls.add('b-nested-events-parent');\n\n            me.currentParentsHeight = height;\n            me.currentParentsWidth = width;\n\n            const\n                {\n                    currentOrientation,\n                    isVertical\n                }                      = me.client,\n                assignedChildren       = eventRecord.children.filter(e => e.$linkedResources?.includes(resourceRecord)),\n                // This call uses the same render path as normal events, applying event layout etc. The layout is then\n                // as needed patched up below (to be relative to parent etc)\n                layouts                = currentOrientation.layoutEvents(resourceRecord, assignedChildren, false, eventRecord, me.overlappingEventSorter),\n                nestedEvents           = [];\n\n            let eventsData;\n\n            if (isVertical) {\n                eventsData = [];\n                for (const layout of Object.values(layouts)) {\n                    eventsData.push(layout.renderData);\n                }\n            }\n            else {\n                eventsData = layouts?.eventsData;\n            }\n\n            if (eventsData) {\n                for (const layout of eventsData) {\n                    // Positioned inside parent\n                    if (isVertical) {\n                        layout.left -= left;\n                        layout.top -= top;\n                        layout.absoluteTop = layout.top;\n                    }\n                    else {\n                        // Special handling for overlap, it does not use the same render path as other layouts\n                        if (me.eventLayout === 'none') {\n                            layout.top = 0;\n                            layout.height = me.getAppliedResourceHeight(resourceRecord, eventRecord);\n                        }\n                        // Stack also needs some special handling of height, since it uses fixed event height\n                        else if (me.eventLayout === 'stack') {\n                            layout.height = me._eventHeights[childLevel];\n                        }\n\n                        layout.absoluteLeft = layout.left;\n                        layout.left -= (renderData.absoluteLeft ?? left);\n                        layout.absoluteTop = layout.top;\n                    }\n\n                    const domConfig = currentOrientation.renderEvent(isVertical ? { renderData : layout } : layout, height);\n                    domConfig.className['b-nested-event'] = 1;\n                    nestedEvents.push(domConfig);\n                }\n            }\n\n            const containerDomConfig = {\n                className : {\n                    'b-nested-events-container'                  : 1,\n                    [`b-nested-events-layout-${me.eventLayout}`] : 1\n                },\n                dataset : {\n                    taskBarFeature : 'nestedEventsContainer'\n                },\n                children    : nestedEvents,\n                syncOptions : {\n                    syncIdField      : 'syncId',\n                    releaseThreshold : 0\n                }\n            };\n\n            // renderData is reused, children are cached. We want ours to be up to date\n            const\n                { children } = renderData,\n                index        = children.findIndex(child => child.dataset.taskBarFeature === 'nestedEventsContainer');\n            if (index === -1) {\n                children.push(containerDomConfig);\n            }\n            else {\n                children.splice(index, 1, containerDomConfig);\n            }\n        }\n\n        renderData.elementConfig.dataset.level = childLevel;\n    }\n\n    //endregion\n}\n\nGridFeatureManager.registerFeature(NestedEvents, false, 'SchedulerPro');\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport ResourceTimeRangesBase from '../../Scheduler/feature/base/ResourceTimeRangesBase.js';\nimport ResourceTimeRangeModel from '../../Scheduler/model/ResourceTimeRangeModel.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\n\n/**\n * @module SchedulerPro/feature/ResourceNonWorkingTime\n */\n\n/**\n * Feature that highlights the non-working intervals for resources based on their {@link SchedulerPro.model.ResourceModel#field-calendar}.\n * If a resource has no calendar defined, the project's calendar will be used. The non-working time interval can\n * also be recurring. You can find a live example showing how to achieve this in the [Resource Non-Working Time Demo](../examples/resource-non-working-time/).\n *\n * {@inlineexample SchedulerPro/feature/ResourceNonWorkingTime.js}\n *\n * ## Data structure\n * Example data defining calendars and assigning the resources a calendar:\n * ```javascript\n * {\n *   \"success\"   : true,\n *   \"calendars\" : {\n *       \"rows\" : [\n *           {\n *               \"id\"                       : \"day\",\n *               \"name\"                     : \"Day shift\",\n *               \"unspecifiedTimeIsWorking\" : false,\n *               \"cls\"                      : \"dayshift\",\n *               \"intervals\"                : [\n *                   {\n *                       \"recurrentStartDate\" : \"at 8:00\",\n *                       \"recurrentEndDate\"   : \"at 17:00\",\n *                       \"isWorking\"          : true,\n *                   }\n *               ]\n *           }\n *    ],\n *    \"resources\" : {\n *       \"rows\" : [\n *           {\n *               \"id\"         : 1,\n *               \"name\"       : \"George\",\n *               \"calendar\"   : \"day\",\n *               \"role\"       : \"Office\",\n *               \"eventColor\" : \"blue\"\n *           },\n *           {\n *               \"id\"         : 2,\n *               \"name\"       : \"Rob\",\n *               \"calendar\"   : \"day\",\n *               \"role\"       : \"Office\",\n *               \"eventColor\" : \"blue\"\n *           }\n *        ]\n *   [...]\n * ```\n *\n * ```javascript\n * const scheduler = new SchedulerPro({\n *   // A Project holding the data and the calculation engine for Scheduler Pro. It also acts as a CrudManager, allowing\n *   // loading data into all stores at once\n *   project : {\n *       autoLoad  : true,\n *       transport : {\n *           load : {\n *               url : './data/data.json'\n *           }\n *       }\n *   },\n *   features : {\n *       resourceNonWorkingTime : true\n *   },\n *   [...]\n * }):\n * ```\n *\n * ## Styling non-working time interval elements\n *\n * To style the elements representing the non-working time elements you can set the {@link SchedulerPro.model.CalendarModel#field-cls}\n * field in your data. This will add a CSS class to all non-working time elements for the calendar. You can also add\n * an {@link SchedulerPro.model.CalendarModel#field-iconCls} value specifying an icon to display inside the interval.\n *\n * ```javascript\n * {\n *   \"success\"   : true,\n *   \"calendars\" : {\n *       \"rows\" : [\n *           {\n *               \"id\"                       : \"day\",\n *               \"name\"                     : \"Day shift\",\n *               \"unspecifiedTimeIsWorking\" : false,\n *               \"cls\"                      : \"dayshift\",\n *               \"intervals\"                : [\n *                   {\n *                       \"recurrentStartDate\" : \"at 8:00\",\n *                       \"recurrentEndDate\"   : \"at 17:00\",\n *                       \"isWorking\"          : true\n *                   }\n *               ]\n *           }\n *       ]\n *    }\n * }\n * ```\n *\n * You can also add a `cls` value and an `iconCls` to **individual** intervals:\n *\n * ```javascript\n * {\n *   \"success\"   : true,\n *   \"calendars\" : {\n *       \"rows\" : [\n *           {\n *               \"id\"                       : \"day\",\n *               \"name\"                     : \"Day shift\",\n *               \"unspecifiedTimeIsWorking\" : true,\n *               \"intervals\"                : [\n *                   {\n *                      \"startDate\"          : \"2022-03-23T02:00\",\n *                      \"endDate\"            : \"2022-03-23T04:00\",\n *                      \"isWorking\"          : false,\n *                      \"cls\"                : \"factoryShutdown\",\n *                      \"iconCls\"            : \"warningIcon\"\n *                  }\n *               ]\n *           }\n *       ]\n *    }\n * }\n * ```\n *\n * This feature is **off** by default. For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * @extends Scheduler/feature/base/ResourceTimeRangesBase\n * @demo SchedulerPro/resource-non-working-time\n * @classtype resourceNonWorkingTime\n * @feature\n */\nexport default class ResourceNonWorkingTime extends ResourceTimeRangesBase {\n\n    //region Config\n\n    static $name = 'ResourceNonWorkingTime';\n\n    static configurable = {\n        rangeCls : 'b-sch-resourcenonworkingtime',\n\n        /**\n         * The largest time axis unit to display non working ranges for ('hour' or 'day' etc).\n         * When zooming to a view with a larger unit, no non-working time elements will be rendered.\n         *\n         * **Note:** Be careful with setting this config to big units like 'year'. When doing this,\n         * make sure the timeline {@link Scheduler.view.TimelineBase#config-startDate start} and\n         * {@link Scheduler.view.TimelineBase#config-endDate end} dates are set tightly.\n         * When using a long range (for example many years) with non-working time elements rendered per hour,\n         * you will end up with millions of elements, impacting performance.\n         * When zooming, use the {@link Scheduler.view.mixin.TimelineZoomable#config-zoomKeepsOriginalTimespan} config.\n         * @config {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'}\n         * @default\n         */\n        maxTimeAxisUnit : 'hour',\n\n        /**\n         * Set to `true` to allow mouse interactions with the rendered range elements. By default, the range elements\n         * are not reachable with the mouse, and only serve as a static background.\n         * @prp {Boolean}\n         * @default\n         */\n        enableMouseEvents : false,\n\n        /**\n         * The Model class to use for representing a {@link Scheduler.model.ResourceTimeRangeModel}\n         * @config {Function}\n         */\n        resourceTimeRangeModelClass : ResourceTimeRangeModel,\n\n        entityName : 'resourceNonWorkingTime'\n    };\n\n    // Cannot use `static properties = {}`, new Map would pollute the prototype\n    static get properties() {\n        return {\n            resourceMap : new Map()\n        };\n    };\n\n    //endregion\n\n    //region Constructor\n\n    construct() {\n        super.construct(...arguments);\n\n        this.resourceTimeRangeModelClass = class ResourceNonWorkingTimeModel extends this.resourceTimeRangeModelClass {\n            static $name = 'ResourceNonWorkingTimeModel';\n            static domIdPrefix = 'resourcenonworkingtimemodel';\n        };\n\n        this.client.timeAxis.ion({\n            name        : 'timeAxis',\n            reconfigure : 'onTimeAxisReconfigure',\n            // should trigger before event rendering chain\n            prio        : 100,\n            thisObj     : this\n        });\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Triggered for mouse down ona resource nonworking time range. Only triggered if the ResourceNonWorkingTime feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceNonWorkingTimeMouseDown\n     * @param {SchedulerPro.view.SchedulerPro} source This Scheduler\n     * @param {SchedulerPro.feature.ResourceNonWorkingTime} feature The ResourceNonWorkingTime feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    /**\n     * Triggered for mouse up ona resource nonworking time range. Only triggered if the ResourceNonWorkingTime feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceNonWorkingTimeMouseUp\n     * @param {SchedulerPro.view.SchedulerPro} source This Scheduler\n     * @param {SchedulerPro.feature.ResourceNonWorkingTime} feature The ResourceNonWorkingTime feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    /**\n     * Triggered for click on a resource nonworking time range. Only triggered if the ResourceNonWorkingTime feature is configured with\n     * `enableMouseEvents: true`.\n     * @event resourceNonWorkingTimeClick\n     * @param {SchedulerPro.view.SchedulerPro} source This Scheduler\n     * @param {SchedulerPro.feature.ResourceNonWorkingTime} feature The ResourceNonWorkingTime feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    /**\n     * Triggered for double-click on a resource nonworking time range. Only triggered if the ResourceNonWorkingTime feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceNonWorkingTimeDblClick\n     * @param {SchedulerPro.view.SchedulerPro} source This Scheduler\n     * @param {SchedulerPro.feature.ResourceNonWorkingTime} feature The ResourceNonWorkingTime feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    /**\n     * Triggered for right-click on a resource nonworking time range. Only triggered if the ResourceNonWorkingTime feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceNonWorkingTimeContextMenu\n     * @param {SchedulerPro.view.SchedulerPro} source This Scheduler\n     * @param {SchedulerPro.feature.ResourceNonWorkingTime} feature The ResourceNonWorkingTime feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    /**\n     * Triggered for mouse over on a resource nonworking time range. Only triggered if the ResourceNonWorkingTime feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceNonWorkingTimeMouseOver\n     * @param {SchedulerPro.view.SchedulerPro} source This Scheduler\n     * @param {SchedulerPro.feature.ResourceNonWorkingTime} feature The ResourceNonWorkingTime feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    /**\n     * Triggered for mouse out of a resource nonworking time range. Only triggered if the ResourceNonWorkingTime feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceNonWorkingTimeMouseOut\n     * @param {SchedulerPro.view.SchedulerPro} source This Scheduler\n     * @param {SchedulerPro.feature.ResourceNonWorkingTime} feature The ResourceNonWorkingTime feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    //endregion\n\n    //region Init\n\n    attachToResourceStore(resourceStore) {\n        super.attachToResourceStore(resourceStore);\n\n        resourceStore?.ion({\n            name            : 'resourceStore',\n            changePreCommit : 'onResourceChange',\n            thisObj         : this\n        });\n    }\n\n    attachToCalendarManagerStore(calendarManagerStore) {\n        super.attachToCalendarManagerStore(calendarManagerStore);\n\n        calendarManagerStore?.ion({\n            name            : 'calendarManagerStore',\n            changePreCommit : 'onCalendarChange',\n            thisObj         : this\n        });\n    }\n\n    //endregion\n\n    //region Events\n\n    onTimeAxisReconfigure() {\n        // reset ranges cache on timeAxis change\n        this.resourceMap.clear();\n    }\n\n    onResourceChange({ action, records, record, changes }) {\n        const me = this;\n\n        // Might need to redraw on update\n        if (action === 'update') {\n            const change = changes.calendar;\n\n            // Ignore calendar normalization\n            if (change && (typeof change.oldValue !== 'string' || change.value?.id !== change.oldValue)) {\n                me.resourceMap.delete(record.id);\n                // Redraw row in case calendar change did not affect any events\n                me.client.runWithTransition(() => {\n                    me.client.currentOrientation.refreshEventsForResource(record);\n                });\n            }\n        }\n\n        // Keep map up to date on removals (adds are handled through rendering in getEventsToRender)\n        if (action === 'remove') {\n            records.forEach(record => me.resourceMap.delete(record.id));\n        }\n\n        if (action === 'removeall') {\n            me.resourceMap.clear();\n        }\n    }\n\n    onCalendarChange({ action, records, record, changes }) {\n        this.resourceMap.clear();\n        this.client.refresh();\n    }\n\n    //endregion\n\n    //region Internal\n\n    // Called on render of resources events to get events to render. Add any ranges\n    // (chained function from Scheduler)\n    getEventsToRender(resource, events) {\n        const\n            me                      = this,\n            { resourceMap, client } = me,\n            { timeAxis }            = client,\n            shouldPaint             = !me.maxTimeAxisUnit || DateHelper.compareUnits(timeAxis.unit, me.maxTimeAxisUnit) <= 0;\n\n        if (!me.disabled && shouldPaint && resource.effectiveCalendar) {\n            if (!resourceMap.has(resource.id)) {\n                const\n                    ranges  = resource.effectiveCalendar.getNonWorkingTimeRanges(\n                        client.startDate,\n                        client.endDate\n                    ),\n                    records = ranges.map((range, i) => new me.resourceTimeRangeModelClass({\n                        id           : `r${resource.id}i${i}`,\n                        iconCls      : range.iconCls || resource.effectiveCalendar.iconCls || '',\n                        cls          : `${resource.effectiveCalendar.cls || ''} ${range.cls || ''}`,\n                        startDate    : range.startDate,\n                        endDate      : range.endDate,\n                        name         : range.name || '',\n                        resourceId   : resource.id,\n                        isNonWorking : true\n                    }));\n\n                resourceMap.set(resource.id, records);\n            }\n\n            events.push(...resourceMap.get(resource.id));\n        }\n\n        return events;\n    }\n\n    shouldInclude({ isNonWorking }) {\n        return isNonWorking;\n    }\n\n    /**\n     * Returns a resource nonworking time range record from the passed element\n     * @param {HTMLElement} rangeElement\n     * @returns {Scheduler.model.ResourceTimeRangeModel}\n     * @category DOM\n     */\n    resolveResourceNonWorkingTimeInterval(rangeElement) {\n        return rangeElement?.closest('.b-sch-resourcenonworkingtime')?.elementData.eventRecord;\n    }\n\n    //endregion\n\n}\n\n// No feature based styling needed, do not add a cls to Scheduler\nResourceNonWorkingTime.featureClass = '';\n\nGridFeatureManager.registerFeature(ResourceNonWorkingTime, false, 'SchedulerPro');\n","import InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport DomSync from '../../Core/helper/DomSync.js';\nimport EventHelper from '../../Core/helper/EventHelper.js';\n\n/**\n * @module SchedulerPro/feature/TimeSpanHighlight\n */\n\nconst\n    timespanDefaults = {\n        isHighlightConfig : true,\n        clearExisting     : false\n    };\n\n/**\n * An object describing the time span region to highlight.\n *\n * @typedef {Object} HighlightTimeSpan\n * @property {Date} startDate A start date constraining the region\n * @property {Date} endDate An end date constraining the region\n * @property {String} name A name to show in the highlight element\n * @property {Scheduler.model.ResourceModel} [resourceRecord] The resource record (applicable for Scheduler only)\n * @property {Core.data.Model} [taskRecord] The task record (applicable for Gantt only)\n * @property {String} [cls] A CSS class to add to the highlight element\n * @property {Boolean} [clearExisting=true] `false` to keep existing highlight elements\n * @property {String} [animationId] An id to enable animation of highlight elements\n * @property {Boolean} [surround=false] True to shade the time axis areas before and after the time span\n * (adds a `b-unavailable` CSS class which you can use for styling)\n * @property {Number} [padding] Inflates the non-timeaxis sides of the region by this many pixels\n */\n\n/**\n * This feature exposes methods on the owning timeline widget which you can use to highlight one or multiple time spans\n * in the schedule. Please see {@link #function-highlightTimeSpan} and {@link #function-highlightTimeSpans} to learn\n * more or try the demo below:\n *\n * {@inlineexample SchedulerPro/feature/TimeSpanHighlight.js}\n *\n * ## Example usage with Scheduler Pro\n *\n * ```javascript\n * const scheduler = new SchedulerPro({\n *     features : {\n *         timeSpanHighlight : true\n *     }\n * })\n *\n * scheduler.highlightTimeSpan({\n *      startDate : new Date(2022, 4, 1),\n *      endDate   : new Date(2022, 4, 5),\n *      name      : 'Time off'\n * });\n * ```\n *\n * ## Example usage with Gantt\n *\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         timeSpanHighlight : true\n *     }\n * })\n *\n * gantt.highlightTimeSpan({\n *      startDate : new Date(2022, 4, 1),\n *      endDate   : new Date(2022, 4, 5),\n *      padding   : 10, // Some \"air\" around the rectangle\n *      taskRecord, // You can also highlight an area specific to a Gantt task\n *      name      : 'Time off'\n * });\n * ```\n *\n * This feature is **disabled** by default.\n *\n * @extends Core/mixin/InstancePlugin\n * @classtype timeSpanHighlight\n * @feature\n * @demo SchedulerPro/highlight-time-spans\n */\nexport default class TimeSpanHighlight extends InstancePlugin {\n\n    //region Config\n    domConfigs = [];\n    configs = [];\n\n    static get $name() {\n        return 'TimeSpanHighlight';\n    }\n\n    static get configurable() {\n        return {\n            padding : 0\n        };\n    }\n\n    static get pluginConfig() {\n        return {\n            assign : [\n                'highlightTimeSpan',\n                'highlightTimeSpans',\n                'unhighlightTimeSpans'\n            ],\n            chain : [\n                'onTimeAxisViewModelUpdate'\n            ]\n        };\n    }\n\n    //endregion\n\n    construct() {\n        super.construct(...arguments);\n\n        this.client.rowManager.ion({\n            renderDone : this.onViewChanged,\n            thisObj    : this\n        });\n    }\n\n    /**\n     * Highlights the region representing the passed time span and optionally for a single certain resource.\n     * @on-owner\n     * @param {HighlightTimeSpan} options A single options object describing the time span to highlight.\n     */\n    highlightTimeSpan(config, draw = true) {\n        const\n            me         = this,\n            {\n                startDate,\n                endDate,\n                name,\n                surround,\n                padding       = me.padding,\n                clearExisting = true\n            }          = config,\n            { client } = me,\n            taskRecord = config.isTimeSpan ? config : config.taskRecord;\n\n        // The resource property allows an actual TaskRecord to be used as a config.\n        let resourceRecord  = config.resourceRecord || config.resource;\n        const { animationId } = config;\n\n        if (animationId) {\n            DomHelper.addTemporaryClass(client.element, 'b-transition-highlight', 500, client);\n        }\n\n        if (clearExisting) {\n            me.domConfigs.length = me.configs.length = 0;\n        }\n\n        if (me.disabled) {\n            // nothing to highlight\n            return;\n        }\n\n        if (surround) {\n            me.surroundTimeSpan(config);\n            return;\n        }\n\n        me.configs.push(config);\n\n        let rect;\n        if (client.isGanttBase) {\n            rect = client.getScheduleRegion(taskRecord, true, { start : startDate, end : endDate });\n        }\n        else {\n            if (resourceRecord) {\n                // Allows resolving link from original in TreeGrouped scheduler\n                resourceRecord = client.store.getById(resourceRecord);\n            }\n\n            rect = client.getScheduleRegion(resourceRecord, null, true, { start : startDate, end : endDate }, !resourceRecord);\n        }\n\n        if (!rect) {\n            // nothing to highlight\n            return;\n        }\n\n        if (padding) {\n            if (client.isHorizontal) {\n                rect.inflate(padding, 0, padding, 0);\n            }\n            else {\n                rect.inflate(0, padding, 0, padding);\n            }\n        }\n\n        me.domConfigs.push(\n            rect.visualize({\n                children : [\n                    {\n                        class : 'b-sch-highlighted-range-name',\n                        html  : name\n                    }\n                ],\n                dataset : {\n                    syncId : animationId\n                },\n                class : {\n                    'b-sch-highlighted-range'                           : 1,\n                    [config.cls]                                        : config.cls,\n                    [config.class || 'b-sch-highlighted-range-default'] : 1\n                }\n            }, true)\n        );\n\n        if (draw) {\n            me.draw();\n        }\n\n        client.syncSplits?.(split => split.highlightTimeSpan(config, draw));\n    }\n\n    draw() {\n        DomSync.sync({\n            targetElement : this.containerEl,\n            domConfig     : {\n                onlyChildren : true,\n                children     : this.domConfigs\n            }\n        });\n    }\n\n    surroundTimeSpan(timeSpan) {\n        this.highlightTimeSpans([\n            Object.assign({}, timeSpan, {\n                animationId : (timeSpan.animationId || '') + 'Before',\n                class       : 'b-unavailable',\n                surround    : false,\n                startDate   : this.client.startDate,\n                endDate     : timeSpan.startDate\n            }),\n            Object.assign({}, timeSpan, {\n                animationId : (timeSpan.animationId || '') + 'After',\n                class       : 'b-unavailable',\n                surround    : false,\n                startDate   : timeSpan.endDate,\n                endDate     : this.client.endDate\n            })\n        ], { clearExisting : timeSpan.clearExisting });\n    }\n\n    /**\n     * Highlights the regions representing the passed time spans.\n     * @on-owner\n     * @param {HighlightTimeSpan[]} timeSpans An array of objects with start/end dates describing the rectangle to highlight.\n     * @param {Object} [options] A single options object\n     * @param {Boolean} [options.clearExisting=true] Set to `false` to preserve previously highlighted elements\n     */\n    highlightTimeSpans(timeSpans, options = {}) {\n        const\n            me = this,\n            {\n                clearExisting = true\n            }  = options;\n\n        if (clearExisting) {\n            timeSpans = timeSpans.slice();\n            me.domConfigs.length = me.configs.length = 0;\n        }\n\n        if (me.disabled) {\n            return;\n        }\n\n        timeSpans.forEach(timeSpan => {\n            // If we are *re*drawing a set of configs, they will have the isHighlightConfig\n            // property, so we can pass them straight in. If its a config from the outside,\n            // then apply the defaults and the isHighlightConfig flag.\n            me.highlightTimeSpan(timeSpan.isHighlightConfig ? timeSpan : Object.setPrototypeOf(timespanDefaults, timeSpan), false);\n        });\n\n        me.draw();\n    }\n\n    /**\n     * Removes any highlighting elements.\n     * @param {Boolean} [fadeOut] `true` to fade out the highlight elements before removing\n     * @on-owner\n     */\n    async unhighlightTimeSpans(fadeOut = false) {\n        const\n            me         = this,\n            { client } = me;\n\n        if (fadeOut) {\n            DomHelper.addTemporaryClass(client.element, 'b-transition-highlight', 500, client);\n        }\n\n        Array.from(me.containerEl.children).forEach(element => {\n            if (fadeOut) {\n                element.style.opacity = 0;\n                me.fadeOutDetacher    = EventHelper.onTransitionEnd({\n                    element,\n                    property : 'opacity',\n                    thisObj  : client,\n                    handler  : () => {\n                        me.domConfigs.length = me.configs.length = 0;\n                        me.draw();\n                    }\n                });\n            }\n            else {\n                me.domConfigs.length = me.configs.length = 0;\n                me.draw();\n            }\n        });\n\n        client.syncSplits?.(split => split.unhighlightTimeSpans(fadeOut));\n    }\n\n    get containerEl() {\n        if (!this._containerEl) {\n            this._containerEl = DomHelper.createElement({\n                parent        : this.client.foregroundCanvas,\n                retainElement : true,\n                class         : 'b-sch-highlight-container'\n            });\n        }\n\n        return this._containerEl;\n    }\n\n    onTimeAxisViewModelUpdate() {\n        this.onViewChanged();\n    }\n\n    onViewChanged() {\n        if (this.configs.length > 0) {\n            this.highlightTimeSpans(this.configs);\n        }\n    }\n\n    updateDisabled(disabled, was) {\n        if (disabled) {\n            this.unhighlightTimeSpans();\n        }\n\n        super.updateDisabled(disabled, was);\n    }\n\n    // No classname on Scheduler's/Gantt's element\n    get featureClass() {}\n}\n\nGridFeatureManager.registerFeature(TimeSpanHighlight, false, ['SchedulerPro', 'Gantt']);\n","/**\n * @module SchedulerPro/model/changelog/ChangeLogPropertyUpdate\n */\n\n/**\n * An immutable, serializable object that describes an update to a single object property from one value to another.\n */\nexport default class ChangeLogPropertyUpdate {\n\n    static $name = 'ChangeLogPropertyUpdate';\n\n    constructor({ property, before, after }) {\n        Object.assign(this, {\n            /**\n             * @member {String} property A descriptor for the entity (object) affected by this action.\n             * @readonly\n             * @category Common\n             */\n            property,\n\n            /**\n             * @member {String|Number|Object} before The property's value before the action.\n             * @readonly\n             * @immutable\n             * @category Common\n             */\n            before,\n\n            /**\n             * @member {String|Number|Object} after The property's value after the action.\n             * @readonly\n             * @immutable\n             * @category Common\n             */\n            after\n        });\n        Object.freeze(this);\n    }\n}\n","import { SchedulerProProjectMixin } from '../../Engine/quark/model/scheduler_pro/SchedulerProProjectMixin.js';\nimport ProjectModelMixin from '../../Scheduler/model/mixin/ProjectModelMixin.js';\nimport ProjectChangeHandlerMixin from './mixin/ProjectChangeHandlerMixin.js';\n\nimport ProjectCrudManager from '../data/mixin/ProjectCrudManager.js';\n\nimport AssignmentModel from './AssignmentModel.js';\nimport CalendarModel from './CalendarModel.js';\nimport DependencyModel from './DependencyModel.js';\nimport EventModel from './EventModel.js';\nimport ResourceModel from './ResourceModel.js';\n\nimport CalendarManagerStore from '../data/CalendarManagerStore.js';\nimport DependencyStore from '../data/DependencyStore.js';\nimport EventStore from '../data/EventStore.js';\nimport ResourceStore from '../data/ResourceStore.js';\nimport AssignmentStore from '../data/AssignmentStore.js';\nimport StateTrackingManager from '../data/stm/StateTrackingManager.js';\n\n/**\n * @module SchedulerPro/model/ProjectModel\n */\n\n/**\n * Scheduler Pro Project model class - a central place for all data.\n *\n * It holds and links the stores usually used by Scheduler Pro:\n *\n * - {@link SchedulerPro/data/EventStore}\n * - {@link SchedulerPro/data/ResourceStore}\n * - {@link SchedulerPro/data/AssignmentStore}\n * - {@link SchedulerPro/data/DependencyStore}\n * - {@link SchedulerPro/data/CalendarManagerStore}\n * - {@link Scheduler/data/ResourceTimeRangeStore}\n * - {@link #config-timeRangeStore TimeRangeStore}\n *\n * The project uses a scheduling engine to calculate dates, durations and such. It is also responsible for\n * handling references between models, for example to link an event via an assignment to a resource. These operations\n * are asynchronous, a fact that is hidden when working in the Scheduler Pro UI but which you must know about when\n * performing operations on the data level.\n *\n * When there is a change to data that requires something else to be recalculated, the project schedules a calculation\n * (a commit) which happens moments later. It is also possible to trigger these calculations directly. This flow\n * illustrates the process:\n *\n * 1. Something changes which requires the project to recalculate, for example adding a new task:\n *\n * ```javascript\n * const [event] = project.eventStore.add({ startDate, endDate });\n * ```\n *\n * 2. A recalculation is scheduled, thus:\n *\n * ```javascript\n * event.duration; // <- Not yet calculated\n * ```\n *\n * 3. Calculate now instead of waiting for the scheduled calculation\n *\n * ```javascript\n * await project.commitAsync();\n *\n * event.duration; // <- Now available\n * ```\n *\n * Please refer to [this guide](#SchedulerPro/guides/basics/project_data.md) for more information.\n *\n * ## Built in CrudManager\n *\n * Scheduler Pro's project has a {@link Scheduler/crud/AbstractCrudManagerMixin CrudManager} built in. Using it is the recommended\n * way of syncing data between Scheduler Pro and a backend. Example usage:\n *\n * ```javascript\n * const scheduler = new SchedulerPro({\n *     project : {\n *         // Configure urls used by the built in CrudManager\n *         transport : {\n *             load : {\n *                 url : 'php/load.php'\n *             },\n *             sync : {\n *                 url : 'php/sync.php'\n *             }\n *         }\n *     }\n * });\n *\n * // Load data from the backend\n * scheduler.project.load()\n * ```\n *\n * For more information on CrudManager, see Schedulers docs on {@link Scheduler/data/CrudManager}.\n * For a detailed description of the protocol used by CrudManager, see the [Crud manager guide](#Scheduler/guides/data/crud_manager.md)\n *\n * You can access the current Project data changes anytime using the {@link #property-changes} property.\n *\n * ## Working with inline data\n *\n * The project provides an {@link #property-inlineData} getter/setter that can\n * be used to manage data from all Project stores at once. Populating the stores this way can\n * be useful if you do not want to use the CrudManager for server communication but instead load data using Axios\n * or similar.\n *\n * ### Getting data\n * ```javascript\n * const data = scheduler.project.inlineData;\n *\n * // use the data in your application\n * ```\n *\n * ### Setting data\n * ```javascript\n * // Get data from server manually\n * const data = await axios.get('/project?id=12345');\n *\n * // Feed it to the project\n * scheduler.project.inlineData = data;\n * ```\n *\n * See also {@link #function-loadInlineData}\n *\n * ### Getting changed records\n *\n * You can access the changes in the current Project dataset anytime using the {@link #property-changes} property. It\n * returns an object with all changes:\n *\n * ```javascript\n * const changes = project.changes;\n *\n * console.log(changes);\n *\n * > {\n *   tasks : {\n *       updated : [{\n *           name : 'My task',\n *           id   : 12\n *       }]\n *   },\n *   assignments : {\n *       added : [{\n *           event      : 12,\n *           resource   : 7,\n *           units      : 100,\n *           $PhantomId : 'abc123'\n *       }]\n *     }\n * };\n * ```\n *\n * ## Monitoring data changes\n *\n * While it is possible to listen for data changes on the projects individual stores, it is sometimes more convenient\n * to have a centralized place to handle all data changes. By listening for the {@link #event-change change event} your\n * code gets notified when data in any of the stores changes. Useful for example to keep an external data model up to\n * date:\n *\n * ```javascript\n * const scheduler = new SchedulerPro({\n *     project: {\n *         listeners : {\n *             change({ store, action, records }) {\n *                 const { $name } = store.constructor;\n *\n *                 if (action === 'add') {\n *                     externalDataModel.add($name, records);\n *                 }\n *\n *                 if (action === 'remove') {\n *                     externalDataModel.remove($name, records);\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * ## Processing the data loaded from the server\n *\n * If you want to process the data received from the server after loading, you can use\n * the {@link #event-beforeLoadApply} or {@link #event-beforeSyncApply} events:\n *\n * ```javascript\n * const gantt = new Gantt({\n *     project: {\n *         listeners : {\n *             beforeLoadApply({ response }) {\n *                 // do something with load-response object before data is fed to the stores\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * ## Built in StateTrackingManager\n *\n * The project also has a built in {@link Core/data/stm/StateTrackingManager} (STM for short), that\n * handles undo/redo for the project stores (additional stores can also be added). By default, it is only used while\n * editing tasks using the task editor, the editor updates tasks live and uses STM to rollback changes if canceled. But\n * you can enable it to track all project store changes:\n *\n * ```javascript\n * // Enable automatic transaction creation and start recording\n * project.stm.autoRecord = true;\n * project.stm.enable();\n *\n * // Undo a transaction\n * project.stm.undo();\n *\n * // Redo\n * project.stm.redo();\n * ```\n *\n * Check out the `undoredo` demo to see it in action.\n *\n * @mixes Core/mixin/Events\n * @mixes SchedulerPro/data/mixin/PartOfProject\n * @mixes SchedulerPro/data/mixin/ProjectCrudManager\n * @mixes SchedulerPro/model/mixin/ProjectChangeHandlerMixin\n *\n * @extends Scheduler/model/mixin/ProjectModelMixin\n *\n * @typings Scheduler.model.ProjectModel -> Scheduler.model.SchedulerProjectModel\n */\nexport default class ProjectModel extends ProjectChangeHandlerMixin(ProjectCrudManager(ProjectModelMixin(SchedulerProProjectMixin))) {\n    //region Events\n\n    /**\n     * Fired when the engine has finished its calculations and the results has been written back to the records.\n     *\n     * ```javascript\n     * scheduler.project.on({\n     *     dataReady() {\n     *        console.log('Calculations finished');\n     *     }\n     * });\n     *\n     * scheduler.eventStore.first.duration = 10;\n     *\n     * // At some point a bit later it will log 'Calculations finished'\n     * ```\n     *\n     * @event dataReady\n     * @param {SchedulerPro.model.ProjectModel} source The project\n     * @param {Boolean} isInitialCommit Flag that shows if this commit is initial\n     * @param {Set} records Set of all {@link Core.data.Model}s that were modified in the completed transaction.\n     * Use the {@link Core.data.Model#property-modifications} property of each Model to identify\n     * modified fields.\n     */\n\n    /**\n     * Fired during the Engine calculation if {@link #config-enableProgressNotifications enableProgressNotifications} config is `true`\n     * @event progress\n     * @param {Number} total The total number of operations\n     * @param {Number} remaining The number of remaining operations\n     * @param {'storePopulation'|'propagating'} phase The phase of the calculation, either 'storePopulation'\n     * when data is getting loaded, or 'propagating' when data is getting calculated\n     */\n\n    /**\n     * Fired when the Engine detects a computation cycle.\n     * @event cycle\n     * @param {Object} schedulingIssue Scheduling error describing the case:\n     * @param {Function} schedulingIssue.getDescription Returns the cycle description\n     * @param {Object} schedulingIssue.cycle Object providing the cycle info\n     * @param {Function} schedulingIssue.getResolutions Returns possible resolutions\n     * @param {Function} continueWithResolutionResult Function to call after a resolution is chosen to\n     * proceed with the Engine calculations:\n     * ```js\n     * project.on('cycle', ({ continueWithResolutionResult }) => {\n     *     // cancel changes in case of a cycle\n     *     continueWithResolutionResult(EffectResolutionResult.Cancel);\n     * })\n     * ```\n     */\n\n    /**\n     * Fired when the Engine detects a scheduling conflict.\n     * @event schedulingConflict\n     * @param {Object} schedulingIssue The conflict details:\n     * @param {Function} schedulingIssue.getDescription Returns the conflict description\n     * @param {Object[]} schedulingIssue.intervals Array of conflicting intervals\n     * @param {Function} schedulingIssue.getResolutions Function to get possible resolutions\n     * @param {Function} continueWithResolutionResult Function to call after a resolution is chosen to\n     * proceed with the Engine calculations:\n     * ```js\n     * project.on('schedulingConflict', ({ schedulingIssue, continueWithResolutionResult }) => {\n     *     // apply the first resolution and continue\n     *     schedulingIssue.getResolutions()[0].resolve();\n     *     continueWithResolutionResult(EffectResolutionResult.Resume);\n     * })\n     * ```\n     */\n\n    /**\n     * Fired when the Engine detects a calendar misconfiguration when the calendar does\n     * not provide any working periods of time which makes the calendar usage impossible.\n     * @event emptyCalendar\n     * @param {Object} schedulingIssue Scheduling error describing the case:\n     * @param {Function} schedulingIssue.getDescription Returns the error description\n     * @param {Function} schedulingIssue.getCalendar Returns the calendar that must be fixed\n     * @param {Function} schedulingIssue.getResolutions Returns possible resolutions\n     * @param {Function} continueWithResolutionResult Function to call after a resolution is chosen to\n     * proceed with the Engine calculations:\n     * ```js\n     * project.on('emptyCalendar', ({ schedulingIssue, continueWithResolutionResult }) => {\n     *     // apply the first resolution and continue\n     *     schedulingIssue.getResolutions()[0].resolve();\n     *     continueWithResolutionResult(EffectResolutionResult.Resume);\n     * })\n     * ```\n     */\n\n    //endregion\n\n    //region Config\n\n    static get $name() {\n        return 'ProjectModel';\n    }\n\n    /**\n     * Class implementing resource allocation report used by\n     * {@link SchedulerPro.view.ResourceHistogram resource histogram} and\n     * {@link SchedulerPro.view.ResourceUtilization resource utilization} views\n     * for collecting resource allocation.\n     * @config {ResourceAllocationInfo} resourceAllocationInfoClass\n     */\n\n    /**\n     * Silences propagations caused by the project loading.\n     *\n     * Applying the loaded data to the project occurs in two basic stages:\n     *\n     * 1. Data gets into the engine graph which triggers changes propagation\n     * 2. The changes caused by the propagation get written to related stores\n     *\n     * Setting this flag to `true` makes the component perform step 2 silently without triggering events causing reactions on those changes\n     * (like sending changes back to the server if `autoSync` is enabled) and keeping stores in unmodified state.\n     *\n     * This is safe if the loaded data is consistent so propagation doesn't really do any adjustments.\n     * By default the system treats the data as consistent so this option is `true`.\n     *\n     * ```js\n     * new SchedulerPro{\n     *     project : {\n     *         // We want scheduling engine to recalculate the data properly\n     *         // so then we could save it back to the server\n     *         silenceInitialCommit : false,\n     *         ...\n     *     }\n     *     ...\n     * })\n     * ```\n     *\n     * @config {Boolean} silenceInitialCommit\n     * @default true\n     * @category Advanced\n     */\n\n    /**\n     * Maximum range the project calendars can iterate.\n     * The value is defined in milliseconds and by default equals `5 years` roughly.\n     * ```javascript\n     * new SchedulerPro({\n     *     project : {\n     *         // adjust calendar iteration limit to 10 years roughly:\n     *         // 10 years expressed in ms\n     *         maxCalendarRange : 10 * 365 * 24 * 3600000,\n     *         ...\n     *     }\n     * });\n     * ```\n     * @config {Number} maxCalendarRange\n     * @default 157680000000\n     * @category Advanced\n     */\n\n    /**\n     * When `true` the project manually scheduled tasks will adjust their proposed start/end dates\n     * to skip non working time.\n     *\n     * @field {Boolean} skipNonWorkingTimeWhenSchedulingManually\n     * @default false\n     */\n\n    /**\n     * When `true` the project's manually scheduled tasks adjust their duration by excluding the non-working time from it,\n     * according to the calendar. However, this may lead to inconsistencies, when moving an event which both starts\n     * and ends on the non-working time. For such cases you can disable this option.\n     *\n     * Default value is `true`\n     *\n     * IMPORTANT: Setting this option to `false` also forcefully sets the {@link #field-skipNonWorkingTimeWhenSchedulingManually} option\n     * to `false`.\n     * IMPORTANT: This option is going to be disabled by default from version 6.0.0.\n     *\n     * @field {Boolean} skipNonWorkingTimeInDurationWhenSchedulingManually\n     * @default true\n     */\n\n    /**\n     * This config manages DST correction in the scheduling engine. It only has effect when DST transition hour is\n     * working time. Usually DST transition occurs on Sunday, so with non working weekends the DST correction logic\n     * is not involved.\n     *\n     * If **true**, it will add/remove one hour when calculating end date. For example:\n     * Assume weekends are working and on Sunday, 2020-10-25 at 03:00 clocks are set back 1 hour. Assume there is an event:\n     *\n     * ```javascript\n     * {\n     *     startDate    : '2020-10-20',\n     *     duration     : 10 * 24 + 1,\n     *     durationUnit : 'hour'\n     * }\n     * ```\n     * It will end on 2020-10-30 01:00 (which is wrong) but duration will be reported correctly. Because of the DST\n     * transition the SchedulerPro project will add one more hour when calculating the end date.\n     *\n     * Also this may occur when day with DST transition is working but there are non-working intervals between that day\n     * and event end date.\n     *\n     * ```javascript\n     * {\n     *     calendar         : 1,\n     *     calendarsData    : [\n     *         {\n     *             id           : 1,\n     *             startDate    : '2020-10-26',\n     *             endDate      : '2020-10-27',\n     *             isWorking    : false\n     *         }\n     *     ],\n     *     eventsData       : [\n     *         {\n     *             id           : 1,\n     *             startDate    : '2020-10-20',\n     *             endDate      : '2020-10-30'\n     *         },\n     *         {\n     *             id           : 2,\n     *             startDate    : '2020-10-20',\n     *             duration     : 10 * 24 + 1,\n     *             durationUnit : 'hour'\n     *         }\n     *     ]\n     * }\n     * ```\n     *\n     * Event 1 duration will be incorrectly reported as 9 days * 24 hours, missing 1 extra hour added by DST transition.\n     * Event 2 end date will be calculated to 2020-10-30 01:00, adding one extra hour.\n     *\n     * If **false**, the SchedulerPro project will not add DST correction which fixes the quirk mentioned above.\n     * Event 1 duration will be correctly reported as 9 days * 24 hours + 1 hour. Event 2 end date will be calculated\n     * to 2020-10-30.\n     *\n     * Also, for those events days duration will be a floating point number due to extra (or missing) hour:\n     *\n     * ```javascript\n     * eventStore.getById(1).getDuration('day')  // 10.041666666666666\n     * eventStore.getById(1).getDuration('hour') // 241\n     * ```\n     *\n     * @config {Boolean} adjustDurationToDST\n     * @default false\n     */\n\n    // <remove-on-release>\n    // TODO: For 6.0. This config is introduced only to make behavior transition smooth. If nobody complains about it for\n    //  a couple of releases, it should be removed\n    // </remove-on-release>\n\n    /**\n     * The number of hours per day.\n     *\n     * **Please note:** the value **does not define** the amount of **working** time per day\n     * for that purpose one should use calendars.\n     *\n     * The value is used when converting the duration from one unit to another.\n     * So when user enters a duration of, for example, `5 days` the system understands that it\n     * actually means `120 hours` and schedules accordingly.\n     * @field {Number} hoursPerDay\n     * @default 24\n     */\n\n    /**\n     * The number of days per week.\n     *\n     * **Please note:** the value **does not define** the amount of **working** time per week\n     * for that purpose one should use calendars.\n     *\n     * The value is used when converting the duration from one unit to another.\n     * So when user enters a duration of, for example, `2 weeks` the system understands that it\n     * actually means `14 days` (which is then converted to {@link #field-hoursPerDay hours}) and\n     * schedules accordingly.\n     * @field {Number} daysPerWeek\n     * @default 7\n     */\n\n    /**\n     * The number of days per month.\n     *\n     * **Please note:** the value **does not define** the amount of **working** time per month\n     * for that purpose one should use calendars.\n     *\n     * The value is used when converting the duration from one unit to another.\n     * So when user enters a duration of, for example, `1 month` the system understands that it\n     * actually means `30 days` (which is then converted to {@link #field-hoursPerDay hours}) and\n     * schedules accordingly.\n     * @field {Number} daysPerMonth\n     * @default 30\n     */\n\n    /**\n     * The source of the calendar for dependencies (the calendar used for taking dependencies lag into account).\n     * Possible values are:\n     *\n     * - `ToEvent` - successor calendar will be used (default);\n     * - `FromEvent` - predecessor calendar will be used;\n     * - `Project` - the project calendar will be used.\n     *\n     * @field {'ToEvent'|'FromEvent'|'Project'} dependenciesCalendar\n     * @default 'ToEvent'\n     */\n\n    /**\n     * The project calendar.\n     * @field {SchedulerPro.model.CalendarModel} calendar\n     * @accepts {String|CalendarModelConfig|SchedulerPro.model.CalendarModel}\n     */\n\n    /**\n     * Returns current Project changes as an object consisting of added/modified/removed arrays of records for every\n     * managed store. Returns `null` if no changes exist. Format:\n     *\n     * ```javascript\n     * {\n     *     resources : {\n     *         added    : [{ name : 'New guy' }],\n     *         modified : [{ id : 2, name : 'Mike' }],\n     *         removed  : [{ id : 3 }]\n     *     },\n     *     events : {\n     *         modified : [{  id : 12, name : 'Cool task' }]\n     *     },\n     *     ...\n     * }\n     * ```\n     *\n     * @member {Object} changes\n     * @readonly\n     * @category Models & Stores\n     */\n\n    /**\n     * Project changes (CRUD operations to records in its stores) are automatically committed on a buffer to the\n     * underlying graph based calculation engine. The engine performs it calculations async.\n     *\n     * By calling this function, the commit happens right away. And by awaiting it you are sure that project\n     * calculations are finished and that references between records are up to date.\n     *\n     * The returned promise is resolved with an object. If that object has `rejectedWith` set, there has been a conflict and the calculation failed.\n     *\n     * ```javascript\n     * // Move an event in time\n     * eventStore.first.shift(1);\n     *\n     * // Trigger calculations directly and wait for them to finish\n     * const result = await project.commitAsync();\n     *\n     * if (result.rejectedWith) {\n     *     // there was a conflict during the scheduling\n     * }\n     * ```\n     *\n     * @async\n     * @function commitAsync\n     * @category Common\n     */\n\n    /**\n     * Set to `true` to enable calculation progress notifications.\n     * When enabled the project fires {@link #event-progress progress} event.\n     *\n     * **Note**: Enabling progress notifications will impact calculation performance, since it needs to pause calculations to allow redrawing the UI.\n     * @config {Boolean} enableProgressNotifications\n     * @category Advanced\n     */\n    /**\n     * Enables/disables the calculation progress notifications.\n     * @member {Boolean} enableProgressNotifications\n     * @category Advanced\n     */\n\n    /**\n     * If this flag is set to `true` (default) when a start/end date is set on the event, a corresponding\n     * `start-no-earlier/later-than` constraint is added, automatically. This is done in order to\n     * keep the event \"attached\" to this date, according to the user intention.\n     *\n     * Depending on your use case, you might want to disable this behaviour.\n     *\n     * @field {Boolean} addConstraintOnDateSet\n     * @default true\n     */\n\n    static get defaultConfig() {\n        return {\n            /**\n             * @hideproperties project, taskStore\n             */\n\n            //region Inline data configs & properties\n\n            /**\n             * Get/set {@link #property-eventStore} data.\n             *\n             * Always returns an array of {@link SchedulerPro.model.EventModel EventModels} but also accepts an array of\n             * its configuration objects as input.\n             *\n             * @member {SchedulerPro.model.EventModel[]} events\n             * @accepts {SchedulerPro.model.EventModel[]|EventModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-eventStore}. Should be an array of\n             * {@link SchedulerPro.model.EventModel EventModels} or its configuration objects.\n             *\n             * @config {SchedulerPro.model.EventModel[]|EventModelConfig[]} events\n             * @category Inline data\n             */\n\n            /**\n             * Get/set {@link #property-resourceStore} data.\n             *\n             * Always returns an array of {@link SchedulerPro.model.ResourceModel ResourceModels} but also accepts an\n             * array of its configuration objects as input.\n             *\n             * @member {SchedulerPro.model.ResourceModel[]} resources\n             * @accepts {SchedulerPro.model.ResourceModel[]|ResourceModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-resourceStore}. Should be an array of\n             * {@link SchedulerPro.model.ResourceModel ResourceModels} or its configuration objects.\n             *\n             * @config {SchedulerPro.model.ResourceModel[]|ResourceModelConfig[]} resources\n             * @category Inline data\n             */\n\n            /**\n             * Get/set {@link #property-assignmentStore} data.\n             *\n             * Always returns an array of {@link SchedulerPro.model.AssignmentModel AssignmentModels} but also accepts\n             * an array of its configuration objects as input.\n             *\n             * @member {SchedulerPro.model.AssignmentModel[]} assignments\n             * @accepts {SchedulerPro.model.AssignmentModel[]|AssignmentModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-assignmentStore}. Should be an array of\n             * {@link SchedulerPro.model.AssignmentModel AssignmentModels} or its configuration objects.\n             *\n             * @config {SchedulerPro.model.AssignmentModel[]|AssignmentModelConfig[]} assignments\n             * @category Inline data\n             */\n\n            /**\n             * Get/set {@link #property-dependencyStore} data.\n             *\n             * Always returns an array of {@link SchedulerPro.model.DependencyModel DependencyModels} but also accepts an\n             * array of its configuration objects as input.\n             *\n             * @member {SchedulerPro.model.DependencyModel[]} dependencies\n             * @accepts {SchedulerPro.model.DependencyModel[]|DependencyModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-dependencyStore}. Should be an array of\n             * {@link SchedulerPro.model.DependencyModel DependencyModels} or its configuration objects.\n             *\n             * @config {SchedulerPro.model.DependencyModel[]|DependencyModelConfig[]} dependencies\n             * @category Inline data\n             */\n\n            /**\n             * Get/set {@link #property-timeRangeStore} data.\n             *\n             * Always returns an array of {@link Scheduler.model.TimeSpan TimeSpans} but also accepts an\n             * array of its configuration objects as input.\n             *\n             * @member {Scheduler.model.TimeSpan[]} timeRanges\n             * @accepts {Scheduler.model.TimeSpan[]|TimeSpanConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-timeRangeStore}. Should be an array of\n             * {@link Scheduler.model.TimeSpan TimeSpans} or its configuration objects.\n             *\n             * @config {Scheduler.model.TimeSpan[]|TimeSpanConfig[]} timeRanges\n             * @category Inline data\n             */\n\n            /**\n             * Get/set {@link #property-resourceTimeRangeStore} data.\n             *\n             * Always returns an array of {@link Scheduler.model.ResourceTimeRangeModel ResourceTimeRangeModels} but\n             * also accepts an array of its configuration objects as input.\n             *\n             * @member {Scheduler.model.ResourceTimeRangeModel[]} resourceTimeRanges\n             * @accepts {Scheduler.model.ResourceTimeRangeModel[]|ResourceTimeRangeModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-resourceTimeRangeStore}. Should be an array\n             * of {@link Scheduler.model.ResourceTimeRangeModel ResourceTimeRangeModels} or its configuration objects.\n             *\n             * @config {Scheduler.model.ResourceTimeRangeModel[]|ResourceTimeRangeModelConfig[]} resourceTimeRanges\n             * @category Inline data\n             */\n\n            //endregion\n\n            //region Legacy inline data configs & properties\n\n            /**\n             * The initial data, to fill the {@link #property-eventStore eventStore} with.\n             * Should be an array of {@link SchedulerPro.model.EventModel EventModels} or its configuration objects.\n             *\n             * @config {SchedulerPro.model.EventModel[]} eventsData\n             * @category Legacy inline data\n             */\n\n            /**\n             * The initial data, to fill the {@link #property-dependencyStore dependencyStore} with.\n             * Should be an array of {@link SchedulerPro.model.DependencyModel DependencyModels} or its configuration\n             * objects.\n             *\n             * @config {SchedulerPro.model.DependencyModel[]} [dependenciesData]\n             * @category Legacy inline data\n             */\n\n            /**\n             * The initial data, to fill the {@link #property-resourceStore resourceStore} with.\n             * Should be an array of {@link SchedulerPro.model.ResourceModel ResourceModels} or its configuration objects.\n             *\n             * @config {SchedulerPro.model.ResourceModel[]} [resourcesData]\n             * @category Legacy inline data\n             */\n\n            /**\n             * The initial data, to fill the {@link #property-assignmentStore assignmentStore} with.\n             * Should be an array of {@link SchedulerPro.model.AssignmentModel AssignmentModels} or its configuration\n             * objects.\n             *\n             * @config {SchedulerPro.model.AssignmentModel[]} [assignmentsData]\n             * @category Legacy inline data\n             */\n\n            //endregion\n\n            //region Store configs and properties\n\n            /**\n             * The {@link SchedulerPro.data.EventStore store} holding the event information.\n             *\n             * See also {@link SchedulerPro.model.EventModel}\n             *\n             * @member {SchedulerPro.data.EventStore} eventStore\n             * @category Models & Stores\n             */\n            /**\n             * An {@link SchedulerPro.data.EventStore} instance or a config object.\n             * @config {SchedulerPro.data.EventStore|EventStoreConfig} eventStore\n             * @category Models & Stores\n             */\n\n            /**\n             * The {@link SchedulerPro.data.DependencyStore store} holding the dependency information.\n             *\n             * See also {@link SchedulerPro.model.DependencyModel}\n             *\n             * @member {SchedulerPro.data.DependencyStore} dependencyStore\n             * @category Models & Stores\n             */\n            /**\n             * A {@link SchedulerPro.data.DependencyStore} instance or a config object.\n             * @config {SchedulerPro.data.DependencyStore|DependencyStoreConfig} dependencyStore\n             * @category Models & Stores\n             */\n\n            /**\n             * The {@link SchedulerPro.data.ResourceStore store} holding the resources that can be assigned to the\n             * events in the event store.\n             *\n             * See also {@link SchedulerPro.model.ResourceModel}\n             *\n             * @member {SchedulerPro.data.ResourceStore} resourceStore\n             * @category Models & Stores\n             */\n            /**\n             * A {@link SchedulerPro.data.ResourceStore} instance or a config object.\n             * @config {SchedulerPro.data.ResourceStore|ResourceStoreConfig} resourceStore\n             * @category Models & Stores\n             */\n\n            /**\n             * The {@link SchedulerPro.data.AssignmentStore store} holding the assignment information.\n             *\n             * See also {@link SchedulerPro.model.AssignmentModel}\n             *\n             * @member {SchedulerPro.data.AssignmentStore} assignmentStore\n             * @category Models & Stores\n             */\n            /**\n             * An {@link SchedulerPro.data.AssignmentStore} instance or a config object.\n             * @config {SchedulerPro.data.AssignmentStore|AssignmentStoreConfig} assignmentStore\n             * @category Models & Stores\n             */\n\n            /**\n             * The {@link SchedulerPro.data.CalendarManagerStore store} holding the calendar information.\n             *\n             * See also {@link SchedulerPro.model.CalendarModel}\n             * @member {SchedulerPro.data.CalendarManagerStore} calendarManagerStore\n             * @category Models & Stores\n             */\n            /**\n             * A {@link SchedulerPro.data.CalendarManagerStore} instance or a config object.\n             * @config {SchedulerPro.data.CalendarManagerStore|CalendarManagerStoreConfig} calendarManagerStore\n             * @category Models & Stores\n             */\n\n            //endregion\n\n            //region Model & store class configs\n\n            /**\n             * The constructor of the calendar model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the\n             * {@link #property-calendarManagerStore}\n             *\n             * @config {SchedulerPro.model.CalendarModel} [calendarModelClass]\n             * @typings {typeof CalendarModel}\n             * @category Models & Stores\n             */\n            calendarModelClass : CalendarModel,\n\n            /**\n             * The constructor of the dependency model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the {@link #property-dependencyStore}\n             *\n             * @config {SchedulerPro.model.DependencyModel}\n             * @typings {typeof DependencyModel}\n             * @category Models & Stores\n             */\n            dependencyModelClass : DependencyModel,\n\n            /**\n             * The constructor of the event model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the {@link #property-eventStore}\n             *\n             * @config {SchedulerPro.model.EventModel}\n             * @typings {typeof EventModel}\n             * @category Models & Stores\n             */\n            eventModelClass : EventModel,\n\n            /**\n             * The constructor of the assignment model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the {@link #property-assignmentStore}\n             *\n             * @config {SchedulerPro.model.AssignmentModel}\n             * @typings {typeof AssignmentModel}\n             * @category Models & Stores\n             */\n            assignmentModelClass : AssignmentModel,\n\n            /**\n             * The constructor of the resource model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the {@link #property-resourceStore}\n             *\n             * @config {SchedulerPro.model.ResourceModel}\n             * @typings {typeof ResourceModel}\n             * @category Models & Stores\n             */\n            resourceModelClass : ResourceModel,\n\n            /**\n             * The constructor to create a calendar store instance with. Should be a class, subclassing the\n             * {@link SchedulerPro.data.CalendarManagerStore}\n             * @config {SchedulerPro.data.CalendarManagerStore|Object}\n             * @typings {typeof CalendarManagerStore|object}\n             * @category Models & Stores\n             */\n            calendarManagerStoreClass : CalendarManagerStore,\n\n            /**\n             * The constructor to create a dependency store instance with. Should be a class, subclassing the\n             * {@link SchedulerPro.data.DependencyStore}\n             * @config {SchedulerPro.data.DependencyStore|Object}\n             * @typings {typeof DependencyStore|object}\n             * @category Models & Stores\n             */\n            dependencyStoreClass : DependencyStore,\n\n            /**\n             * The constructor to create an event store instance with. Should be a class, subclassing the\n             * {@link SchedulerPro.data.EventStore}\n             * @config {SchedulerPro.data.EventStore|Object}\n             * @typings {typeof EventStore|object}\n             * @category Models & Stores\n             */\n            eventStoreClass : EventStore,\n\n            /**\n             * The constructor to create an assignment store instance with. Should be a class, subclassing the\n             * {@link SchedulerPro.data.AssignmentStore}\n             * @config {SchedulerPro.data.AssignmentStore|Object}\n             * @typings {typeof AssignmentStore|object}\n             * @category Models & Stores\n             */\n            assignmentStoreClass : AssignmentStore,\n\n            /**\n             * The constructor to create a resource store instance with. Should be a class, subclassing the\n             * {@link SchedulerPro.data.ResourceStore}\n             * @config {SchedulerPro.data.ResourceStore|Object}\n             * @typings {typeof ResourceStore|object}\n             * @category Models & Stores\n             */\n            resourceStoreClass : ResourceStore,\n\n            //endregion\n\n            /**\n             * The initial data, to fill the {@link #property-calendarManagerStore} with.\n             * Should be an array of {@link SchedulerPro.model.CalendarModel} or it's configuration objects.\n             *\n             * @config {SchedulerPro.model.CalendarModel[]}\n             * @category Legacy inline data\n             */\n            calendarsData : null,\n\n            /**\n             * Set to `true` to reset the undo/redo queues of the internal {@link Core.data.stm.StateTrackingManager}\n             * after the Project has loaded. Defaults to `false`\n             * @config {Boolean} resetUndoRedoQueuesAfterLoad\n             * @category Advanced\n             */\n\n            supportShortSyncResponseNote : 'Note: Please consider enabling \"supportShortSyncResponse\" option to allow less detailed sync responses (https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/model/ProjectModel#config-supportShortSyncResponse)',\n\n            /**\n             * Enables early rendering in SchedulerPro, by postponing calculations to after the first refresh.\n             *\n             * Requires event data loaded to be pre-normalized to function as intended, since it will be used to render\n             * before engine has normalized the data. Given un-normalized data events will snap into place when\n             * calculations are finished.\n             *\n             * The Gantt chart will be read-only until the initial calculations are finished.\n             *\n             * @config {Boolean}\n             * @default\n             * @category Advanced\n             */\n            delayCalculation : true,\n\n            calendarManagerStore : {},\n\n            stmClass : StateTrackingManager\n        };\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Get/set {@link #property-calendarManagerStore} data.\n             *\n             * Always returns a {@link SchedulerPro.model.CalendarModel} array but also accepts an array of\n             * its configuration objects as input.\n             *\n             * @member {SchedulerPro.model.CalendarModel[]} calendars\n             * @accepts {SchedulerPro.model.CalendarModel[]|CalendarModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-eventStore}. Should be a {@link SchedulerPro.model.CalendarModel}\n             * array or its configuration objects.\n             *\n             * @config {SchedulerPro.model.CalendarModel[]|CalendarModelConfig[]} calendars\n             * @category Inline data\n             */\n            calendars : null\n        };\n    }\n\n    // For TaskBoard compatibility\n    get taskStore() {\n        return this.eventStore;\n    }\n\n    //endregion\n\n    //region Inline data\n\n    get calendars() {\n        return this.calendarManagerStore.allRecords;\n    }\n\n    updateCalendars(calendars) {\n        this.calendarManagerStore.data = calendars;\n    }\n\n    //endregion\n}\n","import Base from '../../../Core/Base.js';\nimport ProHorizontalLayoutStack from '../../eventlayout/ProHorizontalLayoutStack.js';\nimport ProHorizontalLayoutPack from '../../eventlayout/ProHorizontalLayoutPack.js';\n\n/**\n * @module SchedulerPro/view/mixin/SchedulerProEventRendering\n */\n\n/**\n * Config for event layout\n * @typedef {Object} EventLayoutConfig\n * @property {'stack'|'pack'|'mixed'|'none'} type Event layout type. Possible values for horizontal mode are\n * `stack`, `pack` and `none`. For vertical mode: `pack`, `mixed` and `none`.\n * @property {Function} layoutFn Horizontal mode only. This function allows to manually position events inside the row.\n * @property {Object} weights Horizontal mode only. Specifies groups order.\n * @property {String|Function} groupBy Horizontal mode only. Specifies a way to group events inside a row.\n */\n\n/**\n * Functions to handle event rendering in Scheduler Pro (EventModel -> dom elements).\n *\n * @mixin\n */\nexport default Target => class SchedulerProEventRendering extends (Target || Base) {\n    static get $name() {\n        return 'SchedulerProEventRendering';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * This config defines how to handle overlapping events. Valid values are:\n             * - `stack`, adjusts row height (only horizontal)\n             * - `pack`, adjusts event height\n             * - `mixed`, allows two events to overlap, more packs (only vertical)\n             * - `none`, allows events to overlap\n             *\n             * You can also provide a configuration object accepted by\n             * {@link SchedulerPro.eventlayout.ProHorizontalLayout} to group events or even take control over the\n             * layout (i.e. vertical position and height):\n             *\n             * To group events:\n             *\n             * ```javascript\n             * new SchedulerPro({\n             *     eventLayout : {\n             *         type    : 'stack',\n             *         weights : {\n             *             high   : 100,\n             *             normal : 150,\n             *             low    : 200\n             *         },\n             *         groupBy : 'prio'\n             *     }\n             * });\n             * ```\n             *\n             * To take control over the layout:\n             *\n             * ```javascript\n             * new SchedulerPro({\n             *     eventLayout : {\n             *         layoutFn : items => {\n             *             items.forEach(item => {\n             *                 item.top = 100 * Math.random();\n             *                 item.height = 100 * Math.random();\n             *             });\n             *\n             *             return 100;\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * For more info on grouping and layout please refer to {@link SchedulerPro.eventlayout.ProHorizontalLayout}\n             * doc article.\n             *\n             * @prp {'stack'|'pack'|'mixed'|'none'|EventLayoutConfig}\n             * @default\n             * @category Scheduled events\n             */\n            eventLayout : 'stack',\n\n            /**\n             * The class responsible for the packing horizontal event layout process.\n             * Override this to take control over the layout process.\n             * @config {Scheduler.eventlayout.HorizontalLayout}\n             * @typings {typeof HorizontalLayout}\n             * @default\n             * @private\n             * @category Misc\n             */\n            horizontalLayoutPackClass : ProHorizontalLayoutPack,\n\n            /**\n             * The class name responsible for the stacking horizontal event layout process.\n             * Override this to take control over the layout process.\n             * @config {Scheduler.eventlayout.HorizontalLayout}\n             * @typings {typeof HorizontalLayout}\n             * @default\n             * @private\n             * @category Misc\n             */\n            horizontalLayoutStackClass : ProHorizontalLayoutStack\n        };\n    }\n\n    //region Config\n\n    updateInternalEventLayout(eventLayout, oldEventLayout) {\n        const me = this;\n\n        if (!me.isConfiguring) {\n            me.clearLayouts();\n        }\n\n        super.updateInternalEventLayout(eventLayout, oldEventLayout);\n    }\n\n    //endregion\n\n    getEventLayout(config) {\n        config = super.getEventLayout(config);\n\n        if ('layoutFn' in config) {\n            config.type = 'layoutFn';\n        }\n\n        return config;\n    }\n\n    clearLayouts() {\n        const me = this;\n\n        if (me.layouts) {\n            for (const key in me.layouts) {\n                me.layouts[key].destroy();\n                delete me.layouts[key];\n            }\n        }\n    }\n\n    /**\n     * Get event layout handler. The handler decides the vertical placement of events within a resource.\n     * Returns null if no eventLayout is used (if {@link #config-eventLayout} is set to \"none\")\n     * @internal\n     * @returns {Scheduler.eventlayout.HorizontalLayout}\n     * @readonly\n     * @category Scheduled events\n     */\n    getEventLayoutHandler(eventLayout) {\n        const me = this;\n\n        if (!me.isHorizontal) {\n            return null;\n        }\n\n        const { timeAxisViewModel, horizontal } = me;\n\n        if (!me.layouts) {\n            me.layouts = {};\n        }\n\n        const { layouts } = me;\n\n        switch (eventLayout.type) {\n            // stack, adjust row height to fit all events\n            case 'stack': {\n                if (!layouts.horizontalStack) {\n                    layouts.horizontalStack = me.horizontalLayoutStackClass.new({\n                        scheduler                   : me,\n                        timeAxisViewModel,\n                        bandIndexToPxConvertFn      : horizontal.layoutEventVerticallyStack,\n                        bandIndexToPxConvertThisObj : horizontal,\n                        groupByThisObj              : me\n                    }, eventLayout);\n                }\n\n                return layouts.horizontalStack;\n            }\n            // pack, fit all events in available height by adjusting their height\n            case 'pack': {\n                if (!layouts.horizontalPack) {\n                    layouts.horizontalPack = me.horizontalLayoutPackClass.new({\n                        scheduler                   : me,\n                        timeAxisViewModel,\n                        bandIndexToPxConvertFn      : horizontal.layoutEventVerticallyPack,\n                        bandIndexToPxConvertThisObj : horizontal,\n                        groupByThisObj              : me\n                    }, eventLayout);\n                }\n\n                return layouts.horizontalPack;\n            }\n            case 'layoutFn': {\n                // Both methods are called on a layout\n                return {\n                    type                : 'layoutFn',\n                    scheduler           : me,\n                    applyLayout         : eventLayout.layoutFn,\n                    layoutEventsInBands : eventLayout.layoutFn\n                };\n            }\n            default:\n                return null;\n        }\n    }\n\n    get widgetClass() {}\n};\n","import StringHelper from '../../Core/helper/StringHelper.js';\nimport '../../Scheduler/feature/NonWorkingTime.js';\n\nimport '../localization/En.js';\n\n// Always required features\nimport { TimeUnit } from '../../Engine/scheduling/Types.js';\nimport { CalculatedValueGen } from '../../ChronoGraph/chrono/Identifier.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport { BaseCalendarMixin } from '../../Engine/quark/model/scheduler_basic/BaseCalendarMixin.js';\nimport NumberFormat from '../../Core/helper/util/NumberFormat.js';\nimport TimelineHistogram from '../../Scheduler/view/TimelineHistogram.js';\nimport SchedulerStores from '../../Scheduler/view/mixin/SchedulerStores.js';\nimport SchedulerResourceRendering from '../../Scheduler/view/mixin/SchedulerResourceRendering.js';\nimport CrudManagerView from '../../Scheduler/crud/mixin/CrudManagerView.js';\nimport Objects from '../../Core/helper/util/Objects.js';\nimport ProjectModel from '../model/ProjectModel.js';\n\n// Imitates ResourceAllocationInfo structure\nfunction buildReturnedValue(total) {\n    return {\n        allocation : {\n            total\n        }\n    };\n}\n\n/**\n * @module SchedulerPro/view/ResourceHistogram\n */\n\n/**\n * This view displays a read-only timeline report of the workload for the resources in a\n * {@link SchedulerPro/model/ProjectModel project}. The resource allocation is visualized as bars along the time axis\n * with an optional line indicating the maximum available time for each resource. A {@link Scheduler/column/ScaleColumn}\n * is also added automatically.\n *\n * To create a standalone histogram, simply configure it with a Project instance:\n *\n * ```javascript\n * const project = new ProjectModel({\n *     autoLoad : true,\n *     loadUrl  : 'examples/schedulerpro/view/data.json'\n * });\n *\n * const histogram = new ResourceHistogram({\n *     project,\n *     appendTo    : 'targetDiv',\n *     rowHeight   : 60,\n *     minHeight   : '20em',\n *     flex        : '1 1 50%',\n *     showBarTip  : true,\n *     columns     : [\n *         {\n *             width : 200,\n *             field : 'name',\n *             text  : 'Resource'\n *         }\n *     ]\n * });\n * ```\n *\n * {@inlineexample SchedulerPro/view/ResourceHistogram.js}\n *\n * ## Pairing the component\n *\n * You can also pair the histogram with other timeline views such as the Gantt or Scheduler,\n * using the {@link Scheduler/view/TimelineBase#config-partner} config.\n *\n * You can configure (or hide completely) the built-in scale column easily:\n *\n * ```javascript\n * const histogram = new ResourceHistogram({\n *    project,\n *    appendTo    : 'targetDiv',\n *    columns     : [\n *        {\n *            width : 200,\n *            field : 'name',\n *            text  : 'Resource'\n *        },\n *        // Hide the scale column (or add any other column configs)\n *        {\n *            type   : 'scale',\n *            hidden : true\n *        }\n *    ]\n * });\n * ```\n *\n * ## Changing displayed values\n *\n * To change the histogram bar texts, supply a {@link #config-getBarText} function.\n * Here for example the provided function displays resources time **left** instead of\n * allocated time\n *\n * ```javascript\n * new ResourceHistogram({\n *     getBarText(datum) {\n *         const resourceHistogram = this.owner;\n *\n *         // get default bar text\n *         let result = resourceHistogram.getBarTextDefault(...arguments);\n *\n *         // and if some work is done in the tick\n *         if (result) {\n *\n *             const unit = resourceHistogram.getBarTextEffortUnit();\n *\n *             // display the resource available time\n *             result = resourceHistogram.getEffortText(datum.maxEffort - datum.effort, unit);\n *         }\n *\n *         return result;\n *     },\n *     ...\n * })\n * ```\n * @extends Scheduler/view/TimelineHistogram\n * @mixes Scheduler/view/mixin/SchedulerStores\n * @mixes Scheduler/view/mixin/SchedulerResourceRendering\n * @mixes Scheduler/crud/mixin/CrudManagerView\n * @classtype resourcehistogram\n * @widget\n */\nexport default class ResourceHistogram extends TimelineHistogram.mixin(SchedulerStores, SchedulerResourceRendering, CrudManagerView) {\n\n    //region Config\n\n    static $name = 'ResourceHistogram';\n\n    static type = 'resourcehistogram';\n\n    /**\n     * @hideconfigs durationDisplayPrecision, resourceColumns, enableRecurringEvents, eventBarTextField,\n     * eventBodyTemplate, eventColor, eventLayout, eventRenderer, eventRendererThisObj, eventStyle,\n     * horizontalEventSorterFn, horizontalLayoutPackClass, horizontalLayoutStackClass, milestoneAlign,\n     * milestoneTextPosition, highlightPredecessors, highlightSuccessors, removeUnassignedEvent,\n     * eventAssignHighlightCls, eventCls, eventSelectedCls, fixedEventCls, overScheduledEventClass,\n     * timeZone\n     */\n\n    static configurable = {\n        projectModelClass : ProjectModel,\n\n        sortFeatureStore      : 'store',\n        timeAxisColumnCellCls : 'b-sch-timeaxis-cell b-resourcehistogram-cell',\n\n        /**\n         * Effort value format string.\n         * Must be a template supported by {@link Core/helper/util/NumberFormat} class.\n         * @config {String}\n         * @default\n         */\n        effortFormat : '0.#',\n\n        getRecordData : 'getRecordAllocationData',\n\n        aggregateDataEntry : 'aggregateAllocationEntry',\n\n        initAggregatedDataEntry : 'initAggregatedAllocationEntry',\n\n        hardRefreshOnTimeAxisReconfigure : false,\n\n        /**\n         * Specifies whether effort values should display units or not.\n         * @config {Boolean}\n         * @default\n         */\n        showEffortUnit : true,\n\n        useProjectTimeUnitsForScale : false,\n\n        /**\n         * Default time unit to display resources effort values.\n         * The value is used as default when displaying effort in tooltips and bars text.\n         * Yet the effective time unit used might change dynamically when zooming in the histogram\n         * so its ticks unit gets smaller than the default unit.\n         * Please use {@link #config-barTipEffortUnit} to customize default units for tooltips only\n         * and {@link #config-barTextEffortUnit} to customize default units in bar texts.\n         * @config {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'}\n         * @default hour\n         */\n        effortUnit : TimeUnit.Hour,\n\n        /**\n         * Default time unit used for displaying resources effort in bars.\n         * Yet the effective time unit used might change dynamically when zooming in the histogram\n         * so its ticks unit gets smaller than the default unit.\n         * Please use {@link #config-barTipEffortUnit} to customize default units for tooltips\n         * (or {@link #config-effortUnit} to customize both texts and tooltips default units).\n         * @config {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'}\n         * @default hour\n         */\n        barTextEffortUnit : null,\n\n        /**\n         * Default time unit used when displaying resources effort in tooltips.\n         * Yet the effective time unit used might change dynamically when zooming in the histogram\n         * so its ticks unit gets smaller than the default unit.\n         * Please use {@link #config-barTextEffortUnit} to customize default units for bar texts\n         * (or {@link #config-effortUnit} to customize both texts and tooltips default units).\n         * @config {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'}\n         * @default hour\n         */\n        barTipEffortUnit : null,\n\n        /**\n         * Set to `true` if you want to display the maximum resource allocation line.\n         * @config {Boolean}\n         * @default\n         */\n        showMaxEffort : true,\n\n        series : {\n            maxEffort : {\n                type  : 'outline',\n                field : 'maxEffort'\n            },\n            effort : {\n                type  : 'bar',\n                field : 'effort'\n            }\n        },\n\n        /**\n         * A Function which returns the tooltip text to display when hovering a bar.\n         * The following parameters are passed:\n         * @param {Object} context The tooltip context info\n         * @param {ResourceAllocationInterval} context.datum The histogram bar being hovered info\n         * @param {Core.widget.Tooltip} context.tip The tooltip instance\n         * @param {HTMLElement} context.element The Element for which the Tooltip is monitoring mouse movement\n         * @param {HTMLElement} context.activeTarget The target element that triggered the show\n         * @param {Event} context.event The raw DOM event\n         * @param {SchedulerPro.model.ResourceModel} data.record The record which effort\n         * the hovered bar displays.\n         * @returns {String} Tooltip HTML content\n         * @config {Function}\n         */\n        barTooltipTemplate({ datum }) {\n            let result = '';\n\n            const { inEventTimeSpan, isGroup } = datum;\n\n            if (inEventTimeSpan) {\n                if (isGroup) {\n                    result = this.getGroupBarTip(...arguments);\n                }\n                else {\n                    result = this.getResourceBarTip(...arguments);\n                }\n            }\n\n            return result;\n        },\n\n        /**\n         * Set to `true` if you want to display resources effort values in bars\n         * (for example: `24h`, `7d`, `60min` etc.).\n         * The text contents can be changed by providing {@link #config-getBarText} function.\n         * @config {Boolean}\n         */\n        showBarText : false,\n\n        /**\n         * A Function which returns the text to render inside a bar.\n         *\n         * Here for example the provided function displays resources time **left** instead of\n         * allocated time\n         *\n         * ```javascript\n         * new ResourceHistogram({\n         *     getBarText(datum) {\n         *         const resourceHistogram = this.owner;\n         *\n         *         const { showBarText } = resourceHistogram;\n         *\n         *         let result = '';\n         *\n         *         // respect existing API - show bar texts only when \"showBarText\" is true\n         *         // and if some work is done in the tick\n         *         if (showBarText && datum.effort) {\n         *\n         *             const unit = resourceHistogram.getBarTextEffortUnit();\n         *\n         *             // display the resource available time\n         *             result = resourceHistogram.getEffortText(datum.maxEffort - datum.effort, unit);\n         *         }\n         *\n         *         return result;\n         *     },\n         * })\n         * ```\n         *\n         * **Please note** that the function will be injected into the underlying\n         * {@link Core/widget/graph/Histogram} component that is used under the hood\n         * to render actual charts.\n         * So `this` will refer to the {@link Core/widget/graph/Histogram} instance, not\n         * this class instance.\n         * To access the view please use `this.owner` in the function:\n         *\n         * ```javascript\n         * new ResourceHistogram({\n         *     getBarText(datum) {\n         *         // \"this\" in the method refers core Histogram instance\n         *         // get the view instance\n         *         const resourceHistogram = this.owner;\n         *\n         *         .....\n         *     },\n         * })\n         * ```\n         * The following parameters are passed:\n         * @param {ResourceAllocationInterval} datum The datum being rendered\n         * @param {Number} index The index of the datum being rendered\n         * @returns {String} Text to render inside the bar\n         * @config {Function} getBarText\n         */\n\n        groupBarTipAssignmentLimit : 5,\n\n        /**\n         * Set to `true` to include inactive tasks allocation and `false` to not take such tasks into account.\n         * @config {Boolean}\n         * @default\n         */\n        includeInactiveEvents : false,\n\n        histogramWidget : {\n            cls : 'b-hide-offscreen b-resourcehistogram-histogram'\n        },\n\n        fixedRowHeight : true\n    };\n\n    //endregion\n\n    //region Constructor/Destructor\n\n    get timeAxis() {\n        return super.timeAxis;\n    }\n\n    set timeAxis(timeAxis) {\n        const currentTimeAxis = this._timeAxis;\n\n        super.timeAxis = timeAxis;\n\n        if (this.partner && !timeAxis || (currentTimeAxis && currentTimeAxis === timeAxis)) {\n            return;\n        }\n\n        this._timeAxis.ion({\n            name           : 'timeAxis',\n            endReconfigure : 'onTimeAxisEndReconfigure',\n            thisObj        : this\n        });\n    }\n\n    afterConfigure() {\n        super.afterConfigure();\n\n        const me = this;\n\n        me.onRecordAllocationCalculated = me.onRecordAllocationCalculated.bind(me);\n        me.onCommitAsyncCompletion = me.onCommitAsyncCompletion.bind(me);\n    }\n\n    onDestroy() {\n        super.onDestroy(...arguments);\n\n        // get graph ..if the project is not destroyed yet\n        const graph = this.project.getGraph?.();\n\n        if (graph && this.ticksIdentifier) {\n            graph.removeIdentifier(this.ticksIdentifier);\n        }\n    }\n\n    clearHistogramDataCache(record) {\n        if (!record) {\n            // remove cached histogram data (which is a set of graph entities) from the graph\n            for (const [record, entity] of this.getHistogramDataCache()?.entries()) {\n                record.removeEntity?.(entity);\n            }\n        }\n\n        super.clearHistogramDataCache(...arguments);\n    }\n\n    //endregion\n\n    //region Project\n\n    bindProject(project) {\n        this.detachListeners('resourceHistogramProject');\n\n        project.ion({\n            name                  : 'resourceHistogramProject',\n            refresh               : 'internalOnProjectRefresh',\n            delayCalculationStart : 'onProjectDelayCalculationStart',\n            delayCalculationEnd   : 'onProjectDelayCalculationEnd',\n            repopulateReplica     : 'onRepopulateReplica',\n\n            thisObj : this\n        });\n    }\n\n    updateProject(project) {\n        this.bindProject(project);\n\n        // project implements CrudManager API\n        this.crudManager = project;\n\n        this.store = project.resourceStore;\n    }\n\n    //endregion\n\n    //region Internal\n\n    getRowHeight() {\n        return this.rowHeight;\n    }\n\n    convertEffortUnit(value, unit, toUnit) {\n        return this.project.run('$convertDuration', value, unit, toUnit);\n    }\n\n    updateUseProjectTimeUnitsForScale() {\n        const me = this;\n        // Below this.scalePoints assignment of doesn't work until ResourceHistogram is painted\n        // since ScaleWidget being constructed tries to read its rootElement which results:\n        // \"Floating Widgets must have \"rootElement\" to be ...\"\n        if (me.isPainted) {\n            // we need to regenerate ScaleColumn points according to new unit values\n            const eventParams = { scalePoints : me.generateScalePoints() };\n\n            /**\n             * Fires when the component generates points for the {@link #property-scaleColumn scale column}.\n             *\n             * Use a listeners to override the generated scale points:\n             *\n             * ```javascript\n             * new ResourceHistogram({\n             *     ...\n             *     listeners : {\n             *         generateScalePoints(params) {\n             *             // provide text for each scale point (if not provided already)\n             *             params.scalePoints.forEach(point => {\n             *                 point.text = point.text || point.value;\n             *             });\n             *         }\n             *     }\n             * })\n             * ```\n             *\n             * @param {SchedulerPro.view.ResourceHistogram} source The component instance\n             * @param {ScalePoint[]} scalePoints Array of objects representing scale points. Each entry can have properties:\n             * - `value` - point value\n             * - `unit` - point value unit\n             * - `text` - label text (if not provided the point will not have a label displayed)\n             * @event generateScalePoints\n             * @category Scale column\n             */\n            me.trigger('generateScalePoints', eventParams);\n\n            // allow to override the points in a listener\n            me._generatedScalePoints = me.scalePoints = eventParams.scalePoints;\n\n            me.scheduleRefreshRows();\n        }\n    }\n\n    updateShowBarText(value) {\n        this.scheduleRefreshRows();\n    }\n\n    get eventStore() {\n        return this.project?.eventStore;\n    }\n\n    set eventStore(eventStore) {\n        super.eventStore = eventStore;\n    }\n\n    convertUnitsToHistogramValue(value, unit) {\n        return this.useProjectTimeUnitsForScale\n            ? this.convertEffortUnit(value, unit, TimeUnit.Millisecond)\n            : DateHelper.asMilliseconds(value, unit);\n    }\n\n    convertHistogramValueToUnits(value, unit) {\n        return this.useProjectTimeUnitsForScale\n            ? this.convertEffortUnit(value, TimeUnit.Millisecond, unit)\n            : DateHelper.as(unit, value);\n    }\n\n    buildScalePointText(scalePoint) {\n        return `${scalePoint.value}${DateHelper.getShortNameOfUnit(scalePoint.unit)}`;\n    }\n\n    /**\n     * Generates points for the {@link #property-scaleColumn scale column}.\n     *\n     * **Override the method to customize the scale column points.**\n     *\n     * @param {Number} [scaleMax] Maximum value for the scale. Uses current timeaxis increment if not provided.\n     * @param {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} [unit] Time\n     * unit `scaleMax` argument is expressed in.\n     * Uses current timeaxis unit if not provided.\n     * @returns {ScalePoint[]} Array of objects representing scale points. Each entry can have properties:\n     * - `value` - point value\n     * - `unit` - point value unit\n     * - `text` - label text (if not provided the point will not have a label displayed)\n     * @category Scale column\n     */\n    generateScalePoints(scaleMax, unit) {\n        // bail out if there is no project or it's not in the graph\n        if (!this.project?.graph) {\n            return;\n        }\n\n        const\n            { timeAxis } = this,\n            scalePoints           = [];\n\n        scaleMax = scaleMax || timeAxis.increment;\n        unit = unit || timeAxis.unit;\n\n        let scaleStep;\n\n        // If the ticks are defined as 1 unit let's break it down to smaller units\n        if (scaleMax === 1) {\n            // getting timeaxis tick sub-unit and number of them in a tick\n            unit     = DateHelper.getSmallerUnit(unit);\n            scaleMax = Math.round(\n                this.useProjectTimeUnitsForScale ? this.convertEffortUnit(scaleMax, timeAxis.unit, unit)\n                    : DateHelper.as(unit, scaleMax, timeAxis.unit)\n            );\n        }\n\n        // Let's try to guess how many points in the scale will work nicely\n        for (const factor of [7, 5, 4, 3, 2]) {\n            // unitsNumber is multiple of \"factor\" -> we generate \"factor\"-number of points\n            if (!(scaleMax % factor)) {\n                scaleStep = scaleMax / factor;\n                break;\n            }\n        }\n\n        // fallback to a single point equal to maximum value\n        if (!scaleStep) {\n            scaleStep = scaleMax;\n        }\n\n        for (let value = scaleStep; value <= scaleMax; value += scaleStep) {\n            scalePoints.push({\n                value\n            });\n        }\n\n        const lastPoint = scalePoints[scalePoints.length - 1];\n        // put unit and label to the last point\n        lastPoint.unit = unit;\n        lastPoint.text = this.buildScalePointText(lastPoint);\n\n        return scalePoints;\n    }\n\n    updateViewPreset(viewPreset) {\n        const me = this;\n\n        // Set a flag indicating that we're inside of `updateViewPreset` so our `onTimeAxisEndReconfigure` will skip its call.\n        // We call it here later.\n        me._updatingViewPreset = true;\n        super.updateViewPreset(...arguments);\n        me._updatingViewPreset = false;\n\n        // In `super.updateViewPreset` function `this.render` is called which checks if the engine is not dirty\n        // ..and we modify `ticksIdentifier` atom in `onTimeAxisEndReconfigure`\n        // so the engine state gets dirty and rendering gets delayed which ends up an exception.\n        // So we call `onTimeAxisEndReconfigure` after super `updateViewPreset` code\n        // to keep the engine non-dirty while zooming/setting a preset.\n        // This scenario is covered w/ SchedulerPro/tests/pro/view/ResourceHistogramZoom.t.js\n        if (me.project.isInitialCommitPerformed && me.isPainted) {\n            me.onTimeAxisEndReconfigure();\n        }\n    }\n\n    onRepopulateReplica() {\n        this.ticksIdentifier = null;\n        this.clearHistogramDataCache();\n    }\n\n    buildTicksIdentifier() {\n        const\n            me    = this,\n            graph = me.project.getGraph();\n\n        if (!me.ticksIdentifier) {\n            me.ticksIdentifier = graph.addIdentifier(CalculatedValueGen.new());\n        }\n        else {\n            const prevTicksCalendar = graph.read(me.ticksIdentifier);\n\n            me.project.clearCombinationsWith(prevTicksCalendar);\n        }\n\n        me.ticksIdentifier.writeToGraph(graph, new BaseCalendarMixin({\n            unspecifiedTimeIsWorking : false,\n            intervals                : me.timeAxis.ticks.map(tick => {\n                return {\n                    startDate : tick.startDate,\n                    endDate   : tick.endDate,\n                    isWorking : true\n                };\n            })\n        }));\n\n        // process ticks to detect if their widths are monotonous\n        // or some tick has a different width value\n        me.collectTicksWidth();\n\n        return me.ticksIdentifier;\n    }\n\n    onProjectDelayCalculationStart() {\n        this.suspendRefresh();\n    }\n\n    onProjectDelayCalculationEnd() {\n        this.resumeRefresh();\n    }\n\n    projectUnitsHasChanged() {\n        const { project } = this;\n\n        return project.daysPerMonth !== this._projectDaysPerMonth ||\n            project.daysPerWeek !== this._projectDaysPerWeek ||\n            project.hoursPerDay !== this._projectHoursPerDay;\n    }\n\n    internalOnProjectRefresh({ source, isInitialCommit, isCalculated }) {\n        if (isCalculated) {\n            const me = this;\n\n            if (!me.ticksIdentifier) {\n                me.onTimeAxisEndReconfigure();\n            }\n\n            // if project units has changed and we use them for scale points\n            if (me.useProjectTimeUnitsForScale && me.projectUnitsHasChanged()) {\n                me._projectDaysPerMonth = source.daysPerMonth;\n                me._projectDaysPerWeek = source.daysPerWeek;\n                me._projectHoursPerDay = source.hoursPerDay;\n\n                // regenerate scale points\n                const eventParams = { scalePoints : me.generateScalePoints() };\n\n                me.trigger('generateScalePoints', eventParams);\n\n                // allow to override the points in a listener\n                me._generatedScalePoints = me.scalePoints = eventParams.scalePoints;\n            }\n\n            // If rowManager got no topRow yet - reinitialize it otherwise refresh does n0thing\n            if (!me.rowManager.topRow) {\n                me.rowManager.reinitialize();\n            }\n            // enable view refreshing back (trigger refresh if that's an initial commit)\n            else {\n                me.resumeRefresh(isInitialCommit);\n            }\n        }\n    }\n\n    relayStoreDataChange(event) {\n        super.relayStoreDataChange(event);\n\n        if (this.store.count === 0) {\n            // To clear histogram when no rows to refresh\n            this.histogramWidget.data = [];\n            this.histogramWidget.refresh();\n        }\n    }\n\n    changeHistogramWidget(widget, oldWidget) {\n        const me = this;\n\n        if (!oldWidget) {\n            const { series } = me;\n\n            if (!me.showMaxEffort && series.maxEffort) {\n                series.maxEffort = false;\n            }\n\n            widget = super.changeHistogramWidget(...arguments);\n        }\n\n        return widget;\n    }\n\n    getRectConfig(rectConfig, datum, index, series) {\n        if (datum.inEventTimeSpan) {\n            const\n                { topValue } = this,\n                value = datum[series.field],\n                forceHeight = series.stretch ? 1 : datum.height;\n\n            rectConfig.height = forceHeight || (value > topValue ? topValue : value) / topValue;\n            rectConfig.y = 1 - rectConfig.height;\n\n            return rectConfig;\n        }\n    }\n\n    // Injectable method.\n    getRectClassDefault(series, rectConfig, datum) {\n        if (series.id === 'effort') {\n            switch (true) {\n                case datum.isOverallocated :\n                    return 'b-overallocated';\n\n                case datum.isUnderallocated :\n                    return 'b-underallocated';\n            }\n        }\n\n        return '';\n    }\n\n    get effortFormatter() {\n        const\n            me     = this,\n            format = me.effortFormat;\n\n        let formatter = me._effortFormatter;\n\n        if (!formatter || me._effortFormat !== format) {\n            formatter = NumberFormat.get(me._lastFormat = format);\n\n            me._effortFormatter = formatter;\n        }\n\n        return formatter;\n    }\n\n    /**\n     * Formats effort value to display in the component bars and tooltips.\n     * @param {Number} effort Effort value\n     * @param {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} unit Effort value unit\n     * @param {Boolean} [showEffortUnit=this.showEffortUnit] Provide `true` to include effort unit. If not provided\n     * uses {@link #config-showEffortUnit} value.\n     * @returns {String} Formatted effort value.\n     */\n    getEffortText(effort, unit, showEffortUnit = this.showEffortUnit) {\n        // bail out if there is no project or it's not in the graph\n        if (!this.project?.graph) {\n            return;\n        }\n\n        const { scaleUnit, effortFormatter } = this;\n\n        unit = unit || scaleUnit;\n\n        const\n            localizedUnit = DateHelper.getShortNameOfUnit(unit),\n            effortInUnits = this.convertHistogramValueToUnits(effort, unit);\n\n        return effortFormatter.format(effortInUnits) + (showEffortUnit ? localizedUnit : '');\n    }\n\n    getBarTipEffortUnit() {\n        const\n            { effortUnit, barTipEffortUnit, timeAxis } = this,\n            defaultUnit                                = barTipEffortUnit || effortUnit;\n\n        return DateHelper.compareUnits(timeAxis.unit, defaultUnit) < 0 ? timeAxis.unit : defaultUnit;\n    }\n\n    getGroupBarTip({ datum }) {\n        const\n            me           = this,\n            { timeAxis } = me;\n\n        let result = '';\n\n        if (datum.inEventTimeSpan) {\n            const\n                unit          = me.getBarTipEffortUnit(...arguments),\n                allocated     = me.getEffortText(datum.effort, unit),\n                available     = me.getEffortText(datum.maxEffort, unit),\n                assignmentTpl = me.L('L{groupBarTipAssignment}');\n\n            let\n                dateFormat        = 'L',\n                resultFormat      = me.L('L{groupBarTipInRange}'),\n                assignmentsSuffix = '';\n\n            if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Day) === 0) {\n                resultFormat = me.L('L{groupBarTipOnDate}');\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Second) <= 0) {\n                dateFormat = 'HH:mm:ss A';\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Hour) <= 0) {\n                dateFormat = 'LT';\n            }\n\n            let assignmentsArray = [...datum.resourceAllocation.entries()]\n                .filter(([resource, data]) => data.effort)\n                .sort(([key1, value1], [key2, value2]) => value1.effort > value2.effort ? -1 : 1);\n\n            if (assignmentsArray.length > me.groupBarTipAssignmentLimit) {\n                assignmentsSuffix = '<br>' + me.L('L{plusMore}').replace('{value}', assignmentsArray.length - me.groupBarTipAssignmentLimit);\n                assignmentsArray = assignmentsArray.slice(0, this.groupBarTipAssignmentLimit);\n            }\n\n            const assignments = assignmentsArray.map(([resource, info]) => {\n\n                return assignmentTpl.replace('{resource}', StringHelper.encodeHtml(resource.name))\n                    .replace('{allocated}', me.getEffortText(info.effort, unit))\n                    .replace('{available}', me.getEffortText(info.maxEffort, unit))\n                    .replace('{cls}', info.isOverallocated ? 'b-overallocated' : info.isUnderallocated ? 'b-underallocated' : '');\n\n            }).join('<br>') + assignmentsSuffix;\n\n            // <remove-on-release>\n            // TODO: we need smth like sprintf(\"has {0} of {1} items\", cnt, total)\n            //  to be able to test localizable strings\n            // </remove-on-release>\n            result = resultFormat\n                .replace('{assignments}', assignments)\n                .replace('{startDate}', DateHelper.format(datum.tick.startDate, dateFormat))\n                .replace('{endDate}', DateHelper.format(datum.tick.endDate, dateFormat))\n                .replace('{allocated}', allocated)\n                .replace('{available}', available)\n                .replace('{cls}', datum.isOverallocated ? 'b-overallocated' : datum.isUnderallocated ? 'b-underallocated' : '');\n\n            result = `<div class=\"b-histogram-bar-tooltip\">${result}</div>`;\n        }\n\n        return result;\n    }\n\n    getResourceBarTip({ datum }) {\n        const\n            me           = this,\n            { timeAxis } = me;\n\n        let result = '';\n\n        if (datum.inEventTimeSpan) {\n            const\n                unit       = me.getBarTipEffortUnit(),\n                allocated  = me.getEffortText(datum.effort, unit),\n                available  = me.getEffortText(datum.maxEffort, unit);\n\n            let\n                dateFormat   = 'L',\n                resultFormat = me.L('L{barTipInRange}');\n\n            if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Day) === 0) {\n                resultFormat = me.L('L{barTipOnDate}');\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Second) <= 0) {\n                dateFormat = 'HH:mm:ss A';\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Hour) <= 0) {\n                dateFormat = 'LT';\n            }\n\n            // <remove-on-release>\n            // TODO: we need smth like sprintf(\"has {0} of {1} items\", cnt, total)\n            //  to be able to test localizable strings\n            // </remove-on-release>\n            result = resultFormat\n                .replace('{startDate}', DateHelper.format(datum.tick.startDate, dateFormat))\n                .replace('{endDate}', DateHelper.format(datum.tick.endDate, dateFormat))\n                .replace('{allocated}', allocated)\n                .replace('{available}', available)\n                .replace('{cls}', datum.isOverallocated ? 'b-overallocated' : datum.isUnderallocated ? 'b-underallocated' : '');\n\n            if (datum.resource) {\n                result = result\n                    .replace('{resource}', StringHelper.encodeHtml(datum.resource.name));\n            }\n\n            result = `<div class=\"b-histogram-bar-tooltip\">${result}</div>`;\n        }\n\n        return result;\n    }\n\n    /**\n     * Returns unit to display effort values in when rendering the histogram bars.\n     * The method by default returns {@link #config-barTextEffortUnit} value if provided\n     * and if not falls back to {@link #config-effortUnit} value.\n     * But it also takes zooming into account and when\n     * the timeaxis ticks unit gets smaller than the default value the ticks unit is returned.\n     *\n     * @returns {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} Time unit to display\n     * effort values in.\n     */\n    getBarTextEffortUnit() {\n        const\n            { effortUnit, barTextEffortUnit, timeAxis } = this,\n            defaultUnit                                 = barTextEffortUnit || effortUnit;\n\n        return DateHelper.compareUnits(timeAxis.unit, defaultUnit) < 0 ? timeAxis.unit : defaultUnit;\n    }\n\n    /**\n     * The default method that returns the text to render inside a bar if no\n     * {@link #config-getBarText} function was provided.\n     *\n     * The method can be used in a {@link #config-getBarText} function\n     * to invoke the default implementation:\n     *\n     * ```javascript\n     * new ResourceHistogram({\n     *     getBarText(datum) {\n     *         const resourceHistogram = this.owner;\n     *\n     *         // get default bar text\n     *         let result = resourceHistogram.getBarTextDefault();\n     *\n     *         // if the resource is overallocated in that tick display \"Overallocated! \" string\n     *         // before the allocation value\n     *         if (result && datum.maxEffort < datum.effort) {\n     *             result = 'Overallocated! ' + result;\n     *         }\n     *\n     *         return result;\n     *     },\n     * })\n     * ```\n     * The following parameters are passed:\n     * @param {ResourceAllocationInterval} datum The data of the bar being rendered\n     * @param {Number} index The index of the datum being rendered\n     * @param {String} series Identifier of the series (provided only if the histogram widget\n     * {@link Core/widget/graph/Histogram#config-singleTextForAllBars} is `false`)\n     * @param {HistogramRenderData} renderData Current render data giving access to the record, row and cell\n     * being rendered.\n     * @returns {String} Text to render inside the bar\n     */\n    getBarTextDefault(datum, index) {\n        const\n            view            = this.owner,\n            { showBarText } = view;\n\n        let result = '';\n\n        if (showBarText && datum.inEventTimeSpan) {\n            const unit = view.getBarTextEffortUnit();\n            result     = view.getEffortText(datum.effort, unit);\n        }\n\n        return result;\n    }\n\n    updateShowMaxEffort(value) {\n        const me = this;\n\n        me._showMaxEffort = value;\n\n        const widget = me._histogramWidget;\n\n        // bail out in case there is no widget constructed yet\n        if (!widget) {\n            return;\n        }\n\n        const { series } = me;\n\n        if (!value) {\n            if (series.maxEffort) {\n                me._seriesMaxEffort = series.maxEffort;\n                series.maxEffort = false;\n            }\n        }\n        else if (typeof value === 'object') {\n            series.maxEffort = value;\n        }\n        else if (typeof me._seriesMaxEffort === 'object') {\n            series.maxEffort = me._seriesMaxEffort;\n        }\n        else {\n            series.maxEffort = {\n                id    : 'maxEffort', // no-sanity\n                type  : 'outline',\n                field : 'maxEffort'\n            };\n        }\n\n        me.scheduleRefreshRows();\n    }\n\n    updateIncludeInactiveEvents(value) {\n        // update collected reports wih new includeInactiveEvents flag state\n        this.getHistogramDataCache()?.forEach(allocationReport => allocationReport.includeInactiveEvents = value);\n    }\n\n    //endregion\n\n    //region Events\n\n    onTimeAxisEndReconfigureInternal() {\n        const me = this;\n\n        // Skip call triggered by viewPreset setting we have `updateViewPreset` method overridden where we call `onTimeAxisEndReconfigure` later\n        if (!me._updatingViewPreset) {\n            const { unit, increment } = me.timeAxis;\n\n            // re-generate scale point on zooming in/out\n            if (unit !== me._lastTimeAxisUnit || increment !== me._lastTimeAxisIncrement) {\n                // remember last used unit & increment to distinguish zooming from timespan changes\n                me._lastTimeAxisUnit = unit;\n                me._lastTimeAxisIncrement = increment;\n\n                // regenerate scale points\n                const\n                    scalePoints = me.generateScalePoints(),\n                    eventParams = { scalePoints };\n\n                // allow to override the points in a listener\n                me.trigger('generateScalePoints', eventParams);\n\n                me._generatedScalePoints = me.scalePoints = eventParams.scalePoints;\n            }\n\n            // <remove-on-release>\n            // TODO need to re-build identifier only if:\n            // a) time axis unit/increment has changed\n            // b) time span has changed\n            // </remove-on-release>\n            me.buildTicksIdentifier();\n        }\n    }\n\n    calculateRowHeights() {}\n\n    onTimeAxisEndReconfigure() {\n        const me = this;\n\n        // Skip call triggered by viewPreset setting we have `updateViewPreset` method overridden where we call `onTimeAxisEndReconfigure` later\n        if (!me._updatingViewPreset) {\n            if (me.project.graph) {\n                me.onTimeAxisEndReconfigureInternal();\n            }\n            // In delayed calculation mode (the default) we might not be in graph yet, postpone buildTicksIdentifier until we are\n            else {\n                me.project.ion({\n                    graphReady() {\n                        me.onTimeAxisEndReconfigureInternal();\n                    },\n                    thisObj : me,\n                    once    : true\n                });\n            }\n        }\n    }\n\n    //endregion\n\n    //region Render\n\n    extractHistogramDataArray(allocationReport, record) {\n        return allocationReport.allocation.total;\n    }\n\n    renderRows() {\n        const me = this;\n\n        if (!me.ticksIdentifier && me.project.isInitialCommitPerformed) {\n            // If we render rows but have no ticksIdentifier means data loading and 1st commit\n            // happened before the histogram was created.\n            // Handle timeaxis settings to build ticksIdentifier and scale column points.\n            me.onTimeAxisEndReconfigure();\n\n            // If timeView range is not defined then the timeaxis header looks empty so fill it in here (it triggers the column refresh)\n            if (!me.timeView.startDate || !me.timeView.endDate) {\n                me.timeView.range = {\n                    startDate : me.startDate,\n                    endDate   : me.endDate\n                };\n            }\n        }\n\n        return super.renderRows(...arguments);\n    }\n\n    async shiftPrevious() {\n        super.shiftPrevious(...arguments);\n\n        await this.project.commitAsync();\n    }\n\n    async shiftNext() {\n        super.shiftNext(...arguments);\n\n        await this.project.commitAsync();\n    }\n\n    onCommitAsyncCompletion() {\n        // trigger rendering after the Engine finishes a transaction\n        this.renderScheduledRecords();\n        this._renderOnCommitPromise = null;\n    }\n\n    onRecordAllocationCalculated(allocation) {\n        if (!this.isDestroying) {\n            // update cache to trigger histogramDataCacheSet event\n            this.setHistogramDataCache(allocation.resource, allocation.owner);\n        }\n    }\n\n    buildResourceAllocationReport(resource) {\n        return this.project.resourceAllocationInfoClass.new({\n            includeInactiveEvents : this.includeInactiveEvents,\n            ticks                 : this.ticksIdentifier,\n            resource\n        });\n    }\n\n    /**\n     * Returns the provided record's allocation data.\n     * The process of allocation collecting is asynchronous so the method returns a `Promise`\n     * that provides the data once resolved.\n     *\n     * The method used as the default value of {@link #config-getRecordData} config.\n     * @param {SchedulerPro.model.ResourceModel} record Resource record to collect allocation for.\n     * @returns {Promise} A `Promise` that provides the provided resource\n     * {@link SchedulerPro/model/ResourceModel#typedef-ResourceAllocationInfo allocation info} when resolved.\n     */\n    async getRecordAllocationData(record) {\n        const\n            me = this,\n            { project } = me;\n\n        // No drawing before engine's initial commit\n        while (!me.ticksIdentifier || !project.isInitialCommitPerformed) {\n            await project.await('commitFinalized');\n        }\n\n        // Ignore resources not in the graph\n        if (record.graph) {\n            const\n                graph            = project.getGraph(),\n                allocationReport = me.buildResourceAllocationReport(record);\n\n            record.addEntity(allocationReport);\n\n            await graph.readAsync(allocationReport.$.allocation);\n\n            // after this transaction finishes we will\n            // track further allocation report changes with onRecordAllocationCalculated method\n            graph.ongoing.then(() => {\n                graph.addListener(allocationReport.$.allocation, me.onRecordAllocationCalculated);\n            });\n\n            return allocationReport;\n        }\n    }\n\n    onHistogramDataCacheSet() {\n        super.onHistogramDataCacheSet(...arguments);\n\n        const me = this;\n\n        // trigger rendering right after the Engine finishes its current commitAsync() call\n        if (!me._renderOnCommitPromise) {\n            me._renderOnCommitPromise = me.project.graph.ongoing.then(me.onCommitAsyncCompletion);\n        }\n    }\n\n    aggregateRecordsHistogramData(records, aggregationContext) {\n        const result = super.aggregateRecordsHistogramData(records, aggregationContext);\n\n        if (Objects.isPromise(result)) {\n            return result.then(buildReturnedValue);\n        }\n\n        return buildReturnedValue(result);\n    }\n\n    /**\n     * The default function that initializes a target group record entry.\n     *\n     * The method is used as {@link #config-initAggregatedDataEntry} default value.\n     * @returns {ResourceAllocationInterval} Returns an empty allocation entry.\n     * @category Parent histogram data collecting\n     */\n    initAggregatedAllocationEntry() {\n        return {\n            tick               : null,\n            effort             : 0,\n            maxEffort          : 0,\n            units              : 0,\n            isGroup            : true,\n            inEventTimeSpan    : false,\n            resourceAllocation : new Map()\n        };\n    }\n\n    /**\n     * The default function used for aggregating a child record histogram data values to its parent entry.\n     * The function sums up `effort` and `maxEffort` series values. It also propagates\n     * {@link SchedulerPro/model/ResourceModel#typedef-ResourceAllocationInterval isOverallocated} and\n     * {@link SchedulerPro/model/ResourceModel#typedef-ResourceAllocationInterval isUnderallocated} values so if there\n     * is a child having the corresponding value as `true` it will be `true` on the parent level as well.\n     *\n     * All children {@link SchedulerPro/model/ResourceModel#typedef-ResourceAllocationInterval assignments} are united\n     * on the parent level {@link SchedulerPro/model/ResourceModel#typedef-ResourceAllocationInterval assignments}\n     * property.\n     *\n     * The method is used as {@link #config-aggregateDataEntry} default value.\n     *\n     * @param {ResourceAllocationInterval} aggregated Target parent data entry to aggregate the entry into.\n     * @param {ResourceAllocationInterval} entry Current entry to aggregate into `aggregated`.\n     * @param {Number} arrayIndex Index of the current record (among other\n     * records being aggregated).\n     * @param {Number} colIndex `entry` index in the current array\n     * @returns {ResourceAllocationInterval} Resulting parent data entry.\n     * @category Parent histogram data collecting\n     */\n    aggregateAllocationEntry(acc, entry, _recordIndex, _entryIndex, aggregationContext) {\n        acc.resourceAllocation.set(entry.resource, entry);\n\n        acc.tick             = entry.tick;\n        acc.isOverallocated  = acc.isOverallocated || entry.isOverallocated;\n        acc.isUnderallocated = acc.isUnderallocated || entry.isUnderallocated;\n        acc.inEventTimeSpan  = acc.inEventTimeSpan || entry.inEventTimeSpan;\n\n        if (entry.assignments) {\n            if (acc.assignments) {\n                entry.assignments.forEach(assignment => acc.assignments.add(assignment));\n            }\n            else {\n                acc.assignments = new Set(entry.assignments);\n            }\n        }\n\n        return acc;\n    }\n\n    generateGroupScalePoints(record) {\n        const\n            me          = this,\n            children    = me.getGroupChildren(record),\n            scalePoints = me.generateScalePoints(me.timeAxis.increment * children.length),\n            eventParams = { scalePoints, groupParent : record };\n\n        me.trigger('generateScalePoints', eventParams);\n\n        return eventParams.scalePoints;\n    }\n\n    processRecordRenderData(renderData) {\n        // Override histogram topValue and scalePoints for group records\n        if (this.isGroupRecord(renderData.record)) {\n            const\n                scalePoints = this.generateGroupScalePoints(renderData.record),\n                topValue    = this.getTopValueByScalePoints(scalePoints);\n\n            renderData.scaleWidgetConfig = { scalePoints };\n            renderData.histogramConfig = { ...renderData.histogramConfig, topValue };\n        }\n        else {\n            renderData = super.processRecordRenderData(renderData);\n        }\n\n        return renderData;\n    }\n\n    //endregion\n\n    //region Localization\n\n    updateLocalization() {\n        const me = this;\n\n        // Translate scale points if we have them (update localization on construction step is called too early)\n        // and the scale points is generated by the histogram which means their labels use localized unit abbreviations\n        if (me._generatedScalePoints === me.scalePoints && me.scalePoints) {\n            me.scalePoints.forEach(scalePoint => {\n                // if the point is labeled let's rebuild its text using new locale\n                if (scalePoint.text && scalePoint.unit) {\n                    scalePoint.text = me.buildScalePointText(scalePoint);\n                }\n            });\n        }\n\n        super.updateLocalization(...arguments);\n    }\n\n    //endregion\n\n}\n\nResourceHistogram.initClass();\n","import StringHelper from '../../Core/helper/StringHelper.js';\nimport ResourceHistogram from './ResourceHistogram.js';\nimport ResourceUtilizationStore from '../data/ResourceUtilizationStore.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport { TimeUnit } from '../../Engine/scheduling/Types.js';\nimport '../../Grid/column/TreeColumn.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport Tree from '../../Grid/feature/Tree.js';\n\n/**\n * @module SchedulerPro/view/ResourceUtilization\n */\n\n/**\n * View showing the utilization levels of the project resources.\n * The resources are displayed in a summary list where each row can\n * be expanded to show the events assigned for the resource.\n *\n * This demo shows the Resource utilization widget:\n * {@inlineexample SchedulerPro/view/ResourceUtilization.js}\n *\n * The view requires a {@link #config-project Project instance} to be provided:\n *\n * ```javascript\n * const project = new ProjectModel({\n *     autoLoad  : true,\n *     transport : {\n *         load : {\n *             url : 'examples/schedulerpro/view/data.json'\n *         }\n *     }\n * });\n *\n * const resourceUtilization = new ResourceUtilization({\n *     project,\n *     appendTo    : 'targetDiv',\n *     rowHeight   : 60,\n *     minHeight   : '20em',\n *     flex        : '1 1 50%',\n *     showBarTip  : true\n * });\n * ```\n *\n * ## Pairing the component\n *\n * You can also pair the view with other timeline views such as the Gantt or Scheduler,\n * using the {@link #config-partner} config.\n *\n  * ## Changing displayed values\n *\n * To change the displayed bar texts, supply a {@link #config-getBarText} function.\n * Here for example the provided function displays resources time **left** instead of\n * allocated time\n *\n * ```javascript\n * new ResourceUtilization({\n *     getBarText(datum) {\n *         const view = this.owner;\n *\n *         // get default bar text\n *         let result = view.getBarTextDefault(...arguments);\n *\n *         // For resource records we will display the time left for allocation\n *         if (result && datum.resource) {\n *\n *             const unit = view.getBarTextEffortUnit();\n *\n *             // display the resource available time\n *             result = view.getEffortText(datum.maxEffort - datum.effort, unit);\n *         }\n *\n *         return result;\n *     },\n * })\n * ```\n *\n * @extends SchedulerPro/view/ResourceHistogram\n * @classtype resourceutilization\n * @widget\n */\n\nexport default class ResourceUtilization extends ResourceHistogram {\n\n    //region Config\n\n    static $name = 'ResourceUtilization';\n\n    static type = 'resourceutilization';\n\n    static configurable = {\n        /**\n         * @hideconfigs crudManager, crudManagerClass, assignments, resources, events, dependencies, assignmentStore,\n         * resourceStore, eventStore, dependencyStore, data, timeZone\n         */\n\n        scaleColumn : null,\n\n        /**\n         * A Function which returns the text to render inside a bar.\n         *\n         * Here for example the provided function displays resources time **left** instead of\n         * allocated time\n         *\n         * ```javascript\n         * new ResourceUtilization({\n         *     getBarText(datum) {\n         *         const resourceUtilization = this.owner;\n         *\n         *         // get default bar text\n         *         let result = view.getBarTextDefault();\n         *\n         *         // For resource records we will display the time left for allocation\n         *         if (result && datum.resource) {\n         *\n         *             const unit = resourceUtilization.getBarTextEffortUnit();\n         *\n         *             // display the resource available time\n         *             result = resourceUtilization.getEffortText(datum.maxEffort - datum.effort, unit);\n         *         }\n         *\n         *         return result;\n         *     },\n         * })\n         * ```\n         *\n         * **Please note** that the function will be injected into the underlying\n         * {@link Core/widget/graph/Histogram} component that is used under the hood\n         * to render actual charts.\n         * So `this` in the function will refer to the {@link Core/widget/graph/Histogram} instance.\n         * To access the `ResourceUtilization` instance please use `this.owner` in the function body:\n         *\n         * ```javascript\n         * new ResourceUtilization({\n         *     getBarText(datum) {\n         *         // \"this\" in the method refers core Histogram instance\n         *         // get the view instance\n         *         const view = this.owner;\n         *\n         *         .....\n         *     },\n         * })\n         * ```\n         * The following parameters are passed:\n         * @param {ResourceAllocationInterval|AssignmentAllocationInterval} datum The datum being rendered.\n         * Either {@link SchedulerPro.model.ResourceModel#typedef-ResourceAllocationInterval} object for resource records (root level records)\n         * or {@link SchedulerPro.model.ResourceModel#typedef-AssignmentAllocationInterval} object for assignment records\n         * @param {Number} index The index of the datum being rendered\n         * @returns {String} Text to render inside the bar\n         * @config {Function} getBarText\n         */\n\n        /* */\n\n        timeAxisColumnCellCls : 'b-sch-timeaxis-cell b-resourceutilization-cell',\n\n        /**\n         * A ProjectModel instance (or a config object) to display resource allocation of.\n         *\n         * Note: This config is mandatory.\n         * @config {ProjectModelConfig|SchedulerPro.model.ProjectModel} project\n         */\n\n        rowHeight : 30,\n\n        showEffortUnit : false,\n\n        /**\n         * @config {Boolean} showMaxEffort\n         * @hide\n         */\n\n        showMaxEffort : false,\n\n        /**\n         * Set to `true` if you want to display resources effort values in bars\n         * (for example: `24h`, `7d`, `60min` etc.).\n         * The text contents can be changed by providing {@link #config-getBarText} function.\n         * @config {Boolean}\n         * @default\n         */\n        showBarText : true,\n\n        /**\n         * A Function which returns the tooltip text to display when hovering a bar.\n         * The following parameters are passed:\n         * @param {Object} data The backing data of the histogram rectangle\n         * @param {Object} data.rectConfig The rectangle configuration object\n         * @param {Object} data.datum The hovered bar data\n         * @param {Number} data.index The index of the hovered bar data\n         * @param {SchedulerPro.model.ResourceUtilizationModel} data.record The record which effort\n         * the hovered bar displays.\n         * @returns {String} Tooltip HTML content\n         * @config {Function}\n         */\n        barTooltipTemplate({ datum }) {\n            let result = '';\n\n            const { inEventTimeSpan, isGroup, resource, assignment } = datum;\n\n            // const barTip = this.callback('getBarTextTip', me, [renderData, data[index], index]);\n            if (inEventTimeSpan) {\n                if (isGroup) {\n                    result = this.getGroupBarTip(...arguments);\n                }\n                else if (assignment) {\n                    result = this.getAssignmentBarTip(...arguments);\n                }\n                else if (resource) {\n                    result = this.getResourceBarTip(...arguments);\n                }\n            }\n\n            return result;\n        },\n\n        series : {\n            effort : {\n                // We don't want the histogram bar heights based on effort\n                // so set \"stretch\" here to make bars to take the whole row height\n                stretch : true\n            }\n        },\n\n        readOnly : true,\n\n        columns : [\n            {\n                type        : 'tree',\n                field       : 'name',\n                text        : 'L{nameColumnText}',\n                localeClass : this\n            }\n        ],\n\n        histogramWidget : {\n            cls : 'b-hide-offscreen b-resourceutilization-histogram'\n        }\n    };\n\n    //endregion\n\n    /**\n     * @event generateScalePoints\n     * @hide\n     */\n\n    /**\n     * @function generateScalePoints\n     * @hide\n     */\n\n    /**\n     * @member {Scheduler.column.ScaleColumn} scaleColumn\n     * @hide\n     */\n\n    construct() {\n        super.construct(...arguments);\n\n        this.rowManager.ion({\n            renderRow : 'onRowManagerRenderRow',\n            thisObj   : this\n        });\n    }\n\n    updateProject(project) {\n        const store = this.store;\n\n        super.updateProject(project);\n\n        // Super call sets this.store to resource store\n        // 1) revert if a store was provided explicitly\n        // 2) otherwise generating ResourceUtilizationStore\n        this.store = store || this.buildStore(project);\n    }\n\n    updateResourceStore(resourceStore) {\n        this._resourceStore = resourceStore;\n    }\n\n    buildStore(project) {\n        project = this.project;\n        return ResourceUtilizationStore.new({ project });\n    }\n\n    //region Render\n\n    async getTipHtml(tooltipContext) {\n        const\n            index          = tooltipContext.activeTarget.dataset.index,\n            record         = this.getRecordFromElement(tooltipContext.activeTarget),\n            allocationData = await this.getRecordHistogramData(record),\n            datum          = this.extractHistogramDataArray(allocationData, record)[parseInt(index, 10)];\n\n        return this.barTooltipTemplate({ ...tooltipContext, record, index, datum });\n    }\n\n    getRecordAllocationData(record, ...args) {\n        record = this.resolveRecordToOrigin(record);\n\n        if (record.isResourceModel) {\n            return super.getRecordAllocationData(record, ...args);\n        }\n        else if (record.isAssignmentModel) {\n            // if that's an assignment re-invoke this.getRecordHistogramData() for resource\n            return this.getRecordHistogramData(record.resource, ...args);\n        }\n    }\n\n    onDestroy() {\n        if (this.destroyStores) {\n            this.store?.destroy();\n        }\n\n        super.onDestroy();\n    }\n\n    onRecordAllocationCalculated(allocation) {\n        const me = this;\n\n        if (!me.isDestroying) {\n            const\n                allocationReport  = allocation.owner,\n                assignmentRecords = [...allocation.byAssignments.keys()]\n                    .reduce((acc, assignment) => {\n                        const record = me.resolveOriginToRecord(assignment);\n                        if (record) {\n                            acc.push(record);\n                        }\n                        return acc;\n                    }, []),\n                resourceRecord = me.resolveOriginToRecord(allocation.resource);\n\n            if (resourceRecord) {\n                me.setHistogramDataCache(resourceRecord, allocationReport);\n            }\n\n            for (const assignmentRecord of assignmentRecords) {\n                me.setHistogramDataCache(assignmentRecord, allocationReport);\n            }\n\n            // trigger rendering right after the Engine finishes its current commitAsync() call\n            if (!me._renderOnCommitPromise) {\n                me._renderOnCommitPromise = me.project.graph.ongoing.then(me.onCommitAsyncCompletion.bind(me));\n            }\n        }\n    }\n\n    onRowManagerRenderRow({ row, record }) {\n        const isGroup = this.isGroupRecord(record);\n\n        record = this.resolveRecordToOrigin(record);\n\n        // indicate row kinds\n        row.assignCls({\n            'b-resource-row'   : record.isResourceModel || isGroup,\n            'b-assignment-row' : !isGroup && record.isAssignmentModel\n        });\n    }\n\n    /**\n     * The view store records wrap \"real\" resources and assignments.\n     * This method resolves a record to its original record resource or assignment.\n     * If the record does not wrap any record (happens for example for parent records when\n     * using {@link Grid/feature/TreeGroup} feature) then the method returns the record itself.\n     * @param {SchedulerPro.model.ResourceUtilizationModel} record The view store record\n     * @returns {SchedulerPro.model.ResourceModel|SchedulerPro.model.AssignmentModel|SchedulerPro.model.ResourceUtilizationModel} Original model\n     */\n    resolveRecordToOrigin(record) {\n        return record.origin || record.$original || record;\n    }\n\n    resolveOriginToRecord(origin) {\n        let record = origin;\n\n        if (this.store.isResourceUtilizationStore) {\n            record = this.store.getModelByOrigin(origin) || record;\n        }\n        else if (origin.hasLinks) {\n            for (const link of origin.$links) {\n                if (this.store.includes(link)) {\n                    return link;\n                }\n            }\n        }\n\n        return record;\n    }\n\n    getHistogramDataCache(record) {\n        if (record) {\n            record = this.resolveRecordToOrigin(record);\n        }\n\n        return super.getHistogramDataCache(record);\n    }\n\n    setHistogramDataCache(record, data) {\n        record = this.resolveRecordToOrigin(record);\n\n        return super.setHistogramDataCache(record, data);\n    }\n\n    scheduleRecordRefresh(record) {\n        record = this.resolveOriginToRecord(record);\n\n        return super.scheduleRecordRefresh(record);\n    }\n\n    scheduleRecordParentsRefresh(record) {\n        record = this.resolveOriginToRecord(record);\n\n        return super.scheduleRecordParentsRefresh(record);\n    }\n\n    // <remove-on-release>\n    // TODO check if this is used\n    // </remove-on-release>\n    getCell(data) {\n        // if real resource or assignment is provided\n        if (data.record?.isResourceModel || data.record?.isAssignmentModel) {\n            // use its wrapper record to find proper cell\n            data.record = this.resolveOriginToRecord(data.record);\n        }\n\n        return super.getCell(data);\n    }\n\n    changeHistogramWidget(widget) {\n        if (widget && !widget.isHistogram) {\n            if (!this.getBarTextRenderData && !widget?.getBarTextRenderData) {\n                widget.getBarTextRenderData = this.getBarTextRenderDataDefault;\n            }\n\n            widget.height = this.rowHeight;\n        }\n\n        return super.changeHistogramWidget(widget);\n    }\n\n    getBarTextRenderDataDefault(renderData, datum, index) {\n        // place effort text centered vertically\n        renderData.y = '50%';\n\n        return renderData;\n    }\n\n    extractHistogramDataArray(allocationReport, record) {\n        let data;\n\n        const origin = this.resolveRecordToOrigin(record);\n\n        if (this.isGroupRecord(record)) {\n            data = allocationReport.allocation.total;\n        }\n        else if (origin.isResourceModel) {\n            data = allocationReport.allocation.total;\n        }\n        else if (origin.isAssignmentModel) {\n            // Not having an assignment in the report could mean\n            // we've just added the assignment and it's not yet processed by the Engine.\n            // So in this case we just do and empty row rendering\n            data = allocationReport.allocation.byAssignments.get(origin) || [];\n        }\n\n        return data;\n    }\n\n    initAggregatedAllocationEntry(_entryIndex, aggregationContext) {\n        // keep list of resources met when aggregating children\n        if (!aggregationContext.targetArray.$resources) {\n            aggregationContext.targetArray.$resources = new Set();\n        }\n\n        return {\n            tick            : null,\n            effort          : 0,\n            maxEffort       : 0,\n            units           : 0,\n            isGroup         : true,\n            inEventTimeSpan : false,\n            members         : new Map(),\n            resources       : new Set()\n        };\n    }\n\n    aggregateAllocationEntry(acc, entry, recordIndex, entryIndex, aggregationContext) {\n        const\n            { targetArray } = aggregationContext,\n            recordArray = aggregationContext.arrays[recordIndex];\n\n        acc.tick             = entry.tick;\n        acc.isOverallocated  = acc.isOverallocated  || entry.isOverallocated;\n        acc.isUnderallocated = acc.isUnderallocated || entry.isUnderallocated;\n        acc.inEventTimeSpan  = acc.inEventTimeSpan || entry.inEventTimeSpan;\n\n        // For a group entry we add members property that includes child records regrdless of their types\n        if (entry.members) {\n            acc.members = new Map([...acc.members, ...entry.members]);\n        }\n        else {\n            acc.members.set(entry.resource || entry.assignment, entry);\n        }\n\n        // If that's a group entry that already met resources\n        if (recordArray.$resources) {\n            // inherit the resources\n            targetArray.$resources = new Set([...targetArray.$resources, ...recordArray.$resources]);\n        }\n        // If that's a resource or assignment row entry\n        else if (entry.assignment || entry.resource) {\n            const resource = entry.resource || entry.assignment.resource;\n\n            // remember we met the resource (we need this to correctly calculate maxEffort on upper levels)\n            targetArray.$resources.add(resource);\n\n            const resourceEntry = this.getHistogramDataCache(resource).allocation.total[entryIndex];\n\n            acc.isOverallocated  = acc.isOverallocated || resourceEntry.isOverallocated;\n            acc.isUnderallocated  = acc.isUnderallocated || resourceEntry.isUnderallocated;\n        }\n\n        return acc;\n    }\n\n    aggregateHistogramData() {\n        const result = super.aggregateHistogramData(...arguments);\n\n        // post process aggregated row data to find proper maxEffort\n        for (let i = 0, l = result.length; i < l; i++) {\n            const entry = result[i];\n\n            entry.maxEffort = 0;\n\n            for (const resource of result.$resources) {\n                const resourceEntry = this.getHistogramDataCache(resource).allocation.total[i];\n\n                // get nested resources maxEffort sum\n                entry.maxEffort += resourceEntry.maxEffort;\n            }\n        }\n\n        return result;\n    }\n\n    //endregion\n\n    getResourceBarTip({ datum }) {\n        const\n            me                       = this,\n            { showBarTip, timeAxis } = me;\n\n        let result = '';\n\n        if (showBarTip && datum.inEventTimeSpan) {\n            const\n                unit          = me.getBarTipEffortUnit(...arguments),\n                allocated     = me.getEffortText(datum.effort, unit, true),\n                available     = me.getEffortText(datum.maxEffort, unit, true),\n                assignmentTpl = me.L('L{groupBarTipAssignment}');\n\n            let\n                dateFormat        = 'L',\n                resultFormat      = me.L('L{groupBarTipInRange}'),\n                assignmentsSuffix = '';\n\n            if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Day) === 0) {\n                resultFormat = me.L('L{groupBarTipOnDate}');\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Second) <= 0) {\n                dateFormat = 'HH:mm:ss A';\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Hour) <= 0) {\n                dateFormat = 'LT';\n            }\n\n            let assignmentsArray = [...datum.assignmentIntervals.entries()]\n                .filter(([assignment, data]) => data.effort)\n                .sort(([key1, value1], [key2, value2]) => value1.effort > value2.effort ? -1 : 1);\n\n            if (assignmentsArray.length > me.groupBarTipAssignmentLimit) {\n                assignmentsSuffix = '<br>' + me.L('L{plusMore}').replace('{value}', assignmentsArray.length - me.groupBarTipAssignmentLimit);\n                assignmentsArray = assignmentsArray.slice(0, this.groupBarTipAssignmentLimit);\n            }\n\n            const assignments = assignmentsArray.map(([assignment, info]) => {\n\n                return assignmentTpl.replace('{event}', StringHelper.encodeHtml(assignment.event.name))\n                    .replace('{allocated}', me.getEffortText(info.effort, unit, true))\n                    .replace('{available}', me.getEffortText(info.maxEffort, unit, true))\n                    .replace('{cls}', info.isOverallocated ? 'b-overallocated' : info.isUnderallocated ? 'b-underallocated' : '');\n\n            }).join('<br>') + assignmentsSuffix;\n\n            // <remove-on-release>\n            // TODO: we need smth like sprintf(\"has {0} of {1} items\", cnt, total)\n            //  to be able to test localizable strings\n            // </remove-on-release>\n            result = resultFormat\n                .replace('{assignments}', assignments)\n                .replace('{startDate}', DateHelper.format(datum.tick.startDate, dateFormat))\n                .replace('{endDate}', DateHelper.format(datum.tick.endDate, dateFormat))\n                .replace('{allocated}', allocated)\n                .replace('{available}', available)\n                .replace('{cls}', datum.isOverallocated ? 'b-overallocated' : datum.isUnderallocated ? 'b-underallocated' : '');\n\n            result = `<div class=\"b-histogram-bar-tooltip\">${result}</div>`;\n        }\n\n        return result;\n    }\n\n    getGroupBarTip({ datum }) {\n        const\n            me                       = this,\n            { showBarTip, timeAxis } = me;\n\n        let result = '';\n\n        if (showBarTip && datum.inEventTimeSpan) {\n            const\n                unit          = me.getBarTipEffortUnit(...arguments),\n                allocated     = me.getEffortText(datum.effort, unit),\n                available     = me.getEffortText(datum.maxEffort, unit),\n                assignmentTpl = me.L('L{groupBarTipAssignment}');\n\n            let\n                dateFormat        = 'L',\n                resultFormat      = me.L('L{groupBarTipInRange}'),\n                assignmentsSuffix = '';\n\n            if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Day) === 0) {\n                resultFormat = me.L('L{groupBarTipOnDate}');\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Second) <= 0) {\n                dateFormat = 'HH:mm:ss A';\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Hour) <= 0) {\n                dateFormat = 'LT';\n            }\n\n            let memberArray = [...datum.members.entries()]\n                .filter(([member, data]) => data.effort)\n                .sort(([key1, value1], [key2, value2]) => value1.effort > value2.effort ? -1 : 1);\n\n            if (memberArray.length > me.groupBarTipAssignmentLimit) {\n                assignmentsSuffix = '<br>' + me.L('L{plusMore}').replace('{value}', memberArray.length - me.groupBarTipAssignmentLimit);\n                memberArray = memberArray.slice(0, this.groupBarTipAssignmentLimit);\n            }\n\n            const members = memberArray.map(([member, info]) => {\n\n                return assignmentTpl\n                    .replace('{resource}', StringHelper.encodeHtml(member.resource?.name || member.name))\n                    .replace('{event}', StringHelper.encodeHtml(member.event?.name || member.name))\n                    .replace('{allocated}', me.getEffortText(info.effort, unit))\n                    .replace('{available}', me.getEffortText(info.maxEffort, unit))\n                    .replace('{cls}', info.isOverallocated ? 'b-overallocated' : info.isUnderallocated ? 'b-underallocated' : '');\n\n            }).join('<br>') + assignmentsSuffix;\n\n            // <remove-on-release>\n            // TODO: we need smth like sprintf(\"has {0} of {1} items\", cnt, total)\n            // to be able to test localizable strings\n            // </remove-on-release>\n            result = resultFormat\n                .replace('{assignments}', members)\n                .replace('{startDate}', DateHelper.format(datum.tick.startDate, dateFormat))\n                .replace('{endDate}', DateHelper.format(datum.tick.endDate, dateFormat))\n                .replace('{allocated}', allocated)\n                .replace('{available}', available)\n                .replace('{cls}', datum.isOverallocated ? 'b-overallocated' : datum.isUnderallocated ? 'b-underallocated' : '');\n\n            result = `<div class=\"b-histogram-bar-tooltip\">${result}</div>`;\n        }\n\n        return result;\n    }\n\n    getAssignmentBarTip({ datum }) {\n        const\n            me                       = this,\n            { showBarTip, timeAxis } = me;\n\n        let result = '';\n\n        if (showBarTip && datum.inEventTimeSpan) {\n            const\n                unit      = me.getBarTipEffortUnit(...arguments),\n                allocated = me.getEffortText(datum.effort, unit, true),\n                available = me.getEffortText(datum.maxEffort, unit, true);\n\n            let\n                dateFormat   = 'L',\n                resultFormat = me.L('L{barTipInRange}');\n\n            if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Day) === 0) {\n                resultFormat = me.L('L{barTipOnDate}');\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Second) <= 0) {\n                dateFormat = 'HH:mm:ss A';\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Hour) <= 0) {\n                dateFormat = 'LT';\n            }\n\n            // <remove-on-release>\n            // TODO: we need smth like sprintf(\"has {0} of {1} items\", cnt, total)\n            //  to be able to test localizable strings\n            // </remove-on-release>\n            result = resultFormat\n                .replace('{startDate}', DateHelper.format(datum.tick.startDate, dateFormat))\n                .replace('{endDate}', DateHelper.format(datum.tick.endDate, dateFormat))\n                .replace('{allocated}', allocated)\n                .replace('{available}', available)\n                .replace('{cls}', datum.cls || '');\n\n            if (datum.assignment) {\n                result = result.replace('{event}', StringHelper.encodeHtml(datum.assignment.event.name));\n            }\n\n            result = `<div class=\"b-histogram-bar-tooltip\">${result}</div>`;\n        }\n\n        return result;\n    }\n\n}\n\nResourceUtilization.initClass();\n\n// enable tree feature for the utilization panel by default\nGridFeatureManager.registerFeature(Tree, true, 'ResourceUtilization');\n","import HorizontalRendering from '../../../Scheduler/view/orientation/HorizontalRendering.js';\n\n/**\n * @module SchedulerPro/view/orientation/ProHorizontalRendering\n */\n\n/**\n * Handles event rendering in Scheduler Pro horizontal mode. Populates render data with buffer duration.\n *\n * @internal\n */\nexport default class ProHorizontalRendering extends HorizontalRendering {\n\n    static $name = 'ProHorizontalRendering';\n\n    /**\n     * Populates render data with buffer data rendering.\n     * @param {HorizontalRenderData} renderData\n     * @returns {Boolean}\n     * @private\n     */\n    fillInnerSpanHorizontalPosition(renderData) {\n        const\n            me              = this,\n            { eventRecord } = renderData,\n            {\n                startMS    : innerStartMS,\n                endMS      : innerEndMS,\n                durationMS : innerDurationMS\n            }               = me.calculateMS(eventRecord, 'startDate', 'endDate'),\n            position        = me.calculateHorizontalPosition(renderData, innerStartMS, innerEndMS, innerDurationMS);\n\n        if (position) {\n            const { left, width } = position;\n\n            Object.assign(renderData, {\n                innerStartMS,\n                innerEndMS,\n                innerDurationMS,\n                bufferBeforeWidth : Math.max(left - renderData.left, 0),\n                // This could yield a really small number due to floating point accuracy, we can round the result\n                bufferAfterWidth  : Math.max(Math.floor(renderData.left + renderData.width - left - width), 0)\n            });\n\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    getTimeSpanRenderData(timeSpan, rowRecord, includeOutside = false) {\n        const data = super.getTimeSpanRenderData(timeSpan, rowRecord, includeOutside);\n\n        if (data?.useEventBuffer) {\n            if (!this.fillInnerSpanHorizontalPosition(data)) {\n                return null;\n            }\n        }\n\n        return data;\n    }\n}\n","import VerticalRendering from '../../../Scheduler/view/orientation/VerticalRendering.js';\n\n/**\n * @module SchedulerPro/view/orientation/ProVerticalRendering\n */\n\n/**\n * Handles event rendering in Scheduler Pro horizontal mode. Populates render data with buffer duration.\n *\n * @internal\n */\nexport default class ProVerticalRendering extends VerticalRendering {\n\n    static $name = 'ProVerticalRendering';\n\n    /**\n     * Populates render data with buffer data rendering.\n     * @param {HorizontalRenderData} renderData\n     * @returns {Boolean}\n     * @private\n     */\n    fillInnerSpanVerticalPosition(renderData) {\n        const\n            me                  = this,\n            { scheduler }       = me,\n            { eventRecord }     = renderData,\n            { isBatchUpdating } = eventRecord,\n            startDate           = isBatchUpdating ? eventRecord.get('startDate') : eventRecord.startDate,\n            endDate             = isBatchUpdating ? eventRecord.get('endDate') : eventRecord.endDate,\n            top                 = scheduler.getCoordinateFromDate(startDate),\n            innerStartMS        = startDate.getTime(),\n            innerEndMS          = endDate.getTime(),\n            innerDurationMS     = innerEndMS - innerStartMS;\n\n        let bottom = scheduler.getCoordinateFromDate(endDate),\n            height = bottom - top;\n\n        // Below, estimate height\n        if (bottom === -1) {\n            height = Math.round(innerDurationMS * scheduler.timeAxisViewModel.getSingleUnitInPixels('millisecond'));\n            bottom = top + height;\n        }\n\n        Object.assign(renderData, {\n            innerStartMS,\n            innerEndMS,\n            innerDurationMS,\n            bufferBeforeWidth : top - renderData.top,\n            bufferAfterWidth  : renderData.top + renderData.height - top - height\n        });\n\n        return true;\n    }\n\n    getTimeSpanRenderData(timeSpan, rowRecord, includeOutside = false) {\n        const data = super.getTimeSpanRenderData(timeSpan, rowRecord, includeOutside);\n\n        if (data?.useEventBuffer) {\n            if (!this.fillInnerSpanVerticalPosition(data)) {\n                return null;\n            }\n        }\n\n        return data;\n    }\n}\n","import '../localization/En.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport VersionHelper from '../../Core/helper/VersionHelper.js';\nimport SchedulingIssueResolution from './mixin/SchedulingIssueResolution.js';\nimport ProjectProgressMixin from './mixin/ProjectProgressMixin.js';\nimport SchedulerBase from '../../Scheduler/view/SchedulerBase.js';\nimport ProjectModel from '../model/ProjectModel.js';\nimport SchedulerProEventRendering from './mixin/SchedulerProEventRendering.js';\nimport ProHorizontalRendering from './orientation/ProHorizontalRendering.js';\nimport ProVerticalRendering from './orientation/ProVerticalRendering.js';\n\n/**\n * @module SchedulerPro/view/SchedulerProBase\n */\n\n/**\n * A thin base class for {@link SchedulerPro/view/SchedulerPro}. Includes fewer features by default, allowing smaller\n * custom-built bundles if used in place of {@link SchedulerPro/view/SchedulerPro}.\n *\n * **NOTE:** In most scenarios you should use SchedulerPro instead of SchedulerProBase.\n *\n * @features SchedulerPro/feature/CalendarHighlight\n * @features SchedulerPro/feature/CellEdit\n * @features SchedulerPro/feature/Dependencies\n * @features SchedulerPro/feature/DependencyEdit\n * @features SchedulerPro/feature/EventBuffer\n * @features SchedulerPro/feature/EventResize\n * @features SchedulerPro/feature/EventSegmentDrag\n * @features SchedulerPro/feature/EventSegmentResize\n * @features SchedulerPro/feature/EventSegments\n * @features SchedulerPro/feature/NestedEvents\n * @features SchedulerPro/feature/PercentBar\n * @features SchedulerPro/feature/ResourceNonWorkingTime\n * @features SchedulerPro/feature/TaskEdit\n * @features SchedulerPro/feature/TimeSpanHighlight\n * @features SchedulerPro/feature/Versions\n *\n * @extends Scheduler/view/SchedulerBase\n * @mixes SchedulerPro/view/mixin/ProjectProgressMixin\n * @mixes SchedulerPro/view/mixin/SchedulerProEventRendering\n * @mixes SchedulerPro/view/mixin/SchedulingIssueResolution\n * @widget\n */\nexport default class SchedulerProBase extends SchedulerBase.mixin(\n    ProjectProgressMixin,\n    SchedulerProEventRendering,\n    SchedulingIssueResolution\n) {\n\n    //region Config\n\n    static $name = 'SchedulerProBase';\n\n    static type = 'schedulerprobase';\n\n    static configurable =  {\n        projectModelClass : ProjectModel,\n\n        /**\n         * A task field (id, wbsCode, sequenceNumber etc) that will be used when displaying and editing linked tasks.\n         * @config {String} dependencyIdField\n         * @default 'id'\n         */\n        dependencyIdField : 'id',\n\n        /**\n         * If set to `true` this will show a color field in the {@link SchedulerPro.feature.TaskEdit} editor and also a\n         * picker in the {@link Scheduler.feature.EventMenu}. Both enables the user to choose a color which will be\n         * applied to the event bar's background. See EventModel's\n         * {@link Scheduler.model.mixin.EventModelMixin#field-eventColor} config.\n         * config.\n         * @config {Boolean}\n         * @category Misc\n         */\n        showTaskColorPickers : false\n    };\n\n    static isSchedulerPro = true;\n\n    //endregion\n\n    //region Store & model docs\n\n    // Configs\n\n    /**\n     * A {@link SchedulerPro.model.ProjectModel} instance or a config object. The project holds all SchedulerPro data.\n     * @config {SchedulerPro.model.ProjectModel|ProjectModelConfig} project\n     * @category Data\n     */\n\n    /**\n     * Inline events, will be loaded into the backing project's EventStore.\n     * @config {SchedulerPro.model.EventModel[]|Object[]} events\n     * @category Data\n     */\n\n    /**\n     * The {@link SchedulerPro.data.EventStore} holding the events to be rendered into the scheduler.\n     * @config {SchedulerPro.data.EventStore|EventStoreConfig} eventStore\n     * @category Data\n     */\n\n    /**\n     * Inline resources, will be loaded into the backing project's ResourceStore.\n     * @config {SchedulerPro.model.ResourceModel[]|ResourceModelConfig[]} resources\n     * @category Data\n     */\n\n    /**\n     * The {@link SchedulerPro.data.ResourceStore} holding the resources to be rendered into the scheduler.\n     * @config {SchedulerPro.data.ResourceStore|ResourceStoreConfig} resourceStore\n     * @category Data\n     */\n\n    // For some reason Typings won't accept AssignmentModelConfig here. Object will be turned into it though\n    /**\n     * Inline assignments, will be loaded into the backing project's AssignmentStore.\n     * @config {SchedulerPro.model.AssignmentModel[]|Object[]} assignments\n     * @category Data\n     */\n\n    /**\n     * The optional {@link SchedulerPro.data.AssignmentStore}, holding assignments between resources and events.\n     * Required for multi assignments.\n     * @config {SchedulerPro.data.AssignmentStore|AssignmentStoreConfig} assignmentStore\n     * @category Data\n     */\n\n    /**\n     * Inline dependencies, will be loaded into the backing project's DependencyStore.\n     * @config {SchedulerPro.model.DependencyModel[]|DependencyModelConfig[]} dependencies\n     * @category Data\n     */\n\n    /**\n     * The optional {@link SchedulerPro.data.DependencyStore}.\n     * @config {SchedulerPro.data.DependencyStore|DependencyStoreConfig} dependencyStore\n     * @category Data\n     */\n\n    /**\n     * Inline calendars, will be loaded into the backing project's CalendarManagerStore.\n     * @config {SchedulerPro.model.CalendarModel[]|CalendarModelConfig[]} calendars\n     * @category Data\n     */\n\n    // Properties\n\n    /**\n     * Get/set ProjectModel instance, containing the data visualized by the SchedulerPro.\n     * @member {SchedulerPro.model.ProjectModel} project\n     * @typings {ProjectModel}\n     * @category Data\n     */\n\n    /**\n     * Get/set events, applies to the backing project's EventStore.\n     * @member {SchedulerPro.model.EventModel[]} events\n     * @accepts {SchedulerPro.model.EventModel[]|EventModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the event store instance of the backing project.\n     * @member {SchedulerPro.data.EventStore} eventStore\n     * @typings Scheduler.view.SchedulerBase:eventStore -> {Scheduler.data.EventStore||SchedulerPro.data.EventStore}\n     * @category Data\n     */\n\n    /**\n     * Get/set resources, applies to the backing project's ResourceStore.\n     * @member {SchedulerPro.model.ResourceModel[]} resources\n     * @accepts {SchedulerPro.model.ResourceModel[]|ResourceModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the resource store instance of the backing project\n     * @member {SchedulerPro.data.ResourceStore} resourceStore\n     * @typings Scheduler.view.SchedulerBase:resourceStore -> {Scheduler.data.ResourceStore||SchedulerPro.data.ResourceStore}\n     * @category Data\n     */\n\n    // For some reason Typings won't accept AssignmentModelConfig here. Object will be turned into it though\n    /**\n     * Get/set assignments, applies to the backing project's AssignmentStore.\n     * @member {SchedulerPro.model.AssignmentModel[]} assignments\n     * @accepts {SchedulerPro.model.AssignmentModel[]|Object[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the event store instance of the backing project.\n     * @member {SchedulerPro.data.AssignmentStore} assignmentStore\n     * @typings Scheduler.view.SchedulerBase:assignmentStore -> {Scheduler.data.AssignmentStore||SchedulerPro.data.AssignmentStore}\n     * @category Data\n     */\n\n    /**\n     * Get/set dependencies, applies to the backing projects DependencyStore.\n     * @member {SchedulerPro.model.DependencyModel[]} dependencies\n     * @accepts {SchedulerPro.model.DependencyModel[]|DependencyModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the dependencies store instance of the backing project.\n     * @member {SchedulerPro.data.DependencyStore} dependencyStore\n     * @typings Scheduler.view.SchedulerBase:dependencyStore -> {Scheduler.data.DependencyStore||SchedulerPro.data.DependencyStore}\n     * @category Data\n     */\n\n    /**\n     * Get/set calendars, applies to the backing projects CalendarManagerStore.\n     * @member {SchedulerPro.model.CalendarModel[]} calendars\n     * @accepts {SchedulerPro.model.CalendarModel[]|CalendarModelConfig[]}\n     * @category Data\n     */\n\n    //endregion\n\n    //region Overrides\n\n    onPaintOverride() {\n        // Internal procedure used for paint method overrides\n        // Not used in onPaint() because it may be chained on instance and Override won't be applied\n    }\n\n    //endregion\n\n    //region Inline data\n\n    // Pro specific extension of SchedulerStores\n\n    set calendars(calendars) {\n        this.project.calendars = calendars;\n    }\n\n    get calendars() {\n        return this.project.calendars;\n    }\n\n    //endregion\n\n    //region Mode\n\n    /**\n     * Get mode (horizontal/vertical)\n     * @property {'horizontal'|'vertical'}\n     * @readonly\n     * @category Common\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    set mode(mode) {\n        const me = this;\n\n        me._mode = mode;\n\n        if (!me[mode]) {\n            me.element.classList.add(`b-sch-${mode}`);\n\n            if (mode === 'horizontal') {\n                me.horizontal = new ProHorizontalRendering(me);\n\n                if (me.isPainted) {\n                    me.horizontal.init();\n                }\n\n            }\n            else if (mode === 'vertical') {\n                me.vertical = new ProVerticalRendering(me);\n\n                if (me.rendered) {\n                    me.vertical.init();\n                }\n            }\n        }\n    }\n\n    //endregion\n\n    //region Internal\n\n    // Overrides grid to take project loading into account\n    toggleEmptyText() {\n        const\n            me = this;\n\n        if (me.bodyContainer && me.rowManager) {\n            DomHelper.toggleClasses(me.bodyContainer, 'b-grid-empty', !(me.rowManager.rowCount || me.project.isLoadingOrSyncing));\n        }\n    }\n\n    // Needed to work with Gantt features\n    get taskStore() {\n        return this.project.eventStore;\n    }\n\n    //endregion\n\n    createEvent(startDate, resourceRecord, row) {\n        // For resources with a calendar, ensure the date is inside a working time range\n        if (!resourceRecord.isWorkingTime(startDate)) {\n            return;\n        }\n\n        // If task editor is active dblclick will trigger number of async actions:\n        // store add which would schedule project commit\n        // editor cancel on next animation frame\n        // editor hide\n        // rejecting previous transaction\n        // and there is also dependency feature listening to transitionend on scheduler to draw lines after\n        // It can happen that user dblclicks too fast, then event will be added, then dependency will schedule itself\n        // to render, and then event will be removed as part of transaction rejection from editor. So we cannot add\n        // event before active transaction is done.\n        if (this.taskEdit && this.taskEdit.isEditing) {\n            this.ion({\n                aftertaskedit : () => super.createEvent(startDate, resourceRecord, row),\n                once          : true\n            });\n        }\n        else {\n            return super.createEvent(startDate, resourceRecord, row);\n        }\n    }\n\n}\n\nSchedulerProBase.initClass();\nVersionHelper.setVersion('schedulerpro', '5.5.0');\n","import SchedulerProBase from './SchedulerProBase.js';\n\n// Since SchedulerPro is based on thin XXBase classes, default features needs to be pulled in here\nimport '../../Scheduler/feature/ColumnLines.js';\nimport '../../Scheduler/feature/EventCopyPaste.js';\nimport '../../Scheduler/feature/EventDrag.js';\nimport '../../Scheduler/feature/EventDragCreate.js';\nimport '../../Scheduler/feature/EventFilter.js';\nimport '../../Scheduler/feature/EventMenu.js';\nimport '../../Scheduler/feature/EventTooltip.js';\nimport '../../Scheduler/feature/NonWorkingTime.js';\nimport '../../Scheduler/feature/ScheduleMenu.js';\nimport '../../Scheduler/feature/ScheduleTooltip.js';\nimport '../../Scheduler/feature/StickyEvents.js';\nimport '../../Scheduler/feature/TimeAxisHeaderMenu.js';\n\nimport '../../Grid/feature/CellEdit.js';\nimport '../../Grid/feature/CellMenu.js';\nimport '../../Grid/feature/ColumnDragToolbar.js';\nimport '../../Grid/feature/ColumnPicker.js';\nimport '../../Grid/feature/ColumnReorder.js';\nimport '../../Grid/feature/ColumnResize.js';\nimport '../../Grid/feature/Filter.js';\nimport '../../Grid/feature/FilterBar.js';\nimport '../../Grid/feature/Group.js';\nimport '../../Grid/feature/HeaderMenu.js';\nimport '../../Grid/feature/Sort.js';\nimport '../../Grid/feature/Stripe.js';\n// For checkbox selection mode\nimport '../../Grid/column/CheckColumn.js';\n\nimport '../feature/CellEdit.js';\nimport '../feature/Dependencies.js';\nimport '../feature/DependencyEdit.js';\nimport '../feature/EventResize.js';\nimport '../feature/TaskEdit.js';\nimport '../feature/EventSegmentDrag.js';\nimport '../feature/EventSegmentResize.js';\nimport '../feature/EventSegments.js';\n\n/**\n * @module SchedulerPro/view/SchedulerPro\n */\n\n/**\n * ## Intro\n *\n * The Scheduler Pro is an extension of the [Bryntum Scheduler](#Scheduler/view/Scheduler), and combines the visualisation capabilities\n * of the Scheduler with the powerful scheduling engine from the Gantt. This means it can manage {@link SchedulerPro/model/ProjectModel project} data composed by\n * tasks, dependencies, resources, assignments and calendars (for working / non-working time). If you have inter-task dependencies,\n * task updates will be propagated to any successors after a task is moved. The engine will reschedule tasks\n * according to the constraints, dependencies and calendars defined in the project. To familiarize yourself with the various APIs and data structures\n * of the Scheduler Pro, we recommend starting with these resources:\n *\n * * [Project data model guide](#SchedulerPro/guides/basics/project_data.md)\n * * [Bryntum Scheduler API docs](#Scheduler/view/Scheduler)\n * * [Bryntum Grid API docs](#Grid/view/Grid)\n * * [Localization](#SchedulerPro/guides/customization/localization.md)\n *\n * ## Basic setup\n *\n * To create an instance of this class, simply configure it with:\n *\n * * The {@link Grid/column/Column columns} you want\n * * The {@link Grid/view/Grid#config-features} you want, quite a lot to choose from, and you can build your own too\n * * A {@link SchedulerPro/model/ProjectModel Project} instance:\n * * A {@link Scheduler/preset/ViewPreset viewPreset} identifier, specifying the granularity of the time axis.\n *\n * ```javascript\n * const scheduler = new SchedulerPro({\n *    // A Project holds the data and the calculation engine for Scheduler Pro. It also acts as a CrudManager, allowing\n *    // loading data into all stores at once\n *    project : {\n *        autoLoad  : true,\n *        transport : {\n *            load : {\n *                url : './data/data.json'\n *            }\n *       }\n *    },\n *\n *    adopt             : 'container',\n *    startDate         : '2020-05-01',\n *    endDate           : '2020-09-30',\n *    resourceImagePath : '../_shared/images/users/',\n *    viewPreset        : 'dayAndWeek'\n *    features : {\n *       columnLines  : false,\n *       dependencies : true\n *   },\n *\n *   columns : [\n *       {\n *           type           : 'resourceInfo',\n *           text           : 'Worker',\n *           showEventCount : true\n *       }\n *   ]\n * });\n * ```\n *\n * {@inlineexample SchedulerPro/view/SchedulerPro.js}\n *\n * ## Inheriting from Bryntum Grid\n * Bryntum Scheduler Pro inherits from Bryntum Grid, meaning that most features available in the grid are also available\n * for the scheduler. Common features include columns, cell editing, context menus, row grouping, sorting and more.\n * Note: If you want to use the Grid component standalone, e.g. to use drag-from-grid functionality, you need a separate\n * license for the Grid component.\n *\n * ## Customisation\n *\n * You can style any aspect of the Scheduler using plain CSS or modify our themes using our built-in SASS variables.\n * Using the {@link Scheduler/view/mixin/SchedulerEventRendering#config-eventRenderer} you can customize the HTML output for\n * each event bar. The Scheduler comes with a few different {@link #config-eventStyle event styles} which you can\n * define globally on the Scheduler, in the resource data, or on individual events.\n *\n * {@inlineexample SchedulerPro/view/EventStyles.js}\n *\n * For more information about styling, please refer to the [styling guide](#SchedulerPro/guides/customization/styling.md).\n *\n * ## Partnering with other timeline widgets\n *\n * You can also pair the Scheduler Pro with other timeline based widgets such as the {@link SchedulerPro/view/ResourceHistogram histogram widget}\n * to view resource allocation levels, using the {@link #config-partner} config.\n *\n * {@inlineexample SchedulerPro/view/ResourceHistogram.js}\n *\n * ### Differences between Scheduler and Scheduler Pro\n * Scheduler Pro extends Scheduler and schedules tasks based on the Project, Resource and Event calendars, while also taking into account\n * dependencies and constraints. Scheduler Pro also comes with more demos showing off advanced use cases. Below is a list\n * of technical differences between the two versions:\n *\n * - Scheduler uses an EventStore, ResourceStore (optionally an AssignmentStore and a DependencyStore), whereas Scheduler Pro always\n * uses an AssignmentStore to manage event assignments.\n * - Scheduler Pro uses the same data model as the Gantt and can visualise a Project side by side with the Gantt.\n * - Scheduler supports showing dependencies but they are just visual elements, they do not impact scheduling. In Scheduler Pro,\n * adding a dependency between two tasks will affect the scheduling of the successor task.\n * - Scheduler Pro supports visualising a task completion progress bar.\n * - Scheduler Pro includes a Timeline widget and a Resource Histogram widget.\n *\n * @extends SchedulerPro/view/SchedulerProBase\n * @classType schedulerpro\n * @widget\n */\nexport default class SchedulerPro extends SchedulerProBase {\n\n    //region Config\n\n    static get $name() {\n        return 'SchedulerPro';\n    }\n\n    static get type() {\n        return 'schedulerpro';\n    }\n\n    //endregion\n\n}\n\nSchedulerPro.initClass();\n","import ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport SchedulerBase from '../../Scheduler/view/SchedulerBase.js';\nimport '../../Scheduler/feature/TimeRanges.js';\nimport Store from '../../Core/data/Store.js';\nimport { SchedulerProProjectMixin } from '../../Engine/quark/model/scheduler_pro/SchedulerProProjectMixin.js';\n\n/**\n * @module SchedulerPro/widget/Timeline\n */\n\n/**\n * A visual component showing an overview timeline of events having the {@link SchedulerPro.model.EventModel#field-showInTimeline showInTimeline}\n * field set to true. The timeline component subclasses the {@link Scheduler.view.Scheduler Scheduler} and to use it,\n * simply provide it with a {@link SchedulerPro.model.ProjectModel}:\n *\n * ```javascript\n * const timeline = new Timeline({\n *     appendTo  : 'container',\n *     project   : project\n * });\n * ```\n *\n * {@inlineexample SchedulerPro/widget/Timeline.js}\n *\n * @extends Scheduler/view/Scheduler\n * @classType timeline\n * @widget\n */\nexport default class Timeline extends SchedulerBase {\n\n    static get $name() {\n        return 'Timeline';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'timeline';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Project config object or a Project instance\n             *\n             * @config {SchedulerPro.model.ProjectModel|ProjectModelConfig} project\n             */\n\n            /**\n             * @hideconfigs timeZone\n             */\n\n            height      : '13em',\n            eventLayout : 'pack',\n            barMargin   : 1,\n\n            // We need timeline width to be exact, because with `overflow: visible` content will look awful.\n            // Flow is like this:\n            // 1. zoomToFit is trying to set timespan to eventStore total time span. Assume start in on tuesday and end is on friday\n            // 2. zooming mixin is calculating tick width, which is e.g. 37px to fit all the ticks to the available space\n            // 3. timeAxis is configured with this new time span. By default it adjusts start and end to monday.\n            // 4. since timespan was increased, it now overflows with original tick size of 37. It requires smth smaller, like 34.\n            // 5. timeAxisViewModel is calculating fitting size. Which is correct value of 34, but value is ignored unless `forceFit` is true\n            // But apparently forceFit + zoomToSpan IS NOT SUPPORTED. So alternative approach is to disable autoAdjust\n            // on time axis to prevent increased size in #3. But then time axis start/end won't be even date, it could be\n            // smth random like `Thu Feb 07 2019 22:13:20`.\n            //\n            // On the other hand, without force-fit content might overflow and timeline is styled to show overflowing content.\n            // And that would require more additional configs\n            forceFit : true,\n            timeAxis : { autoAdjust : false },\n\n            readOnly                  : true,\n            zoomOnMouseWheel          : false,\n            zoomOnTimeAxisDoubleClick : false,\n            // eventColor                : null,\n            // eventStyle                : null,\n            rowHeight                 : 48,\n            displayDateFormat         : 'L',\n\n            // A fake resource\n            resources : [\n                {\n                    id : 1\n                }\n            ],\n\n            columns : []\n        };\n    }\n\n    static get delayable() {\n        return {\n            fillFromTaskStore : 100\n        };\n    }\n\n    construct(config = {}) {\n        const me = this;\n\n        me.startDateLabel           = document.createElement('label');\n        me.startDateLabel.className = 'b-timeline-startdate';\n        me.endDateLabel             = document.createElement('label');\n        me.endDateLabel.className   = 'b-timeline-enddate';\n\n        let initialCommitPerformed = true;\n\n        if ('project' in config) {\n            if (!config.project) {\n                throw new Error('You need to configure the Timeline with a Project');\n            }\n            // In case instance of project is provided, just take store right away and delete config, falling back to\n            // default\n            else if (config.project instanceof SchedulerProProjectMixin) {\n                me.taskStore = config.project.eventStore;\n\n                if (!config.project.isInitialCommitPerformed) {\n                    initialCommitPerformed = false;\n\n                    // For schedulerpro it is important to listen to first project commit\n                    config.project.ion({\n                        name : 'initialCommit',\n                        refresh({ isInitialCommit }) {\n                            if (isInitialCommit) {\n                                me.fillFromTaskStore();\n                                me.detachListeners('initialCommit');\n                            }\n                        },\n                        thisObj : me\n                    });\n                }\n\n                delete config.project;\n            }\n        }\n\n        // Despite the fact Timeline extends SchedulerBase, we still need to disable all these features.\n        // Because in case timeline gets into the same scope as scheduler or gantt, some features might be enabled\n        // by default. SchedulerBase jut means that we don't import anything extra. But other components might.\n        config.features = ObjectHelper.assign({\n            cellEdit            : false,\n            cellMenu            : false,\n            columnAutoWidth     : false,\n            columnLines         : false,\n            columnPicker        : false,\n            columnReorder       : false,\n            columnResize        : false,\n            contextMenu         : false,\n            eventContextMenu    : false,\n            eventDrag           : false,\n            eventDragCreate     : false,\n            eventEdit           : false,\n            eventFilter         : false,\n            eventMenu           : false,\n            eventResize         : false,\n            eventTooltip        : false,\n            group               : false,\n            headerMenu          : false,\n            regionResize        : false,\n            scheduleContextMenu : false,\n            scheduleMenu        : false,\n            scheduleTooltip     : false,\n            sort                : false,\n            timeAxisHeaderMenu  : false,\n            timeRanges          : false\n        }, config.features);\n\n        super.construct(config);\n\n        if (me.features.timeRanges) {\n            // We don't want to show timeRanges relating to Project\n            me.features.timeRanges.store = new Store();\n        }\n\n        // If original project is not committed by this time, we should not try to fill timeline from the task store,\n        // because project listener will do it itself. And also to not do extra suspendRefresh which would break project\n        // refresh event listener behavior.\n        // https://github.com/bryntum/support/issues/2665\n        initialCommitPerformed && me.fillFromTaskStore.now();\n\n        me.taskStore.ion({\n            refreshPreCommit : me.fillFromTaskStore,\n            changePreCommit  : me.onTaskStoreChange,\n            thisObj          : me\n        });\n\n        me.ion({\n            resize  : me.onSizeChanged,\n            thisObj : me\n        });\n\n        me.bodyContainer.appendChild(me.startDateLabel);\n        me.bodyContainer.appendChild(me.endDateLabel);\n    }\n\n    onSizeChanged({ width, oldWidth }) {\n        const\n            me    = this,\n            reFit = width !== oldWidth;\n\n        // Save a refresh, will come from fit. Don't suspend if we won't re-fit, we need the refresh for events\n        // to not disappear (since updating row height clears cache)\n        reFit && me.suspendRefresh();\n\n        me.syncRowHeight();\n\n        if (reFit) {\n            me.resumeRefresh();\n\n            me.fitTimeline();\n        }\n    }\n\n    syncRowHeight() {\n        if (this.bodyContainer.isConnected) {\n            this.rowHeight = this.bodyContainer.offsetHeight;\n        }\n    }\n\n    fitTimeline() {\n        if (this.eventStore.count > 0) {\n            this.forceFit = false;\n            this.zoomToFit(\n                {\n                    leftMargin  : 50,\n                    rightMargin : 50\n                }\n            );\n            this.forceFit = true;\n        }\n\n        this.updateStartEndLabels();\n    }\n\n    updateStartEndLabels() {\n        const me                    = this;\n        me.startDateLabel.innerHTML = me.getFormattedDate(me.startDate);\n        me.endDateLabel.innerHTML   = me.getFormattedDate(me.endDate);\n    }\n\n    async onTaskStoreChange({ action, record, records, changes, isCollapse }) {\n        const\n            me         = this,\n            eventStore = me.eventStore;\n\n        let needsFit;\n\n        switch (action) {\n            case 'add':\n                records.forEach(task => {\n                    if (task.showInTimeline) {\n                        eventStore.add(me.cloneTask(task));\n                        needsFit = true;\n                    }\n                });\n                break;\n            case 'remove':\n                if (!isCollapse) {\n                    records.forEach(task => {\n                        if (task.showInTimeline) {\n                            eventStore.remove(task.id);\n                            needsFit = true;\n                        }\n                    });\n                }\n                break;\n            case 'removeall':\n                me.fillFromTaskStore.now();\n                break;\n\n            case 'update': {\n                const task = record;\n\n                if (changes.showInTimeline) {\n                    // Add or remove from our eventStore\n                    if (task.showInTimeline) {\n                        eventStore.add(me.cloneTask(task));\n                    }\n                    else {\n                        const timelineEvent = eventStore.getById(task.id);\n\n                        if (timelineEvent) {\n                            eventStore.remove(timelineEvent);\n                        }\n                    }\n                    needsFit = true;\n                }\n                else if (task.showInTimeline) {\n                    // Just sync with existing clone\n                    const clone = eventStore.getById(task.id);\n\n                    if (clone) {\n                        // Fields might have been remapped\n                        clone.set(me.cloneTask(task));\n                        needsFit = true;\n                    }\n                }\n                break;\n            }\n        }\n\n        if (needsFit) {\n            me.fitTimeline();\n        }\n    }\n\n    cloneTask(task) {\n        return {\n            id         : task.id,\n            resourceId : 1,\n            name       : task.name,\n            startDate  : task.startDate,\n            endDate    : task.endDate,\n            cls        : task.cls\n        };\n    }\n\n    render() {\n        super.render(...arguments);\n\n        this.syncRowHeight();\n    }\n\n    async fillFromTaskStore() {\n        const\n            me            = this,\n            timelineTasks = [];\n\n        me.taskStore.traverse(task => {\n            if (task.showInTimeline && task.isScheduled) {\n                timelineTasks.push(me.cloneTask(task));\n            }\n        });\n\n        me.events = timelineTasks;\n        await me.project.commitAsync();\n\n        if (me.isDestroyed) {\n            return;\n        }\n\n        me.fitTimeline();\n    }\n\n    onLocaleChange() {\n        this.updateStartEndLabels();\n        super.onLocaleChange();\n    }\n};\n\n// Register this widget type with its Factory\nTimeline.initClass();\n","import StringHelper from '../../Core/helper/StringHelper.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport GridRowModel from '../../Grid/data/GridRowModel.js';\nimport TreeGrid from '../../Grid/view/TreeGrid.js';\nimport ArrayHelper from '../../Core/helper/ArrayHelper.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\n\n/**\n * @module SchedulerPro/widget/VersionGrid\n */\n\nconst\n    EMPTY_ARRAY = [],\n    actionTypeOrder = { remove : 1, add : 2, update : 3 },\n    entityTypeOrder = { TaskModel : 1, DependencyModel : 2, AssignmentModel : 3, ProjectModel : 4 },\n    // For moves, describe the former and current locations\n    describePosition = ({ parent, index }) => `${parent.name}[${index}]`,\n    knownEntityTypes = {\n        AssignmentModel : 'Assignment',\n        DependencyModel : 'Dependency'\n    };\n\nclass VersionGridRow extends GridRowModel {\n    static fields = [\n        {\n            name : 'description',\n            type : 'string'\n        }, {\n            name : 'occurredAt',\n            type : 'date'\n        }, {\n            name : 'versionModel'\n        }, {\n            name : 'transactionModel'\n        }, {\n            name : 'propertyUpdate'\n        }, {\n            name : 'action'\n        }\n    ];\n}\n\n/**\n * Displays a list of versions and the transactions they contain. For use with the {@link SchedulerPro.feature.Versions}\n * feature.\n *\n * Configure the VersionGrid with a {@link SchedulerPro.model.ProjectModel} using the {@link #config-project} config.\n *\n * @extends Grid/view/TreeGrid\n * @classType versiongrid\n * @widget\n */\nexport default class VersionGrid extends TreeGrid {\n    static $name = 'VersionGrid';\n\n    static type = 'versiongrid';\n\n    static configurable = {\n\n        store : {\n            tree       : true,\n            modelClass : VersionGridRow,\n            sorters    : [\n                {\n                    field     : 'occurredAt',\n                    ascending : false\n                },\n                VersionGrid.sortActionRows\n            ],\n            reapplySortersOnAdd : true\n        },\n\n        /**\n         * The {@link SchedulerPro.model.ProjectModel} whose versions and changes are being observed in this grid.\n         * @config {SchedulerPro.model.ProjectModel}\n         */\n        project : null,\n\n        /**\n         * Whether to display transactions not yet associated with a version.\n         * @prp {Boolean}\n         */\n        showUnattachedTransactions : true,\n\n        /**\n         * Whether to show only versions that have been assigned a specific name.\n         * @prp {Boolean}\n         */\n        showNamedVersionsOnly : false,\n\n        /**\n         * Whether to include version rows in the display.\n         * @prp {Boolean}\n         */\n        showVersions : true,\n\n        /**\n         * The id of the version currently being compared, if any.\n         * @prp {Boolean}\n         */\n        comparingVersionId : null,\n\n        flex : 0,\n\n        features : {\n            group : {\n                field : 'id'\n            },\n\n            cellEdit : {\n                continueEditingOnCellClick : false,\n                editNextOnEnterPress       : false\n            },\n\n            cellMenu : {\n                items : {\n                    removeRow    : false,\n                    cut          : false,\n                    copy         : false,\n                    paste        : false,\n                    renameButton : {\n                        text   : 'L{VersionGrid.rename}',\n                        icon   : 'b-icon b-icon-edit',\n                        onItem : ({ record, source : grid }) => {\n                            grid.startEditing({\n                                id     : record.id,\n                                column : grid.columns.get('description')\n                            });\n                        }\n                    },\n                    restoreButton : {\n                        text   : 'L{VersionGrid.restore}',\n                        icon   : 'b-icon b-icon-undo',\n                        onItem : ({ record, source : grid }) => {\n                            grid.triggerRestore(record.versionModel);\n                        }\n                    },\n                    compareButton : {\n                        text   : 'L{VersionGrid.compare}',\n                        icon   : 'b-icon b-icon-compare',\n                        onItem : ({ record, source : grid }) => {\n                            grid.triggerCompare(record.versionModel);\n                        }\n                    },\n                    stopComparingButton : {\n                        text   : 'L{VersionGrid.stopComparing}',\n                        onItem : ({ record, source : grid }) => {\n                            grid.triggerStopCompare();\n                        }\n                    }\n                }\n            },\n\n            rowCopyPaste : false\n        },\n\n        columns : [\n            { type : 'tree', text : 'L{VersionGrid.description}', field : 'description', flex : 4, groupable : false, renderer : ({ grid, ...rest }) => grid.renderDescription({ grid, ...rest }), autoHeight : true },\n            { text : 'L{VersionGrid.occurredAt}', field : 'occurredAt', type : 'date', flex : 1, groupable : false }\n        ],\n\n        /**\n         * The date format used for displaying date values in change actions.\n         * @config {String}\n         */\n        dateFormat : 'M/D/YY h:mm a',\n\n        internalListeners : {\n            beforeCellEditStart({ editorContext : { column, record } }) {\n                // Only version descriptions are editable\n                if (!(column.field === 'description' && record.versionModel)) {\n                    return false;\n                }\n            },\n\n            finishCellEdit({ editorContext : { record, value } }) {\n                record.versionModel.name = (value != null && value.trim()) ? value : null;\n            },\n\n            cellMenuBeforeShow({ source, record, items }) {\n                items.stopComparingButton.disabled = !source.comparingVersionId;\n                return Boolean(record.versionModel);\n            },\n\n            toggleNode({ record, collapse }) {\n                this._expandedById.set(record.id, !collapse);\n            }\n        }\n    };\n\n    static delayable = {\n        processUpdates : {\n            type              : 'raf',\n            cancelOutstanding : true\n        }\n    };\n\n    // Bookkeeping fields\n    static get properties() {\n        return {\n            _rowsByUnderlyingRecord : new WeakMap(),\n            _expandedById           : new Map()\n        };\n    };\n\n    _transactionChanges = [];\n    _versionChanges = [];\n    comparingRowCls = `b-${VersionGrid.type}-comparing`;\n\n    construct(config) {\n        super.construct({\n            ...config,\n            features : ObjectHelper.merge({}, VersionGrid.configurable.features, config.features)\n        });\n    }\n\n    afterConstruct() {\n        if (!this.project) {\n            throw new Error(`${VersionGrid.$name} requires the project config.`);\n        }\n        this.refreshGrid();\n    }\n\n    updateDateFormat(newDateFormat) {\n        const occurredAtColumn = this.columns.get('occurredAt');\n        if (occurredAtColumn) {\n            occurredAtColumn.format = newDateFormat;\n        }\n    }\n\n    updateProject(newProject) {\n        const me = this;\n\n        me.detachListeners('storeChange');\n\n        me._versionStore = newProject.getCrudStore('versions');\n        me._transactionStore = newProject.getCrudStore('changelogs');\n\n        me._versionStore.ion({\n            name    : 'storeChange',\n            change  : me.onVersionStoreChange,\n            thisObj : me\n        });\n        me._transactionStore.ion({\n            name    : 'storeChange',\n            change  : me.onTransactionStoreChange,\n            thisObj : me\n        });\n    }\n\n    updateShowNamedVersionsOnly() {\n        if (this.isPainted) {\n            this.refreshGrid();\n        }\n    }\n\n    updateShowUnattachedTransactions() {\n        if (this.isPainted) {\n            this.refreshGrid();\n        }\n    }\n\n    updateShowVersions() {\n        if (this.isPainted) {\n            this.refreshGrid();\n        }\n    }\n\n    updateComparingVersionId(newVersionId, oldVersionId) {\n        const [oldHighlightedRow, newHighlightedRow] = [oldVersionId, newVersionId].map(versionId =>\n            this.store.getById(`v-${versionId}`));\n        if (oldHighlightedRow) {\n            oldHighlightedRow.cls = '';\n            oldHighlightedRow.iconCls = 'b-icon b-icon-version';\n        }\n        if (newHighlightedRow) {\n            newHighlightedRow.cls = this.comparingRowCls;\n            newHighlightedRow.iconCls = 'b-icon b-icon-compare';\n        }\n    }\n\n    onVersionStoreChange({ action, records }) {\n        this._versionChanges.push({ action, records });\n        this.processUpdates();\n    }\n\n    onTransactionStoreChange({ action, records }) {\n        this._transactionChanges.push({ action, records });\n        this.processUpdates();\n    }\n\n    /**\n     * This is an optimization to more efficiently replace grid rows when the underlying stores change.\n     * We wait a tick, then replace the set of rows corresponding to the modified records with the new\n     * projected rowset.\n     *\n     * The code below does not handle record remove, or updating transactions without their version in the\n     * same tick. (Versions can be updated without their transactions, as when renamed.)\n     * @private\n     */\n    processUpdates() {\n        const\n            me = this,\n            versions = ArrayHelper.unique(me._versionChanges.flatMap(({ records }) => records)),\n            // <remove-on-release>\n            // TODO: why is version.id integer but txn.versionId string using websockets?\n            // </remove-on-release>\n            versionIds = new Set(versions.map(version => String(version.id))),\n            transactions = ArrayHelper.unique(\n                me._transactionChanges.flatMap(({ records }) => records)\n                    // Expand to all transactions for incoming versions\n                    .concat(versions.length === 0 ? []\n                        : me._transactionStore.query(txn => versionIds.has(txn.versionId))));\n        // Expand to all versions for incoming transaction\n        for (const transaction of transactions) {\n            if (transaction.versionId && !versionIds.has(transaction.versionId)) {\n                versions.push(me._versionStore.getById(transaction.versionId));\n                versionIds.add(transaction.versionId);\n            }\n        }\n        me.replaceRows(ArrayHelper.unique(versions), transactions);\n        me._transactionChanges = [];\n        me._versionChanges = [];\n    }\n\n    replaceRows(versions, transactions) {\n        const\n            me = this,\n            { showNamedVersionsOnly, showUnattachedTransactions, store } = me,\n            rowsToReplaceSet = new Set(),\n            transactionsByVersionId = ArrayHelper.groupBy(transactions, 'versionId'),\n            allRecords = transactions.concat(versions),\n            versionsToShow = showNamedVersionsOnly\n                ? versions.filter(version => version.name != null)\n                : versions;\n        for (const record of allRecords) {\n            for (const row of me._rowsByUnderlyingRecord.get(record) ?? EMPTY_ARRAY) {\n                rowsToReplaceSet.add(row);\n            }\n        }\n\n        me.suspendRefresh();\n\n        store.remove(Array.from(rowsToReplaceSet));\n        for (const version of versionsToShow) {\n            const newRows = store.add(me.getGridRows(version, transactionsByVersionId[version.id]));\n            me._rowsByUnderlyingRecord.set(version, newRows);\n        }\n        if (showUnattachedTransactions) {\n            for (const transaction of transactions.filter(txn => txn.versionId == null)) {\n                const newRows = store.add(me.getGridRows(null, [transaction]));\n                me._rowsByUnderlyingRecord.set(transaction, newRows);\n            }\n        }\n\n        me.resumeRefresh();\n\n        store.sort(store.sorters);\n    }\n\n    /**\n     * Does a full replace of all rows in the grid using all records currently in the two stores.\n     * @private\n     */\n    refreshGrid() {\n        this.replaceRows(this._versionStore.records, this._transactionStore.records);\n    }\n\n    /**\n     * Transform a set of transactions (and optional parent version) into tree structure needed by grid\n     * @private\n     */\n    getGridRows(version, transactions) {\n        const\n            me = this,\n            { showVersions, comparingVersionId } = me,\n            transactionRows = transactions?.map(transaction => {\n                const id = `t-${transaction.id}`;\n                return {\n                    id,\n                    expanded         : Boolean(me._expandedById?.get(id)),\n                    description      : transaction.description,\n                    occurredAt       : transaction.occurredAt,\n                    transactionModel : transaction,\n                    rootVersionModel : version,\n                    children         : transaction.actions.map((action, index) => {\n                        const id = `a-${transaction.id}-${index}`;\n                        return {\n                            id,\n                            expanded         : Boolean(me._expandedById?.get(id)),\n                            action,\n                            rootVersionModel : version,\n                            children         : action.propertyUpdates?.map(propertyUpdate => ({\n                                rootVersionModel : version,\n                                propertyUpdate\n                            })) ?? []\n                        };\n                    })\n                };\n            }) || [],\n            id = `v-${version?.id}`;\n        return version && showVersions ? {\n            id,\n            expanded     : Boolean(me._expandedById.get(id)),\n            description  : version.description,\n            occurredAt   : version.savedAt,\n            children     : transactionRows,\n            versionModel : version,\n            iconCls      : 'b-icon-version',\n            cls          : version.id === comparingVersionId ? me.comparingRowCls : null\n        } : transactionRows;\n    }\n\n    renderDescription(event) {\n        const { record } = event;\n        if (record.propertyUpdate) {\n            return this.renderPropertyUpdate(record.propertyUpdate);\n        }\n        else if (record.action) {\n            return this.renderActionDescription(record.action);\n        }\n        return record.description;\n    }\n\n    renderPropertyUpdate(propertyUpdate) {\n        const\n            clsPrefix = VersionGrid.type,\n            { property, before, after } = propertyUpdate;\n        return {\n            children : [{\n                tag      : 'div',\n                class    : `b-${clsPrefix}-property-update-desc`,\n                children : [\n                    {\n                        tag   : 'span',\n                        class : `b-${clsPrefix}-property-name`,\n                        html  : `${this.formatPropertyName(property)}`\n                    },\n                    this.renderPropertyValue(before, 'before'),\n                    {\n                        tag   : 'i',\n                        class : 'b-icon b-icon-right'\n                    },\n                    this.renderPropertyValue(after, 'after')\n                ]\n            }]\n        };\n    }\n\n    /**\n     * Return DomConfig for an individual data value.\n     * @param {*} value\n     * @param {'before'|'after'} side\n     * @returns {DomConfig}\n     * @private\n     */\n    renderPropertyValue(value, side) {\n        return {\n            tag   : 'span',\n            class : [\n                `b-${VersionGrid.type}-property-${side}`,\n                value == null && `b-${VersionGrid.type}-empty-value`\n            ],\n            html : value == null ? this.L('L{Versions.nullValue}') : this.formatValueString(value) ?? ``\n        };\n    }\n\n    /**\n     * Convert an individual data value to a string.\n     * @param {*} value The raw data value\n     * @returns {String} A string representing the value, for display\n     * @private\n     */\n    formatValueString(value) {\n        if (DateHelper.isDate(value)) {\n            return DateHelper.format(value, this.dateFormat);\n        }\n        else if (typeof (value) === 'number') {\n            return value.toFixed(2);\n        }\n        return value;\n    }\n\n    /**\n     * Format a property name in the change log to a displayable string. By default,\n     * converts e.g. \"camelCase\" to \"Camel case\".\n     * @param {String} propertyName The raw field name\n     * @returns {String} A string formatted for display\n     * @private\n     */\n    formatPropertyName(propertyName) {\n        return StringHelper.separate(propertyName);\n    }\n\n    getAssignmentTextTokens(assignmentChange) {\n        return {\n            event    : assignmentChange.event.name,\n            resource : assignmentChange.resource.name\n        };\n    }\n\n    getDependencyTextTokens(dependencyChange) {\n        return {\n            from : dependencyChange.fromTask.name,\n            to   : dependencyChange.toTask.name\n        };\n    }\n\n    /**\n     * Produces a text description to show in the description column for an 'action' row.\n     * @param {SchedulerPro.model.changelog.ChangeLogAction} action The action to describe\n     * @returns DomConfig of description text with highlightable entity names\n     * @private\n     */\n    renderActionDescription(action) {\n        const\n            me = this,\n            { actionType, entity } = action,\n            entityNames = me.L(`L{Versions.entityNames}`);\n        let description,\n            tokens = {\n                type : entityNames[entity.type],\n                name : entity.name\n            };\n        if (actionType === 'move') {\n            tokens.from = describePosition(action.from);\n            tokens.to = describePosition(action.to);\n        }\n\n        // Concatenate action and entity type to get description pattern from localizations\n        // e.g. 'L{Versions.addDependency}' | 'L{Versions.updateEntity}'\n        description = me.L(`L{Versions.${actionType}${knownEntityTypes[entity.type] ?? 'Entity'}}`);\n\n        if (entity.type === 'DependencyModel') {\n            tokens = me.getDependencyTextTokens(entity);\n        }\n        else if (entity.type === 'AssignmentModel') {\n            tokens = me.getAssignmentTextTokens(entity);\n        }\n\n        description = description.replace(/\\{(\\w+)\\}/g, (_, variable) => tokens[variable] ?? variable);\n        if (action.isUser) {\n            description = `[!] ${description}`;\n        }\n        return me.renderHighlightedTextElements(StringHelper.capitalize(description), tokens);\n    }\n\n    /**\n     * Sorts the actions within a transaction using precedence heuristic to show most \"significant\"\n     * actions first.\n     * @param {SchedulerPro.model.changelog.ChangeLogAction[]} actions\n     */\n    static sortActionRows(row1, row2) {\n        if (row1.parent === row2.parent && row1.action && row2.action) {\n            const\n                isUser1 = Boolean(row1.action.isUser),\n                isUser2 = Boolean(row2.action.isUser),\n                { actionType : type1, entity : { type : entityType1 } } = row1.action,\n                { actionType : type2, entity : { type : entityType2 } } = row2.action;\n\n            // Initial user actions first\n            if (isUser1 !== isUser2) {\n                return isUser1 ? -1 : 1;\n            }\n\n            // Adds/removes first, then updates; within those groups, tasks first\n            return Math.sign(actionTypeOrder[type1] - actionTypeOrder[type2]) ||\n                Math.sign(entityTypeOrder[entityType1] - entityTypeOrder[entityType2]) ||\n                0;\n        }\n        return 0;\n    }\n\n    triggerRestore(version) {\n        /**\n         * Fires when the user chooses to restore a selected version.\n         * @event restore\n         * @param {SchedulerPro.model.VersionModel} version The {@link SchedulerPro.model.VersionModel} being restored\n         */\n        this.trigger('restore', { version });\n    }\n\n    triggerCompare(version) {\n        /**\n         * Fires when the user chooses to compare a selected version.\n         * @event compare\n         * @param {SchedulerPro.model.VersionModel} version The {@link SchedulerPro.model.VersionModel} being restored\n         */\n        this.trigger('compare', { version });\n    }\n\n    triggerStopCompare(version) {\n        /**\n         * Fires when the user chooses to stop comparing a currently compared version.\n         * @event stopCompare\n         */\n        this.trigger('stopCompare');\n    }\n\n    /**\n     * Produce a DomConfig for cell text where **-delimited tokens are replaced by specified values. Used to\n     * allow CSS styling of replaced tokens (e.g. task names) in the changelog.\n     *\n     * @param {String} text Text string containing optional **delimited tokens**, taken from localizations\n     * @returns {DomConfig} DomConfig with text string broken into <span>s and tokens replaced\n     * @internal\n     */\n    renderHighlightedTextElements(text) {\n        const clsPrefix = this.constructor.type;\n        return {\n            children : [{\n                tag      : 'span',\n                class    : `b-${clsPrefix}-highlighted-text`,\n                children : text.split(/\\*\\*/g).reduce((out, chunk) => {\n                    out.children.push({\n                        tag   : 'span',\n                        text  : chunk,\n                        class : out.isEntity ? `b-${clsPrefix}-highlighted-entity` : null\n                    });\n                    out.isEntity = !out.isEntity;\n                    return out;\n                }, { children : [], isEntity : false }).children\n            }]\n        };\n    }\n\n}\n\nVersionGrid.initClass();\n","//region Symlinks (\"grunt symlink\" task)\n\nexport * from './entry.engine.pro.js';\n\n//endregion\n\n// column\nexport { default as ResourceCalendarColumn } from '../lib/SchedulerPro/column/ResourceCalendarColumn.js';\n\n// data\nexport { default as AssignmentStore } from '../lib/SchedulerPro/data/AssignmentStore.js';\nexport { default as CalendarManagerStore } from '../lib/SchedulerPro/data/CalendarManagerStore.js';\nexport { default as DependencyStore } from '../lib/SchedulerPro/data/DependencyStore.js';\nexport { default as EventStore } from '../lib/SchedulerPro/data/EventStore.js';\nexport { default as EventUpdateAction } from '../lib/SchedulerPro/data/stm/action/EventUpdateAction.js';\nexport { default as ResourceStore } from '../lib/SchedulerPro/data/ResourceStore.js';\nexport { default as ResourceUtilizationStore } from '../lib/SchedulerPro/data/ResourceUtilizationStore.js';\nexport { default as StateTrackingManager } from '../lib/SchedulerPro/data/stm/StateTrackingManager.js';\nexport { default as VersionStore } from '../lib/SchedulerPro/data/VersionStore.js';\nexport { default as ChangeLogStore } from '../lib/SchedulerPro/data/ChangeLogStore.js';\n\n// data mixin\nexport { default as PartOfProject } from '../lib/SchedulerPro/data/mixin/PartOfProject.js';\nexport { default as ProjectCrudManager } from '../lib/SchedulerPro/data/mixin/ProjectCrudManager.js';\n\n// event layout\nexport { default as ProHorizontalLayout } from '../lib/SchedulerPro/eventlayout/ProHorizontalLayout.js';\nexport { default as ProHorizontalLayoutStack } from '../lib/SchedulerPro/eventlayout/ProHorizontalLayoutStack.js';\nexport { default as ProHorizontalLayoutPack } from '../lib/SchedulerPro/eventlayout/ProHorizontalLayoutPack.js';\n\n// feature\nexport { default as CalendarHighlight } from '../lib/SchedulerPro/feature/CalendarHighlight.js';\nexport { default as CellEdit } from '../lib/SchedulerPro/feature/CellEdit.js';\nexport { default as Dependencies } from '../lib/SchedulerPro/feature/Dependencies.js';\nexport { default as DependencyEdit } from '../lib/SchedulerPro/feature/DependencyEdit.js';\nexport { default as EventBuffer } from '../lib/SchedulerPro/feature/EventBuffer.js';\nexport { default as EventResize } from '../lib/SchedulerPro/feature/EventResize.js';\nexport { default as EventSegmentDrag } from '../lib/SchedulerPro/feature/EventSegmentDrag.js';\nexport { default as EventSegmentResize } from '../lib/SchedulerPro/feature/EventSegmentResize.js';\nexport { default as EventSegments } from '../lib/SchedulerPro/feature/EventSegments.js';\nexport { default as NestedEvents } from '../lib/SchedulerPro/feature/NestedEvents.js';\nexport { default as PercentBar } from '../lib/SchedulerPro/feature/PercentBar.js';\nexport { default as ResourceNonWorkingTime } from '../lib/SchedulerPro/feature/ResourceNonWorkingTime.js';\nexport { default as TaskEdit } from '../lib/SchedulerPro/feature/TaskEdit.js';\nexport { default as TimeSpanHighlight } from '../lib/SchedulerPro/feature/TimeSpanHighlight.js';\nexport { default as Versions } from '../lib/SchedulerPro/feature/Versions.js';\n\n// model\nexport { default as AssignmentModel } from '../lib/SchedulerPro/model/AssignmentModel.js';\nexport { default as CalendarIntervalModel } from '../lib/SchedulerPro/model/CalendarIntervalModel.js';\nexport { default as CalendarModel } from '../lib/SchedulerPro/model/CalendarModel.js';\nexport { default as ChangeLogAction } from '../lib/SchedulerPro/model/changelog/ChangeLogAction.js';\nexport { default as ChangeLogPropertyUpdate } from '../lib/SchedulerPro/model/changelog/ChangeLogPropertyUpdate.js';\nexport { default as ChangeLogEntity } from '../lib/SchedulerPro/model/changelog/ChangeLogEntity.js';\nexport { default as ChangeLogDependencyEntity } from '../lib/SchedulerPro/model/changelog/ChangeLogDependencyEntity.js';\nexport { default as ChangeLogAssignmentEntity } from '../lib/SchedulerPro/model/changelog/ChangeLogAssignmentEntity.js';\nexport { default as ChangeLogTransactionModel } from '../lib/SchedulerPro/model/changelog/ChangeLogTransactionModel.js';\nexport { default as DependencyModel } from '../lib/SchedulerPro/model/DependencyModel.js';\nexport { default as EventModel } from '../lib/SchedulerPro/model/EventModel.js';\nexport { default as ProjectModel } from '../lib/SchedulerPro/model/ProjectModel.js';\nexport { default as ResourceModel } from '../lib/SchedulerPro/model/ResourceModel.js';\nexport { default as ResourceUtilizationModel } from '../lib/SchedulerPro/model/ResourceUtilizationModel.js';\nexport { default as EventSegmentModel } from '../lib/SchedulerPro/model/EventSegmentModel.js';\nexport { default as VersionModel } from '../lib/SchedulerPro/model/VersionModel.js';\n\n// model mixin\nexport { default as PercentDoneMixin } from '../lib/SchedulerPro/model/mixin/PercentDoneMixin.js';\nexport { default as ProjectChangeHandlerMixin } from '../lib/SchedulerPro/model/mixin/ProjectChangeHandlerMixin.js';\nexport { default as ProjectWebSocketHandlerMixin } from '../lib/SchedulerPro/model/mixin/ProjectWebSocketHandlerMixin.js';\n\n// view mixin\nexport { default as ProjectProgressMixin } from '../lib/SchedulerPro/view/mixin/ProjectProgressMixin.js';\nexport { default as SchedulerProEventRendering } from '../lib/SchedulerPro/view/mixin/SchedulerProEventRendering.js';\nexport { default as SchedulingIssueResolution } from '../lib/SchedulerPro/view/mixin/SchedulingIssueResolution.js';\n\n// view\nexport { default as ResourceHistogram } from '../lib/SchedulerPro/view/ResourceHistogram.js';\nexport { default as ResourceUtilization } from '../lib/SchedulerPro/view/ResourceUtilization.js';\nexport { default as SchedulerProBase } from '../lib/SchedulerPro/view/SchedulerProBase.js';\nexport { default as SchedulerPro } from '../lib/SchedulerPro/view/SchedulerPro.js';\n\n// widget\nexport { default as CalendarField } from '../lib/SchedulerPro/widget/CalendarField.js';\nexport { default as ConstraintTypePicker } from '../lib/SchedulerPro/widget/ConstraintTypePicker.js';\nexport { default as CycleResolutionPopup } from '../lib/SchedulerPro/widget/CycleResolutionPopup.js';\nexport { default as DependencyTypePicker } from '../lib/SchedulerPro/widget/DependencyTypePicker.js';\nexport { default as EffortField } from '../lib/SchedulerPro/widget/EffortField.js';\nexport { default as EndDateField } from '../lib/SchedulerPro/widget/EndDateField.js';\nexport { default as GanttTaskEditor } from '../lib/SchedulerPro/widget/GanttTaskEditor.js';\nexport { default as ModelCombo } from '../lib/SchedulerPro/widget/ModelCombo.js';\nexport { default as SchedulerTaskEditor } from '../lib/SchedulerPro/widget/SchedulerTaskEditor.js';\nexport { default as SchedulingDirectionPicker } from '../lib/SchedulerPro/widget/SchedulingDirectionPicker.js';\nexport { default as SchedulingIssueResolutionPopup } from '../lib/SchedulerPro/widget/SchedulingIssueResolutionPopup.js';\nexport { default as SchedulingModePicker } from '../lib/SchedulerPro/widget/SchedulingModePicker.js';\nexport { default as StartDateField } from '../lib/SchedulerPro/widget/StartDateField.js';\nexport { default as TaskEditorBase } from '../lib/SchedulerPro/widget/TaskEditorBase.js';\nexport { default as Timeline } from '../lib/SchedulerPro/widget/Timeline.js';\nexport { default as VersionGrid } from '../lib/SchedulerPro/widget/VersionGrid.js';\n\n// widget taskeditor\nexport { default as AdvancedTab } from '../lib/SchedulerPro/widget/taskeditor/AdvancedTab.js';\nexport { default as DependencyTab } from '../lib/SchedulerPro/widget/taskeditor/DependencyTab.js';\nexport { default as EditorTab } from '../lib/SchedulerPro/widget/taskeditor/EditorTab.js';\nexport { default as FormTab } from '../lib/SchedulerPro/widget/taskeditor/FormTab.js';\nexport { default as GeneralTab } from '../lib/SchedulerPro/widget/taskeditor/GeneralTab.js';\nexport { default as NotesTab } from '../lib/SchedulerPro/widget/taskeditor/NotesTab.js';\nexport { default as PredecessorsTab } from '../lib/SchedulerPro/widget/taskeditor/PredecessorsTab.js';\nexport { default as RecurrenceTab } from '../lib/SchedulerPro/widget/taskeditor/RecurrenceTab.js';\nexport { default as ResourcesTab } from '../lib/SchedulerPro/widget/taskeditor/ResourcesTab.js';\nexport { default as SchedulerAdvancedTab } from '../lib/SchedulerPro/widget/taskeditor/SchedulerAdvancedTab.js';\nexport { default as SchedulerGeneralTab } from '../lib/SchedulerPro/widget/taskeditor/SchedulerGeneralTab.js';\nexport { default as SuccessorsTab } from '../lib/SchedulerPro/widget/taskeditor/SuccessorsTab.js';\n\n// widget taskeditor mixin\nexport { default as EventLoader } from '../lib/SchedulerPro/widget/taskeditor/mixin/EventLoader.js';\nexport { default as ReadyStatePropagator } from '../lib/SchedulerPro/widget/taskeditor/mixin/ReadyStatePropagator.js';\n"],"names":["ResourceCalendarColumn","Column","mixin","AttachToProjectMixin","$name","type","defaults","field","text","editor","CalendarField","clearable","allowInvalid","attachToProject","project","defaultCalendar","store","calendarManagerStore","attachToResourceStore","resourceStore","ion","name","update","thisObj","onResourceUpdate","record","changes","change","_change$value","oldValue","value","id","refreshCell","renderer","getById","getValue","displayField","ColumnStore","registerColumnType","_$name","EventModel","SchedulerProEvent","derive","TimeSpan","RecurringTimeSpan","PartOfProject","EventModelMixin","PercentDoneMixin","isProEventModel","fields","defaultValue","convert","Duration","getDefaultSegmentModelClass","EventSegmentModel","updateWrapDate","date","duration","forward","Date","getTime","milliseconds","startDate","dt","isOccurrence","get","_startDate","allDay","constructor","getAllDayStartDate","me","generation","isParent","$ignoreChange","timeDiff","DateHelper","diff","child","children","add","batching","set","preamble","wrapStartDate","wrapEndDate","endDate","_endDate","getAllDayEndDate","postamble","fullEffort","unit","effortUnit","magnitude","effort","setEffort","_wrapStartDate","result","_wrapEndDate","data","isObject","arguments","outerStartDate","outerEndDate","isEditable","fieldName","isLeaf","manuallyScheduled","stm","_this$recurringEvent","recurringEvent","assigned","isDelayingCalculation","assignmentStore","storage","findItem","getCurrentConfig","options","segments","map","segment","EventStore","RecurringEventsMixin","GetEventsMixin","DayIndexMixin","EventStoreMixin","ChronoEventStoreMixin","AjaxStore","defaultConfig","modelClass","ResourceUtilizationModel","Model","construct","args","_childrenIndex","Map","origin","Object","assign","mapOriginValues","generatedParent","fillChildren","isResourceModel","isAssignmentModel","_origin$event","_origin$event2","event","iconCls","_me$origin","toRemove","Set","toAdd","assignment","has","push","new","delete","size","removeChild","length","appendChild","afterRemoveChild","records","forEach","insertChild","added","_this$origin","stores","Array","isArray","traverse","node","setModelByOrigin","getChildByOrigin","convertEmptyParentToLeaf","exposeProperties","ResourceUtilizationStore","AbstractPartOfProjectStoreMixin","configurable","tree","properties","_modelByOrigin","updateProject","setResourceStore","setAssignmentStore","setEventStore","eventStore","fillStoreFromProject","detachListeners","onResourceStoreDataChanged","onEventUpdate","onAssignmentsChange","refresh","onAssignmentsRefresh","onAssignmentsAdd","onAssignmentUpdate","remove","onAssignmentsRemove","isMove","action","resourceWrapper","getModelByOrigin","resource","assignmentWrapper","newResourceWrapper","_this$_project","_project","isSpecialRow","removeAll","trigger","removed","clear","model","sortFn","a","b","Target","ProHorizontalLayout","Base","weights","groupBy","groupByThisObj","layoutFn","grouped","Boolean","getGroupValue","layoutData","group","eventRecord","call","Infinity","getEventGroups","events","groups","sort","aValue","bValue","from","ProHorizontalLayoutStack","HorizontalLayoutStack","layoutEventsInBands","heightRun","ProHorizontalLayoutPack","HorizontalLayoutPack","groupCount","packEventsInBands","j","slot","slotSize","groupIndex","indexOf","adjustedSlotStart","height","top","start","inBandHeight","inBandTop","bandIndexToPxConvertFn","bandIndexToPxConvertThisObj","resourceRecord","counter","CalendarHighlightModel","ResourceTimeRangeModel","domIdPrefix","generateId","CalendarHighlight","ResourceTimeRangesBase","calendar","unhighlightOnDrop","collectAvailableResources","rangeCls","resourceTimeRangeModelClass","inflate","pluginConfig","config","afterConstruct","client","eventDragStart","eventDragReset","eventResizeStart","eventResizeEnd","dragCreateStart","afterDragCreate","highlightCalendar","eventRecords","resourceRecords","ArrayHelper","asArray","highlightEventCalendars","highlightResourceCalendars","clearExisting","_client$syncSplits","disabled","unhighlightCalendars","flatMap","$linkedResources","highlight","_eventRecord$calendar","timespans","getWorkingTimeRanges","timespan","currentOrientation","refreshEventsForResource","onRenderDone","syncSplits","split","_me$client$syncSplits","_me$client","_resourceRecord$calen","_me$client$syncSplits2","_me$client2","resources","keys","onEventDragStart","context","_me$collectAvailableR","availableResources","features","eventDrag","constrainDragToResource","scheduler","onEventResizeStart","onDragCreateStart","getEventsToRender","_this$highlight","onEventDataGenerated","renderData","isCalendarHighlightModel","fillSize","isVertical","wrapperCls","className","html","dataset","taskBarFeature","width","left","eventId","generateElementId","updateDisabled","was","shouldInclude","featureClass","GridFeatureManager","registerFeature","DependencyEdit","TransactionalFeature","SchedulerDependencyEdit","showLagField","editorConfig","items","activeField","label","editDependency","startFeatureTransaction","afterSave","finishFeatureTransaction","then","afterDelete","afterCancel","rejectFeatureTransaction","EventBuffer","InstancePlugin","showDuration","tooltipTemplate","$config","chain","updateTooltipTemplate","tooltip","Tooltip","forElement","timeAxisSubGridElement","forSelector","align","offset","getHtml","activeTarget","resolveEventRecord","before","matches","_me$tooltip","destroy","useEventBuffer","bufferBeforeWidth","bufferAfterWidth","wrapperChildren","enabled","isHorizontal","sizeProp","style","tag","toString","undefined","updateShowDuration","isConfiguring","refreshWithTransition","doDisable","disable","isPainted","element","classList","waitForAnimations","EventSegmentDrag","EventDrag","capitalizedEventName","getTriggerParams","dragData","assignmentRecords","browserEvent","triggerEventDrag","triggerDragStart","navigator","skipNextClick","triggerDragAbort","triggerDragAbortFinalized","triggerAfterDrop","valid","needRefresh","initialAssignmentsState","find","i","_this$dragData$assign","includes","resourceId","updateRecords","copyKeyPressed","externalDropTarget","suspendAutoCommit","updateSegment","resumeAutoCommit","isCopy","targetEventRecord","targetResourceRecord","newResource","mode","suspendRefresh","updated","draggedEvent","eventBar","eventBarEls","instanceMeta","hasTemporaryDragElement","transient","slice","newStartDate","adjustStartDate","origStart","isEqual","_me$endBatchUpdate","endListeningForBatchedUpdates","cancelBatchUpdate","commitAsync","endBatchUpdate","resumeRefresh","fillTicks","el","lastDomConfig","isEventElementDraggable","eventElement","isEventSegment","closest","drag","targetSelector","buildDragHelperConfig","getMinimalDragData","info","getElementFromContext","resolveResourceRecord","assignmentRecord","resolveAssignmentRecord","beginBatchUpdate","beginBatch","_eventRecord$event","endBatch","_eventRecord$event2","cancelBatch","setupProductDragData","_me$getDateConstraint","mainEventElement","getElementsFromEventRecord","Error","ignoreSamePositionDrop","rtl","nextSegment","listenToBatchedUpdates","beginListeningForBatchedUpdates","dateConstraints","getDateConstraints","constrainRectangle","getConstrainingRectangle","eventRegion","Rectangle","foregroundCanvas","mainEventRegion","translate","x","setupConstraints","timeAxisViewModel","snapPixelAmount","draggedEntities","suspendRecordElementRedrawing","suspendElementRedrawing","minDate","maxDate","previousSegment","end","tipId","internalSnapToPosition","snapTo","updateDragContext","dirty","_client$features$even","enableEventAnimations","eventBuffer","borderWidths","border","hollow","NestedEvents","Delayable","eventLayout","barMargin","resourceMargin","eventHeight","headerHeight","constrainDragToParent","allowNestingOnDrop","allowDeNestingOnDrop","constrainResizeToParent","maxNesting","override","delayable","refreshClient","updateEventLayout","layout","console","warn","updateBarMargin","updateResourceMargin","changeEventHeight","_eventHeights","updateEventHeight","updateHeaderHeight","setProperty","getEventLayout","parentEventRecord","overridden","getResourceMargin","isRoot","getBarMargin","getAppliedResourceHeight","childLevel","borderWidth","getEventStyle","currentParentsHeight","getResourceWidth","currentParentsWidth","attachToEventStore","onEventStoreChange","some","r","parent","onEventStoreBatchedUpdate","beforeEventDragStart","parentElement","isDraggingNestedEvent","originalParentElement","originalBounds","getElementFromAssignmentRecord","bounds","constrainDragToTimeline","relativeBounds","DomSync","addChild","afterEventDragStart","parentBounds","getBoundingClientRect","setYConstraint","setXConstraint","checkEventDragValidity","message","L","maxLevel","targetLevel","maxChildLevel","Math","max","allChildren","relativeChildLevel","processEventDrop","toScheduler","reassignedFrom","eventsToAdd","addedEvents","draggedAssignment","newParent","targetResource","rootNode","existingAssignment","assignments","newParentElement","getElementFromEventRecord","syncIdMap","nestedEventsContainer","intersection","syncId","processCrossSchedulerEventDrop","afterEventDragAbortFinalized","animation","getAnimations","transitionProperty","finished","afterEventResizeStart","timespanRecord","min","returnWrapper","_assignmentRecord$eve","getChild","scheduleEvent","eventRect","DomHelper","setTranslateXY","setTopLeft","y","filter","isEventModel","afterRenderEvent","assignedChildren","e","_e$$linkedResources","layouts","layoutEvents","overlappingEventSorter","nestedEvents","eventsData","values","absoluteTop","absoluteLeft","domConfig","renderEvent","containerDomConfig","syncOptions","syncIdField","releaseThreshold","index","findIndex","splice","elementConfig","level","ResourceNonWorkingTime","maxTimeAxisUnit","enableMouseEvents","entityName","resourceMap","ResourceNonWorkingTimeModel","timeAxis","reconfigure","prio","changePreCommit","attachToCalendarManagerStore","onTimeAxisReconfigure","onResourceChange","runWithTransition","onCalendarChange","shouldPaint","compareUnits","effectiveCalendar","ranges","getNonWorkingTimeRanges","range","cls","isNonWorking","resolveResourceNonWorkingTimeInterval","rangeElement","_rangeElement$closest","elementData","timespanDefaults","isHighlightConfig","TimeSpanHighlight","domConfigs","configs","padding","rowManager","renderDone","onViewChanged","highlightTimeSpan","draw","surround","taskRecord","isTimeSpan","animationId","addTemporaryClass","surroundTimeSpan","rect","isGanttBase","getScheduleRegion","visualize","class","sync","targetElement","containerEl","onlyChildren","timeSpan","highlightTimeSpans","timeSpans","setPrototypeOf","unhighlightTimeSpans","fadeOut","_client$syncSplits2","opacity","fadeOutDetacher","EventHelper","onTransitionEnd","property","handler","_containerEl","createElement","retainElement","onTimeAxisViewModelUpdate","ChangeLogPropertyUpdate","after","freeze","ProjectModel","ProjectChangeHandlerMixin","ProjectCrudManager","ProjectModelMixin","SchedulerProProjectMixin","calendarModelClass","CalendarModel","dependencyModelClass","DependencyModel","eventModelClass","assignmentModelClass","AssignmentModel","resourceModelClass","ResourceModel","calendarManagerStoreClass","CalendarManagerStore","dependencyStoreClass","DependencyStore","eventStoreClass","assignmentStoreClass","AssignmentStore","resourceStoreClass","ResourceStore","calendarsData","supportShortSyncResponseNote","delayCalculation","stmClass","StateTrackingManager","calendars","taskStore","allRecords","updateCalendars","SchedulerProEventRendering","horizontalLayoutPackClass","horizontalLayoutStackClass","updateInternalEventLayout","oldEventLayout","clearLayouts","key","getEventLayoutHandler","horizontal","horizontalStack","layoutEventVerticallyStack","horizontalPack","layoutEventVerticallyPack","applyLayout","widgetClass","buildReturnedValue","total","allocation","ResourceHistogram","TimelineHistogram","SchedulerStores","SchedulerResourceRendering","CrudManagerView","projectModelClass","sortFeatureStore","timeAxisColumnCellCls","effortFormat","getRecordData","aggregateDataEntry","initAggregatedDataEntry","hardRefreshOnTimeAxisReconfigure","showEffortUnit","useProjectTimeUnitsForScale","TimeUnit","Hour","barTextEffortUnit","barTipEffortUnit","showMaxEffort","series","maxEffort","barTooltipTemplate","datum","inEventTimeSpan","isGroup","getGroupBarTip","getResourceBarTip","showBarText","groupBarTipAssignmentLimit","includeInactiveEvents","histogramWidget","fixedRowHeight","currentTimeAxis","_timeAxis","partner","endReconfigure","afterConfigure","onRecordAllocationCalculated","bind","onCommitAsyncCompletion","onDestroy","_this$project$getGrap","_this$project","graph","getGraph","ticksIdentifier","removeIdentifier","clearHistogramDataCache","entity","_this$getHistogramDat","getHistogramDataCache","entries","_record$removeEntity","removeEntity","bindProject","delayCalculationStart","delayCalculationEnd","repopulateReplica","crudManager","getRowHeight","rowHeight","convertEffortUnit","toUnit","run","updateUseProjectTimeUnitsForScale","eventParams","scalePoints","generateScalePoints","_generatedScalePoints","scheduleRefreshRows","updateShowBarText","_this$project2","convertUnitsToHistogramValue","Millisecond","asMilliseconds","convertHistogramValueToUnits","as","buildScalePointText","scalePoint","getShortNameOfUnit","scaleMax","_this$project3","increment","scaleStep","getSmallerUnit","round","factor","lastPoint","updateViewPreset","viewPreset","_updatingViewPreset","isInitialCommitPerformed","onTimeAxisEndReconfigure","onRepopulateReplica","buildTicksIdentifier","addIdentifier","CalculatedValueGen","prevTicksCalendar","read","clearCombinationsWith","writeToGraph","BaseCalendarMixin","unspecifiedTimeIsWorking","intervals","ticks","tick","isWorking","collectTicksWidth","onProjectDelayCalculationStart","onProjectDelayCalculationEnd","projectUnitsHasChanged","daysPerMonth","_projectDaysPerMonth","daysPerWeek","_projectDaysPerWeek","hoursPerDay","_projectHoursPerDay","internalOnProjectRefresh","source","isInitialCommit","isCalculated","topRow","reinitialize","relayStoreDataChange","count","changeHistogramWidget","widget","oldWidget","getRectConfig","rectConfig","topValue","forceHeight","stretch","getRectClassDefault","isOverallocated","isUnderallocated","effortFormatter","format","formatter","_effortFormatter","_effortFormat","NumberFormat","_lastFormat","getEffortText","_this$project4","scaleUnit","localizedUnit","effortInUnits","getBarTipEffortUnit","defaultUnit","allocated","available","assignmentTpl","dateFormat","resultFormat","assignmentsSuffix","Day","Second","assignmentsArray","resourceAllocation","key1","value1","key2","value2","replace","StringHelper","encodeHtml","join","getBarTextEffortUnit","getBarTextDefault","view","owner","updateShowMaxEffort","_showMaxEffort","_histogramWidget","_seriesMaxEffort","updateIncludeInactiveEvents","_this$getHistogramDat2","allocationReport","onTimeAxisEndReconfigureInternal","_lastTimeAxisUnit","_lastTimeAxisIncrement","calculateRowHeights","graphReady","once","extractHistogramDataArray","renderRows","timeView","shiftPrevious","shiftNext","renderScheduledRecords","_renderOnCommitPromise","isDestroying","setHistogramDataCache","buildResourceAllocationReport","resourceAllocationInfoClass","getRecordAllocationData","await","addEntity","readAsync","$","ongoing","addListener","onHistogramDataCacheSet","aggregateRecordsHistogramData","aggregationContext","Objects","isPromise","initAggregatedAllocationEntry","units","aggregateAllocationEntry","acc","entry","_recordIndex","_entryIndex","generateGroupScalePoints","getGroupChildren","groupParent","processRecordRenderData","isGroupRecord","getTopValueByScalePoints","scaleWidgetConfig","histogramConfig","updateLocalization","initClass","ResourceUtilization","scaleColumn","getAssignmentBarTip","readOnly","columns","localeClass","renderRow","buildStore","updateResourceStore","_resourceStore","getTipHtml","tooltipContext","getRecordFromElement","allocationData","getRecordHistogramData","parseInt","resolveRecordToOrigin","destroyStores","_this$store","byAssignments","reduce","resolveOriginToRecord","onRowManagerRenderRow","row","assignCls","$original","isResourceUtilizationStore","hasLinks","link","$links","scheduleRecordRefresh","scheduleRecordParentsRefresh","getCell","_data$record","_data$record2","isHistogram","getBarTextRenderData","getBarTextRenderDataDefault","targetArray","$resources","members","recordIndex","entryIndex","recordArray","arrays","resourceEntry","aggregateHistogramData","l","showBarTip","assignmentIntervals","memberArray","member","_member$resource","_member$event","Tree","ProHorizontalRendering","HorizontalRendering","fillInnerSpanHorizontalPosition","startMS","innerStartMS","endMS","innerEndMS","durationMS","innerDurationMS","calculateMS","position","calculateHorizontalPosition","floor","getTimeSpanRenderData","rowRecord","includeOutside","ProVerticalRendering","VerticalRendering","fillInnerSpanVerticalPosition","isBatchUpdating","getCoordinateFromDate","bottom","getSingleUnitInPixels","SchedulerProBase","SchedulerBase","ProjectProgressMixin","SchedulingIssueResolution","dependencyIdField","showTaskColorPickers","isSchedulerPro","onPaintOverride","_mode","init","vertical","rendered","toggleEmptyText","bodyContainer","toggleClasses","rowCount","isLoadingOrSyncing","createEvent","isWorkingTime","taskEdit","isEditing","aftertaskedit","VersionHelper","setVersion","SchedulerPro","Timeline","forceFit","autoAdjust","zoomOnMouseWheel","zoomOnTimeAxisDoubleClick","displayDateFormat","fillFromTaskStore","startDateLabel","document","endDateLabel","initialCommitPerformed","ObjectHelper","cellEdit","cellMenu","columnAutoWidth","columnLines","columnPicker","columnReorder","columnResize","contextMenu","eventContextMenu","eventDragCreate","eventEdit","eventFilter","eventMenu","eventResize","eventTooltip","headerMenu","regionResize","scheduleContextMenu","scheduleMenu","scheduleTooltip","timeAxisHeaderMenu","timeRanges","Store","now","refreshPreCommit","onTaskStoreChange","resize","onSizeChanged","oldWidth","reFit","syncRowHeight","fitTimeline","isConnected","offsetHeight","zoomToFit","leftMargin","rightMargin","updateStartEndLabels","innerHTML","getFormattedDate","isCollapse","needsFit","task","showInTimeline","cloneTask","timelineEvent","clone","render","timelineTasks","isScheduled","isDestroyed","onLocaleChange","EMPTY_ARRAY","actionTypeOrder","entityTypeOrder","TaskModel","describePosition","knownEntityTypes","VersionGridRow","GridRowModel","VersionGrid","TreeGrid","sorters","ascending","sortActionRows","reapplySortersOnAdd","showUnattachedTransactions","showNamedVersionsOnly","showVersions","comparingVersionId","flex","continueEditingOnCellClick","editNextOnEnterPress","removeRow","cut","copy","paste","renameButton","icon","onItem","grid","startEditing","column","restoreButton","triggerRestore","versionModel","compareButton","triggerCompare","stopComparingButton","triggerStopCompare","rowCopyPaste","groupable","rest","renderDescription","autoHeight","internalListeners","beforeCellEditStart","editorContext","finishCellEdit","trim","cellMenuBeforeShow","toggleNode","collapse","_expandedById","processUpdates","cancelOutstanding","_rowsByUnderlyingRecord","WeakMap","_transactionChanges","_versionChanges","comparingRowCls","merge","refreshGrid","updateDateFormat","newDateFormat","occurredAtColumn","newProject","_versionStore","getCrudStore","_transactionStore","onVersionStoreChange","onTransactionStoreChange","updateShowNamedVersionsOnly","updateShowUnattachedTransactions","updateShowVersions","updateComparingVersionId","newVersionId","oldVersionId","oldHighlightedRow","newHighlightedRow","versionId","versions","unique","versionIds","version","String","transactions","concat","query","txn","transaction","replaceRows","rowsToReplaceSet","transactionsByVersionId","versionsToShow","newRows","getGridRows","transactionRows","_me$_expandedById","expanded","description","occurredAt","transactionModel","rootVersionModel","actions","_me$_expandedById2","_action$propertyUpdat","propertyUpdates","propertyUpdate","savedAt","renderPropertyUpdate","renderActionDescription","clsPrefix","formatPropertyName","renderPropertyValue","side","formatValueString","isDate","toFixed","propertyName","separate","getAssignmentTextTokens","assignmentChange","getDependencyTextTokens","dependencyChange","fromTask","to","toTask","actionType","entityNames","tokens","_","variable","isUser","renderHighlightedTextElements","capitalize","row1","row2","isUser1","isUser2","type1","entityType1","type2","entityType2","sign","out","chunk","isEntity","HOSTS","ONE_DAY","EXPIRING_CLASSES","isTestEnv","host","location","test","href","initialized","initExpiryHelper","baseClass","ExpiryHelper","__foo","product","productName","getVersion","callHomeDelay","blockUrl","BrowserHelper","queryString","Product","verifyUrl","blocked","lastVersionCheck","trialKey","versionCheckKey","log","cacheTrialStartTime","isExpired","readyState","onTrialExpired","addEventListener","setTimeout","updateBlockedStatus","timeString","getLocalStorageItem","time","Number","isNaN","trialStartTime","setLocalStorageItem","_window$bryntum","_window$bryntum$this$","window","bryntum","expired","saveVersionCheckKey","url","encodeURIComponent","logUrl","license","img","Image","onload","naturalWidth","blockTrial","onerror","src","rootEl","rootElement","expirationShown","floatRoot","Toast","show","timeout","removeEachSelector","forEachSelector","Widget","fromElement","maskExpiredWidget","removeLocalStorageItem","mask","cover","setWaterMark","darkColor","lightColor","_DomHelper$themeInfo","_DomHelper$themeInfo$","thumb","color","themeInfo","toLowerCase","endsWith","svgString","backgroundImage","btoa","applyBaseOverride","Override","apply","target","setWatermarks","targets","subGrids","GlobalEvents","on","SchedulerEventRendering","_overridden","ignoreDomainRe","websiteUrls","products","frameworks","prod","framework","flat","match","newScript","dataLayer","gtag","head"],"mappings":"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;MACvB,IAAI,CAAC2J,cAAc,CAACzB,MAAM,CAAClI,MAAM,CAAC8G,MAAM,CAAC,CAAA;AAC7C,KAAC,CAAC,CAAA;AACF,IAAA,OAAO0E,OAAO,CAAA;AAClB,GAAA;AACAF,EAAAA,SAASA,GAAG;AACR,IAAA,KAAK,CAACA,SAAS,CAAC,GAAG3G,SAAS,CAAC,CAAA;AAC7B,IAAA,IAAI,CAACgF,cAAc,CAAC8B,KAAK,EAAE,CAAA;AAC/B,GAAA;EACAV,gBAAgBA,CAACjE,MAAM,EAAE;AACrB,IAAA,OAAO,IAAI,CAAC6C,cAAc,CAACnH,GAAG,CAACsE,MAAM,CAAC,CAAA;AAC1C,GAAA;AACAoC,EAAAA,gBAAgBA,CAACpC,MAAM,EAAE4E,KAAK,EAAE;IAC5B,OAAO,IAAI,CAAC/B,cAAc,CAACnG,GAAG,CAACsD,MAAM,EAAE4E,KAAK,CAAC,CAAA;AACjD,GAAA;AACJ,CAAA;AACApC,wBAAwB,CAACxI,MAAM,GAAG,0BAA0B;;ACpJ5D,MAAM6K,MAAM,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EACrB,IAAID,CAAC,GAAGC,CAAC,EAAE;AACP,IAAA,OAAO,CAAC,CAAC,CAAA;AACb,GAAC,MACI,IAAID,CAAC,GAAGC,CAAC,EAAE;AACZ,IAAA,OAAO,CAAC,CAAA;AACZ,GAAC,MACI;AACD,IAAA,OAAO,CAAC,CAAA;AACZ,GAAA;AACJ,CAAC,CAAA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAeC,CAAAA,MAAM,IAAI,MAAMC,mBAAmB,UAAUD,MAAM,IAAIE,IAAI,EAAE;EACxE,WAAWxC,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACY5K,MAAAA,IAAI,EAAG,IAAI;AACX;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYqN,MAAAA,OAAO,EAAG,IAAI;AACd;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,OAAO,EAAU,IAAI;AACrBC,MAAAA,cAAc,EAAG,IAAI;AACrB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,QAAQ,EAAG,IAAA;KACd,CAAA;AACL,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;EACI,IAAIC,OAAOA,GAAG;AACV,IAAA,OAAOC,OAAO,CAAC,IAAI,CAACJ,OAAO,CAAC,CAAA;AAC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qB,GAAG,KAAK,CAAA;MACpC5R,WAAW,CAAClF,KAAK,CAAChE,GAAG,CAAC,SAAS,EAAEI,OAAO,CAAC,CAAA;AACzC,MAAA,IAAA,CAAAya,qBAAA,GAAI3O,MAAM,CAACyC,QAAQ,CAACoM,WAAW,MAAA,IAAA,IAAAF,qBAAA,KAAA,KAAA,CAAA,IAA3BA,qBAAA,CAA6B7H,OAAO,EAAE;AACtC9J,QAAAA,WAAW,CAAClF,KAAK,CAAC7D,WAAW,GAAGC,OAAO,CAAA;AAC3C,OAAA;MACA8L,MAAM,CAAC4O,qBAAqB,GAAGA,qBAAqB,CAAA;AACxD,KAAA;AACJ,GAAA;AACA;AACJ,CAAA;;AACA9G,gBAAgB,CAAC1W,MAAM,GAAG,kBAAkB,CAAA;AAAE+S,kBAAkB,CAACC,eAAe,CAAC0D,gBAAgB,EAAE,IAAI,EAAE,cAAc,CAAC,CAAA;AACxH3D,kBAAkB,CAACC,eAAe,CAAC0D,gBAAgB,EAAE,KAAK,EAAE,mBAAmB,CAAC;;ACnZhF;AACA;AACA;AACA,MAAMgH,YAAY,GAAO;AACrBC,EAAAA,MAAM,EAAG,CAAC;AACVC,EAAAA,MAAM,EAAG,CAAA;AACb,CAAC,CAAA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,YAAY,SAAS3J,cAAc,CAACvW,KAAK,CAACC,oBAAoB,EAAEkgB,SAAS,CAAC,CAAC;EAC5F,OAAOjgB,KAAK,GAAG,cAAc,CAAA;AAC7B;AACA,EAAA,OAAO6K,YAAY,GAAG;AAClB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQqV,IAAAA,WAAW,EAAG,MAAM;AACpB;AACR;AACA;AACA;AACA;AACQC,IAAAA,SAAS,EAAG,CAAC;AACb;AACR;AACA;AACA;AACA;AACQC,IAAAA,cAAc,EAAG,CAAC;AAClB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,WAAW,EAAG,EAAE;AAChB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,YAAY,EAAG,EAAE;AACjB;AACR;AACA;AACA;AACA;AACA;AACQC,IAAAA,qBAAqB,EAAG,KAAK;AAC7B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,kBAAkB,EAAG,IAAI;AACzB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,oBAAoB,EAAG,IAAI;AAC3B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,uBAAuB,EAAG,IAAI;AAC9B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,UAAU,EAAG,CAAA;GAChB,CAAA;AACD,EAAA,OAAO/P,YAAY,GAAG;IAClByG,MAAM,EAAG,CAAC,2BAA2B,CAAC;AACtCZ,IAAAA,KAAK,EAAI,CACL,mBAAmB,EAAE,kBAAkB,EAAE,gCAAgC,EACzE,sBAAsB,EAAE,qBAAqB,EAAE,8BAA8B,EAC7E,wBAAwB,EAAE,uBAAuB,EAAE,kBAAkB,CACxE;AACDmK,IAAAA,QAAQ,EAAG,CACP,mBAAmB,EAAE,cAAc,EAAE,0BAA0B,EAAE,kBAAkB,EAAE,gBAAgB,EACrG,gCAAgC,EAAE,eAAe,CAAA;GAExD,CAAA;AACD,EAAA,OAAOC,SAAS,GAAG;AACfC,IAAAA,aAAa,EAAG,KAAA;GACnB,CAAA;AACD;AACA/Y,EAAAA,SAASA,CAACgJ,MAAM,EAAEF,MAAM,EAAE;AACtB,IAAA,KAAK,CAAC9I,SAAS,CAACgJ,MAAM,EAAEF,MAAM,CAAC,CAAA;AAC/B;AACA;AACA,IAAA,IAAI,CAACE,MAAM,CAAC1F,UAAU,CAACP,IAAI,GAAG,IAAI,CAAA;AACtC,GAAA;AACAgW,EAAAA,aAAaA,GAAG;AACZ,IAAA,CAAC,IAAI,CAAC/P,MAAM,CAACsH,aAAa,IAAI,IAAI,CAACtH,MAAM,CAACuH,qBAAqB,EAAE,CAAA;AACrE,GAAA;AACAC,EAAAA,SAASA,GAAG;IACR,IAAI,CAACuI,aAAa,EAAE,CAAA;AACxB,GAAA;AACA;EACAC,iBAAiBA,CAACC,MAAM,EAAE;IACtB,IAAIA,MAAM,KAAK,OAAO,IAAI,IAAI,CAACjQ,MAAM,CAACqD,UAAU,EAAE;AAC9C6M,MAAAA,OAAO,CAACC,IAAI,CAAC,0DAA0D,CAAC,CAAA;AAC5E,KAAA;IACA,IAAI,CAACJ,aAAa,EAAE,CAAA;AACxB,GAAA;AACAK,EAAAA,eAAeA,GAAG;IACd,IAAI,CAACL,aAAa,EAAE,CAAA;AACxB,GAAA;AACAM,EAAAA,oBAAoBA,GAAG;IACnB,IAAI,CAACN,aAAa,EAAE,CAAA;AACxB,GAAA;EACAO,iBAAiBA,CAAC9R,MAAM,EAAE;AACtB;IACA,IAAI,CAAC+R,aAAa,GAAG7P,WAAW,CAACC,OAAO,CAACnC,MAAM,CAAC,CAAA;AAChD,IAAA,OAAOA,MAAM,CAAA;AACjB,GAAA;AACAgS,EAAAA,iBAAiBA,GAAG;IAChB,IAAI,CAACT,aAAa,EAAE,CAAA;AACxB,GAAA;EACAU,kBAAkBA,CAACjS,MAAM,EAAE;AACvB,IAAA,IAAI,CAACwB,MAAM,CAAC2H,OAAO,CAACV,KAAK,CAACyJ,WAAW,CAAC,2CAA2C,EAAG,CAAElS,EAAAA,MAAO,IAAG,CAAC,CAAA;IACjG,IAAI,CAACuR,aAAa,EAAE,CAAA;AACxB,GAAA;AACA;AACAY,EAAAA,cAAcA,CAAC5R,cAAc,EAAE6R,iBAAiB,EAAE;AAC9C,IAAA,IAAIA,iBAAiB,EAAE;MACnB,OAAO;QAAE1hB,IAAI,EAAG,IAAI,CAACigB,WAAAA;OAAa,CAAA;AACtC,KAAA;AACA,IAAA,OAAO,IAAI,CAAC0B,UAAU,CAACF,cAAc,CAAC5R,cAAc,CAAC,CAAA;AACzD,GAAA;AACA;AACA+R,EAAAA,iBAAiBA,CAAC/R,cAAc,EAAE6R,iBAAiB,EAAE;AACjD,IAAA,IAAIA,iBAAiB,IAAI,CAACA,iBAAiB,CAACG,MAAM,EAAE;MAChD,OAAO,IAAI,CAAC1B,cAAc,CAAA;AAC9B,KAAA;AACA,IAAA,OAAO,IAAI,CAACwB,UAAU,CAACC,iBAAiB,CAAC/R,cAAc,CAAC,CAAA;AAC5D,GAAA;AACA;AACAiS,EAAAA,YAAYA,CAACjS,cAAc,EAAE6R,iBAAiB,EAAE;AAC5C,IAAA,IAAIA,iBAAiB,IAAI,CAACA,iBAAiB,CAACG,MAAM,EAAE;MAChD,OAAO,IAAI,CAAC3B,SAAS,CAAA;AACzB,KAAA;AACA,IAAA,OAAO,IAAI,CAACyB,UAAU,CAACG,YAAY,CAACjS,cAAc,CAAC,CAAA;AACvD,GAAA;AACA;AACAkS,EAAAA,wBAAwBA,CAAClS,cAAc,EAAE6R,iBAAiB,EAAE;IACxD,MAAMzd,EAAE,GAAG,IAAI,CAAA;AACf,IAAA,IAAIyd,iBAAiB,IAAI,CAACA,iBAAiB,CAACG,MAAM,EAAE;AAChD,MAAA,IAAI5d,EAAE,CAACgc,WAAW,KAAK,OAAO,EAAE;QAC5B,MAAMG,WAAW,GAAGnc,EAAE,CAACod,aAAa,CAACK,iBAAiB,CAACM,UAAU,CAAC,CAAA;AAClE;AACA,QAAA,OAAO5B,WAAW,GAAGnc,EAAE,CAACkc,cAAc,GAAG,CAAC,CAAA;AAC9C,OAAC,MACI;AACD,QAAA,MAAM8B,WAAW,GAAGrC,YAAY,CAAC3b,EAAE,CAAC6M,MAAM,CAACoR,aAAa,CAACR,iBAAiB,EAAE7R,cAAc,CAAC,CAAC,IAAI,CAAC,CAAA;QACjG,OAAO5L,EAAE,CAACke,oBAAoB,GAAGle,EAAE,CAACoc,YAAY,GAAG4B,WAAW,CAAA;AAClE,OAAA;AACJ,KAAA;AACA,IAAA,OAAOhe,EAAE,CAAC0d,UAAU,CAACI,wBAAwB,CAAClS,cAAc,CAAC,CAAA;AACjE,GAAA;AACAuS,EAAAA,gBAAgBA,CAACvS,cAAc,EAAE6R,iBAAiB,EAAE;AAChD,IAAA,IAAIA,iBAAiB,IAAI,CAACA,iBAAiB,CAACG,MAAM,EAAE;AAChD,MAAA,OAAO,IAAI,CAACQ,mBAAmB,GAAG,IAAI,CAAChC,YAAY,CAAA;AACvD,KAAA;AACA,IAAA,OAAO,IAAI,CAACsB,UAAU,CAACS,gBAAgB,CAACvS,cAAc,CAAC,CAAA;AAC3D,GAAA;AACA;AACA;EACAyS,kBAAkBA,CAAClX,UAAU,EAAE;AAC3BA,IAAAA,UAAU,aAAVA,UAAU,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAVA,UAAU,CAAErK,GAAG,CAAC;AACZC,MAAAA,IAAI,EAAM,YAAY;AACtBM,MAAAA,MAAM,EAAI,oBAAoB;AAC9BJ,MAAAA,OAAO,EAAG,IAAA;AACd,KAAC,CAAC,CAAA;AACN,GAAA;AACAqhB,EAAAA,kBAAkBA,CAAC;AAAE3Y,IAAAA,OAAAA;AAAQ,GAAC,EAAE;AAC5B;IACA,IAAIA,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,IAAPA,OAAO,CAAE4Y,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,IAAI,CAACD,CAAC,CAACC,MAAM,CAACb,MAAM,CAAC,EAAE;MAClD,IAAI,CAAChB,aAAa,EAAE,CAAA;AACxB,KAAA;AACJ,GAAA;AACA8B,EAAAA,yBAAyBA,CAAC;AAAE/Y,IAAAA,OAAAA;AAAQ,GAAC,EAAE;AACnC;IACA,IAAI,IAAI,CAACkH,MAAM,CAACgN,sBAAsB,IAAIlU,OAAO,KAAPA,IAAAA,IAAAA,OAAO,KAAPA,KAAAA,CAAAA,IAAAA,OAAO,CAAE4Y,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,IAAI,CAACD,CAAC,CAACC,MAAM,CAACb,MAAM,CAAC,EAAE;MACxF,IAAI,CAAChB,aAAa,EAAE,CAAA;AACpB;AACA,MAAA,OAAO,KAAK,CAAA;AAChB,KAAA;AACJ,GAAA;AACA;AACA;AACA;AACA;AACA+B,EAAAA,oBAAoBA,CAACxP,OAAO,EAAE4F,QAAQ,EAAE;IACpC,MACI/U,EAAE,GAAmC,IAAI;AACzC,MAAA;AAAE6M,QAAAA,MAAAA;AAAO,OAAC,GAA2B7M,EAAE;AACvC,MAAA;QAAE6J,WAAW;AAAEmL,QAAAA,iBAAAA;AAAkB,OAAC,GAAGD,QAAQ;AAC7C,MAAA;AAAE6J,QAAAA,aAAAA;OAAe,GAAoBzP,OAAO,CAACqF,OAAO,CAAA;AACxD;IACA,IAAI3K,WAAW,CAAC4U,MAAM,IAAIG,aAAa,KAAK/R,MAAM,CAACwN,gBAAgB,EAAE;MACjEra,EAAE,CAAC6e,qBAAqB,GAAG,IAAI,CAAA;AAC/B;MACA1P,OAAO,CAAC2P,qBAAqB,GAAGF,aAAa,CAAA;MAC7CzP,OAAO,CAAC4P,cAAc,GAAG,EAAE,CAAA;AAC3B,MAAA,KAAK,MAAM9Z,UAAU,IAAI+P,iBAAiB,EAAE;QACxC,MAAM;AAAErQ,UAAAA,KAAAA;AAAM,SAAC,GAAGM,UAAU,CAAA;AAC5B;AACA;AACA;AACA,QAAA,IAAIN,KAAK,CAAC8Z,MAAM,KAAK5U,WAAW,CAAC4U,MAAM,EAAE;UACrC,MAAMtG,YAAY,GAAGtL,MAAM,CAACmS,8BAA8B,CAAC/Z,UAAU,EAAE,IAAI,CAAC,CAAA;AAC5EkK,UAAAA,OAAO,CAAC4P,cAAc,CAAC5Z,IAAI,CAAC;AACxBqP,YAAAA,OAAO,EAAG2D,YAAY;AACtB8G,YAAAA,MAAM,EAAI7E,SAAS,CAAC9P,IAAI,CAAC6N,YAAY,EAAEyG,aAAa,CAAA;AACxD,WAAC,CAAC,CAAA;AACF,UAAA,IAAI,CAAC5e,EAAE,CAACqc,qBAAqB,IAAIxP,MAAM,CAACyC,QAAQ,CAACC,SAAS,CAAC2P,uBAAuB,EAAE;AAChF;YACA,MAAMC,cAAc,GAAG/E,SAAS,CAAC9P,IAAI,CAAC6N,YAAY,EAAEtL,MAAM,CAAC+F,sBAAsB,CAAC,CAAA;YAClFuF,YAAY,CAACrE,KAAK,CAACxI,GAAG,GAAI,CAAE6T,EAAAA,cAAc,CAAC7T,GAAI,CAAG,EAAA,CAAA,CAAA;YAClD6M,YAAY,CAACrE,KAAK,CAACrD,IAAI,GAAI,CAAE0O,EAAAA,cAAc,CAAC1O,IAAK,CAAG,EAAA,CAAA,CAAA;AACpD2O,YAAAA,OAAO,CAACC,QAAQ,CAACxS,MAAM,CAACwN,gBAAgB,EAAElC,YAAY,EAAElT,UAAU,CAACxH,EAAE,CAAC,CAAA;AAC1E,WAAA;AACJ,SAAA;AACJ,OAAA;AACJ,KAAC,MACI;MACDuC,EAAE,CAAC6e,qBAAqB,GAAG,KAAK,CAAA;AACpC,KAAA;AACJ,GAAA;AACA;AACAS,EAAAA,mBAAmBA,CAACnQ,OAAO,EAAE4F,QAAQ,EAAE;AACnC;AACA,IAAA,IAAI,IAAI,CAAC8J,qBAAqB,IAAI,IAAI,CAACxC,qBAAqB,EAAE;MAC1D,MACI;AAAE9M,UAAAA,SAAAA;AAAU,SAAC,GAAG,IAAI,CAAC1C,MAAM,CAACyC,QAAQ;AACpC,QAAA;AAAEmP,UAAAA,MAAAA;SAAQ,GAAM1J,QAAQ,CAAClL,WAAW;AACpC0V,QAAAA,YAAY,GAAIpQ,OAAO,CAAC2P,qBAAqB,CAACU,qBAAqB,EAAE,CAAA;AACzE;AACAjQ,MAAAA,SAAS,CAACkQ,cAAc,CAAC,CAAC,EAAEF,YAAY,CAAClU,MAAM,GAAG8D,OAAO,CAAC4P,cAAc,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC5T,MAAM,CAAC,CAAA;AAC1F;AACAkE,MAAAA,SAAS,CAACmQ,cAAc,CAAC,CAAC,EAAEH,YAAY,CAAC/O,KAAK,GAAGrB,OAAO,CAAC4P,cAAc,CAAC,CAAC,CAAC,CAACE,MAAM,CAACzO,KAAK,CAAC,CAAA;MACxFuE,QAAQ,CAACgF,eAAe,GAAG;QAAExO,KAAK,EAAGkT,MAAM,CAACjf,SAAS;QAAE0b,GAAG,EAAGuD,MAAM,CAAC1d,OAAAA;OAAS,CAAA;AACjF,KAAA;AACJ,GAAA;AACA4e,EAAAA,sBAAsBA,CAAC;IAAEnJ,iBAAiB;IAAE3M,WAAW;IAAEzJ,QAAQ;IAAEsW,WAAW;AAAE9K,IAAAA,cAAAA;AAAe,GAAC,EAAE;IAC9F,MAAM5L,EAAE,GAAG,IAAI,CAAA;AACf;AACA;AACA;AACA,IAAA,IAAIA,EAAE,CAAC6e,qBAAqB,IAAI,CAAC7e,EAAE,CAACuc,oBAAoB,IAAI,CAAC/F,iBAAiB,KAAKpW,QAAQ,IAAIsW,WAAW,KAAK9K,cAAc,CAAC,EAAE;MAC5H,OAAO;AACH6J,QAAAA,KAAK,EAAK,KAAK;AACfmK,QAAAA,OAAO,EAAG5f,EAAE,CAAC6f,CAAC,CAAC,wBAAwB,CAAA;OAC1C,CAAA;AACL,KAAA;AACA;AACA,IAAA,IAAI,CAAC7f,EAAE,CAACsc,kBAAkB,IAAI9F,iBAAiB,IAAIA,iBAAiB,KAAK3M,WAAW,CAAC4U,MAAM,EAAE;MACzF,OAAO;AACHhJ,QAAAA,KAAK,EAAK,KAAK;AACfmK,QAAAA,OAAO,EAAG5f,EAAE,CAAC6f,CAAC,CAAC,sBAAsB,CAAA;OACxC,CAAA;AACL,KAAA;AACA,IAAA,IAAIrJ,iBAAiB,IAAIA,iBAAiB,KAAK3M,WAAW,CAAC4U,MAAM,EAAE;AAC/D,MAAA,MACIqB,QAAQ,GAAa9f,EAAE,CAACyc,UAAU;AAClCsD,QAAAA,WAAW,GAAUvJ,iBAAiB,CAACtW,QAAQ,GAAGsW,iBAAiB,CAACuH,UAAU,GAAGvH,iBAAiB,CAACiI,MAAM,CAACV,UAAU;AACpHiC,QAAAA,aAAa,GAAQC,IAAI,CAACC,GAAG,CAAC,GAAGrW,WAAW,CAACsW,WAAW,CAACnd,GAAG,CAACzC,KAAK,IAAIA,KAAK,CAACwd,UAAU,CAAC,CAAC;AACxFqC,QAAAA,kBAAkB,GAAGJ,aAAa,GAAGnW,WAAW,CAACkU,UAAU,CAAA;AAC/D,MAAA,IAAIgC,WAAW,GAAGK,kBAAkB,IAAIN,QAAQ,EAAE;QAC9C,OAAO;AACHrK,UAAAA,KAAK,EAAK,KAAK;AACfmK,UAAAA,OAAO,EAAG5f,EAAE,CAAC6f,CAAC,CAAC,sBAAsB,CAAA;SACxC,CAAA;AACL,OAAA;AACJ,KAAA;AACJ,GAAA;AACA;AACAQ,EAAAA,gBAAgBA,CAAC;IAAElR,OAAO;IAAEmR,WAAW;IAAEzW,WAAW;IAAE+B,cAAc;IAAE2U,cAAc;IAAE/L,OAAO;IAAEgM,WAAW;IAAEC,WAAW;AAAEC,IAAAA,iBAAAA;AAAkB,GAAC,EAAE;IAC1I,MACI;AAAEjC,QAAAA,MAAAA;AAAO,OAAC,GAAc5U,WAAW;AACnC,MAAA;AAAE2M,QAAAA,iBAAAA;AAAkB,OAAC,GAAGrH,OAAO,CAAA;IACnC,IAAIwR,SAAS,GAAGlC,MAAM,CAAA;AACtB;AACA;IACA,IAAIA,MAAM,KAAKjI,iBAAiB,IAAI,CAAC,IAAI,CAAC6F,qBAAqB,EAAE;AAC7D;AACA,MAAA,IAAI7F,iBAAiB,IAAI,IAAI,CAAC8F,kBAAkB,EAAE;AAC9C;AACAqE,QAAAA,SAAS,GAAGnK,iBAAiB,CAACtW,QAAQ,GAAGsW,iBAAiB,GAAGA,iBAAiB,CAACiI,MAAM,CAACb,MAAM,GAAGpH,iBAAiB,GAAGA,iBAAiB,CAACiI,MAAM,CAAA;AAC3I;AACA;QACA,MAAMmC,cAAc,GAAG,IAAI,CAAC/T,MAAM,CAAC+L,qBAAqB,CAACzJ,OAAO,CAAC8F,YAAY,CAAC,CAAA;QAC9E,IAAI2L,cAAc,KAAKhV,cAAc,EAAE;AACnCA,UAAAA,cAAc,GAAG8U,iBAAiB,CAACvY,QAAQ,GAAGyY,cAAc,CAAA;AAChE,SAAA;AACJ,OAAA;AACA;WACK;AACDD,QAAAA,SAAS,GAAGL,WAAW,CAACnZ,UAAU,CAAC0Z,QAAQ,CAAA;AAC/C,OAAA;AACA,MAAA,IAAIF,SAAS,IAAIA,SAAS,KAAKlC,MAAM,EAAE;QACnCgC,WAAW,CAACtb,IAAI,CAACwb,SAAS,CAAClb,WAAW,CAACoE,WAAW,CAAC,CAAC,CAAA;AACpD;AACA0D,QAAAA,WAAW,CAAC1F,MAAM,CAAC2Y,WAAW,EAAE3W,WAAW,CAAC,CAAA;AAChD,OAAA;AACJ,KAAA;AACA;IACA,IAAIA,WAAW,CAAC3J,QAAQ,IAAIqgB,cAAc,IAAIA,cAAc,KAAK3U,cAAc,EAAE;AAC7E,MAAA,KAAK,MAAMrL,KAAK,IAAIsJ,WAAW,CAACsW,WAAW,EAAE;AACzC,QAAA,MAAMW,kBAAkB,GAAGvgB,KAAK,CAACwgB,WAAW,CAACnL,IAAI,CAAC7M,CAAC,IAAIA,CAAC,CAACZ,QAAQ,KAAKoY,cAAc,CAAC,CAAA;AACrF,QAAA,IAAIO,kBAAkB,EAAE;UACpBA,kBAAkB,CAAC3Y,QAAQ,GAAGyD,cAAc,CAAA;AAChD,SAAA;AACJ,OAAA;AACJ,KAAA;AACA;AACA;AACA,IAAA,IAAI+U,SAAS,IAAI,CAACA,SAAS,CAAC/C,MAAM,EAAE;AAChC,MAAA,MACIoD,gBAAgB,GAAG,IAAI,CAACnU,MAAM,CAACoU,yBAAyB,CAACN,SAAS,EAAE/U,cAAc,CAAC,CAACsV,SAAS,CAACC,qBAAqB;QACnHC,YAAY,GAAOJ,gBAAgB,IAAI5G,SAAS,CAAC9P,IAAI,CAACkK,OAAO,EAAEwM,gBAAgB,CAAC,CAAA;AACpF;AACA,MAAA,IAAIA,gBAAgB,EAAE;QAClBxM,OAAO,CAACV,KAAK,CAACxI,GAAG,GAAI,CAAE8V,EAAAA,YAAY,CAAC9V,GAAI,CAAG,EAAA,CAAA,CAAA;QAC3CkJ,OAAO,CAACV,KAAK,CAACrD,IAAI,GAAI,CAAE2Q,EAAAA,YAAY,CAAC3Q,IAAK,CAAG,EAAA,CAAA,CAAA;AAC7C;AACA;QACA+D,OAAO,CAACyD,aAAa,GAAG,IAAI,CAAA;AAC5BmH,QAAAA,OAAO,CAACC,QAAQ,CAAC2B,gBAAgB,EAAExM,OAAO,EAAEA,OAAO,CAAClE,OAAO,CAAC+Q,MAAM,CAAC,CAAA;AACvE,OAAA;AACJ,KAAA;AACJ,GAAA;AACA;AACAC,EAAAA,8BAA8BA,CAAC;AAAEzX,IAAAA,WAAAA;AAAY,GAAC,EAAE;IAC5C,IAAIA,WAAW,CAAC3J,QAAQ,EAAE;AACtB,MAAA,KAAK,MAAMK,KAAK,IAAIsJ,WAAW,CAACsW,WAAW,EAAE;AACzC5f,QAAAA,KAAK,CAAC4H,QAAQ,GAAG0B,WAAW,CAAC1B,QAAQ,CAAA;AACzC,OAAA;AACJ,KAAA;AACJ,GAAA;AACA;AACA,EAAA,MAAMoZ,4BAA4BA,CAAC;IAAEzC,qBAAqB;AAAEC,IAAAA,cAAAA;AAAe,GAAC,EAAE;IAC1E,IAAI,IAAI,CAACF,qBAAqB,EAAE;AAC5B;AACA,MAAA,KAAK,MAAM2C,SAAS,IAAIzC,cAAc,CAAC,CAAC,CAAC,CAACvK,OAAO,CAACiN,aAAa,EAAE,EAAE;QAC/D,IAAID,SAAS,CAACE,kBAAkB,KAAK,KAAK,IAAIF,SAAS,CAACE,kBAAkB,KAAK,MAAM,EAAE;UACnF,MAAMF,SAAS,CAACG,QAAQ,CAAA;AAC5B,SAAA;AACJ,OAAA;AACA,MAAA,KAAK,MAAM;QAAEnN,OAAO;AAAEyK,QAAAA,MAAAA;OAAQ,IAAIF,cAAc,EAAE;AAC9C;QACAvK,OAAO,CAACV,KAAK,CAACxI,GAAG,GAAI,CAAE2T,EAAAA,MAAM,CAAC3T,GAAI,CAAG,EAAA,CAAA,CAAA;QACrCkJ,OAAO,CAACV,KAAK,CAACrD,IAAI,GAAI,CAAEwO,EAAAA,MAAM,CAACxO,IAAK,CAAG,EAAA,CAAA,CAAA;AACvCqO,QAAAA,qBAAqB,CAACrZ,WAAW,CAAC+O,OAAO,CAAC,CAAA;AAC9C,OAAA;AACJ,KAAA;AACJ,GAAA;AACA;EACAoN,qBAAqBA,CAACzS,OAAO,EAAE;IAC3B,IAAI,IAAI,CAACqN,uBAAuB,EAAE;MAC9B,MAAM;AAAEiC,QAAAA,MAAAA;OAAQ,GAAGtP,OAAO,CAAC0S,cAAc,CAAA;AACzC,MAAA,IAAIpD,MAAM,IAAI,CAACA,MAAM,CAACb,MAAM,EAAE;QAC1B,IAAI;UAAEpe,SAAS;AAAEuB,UAAAA,OAAAA;AAAQ,SAAC,GAAG0d,MAAM,CAAA;QACnC,IAAItP,OAAO,CAAC4K,eAAe,EAAE;AACzBva,UAAAA,SAAS,GAAGa,UAAU,CAAC6f,GAAG,CAAC1gB,SAAS,EAAE2P,OAAO,CAAC4K,eAAe,CAACxO,KAAK,CAAC,CAAA;AACpExK,UAAAA,OAAO,GAAGV,UAAU,CAACyhB,GAAG,CAAC/gB,OAAO,EAAEoO,OAAO,CAAC4K,eAAe,CAACmB,GAAG,CAAC,CAAA;AAClE,SAAA;QACA/L,OAAO,CAAC4K,eAAe,GAAG;AACtBxO,UAAAA,KAAK,EAAG/L,SAAS;AACjB0b,UAAAA,GAAG,EAAKna,OAAAA;SACX,CAAA;AACL,OAAA;AACJ,KAAA;AACJ,GAAA;AACA;AACA;AACA;AACAie,EAAAA,8BAA8BA,CAACnG,gBAAgB,EAAEkJ,aAAa,EAAE;AAAA,IAAA,IAAAC,qBAAA,CAAA;IAC5D,IAAInJ,gBAAgB,KAAhBA,IAAAA,IAAAA,gBAAgB,KAAAmJ,KAAAA,CAAAA,IAAAA,CAAAA,qBAAA,GAAhBnJ,gBAAgB,CAAElU,KAAK,MAAA,IAAA,IAAAqd,qBAAA,KAAA,KAAA,CAAA,IAAvBA,qBAAA,CAAyBvD,MAAM,IAAI,CAAC5F,gBAAgB,CAAClU,KAAK,CAAC8Z,MAAM,CAACb,MAAM,EAAE;AAC1E,MAAA,MAAMgB,aAAa,GAAG,IAAI,CAAC/R,MAAM,CAACoU,yBAAyB,CAACpI,gBAAgB,CAAClU,KAAK,CAAC8Z,MAAM,EAAE5F,gBAAgB,CAAC1Q,QAAQ,CAAC,CAAA;AACrH,MAAA,OAAOiX,OAAO,CAAC6C,QAAQ,CAACrD,aAAa,EAAG,CAAwB/F,sBAAAA,EAAAA,gBAAgB,CAACpb,EAAG,GAAEskB,aAAa,GAAG,EAAE,GAAG,QAAS,EAAC,CAAC,CAAA;AAC1H,KAAA;IACA,OAAO,IAAI,CAACrE,UAAU,CAACsB,8BAA8B,CAACnG,gBAAgB,EAAEkJ,aAAa,CAAC,CAAA;AAC1F,GAAA;AACA;AACA,EAAA,MAAMG,aAAaA,CAAC;IAAErY,WAAW;IAAE4T,iBAAiB;IAAEje,SAAS;AAAEgV,IAAAA,OAAAA;AAAQ,GAAC,EAAE;AACxE;AACA,IAAA,IAAIiJ,iBAAiB,EAAE;MACnB5T,WAAW,CAACrK,SAAS,GAAGA,SAAS,CAAA;AACjCqK,MAAAA,WAAW,GAAG4T,iBAAiB,CAAChY,WAAW,CAACoE,WAAW,CAAC,CAAA;AACxDA,MAAAA,WAAW,CAAC1F,MAAM,CAACsZ,iBAAiB,CAACtV,QAAQ,CAAC,CAAA;AAC9C;AACA,MAAA,IAAIqM,OAAO,EAAE;AACT,QAAA,MACIoK,aAAa,GAAG,IAAI,CAAC/R,MAAM,CAACoU,yBAAyB,CAACxD,iBAAiB,CAAC,CAACyD,SAAS,CAACC,qBAAqB;UACxGgB,SAAS,GAAO/H,SAAS,CAAC9P,IAAI,CAACkK,OAAO,EAAEoK,aAAa,CAAC,CAAA;AAC1D;QACAwD,SAAS,CAACC,cAAc,CAAC7N,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACvC4N,QAAAA,SAAS,CAACE,UAAU,CAAC9N,OAAO,EAAE2N,SAAS,CAACI,CAAC,EAAEJ,SAAS,CAAC3H,CAAC,CAAC,CAAA;AACvD4E,QAAAA,OAAO,CAACC,QAAQ,CAACT,aAAa,EAAEpK,OAAO,EAAE3K,WAAW,CAACkX,WAAW,CAAC,CAAC,CAAC,CAACtjB,EAAE,CAAC,CAAA;AAC3E,OAAA;MACA,MAAM,IAAI,CAACoP,MAAM,CAACrQ,OAAO,CAACob,WAAW,EAAE,CAAA;AAC3C,KAAC,MACI;MACD,OAAO,IAAI,CAAC8F,UAAU,CAACwE,aAAa,CAAC,GAAGpgB,SAAS,CAAC,CAAA;AACtD,KAAA;AACJ,GAAA;AACA;AACA;AACA;AACA8N,EAAAA,iBAAiBA,CAAChE,cAAc,EAAEyB,YAAY,EAAE;AAC5C,IAAA,IAAI,CAAC,IAAI,CAACQ,QAAQ,EAAE;AAChB;MACAN,WAAW,CAAC1F,MAAM,CAACwF,YAAY,EAAE,GAAGA,YAAY,CAACmV,MAAM,CAAC3Y,WAAW,IAAIA,WAAW,CAAC4Y,YAAY,IAAI,CAAC5Y,WAAW,CAAC4U,MAAM,CAACb,MAAM,CAAC,CAAC,CAAA;AACnI,KAAA;AACA,IAAA,OAAOvQ,YAAY,CAAA;AACvB,GAAA;AACAqV,EAAAA,gBAAgBA,CAAC;AAAE3S,IAAAA,UAAAA;AAAW,GAAC,EAAE;IAC7B,MACI;AAAElG,QAAAA,WAAAA;AAAY,OAAC,GAAGkG,UAAU;AAC5B,MAAA;AAAEgO,QAAAA,UAAAA;AAAW,OAAC,GAAIlU,WAAW,CAAA;IACjC,IAAIA,WAAW,CAAC3J,QAAQ,EAAE;MACtB,MACIF,EAAE,GAAG,IAAI;AACT,QAAA;UAAE4L,cAAc;UAAE4E,KAAK;UAAEnF,MAAM;UAAEoF,IAAI;UAAEnF,GAAG;AAAE6E,UAAAA,UAAAA;AAAW,SAAC,GAAGJ,UAAU,CAAA;AACzEI,MAAAA,UAAU,CAAC1P,GAAG,CAAC,wBAAwB,CAAC,CAAA;MACxCT,EAAE,CAACke,oBAAoB,GAAG7S,MAAM,CAAA;MAChCrL,EAAE,CAACoe,mBAAmB,GAAG5N,KAAK,CAAA;MAC9B,MACI;UACIlC,kBAAkB;AAClB4B,UAAAA,UAAAA;SACH,GAAwBlQ,EAAE,CAAC6M,MAAM;AAClC8V,QAAAA,gBAAgB,GAAS9Y,WAAW,CAACrJ,QAAQ,CAACgiB,MAAM,CAACI,CAAC,IAAA;AAAA,UAAA,IAAAC,mBAAA,CAAA;AAAA,UAAA,OAAA,CAAAA,mBAAA,GAAID,CAAC,CAAC5U,gBAAgB,MAAA,IAAA,IAAA6U,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAlBA,mBAAA,CAAoB9M,QAAQ,CAACnK,cAAc,CAAC,CAAA;SAAC,CAAA;AACvG;AACA;AACAkX,QAAAA,OAAO,GAAkBxU,kBAAkB,CAACyU,YAAY,CAACnX,cAAc,EAAE+W,gBAAgB,EAAE,KAAK,EAAE9Y,WAAW,EAAE7J,EAAE,CAACgjB,sBAAsB,CAAC;AACzIC,QAAAA,YAAY,GAAa,EAAE,CAAA;AAC/B,MAAA,IAAIC,UAAU,CAAA;AACd,MAAA,IAAIhT,UAAU,EAAE;AACZgT,QAAAA,UAAU,GAAG,EAAE,CAAA;QACf,KAAK,MAAMpG,MAAM,IAAI5Y,MAAM,CAACif,MAAM,CAACL,OAAO,CAAC,EAAE;AACzCI,UAAAA,UAAU,CAAC/d,IAAI,CAAC2X,MAAM,CAAC/M,UAAU,CAAC,CAAA;AACtC,SAAA;AACJ,OAAC,MACI;AACDmT,QAAAA,UAAU,GAAGJ,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAEI,UAAU,CAAA;AACpC,OAAA;AACA,MAAA,IAAIA,UAAU,EAAE;AACZ,QAAA,KAAK,MAAMpG,MAAM,IAAIoG,UAAU,EAAE;AAC7B;AACA,UAAA,IAAIhT,UAAU,EAAE;YACZ4M,MAAM,CAACrM,IAAI,IAAIA,IAAI,CAAA;YACnBqM,MAAM,CAACxR,GAAG,IAAIA,GAAG,CAAA;AACjBwR,YAAAA,MAAM,CAACsG,WAAW,GAAGtG,MAAM,CAACxR,GAAG,CAAA;AACnC,WAAC,MACI;AACD;AACA,YAAA,IAAItL,EAAE,CAACgc,WAAW,KAAK,MAAM,EAAE;cAC3Bc,MAAM,CAACxR,GAAG,GAAG,CAAC,CAAA;cACdwR,MAAM,CAACzR,MAAM,GAAGrL,EAAE,CAAC8d,wBAAwB,CAAClS,cAAc,EAAE/B,WAAW,CAAC,CAAA;AAC5E,aAAA;AACA;AAAA,iBACK,IAAI7J,EAAE,CAACgc,WAAW,KAAK,OAAO,EAAE;cACjCc,MAAM,CAACzR,MAAM,GAAGrL,EAAE,CAACod,aAAa,CAACW,UAAU,CAAC,CAAA;AAChD,aAAA;AACAjB,YAAAA,MAAM,CAACuG,YAAY,GAAGvG,MAAM,CAACrM,IAAI,CAAA;AACjCqM,YAAAA,MAAM,CAACrM,IAAI,IAAKV,UAAU,CAACsT,YAAY,IAAI5S,IAAK,CAAA;AAChDqM,YAAAA,MAAM,CAACsG,WAAW,GAAGtG,MAAM,CAACxR,GAAG,CAAA;AACnC,WAAA;AACA,UAAA,MAAMgY,SAAS,GAAGhV,kBAAkB,CAACiV,WAAW,CAACrT,UAAU,GAAG;AAAEH,YAAAA,UAAU,EAAG+M,MAAAA;AAAO,WAAC,GAAGA,MAAM,EAAEzR,MAAM,CAAC,CAAA;AACvGiY,UAAAA,SAAS,CAAClT,SAAS,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAA;AACzC6S,UAAAA,YAAY,CAAC9d,IAAI,CAACme,SAAS,CAAC,CAAA;AAChC,SAAA;AACJ,OAAA;AACA,MAAA,MAAME,kBAAkB,GAAG;AACvBpT,QAAAA,SAAS,EAAG;AACR,UAAA,2BAA2B,EAAoB,CAAC;AAChD,UAAA,CAAE,CAAyBpQ,uBAAAA,EAAAA,EAAE,CAACgc,WAAY,EAAC,GAAI,CAAA;SAClD;AACD1L,QAAAA,OAAO,EAAG;AACNC,UAAAA,cAAc,EAAG,uBAAA;SACpB;AACD/P,QAAAA,QAAQ,EAAMyiB,YAAY;AAC1BQ,QAAAA,WAAW,EAAG;AACVC,UAAAA,WAAW,EAAQ,QAAQ;AAC3BC,UAAAA,gBAAgB,EAAG,CAAA;AACvB,SAAA;OACH,CAAA;AACD;MACA,MACI;AAAEnjB,UAAAA,QAAAA;AAAS,SAAC,GAAGuP,UAAU;AACzB6T,QAAAA,KAAK,GAAUpjB,QAAQ,CAACqjB,SAAS,CAACtjB,KAAK,IAAIA,KAAK,CAAC+P,OAAO,CAACC,cAAc,KAAK,uBAAuB,CAAC,CAAA;AACxG,MAAA,IAAIqT,KAAK,KAAK,CAAC,CAAC,EAAE;AACdpjB,QAAAA,QAAQ,CAAC2E,IAAI,CAACqe,kBAAkB,CAAC,CAAA;AACrC,OAAC,MACI;QACDhjB,QAAQ,CAACsjB,MAAM,CAACF,KAAK,EAAE,CAAC,EAAEJ,kBAAkB,CAAC,CAAA;AACjD,OAAA;AACJ,KAAA;AACAzT,IAAAA,UAAU,CAACgU,aAAa,CAACzT,OAAO,CAAC0T,KAAK,GAAGjG,UAAU,CAAA;AACvD,GAAA;AACA;AACJ,CAAA;;AACAjC,YAAY,CAAC7d,MAAM,GAAG,cAAc,CAAA;AAAE+S,kBAAkB,CAACC,eAAe,CAAC6K,YAAY,EAAE,KAAK,EAAE,cAAc,CAAC;;ACtpe,MAAMmI,sBAAsB,SAAS9X,sBAAsB,CAAC;AACvE;EACA,OAAOrQ,KAAK,GAAG,wBAAwB,CAAA;AACvC,EAAA,OAAO6K,YAAY,GAAG;AAClB4F,IAAAA,QAAQ,EAAG,8BAA8B;AACzC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ2X,IAAAA,eAAe,EAAG,MAAM;AACxB;AACR;AACA;AACA;AACA;AACA;AACQC,IAAAA,iBAAiB,EAAG,KAAK;AACzB;AACR;AACA;AACA;AACQ3X,IAAAA,2BAA2B,EAAGT,sBAAsB;AACpDqY,IAAAA,UAAU,EAAG,wBAAA;GAChB,CAAA;AACD;EACA,WAAWvd,UAAUA,GAAG;IACpB,OAAO;MACHwd,WAAW,EAAG,IAAIrgB,GAAG,EAAC;KACzB,CAAA;AACL,GAAA;AACA;AACA;AACAH,EAAAA,SAASA,GAAG;AACR,IAAA,KAAK,CAACA,SAAS,CAAC,GAAG/B,SAAS,CAAC,CAAA;IAC7B,IAAI,CAAC0K,2BAA2B,GAAG,MAAM8X,2BAA2B,SAAS,IAAI,CAAC9X,2BAA2B,CAAC;MAC1G,OAAO1Q,KAAK,GAAG,6BAA6B,CAAA;MAC5C,OAAOkQ,WAAW,GAAG,6BAA6B,CAAA;KACrD,CAAA;AACD,IAAA,IAAI,CAACa,MAAM,CAAC0X,QAAQ,CAACznB,GAAG,CAAC;AACrBC,MAAAA,IAAI,EAAU,UAAU;AACxBynB,MAAAA,WAAW,EAAG,uBAAuB;AACrC;AACAC,MAAAA,IAAI,EAAU,GAAG;AACjBxnB,MAAAA,OAAO,EAAO,IAAA;AAClB,KAAC,CAAC,CAAA;AACN,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;EACAL,qBAAqBA,CAACC,aAAa,EAAE;AACjC,IAAA,KAAK,CAACD,qBAAqB,CAACC,aAAa,CAAC,CAAA;AAC1CA,IAAAA,aAAa,aAAbA,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAbA,aAAa,CAAEC,GAAG,CAAC;AACfC,MAAAA,IAAI,EAAc,eAAe;AACjC2nB,MAAAA,eAAe,EAAG,kBAAkB;AACpCznB,MAAAA,OAAO,EAAW,IAAA;AACtB,KAAC,CAAC,CAAA;AACN,GAAA;EACA0nB,4BAA4BA,CAAChoB,oBAAoB,EAAE;AAC/C,IAAA,KAAK,CAACgoB,4BAA4B,CAAChoB,oBAAoB,CAAC,CAAA;AACxDA,IAAAA,oBAAoB,aAApBA,oBAAoB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAApBA,oBAAoB,CAAEG,GAAG,CAAC;AACtBC,MAAAA,IAAI,EAAc,sBAAsB;AACxC2nB,MAAAA,eAAe,EAAG,kBAAkB;AACpCznB,MAAAA,OAAO,EAAW,IAAA;AACtB,KAAC,CAAC,CAAA;AACN,GAAA;AACA;AACA;AACA2nB,EAAAA,qBAAqBA,GAAG;AACpB;AACA,IAAA,IAAI,CAACP,WAAW,CAACzb,KAAK,EAAE,CAAA;AAC5B,GAAA;AACAic,EAAAA,gBAAgBA,CAAC;IAAE7c,MAAM;IAAErC,OAAO;IAAExI,MAAM;AAAEC,IAAAA,OAAAA;AAAQ,GAAC,EAAE;IACnD,MAAM4C,EAAE,GAAG,IAAI,CAAA;AACf;IACA,IAAIgI,MAAM,KAAK,QAAQ,EAAE;AAAA,MAAA,IAAA1K,aAAA,CAAA;AACrB,MAAA,MAAMD,MAAM,GAAGD,OAAO,CAACgP,QAAQ,CAAA;AAC/B;MACA,IAAI/O,MAAM,KAAK,OAAOA,MAAM,CAACE,QAAQ,KAAK,QAAQ,IAAI,CAAAD,CAAAA,aAAA,GAAAD,MAAM,CAACG,KAAK,MAAA,IAAA,IAAAF,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZA,aAAA,CAAcG,EAAE,MAAKJ,MAAM,CAACE,QAAQ,CAAC,EAAE;QACzFyC,EAAE,CAACqkB,WAAW,CAAChf,MAAM,CAAClI,MAAM,CAACM,EAAE,CAAC,CAAA;AAChC;AACAuC,QAAAA,EAAE,CAAC6M,MAAM,CAACiY,iBAAiB,CAAC,MAAM;UAC9B9kB,EAAE,CAAC6M,MAAM,CAACyB,kBAAkB,CAACC,wBAAwB,CAACpR,MAAM,CAAC,CAAA;AACjE,SAAC,CAAC,CAAA;AACN,OAAA;AACJ,KAAA;AACA;IACA,IAAI6K,MAAM,KAAK,QAAQ,EAAE;AACrBrC,MAAAA,OAAO,CAACC,OAAO,CAACzI,MAAM,IAAI6C,EAAE,CAACqkB,WAAW,CAAChf,MAAM,CAAClI,MAAM,CAACM,EAAE,CAAC,CAAC,CAAA;AAC/D,KAAA;IACA,IAAIuK,MAAM,KAAK,WAAW,EAAE;AACxBhI,MAAAA,EAAE,CAACqkB,WAAW,CAACzb,KAAK,EAAE,CAAA;AAC1B,KAAA;AACJ,GAAA;AACAmc,EAAAA,gBAAgBA,CAAC;IAAE/c,MAAM;IAAErC,OAAO;IAAExI,MAAM;AAAEC,IAAAA,OAAAA;AAAQ,GAAC,EAAE;AACnD,IAAA,IAAI,CAACinB,WAAW,CAACzb,KAAK,EAAE,CAAA;AACxB,IAAA,IAAI,CAACiE,MAAM,CAACpF,OAAO,EAAE,CAAA;AACzB,GAAA;AACA;AACA;AACA;AACA;AACAmI,EAAAA,iBAAiBA,CAACzH,QAAQ,EAAE8B,MAAM,EAAE;IAChC,MACIjK,EAAE,GAAwB,IAAI;AAC9B,MAAA;QAAEqkB,WAAW;AAAExX,QAAAA,MAAAA;AAAO,OAAC,GAAG7M,EAAE;AAC5B,MAAA;AAAEukB,QAAAA,QAAAA;AAAS,OAAC,GAAc1X,MAAM;AAChCmY,MAAAA,WAAW,GAAe,CAAChlB,EAAE,CAACkkB,eAAe,IAAI7jB,UAAU,CAAC4kB,YAAY,CAACV,QAAQ,CAACnjB,IAAI,EAAEpB,EAAE,CAACkkB,eAAe,CAAC,IAAI,CAAC,CAAA;IACpH,IAAI,CAAClkB,EAAE,CAAC6N,QAAQ,IAAImX,WAAW,IAAI7c,QAAQ,CAAC+c,iBAAiB,EAAE;MAC3D,IAAI,CAACb,WAAW,CAACnf,GAAG,CAACiD,QAAQ,CAAC1K,EAAE,CAAC,EAAE;AAC/B,QAAA,MACI0nB,MAAM,GAAIhd,QAAQ,CAAC+c,iBAAiB,CAACE,uBAAuB,CACxDvY,MAAM,CAACrN,SAAS,EAChBqN,MAAM,CAAC9L,OACX,CAAC;AACD4E,UAAAA,OAAO,GAAGwf,MAAM,CAACniB,GAAG,CAAC,CAACqiB,KAAK,EAAExP,CAAC,KAAK,IAAI7V,EAAE,CAACwM,2BAA2B,CAAC;AAClE/O,YAAAA,EAAE,EAAc,CAAG0K,CAAAA,EAAAA,QAAQ,CAAC1K,EAAG,CAAA,CAAA,EAAGoY,CAAE,CAAC,CAAA;YACrCjR,OAAO,EAAQygB,KAAK,CAACzgB,OAAO,IAAIuD,QAAQ,CAAC+c,iBAAiB,CAACtgB,OAAO,IAAI,EAAE;AACxE0gB,YAAAA,GAAG,EAAa,CAAA,EAAEnd,QAAQ,CAAC+c,iBAAiB,CAACI,GAAG,IAAI,EAAG,IAAGD,KAAK,CAACC,GAAG,IAAI,EAAG,CAAC,CAAA;YAC3E9lB,SAAS,EAAM6lB,KAAK,CAAC7lB,SAAS;YAC9BuB,OAAO,EAAQskB,KAAK,CAACtkB,OAAO;AAC5BhE,YAAAA,IAAI,EAAWsoB,KAAK,CAACtoB,IAAI,IAAI,EAAE;YAC/BiZ,UAAU,EAAK7N,QAAQ,CAAC1K,EAAE;AAC1B8nB,YAAAA,YAAY,EAAG,IAAA;AACnB,WAAC,CAAC,CAAC,CAAA;QACPlB,WAAW,CAAC1jB,GAAG,CAACwH,QAAQ,CAAC1K,EAAE,EAAEkI,OAAO,CAAC,CAAA;AACzC,OAAA;AACAsE,MAAAA,MAAM,CAAC9E,IAAI,CAAC,GAAGkf,WAAW,CAAC1kB,GAAG,CAACwI,QAAQ,CAAC1K,EAAE,CAAC,CAAC,CAAA;AAChD,KAAA;AACA,IAAA,OAAOwM,MAAM,CAAA;AACjB,GAAA;AACA6G,EAAAA,aAAaA,CAAC;AAAEyU,IAAAA,YAAAA;AAAa,GAAC,EAAE;AAC5B,IAAA,OAAOA,YAAY,CAAA;AACvB,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACIC,qCAAqCA,CAACC,YAAY,EAAE;AAAA,IAAA,IAAAC,qBAAA,CAAA;AAChD,IAAA,OAAOD,YAAY,KAAZA,IAAAA,IAAAA,YAAY,wBAAAC,qBAAA,GAAZD,YAAY,CAAEpN,OAAO,CAAC,+BAA+B,CAAC,cAAAqN,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAtDA,qBAAA,CAAwDC,WAAW,CAAC9b,WAAW,CAAA;AAC1F,GAAA;AACA;AACJ,CAAA;AACA;AACAoa,sBAAsB,CAAClT,YAAY,GAAG,EAAE,CAAA;AACxCkT,sBAAsB,CAAChmB,MAAM,GAAG,wBAAwB,CAAA;AAAE+S,kBAAkB,CAACC,eAAe,CAACgT,sBAAsB,EAAE,KAAK,EAAE,cAAc,CAAC;;AC5W3I;AACA;AACA;AACA,MACI2B,gBAAgB,GAAG;AACfC,EAAAA,iBAAiB,EAAG,IAAI;AACxBlY,EAAAA,aAAa,EAAO,KAAA;AACxB,CAAC,CAAA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMmY,iBAAiB,SAAS3T,cAAc,CAAC;AAC1D;AACA4T,EAAAA,UAAU,GAAG,EAAE,CAAA;AACfC,EAAAA,OAAO,GAAG,EAAE,CAAA;EACZ,WAAWlqB,KAAKA,GAAG;AACf,IAAA,OAAO,mBAAmB,CAAA;AAC9B,GAAA;EACA,WAAW6K,YAAYA,GAAG;IACtB,OAAO;AACHsf,MAAAA,OAAO,EAAG,CAAA;KACb,CAAA;AACL,GAAA;EACA,WAAWvZ,YAAYA,GAAG;IACtB,OAAO;AACHvI,MAAAA,MAAM,EAAG,CACL,mBAAmB,EACnB,oBAAoB,EACpB,sBAAsB,CACzB;MACDoO,KAAK,EAAG,CACJ,2BAA2B,CAAA;KAElC,CAAA;AACL,GAAA;AACA;AACA1O,EAAAA,SAASA,GAAG;AACR,IAAA,KAAK,CAACA,SAAS,CAAC,GAAG/B,SAAS,CAAC,CAAA;AAC7B,IAAA,IAAI,CAAC+K,MAAM,CAACqZ,UAAU,CAACppB,GAAG,CAAC;MACvBqpB,UAAU,EAAG,IAAI,CAACC,aAAa;AAC/BnpB,MAAAA,OAAO,EAAM,IAAA;AACjB,KAAC,CAAC,CAAA;AACN,GAAA;AACA;AACJ;AACA;AACA;AACA;AACIopB,EAAAA,iBAAiBA,CAAC1Z,MAAM,EAAE2Z,IAAI,GAAG,IAAI,EAAE;AAAA,IAAA,IAAA1Y,kBAAA,CAAA;IACnC,MACI5N,EAAE,GAAW,IAAI;AACjB,MAAA;QACIR,SAAS;QACTuB,OAAO;QACPhE,IAAI;QACJwpB,QAAQ;QACRN,OAAO,GAASjmB,EAAE,CAACimB,OAAO;AAC1BtY,QAAAA,aAAa,GAAG,IAAA;AACpB,OAAC,GAAYhB,MAAM;AACnB,MAAA;AAAEE,QAAAA,MAAAA;AAAO,OAAC,GAAG7M,EAAE;MACfwmB,UAAU,GAAG7Z,MAAM,CAAC8Z,UAAU,GAAG9Z,MAAM,GAAGA,MAAM,CAAC6Z,UAAU,CAAA;AAC/D;IACA,IAAI5a,cAAc,GAAIe,MAAM,CAACf,cAAc,IAAIe,MAAM,CAACxE,QAAQ,CAAA;IAC9D,MAAM;AAAEue,MAAAA,WAAAA;AAAY,KAAC,GAAG/Z,MAAM,CAAA;AAC9B,IAAA,IAAI+Z,WAAW,EAAE;AACbtE,MAAAA,SAAS,CAACuE,iBAAiB,CAAC9Z,MAAM,CAAC2H,OAAO,EAAE,wBAAwB,EAAE,GAAG,EAAE3H,MAAM,CAAC,CAAA;AACtF,KAAA;AACA,IAAA,IAAIc,aAAa,EAAE;MACf3N,EAAE,CAAC+lB,UAAU,CAACvgB,MAAM,GAAGxF,EAAE,CAACgmB,OAAO,CAACxgB,MAAM,GAAG,CAAC,CAAA;AAChD,KAAA;IACA,IAAIxF,EAAE,CAAC6N,QAAQ,EAAE;AACb;AACA,MAAA,OAAA;AACJ,KAAA;AACA,IAAA,IAAI0Y,QAAQ,EAAE;AACVvmB,MAAAA,EAAE,CAAC4mB,gBAAgB,CAACja,MAAM,CAAC,CAAA;AAC3B,MAAA,OAAA;AACJ,KAAA;AACA3M,IAAAA,EAAE,CAACgmB,OAAO,CAAC7gB,IAAI,CAACwH,MAAM,CAAC,CAAA;AACvB,IAAA,IAAIka,IAAI,CAAA;IACR,IAAIha,MAAM,CAACia,WAAW,EAAE;MACpBD,IAAI,GAAGha,MAAM,CAACka,iBAAiB,CAACP,UAAU,EAAE,IAAI,EAAE;AAAEjb,QAAAA,KAAK,EAAG/L,SAAS;AAAE0b,QAAAA,GAAG,EAAGna,OAAAA;AAAQ,OAAC,CAAC,CAAA;AAC3F,KAAC,MACI;AACD,MAAA,IAAI6K,cAAc,EAAE;AAChB;QACAA,cAAc,GAAGiB,MAAM,CAACnQ,KAAK,CAACkB,OAAO,CAACgO,cAAc,CAAC,CAAA;AACzD,OAAA;MACAib,IAAI,GAAGha,MAAM,CAACka,iBAAiB,CAACnb,cAAc,EAAE,IAAI,EAAE,IAAI,EAAE;AAAEL,QAAAA,KAAK,EAAG/L,SAAS;AAAE0b,QAAAA,GAAG,EAAGna,OAAAA;OAAS,EAAE,CAAC6K,cAAc,CAAC,CAAA;AACtH,KAAA;IACA,IAAI,CAACib,IAAI,EAAE;AACP;AACA,MAAA,OAAA;AACJ,KAAA;AACA,IAAA,IAAIZ,OAAO,EAAE;MACT,IAAIpZ,MAAM,CAAC+G,YAAY,EAAE;QACrBiT,IAAI,CAACpa,OAAO,CAACwZ,OAAO,EAAE,CAAC,EAAEA,OAAO,EAAE,CAAC,CAAC,CAAA;AACxC,OAAC,MACI;QACDY,IAAI,CAACpa,OAAO,CAAC,CAAC,EAAEwZ,OAAO,EAAE,CAAC,EAAEA,OAAO,CAAC,CAAA;AACxC,OAAA;AACJ,KAAA;IACAjmB,EAAE,CAAC+lB,UAAU,CAAC5gB,IAAI,CACd0hB,IAAI,CAACG,SAAS,CAAC;AACXxmB,MAAAA,QAAQ,EAAG,CACP;AACIymB,QAAAA,KAAK,EAAG,8BAA8B;AACtC5W,QAAAA,IAAI,EAAItT,IAAAA;AACZ,OAAC,CACJ;AACDuT,MAAAA,OAAO,EAAG;AACN+Q,QAAAA,MAAM,EAAGqF,WAAAA;OACZ;AACDO,MAAAA,KAAK,EAAG;AACJ,QAAA,yBAAyB,EAA6B,CAAC;AACvD,QAAA,CAACta,MAAM,CAAC2Y,GAAG,GAA2C3Y,MAAM,CAAC2Y,GAAG;AAChE,QAAA,CAAC3Y,MAAM,CAACsa,KAAK,IAAI,iCAAiC,GAAI,CAAA;AAC1D,OAAA;KACH,EAAE,IAAI,CACX,CAAC,CAAA;AACD,IAAA,IAAIX,IAAI,EAAE;MACNtmB,EAAE,CAACsmB,IAAI,EAAE,CAAA;AACb,KAAA;IACA,CAAA1Y,kBAAA,GAAAf,MAAM,CAAC4B,UAAU,cAAAb,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjBA,kBAAA,CAAA9D,IAAA,CAAA+C,MAAM,EAAc6B,KAAK,IAAIA,KAAK,CAAC2X,iBAAiB,CAAC1Z,MAAM,EAAE2Z,IAAI,CAAC,CAAC,CAAA;AACvE,GAAA;AACAA,EAAAA,IAAIA,GAAG;IACHlH,OAAO,CAAC8H,IAAI,CAAC;MACTC,aAAa,EAAG,IAAI,CAACC,WAAW;AAChC9D,MAAAA,SAAS,EAAO;AACZ+D,QAAAA,YAAY,EAAG,IAAI;QACnB7mB,QAAQ,EAAO,IAAI,CAACulB,UAAAA;AACxB,OAAA;AACJ,KAAC,CAAC,CAAA;AACN,GAAA;EACAa,gBAAgBA,CAACU,QAAQ,EAAE;AACvB,IAAA,IAAI,CAACC,kBAAkB,CAAC,CACpBrjB,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEmjB,QAAQ,EAAE;MACxBZ,WAAW,EAAG,CAACY,QAAQ,CAACZ,WAAW,IAAI,EAAE,IAAI,QAAQ;AACrDO,MAAAA,KAAK,EAAS,eAAe;AAC7BV,MAAAA,QAAQ,EAAM,KAAK;AACnB/mB,MAAAA,SAAS,EAAK,IAAI,CAACqN,MAAM,CAACrN,SAAS;MACnCuB,OAAO,EAAOumB,QAAQ,CAAC9nB,SAAAA;KAC1B,CAAC,EACF0E,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEmjB,QAAQ,EAAE;MACxBZ,WAAW,EAAG,CAACY,QAAQ,CAACZ,WAAW,IAAI,EAAE,IAAI,OAAO;AACpDO,MAAAA,KAAK,EAAS,eAAe;AAC7BV,MAAAA,QAAQ,EAAM,KAAK;MACnB/mB,SAAS,EAAK8nB,QAAQ,CAACvmB,OAAO;AAC9BA,MAAAA,OAAO,EAAO,IAAI,CAAC8L,MAAM,CAAC9L,OAAAA;KAC7B,CAAC,CACL,EAAE;MAAE4M,aAAa,EAAG2Z,QAAQ,CAAC3Z,aAAAA;AAAc,KAAC,CAAC,CAAA;AAClD,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACI4Z,EAAAA,kBAAkBA,CAACC,SAAS,EAAE1kB,OAAO,GAAG,EAAE,EAAE;IACxC,MACI9C,EAAE,GAAG,IAAI;AACT,MAAA;AACI2N,QAAAA,aAAa,GAAG,IAAA;AACpB,OAAC,GAAI7K,OAAO,CAAA;AAChB,IAAA,IAAI6K,aAAa,EAAE;AACf6Z,MAAAA,SAAS,GAAGA,SAAS,CAACpQ,KAAK,EAAE,CAAA;MAC7BpX,EAAE,CAAC+lB,UAAU,CAACvgB,MAAM,GAAGxF,EAAE,CAACgmB,OAAO,CAACxgB,MAAM,GAAG,CAAC,CAAA;AAChD,KAAA;IACA,IAAIxF,EAAE,CAAC6N,QAAQ,EAAE;AACb,MAAA,OAAA;AACJ,KAAA;AACA2Z,IAAAA,SAAS,CAAC5hB,OAAO,CAAC0hB,QAAQ,IAAI;AAC1B;AACA;AACA;AACAtnB,MAAAA,EAAE,CAACqmB,iBAAiB,CAACiB,QAAQ,CAACzB,iBAAiB,GAAGyB,QAAQ,GAAGpjB,MAAM,CAACujB,cAAc,CAAC7B,gBAAgB,EAAE0B,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAA;AAC1H,KAAC,CAAC,CAAA;IACFtnB,EAAE,CAACsmB,IAAI,EAAE,CAAA;AACb,GAAA;AACA;AACJ;AACA;AACA;AACA;AACI,EAAA,MAAMoB,oBAAoBA,CAACC,OAAO,GAAG,KAAK,EAAE;AAAA,IAAA,IAAAC,mBAAA,CAAA;IACxC,MACI5nB,EAAE,GAAW,IAAI;AACjB,MAAA;AAAE6M,QAAAA,MAAAA;AAAO,OAAC,GAAG7M,EAAE,CAAA;AACnB,IAAA,IAAI2nB,OAAO,EAAE;AACTvF,MAAAA,SAAS,CAACuE,iBAAiB,CAAC9Z,MAAM,CAAC2H,OAAO,EAAE,wBAAwB,EAAE,GAAG,EAAE3H,MAAM,CAAC,CAAA;AACtF,KAAA;AACA5G,IAAAA,KAAK,CAACqE,IAAI,CAACtK,EAAE,CAAConB,WAAW,CAAC5mB,QAAQ,CAAC,CAACoF,OAAO,CAAC4O,OAAO,IAAI;AACnD,MAAA,IAAImT,OAAO,EAAE;AACTnT,QAAAA,OAAO,CAACV,KAAK,CAAC+T,OAAO,GAAG,CAAC,CAAA;AACzB7nB,QAAAA,EAAE,CAAC8nB,eAAe,GAAMC,WAAW,CAACC,eAAe,CAAC;UAChDxT,OAAO;AACPyT,UAAAA,QAAQ,EAAG,SAAS;AACpBhrB,UAAAA,OAAO,EAAI4P,MAAM;UACjBqb,OAAO,EAAIA,MAAM;YACbloB,EAAE,CAAC+lB,UAAU,CAACvgB,MAAM,GAAGxF,EAAE,CAACgmB,OAAO,CAACxgB,MAAM,GAAG,CAAC,CAAA;YAC5CxF,EAAE,CAACsmB,IAAI,EAAE,CAAA;AACb,WAAA;AACJ,SAAC,CAAC,CAAA;AACN,OAAC,MACI;QACDtmB,EAAE,CAAC+lB,UAAU,CAACvgB,MAAM,GAAGxF,EAAE,CAACgmB,OAAO,CAACxgB,MAAM,GAAG,CAAC,CAAA;QAC5CxF,EAAE,CAACsmB,IAAI,EAAE,CAAA;AACb,OAAA;AACJ,KAAC,CAAC,CAAA;IACF,CAAAsB,mBAAA,GAAA/a,MAAM,CAAC4B,UAAU,MAAAmZ,IAAAA,IAAAA,mBAAA,KAAjBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,mBAAA,CAAA9d,IAAA,CAAA+C,MAAM,EAAc6B,KAAK,IAAIA,KAAK,CAACgZ,oBAAoB,CAACC,OAAO,CAAC,CAAC,CAAA;AACrE,GAAA;EACA,IAAIP,WAAWA,GAAG;AACd,IAAA,IAAI,CAAC,IAAI,CAACe,YAAY,EAAE;AACpB,MAAA,IAAI,CAACA,YAAY,GAAG/F,SAAS,CAACgG,aAAa,CAAC;AACxC3J,QAAAA,MAAM,EAAU,IAAI,CAAC5R,MAAM,CAACwN,gBAAgB;AAC5CgO,QAAAA,aAAa,EAAG,IAAI;AACpBpB,QAAAA,KAAK,EAAW,2BAAA;AACpB,OAAC,CAAC,CAAA;AACN,KAAA;IACA,OAAO,IAAI,CAACkB,YAAY,CAAA;AAC5B,GAAA;AACAG,EAAAA,yBAAyBA,GAAG;IACxB,IAAI,CAAClC,aAAa,EAAE,CAAA;AACxB,GAAA;AACAA,EAAAA,aAAaA,GAAG;AACZ,IAAA,IAAI,IAAI,CAACJ,OAAO,CAACxgB,MAAM,GAAG,CAAC,EAAE;AACzB,MAAA,IAAI,CAAC+hB,kBAAkB,CAAC,IAAI,CAACvB,OAAO,CAAC,CAAA;AACzC,KAAA;AACJ,GAAA;AACApV,EAAAA,cAAcA,CAAC/C,QAAQ,EAAEgD,GAAG,EAAE;AAC1B,IAAA,IAAIhD,QAAQ,EAAE;MACV,IAAI,CAAC6Z,oBAAoB,EAAE,CAAA;AAC/B,KAAA;AACA,IAAA,KAAK,CAAC9W,cAAc,CAAC/C,QAAQ,EAAEgD,GAAG,CAAC,CAAA;AACvC,GAAA;AACA;EACA,IAAIE,YAAYA,GAAG,EAAC;AACxB,CAAA;AACA+U,iBAAiB,CAAC7nB,MAAM,GAAG,mBAAmB,CAAA;AAAE+S,kBAAkB,CAACC,eAAe,CAAC6U,iBAAiB,EAAE,KAAK,EAAE,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;;ACjTvI;AACA;AACA;AACA;AACA;AACA;AACe,MAAMyC,uBAAuB,CAAC;EACzC,OAAOzsB,KAAK,GAAG,yBAAyB,CAAA;AACxCgE,EAAAA,WAAWA,CAAC;IAAEmoB,QAAQ;IAAE9U,MAAM;AAAEqV,IAAAA,KAAAA;AAAM,GAAC,EAAE;AACrCtkB,IAAAA,MAAM,CAACC,MAAM,CAAC,IAAI,EAAE;AAChB;AACZ;AACA;AACA;AACA;MACY8jB,QAAQ;AACR;AACZ;AACA;AACA;AACA;AACA;MACY9U,MAAM;AACN;AACZ;AACA;AACA;AACA;AACA;AACYqV,MAAAA,KAAAA;AACJ,KAAC,CAAC,CAAA;AACFtkB,IAAAA,MAAM,CAACukB,MAAM,CAAC,IAAI,CAAC,CAAA;AACvB,GAAA;AACJ,CAAA;AACAF,uBAAuB,CAACtqB,MAAM,GAAG,yBAAyB;;ACne,MAAMyqB,YAAY,SAASC,yBAAyB,CAACC,kBAAkB,CAACC,iBAAiB,CAACC,wBAAwB,CAAC,CAAC,CAAC,CAAC;AACjI;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;EACA,WAAWhtB,KAAKA,GAAG;AACf,IAAA,OAAO,cAAc,CAAA;AACzaAAaA,GAAG;IACvslB,MAAAA,kBAAkB,EAAGC,aAAa;AAClC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,oBAAoB,EAAGC,eAAe;AACtC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,eAAe,EAAGjrB,UAAU;AAC5B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYkrB,MAAAA,oBAAoB,EAAGC,eAAe;AACtC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,kBAAkB,EAAGC,aAAa;AAClC;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,yBAAyB,EAAGC,oBAAoB;AAChD;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,oBAAoB,EAAGC,eAAe;AACtC;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,eAAe,EAAG1mB,UAAU;AAC5B;AACZ;AACA;AACA;AACA;AACA;AACA;AACY2mB,MAAAA,oBAAoB,EAAGC,eAAe;AACtC;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,kBAAkB,EAAGC,aAAa;AAClC;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,aAAa,EAAG,IAAI;AACpB;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,4BAA4B,EAAG,6NAA6N;AAC5P;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,gBAAgB,EAAG,IAAI;MACvBxtB,oBAAoB,EAAG,EAAE;AACzBytB,MAAAA,QAAQ,EAAGC,oBAAAA;KACd,CAAA;AACL,GAAA;EACA,WAAW1jB,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACY2jB,MAAAA,SAAS,EAAG,IAAA;KACf,CAAA;AACL,GAAA;AACA;EACA,IAAIC,SAASA,GAAG;IACZ,OAAO,IAAI,CAACpjB,UAAU,CAAA;AAC1B,GAAA;AACA;AACA;EACA,IAAImjB,SAASA,GAAG;AACZ,IAAA,OAAO,IAAI,CAAC3tB,oBAAoB,CAAC6tB,UAAU,CAAA;AAC/C,GAAA;EACAC,eAAeA,CAACH,SAAS,EAAE;AACvB,IAAA,IAAI,CAAC3tB,oBAAoB,CAACiF,IAAI,GAAG0oB,SAAS,CAAA;AAC9C,GAAA;AACA;AACJ,CAAA;;AACA5B,YAAY,CAACzqB,MAAM,GAAG,cAAc;;ACp6BpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAegL,CAAAA,MAAM,IAAI,MAAMyhB,0BAA0B,UAAUzhB,MAAM,IAAIE,IAAI,EAAE;EAC/E,WAAWrN,KAAKA,GAAG;AACf,IAAA,OAAO,4BAA4B,CAAA;AACvC,GAAA;EACA,WAAW6K,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYqV,MAAAA,WAAW,EAAG,OAAO;AACrB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY2O,MAAAA,yBAAyB,EAAGhgB,uBAAuB;AACnD;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYigB,MAAAA,0BAA0B,EAAGrgB,wBAAAA;KAChC,CAAA;AACL,GAAA;AACA;AACAsgB,EAAAA,yBAAyBA,CAAC7O,WAAW,EAAE8O,cAAc,EAAE;IACnD,MAAM9qB,EAAE,GAAG,IAAI,CAAA;AACf,IAAA,IAAI,CAACA,EAAE,CAACmU,aAAa,EAAE;MACnBnU,EAAE,CAAC+qB,YAAY,EAAE,CAAA;AACrB,KAAA;AACA,IAAA,KAAK,CAACF,yBAAyB,CAAC7O,WAAW,EAAE8O,cAAc,CAAC,CAAA;AAChE,GAAA;AACA;EACAtN,cAAcA,CAAC7Q,MAAM,EAAE;AACnBA,IAAAA,MAAM,GAAG,KAAK,CAAC6Q,cAAc,CAAC7Q,MAAM,CAAC,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iJ,kBAAkB,CAAC,GAAG93B,SAAS,CAAC,CAAA;AAC1C,GAAA;AACA;AACJ,CAAA;;AACA8pB,iBAAiB,CAACiO,SAAS,EAAE,CAAA;AAC7BjO,iBAAiB,CAAC3tB,MAAM,GAAG,mBAAmB;;ACriC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM67B,mBAAmB,SAASlO,iBAAiB,CAAC;AAC/D;EACA,OAAO9vB,KAAK,GAAG,qBAAqB,CAAA;EACpC,OAAOC,IAAI,GAAG,qBAAqB,CAAA;AACnC,EAAA,OAAO4K,YAAY,GAAG;AAClB;AACR;AACA;AACA;AACQozB,IAAAA,WAAW,EAAG,IAAI;AAClB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACA5N,IAAAA,qBAAqB,EAAG,gDAAgD;AACxE;AACR;AACA;AACA;AACA;AACA;AACQsD,IAAAA,SAAS,EAAG,EAAE;AACdhD,IAAAA,cAAc,EAAG,KAAK;AACtB;AACR;AACA;AACA;AACQM,IAAAA,aAAa,EAAG,KAAK;AACrB;AACR;AACA;AACA;AACA;AACA;AACA;AACQS,IAAAA,WAAW,EAAG,IAAI;AAClB;AACR;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ASC,aAAa,CAACjjC,KAAK,CAC7DkjC,oBAAoB,EACpBpU,0BAA0B,EAC1BqU,yBACJ,CAAC,CAAC;AACE;EACA,OAAOjjC,KAAK,GAAG,kBAAkB,CAAA;EACjC,OAAOC,IAAI,GAAG,kBAAkB,CAAA;AAChC,EAAA,OAAO4K,YAAY,GAAI;AACnBslB,IAAAA,iBAAiB,EAAGvD,YAAY;AAChC;AACR;AACA;AACA;AACA;AACQsW,IAAAA,iBAAiB,EAAG,IAAI;AACxB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,oBAAoB,EAAG,KAAA;GAC1B,CAAA;EACD,OAAOC,cAAc,GAAG,IAAI,CAAA;AAC5B;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACI;AACA;AACJ;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACI;AACA;AACJ;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACI;AACA;AACJ;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACI;AACA;AACAC,EAAAA,eAAeA,GAAG;AACd;AACA;AAAA,GAAA;AAEJ;AACA;AACA;EACA,IAAI7U,SAASA,CAACA,SAAS,EAAE;AACrB,IAAA,IAAI,CAAC9tB,OAAO,CAAC8tB,SAAS,GAAGA,SAAS,CAAA;AACtC,GAAA;EACA,IAAIA,SAASA,GAAG;AACZ,IAAA,OAAO,IAAI,CAAC9tB,OAAO,CA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"}