@import '../../variables';

.b-gridbase {
    position : relative;

    // If not in a container...
    &.b-outer {
        height : 100%;
    }

    &.b-autoheight {
        height : auto;
        flex   : none;

        &.b-ie {
            display : block;
        }
    }

    // If we're not autoHeighting the grid, the scroller element must always be full height so that
    // mouse wheel events are received from below the row content.
    .b-grid-panel-body:not(.b-autoheight) {
        > .b-grid-body-container {
            // auto height does not work in edge if these styles are applied
            flex    : 1 1 0;
            contain : strict;

            > .b-grid-vertical-scroller {
                min-height : 100%;
            }
        }
    }

    &.b-grid-translate,
    &.b-grid-translate3d {
        .b-grid-row {
            transform-style : flat;
        }
    }

    // Sticky content must be visible outside of its container.
    &.b-enable-sticky {
        .b-sticky-cell,
        .b-grid-subgrid,
        .b-grid-vertical-scroller,
        .b-grid-row {
            overflow : visible !important;
        }
    }

    &.b-no-column-lines {
        // Rule needs to be this specific to override a rule for column lines coloring in scheduler
        .b-grid-row .b-grid-cell {
            border-inline-end-color : transparent;
        }
    }

    /*
     * This implements the fillLastColumn config. It causes the last leaf header, and the last cell in
     * each row to flex-grow to consume all available space when there are no configured flexed columns and rows are not
     * wider than their container.
     */
    &.b-fill-last-column {
        .b-grid-subgrid:not(.b-has-flex):not(.b-horizontal-overflow) .b-grid-cell:last-child,
        .b-grid-footers:not(.b-has-flex):not(.b-horizontal-overflow) .b-grid-footer:last-child,
        .b-grid-headers:not(.b-has-flex):not(.b-horizontal-overflow) .b-last-parent,
        .b-grid-headers:not(.b-has-flex):not(.b-horizontal-overflow) .b-last-leaf {
            flex-grow : 1;
        }
    }

    &:not(.b-masked) .b-grid-empty {
        min-height : 5em;

        .b-empty-text {
            display          : block;
            color            : $grid-header-text-color;
            background-color : $grid-background-color;
            padding          : 1em;
            position         : absolute;
            pointer-events   : none;
        }
    }

    &.b-grid-notextselection .b-grid-cell {
        @include user-select-none();
    }

    // No transition within cells on refresh
    &.b-notransition .b-grid-cell * {
        transition : none !important;
    }

    &.b-disabled {
        opacity : $grid-disabled-opacity;
    }
}

.b-grid-panel-body {
    // To position virtual scroller correctly, https://github.com/bryntum/support/issues/4750
    position                    : relative;
    flex                        : 1;
    display                     : flex;
    flex-direction              : column;
    overflow                    : hidden;

    background-color            : $grid-background-color;
    -webkit-tap-highlight-color : rgba(0, 0, 0, 0);
}

// Prevent transitions when datasets are refreshed (sort, load, filter etc). Also allow our own widgets to use
// transitions, such as a widget column with a SlideToggle.
.b-gridbase:not(.b-animating) .b-grid-row:not(.b-grid-row-updating) .b-grid-cell:not(.b-widget-cell.b-focused) * {
    transition : none;
}

.b-gridbase.b-autoheight .b-grid-empty .b-grid-vertical-scroller {
    min-height: 100%;
}

.b-grid-body-container {
    position : relative;

    .b-empty-text {
        display  : none
    }

    &:focus {
        outline : none;

        .b-grid-row.b-selected {
            background-color : $grid-focus-row-selected-background-color;
        }
    }
}

// Default to disabling scroll while playing demos, otherwise it is to easy for users to interfere
.b-playing-demo .b-grid-body-container {
    overflow : hidden !important;
}

.b-grid-vertical-scroller {
    position    : absolute;
    display     : flex;
    flex-flow   : row nowrap;
    overflow    : hidden;
    width       : 100%;
    align-items : stretch;
}

.b-grid-row-container {
    display   : inline-block;
    min-width : 100%;
}

//region Virtual scrollbars

.b-virtual-scrollers {
    display        : flex;
    flex-direction : row;
    contain        : paint style layout;

    .b-firefox & {
        // `contain : style;` is not supported by Firefox
        contain : paint layout;
    }

    // Horizontal scrollbar should remain reachable in FireFox on Windows
    .b-overlay-scrollbar.b-firefox.b-windows & {
        pointer-events: auto;

        .b-virtual-scroller {
            pointer-events: auto;
        }
    }

    // If it's an overlaying scrollbar, make it absolutely positioned, docked to
    // the bottom of the grid.
    //
    // If it's an overlaying scrollbar, it should not interact with pointers.
    // The "wheel" event will go directly to the scrollable content, and mouseovers
    // should go through to the grid content.
    //
    // We need to force a height if the platform is using overlaying scrollbars
    // and therefore will not "stretch" the overflowing element with a permanent scrollbar.
    .b-overlay-scrollbar & {
        position       : absolute;
        left           : 0;
        right          : 0;
        bottom         : 0;
        pointer-events : none;

        .b-virtual-scroller {
            height         : 16px;
            // Opacity needed to not show scrollbar in Chrome, it has a "bug" showing them always when pointer-events
            // are off
            opacity        : 0;
            pointer-events : none;
        }
    }

    .b-virtual-scroller {
        overflow-x : scroll;
        overflow-y : hidden;
    }

    .b-virtual-width {
        height : 1px;
    }
}

// Overlaid scrollbars are interactive when scrolling
.b-overlay-scrollbar {
    .b-virtual-scroller:hover,
    .b-virtual-scroller.b-show-virtual-scroller {
        pointer-events : all;
        opacity        : 1;
        transition     : opacity .5s;
    }
}

/* using tag name to increase specificity, otherwise rule gets overridden by salesforce styles */
.b-grid-footer-container,
header.b-grid-header-container {
    display        : flex;
    flex-direction : row;
}

.b-grid-header-container {
    border-bottom : $grid-header-container-border-bottom-width solid $grid-header-border-color;
}

.b-grid-footer-scroller,
.b-grid-header-scroller {
    overflow : hidden;
    position : relative;
    display  : flex;
}

.b-grid-footers,
.b-grid-headers {
    z-index : 2;
    contain : paint style layout;
    flex    : 1 1 auto;

    .b-firefox & {
        // `contain : style;` is not supported by Firefox
        contain : paint layout;
    }
}

//endregion
