@use "sass:math";
@import '../../variables';

.b-grid-header-container {
    background-color : $grid-header-background-color;
    z-index          : $grid-header-zindex;
    box-shadow       : $grid-header-box-shadow;

    // Clipped out of visibility, but still present foy A11Y purposes when hideHeaders is used.
    &.b-hidden {
        position  : absolute;

        // Make zero height
        clip-path : inset(0 0 100% 0);
        contain   : strict;
    }
}

.b-grid-headers {
    display     : inline-flex;
    flex-flow   : row nowrap;
    align-items : stretch;
    // this messes header height up when rendering a new grid from scratch for some reason
    //    height      : 100%;
    //    flex        : 1;
    // In case page uses its own line-height, it would break our rendering potentially
    line-height : initial;
    // If position is specified absolutely positioned elements inside the header in Firefox pick wrong parent as offsetParent
    position    : relative;
}

.b-grid-header-align-right,
.b-grid-header-align-end {
    > .b-grid-header-text > .b-grid-header-text-content {
        text-align : end;
    }
}

.b-grid-header-align-center > .b-grid-header-text > .b-grid-header-text-content {
    text-align : center;
}

// highlight header on hover/focus, but only if not dragging another header
.b-gridbase:not(.b-column-resizing):not(.b-row-reordering) .b-grid-header-container:not(.b-dragging-header) {
    .b-depth-0 {
        &:focus, &.b-check-header-with-checkbox:focus-within {
            background-color : $grid-header-focus-background-color;
        }

        &:hover, &.b-hover {
            background-color : $grid-header-hover-background-color;
        }
    }
}

// Resize handle only displayed if the grid has the column resizer
// and the column itself is resizable.
.b-gridbase.b-columnresize .b-grid-header-resizable {
    // Allow resize handle to overlap the boundary unless we're the last leaf.
    // Last leaf must  not have any overflow because that would cause extra scrollWidth.
    &:not(.b-last-leaf) {
        overflow : visible;
    }

    .b-grid-header-resize-handle {
        position         : absolute;
        top              : 0;
        right            : math.div(-$grid-header-resizer-handle-width, 2);
        bottom           : 0;
        width            : $grid-header-resizer-handle-width;
        background-color : transparent;
        z-index          : 3;
        cursor           : col-resize;
        display          : block;

    }
}

.b-gridbase.b-columnresize.b-rtl .b-grid-header-resizable .b-grid-header-resize-handle {
    left  : math.div(-$grid-header-resizer-handle-width, 2);
    right : auto;
}


// Make handle a bit fatter if touch supported
.b-touch-events {
    .b-gridbase.b-columnresize .b-grid-header-resizable .b-grid-header-resize-handle {
        right : math.div(-$grid-header-touch-resizer-handle-width, 2);
        width : $grid-header-touch-resizer-handle-width;

        .b-rtl & {
            left  : math.div(-$grid-header-touch-resizer-handle-width, 2);
            right : auto;
        }
    }
}

.b-fill-last-column {
    .b-grid-headers {
        .b-last-parent,
        .b-last-leaf {
            border-inline-end-color : transparent;

            > .b-grid-header-text {
                border-inline-end-color : transparent;
            }
        }
    }
}

// Need some rules to be global to be used in drag proxies
.b-grid-header-text {
    @include user-select-none();
    padding     : top($grid-header-padding) 0 bottom($grid-header-padding) 0;
    white-space : nowrap;
    position    : relative;
    font-weight : $grid-header-font-weight;
    display     : flex;
    align-items : center;
    overflow    : hidden;

    > .b-grid-header-text-content {
        overflow      : hidden;
        text-overflow : ellipsis;
        flex          : 1 1 0;
        width         : 0; // Needed for Safari to shrink column correctly
        font-size     : $grid-header-font-size;

        // Column icon done like this!
        > i {
            margin-inline-end : .5em;
        }
    }
}

// When potentially containing some other widget, for example
// a filter field, no top border, and arrange them in a column
.b-grid-header-children {
    display        : flex;
    flex-direction : column;

    // Allow the column flexbox to width the children
    > * {
        width : inherit;
    }
}

.b-grid-header {
    @include user-select-none();
    display           : flex;
    flex-direction    : column;
    align-items       : stretch;
    justify-content   : center;
    flex-shrink       : 0;
    position          : relative;
    overflow          : hidden;
    color             : $grid-header-text-color;
    outline           : none;
    border-inline-end : 1px solid $grid-header-border-color;
    text-transform    : $grid-header-text-transform;

    &:not(.b-depth-0) {
        // Allow resize handle of the last child to overlap the boundary
        overflow : visible;
    }

    &.b-depth-0 {
        padding-inline : left($grid-header-padding) right($grid-header-padding);
        width          : 0; // flex trick to get small widths correct

        .b-grid-header-text {
            border-bottom  : none;
            transition     : background-color 0.2s;
            flex-direction : row;
        }
    }

    &.b-sortable {
        cursor : pointer;
    }

    &.b-grid-header-parent {
        border-inline-end : none;
        flex-basis        : auto;
        padding-inline    : 0;

        > .b-grid-header-text {
            padding-inline    : left($grid-header-padding) right($grid-header-padding);
            border-inline-end : 1px solid $grid-header-border-color;
            flex              : 1 1 auto;
        }
    }

    // By default, handle is display:none
    // Has no layout, zero perf implications.
    .b-grid-header-resize-handle {
        display : none;
    }
}


// When not a leaf, there's a top border
// and the child columns are arranged in a row.
.b-grid-header-parent {
    > .b-grid-header-children {
        border-top : 1px solid $grid-header-border-color;
        flex-flow  : row nowrap;
        flex       : 1 1 auto;
    }
}

// To ensure correct height for all group column headers
.b-grid-header {
    .b-button[data-ref="collapseExpand"] {
        min-width  : 2em;
        min-height : 2em;
        padding    : 0;
        position   : absolute;
        right      : 0;

        &:hover {
            background-color : transparent;
        }
    }
}
