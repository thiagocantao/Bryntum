@mixin eventrendering(
    $widget-name                                : 'schedulerbase',
    $entity-name                                : 'event',
    $prefix                                     : if($widget-name == 'schedulerbase', 'sch', 'gantt'),
    $entity-zindex                              : $event-zindex,
    $entity-font-weight                         : $event-font-weight,
    $entity-font-size                           : $event-font-size,
    $entity-default-transition                  : $event-default-transition,
    $interacting-entity-zindex                  : $interacting-event-zindex,

    $entity-bar-padding-left                    : 0,

    $entity-selected-zindex                     : $selected-event-zindex,
    $entity-selected-font-weight                : $event-selected-font-weight,

    $entity-milestone-color                     : $event-milestone-color,
    $entity-milestone-zindex                    : $milestone-zindex,

    $entity-labels-color                        : $event-labels-color,
    $selected-entity-labels-color               : $selected-event-labels-color
) {
    $ignore-drag-resize : 'b-#{$widget-name}:not(.b-#{$widget-name}-resizing-#{$entity-name}-percent):not(.b-resizing-event):not(.b-dragging-event)' !default;

    .b-#{$widget-name} {
        > .b-editor {
            z-index : 5;
        }
    }

    // The canvas gets an inline font-size for the purpose of sizing
    // milestone icons to occupy the configured rowHeight.
    // So non milestone icon elements need to have the font-size applied
    .b-#{$prefix}-#{$entity-name}.b-milestone label,
    .b-#{$prefix}-#{$entity-name} .b-#{$prefix}-#{$entity-name}-content,
    .b-#{$prefix}-#{$entity-name}-wrap:not(.b-milestone-wrap) .b-#{$prefix}-#{$entity-name} {
        font-size : $entity-font-size;
    }

    // The wrap contains the entity bar.
    // Positioning and focusing is done on the wrap, visual style on .b-#{$prefix}-#{$entity}
    .b-#{$prefix}-#{$entity-name}-wrap {
        position        : absolute;
        z-index         : $entity-zindex;
        //flex-direction  : column;
        justify-content : center;
        align-items     : center;
        pointer-events  : all; // Because the foreground canvas is pointer-events:none
        transition      : $entity-default-transition; // always use transition, for hover effects etc

        // Blink-only right now. Layouts triggered inside the event won't cause document layout.
        // Cannot use strict because labels must appear outside of the wrap
        contain         : layout style;

        // Make read-only events a bit paler using opacity
        &.b-readonly {
            opacity : 0.8;

            // With even paler contents
            .b-sch-event-content {
                opacity : 0.5;
            }
        }

        // Animate events if the special b-animating CSS class exists,
        .b-animating:not(.b-eventbuffer-transition) &:not(.b-dragging, .b-#{$prefix}-#{$entity-name}-wrap-resizing, .b-reusing-own) {
            transition : $entity-default-transition, left .2s, top .2s, transform .2s, width .2s, height .2s, font-size .2s;
        }

        // No transitions at all when toggling in a tree
        .b-toggling-node & {
            transition : none;
        }

        &:focus {
            // Need important to override milestone z-index below.
            // Active element of whatever type is always on top.
            z-index : $entity-zindex + 100 !important;
            outline : none;
        }

        // No normal event animations should run during scrolling
        .b-scrolling &:not(.b-aborting) {
            transition : none !important;

            .b-#{$prefix}-#{$entity-name} {
                transition : none !important;
            }
        }

        // No mouse interactions during *vertical* scrolling.
        // During horizontal scrolling we still need events to be present for the mouse
        // so that hovering still applies when scrolling left/right and the EventTooltip stays visible.
        .b-grid-body-container.b-scrolling & {
            pointer-events : none;
        }
    }

    .b-#{$prefix}-#{$entity-name}-wrap.b-milestone-wrap {
        // Must be centered on the time point
        margin-inline-start : -0.5em;

        z-index             : $entity-milestone-zindex;

        // Milestone event bar must overlay the milestone diamond.
        // It is 1em*1em to allow it to receive mouse events.
        .b-#{$prefix}-#{$entity-name} {
            overflow         : visible;
            box-shadow       : none;
            background-color : transparent;
            width            : 1em;

            &:not(.b-#{$prefix}-#{$entity-name}-withicon) {
                .b-#{$prefix}-#{$entity-name}-content {
                    transition : background-color .2s, border .2s;
                }
            }

            &.b-#{$prefix}-#{$entity-name}-withicon {
                justify-content : center;

                .b-#{$prefix}-#{$entity-name}-content {
                    font-size        : inherit;
                    justify-content  : center;
                    background-color : transparent;
                }

                i {
                    margin-inline-end : 0;
                    line-height       : 1em;
                }
            }

            label {
                position : absolute;
                left     : 110%; // RTL OK
            }
        }

        // Event content in milestone, to align label and diamond
        .b-#{$prefix}-#{$entity-name}-content {
            display     : flex;
            align-items : center;
        }

        .b-fa, .b-icon {
            margin-inline-end : 1em;
            color             : $entity-milestone-color;
            font-size         : inherit;
        }

        // Show a diamond by default unless implementer has provided an icon
        .b-#{$prefix}-#{$entity-name}:not(.b-#{$prefix}-#{$entity-name}-withicon) {
            // Make milestone diamond smaller but still centred if there are top or bottom labels
            .b-labels-topbottom & {
                font-size : 40%;
            }

            .b-#{$prefix}-#{$entity-name}-content {
                font-size : inherit;
            }

            .b-#{$prefix}-#{$entity-name}-content::before {
                position         : absolute;
                left             : calc((1em - 0.707107em) / 2);
                content          : ' ';

                // TODO RTL

                // The magic number here is the ratio of the hypotenuse of a
                // squared triangle to the equal length of the other two sides.
                // eg, a 1 by 1 square has a ratio of Math.sqrt(2)/2 which is 0.707107
                // So to get a diamond of height 40px, we create a square of
                // height and width 0.707107em with font-size:40px
                height           : 0.707107em;
                width            : 0.707107em;
                transform-origin : 50% 50%;
                transform        : rotate(45deg);
                background-color : inherit;
            }
        }

        // Icon milestones, focus is on the event element
        .b-using-keyboard &.b-active .b-#{$prefix}-#{$entity-name}.b-#{$prefix}-#{$entity-name}-withicon {
            outline        : $grid-cell-focused-outline-width $grid-cell-focused-outline-style $grid-cell-focused-outline-color;
            outline-offset : 3px;
        }

        // Non-icon milestones, focus is on the diamond
        .b-using-keyboard &.b-active .b-#{$prefix}-#{$entity-name}:not(.b-#{$prefix}-#{$entity-name}-withicon) .b-#{$prefix}-#{$entity-name}-content:before {
            outline        : $grid-cell-focused-outline-width $grid-cell-focused-outline-style $grid-cell-focused-outline-color;
            outline-offset : 3px;
        }

        // The measuring element for milestones
        &.b-measure {
            height     : 1em;
            position   : fixed;
            top        : -10000px;
            left       : -10000px;
            visibility : hidden;

            label {
                // Needed to correct for fallback font.
                font-weight : 400;
            }
        }

        // When the Scheduler/Gantt is using layed out milestones
        .b-#{$widget-name}.b-#{$prefix}-layout-milestones & {
            margin         : 0;
            min-width      : 0;
            flex-direction : row;

            // Focus ring goes on the outermost element
            .b-using-keyboard &.b-active {
                outline        : $grid-cell-focused-outline-width $grid-cell-focused-outline-style $grid-cell-focused-outline-color;
                outline-offset : 3px;
            }

            &.b-active {
                // Not the first diamond or event element
                .b-#{$prefix}-#{$entity-name}.b-milestone,
                .b-#{$prefix}-#{$entity-name}.b-milestone:before {
                    outline : none;
                }
            }

            .b-#{$prefix}-#{$entity-name}.b-milestone {
                // Needs to inherit the rowHeight font size
                font-size       : inherit;

                left            : 0.5em;
                width           : calc(100% - 1em); // Diamonds stick out on each side
                min-width       : 0;
                padding         : 0;
                align-self      : stretch;
                display         : flex;
                align-items     : center;
                justify-content : center;
                z-index         : 1;

                .b-#{$prefix}-#{$entity-name}-content {
                    background-color : transparent;
                    font-size        : $entity-font-size;
                    justify-content  : center;

                    // Hide default milestone diamond
                    &::before {
                        content : none;
                    }
                }

                &::before,
                &::after {
                    // Needs to inherit the background colour
                    background : inherit;

                    position   : absolute;
                    content    : ' ';
                    height     : 0.707107em;
                    width      : 0.707107em;
                    //border     : inherit;
                    z-index    : 0;
                }

                // Reposition milestone diamond
                &::before {
                    top              : 50%;
                    left             : 0;
                    transform-origin : 50% 50%;
                    transform        : translate(-50%, -50%) rotate(45deg);
                }

                // Need another diamond on right side which rotates anticlockwise
                // from its 100%, 0 point which is at right:0. This makes it
                // extend rightwards
                &::after {
                    //top              : 0;
                    right            : 0;
                    transform        : rotate(-45deg);
                    transform-origin : 100% 0;
                }
            }

            // The measuring element when we're using layout-milestones
            &.b-measure .b-#{$prefix}-#{$entity-name}.b-milestone {
                width : calc(100% + 1em);
            }
        }
    }

    .b-#{$prefix}-#{$entity-name} {
        @include user-select-none();
        display              : flex;
        align-items          : center;
        justify-content      : flex-start;
        cursor               : pointer;
        overflow             : hidden;
        white-space          : nowrap;
        width                : calc(100% - 1px);
        text-align           : left;
        padding-inline-start : $entity-bar-padding-left;
        min-width            : 5px;
        min-height           : 5px;
        transition           : $entity-default-transition; // always use transition, for hover effects etc

        // No transitions at all when toggling in a tree
        .b-toggling-node & {
            transition : none;
        }

        // To be able to position terminals absolutely
        position             : relative;

        label {
            color : $entity-labels-color;
        }

        &:not(.b-milestone) .b-fa,
        &:not(.b-milestone) .b-icon {
            margin-inline-end : $event-bar-content-left-margin;
            line-height       : inherit;
        }

        &:before {
            font-family : $icon-font;
            font-weight : $icon-font-weight;
        }

        &.b-#{$prefix}-event-resizing,
        &:hover {
            z-index : $entity-selected-zindex;
        }

        &.b-#{$prefix}-#{$entity-name}-selected,
        &.b-#{$prefix}-#{$entity-name}-selected * {
            font-weight : $entity-selected-font-weight;
            z-index     : $entity-selected-zindex;
        }

        // another instance of this event was selected, when using multi assign
        &.b-#{$prefix}-#{$entity-name}-assign-selected {
            animation-name            : instance-selected;
            animation-duration        : .2s;
            animation-iteration-count : 3;
            animation-timing-function : ease-in-out;
        }

        &.b-milestone {
            transition : background 0s;
        }
    }

    // Non-milestone, the active outline goes on the entity bar
    .b-#{$prefix}-#{$entity-name}-wrap:not(.b-milestone-wrap) {
        min-width  : 6px;
        min-height : 6px;

        .b-using-keyboard &.b-active {
            .b-#{$prefix}-#{$entity-name} {
                outline        : $grid-cell-focused-outline-width $grid-cell-focused-outline-style $grid-cell-focused-outline-color;
                outline-offset : 3px;
            }
        }

        .b-#{$prefix}-#{$entity-name} {
            // Other content is centered in the wrapper, but the event bar should be left aligned
            align-self : flex-start;
        }

        //.b-#{$prefix}-event-resizing &,
        //.b-dragproxy & {
        //    .b-#{$prefix}-#{$entity-name} {
        //        background-color : lighten($entity-bar-background-color, 20);
        //    }
        //}
    }

    .b-#{$prefix}-#{$entity-name}-selected {
        label {
            color : $selected-entity-labels-color;
        }
    }

    @keyframes instance-selected {
        0% {
            top : -2px;
        }

        50% {
            top : 2px;
        }

        100% {
            top : 0;
        }
    }

    //region Initial animation

    .b-initial-fade-in {
        // For the other initial animations it is enough with live drawing of dependencies,
        // but for fading dependencies also need to fade in for it to look good
        .b-sch-dependency,
        .b-sch-event-wrap {
            opacity             : 0;
            animation-name      : initial-fade-in;
            animation-duration  : .5s;
            animation-fill-mode : forwards;
        }
    }

    @keyframes initial-fade-in {
        0% {
            opacity : 0;
        }
        100% {
            opacity : 1;
        }
    }

    .b-initial-zoom-in .b-sch-event-wrap .b-#{$prefix}-#{$entity-name} {
        animation-name            : initial-zoom-in;
        animation-duration        : .4s;
        animation-timing-function : ease-in;
    }

    @keyframes initial-zoom-in {
        0% {
            transform : scale(0.01);
        }
        100% {
            transform : scale(1);
        }
    }

    .b-initial-slide-from-left .b-sch-event-wrap {
        transform           : translateX(-100vw);
        animation-name      : initial-slide-from-left;
        animation-duration  : .7s;
        animation-fill-mode : forwards;
    }

    @keyframes initial-slide-from-left {
        100% {
            transform : translateX(0);
        }
    }

    .b-initial-slide-from-top .b-sch-event-wrap {
        transform           : translateY(-100vh);
        animation-name      : initial-slide-from-top;
        animation-duration  : .7s;
        animation-fill-mode : forwards;
    }

    @keyframes initial-slide-from-top {
        100% {
            transform : translateY(0);
        }
    }
    //endregion
}


